
enclave.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000004000 <.plt>:
    4000:	ff 35 d2 5f 03 00    	push   0x35fd2(%rip)        # 39fd8 <_GLOBAL_OFFSET_TABLE_+0x8>
    4006:	ff 25 d4 5f 03 00    	jmp    *0x35fd4(%rip)        # 39fe0 <_GLOBAL_OFFSET_TABLE_+0x10>
    400c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000004010 <_Z9pcl_entryPvS_@plt>:
    4010:	ff 25 d2 5f 03 00    	jmp    *0x35fd2(%rip)        # 39fe8 <_Z9pcl_entryPvS_>
    4016:	66 90                	xchg   %ax,%ax

0000000000004018 <ippcpSetCpuFeatures@plt>:
    4018:	ff 25 d2 5f 03 00    	jmp    *0x35fd2(%rip)        # 39ff0 <ippcpSetCpuFeatures>
    401e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004020 <sgx_ecall_sgx_cpuid>:
    4020:	f3 0f 1e fa          	endbr64 
    4024:	55                   	push   %rbp
    4025:	48 89 e5             	mov    %rsp,%rbp
    4028:	48 83 ec 50          	sub    $0x50,%rsp
    402c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    4030:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4035:	74 15                	je     404c <sgx_ecall_sgx_cpuid+0x2c>
    4037:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    403b:	be 10 00 00 00       	mov    $0x10,%esi
    4040:	48 89 c7             	mov    %rax,%rdi
    4043:	e8 69 b7 00 00       	call   f7b1 <sgx_is_outside_enclave>
    4048:	85 c0                	test   %eax,%eax
    404a:	75 0a                	jne    4056 <sgx_ecall_sgx_cpuid+0x36>
    404c:	b8 02 00 00 00       	mov    $0x2,%eax
    4051:	e9 29 01 00 00       	jmp    417f <sgx_ecall_sgx_cpuid+0x15f>
    4056:	0f ae e8             	lfence 
    4059:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    405d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4061:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4065:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4069:	b9 10 00 00 00       	mov    $0x10,%ecx
    406e:	be 10 00 00 00       	mov    $0x10,%esi
    4073:	48 89 c7             	mov    %rax,%rdi
    4076:	e8 9d fa 01 00       	call   23b18 <memcpy_s>
    407b:	85 c0                	test   %eax,%eax
    407d:	74 0a                	je     4089 <sgx_ecall_sgx_cpuid+0x69>
    407f:	b8 01 00 00 00       	mov    $0x1,%eax
    4084:	e9 f6 00 00 00       	jmp    417f <sgx_ecall_sgx_cpuid+0x15f>
    4089:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    4090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4094:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4098:	48 c7 45 e8 10 00 00 	movq   $0x10,-0x18(%rbp)
    409f:	00 
    40a0:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    40a7:	00 
    40a8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    40ad:	74 21                	je     40d0 <sgx_ecall_sgx_cpuid+0xb0>
    40af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    40b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    40b7:	48 89 d6             	mov    %rdx,%rsi
    40ba:	48 89 c7             	mov    %rax,%rdi
    40bd:	e8 ef b6 00 00       	call   f7b1 <sgx_is_outside_enclave>
    40c2:	85 c0                	test   %eax,%eax
    40c4:	75 0a                	jne    40d0 <sgx_ecall_sgx_cpuid+0xb0>
    40c6:	b8 02 00 00 00       	mov    $0x2,%eax
    40cb:	e9 af 00 00 00       	jmp    417f <sgx_ecall_sgx_cpuid+0x15f>
    40d0:	0f ae e8             	lfence 
    40d3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    40d8:	74 51                	je     412b <sgx_ecall_sgx_cpuid+0x10b>
    40da:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    40df:	74 4a                	je     412b <sgx_ecall_sgx_cpuid+0x10b>
    40e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40e5:	83 e0 03             	and    $0x3,%eax
    40e8:	48 85 c0             	test   %rax,%rax
    40eb:	74 09                	je     40f6 <sgx_ecall_sgx_cpuid+0xd6>
    40ed:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    40f4:	eb 73                	jmp    4169 <sgx_ecall_sgx_cpuid+0x149>
    40f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40fa:	48 89 c7             	mov    %rax,%rdi
    40fd:	e8 25 b9 01 00       	call   1fa27 <dlmalloc>
    4102:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4106:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    410b:	75 09                	jne    4116 <sgx_ecall_sgx_cpuid+0xf6>
    410d:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    4114:	eb 53                	jmp    4169 <sgx_ecall_sgx_cpuid+0x149>
    4116:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    411a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    411e:	be 00 00 00 00       	mov    $0x0,%esi
    4123:	48 89 c7             	mov    %rax,%rdi
    4126:	e8 58 f5 01 00       	call   23683 <memset>
    412b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    412e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4132:	89 d6                	mov    %edx,%esi
    4134:	48 89 c7             	mov    %rax,%rdi
    4137:	e8 8a 04 00 00       	call   45c6 <ecall_sgx_cpuid>
    413c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4141:	74 25                	je     4168 <sgx_ecall_sgx_cpuid+0x148>
    4143:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4147:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    414b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    414f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4153:	48 89 c7             	mov    %rax,%rdi
    4156:	e8 ad fa 01 00       	call   23c08 <memcpy_verw_s>
    415b:	85 c0                	test   %eax,%eax
    415d:	74 09                	je     4168 <sgx_ecall_sgx_cpuid+0x148>
    415f:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    4166:	eb 01                	jmp    4169 <sgx_ecall_sgx_cpuid+0x149>
    4168:	90                   	nop
    4169:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    416e:	74 0c                	je     417c <sgx_ecall_sgx_cpuid+0x15c>
    4170:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4174:	48 89 c7             	mov    %rax,%rdi
    4177:	e8 a6 c3 01 00       	call   20522 <dlfree>
    417c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    417f:	c9                   	leave  
    4180:	c3                   	ret    

0000000000004181 <sgx_fibnacci>:
    4181:	f3 0f 1e fa          	endbr64 
    4185:	55                   	push   %rbp
    4186:	48 89 e5             	mov    %rsp,%rbp
    4189:	48 83 ec 20          	sub    $0x20,%rsp
    418d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4191:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4196:	74 15                	je     41ad <sgx_fibnacci+0x2c>
    4198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    419c:	be 04 00 00 00       	mov    $0x4,%esi
    41a1:	48 89 c7             	mov    %rax,%rdi
    41a4:	e8 08 b6 00 00       	call   f7b1 <sgx_is_outside_enclave>
    41a9:	85 c0                	test   %eax,%eax
    41ab:	75 07                	jne    41b4 <sgx_fibnacci+0x33>
    41ad:	b8 02 00 00 00       	mov    $0x2,%eax
    41b2:	eb 44                	jmp    41f8 <sgx_fibnacci+0x77>
    41b4:	0f ae e8             	lfence 
    41b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    41bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    41c3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    41c7:	b9 04 00 00 00       	mov    $0x4,%ecx
    41cc:	be 04 00 00 00       	mov    $0x4,%esi
    41d1:	48 89 c7             	mov    %rax,%rdi
    41d4:	e8 3f f9 01 00       	call   23b18 <memcpy_s>
    41d9:	85 c0                	test   %eax,%eax
    41db:	74 07                	je     41e4 <sgx_fibnacci+0x63>
    41dd:	b8 01 00 00 00       	mov    $0x1,%eax
    41e2:	eb 14                	jmp    41f8 <sgx_fibnacci+0x77>
    41e4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    41eb:	8b 45 f0             	mov    -0x10(%rbp),%eax
    41ee:	89 c7                	mov    %eax,%edi
    41f0:	e8 6b 04 00 00       	call   4660 <fibnacci>
    41f5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    41f8:	c9                   	leave  
    41f9:	c3                   	ret    

00000000000041fa <sgx_populate>:
    41fa:	f3 0f 1e fa          	endbr64 
    41fe:	55                   	push   %rbp
    41ff:	48 89 e5             	mov    %rsp,%rbp
    4202:	48 83 ec 20          	sub    $0x20,%rsp
    4206:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    420a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4211:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4216:	74 07                	je     421f <sgx_populate+0x25>
    4218:	b8 02 00 00 00       	mov    $0x2,%eax
    421d:	eb 08                	jmp    4227 <sgx_populate+0x2d>
    421f:	e8 cc 03 00 00       	call   45f0 <populate>
    4224:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4227:	c9                   	leave  
    4228:	c3                   	ret    

0000000000004229 <sgx_call_aes>:
    4229:	f3 0f 1e fa          	endbr64 
    422d:	55                   	push   %rbp
    422e:	48 89 e5             	mov    %rsp,%rbp
    4231:	48 83 ec 20          	sub    $0x20,%rsp
    4235:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4239:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4240:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4245:	74 07                	je     424e <sgx_call_aes+0x25>
    4247:	b8 02 00 00 00       	mov    $0x2,%eax
    424c:	eb 08                	jmp    4256 <sgx_call_aes+0x2d>
    424e:	e8 95 01 00 00       	call   43e8 <call_aes>
    4253:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4256:	c9                   	leave  
    4257:	c3                   	ret    

0000000000004258 <ocall_print_string>:
    4258:	f3 0f 1e fa          	endbr64 
    425c:	55                   	push   %rbp
    425d:	48 89 e5             	mov    %rsp,%rbp
    4260:	48 83 ec 40          	sub    $0x40,%rsp
    4264:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4268:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    426f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4274:	74 12                	je     4288 <ocall_print_string+0x30>
    4276:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    427a:	48 89 c7             	mov    %rax,%rdi
    427d:	e8 57 f5 01 00       	call   237d9 <strlen>
    4282:	48 83 c0 01          	add    $0x1,%rax
    4286:	eb 05                	jmp    428d <ocall_print_string+0x35>
    4288:	b8 00 00 00 00       	mov    $0x0,%eax
    428d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4291:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    4298:	00 
    4299:	48 c7 45 f8 08 00 00 	movq   $0x8,-0x8(%rbp)
    42a0:	00 
    42a1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    42a8:	00 
    42a9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    42ae:	74 21                	je     42d1 <ocall_print_string+0x79>
    42b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42b8:	48 89 d6             	mov    %rdx,%rsi
    42bb:	48 89 c7             	mov    %rax,%rdi
    42be:	e8 57 b4 00 00       	call   f71a <sgx_is_within_enclave>
    42c3:	85 c0                	test   %eax,%eax
    42c5:	75 0a                	jne    42d1 <ocall_print_string+0x79>
    42c7:	b8 02 00 00 00       	mov    $0x2,%eax
    42cc:	e9 15 01 00 00       	jmp    43e6 <ocall_print_string+0x18e>
    42d1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    42d6:	74 06                	je     42de <ocall_print_string+0x86>
    42d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42dc:	eb 05                	jmp    42e3 <ocall_print_string+0x8b>
    42de:	b8 00 00 00 00       	mov    $0x0,%eax
    42e3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    42e7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    42ec:	74 06                	je     42f4 <ocall_print_string+0x9c>
    42ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42f2:	eb 05                	jmp    42f9 <ocall_print_string+0xa1>
    42f4:	b8 00 00 00 00       	mov    $0x0,%eax
    42f9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    42fd:	73 0a                	jae    4309 <ocall_print_string+0xb1>
    42ff:	b8 02 00 00 00       	mov    $0x2,%eax
    4304:	e9 dd 00 00 00       	jmp    43e6 <ocall_print_string+0x18e>
    4309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    430d:	48 89 c7             	mov    %rax,%rdi
    4310:	e8 33 b5 00 00       	call   f848 <sgx_ocalloc>
    4315:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4319:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    431d:	48 85 c0             	test   %rax,%rax
    4320:	75 0f                	jne    4331 <ocall_print_string+0xd9>
    4322:	e8 36 b6 00 00       	call   f95d <sgx_ocfree>
    4327:	b8 01 00 00 00       	mov    $0x1,%eax
    432c:	e9 b5 00 00 00       	jmp    43e6 <ocall_print_string+0x18e>
    4331:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4335:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4339:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    433d:	48 83 c0 08          	add    $0x8,%rax
    4341:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4345:	48 83 6d f8 08       	subq   $0x8,-0x8(%rbp)
    434a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    434f:	74 6e                	je     43bf <ocall_print_string+0x167>
    4351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4355:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4359:	b9 08 00 00 00       	mov    $0x8,%ecx
    435e:	be 08 00 00 00       	mov    $0x8,%esi
    4363:	48 89 c7             	mov    %rax,%rdi
    4366:	e8 9d f8 01 00       	call   23c08 <memcpy_verw_s>
    436b:	85 c0                	test   %eax,%eax
    436d:	74 0c                	je     437b <ocall_print_string+0x123>
    436f:	e8 e9 b5 00 00       	call   f95d <sgx_ocfree>
    4374:	b8 01 00 00 00       	mov    $0x1,%eax
    4379:	eb 6b                	jmp    43e6 <ocall_print_string+0x18e>
    437b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    437f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4383:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4387:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    438b:	48 89 c7             	mov    %rax,%rdi
    438e:	e8 75 f8 01 00       	call   23c08 <memcpy_verw_s>
    4393:	85 c0                	test   %eax,%eax
    4395:	74 0c                	je     43a3 <ocall_print_string+0x14b>
    4397:	e8 c1 b5 00 00       	call   f95d <sgx_ocfree>
    439c:	b8 01 00 00 00       	mov    $0x1,%eax
    43a1:	eb 43                	jmp    43e6 <ocall_print_string+0x18e>
    43a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43a7:	48 89 c2             	mov    %rax,%rdx
    43aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    43ae:	48 01 d0             	add    %rdx,%rax
    43b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    43b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    43b9:	48 29 45 f8          	sub    %rax,-0x8(%rbp)
    43bd:	eb 0b                	jmp    43ca <ocall_print_string+0x172>
    43bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43c3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    43ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43ce:	48 89 c6             	mov    %rax,%rsi
    43d1:	bf 00 00 00 00       	mov    $0x0,%edi
    43d6:	e8 74 d0 00 00       	call   1144f <sgx_ocall>
    43db:	89 45 dc             	mov    %eax,-0x24(%rbp)
    43de:	e8 7a b5 00 00       	call   f95d <sgx_ocfree>
    43e3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    43e6:	c9                   	leave  
    43e7:	c3                   	ret    

00000000000043e8 <call_aes>:
    43e8:	f3 0f 1e fa          	endbr64 
    43ec:	55                   	push   %rbp
    43ed:	48 89 e5             	mov    %rsp,%rbp
    43f0:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    43f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    43fe:	00 00 
    4400:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4404:	31 c0                	xor    %eax,%eax
    4406:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
    440d:	00 00 00 00 
    4411:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    4418:	00 00 00 00 
    441c:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    4423:	00 00 00 00 
    4427:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    442e:	00 00 00 00 
    4432:	48 c7 85 40 ff ff ff 	movq   $0x0,-0xc0(%rbp)
    4439:	00 00 00 00 
    443d:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    4444:	00 00 00 00 
    4448:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
    444f:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    4456:	be 80 00 00 00       	mov    $0x80,%esi
    445b:	48 89 c7             	mov    %rax,%rdi
    445e:	e8 6d 05 00 00       	call   49d0 <AES_set_encrypt_key>
    4463:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
    446a:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    4471:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4478:	48 89 ce             	mov    %rcx,%rsi
    447b:	48 89 c7             	mov    %rax,%rdi
    447e:	e8 3d 11 00 00       	call   55c0 <AES_encrypt>
    4483:	90                   	nop
    4484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4488:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    448f:	00 00 
    4491:	74 05                	je     4498 <call_aes+0xb0>
    4493:	e8 5f f3 01 00       	call   237f7 <__stack_chk_fail>
    4498:	c9                   	leave  
    4499:	c3                   	ret    

000000000000449a <printf>:
    449a:	f3 0f 1e fa          	endbr64 
    449e:	55                   	push   %rbp
    449f:	48 89 e5             	mov    %rsp,%rbp
    44a2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    44a9:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    44ae:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    44b5:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    44ba:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    44c1:	48 89 bd 18 df ff ff 	mov    %rdi,-0x20e8(%rbp)
    44c8:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    44cf:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    44d6:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    44dd:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    44e4:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    44eb:	84 c0                	test   %al,%al
    44ed:	74 20                	je     450f <printf+0x75>
    44ef:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    44f3:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    44f7:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    44fb:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    44ff:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    4503:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    4507:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    450b:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    450f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4516:	00 00 
    4518:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    451f:	31 c0                	xor    %eax,%eax
    4521:	48 c7 85 40 df ff ff 	movq   $0x0,-0x20c0(%rbp)
    4528:	00 00 00 00 
    452c:	48 c7 85 48 df ff ff 	movq   $0x0,-0x20b8(%rbp)
    4533:	00 00 00 00 
    4537:	48 8d 95 50 df ff ff 	lea    -0x20b0(%rbp),%rdx
    453e:	b8 00 00 00 00       	mov    $0x0,%eax
    4543:	b9 fe 03 00 00       	mov    $0x3fe,%ecx
    4548:	48 89 d7             	mov    %rdx,%rdi
    454b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    454e:	c7 85 28 df ff ff 08 	movl   $0x8,-0x20d8(%rbp)
    4555:	00 00 00 
    4558:	c7 85 2c df ff ff 30 	movl   $0x30,-0x20d4(%rbp)
    455f:	00 00 00 
    4562:	48 8d 45 10          	lea    0x10(%rbp),%rax
    4566:	48 89 85 30 df ff ff 	mov    %rax,-0x20d0(%rbp)
    456d:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    4574:	48 89 85 38 df ff ff 	mov    %rax,-0x20c8(%rbp)
    457b:	48 8d 8d 28 df ff ff 	lea    -0x20d8(%rbp),%rcx
    4582:	48 8b 95 18 df ff ff 	mov    -0x20e8(%rbp),%rdx
    4589:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    4590:	be 00 20 00 00       	mov    $0x2000,%esi
    4595:	48 89 c7             	mov    %rax,%rdi
    4598:	e8 b7 51 01 00       	call   19754 <vsnprintf>
    459d:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    45a4:	48 89 c7             	mov    %rax,%rdi
    45a7:	e8 ac fc ff ff       	call   4258 <ocall_print_string>
    45ac:	90                   	nop
    45ad:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    45b4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    45bb:	00 00 
    45bd:	74 05                	je     45c4 <printf+0x12a>
    45bf:	e8 33 f2 01 00       	call   237f7 <__stack_chk_fail>
    45c4:	c9                   	leave  
    45c5:	c3                   	ret    

00000000000045c6 <ecall_sgx_cpuid>:
    45c6:	f3 0f 1e fa          	endbr64 
    45ca:	55                   	push   %rbp
    45cb:	48 89 e5             	mov    %rsp,%rbp
    45ce:	48 83 ec 20          	sub    $0x20,%rsp
    45d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    45d6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    45d9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    45e0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    45e4:	74 05                	je     45eb <ecall_sgx_cpuid+0x25>
    45e6:	e8 b0 d4 02 00       	call   31a9b <abort>
    45eb:	90                   	nop
    45ec:	c9                   	leave  
    45ed:	c3                   	ret    
    45ee:	66 90                	xchg   %ax,%ax

00000000000045f0 <populate>:
    45f0:	55                   	push   %rbp
    45f1:	48 89 e5             	mov    %rsp,%rbp
    45f4:	48 83 ec 10          	sub    $0x10,%rsp
    45f8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    45ff:	81 7d fc 00 04 00 00 	cmpl   $0x400,-0x4(%rbp)
    4606:	0f 8d 40 00 00 00    	jge    464c <populate+0x5c>
    460c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    460f:	b9 04 00 00 00       	mov    $0x4,%ecx
    4614:	99                   	cltd   
    4615:	f7 f9                	idiv   %ecx
    4617:	48 98                	cltq   
    4619:	48 8d 3d e0 c9 04 00 	lea    0x4c9e0(%rip),%rdi        # 51000 <secret>
    4620:	48 c1 e0 02          	shl    $0x2,%rax
    4624:	48 01 c7             	add    %rax,%rdi
    4627:	8b 45 fc             	mov    -0x4(%rbp),%eax
    462a:	b9 40 00 00 00       	mov    $0x40,%ecx
    462f:	99                   	cltd   
    4630:	f7 f9                	idiv   %ecx
    4632:	89 c2                	mov    %eax,%edx
    4634:	be 40 00 00 00       	mov    $0x40,%esi
    4639:	e8 91 a6 00 00       	call   eccf <__mince_populate>
    463e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4641:	83 c0 40             	add    $0x40,%eax
    4644:	89 45 fc             	mov    %eax,-0x4(%rbp)
    4647:	e9 b3 ff ff ff       	jmp    45ff <populate+0xf>
    464c:	48 83 c4 10          	add    $0x10,%rsp
    4650:	5d                   	pop    %rbp
    4651:	c3                   	ret    
    4652:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4659:	00 00 00 
    465c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004660 <fibnacci>:
    4660:	55                   	push   %rbp
    4661:	48 89 e5             	mov    %rsp,%rbp
    4664:	48 83 ec 20          	sub    $0x20,%rsp
    4668:	4c 8d 7d fc          	lea    -0x4(%rbp),%r15
    466c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4673:	00 00 00 
    4676:	41 ff d6             	call   *%r14
    4679:	41 89 3e             	mov    %edi,(%r14)
    467c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    4683:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    468a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    4691:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    4698:	e9 43 00 00 00       	jmp    46e0 <fibnacci.0>
    469d:	0f 1f 00             	nopl   (%rax)

00000000000046a0 <fibnacci.dummy.1>:
    46a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46a7:	02 00 00 
    46aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46b1:	02 00 00 
    46b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46bb:	02 00 00 
    46be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46c5:	02 00 00 
    46c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46cf:	02 00 00 
    46d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46d9:	02 00 00 
    46dc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000046e0 <fibnacci.0>:
    46e0:	83 7d ec 20          	cmpl   $0x20,-0x14(%rbp)
    46e4:	0f 8d 8f 00 00 00    	jge    4779 <fibnacci.1+0x5>
    46ea:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
    46ee:	48 8d 05 0b c9 04 00 	lea    0x4c90b(%rip),%rax        # 51000 <secret>
    46f5:	c7 04 88 00 00 00 00 	movl   $0x0,(%rax,%rcx,4)
    46fc:	4c 8d 7d ec          	lea    -0x14(%rbp),%r15
    4700:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4707:	00 00 00 
    470a:	41 ff d6             	call   *%r14
    470d:	41 8b 06             	mov    (%r14),%eax
    4710:	83 c0 01             	add    $0x1,%eax
    4713:	4c 8d 7d ec          	lea    -0x14(%rbp),%r15
    4717:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    471e:	00 00 00 
    4721:	41 ff d6             	call   *%r14
    4724:	41 89 06             	mov    %eax,(%r14)
    4727:	e9 48 00 00 00       	jmp    4774 <fibnacci.1>
    472c:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    4733:	00 

0000000000004734 <fibnacci.dummy.2>:
    4734:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    473b:	02 00 00 
    473e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4745:	02 00 00 
    4748:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    474f:	02 00 00 
    4752:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4759:	02 00 00 
    475c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4763:	02 00 00 
    4766:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    476d:	02 00 00 
    4770:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004774 <fibnacci.1>:
    4774:	e9 1f ff ff ff       	jmp    4698 <fibnacci+0x38>
    4779:	e8 72 fe ff ff       	call   45f0 <populate>
    477e:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
    4785:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    4789:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4790:	00 00 00 
    4793:	41 ff d6             	call   *%r14
    4796:	41 8b 06             	mov    (%r14),%eax
    4799:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    479c:	0f 8f af 01 00 00    	jg     4951 <fibnacci.4+0x1c>
    47a2:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    47a6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    47ad:	00 00 00 
    47b0:	41 ff d6             	call   *%r14
    47b3:	41 8b 06             	mov    (%r14),%eax
    47b6:	e9 52 00 00 00       	jmp    480d <fibnacci.2>
    47bb:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47c2:	02 00 00 
    47c5:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    47cc:	00 

00000000000047cd <fibnacci.dummy.3>:
    47cd:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47d4:	02 00 00 
    47d7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47de:	02 00 00 
    47e1:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47e8:	02 00 00 
    47eb:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47f2:	02 00 00 
    47f5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47fc:	02 00 00 
    47ff:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4806:	02 00 00 
    4809:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000480d <fibnacci.2>:
    480d:	03 45 f4             	add    -0xc(%rbp),%eax
    4810:	4c 8d 3d 41 c8 04 00 	lea    0x4c841(%rip),%r15        # 51058 <secret+0x58>
    4817:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    481e:	00 00 00 
    4821:	41 ff d6             	call   *%r14
    4824:	41 89 06             	mov    %eax,(%r14)
    4827:	4c 8d 7d f4          	lea    -0xc(%rbp),%r15
    482b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4832:	00 00 00 
    4835:	41 ff d6             	call   *%r14
    4838:	41 8b 06             	mov    (%r14),%eax
    483b:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    483f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4846:	00 00 00 
    4849:	41 ff d6             	call   *%r14
    484c:	41 89 06             	mov    %eax,(%r14)
    484f:	e9 4d 00 00 00       	jmp    48a1 <fibnacci.3>
    4854:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    485b:	02 00 00 
    485e:	0f 1f 00             	nopl   (%rax)

0000000000004861 <fibnacci.dummy.4>:
    4861:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4868:	02 00 00 
    486b:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4872:	02 00 00 
    4875:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    487c:	02 00 00 
    487f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4886:	02 00 00 
    4889:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4890:	02 00 00 
    4893:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    489a:	02 00 00 
    489d:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000048a1 <fibnacci.3>:
    48a1:	4c 8d 3d b0 c7 04 00 	lea    0x4c7b0(%rip),%r15        # 51058 <secret+0x58>
    48a8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    48af:	00 00 00 
    48b2:	41 ff d6             	call   *%r14
    48b5:	41 8b 06             	mov    (%r14),%eax
    48b8:	4c 8d 7d f4          	lea    -0xc(%rbp),%r15
    48bc:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    48c3:	00 00 00 
    48c6:	41 ff d6             	call   *%r14
    48c9:	41 89 06             	mov    %eax,(%r14)
    48cc:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    48d0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    48d7:	00 00 00 
    48da:	41 ff d6             	call   *%r14
    48dd:	41 8b 06             	mov    (%r14),%eax
    48e0:	e9 50 00 00 00       	jmp    4935 <fibnacci.4>
    48e5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48ec:	02 00 00 
    48ef:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000048f5 <fibnacci.dummy.5>:
    48f5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48fc:	02 00 00 
    48ff:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4906:	02 00 00 
    4909:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4910:	02 00 00 
    4913:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    491a:	02 00 00 
    491d:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4924:	02 00 00 
    4927:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    492e:	02 00 00 
    4931:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004935 <fibnacci.4>:
    4935:	83 c0 01             	add    $0x1,%eax
    4938:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    493c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    4943:	00 00 00 
    4946:	41 ff d6             	call   *%r14
    4949:	41 89 06             	mov    %eax,(%r14)
    494c:	e9 34 fe ff ff       	jmp    4785 <fibnacci.1+0x11>
    4951:	4c 8d 3d 00 c7 04 00 	lea    0x4c700(%rip),%r15        # 51058 <secret+0x58>
    4958:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    495f:	00 00 00 
    4962:	41 ff d6             	call   *%r14
    4965:	41 8b 36             	mov    (%r14),%esi
    4968:	48 8d 3d a1 d6 02 00 	lea    0x2d6a1(%rip),%rdi        # 32010 <g_dyn_entry_table+0x10>
    496f:	e9 41 00 00 00       	jmp    49b5 <fibnacci.5>
    4974:	90                   	nop

0000000000004975 <fibnacci.dummy.6>:
    4975:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    497c:	02 00 00 
    497f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4986:	02 00 00 
    4989:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4990:	02 00 00 
    4993:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    499a:	02 00 00 
    499d:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    49a4:	02 00 00 
    49a7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    49ae:	02 00 00 
    49b1:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000049b5 <fibnacci.5>:
    49b5:	b0 00                	mov    $0x0,%al
    49b7:	e8 de fa ff ff       	call   449a <printf>
    49bc:	48 83 c4 20          	add    $0x20,%rsp
    49c0:	5d                   	pop    %rbp
    49c1:	c3                   	ret    
    49c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49c9:	00 00 00 
    49cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000049d0 <AES_set_encrypt_key>:
    49d0:	55                   	push   %rbp
    49d1:	48 89 e5             	mov    %rsp,%rbp
    49d4:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    49d8:	89 75 ec             	mov    %esi,-0x14(%rbp)
    49db:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    49df:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    49e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    49eb:	0f 84 0b 00 00 00    	je     49fc <AES_set_encrypt_key+0x2c>
    49f1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    49f6:	0f 85 0c 00 00 00    	jne    4a08 <AES_set_encrypt_key+0x38>
    49fc:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    4a03:	e9 93 06 00 00       	jmp    509b <AES_set_encrypt_key+0x6cb>
    4a08:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    4a0f:	0f 84 26 00 00 00    	je     4a3b <AES_set_encrypt_key+0x6b>
    4a15:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    4a1c:	0f 84 19 00 00 00    	je     4a3b <AES_set_encrypt_key+0x6b>
    4a22:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
    4a29:	0f 84 0c 00 00 00    	je     4a3b <AES_set_encrypt_key+0x6b>
    4a2f:	c7 45 fc fe ff ff ff 	movl   $0xfffffffe,-0x4(%rbp)
    4a36:	e9 60 06 00 00       	jmp    509b <AES_set_encrypt_key+0x6cb>
    4a3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a3f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4a43:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    4a4a:	0f 85 13 00 00 00    	jne    4a63 <AES_set_encrypt_key+0x93>
    4a50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a54:	c7 80 f0 00 00 00 0a 	movl   $0xa,0xf0(%rax)
    4a5b:	00 00 00 
    4a5e:	e9 33 00 00 00       	jmp    4a96 <AES_set_encrypt_key+0xc6>
    4a63:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    4a6a:	0f 85 13 00 00 00    	jne    4a83 <AES_set_encrypt_key+0xb3>
    4a70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a74:	c7 80 f0 00 00 00 0c 	movl   $0xc,0xf0(%rax)
    4a7b:	00 00 00 
    4a7e:	e9 0e 00 00 00       	jmp    4a91 <AES_set_encrypt_key+0xc1>
    4a83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a87:	c7 80 f0 00 00 00 0e 	movl   $0xe,0xf0(%rax)
    4a8e:	00 00 00 
    4a91:	e9 00 00 00 00       	jmp    4a96 <AES_set_encrypt_key+0xc6>
    4a96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a9a:	0f b6 08             	movzbl (%rax),%ecx
    4a9d:	c1 e1 18             	shl    $0x18,%ecx
    4aa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4aa4:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    4aa8:	c1 e0 10             	shl    $0x10,%eax
    4aab:	31 c1                	xor    %eax,%ecx
    4aad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ab1:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    4ab5:	c1 e0 08             	shl    $0x8,%eax
    4ab8:	31 c1                	xor    %eax,%ecx
    4aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4abe:	0f b6 40 03          	movzbl 0x3(%rax),%eax
    4ac2:	31 c1                	xor    %eax,%ecx
    4ac4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ac8:	89 08                	mov    %ecx,(%rax)
    4aca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ace:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
    4ad2:	c1 e1 18             	shl    $0x18,%ecx
    4ad5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ad9:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    4add:	c1 e0 10             	shl    $0x10,%eax
    4ae0:	31 c1                	xor    %eax,%ecx
    4ae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ae6:	0f b6 40 06          	movzbl 0x6(%rax),%eax
    4aea:	c1 e0 08             	shl    $0x8,%eax
    4aed:	31 c1                	xor    %eax,%ecx
    4aef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4af3:	0f b6 40 07          	movzbl 0x7(%rax),%eax
    4af7:	31 c1                	xor    %eax,%ecx
    4af9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4afd:	89 48 04             	mov    %ecx,0x4(%rax)
    4b00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b04:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
    4b08:	c1 e1 18             	shl    $0x18,%ecx
    4b0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b0f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
    4b13:	c1 e0 10             	shl    $0x10,%eax
    4b16:	31 c1                	xor    %eax,%ecx
    4b18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b1c:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
    4b20:	c1 e0 08             	shl    $0x8,%eax
    4b23:	31 c1                	xor    %eax,%ecx
    4b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b29:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
    4b2d:	31 c1                	xor    %eax,%ecx
    4b2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b33:	89 48 08             	mov    %ecx,0x8(%rax)
    4b36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b3a:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
    4b3e:	c1 e1 18             	shl    $0x18,%ecx
    4b41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b45:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
    4b49:	c1 e0 10             	shl    $0x10,%eax
    4b4c:	31 c1                	xor    %eax,%ecx
    4b4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b52:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
    4b56:	c1 e0 08             	shl    $0x8,%eax
    4b59:	31 c1                	xor    %eax,%ecx
    4b5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b5f:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    4b63:	31 c1                	xor    %eax,%ecx
    4b65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b69:	89 48 0c             	mov    %ecx,0xc(%rax)
    4b6c:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    4b73:	0f 85 10 01 00 00    	jne    4c89 <AES_set_encrypt_key+0x2b9>
    4b79:	e9 00 00 00 00       	jmp    4b7e <AES_set_encrypt_key+0x1ae>
    4b7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b82:	8b 40 0c             	mov    0xc(%rax),%eax
    4b85:	89 45 d0             	mov    %eax,-0x30(%rbp)
    4b88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b8c:	8b 08                	mov    (%rax),%ecx
    4b8e:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4b91:	c1 e8 10             	shr    $0x10,%eax
    4b94:	25 ff 00 00 00       	and    $0xff,%eax
    4b99:	89 c0                	mov    %eax,%eax
    4b9b:	89 c2                	mov    %eax,%edx
    4b9d:	48 8d 05 5c 5c 03 00 	lea    0x35c5c(%rip),%rax        # 3a800 <Te2>
    4ba4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4ba7:	25 00 00 00 ff       	and    $0xff000000,%eax
    4bac:	31 c1                	xor    %eax,%ecx
    4bae:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4bb1:	c1 e8 08             	shr    $0x8,%eax
    4bb4:	25 ff 00 00 00       	and    $0xff,%eax
    4bb9:	89 c0                	mov    %eax,%eax
    4bbb:	89 c2                	mov    %eax,%edx
    4bbd:	48 8d 05 3c 60 03 00 	lea    0x3603c(%rip),%rax        # 3ac00 <Te3>
    4bc4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4bc7:	25 00 00 ff 00       	and    $0xff0000,%eax
    4bcc:	31 c1                	xor    %eax,%ecx
    4bce:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4bd1:	25 ff 00 00 00       	and    $0xff,%eax
    4bd6:	89 c0                	mov    %eax,%eax
    4bd8:	89 c2                	mov    %eax,%edx
    4bda:	48 8d 05 1f 54 03 00 	lea    0x3541f(%rip),%rax        # 3a000 <Te0>
    4be1:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4be4:	25 00 ff 00 00       	and    $0xff00,%eax
    4be9:	31 c1                	xor    %eax,%ecx
    4beb:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4bee:	c1 e8 18             	shr    $0x18,%eax
    4bf1:	89 c0                	mov    %eax,%eax
    4bf3:	89 c2                	mov    %eax,%edx
    4bf5:	48 8d 05 04 58 03 00 	lea    0x35804(%rip),%rax        # 3a400 <Te1>
    4bfc:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4bff:	25 ff 00 00 00       	and    $0xff,%eax
    4c04:	31 c1                	xor    %eax,%ecx
    4c06:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    4c0a:	48 8d 05 0f d4 02 00 	lea    0x2d40f(%rip),%rax        # 32020 <rcon>
    4c11:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4c14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c18:	89 48 10             	mov    %ecx,0x10(%rax)
    4c1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c1f:	8b 48 04             	mov    0x4(%rax),%ecx
    4c22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c26:	33 48 10             	xor    0x10(%rax),%ecx
    4c29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c2d:	89 48 14             	mov    %ecx,0x14(%rax)
    4c30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c34:	8b 48 08             	mov    0x8(%rax),%ecx
    4c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c3b:	33 48 14             	xor    0x14(%rax),%ecx
    4c3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c42:	89 48 18             	mov    %ecx,0x18(%rax)
    4c45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c49:	8b 48 0c             	mov    0xc(%rax),%ecx
    4c4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c50:	33 48 18             	xor    0x18(%rax),%ecx
    4c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c57:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4c5a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4c5d:	83 c0 01             	add    $0x1,%eax
    4c60:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4c63:	83 f8 0a             	cmp    $0xa,%eax
    4c66:	0f 85 0c 00 00 00    	jne    4c78 <AES_set_encrypt_key+0x2a8>
    4c6c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c73:	e9 23 04 00 00       	jmp    509b <AES_set_encrypt_key+0x6cb>
    4c78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c7c:	48 83 c0 10          	add    $0x10,%rax
    4c80:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4c84:	e9 f5 fe ff ff       	jmp    4b7e <AES_set_encrypt_key+0x1ae>
    4c89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c8d:	0f b6 48 10          	movzbl 0x10(%rax),%ecx
    4c91:	c1 e1 18             	shl    $0x18,%ecx
    4c94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c98:	0f b6 40 11          	movzbl 0x11(%rax),%eax
    4c9c:	c1 e0 10             	shl    $0x10,%eax
    4c9f:	31 c1                	xor    %eax,%ecx
    4ca1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ca5:	0f b6 40 12          	movzbl 0x12(%rax),%eax
    4ca9:	c1 e0 08             	shl    $0x8,%eax
    4cac:	31 c1                	xor    %eax,%ecx
    4cae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cb2:	0f b6 40 13          	movzbl 0x13(%rax),%eax
    4cb6:	31 c1                	xor    %eax,%ecx
    4cb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cbc:	89 48 10             	mov    %ecx,0x10(%rax)
    4cbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cc3:	0f b6 48 14          	movzbl 0x14(%rax),%ecx
    4cc7:	c1 e1 18             	shl    $0x18,%ecx
    4cca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cce:	0f b6 40 15          	movzbl 0x15(%rax),%eax
    4cd2:	c1 e0 10             	shl    $0x10,%eax
    4cd5:	31 c1                	xor    %eax,%ecx
    4cd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cdb:	0f b6 40 16          	movzbl 0x16(%rax),%eax
    4cdf:	c1 e0 08             	shl    $0x8,%eax
    4ce2:	31 c1                	xor    %eax,%ecx
    4ce4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ce8:	0f b6 40 17          	movzbl 0x17(%rax),%eax
    4cec:	31 c1                	xor    %eax,%ecx
    4cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cf2:	89 48 14             	mov    %ecx,0x14(%rax)
    4cf5:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    4cfc:	0f 85 3a 01 00 00    	jne    4e3c <AES_set_encrypt_key+0x46c>
    4d02:	e9 00 00 00 00       	jmp    4d07 <AES_set_encrypt_key+0x337>
    4d07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d0b:	8b 40 14             	mov    0x14(%rax),%eax
    4d0e:	89 45 d0             	mov    %eax,-0x30(%rbp)
    4d11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d15:	8b 08                	mov    (%rax),%ecx
    4d17:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4d1a:	c1 e8 10             	shr    $0x10,%eax
    4d1d:	25 ff 00 00 00       	and    $0xff,%eax
    4d22:	89 c0                	mov    %eax,%eax
    4d24:	89 c2                	mov    %eax,%edx
    4d26:	48 8d 05 d3 5a 03 00 	lea    0x35ad3(%rip),%rax        # 3a800 <Te2>
    4d2d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4d30:	25 00 00 00 ff       	and    $0xff000000,%eax
    4d35:	31 c1                	xor    %eax,%ecx
    4d37:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4d3a:	c1 e8 08             	shr    $0x8,%eax
    4d3d:	25 ff 00 00 00       	and    $0xff,%eax
    4d42:	89 c0                	mov    %eax,%eax
    4d44:	89 c2                	mov    %eax,%edx
    4d46:	48 8d 05 b3 5e 03 00 	lea    0x35eb3(%rip),%rax        # 3ac00 <Te3>
    4d4d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4d50:	25 00 00 ff 00       	and    $0xff0000,%eax
    4d55:	31 c1                	xor    %eax,%ecx
    4d57:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4d5a:	25 ff 00 00 00       	and    $0xff,%eax
    4d5f:	89 c0                	mov    %eax,%eax
    4d61:	89 c2                	mov    %eax,%edx
    4d63:	48 8d 05 96 52 03 00 	lea    0x35296(%rip),%rax        # 3a000 <Te0>
    4d6a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4d6d:	25 00 ff 00 00       	and    $0xff00,%eax
    4d72:	31 c1                	xor    %eax,%ecx
    4d74:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4d77:	c1 e8 18             	shr    $0x18,%eax
    4d7a:	89 c0                	mov    %eax,%eax
    4d7c:	89 c2                	mov    %eax,%edx
    4d7e:	48 8d 05 7b 56 03 00 	lea    0x3567b(%rip),%rax        # 3a400 <Te1>
    4d85:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4d88:	25 ff 00 00 00       	and    $0xff,%eax
    4d8d:	31 c1                	xor    %eax,%ecx
    4d8f:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    4d93:	48 8d 05 86 d2 02 00 	lea    0x2d286(%rip),%rax        # 32020 <rcon>
    4d9a:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4d9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4da1:	89 48 18             	mov    %ecx,0x18(%rax)
    4da4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4da8:	8b 48 04             	mov    0x4(%rax),%ecx
    4dab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4daf:	33 48 18             	xor    0x18(%rax),%ecx
    4db2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4db6:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4db9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dbd:	8b 48 08             	mov    0x8(%rax),%ecx
    4dc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dc4:	33 48 1c             	xor    0x1c(%rax),%ecx
    4dc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dcb:	89 48 20             	mov    %ecx,0x20(%rax)
    4dce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dd2:	8b 48 0c             	mov    0xc(%rax),%ecx
    4dd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dd9:	33 48 20             	xor    0x20(%rax),%ecx
    4ddc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4de0:	89 48 24             	mov    %ecx,0x24(%rax)
    4de3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4de6:	83 c0 01             	add    $0x1,%eax
    4de9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4dec:	83 f8 08             	cmp    $0x8,%eax
    4def:	0f 85 0c 00 00 00    	jne    4e01 <AES_set_encrypt_key+0x431>
    4df5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4dfc:	e9 9a 02 00 00       	jmp    509b <AES_set_encrypt_key+0x6cb>
    4e01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e05:	8b 48 10             	mov    0x10(%rax),%ecx
    4e08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e0c:	33 48 24             	xor    0x24(%rax),%ecx
    4e0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e13:	89 48 28             	mov    %ecx,0x28(%rax)
    4e16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e1a:	8b 48 14             	mov    0x14(%rax),%ecx
    4e1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e21:	33 48 28             	xor    0x28(%rax),%ecx
    4e24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e28:	89 48 2c             	mov    %ecx,0x2c(%rax)
    4e2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e2f:	48 83 c0 18          	add    $0x18,%rax
    4e33:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4e37:	e9 cb fe ff ff       	jmp    4d07 <AES_set_encrypt_key+0x337>
    4e3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e40:	0f b6 48 18          	movzbl 0x18(%rax),%ecx
    4e44:	c1 e1 18             	shl    $0x18,%ecx
    4e47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e4b:	0f b6 40 19          	movzbl 0x19(%rax),%eax
    4e4f:	c1 e0 10             	shl    $0x10,%eax
    4e52:	31 c1                	xor    %eax,%ecx
    4e54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e58:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
    4e5c:	c1 e0 08             	shl    $0x8,%eax
    4e5f:	31 c1                	xor    %eax,%ecx
    4e61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e65:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
    4e69:	31 c1                	xor    %eax,%ecx
    4e6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e6f:	89 48 18             	mov    %ecx,0x18(%rax)
    4e72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e76:	0f b6 48 1c          	movzbl 0x1c(%rax),%ecx
    4e7a:	c1 e1 18             	shl    $0x18,%ecx
    4e7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e81:	0f b6 40 1d          	movzbl 0x1d(%rax),%eax
    4e85:	c1 e0 10             	shl    $0x10,%eax
    4e88:	31 c1                	xor    %eax,%ecx
    4e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e8e:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
    4e92:	c1 e0 08             	shl    $0x8,%eax
    4e95:	31 c1                	xor    %eax,%ecx
    4e97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e9b:	0f b6 40 1f          	movzbl 0x1f(%rax),%eax
    4e9f:	31 c1                	xor    %eax,%ecx
    4ea1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ea5:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4ea8:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
    4eaf:	0f 85 df 01 00 00    	jne    5094 <AES_set_encrypt_key+0x6c4>
    4eb5:	e9 00 00 00 00       	jmp    4eba <AES_set_encrypt_key+0x4ea>
    4eba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ebe:	8b 40 1c             	mov    0x1c(%rax),%eax
    4ec1:	89 45 d0             	mov    %eax,-0x30(%rbp)
    4ec4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ec8:	8b 08                	mov    (%rax),%ecx
    4eca:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4ecd:	c1 e8 10             	shr    $0x10,%eax
    4ed0:	25 ff 00 00 00       	and    $0xff,%eax
    4ed5:	89 c0                	mov    %eax,%eax
    4ed7:	89 c2                	mov    %eax,%edx
    4ed9:	48 8d 05 20 59 03 00 	lea    0x35920(%rip),%rax        # 3a800 <Te2>
    4ee0:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4ee3:	25 00 00 00 ff       	and    $0xff000000,%eax
    4ee8:	31 c1                	xor    %eax,%ecx
    4eea:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4eed:	c1 e8 08             	shr    $0x8,%eax
    4ef0:	25 ff 00 00 00       	and    $0xff,%eax
    4ef5:	89 c0                	mov    %eax,%eax
    4ef7:	89 c2                	mov    %eax,%edx
    4ef9:	48 8d 05 00 5d 03 00 	lea    0x35d00(%rip),%rax        # 3ac00 <Te3>
    4f00:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4f03:	25 00 00 ff 00       	and    $0xff0000,%eax
    4f08:	31 c1                	xor    %eax,%ecx
    4f0a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4f0d:	25 ff 00 00 00       	and    $0xff,%eax
    4f12:	89 c0                	mov    %eax,%eax
    4f14:	89 c2                	mov    %eax,%edx
    4f16:	48 8d 05 e3 50 03 00 	lea    0x350e3(%rip),%rax        # 3a000 <Te0>
    4f1d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4f20:	25 00 ff 00 00       	and    $0xff00,%eax
    4f25:	31 c1                	xor    %eax,%ecx
    4f27:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4f2a:	c1 e8 18             	shr    $0x18,%eax
    4f2d:	89 c0                	mov    %eax,%eax
    4f2f:	89 c2                	mov    %eax,%edx
    4f31:	48 8d 05 c8 54 03 00 	lea    0x354c8(%rip),%rax        # 3a400 <Te1>
    4f38:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4f3b:	25 ff 00 00 00       	and    $0xff,%eax
    4f40:	31 c1                	xor    %eax,%ecx
    4f42:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    4f46:	48 8d 05 d3 d0 02 00 	lea    0x2d0d3(%rip),%rax        # 32020 <rcon>
    4f4d:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4f50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f54:	89 48 20             	mov    %ecx,0x20(%rax)
    4f57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f5b:	8b 48 04             	mov    0x4(%rax),%ecx
    4f5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f62:	33 48 20             	xor    0x20(%rax),%ecx
    4f65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f69:	89 48 24             	mov    %ecx,0x24(%rax)
    4f6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f70:	8b 48 08             	mov    0x8(%rax),%ecx
    4f73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f77:	33 48 24             	xor    0x24(%rax),%ecx
    4f7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f7e:	89 48 28             	mov    %ecx,0x28(%rax)
    4f81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f85:	8b 48 0c             	mov    0xc(%rax),%ecx
    4f88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f8c:	33 48 28             	xor    0x28(%rax),%ecx
    4f8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f93:	89 48 2c             	mov    %ecx,0x2c(%rax)
    4f96:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4f99:	83 c0 01             	add    $0x1,%eax
    4f9c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4f9f:	83 f8 07             	cmp    $0x7,%eax
    4fa2:	0f 85 0c 00 00 00    	jne    4fb4 <AES_set_encrypt_key+0x5e4>
    4fa8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4faf:	e9 e7 00 00 00       	jmp    509b <AES_set_encrypt_key+0x6cb>
    4fb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fb8:	8b 40 2c             	mov    0x2c(%rax),%eax
    4fbb:	89 45 d0             	mov    %eax,-0x30(%rbp)
    4fbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fc2:	8b 48 10             	mov    0x10(%rax),%ecx
    4fc5:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4fc8:	c1 e8 18             	shr    $0x18,%eax
    4fcb:	89 c0                	mov    %eax,%eax
    4fcd:	89 c2                	mov    %eax,%edx
    4fcf:	48 8d 05 2a 58 03 00 	lea    0x3582a(%rip),%rax        # 3a800 <Te2>
    4fd6:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4fd9:	25 00 00 00 ff       	and    $0xff000000,%eax
    4fde:	31 c1                	xor    %eax,%ecx
    4fe0:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4fe3:	c1 e8 10             	shr    $0x10,%eax
    4fe6:	25 ff 00 00 00       	and    $0xff,%eax
    4feb:	89 c0                	mov    %eax,%eax
    4fed:	89 c2                	mov    %eax,%edx
    4fef:	48 8d 05 0a 5c 03 00 	lea    0x35c0a(%rip),%rax        # 3ac00 <Te3>
    4ff6:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4ff9:	25 00 00 ff 00       	and    $0xff0000,%eax
    4ffe:	31 c1                	xor    %eax,%ecx
    5000:	8b 45 d0             	mov    -0x30(%rbp),%eax
    5003:	c1 e8 08             	shr    $0x8,%eax
    5006:	25 ff 00 00 00       	and    $0xff,%eax
    500b:	89 c0                	mov    %eax,%eax
    500d:	89 c2                	mov    %eax,%edx
    500f:	48 8d 05 ea 4f 03 00 	lea    0x34fea(%rip),%rax        # 3a000 <Te0>
    5016:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5019:	25 00 ff 00 00       	and    $0xff00,%eax
    501e:	31 c1                	xor    %eax,%ecx
    5020:	8b 45 d0             	mov    -0x30(%rbp),%eax
    5023:	25 ff 00 00 00       	and    $0xff,%eax
    5028:	89 c0                	mov    %eax,%eax
    502a:	89 c2                	mov    %eax,%edx
    502c:	48 8d 05 cd 53 03 00 	lea    0x353cd(%rip),%rax        # 3a400 <Te1>
    5033:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5036:	25 ff 00 00 00       	and    $0xff,%eax
    503b:	31 c1                	xor    %eax,%ecx
    503d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5041:	89 48 30             	mov    %ecx,0x30(%rax)
    5044:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5048:	8b 48 14             	mov    0x14(%rax),%ecx
    504b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    504f:	33 48 30             	xor    0x30(%rax),%ecx
    5052:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5056:	89 48 34             	mov    %ecx,0x34(%rax)
    5059:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    505d:	8b 48 18             	mov    0x18(%rax),%ecx
    5060:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5064:	33 48 34             	xor    0x34(%rax),%ecx
    5067:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    506b:	89 48 38             	mov    %ecx,0x38(%rax)
    506e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5072:	8b 48 1c             	mov    0x1c(%rax),%ecx
    5075:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5079:	33 48 38             	xor    0x38(%rax),%ecx
    507c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5080:	89 48 3c             	mov    %ecx,0x3c(%rax)
    5083:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5087:	48 83 c0 20          	add    $0x20,%rax
    508b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    508f:	e9 26 fe ff ff       	jmp    4eba <AES_set_encrypt_key+0x4ea>
    5094:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    509b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    509e:	5d                   	pop    %rbp
    509f:	c3                   	ret    

00000000000050a0 <AES_set_decrypt_key>:
    50a0:	55                   	push   %rbp
    50a1:	48 89 e5             	mov    %rsp,%rbp
    50a4:	48 83 ec 40          	sub    $0x40,%rsp
    50a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    50ac:	89 75 ec             	mov    %esi,-0x14(%rbp)
    50af:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    50b3:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    50b7:	8b 75 ec             	mov    -0x14(%rbp),%esi
    50ba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    50be:	e8 0d f9 ff ff       	call   49d0 <AES_set_encrypt_key>
    50c3:	89 45 cc             	mov    %eax,-0x34(%rbp)
    50c6:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    50ca:	0f 8d 0b 00 00 00    	jge    50db <AES_set_decrypt_key+0x3b>
    50d0:	8b 45 cc             	mov    -0x34(%rbp),%eax
    50d3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    50d6:	e9 78 04 00 00       	jmp    5553 <AES_set_decrypt_key+0x4b3>
    50db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50df:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    50e3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    50ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50ee:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax
    50f4:	c1 e0 02             	shl    $0x2,%eax
    50f7:	89 45 d0             	mov    %eax,-0x30(%rbp)
    50fa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    50fd:	3b 45 d0             	cmp    -0x30(%rbp),%eax
    5100:	0f 8d 1b 01 00 00    	jge    5221 <AES_set_decrypt_key+0x181>
    5106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    510a:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
    510e:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    5111:	89 45 c8             	mov    %eax,-0x38(%rbp)
    5114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5118:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
    511c:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    511f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5123:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
    5127:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    512a:	8b 55 c8             	mov    -0x38(%rbp),%edx
    512d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5131:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
    5135:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    5138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    513c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    513f:	83 c1 01             	add    $0x1,%ecx
    5142:	48 63 c9             	movslq %ecx,%rcx
    5145:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    5148:	89 45 c8             	mov    %eax,-0x38(%rbp)
    514b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    514f:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    5152:	83 c1 01             	add    $0x1,%ecx
    5155:	48 63 c9             	movslq %ecx,%rcx
    5158:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    515b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    515f:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    5162:	83 c1 01             	add    $0x1,%ecx
    5165:	48 63 c9             	movslq %ecx,%rcx
    5168:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    516b:	8b 55 c8             	mov    -0x38(%rbp),%edx
    516e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5172:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    5175:	83 c1 01             	add    $0x1,%ecx
    5178:	48 63 c9             	movslq %ecx,%rcx
    517b:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    517e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5182:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    5185:	83 c1 02             	add    $0x2,%ecx
    5188:	48 63 c9             	movslq %ecx,%rcx
    518b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    518e:	89 45 c8             	mov    %eax,-0x38(%rbp)
    5191:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5195:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    5198:	83 c1 02             	add    $0x2,%ecx
    519b:	48 63 c9             	movslq %ecx,%rcx
    519e:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    51a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51a5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    51a8:	83 c1 02             	add    $0x2,%ecx
    51ab:	48 63 c9             	movslq %ecx,%rcx
    51ae:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    51b1:	8b 55 c8             	mov    -0x38(%rbp),%edx
    51b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51b8:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    51bb:	83 c1 02             	add    $0x2,%ecx
    51be:	48 63 c9             	movslq %ecx,%rcx
    51c1:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    51c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51c8:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    51cb:	83 c1 03             	add    $0x3,%ecx
    51ce:	48 63 c9             	movslq %ecx,%rcx
    51d1:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    51d4:	89 45 c8             	mov    %eax,-0x38(%rbp)
    51d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51db:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    51de:	83 c1 03             	add    $0x3,%ecx
    51e1:	48 63 c9             	movslq %ecx,%rcx
    51e4:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    51e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51eb:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    51ee:	83 c1 03             	add    $0x3,%ecx
    51f1:	48 63 c9             	movslq %ecx,%rcx
    51f4:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    51f7:	8b 55 c8             	mov    -0x38(%rbp),%edx
    51fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51fe:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    5201:	83 c1 03             	add    $0x3,%ecx
    5204:	48 63 c9             	movslq %ecx,%rcx
    5207:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    520a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    520d:	83 c0 04             	add    $0x4,%eax
    5210:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    5213:	8b 45 d0             	mov    -0x30(%rbp),%eax
    5216:	83 e8 04             	sub    $0x4,%eax
    5219:	89 45 d0             	mov    %eax,-0x30(%rbp)
    521c:	e9 d9 fe ff ff       	jmp    50fa <AES_set_decrypt_key+0x5a>
    5221:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    5228:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    522b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    522f:	3b 81 f0 00 00 00    	cmp    0xf0(%rcx),%eax
    5235:	0f 8d 11 03 00 00    	jge    554c <AES_set_decrypt_key+0x4ac>
    523b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    523f:	48 83 c0 10          	add    $0x10,%rax
    5243:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5247:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    524b:	8b 00                	mov    (%rax),%eax
    524d:	c1 e8 18             	shr    $0x18,%eax
    5250:	89 c0                	mov    %eax,%eax
    5252:	89 c1                	mov    %eax,%ecx
    5254:	48 8d 05 a5 51 03 00 	lea    0x351a5(%rip),%rax        # 3a400 <Te1>
    525b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    525e:	25 ff 00 00 00       	and    $0xff,%eax
    5263:	89 c0                	mov    %eax,%eax
    5265:	89 c1                	mov    %eax,%ecx
    5267:	48 8d 05 e2 cd 02 00 	lea    0x2cde2(%rip),%rax        # 32050 <Td0>
    526e:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    5271:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5275:	8b 00                	mov    (%rax),%eax
    5277:	c1 e8 10             	shr    $0x10,%eax
    527a:	25 ff 00 00 00       	and    $0xff,%eax
    527f:	89 c0                	mov    %eax,%eax
    5281:	89 c2                	mov    %eax,%edx
    5283:	48 8d 05 76 51 03 00 	lea    0x35176(%rip),%rax        # 3a400 <Te1>
    528a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    528d:	25 ff 00 00 00       	and    $0xff,%eax
    5292:	89 c0                	mov    %eax,%eax
    5294:	89 c2                	mov    %eax,%edx
    5296:	48 8d 05 b3 d1 02 00 	lea    0x2d1b3(%rip),%rax        # 32450 <Td1>
    529d:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    52a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52a4:	8b 00                	mov    (%rax),%eax
    52a6:	c1 e8 08             	shr    $0x8,%eax
    52a9:	25 ff 00 00 00       	and    $0xff,%eax
    52ae:	89 c0                	mov    %eax,%eax
    52b0:	89 c2                	mov    %eax,%edx
    52b2:	48 8d 05 47 51 03 00 	lea    0x35147(%rip),%rax        # 3a400 <Te1>
    52b9:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    52bc:	25 ff 00 00 00       	and    $0xff,%eax
    52c1:	89 c0                	mov    %eax,%eax
    52c3:	89 c2                	mov    %eax,%edx
    52c5:	48 8d 05 84 d5 02 00 	lea    0x2d584(%rip),%rax        # 32850 <Td2>
    52cc:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    52cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52d3:	8b 00                	mov    (%rax),%eax
    52d5:	25 ff 00 00 00       	and    $0xff,%eax
    52da:	89 c0                	mov    %eax,%eax
    52dc:	89 c2                	mov    %eax,%edx
    52de:	48 8d 05 1b 51 03 00 	lea    0x3511b(%rip),%rax        # 3a400 <Te1>
    52e5:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    52e8:	25 ff 00 00 00       	and    $0xff,%eax
    52ed:	89 c0                	mov    %eax,%eax
    52ef:	89 c2                	mov    %eax,%edx
    52f1:	48 8d 05 58 d9 02 00 	lea    0x2d958(%rip),%rax        # 32c50 <Td3>
    52f8:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    52fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52ff:	89 08                	mov    %ecx,(%rax)
    5301:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5305:	8b 40 04             	mov    0x4(%rax),%eax
    5308:	c1 e8 18             	shr    $0x18,%eax
    530b:	89 c0                	mov    %eax,%eax
    530d:	89 c1                	mov    %eax,%ecx
    530f:	48 8d 05 ea 50 03 00 	lea    0x350ea(%rip),%rax        # 3a400 <Te1>
    5316:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    5319:	25 ff 00 00 00       	and    $0xff,%eax
    531e:	89 c0                	mov    %eax,%eax
    5320:	89 c1                	mov    %eax,%ecx
    5322:	48 8d 05 27 cd 02 00 	lea    0x2cd27(%rip),%rax        # 32050 <Td0>
    5329:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    532c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5330:	8b 40 04             	mov    0x4(%rax),%eax
    5333:	c1 e8 10             	shr    $0x10,%eax
    5336:	25 ff 00 00 00       	and    $0xff,%eax
    533b:	89 c0                	mov    %eax,%eax
    533d:	89 c2                	mov    %eax,%edx
    533f:	48 8d 05 ba 50 03 00 	lea    0x350ba(%rip),%rax        # 3a400 <Te1>
    5346:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5349:	25 ff 00 00 00       	and    $0xff,%eax
    534e:	89 c0                	mov    %eax,%eax
    5350:	89 c2                	mov    %eax,%edx
    5352:	48 8d 05 f7 d0 02 00 	lea    0x2d0f7(%rip),%rax        # 32450 <Td1>
    5359:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    535c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5360:	8b 40 04             	mov    0x4(%rax),%eax
    5363:	c1 e8 08             	shr    $0x8,%eax
    5366:	25 ff 00 00 00       	and    $0xff,%eax
    536b:	89 c0                	mov    %eax,%eax
    536d:	89 c2                	mov    %eax,%edx
    536f:	48 8d 05 8a 50 03 00 	lea    0x3508a(%rip),%rax        # 3a400 <Te1>
    5376:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5379:	25 ff 00 00 00       	and    $0xff,%eax
    537e:	89 c0                	mov    %eax,%eax
    5380:	89 c2                	mov    %eax,%edx
    5382:	48 8d 05 c7 d4 02 00 	lea    0x2d4c7(%rip),%rax        # 32850 <Td2>
    5389:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    538c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5390:	8b 40 04             	mov    0x4(%rax),%eax
    5393:	25 ff 00 00 00       	and    $0xff,%eax
    5398:	89 c0                	mov    %eax,%eax
    539a:	89 c2                	mov    %eax,%edx
    539c:	48 8d 05 5d 50 03 00 	lea    0x3505d(%rip),%rax        # 3a400 <Te1>
    53a3:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    53a6:	25 ff 00 00 00       	and    $0xff,%eax
    53ab:	89 c0                	mov    %eax,%eax
    53ad:	89 c2                	mov    %eax,%edx
    53af:	48 8d 05 9a d8 02 00 	lea    0x2d89a(%rip),%rax        # 32c50 <Td3>
    53b6:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    53b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53bd:	89 48 04             	mov    %ecx,0x4(%rax)
    53c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53c4:	8b 40 08             	mov    0x8(%rax),%eax
    53c7:	c1 e8 18             	shr    $0x18,%eax
    53ca:	89 c0                	mov    %eax,%eax
    53cc:	89 c1                	mov    %eax,%ecx
    53ce:	48 8d 05 2b 50 03 00 	lea    0x3502b(%rip),%rax        # 3a400 <Te1>
    53d5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    53d8:	25 ff 00 00 00       	and    $0xff,%eax
    53dd:	89 c0                	mov    %eax,%eax
    53df:	89 c1                	mov    %eax,%ecx
    53e1:	48 8d 05 68 cc 02 00 	lea    0x2cc68(%rip),%rax        # 32050 <Td0>
    53e8:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    53eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53ef:	8b 40 08             	mov    0x8(%rax),%eax
    53f2:	c1 e8 10             	shr    $0x10,%eax
    53f5:	25 ff 00 00 00       	and    $0xff,%eax
    53fa:	89 c0                	mov    %eax,%eax
    53fc:	89 c2                	mov    %eax,%edx
    53fe:	48 8d 05 fb 4f 03 00 	lea    0x34ffb(%rip),%rax        # 3a400 <Te1>
    5405:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5408:	25 ff 00 00 00       	and    $0xff,%eax
    540d:	89 c0                	mov    %eax,%eax
    540f:	89 c2                	mov    %eax,%edx
    5411:	48 8d 05 38 d0 02 00 	lea    0x2d038(%rip),%rax        # 32450 <Td1>
    5418:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    541b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    541f:	8b 40 08             	mov    0x8(%rax),%eax
    5422:	c1 e8 08             	shr    $0x8,%eax
    5425:	25 ff 00 00 00       	and    $0xff,%eax
    542a:	89 c0                	mov    %eax,%eax
    542c:	89 c2                	mov    %eax,%edx
    542e:	48 8d 05 cb 4f 03 00 	lea    0x34fcb(%rip),%rax        # 3a400 <Te1>
    5435:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5438:	25 ff 00 00 00       	and    $0xff,%eax
    543d:	89 c0                	mov    %eax,%eax
    543f:	89 c2                	mov    %eax,%edx
    5441:	48 8d 05 08 d4 02 00 	lea    0x2d408(%rip),%rax        # 32850 <Td2>
    5448:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    544b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    544f:	8b 40 08             	mov    0x8(%rax),%eax
    5452:	25 ff 00 00 00       	and    $0xff,%eax
    5457:	89 c0                	mov    %eax,%eax
    5459:	89 c2                	mov    %eax,%edx
    545b:	48 8d 05 9e 4f 03 00 	lea    0x34f9e(%rip),%rax        # 3a400 <Te1>
    5462:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5465:	25 ff 00 00 00       	and    $0xff,%eax
    546a:	89 c0                	mov    %eax,%eax
    546c:	89 c2                	mov    %eax,%edx
    546e:	48 8d 05 db d7 02 00 	lea    0x2d7db(%rip),%rax        # 32c50 <Td3>
    5475:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    5478:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    547c:	89 48 08             	mov    %ecx,0x8(%rax)
    547f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5483:	8b 40 0c             	mov    0xc(%rax),%eax
    5486:	c1 e8 18             	shr    $0x18,%eax
    5489:	89 c0                	mov    %eax,%eax
    548b:	89 c1                	mov    %eax,%ecx
    548d:	48 8d 05 6c 4f 03 00 	lea    0x34f6c(%rip),%rax        # 3a400 <Te1>
    5494:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    5497:	25 ff 00 00 00       	and    $0xff,%eax
    549c:	89 c0                	mov    %eax,%eax
    549e:	89 c1                	mov    %eax,%ecx
    54a0:	48 8d 05 a9 cb 02 00 	lea    0x2cba9(%rip),%rax        # 32050 <Td0>
    54a7:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    54aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54ae:	8b 40 0c             	mov    0xc(%rax),%eax
    54b1:	c1 e8 10             	shr    $0x10,%eax
    54b4:	25 ff 00 00 00       	and    $0xff,%eax
    54b9:	89 c0                	mov    %eax,%eax
    54bb:	89 c2                	mov    %eax,%edx
    54bd:	48 8d 05 3c 4f 03 00 	lea    0x34f3c(%rip),%rax        # 3a400 <Te1>
    54c4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    54c7:	25 ff 00 00 00       	and    $0xff,%eax
    54cc:	89 c0                	mov    %eax,%eax
    54ce:	89 c2                	mov    %eax,%edx
    54d0:	48 8d 05 79 cf 02 00 	lea    0x2cf79(%rip),%rax        # 32450 <Td1>
    54d7:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    54da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54de:	8b 40 0c             	mov    0xc(%rax),%eax
    54e1:	c1 e8 08             	shr    $0x8,%eax
    54e4:	25 ff 00 00 00       	and    $0xff,%eax
    54e9:	89 c0                	mov    %eax,%eax
    54eb:	89 c2                	mov    %eax,%edx
    54ed:	48 8d 05 0c 4f 03 00 	lea    0x34f0c(%rip),%rax        # 3a400 <Te1>
    54f4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    54f7:	25 ff 00 00 00       	and    $0xff,%eax
    54fc:	89 c0                	mov    %eax,%eax
    54fe:	89 c2                	mov    %eax,%edx
    5500:	48 8d 05 49 d3 02 00 	lea    0x2d349(%rip),%rax        # 32850 <Td2>
    5507:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    550a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    550e:	8b 40 0c             	mov    0xc(%rax),%eax
    5511:	25 ff 00 00 00       	and    $0xff,%eax
    5516:	89 c0                	mov    %eax,%eax
    5518:	89 c2                	mov    %eax,%edx
    551a:	48 8d 05 df 4e 03 00 	lea    0x34edf(%rip),%rax        # 3a400 <Te1>
    5521:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5524:	25 ff 00 00 00       	and    $0xff,%eax
    5529:	89 c0                	mov    %eax,%eax
    552b:	89 c2                	mov    %eax,%edx
    552d:	48 8d 05 1c d7 02 00 	lea    0x2d71c(%rip),%rax        # 32c50 <Td3>
    5534:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    5537:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    553b:	89 48 0c             	mov    %ecx,0xc(%rax)
    553e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5541:	83 c0 01             	add    $0x1,%eax
    5544:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    5547:	e9 dc fc ff ff       	jmp    5228 <AES_set_decrypt_key+0x188>
    554c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    5553:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5556:	48 83 c4 40          	add    $0x40,%rsp
    555a:	5d                   	pop    %rbp
    555b:	c3                   	ret    
    555c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005560 <print_table>:
    5560:	55                   	push   %rbp
    5561:	48 89 e5             	mov    %rsp,%rbp
    5564:	48 8d 3d e5 db 02 00 	lea    0x2dbe5(%rip),%rdi        # 33150 <Td4+0x100>
    556b:	48 8d 35 8e 4a 03 00 	lea    0x34a8e(%rip),%rsi        # 3a000 <Te0>
    5572:	b0 00                	mov    $0x0,%al
    5574:	e8 21 ef ff ff       	call   449a <printf>
    5579:	48 8d 3d e8 db 02 00 	lea    0x2dbe8(%rip),%rdi        # 33168 <Td4+0x118>
    5580:	48 8d 35 79 4e 03 00 	lea    0x34e79(%rip),%rsi        # 3a400 <Te1>
    5587:	b0 00                	mov    $0x0,%al
    5589:	e8 0c ef ff ff       	call   449a <printf>
    558e:	48 8d 3d eb db 02 00 	lea    0x2dbeb(%rip),%rdi        # 33180 <Td4+0x130>
    5595:	48 8d 35 64 52 03 00 	lea    0x35264(%rip),%rsi        # 3a800 <Te2>
    559c:	b0 00                	mov    $0x0,%al
    559e:	e8 f7 ee ff ff       	call   449a <printf>
    55a3:	48 8d 3d ee db 02 00 	lea    0x2dbee(%rip),%rdi        # 33198 <Td4+0x148>
    55aa:	48 8d 35 4f 56 03 00 	lea    0x3564f(%rip),%rsi        # 3ac00 <Te3>
    55b1:	b0 00                	mov    $0x0,%al
    55b3:	e8 e2 ee ff ff       	call   449a <printf>
    55b8:	5d                   	pop    %rbp
    55b9:	c3                   	ret    
    55ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000055c0 <AES_encrypt>:
    55c0:	55                   	push   %rbp
    55c1:	48 89 e5             	mov    %rsp,%rbp
    55c4:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    55c8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    55cf:	00 00 00 
    55d2:	41 ff d6             	call   *%r14
    55d5:	49 89 3e             	mov    %rdi,(%r14)
    55d8:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    55dc:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    55e3:	00 00 00 
    55e6:	41 ff d6             	call   *%r14
    55e9:	49 89 36             	mov    %rsi,(%r14)
    55ec:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    55f0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    55f7:	00 00 00 
    55fa:	41 ff d6             	call   *%r14
    55fd:	49 89 16             	mov    %rdx,(%r14)
    5600:	e9 4f 00 00 00       	jmp    5654 <AES_encrypt.0>
    5605:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    560c:	02 00 00 
    560f:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000005614 <AES_encrypt.dummy.1>:
    5614:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    561b:	02 00 00 
    561e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5625:	02 00 00 
    5628:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    562f:	02 00 00 
    5632:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5639:	02 00 00 
    563c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5643:	02 00 00 
    5646:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    564d:	02 00 00 
    5650:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005654 <AES_encrypt.0>:
    5654:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    5658:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    565f:	00 00 00 
    5662:	41 ff d6             	call   *%r14
    5665:	49 8b 06             	mov    (%r14),%rax
    5668:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    566c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5673:	00 00 00 
    5676:	41 ff d6             	call   *%r14
    5679:	49 89 06             	mov    %rax,(%r14)
    567c:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5680:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5687:	00 00 00 
    568a:	41 ff d6             	call   *%r14
    568d:	49 8b 06             	mov    (%r14),%rax
    5690:	e9 53 00 00 00       	jmp    56e8 <AES_encrypt.1>
    5695:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    569c:	02 00 00 
    569f:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    56a6:	00 00 

00000000000056a8 <AES_encrypt.dummy.2>:
    56a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56af:	02 00 00 
    56b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56b9:	02 00 00 
    56bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56c3:	02 00 00 
    56c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56cd:	02 00 00 
    56d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56d7:	02 00 00 
    56da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56e1:	02 00 00 
    56e4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000056e8 <AES_encrypt.1>:
    56e8:	0f b6 00             	movzbl (%rax),%eax
    56eb:	c1 e0 18             	shl    $0x18,%eax
    56ee:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    56f2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    56f9:	00 00 00 
    56fc:	41 ff d6             	call   *%r14
    56ff:	49 8b 0e             	mov    (%r14),%rcx
    5702:	0f b6 49 01          	movzbl 0x1(%rcx),%ecx
    5706:	c1 e1 10             	shl    $0x10,%ecx
    5709:	31 c8                	xor    %ecx,%eax
    570b:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    570f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5716:	00 00 00 
    5719:	41 ff d6             	call   *%r14
    571c:	49 8b 0e             	mov    (%r14),%rcx
    571f:	0f b6 49 02          	movzbl 0x2(%rcx),%ecx
    5723:	e9 40 00 00 00       	jmp    5768 <AES_encrypt.2>

0000000000005728 <AES_encrypt.dummy.3>:
    5728:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    572f:	02 00 00 
    5732:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5739:	02 00 00 
    573c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5743:	02 00 00 
    5746:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    574d:	02 00 00 
    5750:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5757:	02 00 00 
    575a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5761:	02 00 00 
    5764:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005768 <AES_encrypt.2>:
    5768:	c1 e1 08             	shl    $0x8,%ecx
    576b:	31 c8                	xor    %ecx,%eax
    576d:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5771:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5778:	00 00 00 
    577b:	41 ff d6             	call   *%r14
    577e:	49 8b 0e             	mov    (%r14),%rcx
    5781:	0f b6 49 03          	movzbl 0x3(%rcx),%ecx
    5785:	31 c8                	xor    %ecx,%eax
    5787:	83 f0 00             	xor    $0x0,%eax
    578a:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    578e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5795:	00 00 00 
    5798:	41 ff d6             	call   *%r14
    579b:	41 89 06             	mov    %eax,(%r14)
    579e:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    57a2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    57a9:	00 00 00 
    57ac:	41 ff d6             	call   *%r14
    57af:	49 8b 06             	mov    (%r14),%rax
    57b2:	e9 45 00 00 00       	jmp    57fc <AES_encrypt.3>
    57b7:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

00000000000057bc <AES_encrypt.dummy.4>:
    57bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57c3:	02 00 00 
    57c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57cd:	02 00 00 
    57d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57d7:	02 00 00 
    57da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57e1:	02 00 00 
    57e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57eb:	02 00 00 
    57ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57f5:	02 00 00 
    57f8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000057fc <AES_encrypt.3>:
    57fc:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    5800:	c1 e0 18             	shl    $0x18,%eax
    5803:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5807:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    580e:	00 00 00 
    5811:	41 ff d6             	call   *%r14
    5814:	49 8b 0e             	mov    (%r14),%rcx
    5817:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    581b:	c1 e1 10             	shl    $0x10,%ecx
    581e:	31 c8                	xor    %ecx,%eax
    5820:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5824:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    582b:	00 00 00 
    582e:	41 ff d6             	call   *%r14
    5831:	49 8b 0e             	mov    (%r14),%rcx
    5834:	e9 43 00 00 00       	jmp    587c <AES_encrypt.4>
    5839:	0f 1f 00             	nopl   (%rax)

000000000000583c <AES_encrypt.dummy.5>:
    583c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5843:	02 00 00 
    5846:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    584d:	02 00 00 
    5850:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5857:	02 00 00 
    585a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5861:	02 00 00 
    5864:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    586b:	02 00 00 
    586e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5875:	02 00 00 
    5878:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000587c <AES_encrypt.4>:
    587c:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    5880:	c1 e1 08             	shl    $0x8,%ecx
    5883:	31 c8                	xor    %ecx,%eax
    5885:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5889:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5890:	00 00 00 
    5893:	41 ff d6             	call   *%r14
    5896:	49 8b 0e             	mov    (%r14),%rcx
    5899:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    589d:	31 c8                	xor    %ecx,%eax
    589f:	83 f0 00             	xor    $0x0,%eax
    58a2:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    58a6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    58ad:	00 00 00 
    58b0:	41 ff d6             	call   *%r14
    58b3:	41 89 06             	mov    %eax,(%r14)
    58b6:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    58ba:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    58c1:	00 00 00 
    58c4:	41 ff d6             	call   *%r14
    58c7:	49 8b 06             	mov    (%r14),%rax
    58ca:	e9 41 00 00 00       	jmp    5910 <AES_encrypt.5>
    58cf:	90                   	nop

00000000000058d0 <AES_encrypt.dummy.6>:
    58d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58d7:	02 00 00 
    58da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58e1:	02 00 00 
    58e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58eb:	02 00 00 
    58ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58f5:	02 00 00 
    58f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58ff:	02 00 00 
    5902:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5909:	02 00 00 
    590c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005910 <AES_encrypt.5>:
    5910:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    5914:	c1 e0 18             	shl    $0x18,%eax
    5917:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    591b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5922:	00 00 00 
    5925:	41 ff d6             	call   *%r14
    5928:	49 8b 0e             	mov    (%r14),%rcx
    592b:	0f b6 49 09          	movzbl 0x9(%rcx),%ecx
    592f:	c1 e1 10             	shl    $0x10,%ecx
    5932:	31 c8                	xor    %ecx,%eax
    5934:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5938:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    593f:	00 00 00 
    5942:	41 ff d6             	call   *%r14
    5945:	49 8b 0e             	mov    (%r14),%rcx
    5948:	e9 43 00 00 00       	jmp    5990 <AES_encrypt.6>
    594d:	0f 1f 00             	nopl   (%rax)

0000000000005950 <AES_encrypt.dummy.7>:
    5950:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5957:	02 00 00 
    595a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5961:	02 00 00 
    5964:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    596b:	02 00 00 
    596e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5975:	02 00 00 
    5978:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    597f:	02 00 00 
    5982:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5989:	02 00 00 
    598c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005990 <AES_encrypt.6>:
    5990:	0f b6 49 0a          	movzbl 0xa(%rcx),%ecx
    5994:	c1 e1 08             	shl    $0x8,%ecx
    5997:	31 c8                	xor    %ecx,%eax
    5999:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    599d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    59a4:	00 00 00 
    59a7:	41 ff d6             	call   *%r14
    59aa:	49 8b 0e             	mov    (%r14),%rcx
    59ad:	0f b6 49 0b          	movzbl 0xb(%rcx),%ecx
    59b1:	31 c8                	xor    %ecx,%eax
    59b3:	83 f0 00             	xor    $0x0,%eax
    59b6:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    59ba:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    59c1:	00 00 00 
    59c4:	41 ff d6             	call   *%r14
    59c7:	41 89 06             	mov    %eax,(%r14)
    59ca:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    59ce:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    59d5:	00 00 00 
    59d8:	41 ff d6             	call   *%r14
    59db:	49 8b 06             	mov    (%r14),%rax
    59de:	e9 41 00 00 00       	jmp    5a24 <AES_encrypt.7>
    59e3:	90                   	nop

00000000000059e4 <AES_encrypt.dummy.8>:
    59e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59eb:	02 00 00 
    59ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59f5:	02 00 00 
    59f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59ff:	02 00 00 
    5a02:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a09:	02 00 00 
    5a0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a13:	02 00 00 
    5a16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a1d:	02 00 00 
    5a20:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005a24 <AES_encrypt.7>:
    5a24:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
    5a28:	c1 e0 18             	shl    $0x18,%eax
    5a2b:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5a2f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5a36:	00 00 00 
    5a39:	41 ff d6             	call   *%r14
    5a3c:	49 8b 0e             	mov    (%r14),%rcx
    5a3f:	0f b6 49 0d          	movzbl 0xd(%rcx),%ecx
    5a43:	c1 e1 10             	shl    $0x10,%ecx
    5a46:	31 c8                	xor    %ecx,%eax
    5a48:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5a4c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5a53:	00 00 00 
    5a56:	41 ff d6             	call   *%r14
    5a59:	49 8b 0e             	mov    (%r14),%rcx
    5a5c:	e9 43 00 00 00       	jmp    5aa4 <AES_encrypt.8>
    5a61:	0f 1f 00             	nopl   (%rax)

0000000000005a64 <AES_encrypt.dummy.9>:
    5a64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a6b:	02 00 00 
    5a6e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a75:	02 00 00 
    5a78:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a7f:	02 00 00 
    5a82:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a89:	02 00 00 
    5a8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a93:	02 00 00 
    5a96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a9d:	02 00 00 
    5aa0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005aa4 <AES_encrypt.8>:
    5aa4:	0f b6 49 0e          	movzbl 0xe(%rcx),%ecx
    5aa8:	c1 e1 08             	shl    $0x8,%ecx
    5aab:	31 c8                	xor    %ecx,%eax
    5aad:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    5ab1:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5ab8:	00 00 00 
    5abb:	41 ff d6             	call   *%r14
    5abe:	49 8b 0e             	mov    (%r14),%rcx
    5ac1:	0f b6 49 0f          	movzbl 0xf(%rcx),%ecx
    5ac5:	31 c8                	xor    %ecx,%eax
    5ac7:	83 f0 00             	xor    $0x0,%eax
    5aca:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5ace:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5ad5:	00 00 00 
    5ad8:	41 ff d6             	call   *%r14
    5adb:	41 89 06             	mov    %eax,(%r14)
    5ade:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5ae2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5ae9:	00 00 00 
    5aec:	41 ff d6             	call   *%r14
    5aef:	41 8b 06             	mov    (%r14),%eax
    5af2:	e9 41 00 00 00       	jmp    5b38 <AES_encrypt.9>
    5af7:	90                   	nop

0000000000005af8 <AES_encrypt.dummy.10>:
    5af8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5aff:	02 00 00 
    5b02:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b09:	02 00 00 
    5b0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b13:	02 00 00 
    5b16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b1d:	02 00 00 
    5b20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b27:	02 00 00 
    5b2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b31:	02 00 00 
    5b34:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005b38 <AES_encrypt.9>:
    5b38:	c1 e8 18             	shr    $0x18,%eax
    5b3b:	89 c0                	mov    %eax,%eax
    5b3d:	89 c1                	mov    %eax,%ecx
    5b3f:	48 8d 05 ba 44 03 00 	lea    0x344ba(%rip),%rax        # 3a000 <Te0>
    5b46:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5b4a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5b51:	00 00 00 
    5b54:	41 ff d6             	call   *%r14
    5b57:	41 8b 06             	mov    (%r14),%eax
    5b5a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5b5e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5b65:	00 00 00 
    5b68:	41 ff d6             	call   *%r14
    5b6b:	41 8b 0e             	mov    (%r14),%ecx
    5b6e:	c1 e9 10             	shr    $0x10,%ecx
    5b71:	e9 42 00 00 00       	jmp    5bb8 <AES_encrypt.10>
    5b76:	66 90                	xchg   %ax,%ax

0000000000005b78 <AES_encrypt.dummy.11>:
    5b78:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b7f:	02 00 00 
    5b82:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b89:	02 00 00 
    5b8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b93:	02 00 00 
    5b96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b9d:	02 00 00 
    5ba0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ba7:	02 00 00 
    5baa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5bb1:	02 00 00 
    5bb4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005bb8 <AES_encrypt.10>:
    5bb8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5bbe:	89 c9                	mov    %ecx,%ecx
    5bc0:	89 ca                	mov    %ecx,%edx
    5bc2:	48 8d 0d 37 48 03 00 	lea    0x34837(%rip),%rcx        # 3a400 <Te1>
    5bc9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5bcc:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5bd0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5bd7:	00 00 00 
    5bda:	41 ff d6             	call   *%r14
    5bdd:	41 8b 0e             	mov    (%r14),%ecx
    5be0:	c1 e9 08             	shr    $0x8,%ecx
    5be3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5be9:	89 c9                	mov    %ecx,%ecx
    5beb:	89 ca                	mov    %ecx,%edx
    5bed:	e9 46 00 00 00       	jmp    5c38 <AES_encrypt.11>
    5bf2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005bf8 <AES_encrypt.dummy.12>:
    5bf8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5bff:	02 00 00 
    5c02:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c09:	02 00 00 
    5c0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c13:	02 00 00 
    5c16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c1d:	02 00 00 
    5c20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c27:	02 00 00 
    5c2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c31:	02 00 00 
    5c34:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005c38 <AES_encrypt.11>:
    5c38:	48 8d 0d c1 4b 03 00 	lea    0x34bc1(%rip),%rcx        # 3a800 <Te2>
    5c3f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5c42:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5c46:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5c4d:	00 00 00 
    5c50:	41 ff d6             	call   *%r14
    5c53:	41 8b 0e             	mov    (%r14),%ecx
    5c56:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5c5c:	89 c9                	mov    %ecx,%ecx
    5c5e:	89 ca                	mov    %ecx,%edx
    5c60:	48 8d 0d 99 4f 03 00 	lea    0x34f99(%rip),%rcx        # 3ac00 <Te3>
    5c67:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5c6a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5c6e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5c75:	00 00 00 
    5c78:	41 ff d6             	call   *%r14
    5c7b:	49 8b 0e             	mov    (%r14),%rcx
    5c7e:	e9 49 00 00 00       	jmp    5ccc <AES_encrypt.12>
    5c83:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    5c8a:	00 00 

0000000000005c8c <AES_encrypt.dummy.13>:
    5c8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c93:	02 00 00 
    5c96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c9d:	02 00 00 
    5ca0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ca7:	02 00 00 
    5caa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5cb1:	02 00 00 
    5cb4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5cbb:	02 00 00 
    5cbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5cc5:	02 00 00 
    5cc8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005ccc <AES_encrypt.12>:
    5ccc:	33 41 10             	xor    0x10(%rcx),%eax
    5ccf:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    5cd3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5cda:	00 00 00 
    5cdd:	41 ff d6             	call   *%r14
    5ce0:	41 89 06             	mov    %eax,(%r14)
    5ce3:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5ce7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5cee:	00 00 00 
    5cf1:	41 ff d6             	call   *%r14
    5cf4:	41 8b 06             	mov    (%r14),%eax
    5cf7:	c1 e8 18             	shr    $0x18,%eax
    5cfa:	89 c0                	mov    %eax,%eax
    5cfc:	89 c1                	mov    %eax,%ecx
    5cfe:	48 8d 05 fb 42 03 00 	lea    0x342fb(%rip),%rax        # 3a000 <Te0>
    5d05:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5d09:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5d10:	00 00 00 
    5d13:	41 ff d6             	call   *%r14
    5d16:	41 8b 06             	mov    (%r14),%eax
    5d19:	e9 42 00 00 00       	jmp    5d60 <AES_encrypt.13>
    5d1e:	66 90                	xchg   %ax,%ax

0000000000005d20 <AES_encrypt.dummy.14>:
    5d20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d27:	02 00 00 
    5d2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d31:	02 00 00 
    5d34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d3b:	02 00 00 
    5d3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d45:	02 00 00 
    5d48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d4f:	02 00 00 
    5d52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d59:	02 00 00 
    5d5c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005d60 <AES_encrypt.13>:
    5d60:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5d64:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5d6b:	00 00 00 
    5d6e:	41 ff d6             	call   *%r14
    5d71:	41 8b 0e             	mov    (%r14),%ecx
    5d74:	c1 e9 10             	shr    $0x10,%ecx
    5d77:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5d7d:	89 c9                	mov    %ecx,%ecx
    5d7f:	89 ca                	mov    %ecx,%edx
    5d81:	48 8d 0d 78 46 03 00 	lea    0x34678(%rip),%rcx        # 3a400 <Te1>
    5d88:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5d8b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5d8f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5d96:	00 00 00 
    5d99:	41 ff d6             	call   *%r14
    5d9c:	41 8b 0e             	mov    (%r14),%ecx
    5d9f:	e9 50 00 00 00       	jmp    5df4 <AES_encrypt.14>
    5da4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5dab:	02 00 00 
    5dae:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005db4 <AES_encrypt.dummy.15>:
    5db4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5dbb:	02 00 00 
    5dbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5dc5:	02 00 00 
    5dc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5dcf:	02 00 00 
    5dd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5dd9:	02 00 00 
    5ddc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5de3:	02 00 00 
    5de6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ded:	02 00 00 
    5df0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005df4 <AES_encrypt.14>:
    5df4:	c1 e9 08             	shr    $0x8,%ecx
    5df7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5dfd:	89 c9                	mov    %ecx,%ecx
    5dff:	89 ca                	mov    %ecx,%edx
    5e01:	48 8d 0d f8 49 03 00 	lea    0x349f8(%rip),%rcx        # 3a800 <Te2>
    5e08:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5e0b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5e0f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5e16:	00 00 00 
    5e19:	41 ff d6             	call   *%r14
    5e1c:	41 8b 0e             	mov    (%r14),%ecx
    5e1f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5e25:	89 c9                	mov    %ecx,%ecx
    5e27:	89 ca                	mov    %ecx,%edx
    5e29:	e9 46 00 00 00       	jmp    5e74 <AES_encrypt.15>
    5e2e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005e34 <AES_encrypt.dummy.16>:
    5e34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e3b:	02 00 00 
    5e3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e45:	02 00 00 
    5e48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e4f:	02 00 00 
    5e52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e59:	02 00 00 
    5e5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e63:	02 00 00 
    5e66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e6d:	02 00 00 
    5e70:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005e74 <AES_encrypt.15>:
    5e74:	48 8d 0d 85 4d 03 00 	lea    0x34d85(%rip),%rcx        # 3ac00 <Te3>
    5e7b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5e7e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5e82:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5e89:	00 00 00 
    5e8c:	41 ff d6             	call   *%r14
    5e8f:	49 8b 0e             	mov    (%r14),%rcx
    5e92:	33 41 14             	xor    0x14(%rcx),%eax
    5e95:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    5e99:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5ea0:	00 00 00 
    5ea3:	41 ff d6             	call   *%r14
    5ea6:	41 89 06             	mov    %eax,(%r14)
    5ea9:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5ead:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5eb4:	00 00 00 
    5eb7:	41 ff d6             	call   *%r14
    5eba:	41 8b 06             	mov    (%r14),%eax
    5ebd:	e9 46 00 00 00       	jmp    5f08 <AES_encrypt.16>
    5ec2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005ec8 <AES_encrypt.dummy.17>:
    5ec8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ecf:	02 00 00 
    5ed2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ed9:	02 00 00 
    5edc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ee3:	02 00 00 
    5ee6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5eed:	02 00 00 
    5ef0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ef7:	02 00 00 
    5efa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f01:	02 00 00 
    5f04:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005f08 <AES_encrypt.16>:
    5f08:	c1 e8 18             	shr    $0x18,%eax
    5f0b:	89 c0                	mov    %eax,%eax
    5f0d:	89 c1                	mov    %eax,%ecx
    5f0f:	48 8d 05 ea 40 03 00 	lea    0x340ea(%rip),%rax        # 3a000 <Te0>
    5f16:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5f1a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5f21:	00 00 00 
    5f24:	41 ff d6             	call   *%r14
    5f27:	41 8b 06             	mov    (%r14),%eax
    5f2a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5f2e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5f35:	00 00 00 
    5f38:	41 ff d6             	call   *%r14
    5f3b:	41 8b 0e             	mov    (%r14),%ecx
    5f3e:	c1 e9 10             	shr    $0x10,%ecx
    5f41:	e9 42 00 00 00       	jmp    5f88 <AES_encrypt.17>
    5f46:	66 90                	xchg   %ax,%ax

0000000000005f48 <AES_encrypt.dummy.18>:
    5f48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f4f:	02 00 00 
    5f52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f59:	02 00 00 
    5f5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f63:	02 00 00 
    5f66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f6d:	02 00 00 
    5f70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f77:	02 00 00 
    5f7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f81:	02 00 00 
    5f84:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005f88 <AES_encrypt.17>:
    5f88:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5f8e:	89 c9                	mov    %ecx,%ecx
    5f90:	89 ca                	mov    %ecx,%edx
    5f92:	48 8d 0d 67 44 03 00 	lea    0x34467(%rip),%rcx        # 3a400 <Te1>
    5f99:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5f9c:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5fa0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    5fa7:	00 00 00 
    5faa:	41 ff d6             	call   *%r14
    5fad:	41 8b 0e             	mov    (%r14),%ecx
    5fb0:	c1 e9 08             	shr    $0x8,%ecx
    5fb3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5fb9:	89 c9                	mov    %ecx,%ecx
    5fbb:	89 ca                	mov    %ecx,%edx
    5fbd:	e9 46 00 00 00       	jmp    6008 <AES_encrypt.18>
    5fc2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005fc8 <AES_encrypt.dummy.19>:
    5fc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fcf:	02 00 00 
    5fd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fd9:	02 00 00 
    5fdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fe3:	02 00 00 
    5fe6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fed:	02 00 00 
    5ff0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ff7:	02 00 00 
    5ffa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6001:	02 00 00 
    6004:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006008 <AES_encrypt.18>:
    6008:	48 8d 0d f1 47 03 00 	lea    0x347f1(%rip),%rcx        # 3a800 <Te2>
    600f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6012:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6016:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    601d:	00 00 00 
    6020:	41 ff d6             	call   *%r14
    6023:	41 8b 0e             	mov    (%r14),%ecx
    6026:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    602c:	89 c9                	mov    %ecx,%ecx
    602e:	89 ca                	mov    %ecx,%edx
    6030:	48 8d 0d c9 4b 03 00 	lea    0x34bc9(%rip),%rcx        # 3ac00 <Te3>
    6037:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    603a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    603e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6045:	00 00 00 
    6048:	41 ff d6             	call   *%r14
    604b:	49 8b 0e             	mov    (%r14),%rcx
    604e:	e9 49 00 00 00       	jmp    609c <AES_encrypt.19>
    6053:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    605a:	00 00 

000000000000605c <AES_encrypt.dummy.20>:
    605c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6063:	02 00 00 
    6066:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    606d:	02 00 00 
    6070:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6077:	02 00 00 
    607a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6081:	02 00 00 
    6084:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    608b:	02 00 00 
    608e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6095:	02 00 00 
    6098:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000609c <AES_encrypt.19>:
    609c:	33 41 18             	xor    0x18(%rcx),%eax
    609f:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    60a3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    60aa:	00 00 00 
    60ad:	41 ff d6             	call   *%r14
    60b0:	41 89 06             	mov    %eax,(%r14)
    60b3:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    60b7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    60be:	00 00 00 
    60c1:	41 ff d6             	call   *%r14
    60c4:	41 8b 06             	mov    (%r14),%eax
    60c7:	c1 e8 18             	shr    $0x18,%eax
    60ca:	89 c0                	mov    %eax,%eax
    60cc:	89 c1                	mov    %eax,%ecx
    60ce:	48 8d 05 2b 3f 03 00 	lea    0x33f2b(%rip),%rax        # 3a000 <Te0>
    60d5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    60d9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    60e0:	00 00 00 
    60e3:	41 ff d6             	call   *%r14
    60e6:	41 8b 06             	mov    (%r14),%eax
    60e9:	e9 42 00 00 00       	jmp    6130 <AES_encrypt.20>
    60ee:	66 90                	xchg   %ax,%ax

00000000000060f0 <AES_encrypt.dummy.21>:
    60f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60f7:	02 00 00 
    60fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6101:	02 00 00 
    6104:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    610b:	02 00 00 
    610e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6115:	02 00 00 
    6118:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    611f:	02 00 00 
    6122:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6129:	02 00 00 
    612c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006130 <AES_encrypt.20>:
    6130:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6134:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    613b:	00 00 00 
    613e:	41 ff d6             	call   *%r14
    6141:	41 8b 0e             	mov    (%r14),%ecx
    6144:	c1 e9 10             	shr    $0x10,%ecx
    6147:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    614d:	89 c9                	mov    %ecx,%ecx
    614f:	89 ca                	mov    %ecx,%edx
    6151:	48 8d 0d a8 42 03 00 	lea    0x342a8(%rip),%rcx        # 3a400 <Te1>
    6158:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    615b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    615f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6166:	00 00 00 
    6169:	41 ff d6             	call   *%r14
    616c:	41 8b 0e             	mov    (%r14),%ecx
    616f:	e9 50 00 00 00       	jmp    61c4 <AES_encrypt.21>
    6174:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    617b:	02 00 00 
    617e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006184 <AES_encrypt.dummy.22>:
    6184:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    618b:	02 00 00 
    618e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6195:	02 00 00 
    6198:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    619f:	02 00 00 
    61a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61a9:	02 00 00 
    61ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61b3:	02 00 00 
    61b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61bd:	02 00 00 
    61c0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000061c4 <AES_encrypt.21>:
    61c4:	c1 e9 08             	shr    $0x8,%ecx
    61c7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    61cd:	89 c9                	mov    %ecx,%ecx
    61cf:	89 ca                	mov    %ecx,%edx
    61d1:	48 8d 0d 28 46 03 00 	lea    0x34628(%rip),%rcx        # 3a800 <Te2>
    61d8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    61db:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    61df:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    61e6:	00 00 00 
    61e9:	41 ff d6             	call   *%r14
    61ec:	41 8b 0e             	mov    (%r14),%ecx
    61ef:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    61f5:	89 c9                	mov    %ecx,%ecx
    61f7:	89 ca                	mov    %ecx,%edx
    61f9:	e9 46 00 00 00       	jmp    6244 <AES_encrypt.22>
    61fe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006204 <AES_encrypt.dummy.23>:
    6204:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    620b:	02 00 00 
    620e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6215:	02 00 00 
    6218:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    621f:	02 00 00 
    6222:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6229:	02 00 00 
    622c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6233:	02 00 00 
    6236:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    623d:	02 00 00 
    6240:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006244 <AES_encrypt.22>:
    6244:	48 8d 0d b5 49 03 00 	lea    0x349b5(%rip),%rcx        # 3ac00 <Te3>
    624b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    624e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6252:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6259:	00 00 00 
    625c:	41 ff d6             	call   *%r14
    625f:	49 8b 0e             	mov    (%r14),%rcx
    6262:	33 41 1c             	xor    0x1c(%rcx),%eax
    6265:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    6269:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6270:	00 00 00 
    6273:	41 ff d6             	call   *%r14
    6276:	41 89 06             	mov    %eax,(%r14)
    6279:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    627d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6284:	00 00 00 
    6287:	41 ff d6             	call   *%r14
    628a:	41 8b 06             	mov    (%r14),%eax
    628d:	e9 46 00 00 00       	jmp    62d8 <AES_encrypt.23>
    6292:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006298 <AES_encrypt.dummy.24>:
    6298:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    629f:	02 00 00 
    62a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62a9:	02 00 00 
    62ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62b3:	02 00 00 
    62b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62bd:	02 00 00 
    62c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62c7:	02 00 00 
    62ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62d1:	02 00 00 
    62d4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000062d8 <AES_encrypt.23>:
    62d8:	c1 e8 18             	shr    $0x18,%eax
    62db:	89 c0                	mov    %eax,%eax
    62dd:	89 c1                	mov    %eax,%ecx
    62df:	48 8d 05 1a 3d 03 00 	lea    0x33d1a(%rip),%rax        # 3a000 <Te0>
    62e6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    62ea:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    62f1:	00 00 00 
    62f4:	41 ff d6             	call   *%r14
    62f7:	41 8b 06             	mov    (%r14),%eax
    62fa:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    62fe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6305:	00 00 00 
    6308:	41 ff d6             	call   *%r14
    630b:	41 8b 0e             	mov    (%r14),%ecx
    630e:	c1 e9 10             	shr    $0x10,%ecx
    6311:	e9 42 00 00 00       	jmp    6358 <AES_encrypt.24>
    6316:	66 90                	xchg   %ax,%ax

0000000000006318 <AES_encrypt.dummy.25>:
    6318:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    631f:	02 00 00 
    6322:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6329:	02 00 00 
    632c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6333:	02 00 00 
    6336:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    633d:	02 00 00 
    6340:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6347:	02 00 00 
    634a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6351:	02 00 00 
    6354:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006358 <AES_encrypt.24>:
    6358:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    635e:	89 c9                	mov    %ecx,%ecx
    6360:	89 ca                	mov    %ecx,%edx
    6362:	48 8d 0d 97 40 03 00 	lea    0x34097(%rip),%rcx        # 3a400 <Te1>
    6369:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    636c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6370:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6377:	00 00 00 
    637a:	41 ff d6             	call   *%r14
    637d:	41 8b 0e             	mov    (%r14),%ecx
    6380:	c1 e9 08             	shr    $0x8,%ecx
    6383:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6389:	89 c9                	mov    %ecx,%ecx
    638b:	89 ca                	mov    %ecx,%edx
    638d:	e9 46 00 00 00       	jmp    63d8 <AES_encrypt.25>
    6392:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006398 <AES_encrypt.dummy.26>:
    6398:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    639f:	02 00 00 
    63a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63a9:	02 00 00 
    63ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63b3:	02 00 00 
    63b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63bd:	02 00 00 
    63c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63c7:	02 00 00 
    63ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63d1:	02 00 00 
    63d4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000063d8 <AES_encrypt.25>:
    63d8:	48 8d 0d 21 44 03 00 	lea    0x34421(%rip),%rcx        # 3a800 <Te2>
    63df:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    63e2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    63e6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    63ed:	00 00 00 
    63f0:	41 ff d6             	call   *%r14
    63f3:	41 8b 0e             	mov    (%r14),%ecx
    63f6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    63fc:	89 c9                	mov    %ecx,%ecx
    63fe:	89 ca                	mov    %ecx,%edx
    6400:	48 8d 0d f9 47 03 00 	lea    0x347f9(%rip),%rcx        # 3ac00 <Te3>
    6407:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    640a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    640e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6415:	00 00 00 
    6418:	41 ff d6             	call   *%r14
    641b:	49 8b 0e             	mov    (%r14),%rcx
    641e:	e9 49 00 00 00       	jmp    646c <AES_encrypt.26>
    6423:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    642a:	00 00 

000000000000642c <AES_encrypt.dummy.27>:
    642c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6433:	02 00 00 
    6436:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    643d:	02 00 00 
    6440:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6447:	02 00 00 
    644a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6451:	02 00 00 
    6454:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    645b:	02 00 00 
    645e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6465:	02 00 00 
    6468:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000646c <AES_encrypt.26>:
    646c:	33 41 20             	xor    0x20(%rcx),%eax
    646f:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6473:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    647a:	00 00 00 
    647d:	41 ff d6             	call   *%r14
    6480:	41 89 06             	mov    %eax,(%r14)
    6483:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6487:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    648e:	00 00 00 
    6491:	41 ff d6             	call   *%r14
    6494:	41 8b 06             	mov    (%r14),%eax
    6497:	c1 e8 18             	shr    $0x18,%eax
    649a:	89 c0                	mov    %eax,%eax
    649c:	89 c1                	mov    %eax,%ecx
    649e:	48 8d 05 5b 3b 03 00 	lea    0x33b5b(%rip),%rax        # 3a000 <Te0>
    64a5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    64a9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    64b0:	00 00 00 
    64b3:	41 ff d6             	call   *%r14
    64b6:	41 8b 06             	mov    (%r14),%eax
    64b9:	e9 42 00 00 00       	jmp    6500 <AES_encrypt.27>
    64be:	66 90                	xchg   %ax,%ax

00000000000064c0 <AES_encrypt.dummy.28>:
    64c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64c7:	02 00 00 
    64ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64d1:	02 00 00 
    64d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64db:	02 00 00 
    64de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64e5:	02 00 00 
    64e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64ef:	02 00 00 
    64f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64f9:	02 00 00 
    64fc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006500 <AES_encrypt.27>:
    6500:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6504:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    650b:	00 00 00 
    650e:	41 ff d6             	call   *%r14
    6511:	41 8b 0e             	mov    (%r14),%ecx
    6514:	c1 e9 10             	shr    $0x10,%ecx
    6517:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    651d:	89 c9                	mov    %ecx,%ecx
    651f:	89 ca                	mov    %ecx,%edx
    6521:	48 8d 0d d8 3e 03 00 	lea    0x33ed8(%rip),%rcx        # 3a400 <Te1>
    6528:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    652b:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    652f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6536:	00 00 00 
    6539:	41 ff d6             	call   *%r14
    653c:	41 8b 0e             	mov    (%r14),%ecx
    653f:	e9 50 00 00 00       	jmp    6594 <AES_encrypt.28>
    6544:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    654b:	02 00 00 
    654e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006554 <AES_encrypt.dummy.29>:
    6554:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    655b:	02 00 00 
    655e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6565:	02 00 00 
    6568:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    656f:	02 00 00 
    6572:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6579:	02 00 00 
    657c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6583:	02 00 00 
    6586:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    658d:	02 00 00 
    6590:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006594 <AES_encrypt.28>:
    6594:	c1 e9 08             	shr    $0x8,%ecx
    6597:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    659d:	89 c9                	mov    %ecx,%ecx
    659f:	89 ca                	mov    %ecx,%edx
    65a1:	48 8d 0d 58 42 03 00 	lea    0x34258(%rip),%rcx        # 3a800 <Te2>
    65a8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    65ab:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    65af:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    65b6:	00 00 00 
    65b9:	41 ff d6             	call   *%r14
    65bc:	41 8b 0e             	mov    (%r14),%ecx
    65bf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    65c5:	89 c9                	mov    %ecx,%ecx
    65c7:	89 ca                	mov    %ecx,%edx
    65c9:	e9 46 00 00 00       	jmp    6614 <AES_encrypt.29>
    65ce:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000065d4 <AES_encrypt.dummy.30>:
    65d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65db:	02 00 00 
    65de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65e5:	02 00 00 
    65e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65ef:	02 00 00 
    65f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65f9:	02 00 00 
    65fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6603:	02 00 00 
    6606:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    660d:	02 00 00 
    6610:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006614 <AES_encrypt.29>:
    6614:	48 8d 0d e5 45 03 00 	lea    0x345e5(%rip),%rcx        # 3ac00 <Te3>
    661b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    661e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6622:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6629:	00 00 00 
    662c:	41 ff d6             	call   *%r14
    662f:	49 8b 0e             	mov    (%r14),%rcx
    6632:	33 41 24             	xor    0x24(%rcx),%eax
    6635:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6639:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6640:	00 00 00 
    6643:	41 ff d6             	call   *%r14
    6646:	41 89 06             	mov    %eax,(%r14)
    6649:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    664d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6654:	00 00 00 
    6657:	41 ff d6             	call   *%r14
    665a:	41 8b 06             	mov    (%r14),%eax
    665d:	e9 46 00 00 00       	jmp    66a8 <AES_encrypt.30>
    6662:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006668 <AES_encrypt.dummy.31>:
    6668:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    666f:	02 00 00 
    6672:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6679:	02 00 00 
    667c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6683:	02 00 00 
    6686:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    668d:	02 00 00 
    6690:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6697:	02 00 00 
    669a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66a1:	02 00 00 
    66a4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000066a8 <AES_encrypt.30>:
    66a8:	c1 e8 18             	shr    $0x18,%eax
    66ab:	89 c0                	mov    %eax,%eax
    66ad:	89 c1                	mov    %eax,%ecx
    66af:	48 8d 05 4a 39 03 00 	lea    0x3394a(%rip),%rax        # 3a000 <Te0>
    66b6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    66ba:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    66c1:	00 00 00 
    66c4:	41 ff d6             	call   *%r14
    66c7:	41 8b 06             	mov    (%r14),%eax
    66ca:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    66ce:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    66d5:	00 00 00 
    66d8:	41 ff d6             	call   *%r14
    66db:	41 8b 0e             	mov    (%r14),%ecx
    66de:	c1 e9 10             	shr    $0x10,%ecx
    66e1:	e9 42 00 00 00       	jmp    6728 <AES_encrypt.31>
    66e6:	66 90                	xchg   %ax,%ax

00000000000066e8 <AES_encrypt.dummy.32>:
    66e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66ef:	02 00 00 
    66f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66f9:	02 00 00 
    66fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6703:	02 00 00 
    6706:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    670d:	02 00 00 
    6710:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6717:	02 00 00 
    671a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6721:	02 00 00 
    6724:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006728 <AES_encrypt.31>:
    6728:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    672e:	89 c9                	mov    %ecx,%ecx
    6730:	89 ca                	mov    %ecx,%edx
    6732:	48 8d 0d c7 3c 03 00 	lea    0x33cc7(%rip),%rcx        # 3a400 <Te1>
    6739:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    673c:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    6740:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6747:	00 00 00 
    674a:	41 ff d6             	call   *%r14
    674d:	41 8b 0e             	mov    (%r14),%ecx
    6750:	c1 e9 08             	shr    $0x8,%ecx
    6753:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6759:	89 c9                	mov    %ecx,%ecx
    675b:	89 ca                	mov    %ecx,%edx
    675d:	e9 46 00 00 00       	jmp    67a8 <AES_encrypt.32>
    6762:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006768 <AES_encrypt.dummy.33>:
    6768:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    676f:	02 00 00 
    6772:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6779:	02 00 00 
    677c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6783:	02 00 00 
    6786:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    678d:	02 00 00 
    6790:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6797:	02 00 00 
    679a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67a1:	02 00 00 
    67a4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000067a8 <AES_encrypt.32>:
    67a8:	48 8d 0d 51 40 03 00 	lea    0x34051(%rip),%rcx        # 3a800 <Te2>
    67af:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    67b2:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    67b6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    67bd:	00 00 00 
    67c0:	41 ff d6             	call   *%r14
    67c3:	41 8b 0e             	mov    (%r14),%ecx
    67c6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    67cc:	89 c9                	mov    %ecx,%ecx
    67ce:	89 ca                	mov    %ecx,%edx
    67d0:	48 8d 0d 29 44 03 00 	lea    0x34429(%rip),%rcx        # 3ac00 <Te3>
    67d7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    67da:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    67de:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    67e5:	00 00 00 
    67e8:	41 ff d6             	call   *%r14
    67eb:	49 8b 0e             	mov    (%r14),%rcx
    67ee:	e9 49 00 00 00       	jmp    683c <AES_encrypt.33>
    67f3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    67fa:	00 00 

00000000000067fc <AES_encrypt.dummy.34>:
    67fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6803:	02 00 00 
    6806:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    680d:	02 00 00 
    6810:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6817:	02 00 00 
    681a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6821:	02 00 00 
    6824:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    682b:	02 00 00 
    682e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6835:	02 00 00 
    6838:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000683c <AES_encrypt.33>:
    683c:	33 41 28             	xor    0x28(%rcx),%eax
    683f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6843:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    684a:	00 00 00 
    684d:	41 ff d6             	call   *%r14
    6850:	41 89 06             	mov    %eax,(%r14)
    6853:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    6857:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    685e:	00 00 00 
    6861:	41 ff d6             	call   *%r14
    6864:	41 8b 06             	mov    (%r14),%eax
    6867:	c1 e8 18             	shr    $0x18,%eax
    686a:	89 c0                	mov    %eax,%eax
    686c:	89 c1                	mov    %eax,%ecx
    686e:	48 8d 05 8b 37 03 00 	lea    0x3378b(%rip),%rax        # 3a000 <Te0>
    6875:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6879:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6880:	00 00 00 
    6883:	41 ff d6             	call   *%r14
    6886:	41 8b 06             	mov    (%r14),%eax
    6889:	e9 42 00 00 00       	jmp    68d0 <AES_encrypt.34>
    688e:	66 90                	xchg   %ax,%ax

0000000000006890 <AES_encrypt.dummy.35>:
    6890:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6897:	02 00 00 
    689a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68a1:	02 00 00 
    68a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68ab:	02 00 00 
    68ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68b5:	02 00 00 
    68b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68bf:	02 00 00 
    68c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68c9:	02 00 00 
    68cc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000068d0 <AES_encrypt.34>:
    68d0:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    68d4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    68db:	00 00 00 
    68de:	41 ff d6             	call   *%r14
    68e1:	41 8b 0e             	mov    (%r14),%ecx
    68e4:	c1 e9 10             	shr    $0x10,%ecx
    68e7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    68ed:	89 c9                	mov    %ecx,%ecx
    68ef:	89 ca                	mov    %ecx,%edx
    68f1:	48 8d 0d 08 3b 03 00 	lea    0x33b08(%rip),%rcx        # 3a400 <Te1>
    68f8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    68fb:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    68ff:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6906:	00 00 00 
    6909:	41 ff d6             	call   *%r14
    690c:	41 8b 0e             	mov    (%r14),%ecx
    690f:	e9 50 00 00 00       	jmp    6964 <AES_encrypt.35>
    6914:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    691b:	02 00 00 
    691e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006924 <AES_encrypt.dummy.36>:
    6924:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    692b:	02 00 00 
    692e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6935:	02 00 00 
    6938:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    693f:	02 00 00 
    6942:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6949:	02 00 00 
    694c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6953:	02 00 00 
    6956:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    695d:	02 00 00 
    6960:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006964 <AES_encrypt.35>:
    6964:	c1 e9 08             	shr    $0x8,%ecx
    6967:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    696d:	89 c9                	mov    %ecx,%ecx
    696f:	89 ca                	mov    %ecx,%edx
    6971:	48 8d 0d 88 3e 03 00 	lea    0x33e88(%rip),%rcx        # 3a800 <Te2>
    6978:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    697b:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    697f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6986:	00 00 00 
    6989:	41 ff d6             	call   *%r14
    698c:	41 8b 0e             	mov    (%r14),%ecx
    698f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6995:	89 c9                	mov    %ecx,%ecx
    6997:	89 ca                	mov    %ecx,%edx
    6999:	e9 46 00 00 00       	jmp    69e4 <AES_encrypt.36>
    699e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000069a4 <AES_encrypt.dummy.37>:
    69a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69ab:	02 00 00 
    69ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69b5:	02 00 00 
    69b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69bf:	02 00 00 
    69c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69c9:	02 00 00 
    69cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69d3:	02 00 00 
    69d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69dd:	02 00 00 
    69e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000069e4 <AES_encrypt.36>:
    69e4:	48 8d 0d 15 42 03 00 	lea    0x34215(%rip),%rcx        # 3ac00 <Te3>
    69eb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    69ee:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    69f2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    69f9:	00 00 00 
    69fc:	41 ff d6             	call   *%r14
    69ff:	49 8b 0e             	mov    (%r14),%rcx
    6a02:	33 41 2c             	xor    0x2c(%rcx),%eax
    6a05:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6a09:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6a10:	00 00 00 
    6a13:	41 ff d6             	call   *%r14
    6a16:	41 89 06             	mov    %eax,(%r14)
    6a19:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6a1d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6a24:	00 00 00 
    6a27:	41 ff d6             	call   *%r14
    6a2a:	41 8b 06             	mov    (%r14),%eax
    6a2d:	e9 46 00 00 00       	jmp    6a78 <AES_encrypt.37>
    6a32:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006a38 <AES_encrypt.dummy.38>:
    6a38:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a3f:	02 00 00 
    6a42:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a49:	02 00 00 
    6a4c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a53:	02 00 00 
    6a56:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a5d:	02 00 00 
    6a60:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a67:	02 00 00 
    6a6a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a71:	02 00 00 
    6a74:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006a78 <AES_encrypt.37>:
    6a78:	c1 e8 18             	shr    $0x18,%eax
    6a7b:	89 c0                	mov    %eax,%eax
    6a7d:	89 c1                	mov    %eax,%ecx
    6a7f:	48 8d 05 7a 35 03 00 	lea    0x3357a(%rip),%rax        # 3a000 <Te0>
    6a86:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6a8a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6a91:	00 00 00 
    6a94:	41 ff d6             	call   *%r14
    6a97:	41 8b 06             	mov    (%r14),%eax
    6a9a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6a9e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6aa5:	00 00 00 
    6aa8:	41 ff d6             	call   *%r14
    6aab:	41 8b 0e             	mov    (%r14),%ecx
    6aae:	c1 e9 10             	shr    $0x10,%ecx
    6ab1:	e9 42 00 00 00       	jmp    6af8 <AES_encrypt.38>
    6ab6:	66 90                	xchg   %ax,%ax

0000000000006ab8 <AES_encrypt.dummy.39>:
    6ab8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6abf:	02 00 00 
    6ac2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ac9:	02 00 00 
    6acc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ad3:	02 00 00 
    6ad6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6add:	02 00 00 
    6ae0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ae7:	02 00 00 
    6aea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6af1:	02 00 00 
    6af4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006af8 <AES_encrypt.38>:
    6af8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6afe:	89 c9                	mov    %ecx,%ecx
    6b00:	89 ca                	mov    %ecx,%edx
    6b02:	48 8d 0d f7 38 03 00 	lea    0x338f7(%rip),%rcx        # 3a400 <Te1>
    6b09:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6b0c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6b10:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6b17:	00 00 00 
    6b1a:	41 ff d6             	call   *%r14
    6b1d:	41 8b 0e             	mov    (%r14),%ecx
    6b20:	c1 e9 08             	shr    $0x8,%ecx
    6b23:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6b29:	89 c9                	mov    %ecx,%ecx
    6b2b:	89 ca                	mov    %ecx,%edx
    6b2d:	e9 46 00 00 00       	jmp    6b78 <AES_encrypt.39>
    6b32:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006b38 <AES_encrypt.dummy.40>:
    6b38:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b3f:	02 00 00 
    6b42:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b49:	02 00 00 
    6b4c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b53:	02 00 00 
    6b56:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b5d:	02 00 00 
    6b60:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b67:	02 00 00 
    6b6a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b71:	02 00 00 
    6b74:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006b78 <AES_encrypt.39>:
    6b78:	48 8d 0d 81 3c 03 00 	lea    0x33c81(%rip),%rcx        # 3a800 <Te2>
    6b7f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6b82:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6b86:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6b8d:	00 00 00 
    6b90:	41 ff d6             	call   *%r14
    6b93:	41 8b 0e             	mov    (%r14),%ecx
    6b96:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6b9c:	89 c9                	mov    %ecx,%ecx
    6b9e:	89 ca                	mov    %ecx,%edx
    6ba0:	48 8d 0d 59 40 03 00 	lea    0x34059(%rip),%rcx        # 3ac00 <Te3>
    6ba7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6baa:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6bae:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6bb5:	00 00 00 
    6bb8:	41 ff d6             	call   *%r14
    6bbb:	49 8b 0e             	mov    (%r14),%rcx
    6bbe:	e9 49 00 00 00       	jmp    6c0c <AES_encrypt.40>
    6bc3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    6bca:	00 00 

0000000000006bcc <AES_encrypt.dummy.41>:
    6bcc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bd3:	02 00 00 
    6bd6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bdd:	02 00 00 
    6be0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6be7:	02 00 00 
    6bea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bf1:	02 00 00 
    6bf4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bfb:	02 00 00 
    6bfe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c05:	02 00 00 
    6c08:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006c0c <AES_encrypt.40>:
    6c0c:	33 41 30             	xor    0x30(%rcx),%eax
    6c0f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    6c13:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6c1a:	00 00 00 
    6c1d:	41 ff d6             	call   *%r14
    6c20:	41 89 06             	mov    %eax,(%r14)
    6c23:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6c27:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6c2e:	00 00 00 
    6c31:	41 ff d6             	call   *%r14
    6c34:	41 8b 06             	mov    (%r14),%eax
    6c37:	c1 e8 18             	shr    $0x18,%eax
    6c3a:	89 c0                	mov    %eax,%eax
    6c3c:	89 c1                	mov    %eax,%ecx
    6c3e:	48 8d 05 bb 33 03 00 	lea    0x333bb(%rip),%rax        # 3a000 <Te0>
    6c45:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6c49:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6c50:	00 00 00 
    6c53:	41 ff d6             	call   *%r14
    6c56:	41 8b 06             	mov    (%r14),%eax
    6c59:	e9 42 00 00 00       	jmp    6ca0 <AES_encrypt.41>
    6c5e:	66 90                	xchg   %ax,%ax

0000000000006c60 <AES_encrypt.dummy.42>:
    6c60:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c67:	02 00 00 
    6c6a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c71:	02 00 00 
    6c74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c7b:	02 00 00 
    6c7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c85:	02 00 00 
    6c88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c8f:	02 00 00 
    6c92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c99:	02 00 00 
    6c9c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006ca0 <AES_encrypt.41>:
    6ca0:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6ca4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6cab:	00 00 00 
    6cae:	41 ff d6             	call   *%r14
    6cb1:	41 8b 0e             	mov    (%r14),%ecx
    6cb4:	c1 e9 10             	shr    $0x10,%ecx
    6cb7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6cbd:	89 c9                	mov    %ecx,%ecx
    6cbf:	89 ca                	mov    %ecx,%edx
    6cc1:	48 8d 0d 38 37 03 00 	lea    0x33738(%rip),%rcx        # 3a400 <Te1>
    6cc8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6ccb:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6ccf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6cd6:	00 00 00 
    6cd9:	41 ff d6             	call   *%r14
    6cdc:	41 8b 0e             	mov    (%r14),%ecx
    6cdf:	e9 50 00 00 00       	jmp    6d34 <AES_encrypt.42>
    6ce4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ceb:	02 00 00 
    6cee:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006cf4 <AES_encrypt.dummy.43>:
    6cf4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cfb:	02 00 00 
    6cfe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d05:	02 00 00 
    6d08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d0f:	02 00 00 
    6d12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d19:	02 00 00 
    6d1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d23:	02 00 00 
    6d26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d2d:	02 00 00 
    6d30:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006d34 <AES_encrypt.42>:
    6d34:	c1 e9 08             	shr    $0x8,%ecx
    6d37:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6d3d:	89 c9                	mov    %ecx,%ecx
    6d3f:	89 ca                	mov    %ecx,%edx
    6d41:	48 8d 0d b8 3a 03 00 	lea    0x33ab8(%rip),%rcx        # 3a800 <Te2>
    6d48:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6d4b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6d4f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6d56:	00 00 00 
    6d59:	41 ff d6             	call   *%r14
    6d5c:	41 8b 0e             	mov    (%r14),%ecx
    6d5f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6d65:	89 c9                	mov    %ecx,%ecx
    6d67:	89 ca                	mov    %ecx,%edx
    6d69:	e9 46 00 00 00       	jmp    6db4 <AES_encrypt.43>
    6d6e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006d74 <AES_encrypt.dummy.44>:
    6d74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d7b:	02 00 00 
    6d7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d85:	02 00 00 
    6d88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d8f:	02 00 00 
    6d92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d99:	02 00 00 
    6d9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6da3:	02 00 00 
    6da6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6dad:	02 00 00 
    6db0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006db4 <AES_encrypt.43>:
    6db4:	48 8d 0d 45 3e 03 00 	lea    0x33e45(%rip),%rcx        # 3ac00 <Te3>
    6dbb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6dbe:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6dc2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6dc9:	00 00 00 
    6dcc:	41 ff d6             	call   *%r14
    6dcf:	49 8b 0e             	mov    (%r14),%rcx
    6dd2:	33 41 34             	xor    0x34(%rcx),%eax
    6dd5:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6dd9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6de0:	00 00 00 
    6de3:	41 ff d6             	call   *%r14
    6de6:	41 89 06             	mov    %eax,(%r14)
    6de9:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6ded:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6df4:	00 00 00 
    6df7:	41 ff d6             	call   *%r14
    6dfa:	41 8b 06             	mov    (%r14),%eax
    6dfd:	e9 46 00 00 00       	jmp    6e48 <AES_encrypt.44>
    6e02:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006e08 <AES_encrypt.dummy.45>:
    6e08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e0f:	02 00 00 
    6e12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e19:	02 00 00 
    6e1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e23:	02 00 00 
    6e26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e2d:	02 00 00 
    6e30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e37:	02 00 00 
    6e3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e41:	02 00 00 
    6e44:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006e48 <AES_encrypt.44>:
    6e48:	c1 e8 18             	shr    $0x18,%eax
    6e4b:	89 c0                	mov    %eax,%eax
    6e4d:	89 c1                	mov    %eax,%ecx
    6e4f:	48 8d 05 aa 31 03 00 	lea    0x331aa(%rip),%rax        # 3a000 <Te0>
    6e56:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6e5a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6e61:	00 00 00 
    6e64:	41 ff d6             	call   *%r14
    6e67:	41 8b 06             	mov    (%r14),%eax
    6e6a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6e6e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6e75:	00 00 00 
    6e78:	41 ff d6             	call   *%r14
    6e7b:	41 8b 0e             	mov    (%r14),%ecx
    6e7e:	c1 e9 10             	shr    $0x10,%ecx
    6e81:	e9 42 00 00 00       	jmp    6ec8 <AES_encrypt.45>
    6e86:	66 90                	xchg   %ax,%ax

0000000000006e88 <AES_encrypt.dummy.46>:
    6e88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e8f:	02 00 00 
    6e92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e99:	02 00 00 
    6e9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ea3:	02 00 00 
    6ea6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ead:	02 00 00 
    6eb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6eb7:	02 00 00 
    6eba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ec1:	02 00 00 
    6ec4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006ec8 <AES_encrypt.45>:
    6ec8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6ece:	89 c9                	mov    %ecx,%ecx
    6ed0:	89 ca                	mov    %ecx,%edx
    6ed2:	48 8d 0d 27 35 03 00 	lea    0x33527(%rip),%rcx        # 3a400 <Te1>
    6ed9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6edc:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6ee0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6ee7:	00 00 00 
    6eea:	41 ff d6             	call   *%r14
    6eed:	41 8b 0e             	mov    (%r14),%ecx
    6ef0:	c1 e9 08             	shr    $0x8,%ecx
    6ef3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6ef9:	89 c9                	mov    %ecx,%ecx
    6efb:	89 ca                	mov    %ecx,%edx
    6efd:	e9 46 00 00 00       	jmp    6f48 <AES_encrypt.46>
    6f02:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006f08 <AES_encrypt.dummy.47>:
    6f08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f0f:	02 00 00 
    6f12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f19:	02 00 00 
    6f1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f23:	02 00 00 
    6f26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f2d:	02 00 00 
    6f30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f37:	02 00 00 
    6f3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f41:	02 00 00 
    6f44:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006f48 <AES_encrypt.46>:
    6f48:	48 8d 0d b1 38 03 00 	lea    0x338b1(%rip),%rcx        # 3a800 <Te2>
    6f4f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6f52:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6f56:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6f5d:	00 00 00 
    6f60:	41 ff d6             	call   *%r14
    6f63:	41 8b 0e             	mov    (%r14),%ecx
    6f66:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6f6c:	89 c9                	mov    %ecx,%ecx
    6f6e:	89 ca                	mov    %ecx,%edx
    6f70:	48 8d 0d 89 3c 03 00 	lea    0x33c89(%rip),%rcx        # 3ac00 <Te3>
    6f77:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6f7a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6f7e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6f85:	00 00 00 
    6f88:	41 ff d6             	call   *%r14
    6f8b:	49 8b 0e             	mov    (%r14),%rcx
    6f8e:	e9 49 00 00 00       	jmp    6fdc <AES_encrypt.47>
    6f93:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    6f9a:	00 00 

0000000000006f9c <AES_encrypt.dummy.48>:
    6f9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fa3:	02 00 00 
    6fa6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fad:	02 00 00 
    6fb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fb7:	02 00 00 
    6fba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fc1:	02 00 00 
    6fc4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fcb:	02 00 00 
    6fce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fd5:	02 00 00 
    6fd8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006fdc <AES_encrypt.47>:
    6fdc:	33 41 38             	xor    0x38(%rcx),%eax
    6fdf:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6fe3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6fea:	00 00 00 
    6fed:	41 ff d6             	call   *%r14
    6ff0:	41 89 06             	mov    %eax,(%r14)
    6ff3:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6ff7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    6ffe:	00 00 00 
    7001:	41 ff d6             	call   *%r14
    7004:	41 8b 06             	mov    (%r14),%eax
    7007:	c1 e8 18             	shr    $0x18,%eax
    700a:	89 c0                	mov    %eax,%eax
    700c:	89 c1                	mov    %eax,%ecx
    700e:	48 8d 05 eb 2f 03 00 	lea    0x32feb(%rip),%rax        # 3a000 <Te0>
    7015:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7019:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7020:	00 00 00 
    7023:	41 ff d6             	call   *%r14
    7026:	41 8b 06             	mov    (%r14),%eax
    7029:	e9 42 00 00 00       	jmp    7070 <AES_encrypt.48>
    702e:	66 90                	xchg   %ax,%ax

0000000000007030 <AES_encrypt.dummy.49>:
    7030:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7037:	02 00 00 
    703a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7041:	02 00 00 
    7044:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    704b:	02 00 00 
    704e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7055:	02 00 00 
    7058:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    705f:	02 00 00 
    7062:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7069:	02 00 00 
    706c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007070 <AES_encrypt.48>:
    7070:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7074:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    707b:	00 00 00 
    707e:	41 ff d6             	call   *%r14
    7081:	41 8b 0e             	mov    (%r14),%ecx
    7084:	c1 e9 10             	shr    $0x10,%ecx
    7087:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    708d:	89 c9                	mov    %ecx,%ecx
    708f:	89 ca                	mov    %ecx,%edx
    7091:	48 8d 0d 68 33 03 00 	lea    0x33368(%rip),%rcx        # 3a400 <Te1>
    7098:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    709b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    709f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    70a6:	00 00 00 
    70a9:	41 ff d6             	call   *%r14
    70ac:	41 8b 0e             	mov    (%r14),%ecx
    70af:	e9 50 00 00 00       	jmp    7104 <AES_encrypt.49>
    70b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70bb:	02 00 00 
    70be:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000070c4 <AES_encrypt.dummy.50>:
    70c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70cb:	02 00 00 
    70ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70d5:	02 00 00 
    70d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70df:	02 00 00 
    70e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70e9:	02 00 00 
    70ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70f3:	02 00 00 
    70f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70fd:	02 00 00 
    7100:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007104 <AES_encrypt.49>:
    7104:	c1 e9 08             	shr    $0x8,%ecx
    7107:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    710d:	89 c9                	mov    %ecx,%ecx
    710f:	89 ca                	mov    %ecx,%edx
    7111:	48 8d 0d e8 36 03 00 	lea    0x336e8(%rip),%rcx        # 3a800 <Te2>
    7118:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    711b:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    711f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7126:	00 00 00 
    7129:	41 ff d6             	call   *%r14
    712c:	41 8b 0e             	mov    (%r14),%ecx
    712f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7135:	89 c9                	mov    %ecx,%ecx
    7137:	89 ca                	mov    %ecx,%edx
    7139:	e9 46 00 00 00       	jmp    7184 <AES_encrypt.50>
    713e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007144 <AES_encrypt.dummy.51>:
    7144:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    714b:	02 00 00 
    714e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7155:	02 00 00 
    7158:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    715f:	02 00 00 
    7162:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7169:	02 00 00 
    716c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7173:	02 00 00 
    7176:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    717d:	02 00 00 
    7180:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007184 <AES_encrypt.50>:
    7184:	48 8d 0d 75 3a 03 00 	lea    0x33a75(%rip),%rcx        # 3ac00 <Te3>
    718b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    718e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7192:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7199:	00 00 00 
    719c:	41 ff d6             	call   *%r14
    719f:	49 8b 0e             	mov    (%r14),%rcx
    71a2:	33 41 3c             	xor    0x3c(%rcx),%eax
    71a5:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    71a9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    71b0:	00 00 00 
    71b3:	41 ff d6             	call   *%r14
    71b6:	41 89 06             	mov    %eax,(%r14)
    71b9:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    71bd:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    71c4:	00 00 00 
    71c7:	41 ff d6             	call   *%r14
    71ca:	41 8b 06             	mov    (%r14),%eax
    71cd:	e9 46 00 00 00       	jmp    7218 <AES_encrypt.51>
    71d2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000071d8 <AES_encrypt.dummy.52>:
    71d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71df:	02 00 00 
    71e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71e9:	02 00 00 
    71ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71f3:	02 00 00 
    71f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71fd:	02 00 00 
    7200:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7207:	02 00 00 
    720a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7211:	02 00 00 
    7214:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007218 <AES_encrypt.51>:
    7218:	c1 e8 18             	shr    $0x18,%eax
    721b:	89 c0                	mov    %eax,%eax
    721d:	89 c1                	mov    %eax,%ecx
    721f:	48 8d 05 da 2d 03 00 	lea    0x32dda(%rip),%rax        # 3a000 <Te0>
    7226:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    722a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7231:	00 00 00 
    7234:	41 ff d6             	call   *%r14
    7237:	41 8b 06             	mov    (%r14),%eax
    723a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    723e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7245:	00 00 00 
    7248:	41 ff d6             	call   *%r14
    724b:	41 8b 0e             	mov    (%r14),%ecx
    724e:	c1 e9 10             	shr    $0x10,%ecx
    7251:	e9 42 00 00 00       	jmp    7298 <AES_encrypt.52>
    7256:	66 90                	xchg   %ax,%ax

0000000000007258 <AES_encrypt.dummy.53>:
    7258:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    725f:	02 00 00 
    7262:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7269:	02 00 00 
    726c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7273:	02 00 00 
    7276:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    727d:	02 00 00 
    7280:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7287:	02 00 00 
    728a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7291:	02 00 00 
    7294:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007298 <AES_encrypt.52>:
    7298:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    729e:	89 c9                	mov    %ecx,%ecx
    72a0:	89 ca                	mov    %ecx,%edx
    72a2:	48 8d 0d 57 31 03 00 	lea    0x33157(%rip),%rcx        # 3a400 <Te1>
    72a9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    72ac:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    72b0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    72b7:	00 00 00 
    72ba:	41 ff d6             	call   *%r14
    72bd:	41 8b 0e             	mov    (%r14),%ecx
    72c0:	c1 e9 08             	shr    $0x8,%ecx
    72c3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    72c9:	89 c9                	mov    %ecx,%ecx
    72cb:	89 ca                	mov    %ecx,%edx
    72cd:	e9 46 00 00 00       	jmp    7318 <AES_encrypt.53>
    72d2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000072d8 <AES_encrypt.dummy.54>:
    72d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72df:	02 00 00 
    72e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72e9:	02 00 00 
    72ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72f3:	02 00 00 
    72f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72fd:	02 00 00 
    7300:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7307:	02 00 00 
    730a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7311:	02 00 00 
    7314:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007318 <AES_encrypt.53>:
    7318:	48 8d 0d e1 34 03 00 	lea    0x334e1(%rip),%rcx        # 3a800 <Te2>
    731f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7322:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    7326:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    732d:	00 00 00 
    7330:	41 ff d6             	call   *%r14
    7333:	41 8b 0e             	mov    (%r14),%ecx
    7336:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    733c:	89 c9                	mov    %ecx,%ecx
    733e:	89 ca                	mov    %ecx,%edx
    7340:	48 8d 0d b9 38 03 00 	lea    0x338b9(%rip),%rcx        # 3ac00 <Te3>
    7347:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    734a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    734e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7355:	00 00 00 
    7358:	41 ff d6             	call   *%r14
    735b:	49 8b 0e             	mov    (%r14),%rcx
    735e:	e9 49 00 00 00       	jmp    73ac <AES_encrypt.54>
    7363:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    736a:	00 00 

000000000000736c <AES_encrypt.dummy.55>:
    736c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7373:	02 00 00 
    7376:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    737d:	02 00 00 
    7380:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7387:	02 00 00 
    738a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7391:	02 00 00 
    7394:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    739b:	02 00 00 
    739e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73a5:	02 00 00 
    73a8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000073ac <AES_encrypt.54>:
    73ac:	33 41 40             	xor    0x40(%rcx),%eax
    73af:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    73b3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    73ba:	00 00 00 
    73bd:	41 ff d6             	call   *%r14
    73c0:	41 89 06             	mov    %eax,(%r14)
    73c3:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    73c7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    73ce:	00 00 00 
    73d1:	41 ff d6             	call   *%r14
    73d4:	41 8b 06             	mov    (%r14),%eax
    73d7:	c1 e8 18             	shr    $0x18,%eax
    73da:	89 c0                	mov    %eax,%eax
    73dc:	89 c1                	mov    %eax,%ecx
    73de:	48 8d 05 1b 2c 03 00 	lea    0x32c1b(%rip),%rax        # 3a000 <Te0>
    73e5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    73e9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    73f0:	00 00 00 
    73f3:	41 ff d6             	call   *%r14
    73f6:	41 8b 06             	mov    (%r14),%eax
    73f9:	e9 42 00 00 00       	jmp    7440 <AES_encrypt.55>
    73fe:	66 90                	xchg   %ax,%ax

0000000000007400 <AES_encrypt.dummy.56>:
    7400:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7407:	02 00 00 
    740a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7411:	02 00 00 
    7414:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    741b:	02 00 00 
    741e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7425:	02 00 00 
    7428:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    742f:	02 00 00 
    7432:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7439:	02 00 00 
    743c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007440 <AES_encrypt.55>:
    7440:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    7444:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    744b:	00 00 00 
    744e:	41 ff d6             	call   *%r14
    7451:	41 8b 0e             	mov    (%r14),%ecx
    7454:	c1 e9 10             	shr    $0x10,%ecx
    7457:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    745d:	89 c9                	mov    %ecx,%ecx
    745f:	89 ca                	mov    %ecx,%edx
    7461:	48 8d 0d 98 2f 03 00 	lea    0x32f98(%rip),%rcx        # 3a400 <Te1>
    7468:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    746b:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    746f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7476:	00 00 00 
    7479:	41 ff d6             	call   *%r14
    747c:	41 8b 0e             	mov    (%r14),%ecx
    747f:	e9 50 00 00 00       	jmp    74d4 <AES_encrypt.56>
    7484:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    748b:	02 00 00 
    748e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007494 <AES_encrypt.dummy.57>:
    7494:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    749b:	02 00 00 
    749e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74a5:	02 00 00 
    74a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74af:	02 00 00 
    74b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74b9:	02 00 00 
    74bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74c3:	02 00 00 
    74c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74cd:	02 00 00 
    74d0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000074d4 <AES_encrypt.56>:
    74d4:	c1 e9 08             	shr    $0x8,%ecx
    74d7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    74dd:	89 c9                	mov    %ecx,%ecx
    74df:	89 ca                	mov    %ecx,%edx
    74e1:	48 8d 0d 18 33 03 00 	lea    0x33318(%rip),%rcx        # 3a800 <Te2>
    74e8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    74eb:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    74ef:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    74f6:	00 00 00 
    74f9:	41 ff d6             	call   *%r14
    74fc:	41 8b 0e             	mov    (%r14),%ecx
    74ff:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7505:	89 c9                	mov    %ecx,%ecx
    7507:	89 ca                	mov    %ecx,%edx
    7509:	e9 46 00 00 00       	jmp    7554 <AES_encrypt.57>
    750e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007514 <AES_encrypt.dummy.58>:
    7514:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    751b:	02 00 00 
    751e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7525:	02 00 00 
    7528:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    752f:	02 00 00 
    7532:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7539:	02 00 00 
    753c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7543:	02 00 00 
    7546:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    754d:	02 00 00 
    7550:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007554 <AES_encrypt.57>:
    7554:	48 8d 0d a5 36 03 00 	lea    0x336a5(%rip),%rcx        # 3ac00 <Te3>
    755b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    755e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7562:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7569:	00 00 00 
    756c:	41 ff d6             	call   *%r14
    756f:	49 8b 0e             	mov    (%r14),%rcx
    7572:	33 41 44             	xor    0x44(%rcx),%eax
    7575:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7579:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7580:	00 00 00 
    7583:	41 ff d6             	call   *%r14
    7586:	41 89 06             	mov    %eax,(%r14)
    7589:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    758d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7594:	00 00 00 
    7597:	41 ff d6             	call   *%r14
    759a:	41 8b 06             	mov    (%r14),%eax
    759d:	e9 46 00 00 00       	jmp    75e8 <AES_encrypt.58>
    75a2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000075a8 <AES_encrypt.dummy.59>:
    75a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75af:	02 00 00 
    75b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75b9:	02 00 00 
    75bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75c3:	02 00 00 
    75c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75cd:	02 00 00 
    75d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75d7:	02 00 00 
    75da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75e1:	02 00 00 
    75e4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000075e8 <AES_encrypt.58>:
    75e8:	c1 e8 18             	shr    $0x18,%eax
    75eb:	89 c0                	mov    %eax,%eax
    75ed:	89 c1                	mov    %eax,%ecx
    75ef:	48 8d 05 0a 2a 03 00 	lea    0x32a0a(%rip),%rax        # 3a000 <Te0>
    75f6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    75fa:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7601:	00 00 00 
    7604:	41 ff d6             	call   *%r14
    7607:	41 8b 06             	mov    (%r14),%eax
    760a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    760e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7615:	00 00 00 
    7618:	41 ff d6             	call   *%r14
    761b:	41 8b 0e             	mov    (%r14),%ecx
    761e:	c1 e9 10             	shr    $0x10,%ecx
    7621:	e9 42 00 00 00       	jmp    7668 <AES_encrypt.59>
    7626:	66 90                	xchg   %ax,%ax

0000000000007628 <AES_encrypt.dummy.60>:
    7628:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    762f:	02 00 00 
    7632:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7639:	02 00 00 
    763c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7643:	02 00 00 
    7646:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    764d:	02 00 00 
    7650:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7657:	02 00 00 
    765a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7661:	02 00 00 
    7664:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007668 <AES_encrypt.59>:
    7668:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    766e:	89 c9                	mov    %ecx,%ecx
    7670:	89 ca                	mov    %ecx,%edx
    7672:	48 8d 0d 87 2d 03 00 	lea    0x32d87(%rip),%rcx        # 3a400 <Te1>
    7679:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    767c:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    7680:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7687:	00 00 00 
    768a:	41 ff d6             	call   *%r14
    768d:	41 8b 0e             	mov    (%r14),%ecx
    7690:	c1 e9 08             	shr    $0x8,%ecx
    7693:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7699:	89 c9                	mov    %ecx,%ecx
    769b:	89 ca                	mov    %ecx,%edx
    769d:	e9 46 00 00 00       	jmp    76e8 <AES_encrypt.60>
    76a2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000076a8 <AES_encrypt.dummy.61>:
    76a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76af:	02 00 00 
    76b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76b9:	02 00 00 
    76bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76c3:	02 00 00 
    76c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76cd:	02 00 00 
    76d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76d7:	02 00 00 
    76da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76e1:	02 00 00 
    76e4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000076e8 <AES_encrypt.60>:
    76e8:	48 8d 0d 11 31 03 00 	lea    0x33111(%rip),%rcx        # 3a800 <Te2>
    76ef:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    76f2:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    76f6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    76fd:	00 00 00 
    7700:	41 ff d6             	call   *%r14
    7703:	41 8b 0e             	mov    (%r14),%ecx
    7706:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    770c:	89 c9                	mov    %ecx,%ecx
    770e:	89 ca                	mov    %ecx,%edx
    7710:	48 8d 0d e9 34 03 00 	lea    0x334e9(%rip),%rcx        # 3ac00 <Te3>
    7717:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    771a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    771e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7725:	00 00 00 
    7728:	41 ff d6             	call   *%r14
    772b:	49 8b 0e             	mov    (%r14),%rcx
    772e:	e9 49 00 00 00       	jmp    777c <AES_encrypt.61>
    7733:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    773a:	00 00 

000000000000773c <AES_encrypt.dummy.62>:
    773c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7743:	02 00 00 
    7746:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    774d:	02 00 00 
    7750:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7757:	02 00 00 
    775a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7761:	02 00 00 
    7764:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    776b:	02 00 00 
    776e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7775:	02 00 00 
    7778:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000777c <AES_encrypt.61>:
    777c:	33 41 48             	xor    0x48(%rcx),%eax
    777f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7783:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    778a:	00 00 00 
    778d:	41 ff d6             	call   *%r14
    7790:	41 89 06             	mov    %eax,(%r14)
    7793:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    7797:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    779e:	00 00 00 
    77a1:	41 ff d6             	call   *%r14
    77a4:	41 8b 06             	mov    (%r14),%eax
    77a7:	c1 e8 18             	shr    $0x18,%eax
    77aa:	89 c0                	mov    %eax,%eax
    77ac:	89 c1                	mov    %eax,%ecx
    77ae:	48 8d 05 4b 28 03 00 	lea    0x3284b(%rip),%rax        # 3a000 <Te0>
    77b5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    77b9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    77c0:	00 00 00 
    77c3:	41 ff d6             	call   *%r14
    77c6:	41 8b 06             	mov    (%r14),%eax
    77c9:	e9 42 00 00 00       	jmp    7810 <AES_encrypt.62>
    77ce:	66 90                	xchg   %ax,%ax

00000000000077d0 <AES_encrypt.dummy.63>:
    77d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77d7:	02 00 00 
    77da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77e1:	02 00 00 
    77e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77eb:	02 00 00 
    77ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77f5:	02 00 00 
    77f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77ff:	02 00 00 
    7802:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7809:	02 00 00 
    780c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007810 <AES_encrypt.62>:
    7810:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    7814:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    781b:	00 00 00 
    781e:	41 ff d6             	call   *%r14
    7821:	41 8b 0e             	mov    (%r14),%ecx
    7824:	c1 e9 10             	shr    $0x10,%ecx
    7827:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    782d:	89 c9                	mov    %ecx,%ecx
    782f:	89 ca                	mov    %ecx,%edx
    7831:	48 8d 0d c8 2b 03 00 	lea    0x32bc8(%rip),%rcx        # 3a400 <Te1>
    7838:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    783b:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    783f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7846:	00 00 00 
    7849:	41 ff d6             	call   *%r14
    784c:	41 8b 0e             	mov    (%r14),%ecx
    784f:	e9 50 00 00 00       	jmp    78a4 <AES_encrypt.63>
    7854:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    785b:	02 00 00 
    785e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007864 <AES_encrypt.dummy.64>:
    7864:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    786b:	02 00 00 
    786e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7875:	02 00 00 
    7878:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    787f:	02 00 00 
    7882:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7889:	02 00 00 
    788c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7893:	02 00 00 
    7896:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    789d:	02 00 00 
    78a0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000078a4 <AES_encrypt.63>:
    78a4:	c1 e9 08             	shr    $0x8,%ecx
    78a7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    78ad:	89 c9                	mov    %ecx,%ecx
    78af:	89 ca                	mov    %ecx,%edx
    78b1:	48 8d 0d 48 2f 03 00 	lea    0x32f48(%rip),%rcx        # 3a800 <Te2>
    78b8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    78bb:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    78bf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    78c6:	00 00 00 
    78c9:	41 ff d6             	call   *%r14
    78cc:	41 8b 0e             	mov    (%r14),%ecx
    78cf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    78d5:	89 c9                	mov    %ecx,%ecx
    78d7:	89 ca                	mov    %ecx,%edx
    78d9:	e9 46 00 00 00       	jmp    7924 <AES_encrypt.64>
    78de:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000078e4 <AES_encrypt.dummy.65>:
    78e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78eb:	02 00 00 
    78ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78f5:	02 00 00 
    78f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78ff:	02 00 00 
    7902:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7909:	02 00 00 
    790c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7913:	02 00 00 
    7916:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    791d:	02 00 00 
    7920:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007924 <AES_encrypt.64>:
    7924:	48 8d 0d d5 32 03 00 	lea    0x332d5(%rip),%rcx        # 3ac00 <Te3>
    792b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    792e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7932:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7939:	00 00 00 
    793c:	41 ff d6             	call   *%r14
    793f:	49 8b 0e             	mov    (%r14),%rcx
    7942:	33 41 4c             	xor    0x4c(%rcx),%eax
    7945:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7949:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7950:	00 00 00 
    7953:	41 ff d6             	call   *%r14
    7956:	41 89 06             	mov    %eax,(%r14)
    7959:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    795d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7964:	00 00 00 
    7967:	41 ff d6             	call   *%r14
    796a:	41 8b 06             	mov    (%r14),%eax
    796d:	e9 46 00 00 00       	jmp    79b8 <AES_encrypt.65>
    7972:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007978 <AES_encrypt.dummy.66>:
    7978:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    797f:	02 00 00 
    7982:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7989:	02 00 00 
    798c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7993:	02 00 00 
    7996:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    799d:	02 00 00 
    79a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79a7:	02 00 00 
    79aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79b1:	02 00 00 
    79b4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000079b8 <AES_encrypt.65>:
    79b8:	c1 e8 18             	shr    $0x18,%eax
    79bb:	89 c0                	mov    %eax,%eax
    79bd:	89 c1                	mov    %eax,%ecx
    79bf:	48 8d 05 3a 26 03 00 	lea    0x3263a(%rip),%rax        # 3a000 <Te0>
    79c6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    79ca:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    79d1:	00 00 00 
    79d4:	41 ff d6             	call   *%r14
    79d7:	41 8b 06             	mov    (%r14),%eax
    79da:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    79de:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    79e5:	00 00 00 
    79e8:	41 ff d6             	call   *%r14
    79eb:	41 8b 0e             	mov    (%r14),%ecx
    79ee:	c1 e9 10             	shr    $0x10,%ecx
    79f1:	e9 42 00 00 00       	jmp    7a38 <AES_encrypt.66>
    79f6:	66 90                	xchg   %ax,%ax

00000000000079f8 <AES_encrypt.dummy.67>:
    79f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79ff:	02 00 00 
    7a02:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a09:	02 00 00 
    7a0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a13:	02 00 00 
    7a16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a1d:	02 00 00 
    7a20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a27:	02 00 00 
    7a2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a31:	02 00 00 
    7a34:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007a38 <AES_encrypt.66>:
    7a38:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7a3e:	89 c9                	mov    %ecx,%ecx
    7a40:	89 ca                	mov    %ecx,%edx
    7a42:	48 8d 0d b7 29 03 00 	lea    0x329b7(%rip),%rcx        # 3a400 <Te1>
    7a49:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7a4c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7a50:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7a57:	00 00 00 
    7a5a:	41 ff d6             	call   *%r14
    7a5d:	41 8b 0e             	mov    (%r14),%ecx
    7a60:	c1 e9 08             	shr    $0x8,%ecx
    7a63:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7a69:	89 c9                	mov    %ecx,%ecx
    7a6b:	89 ca                	mov    %ecx,%edx
    7a6d:	e9 46 00 00 00       	jmp    7ab8 <AES_encrypt.67>
    7a72:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007a78 <AES_encrypt.dummy.68>:
    7a78:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a7f:	02 00 00 
    7a82:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a89:	02 00 00 
    7a8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a93:	02 00 00 
    7a96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a9d:	02 00 00 
    7aa0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7aa7:	02 00 00 
    7aaa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ab1:	02 00 00 
    7ab4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007ab8 <AES_encrypt.67>:
    7ab8:	48 8d 0d 41 2d 03 00 	lea    0x32d41(%rip),%rcx        # 3a800 <Te2>
    7abf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7ac2:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7ac6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7acd:	00 00 00 
    7ad0:	41 ff d6             	call   *%r14
    7ad3:	41 8b 0e             	mov    (%r14),%ecx
    7ad6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7adc:	89 c9                	mov    %ecx,%ecx
    7ade:	89 ca                	mov    %ecx,%edx
    7ae0:	48 8d 0d 19 31 03 00 	lea    0x33119(%rip),%rcx        # 3ac00 <Te3>
    7ae7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7aea:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7aee:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7af5:	00 00 00 
    7af8:	41 ff d6             	call   *%r14
    7afb:	49 8b 0e             	mov    (%r14),%rcx
    7afe:	e9 49 00 00 00       	jmp    7b4c <AES_encrypt.68>
    7b03:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    7b0a:	00 00 

0000000000007b0c <AES_encrypt.dummy.69>:
    7b0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b13:	02 00 00 
    7b16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b1d:	02 00 00 
    7b20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b27:	02 00 00 
    7b2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b31:	02 00 00 
    7b34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b3b:	02 00 00 
    7b3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b45:	02 00 00 
    7b48:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007b4c <AES_encrypt.68>:
    7b4c:	33 41 50             	xor    0x50(%rcx),%eax
    7b4f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    7b53:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7b5a:	00 00 00 
    7b5d:	41 ff d6             	call   *%r14
    7b60:	41 89 06             	mov    %eax,(%r14)
    7b63:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7b67:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7b6e:	00 00 00 
    7b71:	41 ff d6             	call   *%r14
    7b74:	41 8b 06             	mov    (%r14),%eax
    7b77:	c1 e8 18             	shr    $0x18,%eax
    7b7a:	89 c0                	mov    %eax,%eax
    7b7c:	89 c1                	mov    %eax,%ecx
    7b7e:	48 8d 05 7b 24 03 00 	lea    0x3247b(%rip),%rax        # 3a000 <Te0>
    7b85:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7b89:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7b90:	00 00 00 
    7b93:	41 ff d6             	call   *%r14
    7b96:	41 8b 06             	mov    (%r14),%eax
    7b99:	e9 42 00 00 00       	jmp    7be0 <AES_encrypt.69>
    7b9e:	66 90                	xchg   %ax,%ax

0000000000007ba0 <AES_encrypt.dummy.70>:
    7ba0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ba7:	02 00 00 
    7baa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7bb1:	02 00 00 
    7bb4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7bbb:	02 00 00 
    7bbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7bc5:	02 00 00 
    7bc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7bcf:	02 00 00 
    7bd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7bd9:	02 00 00 
    7bdc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007be0 <AES_encrypt.69>:
    7be0:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7be4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7beb:	00 00 00 
    7bee:	41 ff d6             	call   *%r14
    7bf1:	41 8b 0e             	mov    (%r14),%ecx
    7bf4:	c1 e9 10             	shr    $0x10,%ecx
    7bf7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7bfd:	89 c9                	mov    %ecx,%ecx
    7bff:	89 ca                	mov    %ecx,%edx
    7c01:	48 8d 0d f8 27 03 00 	lea    0x327f8(%rip),%rcx        # 3a400 <Te1>
    7c08:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7c0b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7c0f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7c16:	00 00 00 
    7c19:	41 ff d6             	call   *%r14
    7c1c:	41 8b 0e             	mov    (%r14),%ecx
    7c1f:	e9 50 00 00 00       	jmp    7c74 <AES_encrypt.70>
    7c24:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c2b:	02 00 00 
    7c2e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007c34 <AES_encrypt.dummy.71>:
    7c34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c3b:	02 00 00 
    7c3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c45:	02 00 00 
    7c48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c4f:	02 00 00 
    7c52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c59:	02 00 00 
    7c5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c63:	02 00 00 
    7c66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c6d:	02 00 00 
    7c70:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007c74 <AES_encrypt.70>:
    7c74:	c1 e9 08             	shr    $0x8,%ecx
    7c77:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7c7d:	89 c9                	mov    %ecx,%ecx
    7c7f:	89 ca                	mov    %ecx,%edx
    7c81:	48 8d 0d 78 2b 03 00 	lea    0x32b78(%rip),%rcx        # 3a800 <Te2>
    7c88:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7c8b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7c8f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7c96:	00 00 00 
    7c99:	41 ff d6             	call   *%r14
    7c9c:	41 8b 0e             	mov    (%r14),%ecx
    7c9f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7ca5:	89 c9                	mov    %ecx,%ecx
    7ca7:	89 ca                	mov    %ecx,%edx
    7ca9:	e9 46 00 00 00       	jmp    7cf4 <AES_encrypt.71>
    7cae:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007cb4 <AES_encrypt.dummy.72>:
    7cb4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7cbb:	02 00 00 
    7cbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7cc5:	02 00 00 
    7cc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ccf:	02 00 00 
    7cd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7cd9:	02 00 00 
    7cdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ce3:	02 00 00 
    7ce6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ced:	02 00 00 
    7cf0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007cf4 <AES_encrypt.71>:
    7cf4:	48 8d 0d 05 2f 03 00 	lea    0x32f05(%rip),%rcx        # 3ac00 <Te3>
    7cfb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7cfe:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7d02:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7d09:	00 00 00 
    7d0c:	41 ff d6             	call   *%r14
    7d0f:	49 8b 0e             	mov    (%r14),%rcx
    7d12:	33 41 54             	xor    0x54(%rcx),%eax
    7d15:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    7d19:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7d20:	00 00 00 
    7d23:	41 ff d6             	call   *%r14
    7d26:	41 89 06             	mov    %eax,(%r14)
    7d29:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7d2d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7d34:	00 00 00 
    7d37:	41 ff d6             	call   *%r14
    7d3a:	41 8b 06             	mov    (%r14),%eax
    7d3d:	e9 46 00 00 00       	jmp    7d88 <AES_encrypt.72>
    7d42:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007d48 <AES_encrypt.dummy.73>:
    7d48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d4f:	02 00 00 
    7d52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d59:	02 00 00 
    7d5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d63:	02 00 00 
    7d66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d6d:	02 00 00 
    7d70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d77:	02 00 00 
    7d7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d81:	02 00 00 
    7d84:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007d88 <AES_encrypt.72>:
    7d88:	c1 e8 18             	shr    $0x18,%eax
    7d8b:	89 c0                	mov    %eax,%eax
    7d8d:	89 c1                	mov    %eax,%ecx
    7d8f:	48 8d 05 6a 22 03 00 	lea    0x3226a(%rip),%rax        # 3a000 <Te0>
    7d96:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7d9a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7da1:	00 00 00 
    7da4:	41 ff d6             	call   *%r14
    7da7:	41 8b 06             	mov    (%r14),%eax
    7daa:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7dae:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7db5:	00 00 00 
    7db8:	41 ff d6             	call   *%r14
    7dbb:	41 8b 0e             	mov    (%r14),%ecx
    7dbe:	c1 e9 10             	shr    $0x10,%ecx
    7dc1:	e9 42 00 00 00       	jmp    7e08 <AES_encrypt.73>
    7dc6:	66 90                	xchg   %ax,%ax

0000000000007dc8 <AES_encrypt.dummy.74>:
    7dc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7dcf:	02 00 00 
    7dd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7dd9:	02 00 00 
    7ddc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7de3:	02 00 00 
    7de6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ded:	02 00 00 
    7df0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7df7:	02 00 00 
    7dfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e01:	02 00 00 
    7e04:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007e08 <AES_encrypt.73>:
    7e08:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7e0e:	89 c9                	mov    %ecx,%ecx
    7e10:	89 ca                	mov    %ecx,%edx
    7e12:	48 8d 0d e7 25 03 00 	lea    0x325e7(%rip),%rcx        # 3a400 <Te1>
    7e19:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7e1c:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7e20:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7e27:	00 00 00 
    7e2a:	41 ff d6             	call   *%r14
    7e2d:	41 8b 0e             	mov    (%r14),%ecx
    7e30:	c1 e9 08             	shr    $0x8,%ecx
    7e33:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7e39:	89 c9                	mov    %ecx,%ecx
    7e3b:	89 ca                	mov    %ecx,%edx
    7e3d:	e9 46 00 00 00       	jmp    7e88 <AES_encrypt.74>
    7e42:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007e48 <AES_encrypt.dummy.75>:
    7e48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e4f:	02 00 00 
    7e52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e59:	02 00 00 
    7e5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e63:	02 00 00 
    7e66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e6d:	02 00 00 
    7e70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e77:	02 00 00 
    7e7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e81:	02 00 00 
    7e84:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007e88 <AES_encrypt.74>:
    7e88:	48 8d 0d 71 29 03 00 	lea    0x32971(%rip),%rcx        # 3a800 <Te2>
    7e8f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7e92:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7e96:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7e9d:	00 00 00 
    7ea0:	41 ff d6             	call   *%r14
    7ea3:	41 8b 0e             	mov    (%r14),%ecx
    7ea6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7eac:	89 c9                	mov    %ecx,%ecx
    7eae:	89 ca                	mov    %ecx,%edx
    7eb0:	48 8d 0d 49 2d 03 00 	lea    0x32d49(%rip),%rcx        # 3ac00 <Te3>
    7eb7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7eba:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7ebe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7ec5:	00 00 00 
    7ec8:	41 ff d6             	call   *%r14
    7ecb:	49 8b 0e             	mov    (%r14),%rcx
    7ece:	e9 49 00 00 00       	jmp    7f1c <AES_encrypt.75>
    7ed3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    7eda:	00 00 

0000000000007edc <AES_encrypt.dummy.76>:
    7edc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ee3:	02 00 00 
    7ee6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7eed:	02 00 00 
    7ef0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ef7:	02 00 00 
    7efa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f01:	02 00 00 
    7f04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f0b:	02 00 00 
    7f0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f15:	02 00 00 
    7f18:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007f1c <AES_encrypt.75>:
    7f1c:	33 41 58             	xor    0x58(%rcx),%eax
    7f1f:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    7f23:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7f2a:	00 00 00 
    7f2d:	41 ff d6             	call   *%r14
    7f30:	41 89 06             	mov    %eax,(%r14)
    7f33:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7f37:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7f3e:	00 00 00 
    7f41:	41 ff d6             	call   *%r14
    7f44:	41 8b 06             	mov    (%r14),%eax
    7f47:	c1 e8 18             	shr    $0x18,%eax
    7f4a:	89 c0                	mov    %eax,%eax
    7f4c:	89 c1                	mov    %eax,%ecx
    7f4e:	48 8d 05 ab 20 03 00 	lea    0x320ab(%rip),%rax        # 3a000 <Te0>
    7f55:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7f59:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7f60:	00 00 00 
    7f63:	41 ff d6             	call   *%r14
    7f66:	41 8b 06             	mov    (%r14),%eax
    7f69:	e9 42 00 00 00       	jmp    7fb0 <AES_encrypt.76>
    7f6e:	66 90                	xchg   %ax,%ax

0000000000007f70 <AES_encrypt.dummy.77>:
    7f70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f77:	02 00 00 
    7f7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f81:	02 00 00 
    7f84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f8b:	02 00 00 
    7f8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f95:	02 00 00 
    7f98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f9f:	02 00 00 
    7fa2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7fa9:	02 00 00 
    7fac:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007fb0 <AES_encrypt.76>:
    7fb0:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7fb4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7fbb:	00 00 00 
    7fbe:	41 ff d6             	call   *%r14
    7fc1:	41 8b 0e             	mov    (%r14),%ecx
    7fc4:	c1 e9 10             	shr    $0x10,%ecx
    7fc7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7fcd:	89 c9                	mov    %ecx,%ecx
    7fcf:	89 ca                	mov    %ecx,%edx
    7fd1:	48 8d 0d 28 24 03 00 	lea    0x32428(%rip),%rcx        # 3a400 <Te1>
    7fd8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7fdb:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7fdf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    7fe6:	00 00 00 
    7fe9:	41 ff d6             	call   *%r14
    7fec:	41 8b 0e             	mov    (%r14),%ecx
    7fef:	e9 50 00 00 00       	jmp    8044 <AES_encrypt.77>
    7ff4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ffb:	02 00 00 
    7ffe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008004 <AES_encrypt.dummy.78>:
    8004:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    800b:	02 00 00 
    800e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8015:	02 00 00 
    8018:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    801f:	02 00 00 
    8022:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8029:	02 00 00 
    802c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8033:	02 00 00 
    8036:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    803d:	02 00 00 
    8040:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008044 <AES_encrypt.77>:
    8044:	c1 e9 08             	shr    $0x8,%ecx
    8047:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    804d:	89 c9                	mov    %ecx,%ecx
    804f:	89 ca                	mov    %ecx,%edx
    8051:	48 8d 0d a8 27 03 00 	lea    0x327a8(%rip),%rcx        # 3a800 <Te2>
    8058:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    805b:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    805f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8066:	00 00 00 
    8069:	41 ff d6             	call   *%r14
    806c:	41 8b 0e             	mov    (%r14),%ecx
    806f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8075:	89 c9                	mov    %ecx,%ecx
    8077:	89 ca                	mov    %ecx,%edx
    8079:	e9 46 00 00 00       	jmp    80c4 <AES_encrypt.78>
    807e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008084 <AES_encrypt.dummy.79>:
    8084:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    808b:	02 00 00 
    808e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8095:	02 00 00 
    8098:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    809f:	02 00 00 
    80a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80a9:	02 00 00 
    80ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80b3:	02 00 00 
    80b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80bd:	02 00 00 
    80c0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000080c4 <AES_encrypt.78>:
    80c4:	48 8d 0d 35 2b 03 00 	lea    0x32b35(%rip),%rcx        # 3ac00 <Te3>
    80cb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    80ce:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    80d2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    80d9:	00 00 00 
    80dc:	41 ff d6             	call   *%r14
    80df:	49 8b 0e             	mov    (%r14),%rcx
    80e2:	33 41 5c             	xor    0x5c(%rcx),%eax
    80e5:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    80e9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    80f0:	00 00 00 
    80f3:	41 ff d6             	call   *%r14
    80f6:	41 89 06             	mov    %eax,(%r14)
    80f9:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    80fd:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8104:	00 00 00 
    8107:	41 ff d6             	call   *%r14
    810a:	41 8b 06             	mov    (%r14),%eax
    810d:	e9 46 00 00 00       	jmp    8158 <AES_encrypt.79>
    8112:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008118 <AES_encrypt.dummy.80>:
    8118:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    811f:	02 00 00 
    8122:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8129:	02 00 00 
    812c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8133:	02 00 00 
    8136:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    813d:	02 00 00 
    8140:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8147:	02 00 00 
    814a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8151:	02 00 00 
    8154:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008158 <AES_encrypt.79>:
    8158:	c1 e8 18             	shr    $0x18,%eax
    815b:	89 c0                	mov    %eax,%eax
    815d:	89 c1                	mov    %eax,%ecx
    815f:	48 8d 05 9a 1e 03 00 	lea    0x31e9a(%rip),%rax        # 3a000 <Te0>
    8166:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    816a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8171:	00 00 00 
    8174:	41 ff d6             	call   *%r14
    8177:	41 8b 06             	mov    (%r14),%eax
    817a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    817e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8185:	00 00 00 
    8188:	41 ff d6             	call   *%r14
    818b:	41 8b 0e             	mov    (%r14),%ecx
    818e:	c1 e9 10             	shr    $0x10,%ecx
    8191:	e9 42 00 00 00       	jmp    81d8 <AES_encrypt.80>
    8196:	66 90                	xchg   %ax,%ax

0000000000008198 <AES_encrypt.dummy.81>:
    8198:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    819f:	02 00 00 
    81a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81a9:	02 00 00 
    81ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81b3:	02 00 00 
    81b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81bd:	02 00 00 
    81c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81c7:	02 00 00 
    81ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81d1:	02 00 00 
    81d4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000081d8 <AES_encrypt.80>:
    81d8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    81de:	89 c9                	mov    %ecx,%ecx
    81e0:	89 ca                	mov    %ecx,%edx
    81e2:	48 8d 0d 17 22 03 00 	lea    0x32217(%rip),%rcx        # 3a400 <Te1>
    81e9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    81ec:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    81f0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    81f7:	00 00 00 
    81fa:	41 ff d6             	call   *%r14
    81fd:	41 8b 0e             	mov    (%r14),%ecx
    8200:	c1 e9 08             	shr    $0x8,%ecx
    8203:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8209:	89 c9                	mov    %ecx,%ecx
    820b:	89 ca                	mov    %ecx,%edx
    820d:	e9 46 00 00 00       	jmp    8258 <AES_encrypt.81>
    8212:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008218 <AES_encrypt.dummy.82>:
    8218:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    821f:	02 00 00 
    8222:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8229:	02 00 00 
    822c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8233:	02 00 00 
    8236:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    823d:	02 00 00 
    8240:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8247:	02 00 00 
    824a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8251:	02 00 00 
    8254:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008258 <AES_encrypt.81>:
    8258:	48 8d 0d a1 25 03 00 	lea    0x325a1(%rip),%rcx        # 3a800 <Te2>
    825f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8262:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    8266:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    826d:	00 00 00 
    8270:	41 ff d6             	call   *%r14
    8273:	41 8b 0e             	mov    (%r14),%ecx
    8276:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    827c:	89 c9                	mov    %ecx,%ecx
    827e:	89 ca                	mov    %ecx,%edx
    8280:	48 8d 0d 79 29 03 00 	lea    0x32979(%rip),%rcx        # 3ac00 <Te3>
    8287:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    828a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    828e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8295:	00 00 00 
    8298:	41 ff d6             	call   *%r14
    829b:	49 8b 0e             	mov    (%r14),%rcx
    829e:	e9 49 00 00 00       	jmp    82ec <AES_encrypt.82>
    82a3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    82aa:	00 00 

00000000000082ac <AES_encrypt.dummy.83>:
    82ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82b3:	02 00 00 
    82b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82bd:	02 00 00 
    82c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82c7:	02 00 00 
    82ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82d1:	02 00 00 
    82d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82db:	02 00 00 
    82de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82e5:	02 00 00 
    82e8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000082ec <AES_encrypt.82>:
    82ec:	33 41 60             	xor    0x60(%rcx),%eax
    82ef:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    82f3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    82fa:	00 00 00 
    82fd:	41 ff d6             	call   *%r14
    8300:	41 89 06             	mov    %eax,(%r14)
    8303:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    8307:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    830e:	00 00 00 
    8311:	41 ff d6             	call   *%r14
    8314:	41 8b 06             	mov    (%r14),%eax
    8317:	c1 e8 18             	shr    $0x18,%eax
    831a:	89 c0                	mov    %eax,%eax
    831c:	89 c1                	mov    %eax,%ecx
    831e:	48 8d 05 db 1c 03 00 	lea    0x31cdb(%rip),%rax        # 3a000 <Te0>
    8325:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8329:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8330:	00 00 00 
    8333:	41 ff d6             	call   *%r14
    8336:	41 8b 06             	mov    (%r14),%eax
    8339:	e9 42 00 00 00       	jmp    8380 <AES_encrypt.83>
    833e:	66 90                	xchg   %ax,%ax

0000000000008340 <AES_encrypt.dummy.84>:
    8340:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8347:	02 00 00 
    834a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8351:	02 00 00 
    8354:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    835b:	02 00 00 
    835e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8365:	02 00 00 
    8368:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    836f:	02 00 00 
    8372:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8379:	02 00 00 
    837c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008380 <AES_encrypt.83>:
    8380:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8384:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    838b:	00 00 00 
    838e:	41 ff d6             	call   *%r14
    8391:	41 8b 0e             	mov    (%r14),%ecx
    8394:	c1 e9 10             	shr    $0x10,%ecx
    8397:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    839d:	89 c9                	mov    %ecx,%ecx
    839f:	89 ca                	mov    %ecx,%edx
    83a1:	48 8d 0d 58 20 03 00 	lea    0x32058(%rip),%rcx        # 3a400 <Te1>
    83a8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    83ab:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    83af:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    83b6:	00 00 00 
    83b9:	41 ff d6             	call   *%r14
    83bc:	41 8b 0e             	mov    (%r14),%ecx
    83bf:	e9 50 00 00 00       	jmp    8414 <AES_encrypt.84>
    83c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83cb:	02 00 00 
    83ce:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000083d4 <AES_encrypt.dummy.85>:
    83d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83db:	02 00 00 
    83de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83e5:	02 00 00 
    83e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83ef:	02 00 00 
    83f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83f9:	02 00 00 
    83fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8403:	02 00 00 
    8406:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    840d:	02 00 00 
    8410:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008414 <AES_encrypt.84>:
    8414:	c1 e9 08             	shr    $0x8,%ecx
    8417:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    841d:	89 c9                	mov    %ecx,%ecx
    841f:	89 ca                	mov    %ecx,%edx
    8421:	48 8d 0d d8 23 03 00 	lea    0x323d8(%rip),%rcx        # 3a800 <Te2>
    8428:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    842b:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    842f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8436:	00 00 00 
    8439:	41 ff d6             	call   *%r14
    843c:	41 8b 0e             	mov    (%r14),%ecx
    843f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8445:	89 c9                	mov    %ecx,%ecx
    8447:	89 ca                	mov    %ecx,%edx
    8449:	e9 46 00 00 00       	jmp    8494 <AES_encrypt.85>
    844e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008454 <AES_encrypt.dummy.86>:
    8454:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    845b:	02 00 00 
    845e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8465:	02 00 00 
    8468:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    846f:	02 00 00 
    8472:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8479:	02 00 00 
    847c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8483:	02 00 00 
    8486:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    848d:	02 00 00 
    8490:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008494 <AES_encrypt.85>:
    8494:	48 8d 0d 65 27 03 00 	lea    0x32765(%rip),%rcx        # 3ac00 <Te3>
    849b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    849e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    84a2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    84a9:	00 00 00 
    84ac:	41 ff d6             	call   *%r14
    84af:	49 8b 0e             	mov    (%r14),%rcx
    84b2:	33 41 64             	xor    0x64(%rcx),%eax
    84b5:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    84b9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    84c0:	00 00 00 
    84c3:	41 ff d6             	call   *%r14
    84c6:	41 89 06             	mov    %eax,(%r14)
    84c9:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    84cd:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    84d4:	00 00 00 
    84d7:	41 ff d6             	call   *%r14
    84da:	41 8b 06             	mov    (%r14),%eax
    84dd:	e9 46 00 00 00       	jmp    8528 <AES_encrypt.86>
    84e2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000084e8 <AES_encrypt.dummy.87>:
    84e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84ef:	02 00 00 
    84f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84f9:	02 00 00 
    84fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8503:	02 00 00 
    8506:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    850d:	02 00 00 
    8510:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8517:	02 00 00 
    851a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8521:	02 00 00 
    8524:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008528 <AES_encrypt.86>:
    8528:	c1 e8 18             	shr    $0x18,%eax
    852b:	89 c0                	mov    %eax,%eax
    852d:	89 c1                	mov    %eax,%ecx
    852f:	48 8d 05 ca 1a 03 00 	lea    0x31aca(%rip),%rax        # 3a000 <Te0>
    8536:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    853a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8541:	00 00 00 
    8544:	41 ff d6             	call   *%r14
    8547:	41 8b 06             	mov    (%r14),%eax
    854a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    854e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8555:	00 00 00 
    8558:	41 ff d6             	call   *%r14
    855b:	41 8b 0e             	mov    (%r14),%ecx
    855e:	c1 e9 10             	shr    $0x10,%ecx
    8561:	e9 42 00 00 00       	jmp    85a8 <AES_encrypt.87>
    8566:	66 90                	xchg   %ax,%ax

0000000000008568 <AES_encrypt.dummy.88>:
    8568:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    856f:	02 00 00 
    8572:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8579:	02 00 00 
    857c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8583:	02 00 00 
    8586:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    858d:	02 00 00 
    8590:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8597:	02 00 00 
    859a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85a1:	02 00 00 
    85a4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000085a8 <AES_encrypt.87>:
    85a8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    85ae:	89 c9                	mov    %ecx,%ecx
    85b0:	89 ca                	mov    %ecx,%edx
    85b2:	48 8d 0d 47 1e 03 00 	lea    0x31e47(%rip),%rcx        # 3a400 <Te1>
    85b9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    85bc:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    85c0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    85c7:	00 00 00 
    85ca:	41 ff d6             	call   *%r14
    85cd:	41 8b 0e             	mov    (%r14),%ecx
    85d0:	c1 e9 08             	shr    $0x8,%ecx
    85d3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    85d9:	89 c9                	mov    %ecx,%ecx
    85db:	89 ca                	mov    %ecx,%edx
    85dd:	e9 46 00 00 00       	jmp    8628 <AES_encrypt.88>
    85e2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000085e8 <AES_encrypt.dummy.89>:
    85e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85ef:	02 00 00 
    85f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85f9:	02 00 00 
    85fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8603:	02 00 00 
    8606:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    860d:	02 00 00 
    8610:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8617:	02 00 00 
    861a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8621:	02 00 00 
    8624:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008628 <AES_encrypt.88>:
    8628:	48 8d 0d d1 21 03 00 	lea    0x321d1(%rip),%rcx        # 3a800 <Te2>
    862f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8632:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    8636:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    863d:	00 00 00 
    8640:	41 ff d6             	call   *%r14
    8643:	41 8b 0e             	mov    (%r14),%ecx
    8646:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    864c:	89 c9                	mov    %ecx,%ecx
    864e:	89 ca                	mov    %ecx,%edx
    8650:	48 8d 0d a9 25 03 00 	lea    0x325a9(%rip),%rcx        # 3ac00 <Te3>
    8657:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    865a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    865e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8665:	00 00 00 
    8668:	41 ff d6             	call   *%r14
    866b:	49 8b 0e             	mov    (%r14),%rcx
    866e:	e9 49 00 00 00       	jmp    86bc <AES_encrypt.89>
    8673:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    867a:	00 00 

000000000000867c <AES_encrypt.dummy.90>:
    867c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8683:	02 00 00 
    8686:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    868d:	02 00 00 
    8690:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8697:	02 00 00 
    869a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86a1:	02 00 00 
    86a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86ab:	02 00 00 
    86ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86b5:	02 00 00 
    86b8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000086bc <AES_encrypt.89>:
    86bc:	33 41 68             	xor    0x68(%rcx),%eax
    86bf:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    86c3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    86ca:	00 00 00 
    86cd:	41 ff d6             	call   *%r14
    86d0:	41 89 06             	mov    %eax,(%r14)
    86d3:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    86d7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    86de:	00 00 00 
    86e1:	41 ff d6             	call   *%r14
    86e4:	41 8b 06             	mov    (%r14),%eax
    86e7:	c1 e8 18             	shr    $0x18,%eax
    86ea:	89 c0                	mov    %eax,%eax
    86ec:	89 c1                	mov    %eax,%ecx
    86ee:	48 8d 05 0b 19 03 00 	lea    0x3190b(%rip),%rax        # 3a000 <Te0>
    86f5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    86f9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8700:	00 00 00 
    8703:	41 ff d6             	call   *%r14
    8706:	41 8b 06             	mov    (%r14),%eax
    8709:	e9 42 00 00 00       	jmp    8750 <AES_encrypt.90>
    870e:	66 90                	xchg   %ax,%ax

0000000000008710 <AES_encrypt.dummy.91>:
    8710:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8717:	02 00 00 
    871a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8721:	02 00 00 
    8724:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    872b:	02 00 00 
    872e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8735:	02 00 00 
    8738:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    873f:	02 00 00 
    8742:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8749:	02 00 00 
    874c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008750 <AES_encrypt.90>:
    8750:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    8754:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    875b:	00 00 00 
    875e:	41 ff d6             	call   *%r14
    8761:	41 8b 0e             	mov    (%r14),%ecx
    8764:	c1 e9 10             	shr    $0x10,%ecx
    8767:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    876d:	89 c9                	mov    %ecx,%ecx
    876f:	89 ca                	mov    %ecx,%edx
    8771:	48 8d 0d 88 1c 03 00 	lea    0x31c88(%rip),%rcx        # 3a400 <Te1>
    8778:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    877b:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    877f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8786:	00 00 00 
    8789:	41 ff d6             	call   *%r14
    878c:	41 8b 0e             	mov    (%r14),%ecx
    878f:	e9 50 00 00 00       	jmp    87e4 <AES_encrypt.91>
    8794:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    879b:	02 00 00 
    879e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000087a4 <AES_encrypt.dummy.92>:
    87a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87ab:	02 00 00 
    87ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87b5:	02 00 00 
    87b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87bf:	02 00 00 
    87c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87c9:	02 00 00 
    87cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87d3:	02 00 00 
    87d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87dd:	02 00 00 
    87e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000087e4 <AES_encrypt.91>:
    87e4:	c1 e9 08             	shr    $0x8,%ecx
    87e7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    87ed:	89 c9                	mov    %ecx,%ecx
    87ef:	89 ca                	mov    %ecx,%edx
    87f1:	48 8d 0d 08 20 03 00 	lea    0x32008(%rip),%rcx        # 3a800 <Te2>
    87f8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    87fb:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    87ff:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8806:	00 00 00 
    8809:	41 ff d6             	call   *%r14
    880c:	41 8b 0e             	mov    (%r14),%ecx
    880f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8815:	89 c9                	mov    %ecx,%ecx
    8817:	89 ca                	mov    %ecx,%edx
    8819:	e9 46 00 00 00       	jmp    8864 <AES_encrypt.92>
    881e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008824 <AES_encrypt.dummy.93>:
    8824:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    882b:	02 00 00 
    882e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8835:	02 00 00 
    8838:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    883f:	02 00 00 
    8842:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8849:	02 00 00 
    884c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8853:	02 00 00 
    8856:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    885d:	02 00 00 
    8860:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008864 <AES_encrypt.92>:
    8864:	48 8d 0d 95 23 03 00 	lea    0x32395(%rip),%rcx        # 3ac00 <Te3>
    886b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    886e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8872:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8879:	00 00 00 
    887c:	41 ff d6             	call   *%r14
    887f:	49 8b 0e             	mov    (%r14),%rcx
    8882:	33 41 6c             	xor    0x6c(%rcx),%eax
    8885:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8889:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8890:	00 00 00 
    8893:	41 ff d6             	call   *%r14
    8896:	41 89 06             	mov    %eax,(%r14)
    8899:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    889d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    88a4:	00 00 00 
    88a7:	41 ff d6             	call   *%r14
    88aa:	41 8b 06             	mov    (%r14),%eax
    88ad:	e9 46 00 00 00       	jmp    88f8 <AES_encrypt.93>
    88b2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000088b8 <AES_encrypt.dummy.94>:
    88b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88bf:	02 00 00 
    88c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88c9:	02 00 00 
    88cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88d3:	02 00 00 
    88d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88dd:	02 00 00 
    88e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88e7:	02 00 00 
    88ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88f1:	02 00 00 
    88f4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000088f8 <AES_encrypt.93>:
    88f8:	c1 e8 18             	shr    $0x18,%eax
    88fb:	89 c0                	mov    %eax,%eax
    88fd:	89 c1                	mov    %eax,%ecx
    88ff:	48 8d 05 fa 16 03 00 	lea    0x316fa(%rip),%rax        # 3a000 <Te0>
    8906:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    890a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8911:	00 00 00 
    8914:	41 ff d6             	call   *%r14
    8917:	41 8b 06             	mov    (%r14),%eax
    891a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    891e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8925:	00 00 00 
    8928:	41 ff d6             	call   *%r14
    892b:	41 8b 0e             	mov    (%r14),%ecx
    892e:	c1 e9 10             	shr    $0x10,%ecx
    8931:	e9 42 00 00 00       	jmp    8978 <AES_encrypt.94>
    8936:	66 90                	xchg   %ax,%ax

0000000000008938 <AES_encrypt.dummy.95>:
    8938:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    893f:	02 00 00 
    8942:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8949:	02 00 00 
    894c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8953:	02 00 00 
    8956:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    895d:	02 00 00 
    8960:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8967:	02 00 00 
    896a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8971:	02 00 00 
    8974:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008978 <AES_encrypt.94>:
    8978:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    897e:	89 c9                	mov    %ecx,%ecx
    8980:	89 ca                	mov    %ecx,%edx
    8982:	48 8d 0d 77 1a 03 00 	lea    0x31a77(%rip),%rcx        # 3a400 <Te1>
    8989:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    898c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8990:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8997:	00 00 00 
    899a:	41 ff d6             	call   *%r14
    899d:	41 8b 0e             	mov    (%r14),%ecx
    89a0:	c1 e9 08             	shr    $0x8,%ecx
    89a3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    89a9:	89 c9                	mov    %ecx,%ecx
    89ab:	89 ca                	mov    %ecx,%edx
    89ad:	e9 46 00 00 00       	jmp    89f8 <AES_encrypt.95>
    89b2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000089b8 <AES_encrypt.dummy.96>:
    89b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89bf:	02 00 00 
    89c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89c9:	02 00 00 
    89cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89d3:	02 00 00 
    89d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89dd:	02 00 00 
    89e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89e7:	02 00 00 
    89ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89f1:	02 00 00 
    89f4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000089f8 <AES_encrypt.95>:
    89f8:	48 8d 0d 01 1e 03 00 	lea    0x31e01(%rip),%rcx        # 3a800 <Te2>
    89ff:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8a02:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8a06:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8a0d:	00 00 00 
    8a10:	41 ff d6             	call   *%r14
    8a13:	41 8b 0e             	mov    (%r14),%ecx
    8a16:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8a1c:	89 c9                	mov    %ecx,%ecx
    8a1e:	89 ca                	mov    %ecx,%edx
    8a20:	48 8d 0d d9 21 03 00 	lea    0x321d9(%rip),%rcx        # 3ac00 <Te3>
    8a27:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8a2a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8a2e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8a35:	00 00 00 
    8a38:	41 ff d6             	call   *%r14
    8a3b:	49 8b 0e             	mov    (%r14),%rcx
    8a3e:	e9 49 00 00 00       	jmp    8a8c <AES_encrypt.96>
    8a43:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    8a4a:	00 00 

0000000000008a4c <AES_encrypt.dummy.97>:
    8a4c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a53:	02 00 00 
    8a56:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a5d:	02 00 00 
    8a60:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a67:	02 00 00 
    8a6a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a71:	02 00 00 
    8a74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a7b:	02 00 00 
    8a7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a85:	02 00 00 
    8a88:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008a8c <AES_encrypt.96>:
    8a8c:	33 41 70             	xor    0x70(%rcx),%eax
    8a8f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    8a93:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8a9a:	00 00 00 
    8a9d:	41 ff d6             	call   *%r14
    8aa0:	41 89 06             	mov    %eax,(%r14)
    8aa3:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8aa7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8aae:	00 00 00 
    8ab1:	41 ff d6             	call   *%r14
    8ab4:	41 8b 06             	mov    (%r14),%eax
    8ab7:	c1 e8 18             	shr    $0x18,%eax
    8aba:	89 c0                	mov    %eax,%eax
    8abc:	89 c1                	mov    %eax,%ecx
    8abe:	48 8d 05 3b 15 03 00 	lea    0x3153b(%rip),%rax        # 3a000 <Te0>
    8ac5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8ac9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8ad0:	00 00 00 
    8ad3:	41 ff d6             	call   *%r14
    8ad6:	41 8b 06             	mov    (%r14),%eax
    8ad9:	e9 42 00 00 00       	jmp    8b20 <AES_encrypt.97>
    8ade:	66 90                	xchg   %ax,%ax

0000000000008ae0 <AES_encrypt.dummy.98>:
    8ae0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ae7:	02 00 00 
    8aea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8af1:	02 00 00 
    8af4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8afb:	02 00 00 
    8afe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b05:	02 00 00 
    8b08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b0f:	02 00 00 
    8b12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b19:	02 00 00 
    8b1c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008b20 <AES_encrypt.97>:
    8b20:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8b24:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8b2b:	00 00 00 
    8b2e:	41 ff d6             	call   *%r14
    8b31:	41 8b 0e             	mov    (%r14),%ecx
    8b34:	c1 e9 10             	shr    $0x10,%ecx
    8b37:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8b3d:	89 c9                	mov    %ecx,%ecx
    8b3f:	89 ca                	mov    %ecx,%edx
    8b41:	48 8d 0d b8 18 03 00 	lea    0x318b8(%rip),%rcx        # 3a400 <Te1>
    8b48:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8b4b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8b4f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8b56:	00 00 00 
    8b59:	41 ff d6             	call   *%r14
    8b5c:	41 8b 0e             	mov    (%r14),%ecx
    8b5f:	e9 50 00 00 00       	jmp    8bb4 <AES_encrypt.98>
    8b64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b6b:	02 00 00 
    8b6e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008b74 <AES_encrypt.dummy.99>:
    8b74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b7b:	02 00 00 
    8b7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b85:	02 00 00 
    8b88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b8f:	02 00 00 
    8b92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b99:	02 00 00 
    8b9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ba3:	02 00 00 
    8ba6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bad:	02 00 00 
    8bb0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008bb4 <AES_encrypt.98>:
    8bb4:	c1 e9 08             	shr    $0x8,%ecx
    8bb7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8bbd:	89 c9                	mov    %ecx,%ecx
    8bbf:	89 ca                	mov    %ecx,%edx
    8bc1:	48 8d 0d 38 1c 03 00 	lea    0x31c38(%rip),%rcx        # 3a800 <Te2>
    8bc8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8bcb:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8bcf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8bd6:	00 00 00 
    8bd9:	41 ff d6             	call   *%r14
    8bdc:	41 8b 0e             	mov    (%r14),%ecx
    8bdf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8be5:	89 c9                	mov    %ecx,%ecx
    8be7:	89 ca                	mov    %ecx,%edx
    8be9:	e9 46 00 00 00       	jmp    8c34 <AES_encrypt.99>
    8bee:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008bf4 <AES_encrypt.dummy.100>:
    8bf4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bfb:	02 00 00 
    8bfe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c05:	02 00 00 
    8c08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c0f:	02 00 00 
    8c12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c19:	02 00 00 
    8c1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c23:	02 00 00 
    8c26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c2d:	02 00 00 
    8c30:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008c34 <AES_encrypt.99>:
    8c34:	48 8d 0d c5 1f 03 00 	lea    0x31fc5(%rip),%rcx        # 3ac00 <Te3>
    8c3b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8c3e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8c42:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8c49:	00 00 00 
    8c4c:	41 ff d6             	call   *%r14
    8c4f:	49 8b 0e             	mov    (%r14),%rcx
    8c52:	33 41 74             	xor    0x74(%rcx),%eax
    8c55:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    8c59:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8c60:	00 00 00 
    8c63:	41 ff d6             	call   *%r14
    8c66:	41 89 06             	mov    %eax,(%r14)
    8c69:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8c6d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8c74:	00 00 00 
    8c77:	41 ff d6             	call   *%r14
    8c7a:	41 8b 06             	mov    (%r14),%eax
    8c7d:	e9 46 00 00 00       	jmp    8cc8 <AES_encrypt.100>
    8c82:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008c88 <AES_encrypt.dummy.101>:
    8c88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c8f:	02 00 00 
    8c92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c99:	02 00 00 
    8c9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ca3:	02 00 00 
    8ca6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cad:	02 00 00 
    8cb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cb7:	02 00 00 
    8cba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cc1:	02 00 00 
    8cc4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008cc8 <AES_encrypt.100>:
    8cc8:	c1 e8 18             	shr    $0x18,%eax
    8ccb:	89 c0                	mov    %eax,%eax
    8ccd:	89 c1                	mov    %eax,%ecx
    8ccf:	48 8d 05 2a 13 03 00 	lea    0x3132a(%rip),%rax        # 3a000 <Te0>
    8cd6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8cda:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8ce1:	00 00 00 
    8ce4:	41 ff d6             	call   *%r14
    8ce7:	41 8b 06             	mov    (%r14),%eax
    8cea:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8cee:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8cf5:	00 00 00 
    8cf8:	41 ff d6             	call   *%r14
    8cfb:	41 8b 0e             	mov    (%r14),%ecx
    8cfe:	c1 e9 10             	shr    $0x10,%ecx
    8d01:	e9 42 00 00 00       	jmp    8d48 <AES_encrypt.101>
    8d06:	66 90                	xchg   %ax,%ax

0000000000008d08 <AES_encrypt.dummy.102>:
    8d08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d0f:	02 00 00 
    8d12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d19:	02 00 00 
    8d1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d23:	02 00 00 
    8d26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d2d:	02 00 00 
    8d30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d37:	02 00 00 
    8d3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d41:	02 00 00 
    8d44:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008d48 <AES_encrypt.101>:
    8d48:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8d4e:	89 c9                	mov    %ecx,%ecx
    8d50:	89 ca                	mov    %ecx,%edx
    8d52:	48 8d 0d a7 16 03 00 	lea    0x316a7(%rip),%rcx        # 3a400 <Te1>
    8d59:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8d5c:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8d60:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8d67:	00 00 00 
    8d6a:	41 ff d6             	call   *%r14
    8d6d:	41 8b 0e             	mov    (%r14),%ecx
    8d70:	c1 e9 08             	shr    $0x8,%ecx
    8d73:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8d79:	89 c9                	mov    %ecx,%ecx
    8d7b:	89 ca                	mov    %ecx,%edx
    8d7d:	e9 46 00 00 00       	jmp    8dc8 <AES_encrypt.102>
    8d82:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008d88 <AES_encrypt.dummy.103>:
    8d88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d8f:	02 00 00 
    8d92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d99:	02 00 00 
    8d9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8da3:	02 00 00 
    8da6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8dad:	02 00 00 
    8db0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8db7:	02 00 00 
    8dba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8dc1:	02 00 00 
    8dc4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008dc8 <AES_encrypt.102>:
    8dc8:	48 8d 0d 31 1a 03 00 	lea    0x31a31(%rip),%rcx        # 3a800 <Te2>
    8dcf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8dd2:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8dd6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8ddd:	00 00 00 
    8de0:	41 ff d6             	call   *%r14
    8de3:	41 8b 0e             	mov    (%r14),%ecx
    8de6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8dec:	89 c9                	mov    %ecx,%ecx
    8dee:	89 ca                	mov    %ecx,%edx
    8df0:	48 8d 0d 09 1e 03 00 	lea    0x31e09(%rip),%rcx        # 3ac00 <Te3>
    8df7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8dfa:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8dfe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8e05:	00 00 00 
    8e08:	41 ff d6             	call   *%r14
    8e0b:	49 8b 0e             	mov    (%r14),%rcx
    8e0e:	e9 49 00 00 00       	jmp    8e5c <AES_encrypt.103>
    8e13:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    8e1a:	00 00 

0000000000008e1c <AES_encrypt.dummy.104>:
    8e1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e23:	02 00 00 
    8e26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e2d:	02 00 00 
    8e30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e37:	02 00 00 
    8e3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e41:	02 00 00 
    8e44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e4b:	02 00 00 
    8e4e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e55:	02 00 00 
    8e58:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008e5c <AES_encrypt.103>:
    8e5c:	33 41 78             	xor    0x78(%rcx),%eax
    8e5f:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8e63:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8e6a:	00 00 00 
    8e6d:	41 ff d6             	call   *%r14
    8e70:	41 89 06             	mov    %eax,(%r14)
    8e73:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8e77:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8e7e:	00 00 00 
    8e81:	41 ff d6             	call   *%r14
    8e84:	41 8b 06             	mov    (%r14),%eax
    8e87:	c1 e8 18             	shr    $0x18,%eax
    8e8a:	89 c0                	mov    %eax,%eax
    8e8c:	89 c1                	mov    %eax,%ecx
    8e8e:	48 8d 05 6b 11 03 00 	lea    0x3116b(%rip),%rax        # 3a000 <Te0>
    8e95:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8e99:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8ea0:	00 00 00 
    8ea3:	41 ff d6             	call   *%r14
    8ea6:	41 8b 06             	mov    (%r14),%eax
    8ea9:	e9 42 00 00 00       	jmp    8ef0 <AES_encrypt.104>
    8eae:	66 90                	xchg   %ax,%ax

0000000000008eb0 <AES_encrypt.dummy.105>:
    8eb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8eb7:	02 00 00 
    8eba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ec1:	02 00 00 
    8ec4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ecb:	02 00 00 
    8ece:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ed5:	02 00 00 
    8ed8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8edf:	02 00 00 
    8ee2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ee9:	02 00 00 
    8eec:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008ef0 <AES_encrypt.104>:
    8ef0:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8ef4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8efb:	00 00 00 
    8efe:	41 ff d6             	call   *%r14
    8f01:	41 8b 0e             	mov    (%r14),%ecx
    8f04:	c1 e9 10             	shr    $0x10,%ecx
    8f07:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8f0d:	89 c9                	mov    %ecx,%ecx
    8f0f:	89 ca                	mov    %ecx,%edx
    8f11:	48 8d 0d e8 14 03 00 	lea    0x314e8(%rip),%rcx        # 3a400 <Te1>
    8f18:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8f1b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8f1f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8f26:	00 00 00 
    8f29:	41 ff d6             	call   *%r14
    8f2c:	41 8b 0e             	mov    (%r14),%ecx
    8f2f:	e9 50 00 00 00       	jmp    8f84 <AES_encrypt.105>
    8f34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f3b:	02 00 00 
    8f3e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008f44 <AES_encrypt.dummy.106>:
    8f44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f4b:	02 00 00 
    8f4e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f55:	02 00 00 
    8f58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f5f:	02 00 00 
    8f62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f69:	02 00 00 
    8f6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f73:	02 00 00 
    8f76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f7d:	02 00 00 
    8f80:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008f84 <AES_encrypt.105>:
    8f84:	c1 e9 08             	shr    $0x8,%ecx
    8f87:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8f8d:	89 c9                	mov    %ecx,%ecx
    8f8f:	89 ca                	mov    %ecx,%edx
    8f91:	48 8d 0d 68 18 03 00 	lea    0x31868(%rip),%rcx        # 3a800 <Te2>
    8f98:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8f9b:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8f9f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    8fa6:	00 00 00 
    8fa9:	41 ff d6             	call   *%r14
    8fac:	41 8b 0e             	mov    (%r14),%ecx
    8faf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8fb5:	89 c9                	mov    %ecx,%ecx
    8fb7:	89 ca                	mov    %ecx,%edx
    8fb9:	e9 46 00 00 00       	jmp    9004 <AES_encrypt.106>
    8fbe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008fc4 <AES_encrypt.dummy.107>:
    8fc4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fcb:	02 00 00 
    8fce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fd5:	02 00 00 
    8fd8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fdf:	02 00 00 
    8fe2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fe9:	02 00 00 
    8fec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ff3:	02 00 00 
    8ff6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ffd:	02 00 00 
    9000:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009004 <AES_encrypt.106>:
    9004:	48 8d 0d f5 1b 03 00 	lea    0x31bf5(%rip),%rcx        # 3ac00 <Te3>
    900b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    900e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9012:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9019:	00 00 00 
    901c:	41 ff d6             	call   *%r14
    901f:	49 8b 0e             	mov    (%r14),%rcx
    9022:	33 41 7c             	xor    0x7c(%rcx),%eax
    9025:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9029:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9030:	00 00 00 
    9033:	41 ff d6             	call   *%r14
    9036:	41 89 06             	mov    %eax,(%r14)
    9039:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    903d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9044:	00 00 00 
    9047:	41 ff d6             	call   *%r14
    904a:	41 8b 06             	mov    (%r14),%eax
    904d:	e9 46 00 00 00       	jmp    9098 <AES_encrypt.107>
    9052:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009058 <AES_encrypt.dummy.108>:
    9058:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    905f:	02 00 00 
    9062:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9069:	02 00 00 
    906c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9073:	02 00 00 
    9076:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    907d:	02 00 00 
    9080:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9087:	02 00 00 
    908a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9091:	02 00 00 
    9094:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009098 <AES_encrypt.107>:
    9098:	c1 e8 18             	shr    $0x18,%eax
    909b:	89 c0                	mov    %eax,%eax
    909d:	89 c1                	mov    %eax,%ecx
    909f:	48 8d 05 5a 0f 03 00 	lea    0x30f5a(%rip),%rax        # 3a000 <Te0>
    90a6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    90aa:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    90b1:	00 00 00 
    90b4:	41 ff d6             	call   *%r14
    90b7:	41 8b 06             	mov    (%r14),%eax
    90ba:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    90be:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    90c5:	00 00 00 
    90c8:	41 ff d6             	call   *%r14
    90cb:	41 8b 0e             	mov    (%r14),%ecx
    90ce:	c1 e9 10             	shr    $0x10,%ecx
    90d1:	e9 42 00 00 00       	jmp    9118 <AES_encrypt.108>
    90d6:	66 90                	xchg   %ax,%ax

00000000000090d8 <AES_encrypt.dummy.109>:
    90d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90df:	02 00 00 
    90e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90e9:	02 00 00 
    90ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90f3:	02 00 00 
    90f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90fd:	02 00 00 
    9100:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9107:	02 00 00 
    910a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9111:	02 00 00 
    9114:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009118 <AES_encrypt.108>:
    9118:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    911e:	89 c9                	mov    %ecx,%ecx
    9120:	89 ca                	mov    %ecx,%edx
    9122:	48 8d 0d d7 12 03 00 	lea    0x312d7(%rip),%rcx        # 3a400 <Te1>
    9129:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    912c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9130:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9137:	00 00 00 
    913a:	41 ff d6             	call   *%r14
    913d:	41 8b 0e             	mov    (%r14),%ecx
    9140:	c1 e9 08             	shr    $0x8,%ecx
    9143:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9149:	89 c9                	mov    %ecx,%ecx
    914b:	89 ca                	mov    %ecx,%edx
    914d:	e9 46 00 00 00       	jmp    9198 <AES_encrypt.109>
    9152:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009158 <AES_encrypt.dummy.110>:
    9158:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    915f:	02 00 00 
    9162:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9169:	02 00 00 
    916c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9173:	02 00 00 
    9176:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    917d:	02 00 00 
    9180:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9187:	02 00 00 
    918a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9191:	02 00 00 
    9194:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009198 <AES_encrypt.109>:
    9198:	48 8d 0d 61 16 03 00 	lea    0x31661(%rip),%rcx        # 3a800 <Te2>
    919f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    91a2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    91a6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    91ad:	00 00 00 
    91b0:	41 ff d6             	call   *%r14
    91b3:	41 8b 0e             	mov    (%r14),%ecx
    91b6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    91bc:	89 c9                	mov    %ecx,%ecx
    91be:	89 ca                	mov    %ecx,%edx
    91c0:	48 8d 0d 39 1a 03 00 	lea    0x31a39(%rip),%rcx        # 3ac00 <Te3>
    91c7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    91ca:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    91ce:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    91d5:	00 00 00 
    91d8:	41 ff d6             	call   *%r14
    91db:	49 8b 0e             	mov    (%r14),%rcx
    91de:	e9 49 00 00 00       	jmp    922c <AES_encrypt.110>
    91e3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    91ea:	00 00 

00000000000091ec <AES_encrypt.dummy.111>:
    91ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91f3:	02 00 00 
    91f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91fd:	02 00 00 
    9200:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9207:	02 00 00 
    920a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9211:	02 00 00 
    9214:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    921b:	02 00 00 
    921e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9225:	02 00 00 
    9228:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000922c <AES_encrypt.110>:
    922c:	33 81 80 00 00 00    	xor    0x80(%rcx),%eax
    9232:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9236:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    923d:	00 00 00 
    9240:	41 ff d6             	call   *%r14
    9243:	41 89 06             	mov    %eax,(%r14)
    9246:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    924a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9251:	00 00 00 
    9254:	41 ff d6             	call   *%r14
    9257:	41 8b 06             	mov    (%r14),%eax
    925a:	c1 e8 18             	shr    $0x18,%eax
    925d:	89 c0                	mov    %eax,%eax
    925f:	89 c1                	mov    %eax,%ecx
    9261:	e9 46 00 00 00       	jmp    92ac <AES_encrypt.111>
    9266:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000926c <AES_encrypt.dummy.112>:
    926c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9273:	02 00 00 
    9276:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    927d:	02 00 00 
    9280:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9287:	02 00 00 
    928a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9291:	02 00 00 
    9294:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    929b:	02 00 00 
    929e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92a5:	02 00 00 
    92a8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000092ac <AES_encrypt.111>:
    92ac:	48 8d 05 4d 0d 03 00 	lea    0x30d4d(%rip),%rax        # 3a000 <Te0>
    92b3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    92b7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    92be:	00 00 00 
    92c1:	41 ff d6             	call   *%r14
    92c4:	41 8b 06             	mov    (%r14),%eax
    92c7:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    92cb:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    92d2:	00 00 00 
    92d5:	41 ff d6             	call   *%r14
    92d8:	41 8b 0e             	mov    (%r14),%ecx
    92db:	c1 e9 10             	shr    $0x10,%ecx
    92de:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    92e4:	89 c9                	mov    %ecx,%ecx
    92e6:	e9 41 00 00 00       	jmp    932c <AES_encrypt.112>
    92eb:	90                   	nop

00000000000092ec <AES_encrypt.dummy.113>:
    92ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92f3:	02 00 00 
    92f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92fd:	02 00 00 
    9300:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9307:	02 00 00 
    930a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9311:	02 00 00 
    9314:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    931b:	02 00 00 
    931e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9325:	02 00 00 
    9328:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000932c <AES_encrypt.112>:
    932c:	89 ca                	mov    %ecx,%edx
    932e:	48 8d 0d cb 10 03 00 	lea    0x310cb(%rip),%rcx        # 3a400 <Te1>
    9335:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9338:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    933c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9343:	00 00 00 
    9346:	41 ff d6             	call   *%r14
    9349:	41 8b 0e             	mov    (%r14),%ecx
    934c:	c1 e9 08             	shr    $0x8,%ecx
    934f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9355:	89 c9                	mov    %ecx,%ecx
    9357:	89 ca                	mov    %ecx,%edx
    9359:	48 8d 0d a0 14 03 00 	lea    0x314a0(%rip),%rcx        # 3a800 <Te2>
    9360:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9363:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9367:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    936e:	00 00 00 
    9371:	41 ff d6             	call   *%r14
    9374:	41 8b 0e             	mov    (%r14),%ecx
    9377:	e9 44 00 00 00       	jmp    93c0 <AES_encrypt.113>
    937c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009380 <AES_encrypt.dummy.114>:
    9380:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9387:	02 00 00 
    938a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9391:	02 00 00 
    9394:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    939b:	02 00 00 
    939e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93a5:	02 00 00 
    93a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93af:	02 00 00 
    93b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93b9:	02 00 00 
    93bc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000093c0 <AES_encrypt.113>:
    93c0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    93c6:	89 c9                	mov    %ecx,%ecx
    93c8:	89 ca                	mov    %ecx,%edx
    93ca:	48 8d 0d 2f 18 03 00 	lea    0x3182f(%rip),%rcx        # 3ac00 <Te3>
    93d1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    93d4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    93d8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    93df:	00 00 00 
    93e2:	41 ff d6             	call   *%r14
    93e5:	49 8b 0e             	mov    (%r14),%rcx
    93e8:	33 81 84 00 00 00    	xor    0x84(%rcx),%eax
    93ee:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    93f2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    93f9:	00 00 00 
    93fc:	41 ff d6             	call   *%r14
    93ff:	41 89 06             	mov    %eax,(%r14)
    9402:	e9 4d 00 00 00       	jmp    9454 <AES_encrypt.114>
    9407:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    940e:	02 00 00 
    9411:	0f 1f 00             	nopl   (%rax)

0000000000009414 <AES_encrypt.dummy.115>:
    9414:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    941b:	02 00 00 
    941e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9425:	02 00 00 
    9428:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    942f:	02 00 00 
    9432:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9439:	02 00 00 
    943c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9443:	02 00 00 
    9446:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    944d:	02 00 00 
    9450:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009454 <AES_encrypt.114>:
    9454:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9458:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    945f:	00 00 00 
    9462:	41 ff d6             	call   *%r14
    9465:	41 8b 06             	mov    (%r14),%eax
    9468:	c1 e8 18             	shr    $0x18,%eax
    946b:	89 c0                	mov    %eax,%eax
    946d:	89 c1                	mov    %eax,%ecx
    946f:	48 8d 05 8a 0b 03 00 	lea    0x30b8a(%rip),%rax        # 3a000 <Te0>
    9476:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    947a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9481:	00 00 00 
    9484:	41 ff d6             	call   *%r14
    9487:	41 8b 06             	mov    (%r14),%eax
    948a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    948e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9495:	00 00 00 
    9498:	41 ff d6             	call   *%r14
    949b:	41 8b 0e             	mov    (%r14),%ecx
    949e:	e9 45 00 00 00       	jmp    94e8 <AES_encrypt.115>
    94a3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

00000000000094a8 <AES_encrypt.dummy.116>:
    94a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94af:	02 00 00 
    94b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94b9:	02 00 00 
    94bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94c3:	02 00 00 
    94c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94cd:	02 00 00 
    94d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94d7:	02 00 00 
    94da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94e1:	02 00 00 
    94e4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000094e8 <AES_encrypt.115>:
    94e8:	c1 e9 10             	shr    $0x10,%ecx
    94eb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    94f1:	89 c9                	mov    %ecx,%ecx
    94f3:	89 ca                	mov    %ecx,%edx
    94f5:	48 8d 0d 04 0f 03 00 	lea    0x30f04(%rip),%rcx        # 3a400 <Te1>
    94fc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    94ff:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9503:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    950a:	00 00 00 
    950d:	41 ff d6             	call   *%r14
    9510:	41 8b 0e             	mov    (%r14),%ecx
    9513:	c1 e9 08             	shr    $0x8,%ecx
    9516:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    951c:	89 c9                	mov    %ecx,%ecx
    951e:	89 ca                	mov    %ecx,%edx
    9520:	e9 43 00 00 00       	jmp    9568 <AES_encrypt.116>
    9525:	0f 1f 00             	nopl   (%rax)

0000000000009528 <AES_encrypt.dummy.117>:
    9528:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    952f:	02 00 00 
    9532:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9539:	02 00 00 
    953c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9543:	02 00 00 
    9546:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    954d:	02 00 00 
    9550:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9557:	02 00 00 
    955a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9561:	02 00 00 
    9564:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009568 <AES_encrypt.116>:
    9568:	48 8d 0d 91 12 03 00 	lea    0x31291(%rip),%rcx        # 3a800 <Te2>
    956f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9572:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    9576:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    957d:	00 00 00 
    9580:	41 ff d6             	call   *%r14
    9583:	41 8b 0e             	mov    (%r14),%ecx
    9586:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    958c:	89 c9                	mov    %ecx,%ecx
    958e:	89 ca                	mov    %ecx,%edx
    9590:	48 8d 0d 69 16 03 00 	lea    0x31669(%rip),%rcx        # 3ac00 <Te3>
    9597:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    959a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    959e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    95a5:	00 00 00 
    95a8:	41 ff d6             	call   *%r14
    95ab:	49 8b 0e             	mov    (%r14),%rcx
    95ae:	e9 49 00 00 00       	jmp    95fc <AES_encrypt.117>
    95b3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    95ba:	00 00 

00000000000095bc <AES_encrypt.dummy.118>:
    95bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95c3:	02 00 00 
    95c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95cd:	02 00 00 
    95d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95d7:	02 00 00 
    95da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95e1:	02 00 00 
    95e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95eb:	02 00 00 
    95ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95f5:	02 00 00 
    95f8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000095fc <AES_encrypt.117>:
    95fc:	33 81 88 00 00 00    	xor    0x88(%rcx),%eax
    9602:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9606:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    960d:	00 00 00 
    9610:	41 ff d6             	call   *%r14
    9613:	41 89 06             	mov    %eax,(%r14)
    9616:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    961a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9621:	00 00 00 
    9624:	41 ff d6             	call   *%r14
    9627:	41 8b 06             	mov    (%r14),%eax
    962a:	c1 e8 18             	shr    $0x18,%eax
    962d:	89 c0                	mov    %eax,%eax
    962f:	89 c1                	mov    %eax,%ecx
    9631:	e9 46 00 00 00       	jmp    967c <AES_encrypt.118>
    9636:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000963c <AES_encrypt.dummy.119>:
    963c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9643:	02 00 00 
    9646:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    964d:	02 00 00 
    9650:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9657:	02 00 00 
    965a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9661:	02 00 00 
    9664:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    966b:	02 00 00 
    966e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9675:	02 00 00 
    9678:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000967c <AES_encrypt.118>:
    967c:	48 8d 05 7d 09 03 00 	lea    0x3097d(%rip),%rax        # 3a000 <Te0>
    9683:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9687:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    968e:	00 00 00 
    9691:	41 ff d6             	call   *%r14
    9694:	41 8b 06             	mov    (%r14),%eax
    9697:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    969b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    96a2:	00 00 00 
    96a5:	41 ff d6             	call   *%r14
    96a8:	41 8b 0e             	mov    (%r14),%ecx
    96ab:	c1 e9 10             	shr    $0x10,%ecx
    96ae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    96b4:	89 c9                	mov    %ecx,%ecx
    96b6:	e9 41 00 00 00       	jmp    96fc <AES_encrypt.119>
    96bb:	90                   	nop

00000000000096bc <AES_encrypt.dummy.120>:
    96bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96c3:	02 00 00 
    96c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96cd:	02 00 00 
    96d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96d7:	02 00 00 
    96da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96e1:	02 00 00 
    96e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96eb:	02 00 00 
    96ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96f5:	02 00 00 
    96f8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000096fc <AES_encrypt.119>:
    96fc:	89 ca                	mov    %ecx,%edx
    96fe:	48 8d 0d fb 0c 03 00 	lea    0x30cfb(%rip),%rcx        # 3a400 <Te1>
    9705:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9708:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    970c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9713:	00 00 00 
    9716:	41 ff d6             	call   *%r14
    9719:	41 8b 0e             	mov    (%r14),%ecx
    971c:	c1 e9 08             	shr    $0x8,%ecx
    971f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9725:	89 c9                	mov    %ecx,%ecx
    9727:	89 ca                	mov    %ecx,%edx
    9729:	48 8d 0d d0 10 03 00 	lea    0x310d0(%rip),%rcx        # 3a800 <Te2>
    9730:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9733:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9737:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    973e:	00 00 00 
    9741:	41 ff d6             	call   *%r14
    9744:	41 8b 0e             	mov    (%r14),%ecx
    9747:	e9 44 00 00 00       	jmp    9790 <AES_encrypt.120>
    974c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009750 <AES_encrypt.dummy.121>:
    9750:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9757:	02 00 00 
    975a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9761:	02 00 00 
    9764:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    976b:	02 00 00 
    976e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9775:	02 00 00 
    9778:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    977f:	02 00 00 
    9782:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9789:	02 00 00 
    978c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009790 <AES_encrypt.120>:
    9790:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9796:	89 c9                	mov    %ecx,%ecx
    9798:	89 ca                	mov    %ecx,%edx
    979a:	48 8d 0d 5f 14 03 00 	lea    0x3145f(%rip),%rcx        # 3ac00 <Te3>
    97a1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    97a4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    97a8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    97af:	00 00 00 
    97b2:	41 ff d6             	call   *%r14
    97b5:	49 8b 0e             	mov    (%r14),%rcx
    97b8:	33 81 8c 00 00 00    	xor    0x8c(%rcx),%eax
    97be:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    97c2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    97c9:	00 00 00 
    97cc:	41 ff d6             	call   *%r14
    97cf:	41 89 06             	mov    %eax,(%r14)
    97d2:	e9 4d 00 00 00       	jmp    9824 <AES_encrypt.121>
    97d7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97de:	02 00 00 
    97e1:	0f 1f 00             	nopl   (%rax)

00000000000097e4 <AES_encrypt.dummy.122>:
    97e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97eb:	02 00 00 
    97ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97f5:	02 00 00 
    97f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97ff:	02 00 00 
    9802:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9809:	02 00 00 
    980c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9813:	02 00 00 
    9816:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    981d:	02 00 00 
    9820:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009824 <AES_encrypt.121>:
    9824:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9828:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    982f:	00 00 00 
    9832:	41 ff d6             	call   *%r14
    9835:	41 8b 06             	mov    (%r14),%eax
    9838:	c1 e8 18             	shr    $0x18,%eax
    983b:	89 c0                	mov    %eax,%eax
    983d:	89 c1                	mov    %eax,%ecx
    983f:	48 8d 05 ba 07 03 00 	lea    0x307ba(%rip),%rax        # 3a000 <Te0>
    9846:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    984a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9851:	00 00 00 
    9854:	41 ff d6             	call   *%r14
    9857:	41 8b 06             	mov    (%r14),%eax
    985a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    985e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9865:	00 00 00 
    9868:	41 ff d6             	call   *%r14
    986b:	41 8b 0e             	mov    (%r14),%ecx
    986e:	e9 45 00 00 00       	jmp    98b8 <AES_encrypt.122>
    9873:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000009878 <AES_encrypt.dummy.123>:
    9878:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    987f:	02 00 00 
    9882:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9889:	02 00 00 
    988c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9893:	02 00 00 
    9896:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    989d:	02 00 00 
    98a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98a7:	02 00 00 
    98aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98b1:	02 00 00 
    98b4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000098b8 <AES_encrypt.122>:
    98b8:	c1 e9 10             	shr    $0x10,%ecx
    98bb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    98c1:	89 c9                	mov    %ecx,%ecx
    98c3:	89 ca                	mov    %ecx,%edx
    98c5:	48 8d 0d 34 0b 03 00 	lea    0x30b34(%rip),%rcx        # 3a400 <Te1>
    98cc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    98cf:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    98d3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    98da:	00 00 00 
    98dd:	41 ff d6             	call   *%r14
    98e0:	41 8b 0e             	mov    (%r14),%ecx
    98e3:	c1 e9 08             	shr    $0x8,%ecx
    98e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    98ec:	89 c9                	mov    %ecx,%ecx
    98ee:	89 ca                	mov    %ecx,%edx
    98f0:	e9 43 00 00 00       	jmp    9938 <AES_encrypt.123>
    98f5:	0f 1f 00             	nopl   (%rax)

00000000000098f8 <AES_encrypt.dummy.124>:
    98f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98ff:	02 00 00 
    9902:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9909:	02 00 00 
    990c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9913:	02 00 00 
    9916:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    991d:	02 00 00 
    9920:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9927:	02 00 00 
    992a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9931:	02 00 00 
    9934:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009938 <AES_encrypt.123>:
    9938:	48 8d 0d c1 0e 03 00 	lea    0x30ec1(%rip),%rcx        # 3a800 <Te2>
    993f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9942:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9946:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    994d:	00 00 00 
    9950:	41 ff d6             	call   *%r14
    9953:	41 8b 0e             	mov    (%r14),%ecx
    9956:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    995c:	89 c9                	mov    %ecx,%ecx
    995e:	89 ca                	mov    %ecx,%edx
    9960:	48 8d 0d 99 12 03 00 	lea    0x31299(%rip),%rcx        # 3ac00 <Te3>
    9967:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    996a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    996e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9975:	00 00 00 
    9978:	41 ff d6             	call   *%r14
    997b:	49 8b 0e             	mov    (%r14),%rcx
    997e:	e9 49 00 00 00       	jmp    99cc <AES_encrypt.124>
    9983:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    998a:	00 00 

000000000000998c <AES_encrypt.dummy.125>:
    998c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9993:	02 00 00 
    9996:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    999d:	02 00 00 
    99a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99a7:	02 00 00 
    99aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99b1:	02 00 00 
    99b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99bb:	02 00 00 
    99be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99c5:	02 00 00 
    99c8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000099cc <AES_encrypt.124>:
    99cc:	33 81 90 00 00 00    	xor    0x90(%rcx),%eax
    99d2:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    99d6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    99dd:	00 00 00 
    99e0:	41 ff d6             	call   *%r14
    99e3:	41 89 06             	mov    %eax,(%r14)
    99e6:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    99ea:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    99f1:	00 00 00 
    99f4:	41 ff d6             	call   *%r14
    99f7:	41 8b 06             	mov    (%r14),%eax
    99fa:	c1 e8 18             	shr    $0x18,%eax
    99fd:	89 c0                	mov    %eax,%eax
    99ff:	89 c1                	mov    %eax,%ecx
    9a01:	e9 46 00 00 00       	jmp    9a4c <AES_encrypt.125>
    9a06:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009a0c <AES_encrypt.dummy.126>:
    9a0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a13:	02 00 00 
    9a16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a1d:	02 00 00 
    9a20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a27:	02 00 00 
    9a2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a31:	02 00 00 
    9a34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a3b:	02 00 00 
    9a3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a45:	02 00 00 
    9a48:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009a4c <AES_encrypt.125>:
    9a4c:	48 8d 05 ad 05 03 00 	lea    0x305ad(%rip),%rax        # 3a000 <Te0>
    9a53:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9a57:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9a5e:	00 00 00 
    9a61:	41 ff d6             	call   *%r14
    9a64:	41 8b 06             	mov    (%r14),%eax
    9a67:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9a6b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9a72:	00 00 00 
    9a75:	41 ff d6             	call   *%r14
    9a78:	41 8b 0e             	mov    (%r14),%ecx
    9a7b:	c1 e9 10             	shr    $0x10,%ecx
    9a7e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9a84:	89 c9                	mov    %ecx,%ecx
    9a86:	e9 41 00 00 00       	jmp    9acc <AES_encrypt.126>
    9a8b:	90                   	nop

0000000000009a8c <AES_encrypt.dummy.127>:
    9a8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a93:	02 00 00 
    9a96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a9d:	02 00 00 
    9aa0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9aa7:	02 00 00 
    9aaa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ab1:	02 00 00 
    9ab4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9abb:	02 00 00 
    9abe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ac5:	02 00 00 
    9ac8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009acc <AES_encrypt.126>:
    9acc:	89 ca                	mov    %ecx,%edx
    9ace:	48 8d 0d 2b 09 03 00 	lea    0x3092b(%rip),%rcx        # 3a400 <Te1>
    9ad5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9ad8:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9adc:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9ae3:	00 00 00 
    9ae6:	41 ff d6             	call   *%r14
    9ae9:	41 8b 0e             	mov    (%r14),%ecx
    9aec:	c1 e9 08             	shr    $0x8,%ecx
    9aef:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9af5:	89 c9                	mov    %ecx,%ecx
    9af7:	89 ca                	mov    %ecx,%edx
    9af9:	48 8d 0d 00 0d 03 00 	lea    0x30d00(%rip),%rcx        # 3a800 <Te2>
    9b00:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9b03:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9b07:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9b0e:	00 00 00 
    9b11:	41 ff d6             	call   *%r14
    9b14:	41 8b 0e             	mov    (%r14),%ecx
    9b17:	e9 44 00 00 00       	jmp    9b60 <AES_encrypt.127>
    9b1c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009b20 <AES_encrypt.dummy.128>:
    9b20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b27:	02 00 00 
    9b2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b31:	02 00 00 
    9b34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b3b:	02 00 00 
    9b3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b45:	02 00 00 
    9b48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b4f:	02 00 00 
    9b52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b59:	02 00 00 
    9b5c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009b60 <AES_encrypt.127>:
    9b60:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9b66:	89 c9                	mov    %ecx,%ecx
    9b68:	89 ca                	mov    %ecx,%edx
    9b6a:	48 8d 0d 8f 10 03 00 	lea    0x3108f(%rip),%rcx        # 3ac00 <Te3>
    9b71:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9b74:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9b78:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9b7f:	00 00 00 
    9b82:	41 ff d6             	call   *%r14
    9b85:	49 8b 0e             	mov    (%r14),%rcx
    9b88:	33 81 94 00 00 00    	xor    0x94(%rcx),%eax
    9b8e:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    9b92:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9b99:	00 00 00 
    9b9c:	41 ff d6             	call   *%r14
    9b9f:	41 89 06             	mov    %eax,(%r14)
    9ba2:	e9 4d 00 00 00       	jmp    9bf4 <AES_encrypt.128>
    9ba7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bae:	02 00 00 
    9bb1:	0f 1f 00             	nopl   (%rax)

0000000000009bb4 <AES_encrypt.dummy.129>:
    9bb4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bbb:	02 00 00 
    9bbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bc5:	02 00 00 
    9bc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bcf:	02 00 00 
    9bd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bd9:	02 00 00 
    9bdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9be3:	02 00 00 
    9be6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bed:	02 00 00 
    9bf0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009bf4 <AES_encrypt.128>:
    9bf4:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9bf8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9bff:	00 00 00 
    9c02:	41 ff d6             	call   *%r14
    9c05:	41 8b 06             	mov    (%r14),%eax
    9c08:	c1 e8 18             	shr    $0x18,%eax
    9c0b:	89 c0                	mov    %eax,%eax
    9c0d:	89 c1                	mov    %eax,%ecx
    9c0f:	48 8d 05 ea 03 03 00 	lea    0x303ea(%rip),%rax        # 3a000 <Te0>
    9c16:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9c1a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9c21:	00 00 00 
    9c24:	41 ff d6             	call   *%r14
    9c27:	41 8b 06             	mov    (%r14),%eax
    9c2a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9c2e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9c35:	00 00 00 
    9c38:	41 ff d6             	call   *%r14
    9c3b:	41 8b 0e             	mov    (%r14),%ecx
    9c3e:	e9 45 00 00 00       	jmp    9c88 <AES_encrypt.129>
    9c43:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000009c48 <AES_encrypt.dummy.130>:
    9c48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c4f:	02 00 00 
    9c52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c59:	02 00 00 
    9c5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c63:	02 00 00 
    9c66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c6d:	02 00 00 
    9c70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c77:	02 00 00 
    9c7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c81:	02 00 00 
    9c84:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009c88 <AES_encrypt.129>:
    9c88:	c1 e9 10             	shr    $0x10,%ecx
    9c8b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9c91:	89 c9                	mov    %ecx,%ecx
    9c93:	89 ca                	mov    %ecx,%edx
    9c95:	48 8d 0d 64 07 03 00 	lea    0x30764(%rip),%rcx        # 3a400 <Te1>
    9c9c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9c9f:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9ca3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9caa:	00 00 00 
    9cad:	41 ff d6             	call   *%r14
    9cb0:	41 8b 0e             	mov    (%r14),%ecx
    9cb3:	c1 e9 08             	shr    $0x8,%ecx
    9cb6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9cbc:	89 c9                	mov    %ecx,%ecx
    9cbe:	89 ca                	mov    %ecx,%edx
    9cc0:	e9 43 00 00 00       	jmp    9d08 <AES_encrypt.130>
    9cc5:	0f 1f 00             	nopl   (%rax)

0000000000009cc8 <AES_encrypt.dummy.131>:
    9cc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ccf:	02 00 00 
    9cd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9cd9:	02 00 00 
    9cdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ce3:	02 00 00 
    9ce6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ced:	02 00 00 
    9cf0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9cf7:	02 00 00 
    9cfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d01:	02 00 00 
    9d04:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009d08 <AES_encrypt.130>:
    9d08:	48 8d 0d f1 0a 03 00 	lea    0x30af1(%rip),%rcx        # 3a800 <Te2>
    9d0f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9d12:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    9d16:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9d1d:	00 00 00 
    9d20:	41 ff d6             	call   *%r14
    9d23:	41 8b 0e             	mov    (%r14),%ecx
    9d26:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9d2c:	89 c9                	mov    %ecx,%ecx
    9d2e:	89 ca                	mov    %ecx,%edx
    9d30:	48 8d 0d c9 0e 03 00 	lea    0x30ec9(%rip),%rcx        # 3ac00 <Te3>
    9d37:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9d3a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9d3e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9d45:	00 00 00 
    9d48:	41 ff d6             	call   *%r14
    9d4b:	49 8b 0e             	mov    (%r14),%rcx
    9d4e:	e9 49 00 00 00       	jmp    9d9c <AES_encrypt.131>
    9d53:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    9d5a:	00 00 

0000000000009d5c <AES_encrypt.dummy.132>:
    9d5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d63:	02 00 00 
    9d66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d6d:	02 00 00 
    9d70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d77:	02 00 00 
    9d7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d81:	02 00 00 
    9d84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d8b:	02 00 00 
    9d8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d95:	02 00 00 
    9d98:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009d9c <AES_encrypt.131>:
    9d9c:	33 81 98 00 00 00    	xor    0x98(%rcx),%eax
    9da2:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9da6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9dad:	00 00 00 
    9db0:	41 ff d6             	call   *%r14
    9db3:	41 89 06             	mov    %eax,(%r14)
    9db6:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9dba:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9dc1:	00 00 00 
    9dc4:	41 ff d6             	call   *%r14
    9dc7:	41 8b 06             	mov    (%r14),%eax
    9dca:	c1 e8 18             	shr    $0x18,%eax
    9dcd:	89 c0                	mov    %eax,%eax
    9dcf:	89 c1                	mov    %eax,%ecx
    9dd1:	e9 46 00 00 00       	jmp    9e1c <AES_encrypt.132>
    9dd6:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009ddc <AES_encrypt.dummy.133>:
    9ddc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9de3:	02 00 00 
    9de6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ded:	02 00 00 
    9df0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9df7:	02 00 00 
    9dfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e01:	02 00 00 
    9e04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e0b:	02 00 00 
    9e0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e15:	02 00 00 
    9e18:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009e1c <AES_encrypt.132>:
    9e1c:	48 8d 05 dd 01 03 00 	lea    0x301dd(%rip),%rax        # 3a000 <Te0>
    9e23:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9e27:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9e2e:	00 00 00 
    9e31:	41 ff d6             	call   *%r14
    9e34:	41 8b 06             	mov    (%r14),%eax
    9e37:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9e3b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9e42:	00 00 00 
    9e45:	41 ff d6             	call   *%r14
    9e48:	41 8b 0e             	mov    (%r14),%ecx
    9e4b:	c1 e9 10             	shr    $0x10,%ecx
    9e4e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9e54:	89 c9                	mov    %ecx,%ecx
    9e56:	e9 41 00 00 00       	jmp    9e9c <AES_encrypt.133>
    9e5b:	90                   	nop

0000000000009e5c <AES_encrypt.dummy.134>:
    9e5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e63:	02 00 00 
    9e66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e6d:	02 00 00 
    9e70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e77:	02 00 00 
    9e7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e81:	02 00 00 
    9e84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e8b:	02 00 00 
    9e8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e95:	02 00 00 
    9e98:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009e9c <AES_encrypt.133>:
    9e9c:	89 ca                	mov    %ecx,%edx
    9e9e:	48 8d 0d 5b 05 03 00 	lea    0x3055b(%rip),%rcx        # 3a400 <Te1>
    9ea5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9ea8:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    9eac:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9eb3:	00 00 00 
    9eb6:	41 ff d6             	call   *%r14
    9eb9:	41 8b 0e             	mov    (%r14),%ecx
    9ebc:	c1 e9 08             	shr    $0x8,%ecx
    9ebf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9ec5:	89 c9                	mov    %ecx,%ecx
    9ec7:	89 ca                	mov    %ecx,%edx
    9ec9:	48 8d 0d 30 09 03 00 	lea    0x30930(%rip),%rcx        # 3a800 <Te2>
    9ed0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9ed3:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9ed7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9ede:	00 00 00 
    9ee1:	41 ff d6             	call   *%r14
    9ee4:	41 8b 0e             	mov    (%r14),%ecx
    9ee7:	e9 44 00 00 00       	jmp    9f30 <AES_encrypt.134>
    9eec:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009ef0 <AES_encrypt.dummy.135>:
    9ef0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ef7:	02 00 00 
    9efa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f01:	02 00 00 
    9f04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f0b:	02 00 00 
    9f0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f15:	02 00 00 
    9f18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f1f:	02 00 00 
    9f22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f29:	02 00 00 
    9f2c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009f30 <AES_encrypt.134>:
    9f30:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9f36:	89 c9                	mov    %ecx,%ecx
    9f38:	89 ca                	mov    %ecx,%edx
    9f3a:	48 8d 0d bf 0c 03 00 	lea    0x30cbf(%rip),%rcx        # 3ac00 <Te3>
    9f41:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9f44:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9f48:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9f4f:	00 00 00 
    9f52:	41 ff d6             	call   *%r14
    9f55:	49 8b 0e             	mov    (%r14),%rcx
    9f58:	33 81 9c 00 00 00    	xor    0x9c(%rcx),%eax
    9f5e:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9f62:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9f69:	00 00 00 
    9f6c:	41 ff d6             	call   *%r14
    9f6f:	41 89 06             	mov    %eax,(%r14)
    9f72:	e9 4d 00 00 00       	jmp    9fc4 <AES_encrypt.135>
    9f77:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f7e:	02 00 00 
    9f81:	0f 1f 00             	nopl   (%rax)

0000000000009f84 <AES_encrypt.dummy.136>:
    9f84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f8b:	02 00 00 
    9f8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f95:	02 00 00 
    9f98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f9f:	02 00 00 
    9fa2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fa9:	02 00 00 
    9fac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fb3:	02 00 00 
    9fb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fbd:	02 00 00 
    9fc0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009fc4 <AES_encrypt.135>:
    9fc4:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    9fc8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9fcf:	00 00 00 
    9fd2:	41 ff d6             	call   *%r14
    9fd5:	49 8b 06             	mov    (%r14),%rax
    9fd8:	83 b8 f0 00 00 00 0a 	cmpl   $0xa,0xf0(%rax)
    9fdf:	0f 8e e4 1e 00 00    	jle    bec9 <AES_encrypt.192+0x5>
    9fe5:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9fe9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    9ff0:	00 00 00 
    9ff3:	41 ff d6             	call   *%r14
    9ff6:	41 8b 06             	mov    (%r14),%eax
    9ff9:	c1 e8 18             	shr    $0x18,%eax
    9ffc:	89 c0                	mov    %eax,%eax
    9ffe:	e9 41 00 00 00       	jmp    a044 <AES_encrypt.136>
    a003:	90                   	nop

000000000000a004 <AES_encrypt.dummy.137>:
    a004:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a00b:	02 00 00 
    a00e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a015:	02 00 00 
    a018:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a01f:	02 00 00 
    a022:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a029:	02 00 00 
    a02c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a033:	02 00 00 
    a036:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a03d:	02 00 00 
    a040:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a044 <AES_encrypt.136>:
    a044:	89 c1                	mov    %eax,%ecx
    a046:	48 8d 05 b3 ff 02 00 	lea    0x2ffb3(%rip),%rax        # 3a000 <Te0>
    a04d:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a051:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a058:	00 00 00 
    a05b:	41 ff d6             	call   *%r14
    a05e:	41 8b 06             	mov    (%r14),%eax
    a061:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a065:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a06c:	00 00 00 
    a06f:	41 ff d6             	call   *%r14
    a072:	41 8b 0e             	mov    (%r14),%ecx
    a075:	c1 e9 10             	shr    $0x10,%ecx
    a078:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a07e:	e9 41 00 00 00       	jmp    a0c4 <AES_encrypt.137>
    a083:	90                   	nop

000000000000a084 <AES_encrypt.dummy.138>:
    a084:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a08b:	02 00 00 
    a08e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a095:	02 00 00 
    a098:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a09f:	02 00 00 
    a0a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a0a9:	02 00 00 
    a0ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a0b3:	02 00 00 
    a0b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a0bd:	02 00 00 
    a0c0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a0c4 <AES_encrypt.137>:
    a0c4:	89 c9                	mov    %ecx,%ecx
    a0c6:	89 ca                	mov    %ecx,%edx
    a0c8:	48 8d 0d 31 03 03 00 	lea    0x30331(%rip),%rcx        # 3a400 <Te1>
    a0cf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a0d2:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a0d6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a0dd:	00 00 00 
    a0e0:	41 ff d6             	call   *%r14
    a0e3:	41 8b 0e             	mov    (%r14),%ecx
    a0e6:	c1 e9 08             	shr    $0x8,%ecx
    a0e9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a0ef:	89 c9                	mov    %ecx,%ecx
    a0f1:	89 ca                	mov    %ecx,%edx
    a0f3:	48 8d 0d 06 07 03 00 	lea    0x30706(%rip),%rcx        # 3a800 <Te2>
    a0fa:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a0fd:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a101:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a108:	00 00 00 
    a10b:	41 ff d6             	call   *%r14
    a10e:	41 8b 0e             	mov    (%r14),%ecx
    a111:	e9 42 00 00 00       	jmp    a158 <AES_encrypt.138>
    a116:	66 90                	xchg   %ax,%ax

000000000000a118 <AES_encrypt.dummy.139>:
    a118:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a11f:	02 00 00 
    a122:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a129:	02 00 00 
    a12c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a133:	02 00 00 
    a136:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a13d:	02 00 00 
    a140:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a147:	02 00 00 
    a14a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a151:	02 00 00 
    a154:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a158 <AES_encrypt.138>:
    a158:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a15e:	89 c9                	mov    %ecx,%ecx
    a160:	89 ca                	mov    %ecx,%edx
    a162:	48 8d 0d 97 0a 03 00 	lea    0x30a97(%rip),%rcx        # 3ac00 <Te3>
    a169:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a16c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a170:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a177:	00 00 00 
    a17a:	41 ff d6             	call   *%r14
    a17d:	49 8b 0e             	mov    (%r14),%rcx
    a180:	33 81 a0 00 00 00    	xor    0xa0(%rcx),%eax
    a186:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    a18a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a191:	00 00 00 
    a194:	41 ff d6             	call   *%r14
    a197:	41 89 06             	mov    %eax,(%r14)
    a19a:	e9 4d 00 00 00       	jmp    a1ec <AES_encrypt.139>
    a19f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1a6:	02 00 00 
    a1a9:	0f 1f 00             	nopl   (%rax)

000000000000a1ac <AES_encrypt.dummy.140>:
    a1ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1b3:	02 00 00 
    a1b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1bd:	02 00 00 
    a1c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1c7:	02 00 00 
    a1ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1d1:	02 00 00 
    a1d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1db:	02 00 00 
    a1de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1e5:	02 00 00 
    a1e8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a1ec <AES_encrypt.139>:
    a1ec:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a1f0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a1f7:	00 00 00 
    a1fa:	41 ff d6             	call   *%r14
    a1fd:	41 8b 06             	mov    (%r14),%eax
    a200:	c1 e8 18             	shr    $0x18,%eax
    a203:	89 c0                	mov    %eax,%eax
    a205:	89 c1                	mov    %eax,%ecx
    a207:	48 8d 05 f2 fd 02 00 	lea    0x2fdf2(%rip),%rax        # 3a000 <Te0>
    a20e:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a212:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a219:	00 00 00 
    a21c:	41 ff d6             	call   *%r14
    a21f:	41 8b 06             	mov    (%r14),%eax
    a222:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a226:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a22d:	00 00 00 
    a230:	41 ff d6             	call   *%r14
    a233:	41 8b 0e             	mov    (%r14),%ecx
    a236:	e9 45 00 00 00       	jmp    a280 <AES_encrypt.140>
    a23b:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a240 <AES_encrypt.dummy.141>:
    a240:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a247:	02 00 00 
    a24a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a251:	02 00 00 
    a254:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a25b:	02 00 00 
    a25e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a265:	02 00 00 
    a268:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a26f:	02 00 00 
    a272:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a279:	02 00 00 
    a27c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a280 <AES_encrypt.140>:
    a280:	c1 e9 10             	shr    $0x10,%ecx
    a283:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a289:	89 c9                	mov    %ecx,%ecx
    a28b:	89 ca                	mov    %ecx,%edx
    a28d:	48 8d 0d 6c 01 03 00 	lea    0x3016c(%rip),%rcx        # 3a400 <Te1>
    a294:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a297:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a29b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a2a2:	00 00 00 
    a2a5:	41 ff d6             	call   *%r14
    a2a8:	41 8b 0e             	mov    (%r14),%ecx
    a2ab:	c1 e9 08             	shr    $0x8,%ecx
    a2ae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a2b4:	89 c9                	mov    %ecx,%ecx
    a2b6:	89 ca                	mov    %ecx,%edx
    a2b8:	e9 43 00 00 00       	jmp    a300 <AES_encrypt.141>
    a2bd:	0f 1f 00             	nopl   (%rax)

000000000000a2c0 <AES_encrypt.dummy.142>:
    a2c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2c7:	02 00 00 
    a2ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2d1:	02 00 00 
    a2d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2db:	02 00 00 
    a2de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2e5:	02 00 00 
    a2e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2ef:	02 00 00 
    a2f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2f9:	02 00 00 
    a2fc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a300 <AES_encrypt.141>:
    a300:	48 8d 0d f9 04 03 00 	lea    0x304f9(%rip),%rcx        # 3a800 <Te2>
    a307:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a30a:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a30e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a315:	00 00 00 
    a318:	41 ff d6             	call   *%r14
    a31b:	41 8b 0e             	mov    (%r14),%ecx
    a31e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a324:	89 c9                	mov    %ecx,%ecx
    a326:	89 ca                	mov    %ecx,%edx
    a328:	48 8d 0d d1 08 03 00 	lea    0x308d1(%rip),%rcx        # 3ac00 <Te3>
    a32f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a332:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a336:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a33d:	00 00 00 
    a340:	41 ff d6             	call   *%r14
    a343:	49 8b 0e             	mov    (%r14),%rcx
    a346:	e9 49 00 00 00       	jmp    a394 <AES_encrypt.142>
    a34b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    a352:	00 00 

000000000000a354 <AES_encrypt.dummy.143>:
    a354:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a35b:	02 00 00 
    a35e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a365:	02 00 00 
    a368:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a36f:	02 00 00 
    a372:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a379:	02 00 00 
    a37c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a383:	02 00 00 
    a386:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a38d:	02 00 00 
    a390:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a394 <AES_encrypt.142>:
    a394:	33 81 a4 00 00 00    	xor    0xa4(%rcx),%eax
    a39a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a39e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a3a5:	00 00 00 
    a3a8:	41 ff d6             	call   *%r14
    a3ab:	41 89 06             	mov    %eax,(%r14)
    a3ae:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a3b2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a3b9:	00 00 00 
    a3bc:	41 ff d6             	call   *%r14
    a3bf:	41 8b 06             	mov    (%r14),%eax
    a3c2:	c1 e8 18             	shr    $0x18,%eax
    a3c5:	89 c0                	mov    %eax,%eax
    a3c7:	89 c1                	mov    %eax,%ecx
    a3c9:	e9 46 00 00 00       	jmp    a414 <AES_encrypt.143>
    a3ce:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000a3d4 <AES_encrypt.dummy.144>:
    a3d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3db:	02 00 00 
    a3de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3e5:	02 00 00 
    a3e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3ef:	02 00 00 
    a3f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3f9:	02 00 00 
    a3fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a403:	02 00 00 
    a406:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a40d:	02 00 00 
    a410:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a414 <AES_encrypt.143>:
    a414:	48 8d 05 e5 fb 02 00 	lea    0x2fbe5(%rip),%rax        # 3a000 <Te0>
    a41b:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a41f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a426:	00 00 00 
    a429:	41 ff d6             	call   *%r14
    a42c:	41 8b 06             	mov    (%r14),%eax
    a42f:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a433:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a43a:	00 00 00 
    a43d:	41 ff d6             	call   *%r14
    a440:	41 8b 0e             	mov    (%r14),%ecx
    a443:	c1 e9 10             	shr    $0x10,%ecx
    a446:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a44c:	89 c9                	mov    %ecx,%ecx
    a44e:	e9 41 00 00 00       	jmp    a494 <AES_encrypt.144>
    a453:	90                   	nop

000000000000a454 <AES_encrypt.dummy.145>:
    a454:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a45b:	02 00 00 
    a45e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a465:	02 00 00 
    a468:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a46f:	02 00 00 
    a472:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a479:	02 00 00 
    a47c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a483:	02 00 00 
    a486:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a48d:	02 00 00 
    a490:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a494 <AES_encrypt.144>:
    a494:	89 ca                	mov    %ecx,%edx
    a496:	48 8d 0d 63 ff 02 00 	lea    0x2ff63(%rip),%rcx        # 3a400 <Te1>
    a49d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a4a0:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a4a4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a4ab:	00 00 00 
    a4ae:	41 ff d6             	call   *%r14
    a4b1:	41 8b 0e             	mov    (%r14),%ecx
    a4b4:	c1 e9 08             	shr    $0x8,%ecx
    a4b7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a4bd:	89 c9                	mov    %ecx,%ecx
    a4bf:	89 ca                	mov    %ecx,%edx
    a4c1:	48 8d 0d 38 03 03 00 	lea    0x30338(%rip),%rcx        # 3a800 <Te2>
    a4c8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a4cb:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a4cf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a4d6:	00 00 00 
    a4d9:	41 ff d6             	call   *%r14
    a4dc:	41 8b 0e             	mov    (%r14),%ecx
    a4df:	e9 44 00 00 00       	jmp    a528 <AES_encrypt.145>
    a4e4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a4e8 <AES_encrypt.dummy.146>:
    a4e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4ef:	02 00 00 
    a4f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4f9:	02 00 00 
    a4fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a503:	02 00 00 
    a506:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a50d:	02 00 00 
    a510:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a517:	02 00 00 
    a51a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a521:	02 00 00 
    a524:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a528 <AES_encrypt.145>:
    a528:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a52e:	89 c9                	mov    %ecx,%ecx
    a530:	89 ca                	mov    %ecx,%edx
    a532:	48 8d 0d c7 06 03 00 	lea    0x306c7(%rip),%rcx        # 3ac00 <Te3>
    a539:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a53c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a540:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a547:	00 00 00 
    a54a:	41 ff d6             	call   *%r14
    a54d:	49 8b 0e             	mov    (%r14),%rcx
    a550:	33 81 a8 00 00 00    	xor    0xa8(%rcx),%eax
    a556:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a55a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a561:	00 00 00 
    a564:	41 ff d6             	call   *%r14
    a567:	41 89 06             	mov    %eax,(%r14)
    a56a:	e9 4d 00 00 00       	jmp    a5bc <AES_encrypt.146>
    a56f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a576:	02 00 00 
    a579:	0f 1f 00             	nopl   (%rax)

000000000000a57c <AES_encrypt.dummy.147>:
    a57c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a583:	02 00 00 
    a586:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a58d:	02 00 00 
    a590:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a597:	02 00 00 
    a59a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5a1:	02 00 00 
    a5a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5ab:	02 00 00 
    a5ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5b5:	02 00 00 
    a5b8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a5bc <AES_encrypt.146>:
    a5bc:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a5c0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a5c7:	00 00 00 
    a5ca:	41 ff d6             	call   *%r14
    a5cd:	41 8b 06             	mov    (%r14),%eax
    a5d0:	c1 e8 18             	shr    $0x18,%eax
    a5d3:	89 c0                	mov    %eax,%eax
    a5d5:	89 c1                	mov    %eax,%ecx
    a5d7:	48 8d 05 22 fa 02 00 	lea    0x2fa22(%rip),%rax        # 3a000 <Te0>
    a5de:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a5e2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a5e9:	00 00 00 
    a5ec:	41 ff d6             	call   *%r14
    a5ef:	41 8b 06             	mov    (%r14),%eax
    a5f2:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a5f6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a5fd:	00 00 00 
    a600:	41 ff d6             	call   *%r14
    a603:	41 8b 0e             	mov    (%r14),%ecx
    a606:	e9 45 00 00 00       	jmp    a650 <AES_encrypt.147>
    a60b:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a610 <AES_encrypt.dummy.148>:
    a610:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a617:	02 00 00 
    a61a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a621:	02 00 00 
    a624:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a62b:	02 00 00 
    a62e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a635:	02 00 00 
    a638:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a63f:	02 00 00 
    a642:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a649:	02 00 00 
    a64c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a650 <AES_encrypt.147>:
    a650:	c1 e9 10             	shr    $0x10,%ecx
    a653:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a659:	89 c9                	mov    %ecx,%ecx
    a65b:	89 ca                	mov    %ecx,%edx
    a65d:	48 8d 0d 9c fd 02 00 	lea    0x2fd9c(%rip),%rcx        # 3a400 <Te1>
    a664:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a667:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a66b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a672:	00 00 00 
    a675:	41 ff d6             	call   *%r14
    a678:	41 8b 0e             	mov    (%r14),%ecx
    a67b:	c1 e9 08             	shr    $0x8,%ecx
    a67e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a684:	89 c9                	mov    %ecx,%ecx
    a686:	89 ca                	mov    %ecx,%edx
    a688:	e9 43 00 00 00       	jmp    a6d0 <AES_encrypt.148>
    a68d:	0f 1f 00             	nopl   (%rax)

000000000000a690 <AES_encrypt.dummy.149>:
    a690:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a697:	02 00 00 
    a69a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6a1:	02 00 00 
    a6a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6ab:	02 00 00 
    a6ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6b5:	02 00 00 
    a6b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6bf:	02 00 00 
    a6c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6c9:	02 00 00 
    a6cc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a6d0 <AES_encrypt.148>:
    a6d0:	48 8d 0d 29 01 03 00 	lea    0x30129(%rip),%rcx        # 3a800 <Te2>
    a6d7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a6da:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a6de:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a6e5:	00 00 00 
    a6e8:	41 ff d6             	call   *%r14
    a6eb:	41 8b 0e             	mov    (%r14),%ecx
    a6ee:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a6f4:	89 c9                	mov    %ecx,%ecx
    a6f6:	89 ca                	mov    %ecx,%edx
    a6f8:	48 8d 0d 01 05 03 00 	lea    0x30501(%rip),%rcx        # 3ac00 <Te3>
    a6ff:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a702:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a706:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a70d:	00 00 00 
    a710:	41 ff d6             	call   *%r14
    a713:	49 8b 0e             	mov    (%r14),%rcx
    a716:	e9 49 00 00 00       	jmp    a764 <AES_encrypt.149>
    a71b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    a722:	00 00 

000000000000a724 <AES_encrypt.dummy.150>:
    a724:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a72b:	02 00 00 
    a72e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a735:	02 00 00 
    a738:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a73f:	02 00 00 
    a742:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a749:	02 00 00 
    a74c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a753:	02 00 00 
    a756:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a75d:	02 00 00 
    a760:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a764 <AES_encrypt.149>:
    a764:	33 81 ac 00 00 00    	xor    0xac(%rcx),%eax
    a76a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a76e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a775:	00 00 00 
    a778:	41 ff d6             	call   *%r14
    a77b:	41 89 06             	mov    %eax,(%r14)
    a77e:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    a782:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a789:	00 00 00 
    a78c:	41 ff d6             	call   *%r14
    a78f:	41 8b 06             	mov    (%r14),%eax
    a792:	c1 e8 18             	shr    $0x18,%eax
    a795:	89 c0                	mov    %eax,%eax
    a797:	89 c1                	mov    %eax,%ecx
    a799:	e9 46 00 00 00       	jmp    a7e4 <AES_encrypt.150>
    a79e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000a7a4 <AES_encrypt.dummy.151>:
    a7a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7ab:	02 00 00 
    a7ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7b5:	02 00 00 
    a7b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7bf:	02 00 00 
    a7c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7c9:	02 00 00 
    a7cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7d3:	02 00 00 
    a7d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7dd:	02 00 00 
    a7e0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a7e4 <AES_encrypt.150>:
    a7e4:	48 8d 05 15 f8 02 00 	lea    0x2f815(%rip),%rax        # 3a000 <Te0>
    a7eb:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a7ef:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a7f6:	00 00 00 
    a7f9:	41 ff d6             	call   *%r14
    a7fc:	41 8b 06             	mov    (%r14),%eax
    a7ff:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a803:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a80a:	00 00 00 
    a80d:	41 ff d6             	call   *%r14
    a810:	41 8b 0e             	mov    (%r14),%ecx
    a813:	c1 e9 10             	shr    $0x10,%ecx
    a816:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a81c:	89 c9                	mov    %ecx,%ecx
    a81e:	e9 41 00 00 00       	jmp    a864 <AES_encrypt.151>
    a823:	90                   	nop

000000000000a824 <AES_encrypt.dummy.152>:
    a824:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a82b:	02 00 00 
    a82e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a835:	02 00 00 
    a838:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a83f:	02 00 00 
    a842:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a849:	02 00 00 
    a84c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a853:	02 00 00 
    a856:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a85d:	02 00 00 
    a860:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a864 <AES_encrypt.151>:
    a864:	89 ca                	mov    %ecx,%edx
    a866:	48 8d 0d 93 fb 02 00 	lea    0x2fb93(%rip),%rcx        # 3a400 <Te1>
    a86d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a870:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a874:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a87b:	00 00 00 
    a87e:	41 ff d6             	call   *%r14
    a881:	41 8b 0e             	mov    (%r14),%ecx
    a884:	c1 e9 08             	shr    $0x8,%ecx
    a887:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a88d:	89 c9                	mov    %ecx,%ecx
    a88f:	89 ca                	mov    %ecx,%edx
    a891:	48 8d 0d 68 ff 02 00 	lea    0x2ff68(%rip),%rcx        # 3a800 <Te2>
    a898:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a89b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a89f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a8a6:	00 00 00 
    a8a9:	41 ff d6             	call   *%r14
    a8ac:	41 8b 0e             	mov    (%r14),%ecx
    a8af:	e9 44 00 00 00       	jmp    a8f8 <AES_encrypt.152>
    a8b4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a8b8 <AES_encrypt.dummy.153>:
    a8b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8bf:	02 00 00 
    a8c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8c9:	02 00 00 
    a8cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8d3:	02 00 00 
    a8d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8dd:	02 00 00 
    a8e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8e7:	02 00 00 
    a8ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8f1:	02 00 00 
    a8f4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a8f8 <AES_encrypt.152>:
    a8f8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a8fe:	89 c9                	mov    %ecx,%ecx
    a900:	89 ca                	mov    %ecx,%edx
    a902:	48 8d 0d f7 02 03 00 	lea    0x302f7(%rip),%rcx        # 3ac00 <Te3>
    a909:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a90c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a910:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a917:	00 00 00 
    a91a:	41 ff d6             	call   *%r14
    a91d:	49 8b 0e             	mov    (%r14),%rcx
    a920:	33 81 b0 00 00 00    	xor    0xb0(%rcx),%eax
    a926:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a92a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a931:	00 00 00 
    a934:	41 ff d6             	call   *%r14
    a937:	41 89 06             	mov    %eax,(%r14)
    a93a:	e9 4d 00 00 00       	jmp    a98c <AES_encrypt.153>
    a93f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a946:	02 00 00 
    a949:	0f 1f 00             	nopl   (%rax)

000000000000a94c <AES_encrypt.dummy.154>:
    a94c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a953:	02 00 00 
    a956:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a95d:	02 00 00 
    a960:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a967:	02 00 00 
    a96a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a971:	02 00 00 
    a974:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a97b:	02 00 00 
    a97e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a985:	02 00 00 
    a988:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a98c <AES_encrypt.153>:
    a98c:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a990:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a997:	00 00 00 
    a99a:	41 ff d6             	call   *%r14
    a99d:	41 8b 06             	mov    (%r14),%eax
    a9a0:	c1 e8 18             	shr    $0x18,%eax
    a9a3:	89 c0                	mov    %eax,%eax
    a9a5:	89 c1                	mov    %eax,%ecx
    a9a7:	48 8d 05 52 f6 02 00 	lea    0x2f652(%rip),%rax        # 3a000 <Te0>
    a9ae:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a9b2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a9b9:	00 00 00 
    a9bc:	41 ff d6             	call   *%r14
    a9bf:	41 8b 06             	mov    (%r14),%eax
    a9c2:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a9c6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    a9cd:	00 00 00 
    a9d0:	41 ff d6             	call   *%r14
    a9d3:	41 8b 0e             	mov    (%r14),%ecx
    a9d6:	e9 45 00 00 00       	jmp    aa20 <AES_encrypt.154>
    a9db:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a9e0 <AES_encrypt.dummy.155>:
    a9e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9e7:	02 00 00 
    a9ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9f1:	02 00 00 
    a9f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9fb:	02 00 00 
    a9fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa05:	02 00 00 
    aa08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa0f:	02 00 00 
    aa12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa19:	02 00 00 
    aa1c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000aa20 <AES_encrypt.154>:
    aa20:	c1 e9 10             	shr    $0x10,%ecx
    aa23:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aa29:	89 c9                	mov    %ecx,%ecx
    aa2b:	89 ca                	mov    %ecx,%edx
    aa2d:	48 8d 0d cc f9 02 00 	lea    0x2f9cc(%rip),%rcx        # 3a400 <Te1>
    aa34:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aa37:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    aa3b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    aa42:	00 00 00 
    aa45:	41 ff d6             	call   *%r14
    aa48:	41 8b 0e             	mov    (%r14),%ecx
    aa4b:	c1 e9 08             	shr    $0x8,%ecx
    aa4e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aa54:	89 c9                	mov    %ecx,%ecx
    aa56:	89 ca                	mov    %ecx,%edx
    aa58:	e9 43 00 00 00       	jmp    aaa0 <AES_encrypt.155>
    aa5d:	0f 1f 00             	nopl   (%rax)

000000000000aa60 <AES_encrypt.dummy.156>:
    aa60:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa67:	02 00 00 
    aa6a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa71:	02 00 00 
    aa74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa7b:	02 00 00 
    aa7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa85:	02 00 00 
    aa88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa8f:	02 00 00 
    aa92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa99:	02 00 00 
    aa9c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000aaa0 <AES_encrypt.155>:
    aaa0:	48 8d 0d 59 fd 02 00 	lea    0x2fd59(%rip),%rcx        # 3a800 <Te2>
    aaa7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aaaa:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    aaae:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    aab5:	00 00 00 
    aab8:	41 ff d6             	call   *%r14
    aabb:	41 8b 0e             	mov    (%r14),%ecx
    aabe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aac4:	89 c9                	mov    %ecx,%ecx
    aac6:	89 ca                	mov    %ecx,%edx
    aac8:	48 8d 0d 31 01 03 00 	lea    0x30131(%rip),%rcx        # 3ac00 <Te3>
    aacf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aad2:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    aad6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    aadd:	00 00 00 
    aae0:	41 ff d6             	call   *%r14
    aae3:	49 8b 0e             	mov    (%r14),%rcx
    aae6:	e9 49 00 00 00       	jmp    ab34 <AES_encrypt.156>
    aaeb:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    aaf2:	00 00 

000000000000aaf4 <AES_encrypt.dummy.157>:
    aaf4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aafb:	02 00 00 
    aafe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab05:	02 00 00 
    ab08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab0f:	02 00 00 
    ab12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab19:	02 00 00 
    ab1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab23:	02 00 00 
    ab26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab2d:	02 00 00 
    ab30:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ab34 <AES_encrypt.156>:
    ab34:	33 81 b4 00 00 00    	xor    0xb4(%rcx),%eax
    ab3a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    ab3e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ab45:	00 00 00 
    ab48:	41 ff d6             	call   *%r14
    ab4b:	41 89 06             	mov    %eax,(%r14)
    ab4e:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    ab52:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ab59:	00 00 00 
    ab5c:	41 ff d6             	call   *%r14
    ab5f:	41 8b 06             	mov    (%r14),%eax
    ab62:	c1 e8 18             	shr    $0x18,%eax
    ab65:	89 c0                	mov    %eax,%eax
    ab67:	89 c1                	mov    %eax,%ecx
    ab69:	e9 46 00 00 00       	jmp    abb4 <AES_encrypt.157>
    ab6e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000ab74 <AES_encrypt.dummy.158>:
    ab74:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab7b:	02 00 00 
    ab7e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab85:	02 00 00 
    ab88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab8f:	02 00 00 
    ab92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab99:	02 00 00 
    ab9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aba3:	02 00 00 
    aba6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abad:	02 00 00 
    abb0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000abb4 <AES_encrypt.157>:
    abb4:	48 8d 05 45 f4 02 00 	lea    0x2f445(%rip),%rax        # 3a000 <Te0>
    abbb:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    abbf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    abc6:	00 00 00 
    abc9:	41 ff d6             	call   *%r14
    abcc:	41 8b 06             	mov    (%r14),%eax
    abcf:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    abd3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    abda:	00 00 00 
    abdd:	41 ff d6             	call   *%r14
    abe0:	41 8b 0e             	mov    (%r14),%ecx
    abe3:	c1 e9 10             	shr    $0x10,%ecx
    abe6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    abec:	89 c9                	mov    %ecx,%ecx
    abee:	e9 41 00 00 00       	jmp    ac34 <AES_encrypt.158>
    abf3:	90                   	nop

000000000000abf4 <AES_encrypt.dummy.159>:
    abf4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abfb:	02 00 00 
    abfe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac05:	02 00 00 
    ac08:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac0f:	02 00 00 
    ac12:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac19:	02 00 00 
    ac1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac23:	02 00 00 
    ac26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac2d:	02 00 00 
    ac30:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ac34 <AES_encrypt.158>:
    ac34:	89 ca                	mov    %ecx,%edx
    ac36:	48 8d 0d c3 f7 02 00 	lea    0x2f7c3(%rip),%rcx        # 3a400 <Te1>
    ac3d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ac40:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    ac44:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ac4b:	00 00 00 
    ac4e:	41 ff d6             	call   *%r14
    ac51:	41 8b 0e             	mov    (%r14),%ecx
    ac54:	c1 e9 08             	shr    $0x8,%ecx
    ac57:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ac5d:	89 c9                	mov    %ecx,%ecx
    ac5f:	89 ca                	mov    %ecx,%edx
    ac61:	48 8d 0d 98 fb 02 00 	lea    0x2fb98(%rip),%rcx        # 3a800 <Te2>
    ac68:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ac6b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    ac6f:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ac76:	00 00 00 
    ac79:	41 ff d6             	call   *%r14
    ac7c:	41 8b 0e             	mov    (%r14),%ecx
    ac7f:	e9 44 00 00 00       	jmp    acc8 <AES_encrypt.159>
    ac84:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ac88 <AES_encrypt.dummy.160>:
    ac88:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac8f:	02 00 00 
    ac92:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac99:	02 00 00 
    ac9c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aca3:	02 00 00 
    aca6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    acad:	02 00 00 
    acb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    acb7:	02 00 00 
    acba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    acc1:	02 00 00 
    acc4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000acc8 <AES_encrypt.159>:
    acc8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    acce:	89 c9                	mov    %ecx,%ecx
    acd0:	89 ca                	mov    %ecx,%edx
    acd2:	48 8d 0d 27 ff 02 00 	lea    0x2ff27(%rip),%rcx        # 3ac00 <Te3>
    acd9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    acdc:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    ace0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ace7:	00 00 00 
    acea:	41 ff d6             	call   *%r14
    aced:	49 8b 0e             	mov    (%r14),%rcx
    acf0:	33 81 b8 00 00 00    	xor    0xb8(%rcx),%eax
    acf6:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    acfa:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ad01:	00 00 00 
    ad04:	41 ff d6             	call   *%r14
    ad07:	41 89 06             	mov    %eax,(%r14)
    ad0a:	e9 4d 00 00 00       	jmp    ad5c <AES_encrypt.160>
    ad0f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad16:	02 00 00 
    ad19:	0f 1f 00             	nopl   (%rax)

000000000000ad1c <AES_encrypt.dummy.161>:
    ad1c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad23:	02 00 00 
    ad26:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad2d:	02 00 00 
    ad30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad37:	02 00 00 
    ad3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad41:	02 00 00 
    ad44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad4b:	02 00 00 
    ad4e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ad55:	02 00 00 
    ad58:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ad5c <AES_encrypt.160>:
    ad5c:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    ad60:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ad67:	00 00 00 
    ad6a:	41 ff d6             	call   *%r14
    ad6d:	41 8b 06             	mov    (%r14),%eax
    ad70:	c1 e8 18             	shr    $0x18,%eax
    ad73:	89 c0                	mov    %eax,%eax
    ad75:	89 c1                	mov    %eax,%ecx
    ad77:	48 8d 05 82 f2 02 00 	lea    0x2f282(%rip),%rax        # 3a000 <Te0>
    ad7e:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    ad82:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ad89:	00 00 00 
    ad8c:	41 ff d6             	call   *%r14
    ad8f:	41 8b 06             	mov    (%r14),%eax
    ad92:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    ad96:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ad9d:	00 00 00 
    ada0:	41 ff d6             	call   *%r14
    ada3:	41 8b 0e             	mov    (%r14),%ecx
    ada6:	e9 45 00 00 00       	jmp    adf0 <AES_encrypt.161>
    adab:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000adb0 <AES_encrypt.dummy.162>:
    adb0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    adb7:	02 00 00 
    adba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    adc1:	02 00 00 
    adc4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    adcb:	02 00 00 
    adce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    add5:	02 00 00 
    add8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    addf:	02 00 00 
    ade2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ade9:	02 00 00 
    adec:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000adf0 <AES_encrypt.161>:
    adf0:	c1 e9 10             	shr    $0x10,%ecx
    adf3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    adf9:	89 c9                	mov    %ecx,%ecx
    adfb:	89 ca                	mov    %ecx,%edx
    adfd:	48 8d 0d fc f5 02 00 	lea    0x2f5fc(%rip),%rcx        # 3a400 <Te1>
    ae04:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae07:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    ae0b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ae12:	00 00 00 
    ae15:	41 ff d6             	call   *%r14
    ae18:	41 8b 0e             	mov    (%r14),%ecx
    ae1b:	c1 e9 08             	shr    $0x8,%ecx
    ae1e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae24:	89 c9                	mov    %ecx,%ecx
    ae26:	89 ca                	mov    %ecx,%edx
    ae28:	e9 43 00 00 00       	jmp    ae70 <AES_encrypt.162>
    ae2d:	0f 1f 00             	nopl   (%rax)

000000000000ae30 <AES_encrypt.dummy.163>:
    ae30:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae37:	02 00 00 
    ae3a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae41:	02 00 00 
    ae44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae4b:	02 00 00 
    ae4e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae55:	02 00 00 
    ae58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae5f:	02 00 00 
    ae62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ae69:	02 00 00 
    ae6c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ae70 <AES_encrypt.162>:
    ae70:	48 8d 0d 89 f9 02 00 	lea    0x2f989(%rip),%rcx        # 3a800 <Te2>
    ae77:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae7a:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    ae7e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ae85:	00 00 00 
    ae88:	41 ff d6             	call   *%r14
    ae8b:	41 8b 0e             	mov    (%r14),%ecx
    ae8e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae94:	89 c9                	mov    %ecx,%ecx
    ae96:	89 ca                	mov    %ecx,%edx
    ae98:	48 8d 0d 61 fd 02 00 	lea    0x2fd61(%rip),%rcx        # 3ac00 <Te3>
    ae9f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aea2:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    aea6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    aead:	00 00 00 
    aeb0:	41 ff d6             	call   *%r14
    aeb3:	49 8b 0e             	mov    (%r14),%rcx
    aeb6:	e9 49 00 00 00       	jmp    af04 <AES_encrypt.163>
    aebb:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    aec2:	00 00 

000000000000aec4 <AES_encrypt.dummy.164>:
    aec4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aecb:	02 00 00 
    aece:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aed5:	02 00 00 
    aed8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aedf:	02 00 00 
    aee2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aee9:	02 00 00 
    aeec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aef3:	02 00 00 
    aef6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aefd:	02 00 00 
    af00:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000af04 <AES_encrypt.163>:
    af04:	33 81 bc 00 00 00    	xor    0xbc(%rcx),%eax
    af0a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    af0e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    af15:	00 00 00 
    af18:	41 ff d6             	call   *%r14
    af1b:	41 89 06             	mov    %eax,(%r14)
    af1e:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    af22:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    af29:	00 00 00 
    af2c:	41 ff d6             	call   *%r14
    af2f:	49 8b 06             	mov    (%r14),%rax
    af32:	83 b8 f0 00 00 00 0c 	cmpl   $0xc,0xf0(%rax)
    af39:	0f 8e 85 0f 00 00    	jle    bec4 <AES_encrypt.192>
    af3f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    af43:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    af4a:	00 00 00 
    af4d:	41 ff d6             	call   *%r14
    af50:	41 8b 06             	mov    (%r14),%eax
    af53:	e9 40 00 00 00       	jmp    af98 <AES_encrypt.164>

000000000000af58 <AES_encrypt.dummy.165>:
    af58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af5f:	02 00 00 
    af62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af69:	02 00 00 
    af6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af73:	02 00 00 
    af76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af7d:	02 00 00 
    af80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af87:	02 00 00 
    af8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    af91:	02 00 00 
    af94:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000af98 <AES_encrypt.164>:
    af98:	c1 e8 18             	shr    $0x18,%eax
    af9b:	89 c0                	mov    %eax,%eax
    af9d:	89 c1                	mov    %eax,%ecx
    af9f:	48 8d 05 5a f0 02 00 	lea    0x2f05a(%rip),%rax        # 3a000 <Te0>
    afa6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    afaa:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    afb1:	00 00 00 
    afb4:	41 ff d6             	call   *%r14
    afb7:	41 8b 06             	mov    (%r14),%eax
    afba:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    afbe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    afc5:	00 00 00 
    afc8:	41 ff d6             	call   *%r14
    afcb:	41 8b 0e             	mov    (%r14),%ecx
    afce:	c1 e9 10             	shr    $0x10,%ecx
    afd1:	e9 42 00 00 00       	jmp    b018 <AES_encrypt.165>
    afd6:	66 90                	xchg   %ax,%ax

000000000000afd8 <AES_encrypt.dummy.166>:
    afd8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    afdf:	02 00 00 
    afe2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    afe9:	02 00 00 
    afec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aff3:	02 00 00 
    aff6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    affd:	02 00 00 
    b000:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b007:	02 00 00 
    b00a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b011:	02 00 00 
    b014:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b018 <AES_encrypt.165>:
    b018:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b01e:	89 c9                	mov    %ecx,%ecx
    b020:	89 ca                	mov    %ecx,%edx
    b022:	48 8d 0d d7 f3 02 00 	lea    0x2f3d7(%rip),%rcx        # 3a400 <Te1>
    b029:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b02c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    b030:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b037:	00 00 00 
    b03a:	41 ff d6             	call   *%r14
    b03d:	41 8b 0e             	mov    (%r14),%ecx
    b040:	c1 e9 08             	shr    $0x8,%ecx
    b043:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b049:	89 c9                	mov    %ecx,%ecx
    b04b:	89 ca                	mov    %ecx,%edx
    b04d:	e9 46 00 00 00       	jmp    b098 <AES_encrypt.166>
    b052:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000b058 <AES_encrypt.dummy.167>:
    b058:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b05f:	02 00 00 
    b062:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b069:	02 00 00 
    b06c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b073:	02 00 00 
    b076:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b07d:	02 00 00 
    b080:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b087:	02 00 00 
    b08a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b091:	02 00 00 
    b094:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b098 <AES_encrypt.166>:
    b098:	48 8d 0d 61 f7 02 00 	lea    0x2f761(%rip),%rcx        # 3a800 <Te2>
    b09f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b0a2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    b0a6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b0ad:	00 00 00 
    b0b0:	41 ff d6             	call   *%r14
    b0b3:	41 8b 0e             	mov    (%r14),%ecx
    b0b6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b0bc:	89 c9                	mov    %ecx,%ecx
    b0be:	89 ca                	mov    %ecx,%edx
    b0c0:	48 8d 0d 39 fb 02 00 	lea    0x2fb39(%rip),%rcx        # 3ac00 <Te3>
    b0c7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b0ca:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    b0ce:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b0d5:	00 00 00 
    b0d8:	41 ff d6             	call   *%r14
    b0db:	49 8b 0e             	mov    (%r14),%rcx
    b0de:	e9 49 00 00 00       	jmp    b12c <AES_encrypt.167>
    b0e3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    b0ea:	00 00 

000000000000b0ec <AES_encrypt.dummy.168>:
    b0ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b0f3:	02 00 00 
    b0f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b0fd:	02 00 00 
    b100:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b107:	02 00 00 
    b10a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b111:	02 00 00 
    b114:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b11b:	02 00 00 
    b11e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b125:	02 00 00 
    b128:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b12c <AES_encrypt.167>:
    b12c:	33 81 c0 00 00 00    	xor    0xc0(%rcx),%eax
    b132:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    b136:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b13d:	00 00 00 
    b140:	41 ff d6             	call   *%r14
    b143:	41 89 06             	mov    %eax,(%r14)
    b146:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    b14a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b151:	00 00 00 
    b154:	41 ff d6             	call   *%r14
    b157:	41 8b 06             	mov    (%r14),%eax
    b15a:	c1 e8 18             	shr    $0x18,%eax
    b15d:	89 c0                	mov    %eax,%eax
    b15f:	89 c1                	mov    %eax,%ecx
    b161:	e9 46 00 00 00       	jmp    b1ac <AES_encrypt.168>
    b166:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000b16c <AES_encrypt.dummy.169>:
    b16c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b173:	02 00 00 
    b176:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b17d:	02 00 00 
    b180:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b187:	02 00 00 
    b18a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b191:	02 00 00 
    b194:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b19b:	02 00 00 
    b19e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b1a5:	02 00 00 
    b1a8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b1ac <AES_encrypt.168>:
    b1ac:	48 8d 05 4d ee 02 00 	lea    0x2ee4d(%rip),%rax        # 3a000 <Te0>
    b1b3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    b1b7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b1be:	00 00 00 
    b1c1:	41 ff d6             	call   *%r14
    b1c4:	41 8b 06             	mov    (%r14),%eax
    b1c7:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    b1cb:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b1d2:	00 00 00 
    b1d5:	41 ff d6             	call   *%r14
    b1d8:	41 8b 0e             	mov    (%r14),%ecx
    b1db:	c1 e9 10             	shr    $0x10,%ecx
    b1de:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b1e4:	89 c9                	mov    %ecx,%ecx
    b1e6:	e9 41 00 00 00       	jmp    b22c <AES_encrypt.169>
    b1eb:	90                   	nop

000000000000b1ec <AES_encrypt.dummy.170>:
    b1ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b1f3:	02 00 00 
    b1f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b1fd:	02 00 00 
    b200:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b207:	02 00 00 
    b20a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b211:	02 00 00 
    b214:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b21b:	02 00 00 
    b21e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b225:	02 00 00 
    b228:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b22c <AES_encrypt.169>:
    b22c:	89 ca                	mov    %ecx,%edx
    b22e:	48 8d 0d cb f1 02 00 	lea    0x2f1cb(%rip),%rcx        # 3a400 <Te1>
    b235:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b238:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    b23c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b243:	00 00 00 
    b246:	41 ff d6             	call   *%r14
    b249:	41 8b 0e             	mov    (%r14),%ecx
    b24c:	c1 e9 08             	shr    $0x8,%ecx
    b24f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b255:	89 c9                	mov    %ecx,%ecx
    b257:	89 ca                	mov    %ecx,%edx
    b259:	48 8d 0d a0 f5 02 00 	lea    0x2f5a0(%rip),%rcx        # 3a800 <Te2>
    b260:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b263:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    b267:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b26e:	00 00 00 
    b271:	41 ff d6             	call   *%r14
    b274:	41 8b 0e             	mov    (%r14),%ecx
    b277:	e9 44 00 00 00       	jmp    b2c0 <AES_encrypt.170>
    b27c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b280 <AES_encrypt.dummy.171>:
    b280:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b287:	02 00 00 
    b28a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b291:	02 00 00 
    b294:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b29b:	02 00 00 
    b29e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b2a5:	02 00 00 
    b2a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b2af:	02 00 00 
    b2b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b2b9:	02 00 00 
    b2bc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b2c0 <AES_encrypt.170>:
    b2c0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b2c6:	89 c9                	mov    %ecx,%ecx
    b2c8:	89 ca                	mov    %ecx,%edx
    b2ca:	48 8d 0d 2f f9 02 00 	lea    0x2f92f(%rip),%rcx        # 3ac00 <Te3>
    b2d1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b2d4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    b2d8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b2df:	00 00 00 
    b2e2:	41 ff d6             	call   *%r14
    b2e5:	49 8b 0e             	mov    (%r14),%rcx
    b2e8:	33 81 c4 00 00 00    	xor    0xc4(%rcx),%eax
    b2ee:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    b2f2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b2f9:	00 00 00 
    b2fc:	41 ff d6             	call   *%r14
    b2ff:	41 89 06             	mov    %eax,(%r14)
    b302:	e9 4d 00 00 00       	jmp    b354 <AES_encrypt.171>
    b307:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b30e:	02 00 00 
    b311:	0f 1f 00             	nopl   (%rax)

000000000000b314 <AES_encrypt.dummy.172>:
    b314:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b31b:	02 00 00 
    b31e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b325:	02 00 00 
    b328:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b32f:	02 00 00 
    b332:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b339:	02 00 00 
    b33c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b343:	02 00 00 
    b346:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b34d:	02 00 00 
    b350:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b354 <AES_encrypt.171>:
    b354:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    b358:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b35f:	00 00 00 
    b362:	41 ff d6             	call   *%r14
    b365:	41 8b 06             	mov    (%r14),%eax
    b368:	c1 e8 18             	shr    $0x18,%eax
    b36b:	89 c0                	mov    %eax,%eax
    b36d:	89 c1                	mov    %eax,%ecx
    b36f:	48 8d 05 8a ec 02 00 	lea    0x2ec8a(%rip),%rax        # 3a000 <Te0>
    b376:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    b37a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b381:	00 00 00 
    b384:	41 ff d6             	call   *%r14
    b387:	41 8b 06             	mov    (%r14),%eax
    b38a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    b38e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b395:	00 00 00 
    b398:	41 ff d6             	call   *%r14
    b39b:	41 8b 0e             	mov    (%r14),%ecx
    b39e:	e9 45 00 00 00       	jmp    b3e8 <AES_encrypt.172>
    b3a3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000b3a8 <AES_encrypt.dummy.173>:
    b3a8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3af:	02 00 00 
    b3b2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3b9:	02 00 00 
    b3bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3c3:	02 00 00 
    b3c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3cd:	02 00 00 
    b3d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3d7:	02 00 00 
    b3da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b3e1:	02 00 00 
    b3e4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b3e8 <AES_encrypt.172>:
    b3e8:	c1 e9 10             	shr    $0x10,%ecx
    b3eb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b3f1:	89 c9                	mov    %ecx,%ecx
    b3f3:	89 ca                	mov    %ecx,%edx
    b3f5:	48 8d 0d 04 f0 02 00 	lea    0x2f004(%rip),%rcx        # 3a400 <Te1>
    b3fc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b3ff:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    b403:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b40a:	00 00 00 
    b40d:	41 ff d6             	call   *%r14
    b410:	41 8b 0e             	mov    (%r14),%ecx
    b413:	c1 e9 08             	shr    $0x8,%ecx
    b416:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b41c:	89 c9                	mov    %ecx,%ecx
    b41e:	89 ca                	mov    %ecx,%edx
    b420:	e9 43 00 00 00       	jmp    b468 <AES_encrypt.173>
    b425:	0f 1f 00             	nopl   (%rax)

000000000000b428 <AES_encrypt.dummy.174>:
    b428:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b42f:	02 00 00 
    b432:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b439:	02 00 00 
    b43c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b443:	02 00 00 
    b446:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b44d:	02 00 00 
    b450:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b457:	02 00 00 
    b45a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b461:	02 00 00 
    b464:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b468 <AES_encrypt.173>:
    b468:	48 8d 0d 91 f3 02 00 	lea    0x2f391(%rip),%rcx        # 3a800 <Te2>
    b46f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b472:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    b476:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b47d:	00 00 00 
    b480:	41 ff d6             	call   *%r14
    b483:	41 8b 0e             	mov    (%r14),%ecx
    b486:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b48c:	89 c9                	mov    %ecx,%ecx
    b48e:	89 ca                	mov    %ecx,%edx
    b490:	48 8d 0d 69 f7 02 00 	lea    0x2f769(%rip),%rcx        # 3ac00 <Te3>
    b497:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b49a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    b49e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b4a5:	00 00 00 
    b4a8:	41 ff d6             	call   *%r14
    b4ab:	49 8b 0e             	mov    (%r14),%rcx
    b4ae:	e9 49 00 00 00       	jmp    b4fc <AES_encrypt.174>
    b4b3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    b4ba:	00 00 

000000000000b4bc <AES_encrypt.dummy.175>:
    b4bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4c3:	02 00 00 
    b4c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4cd:	02 00 00 
    b4d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4d7:	02 00 00 
    b4da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4e1:	02 00 00 
    b4e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4eb:	02 00 00 
    b4ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b4f5:	02 00 00 
    b4f8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b4fc <AES_encrypt.174>:
    b4fc:	33 81 c8 00 00 00    	xor    0xc8(%rcx),%eax
    b502:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    b506:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b50d:	00 00 00 
    b510:	41 ff d6             	call   *%r14
    b513:	41 89 06             	mov    %eax,(%r14)
    b516:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    b51a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b521:	00 00 00 
    b524:	41 ff d6             	call   *%r14
    b527:	41 8b 06             	mov    (%r14),%eax
    b52a:	c1 e8 18             	shr    $0x18,%eax
    b52d:	89 c0                	mov    %eax,%eax
    b52f:	89 c1                	mov    %eax,%ecx
    b531:	e9 46 00 00 00       	jmp    b57c <AES_encrypt.175>
    b536:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000b53c <AES_encrypt.dummy.176>:
    b53c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b543:	02 00 00 
    b546:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b54d:	02 00 00 
    b550:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b557:	02 00 00 
    b55a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b561:	02 00 00 
    b564:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b56b:	02 00 00 
    b56e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b575:	02 00 00 
    b578:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b57c <AES_encrypt.175>:
    b57c:	48 8d 05 7d ea 02 00 	lea    0x2ea7d(%rip),%rax        # 3a000 <Te0>
    b583:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    b587:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b58e:	00 00 00 
    b591:	41 ff d6             	call   *%r14
    b594:	41 8b 06             	mov    (%r14),%eax
    b597:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    b59b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b5a2:	00 00 00 
    b5a5:	41 ff d6             	call   *%r14
    b5a8:	41 8b 0e             	mov    (%r14),%ecx
    b5ab:	c1 e9 10             	shr    $0x10,%ecx
    b5ae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b5b4:	89 c9                	mov    %ecx,%ecx
    b5b6:	e9 41 00 00 00       	jmp    b5fc <AES_encrypt.176>
    b5bb:	90                   	nop

000000000000b5bc <AES_encrypt.dummy.177>:
    b5bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5c3:	02 00 00 
    b5c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5cd:	02 00 00 
    b5d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5d7:	02 00 00 
    b5da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5e1:	02 00 00 
    b5e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5eb:	02 00 00 
    b5ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b5f5:	02 00 00 
    b5f8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b5fc <AES_encrypt.176>:
    b5fc:	89 ca                	mov    %ecx,%edx
    b5fe:	48 8d 0d fb ed 02 00 	lea    0x2edfb(%rip),%rcx        # 3a400 <Te1>
    b605:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b608:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    b60c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b613:	00 00 00 
    b616:	41 ff d6             	call   *%r14
    b619:	41 8b 0e             	mov    (%r14),%ecx
    b61c:	c1 e9 08             	shr    $0x8,%ecx
    b61f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b625:	89 c9                	mov    %ecx,%ecx
    b627:	89 ca                	mov    %ecx,%edx
    b629:	48 8d 0d d0 f1 02 00 	lea    0x2f1d0(%rip),%rcx        # 3a800 <Te2>
    b630:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b633:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    b637:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b63e:	00 00 00 
    b641:	41 ff d6             	call   *%r14
    b644:	41 8b 0e             	mov    (%r14),%ecx
    b647:	e9 44 00 00 00       	jmp    b690 <AES_encrypt.177>
    b64c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b650 <AES_encrypt.dummy.178>:
    b650:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b657:	02 00 00 
    b65a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b661:	02 00 00 
    b664:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b66b:	02 00 00 
    b66e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b675:	02 00 00 
    b678:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b67f:	02 00 00 
    b682:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b689:	02 00 00 
    b68c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b690 <AES_encrypt.177>:
    b690:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b696:	89 c9                	mov    %ecx,%ecx
    b698:	89 ca                	mov    %ecx,%edx
    b69a:	48 8d 0d 5f f5 02 00 	lea    0x2f55f(%rip),%rcx        # 3ac00 <Te3>
    b6a1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b6a4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    b6a8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b6af:	00 00 00 
    b6b2:	41 ff d6             	call   *%r14
    b6b5:	49 8b 0e             	mov    (%r14),%rcx
    b6b8:	33 81 cc 00 00 00    	xor    0xcc(%rcx),%eax
    b6be:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    b6c2:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b6c9:	00 00 00 
    b6cc:	41 ff d6             	call   *%r14
    b6cf:	41 89 06             	mov    %eax,(%r14)
    b6d2:	e9 4d 00 00 00       	jmp    b724 <AES_encrypt.178>
    b6d7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b6de:	02 00 00 
    b6e1:	0f 1f 00             	nopl   (%rax)

000000000000b6e4 <AES_encrypt.dummy.179>:
    b6e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b6eb:	02 00 00 
    b6ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b6f5:	02 00 00 
    b6f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b6ff:	02 00 00 
    b702:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b709:	02 00 00 
    b70c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b713:	02 00 00 
    b716:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b71d:	02 00 00 
    b720:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b724 <AES_encrypt.178>:
    b724:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    b728:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b72f:	00 00 00 
    b732:	41 ff d6             	call   *%r14
    b735:	41 8b 06             	mov    (%r14),%eax
    b738:	c1 e8 18             	shr    $0x18,%eax
    b73b:	89 c0                	mov    %eax,%eax
    b73d:	89 c1                	mov    %eax,%ecx
    b73f:	48 8d 05 ba e8 02 00 	lea    0x2e8ba(%rip),%rax        # 3a000 <Te0>
    b746:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    b74a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b751:	00 00 00 
    b754:	41 ff d6             	call   *%r14
    b757:	41 8b 06             	mov    (%r14),%eax
    b75a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    b75e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b765:	00 00 00 
    b768:	41 ff d6             	call   *%r14
    b76b:	41 8b 0e             	mov    (%r14),%ecx
    b76e:	e9 45 00 00 00       	jmp    b7b8 <AES_encrypt.179>
    b773:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000b778 <AES_encrypt.dummy.180>:
    b778:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b77f:	02 00 00 
    b782:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b789:	02 00 00 
    b78c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b793:	02 00 00 
    b796:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b79d:	02 00 00 
    b7a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b7a7:	02 00 00 
    b7aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b7b1:	02 00 00 
    b7b4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b7b8 <AES_encrypt.179>:
    b7b8:	c1 e9 10             	shr    $0x10,%ecx
    b7bb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b7c1:	89 c9                	mov    %ecx,%ecx
    b7c3:	89 ca                	mov    %ecx,%edx
    b7c5:	48 8d 0d 34 ec 02 00 	lea    0x2ec34(%rip),%rcx        # 3a400 <Te1>
    b7cc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b7cf:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    b7d3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b7da:	00 00 00 
    b7dd:	41 ff d6             	call   *%r14
    b7e0:	41 8b 0e             	mov    (%r14),%ecx
    b7e3:	c1 e9 08             	shr    $0x8,%ecx
    b7e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b7ec:	89 c9                	mov    %ecx,%ecx
    b7ee:	89 ca                	mov    %ecx,%edx
    b7f0:	e9 43 00 00 00       	jmp    b838 <AES_encrypt.180>
    b7f5:	0f 1f 00             	nopl   (%rax)

000000000000b7f8 <AES_encrypt.dummy.181>:
    b7f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b7ff:	02 00 00 
    b802:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b809:	02 00 00 
    b80c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b813:	02 00 00 
    b816:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b81d:	02 00 00 
    b820:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b827:	02 00 00 
    b82a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b831:	02 00 00 
    b834:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b838 <AES_encrypt.180>:
    b838:	48 8d 0d c1 ef 02 00 	lea    0x2efc1(%rip),%rcx        # 3a800 <Te2>
    b83f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b842:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    b846:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b84d:	00 00 00 
    b850:	41 ff d6             	call   *%r14
    b853:	41 8b 0e             	mov    (%r14),%ecx
    b856:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b85c:	89 c9                	mov    %ecx,%ecx
    b85e:	89 ca                	mov    %ecx,%edx
    b860:	48 8d 0d 99 f3 02 00 	lea    0x2f399(%rip),%rcx        # 3ac00 <Te3>
    b867:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b86a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    b86e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b875:	00 00 00 
    b878:	41 ff d6             	call   *%r14
    b87b:	49 8b 0e             	mov    (%r14),%rcx
    b87e:	e9 49 00 00 00       	jmp    b8cc <AES_encrypt.181>
    b883:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    b88a:	00 00 

000000000000b88c <AES_encrypt.dummy.182>:
    b88c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b893:	02 00 00 
    b896:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b89d:	02 00 00 
    b8a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b8a7:	02 00 00 
    b8aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b8b1:	02 00 00 
    b8b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b8bb:	02 00 00 
    b8be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b8c5:	02 00 00 
    b8c8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b8cc <AES_encrypt.181>:
    b8cc:	33 81 d0 00 00 00    	xor    0xd0(%rcx),%eax
    b8d2:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    b8d6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b8dd:	00 00 00 
    b8e0:	41 ff d6             	call   *%r14
    b8e3:	41 89 06             	mov    %eax,(%r14)
    b8e6:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    b8ea:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b8f1:	00 00 00 
    b8f4:	41 ff d6             	call   *%r14
    b8f7:	41 8b 06             	mov    (%r14),%eax
    b8fa:	c1 e8 18             	shr    $0x18,%eax
    b8fd:	89 c0                	mov    %eax,%eax
    b8ff:	89 c1                	mov    %eax,%ecx
    b901:	e9 46 00 00 00       	jmp    b94c <AES_encrypt.182>
    b906:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000b90c <AES_encrypt.dummy.183>:
    b90c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b913:	02 00 00 
    b916:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b91d:	02 00 00 
    b920:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b927:	02 00 00 
    b92a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b931:	02 00 00 
    b934:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b93b:	02 00 00 
    b93e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b945:	02 00 00 
    b948:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b94c <AES_encrypt.182>:
    b94c:	48 8d 05 ad e6 02 00 	lea    0x2e6ad(%rip),%rax        # 3a000 <Te0>
    b953:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    b957:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b95e:	00 00 00 
    b961:	41 ff d6             	call   *%r14
    b964:	41 8b 06             	mov    (%r14),%eax
    b967:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    b96b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b972:	00 00 00 
    b975:	41 ff d6             	call   *%r14
    b978:	41 8b 0e             	mov    (%r14),%ecx
    b97b:	c1 e9 10             	shr    $0x10,%ecx
    b97e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b984:	89 c9                	mov    %ecx,%ecx
    b986:	e9 41 00 00 00       	jmp    b9cc <AES_encrypt.183>
    b98b:	90                   	nop

000000000000b98c <AES_encrypt.dummy.184>:
    b98c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b993:	02 00 00 
    b996:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b99d:	02 00 00 
    b9a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b9a7:	02 00 00 
    b9aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b9b1:	02 00 00 
    b9b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b9bb:	02 00 00 
    b9be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    b9c5:	02 00 00 
    b9c8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000b9cc <AES_encrypt.183>:
    b9cc:	89 ca                	mov    %ecx,%edx
    b9ce:	48 8d 0d 2b ea 02 00 	lea    0x2ea2b(%rip),%rcx        # 3a400 <Te1>
    b9d5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b9d8:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    b9dc:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    b9e3:	00 00 00 
    b9e6:	41 ff d6             	call   *%r14
    b9e9:	41 8b 0e             	mov    (%r14),%ecx
    b9ec:	c1 e9 08             	shr    $0x8,%ecx
    b9ef:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b9f5:	89 c9                	mov    %ecx,%ecx
    b9f7:	89 ca                	mov    %ecx,%edx
    b9f9:	48 8d 0d 00 ee 02 00 	lea    0x2ee00(%rip),%rcx        # 3a800 <Te2>
    ba00:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba03:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    ba07:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ba0e:	00 00 00 
    ba11:	41 ff d6             	call   *%r14
    ba14:	41 8b 0e             	mov    (%r14),%ecx
    ba17:	e9 44 00 00 00       	jmp    ba60 <AES_encrypt.184>
    ba1c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ba20 <AES_encrypt.dummy.185>:
    ba20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba27:	02 00 00 
    ba2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba31:	02 00 00 
    ba34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba3b:	02 00 00 
    ba3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba45:	02 00 00 
    ba48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba4f:	02 00 00 
    ba52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ba59:	02 00 00 
    ba5c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ba60 <AES_encrypt.184>:
    ba60:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ba66:	89 c9                	mov    %ecx,%ecx
    ba68:	89 ca                	mov    %ecx,%edx
    ba6a:	48 8d 0d 8f f1 02 00 	lea    0x2f18f(%rip),%rcx        # 3ac00 <Te3>
    ba71:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba74:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    ba78:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ba7f:	00 00 00 
    ba82:	41 ff d6             	call   *%r14
    ba85:	49 8b 0e             	mov    (%r14),%rcx
    ba88:	33 81 d4 00 00 00    	xor    0xd4(%rcx),%eax
    ba8e:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    ba92:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ba99:	00 00 00 
    ba9c:	41 ff d6             	call   *%r14
    ba9f:	41 89 06             	mov    %eax,(%r14)
    baa2:	e9 4d 00 00 00       	jmp    baf4 <AES_encrypt.185>
    baa7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    baae:	02 00 00 
    bab1:	0f 1f 00             	nopl   (%rax)

000000000000bab4 <AES_encrypt.dummy.186>:
    bab4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    babb:	02 00 00 
    babe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bac5:	02 00 00 
    bac8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bacf:	02 00 00 
    bad2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bad9:	02 00 00 
    badc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bae3:	02 00 00 
    bae6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    baed:	02 00 00 
    baf0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000baf4 <AES_encrypt.185>:
    baf4:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    baf8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    baff:	00 00 00 
    bb02:	41 ff d6             	call   *%r14
    bb05:	41 8b 06             	mov    (%r14),%eax
    bb08:	c1 e8 18             	shr    $0x18,%eax
    bb0b:	89 c0                	mov    %eax,%eax
    bb0d:	89 c1                	mov    %eax,%ecx
    bb0f:	48 8d 05 ea e4 02 00 	lea    0x2e4ea(%rip),%rax        # 3a000 <Te0>
    bb16:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    bb1a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bb21:	00 00 00 
    bb24:	41 ff d6             	call   *%r14
    bb27:	41 8b 06             	mov    (%r14),%eax
    bb2a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    bb2e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bb35:	00 00 00 
    bb38:	41 ff d6             	call   *%r14
    bb3b:	41 8b 0e             	mov    (%r14),%ecx
    bb3e:	e9 45 00 00 00       	jmp    bb88 <AES_encrypt.186>
    bb43:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000bb48 <AES_encrypt.dummy.187>:
    bb48:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb4f:	02 00 00 
    bb52:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb59:	02 00 00 
    bb5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb63:	02 00 00 
    bb66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb6d:	02 00 00 
    bb70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb77:	02 00 00 
    bb7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bb81:	02 00 00 
    bb84:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bb88 <AES_encrypt.186>:
    bb88:	c1 e9 10             	shr    $0x10,%ecx
    bb8b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb91:	89 c9                	mov    %ecx,%ecx
    bb93:	89 ca                	mov    %ecx,%edx
    bb95:	48 8d 0d 64 e8 02 00 	lea    0x2e864(%rip),%rcx        # 3a400 <Te1>
    bb9c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bb9f:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    bba3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bbaa:	00 00 00 
    bbad:	41 ff d6             	call   *%r14
    bbb0:	41 8b 0e             	mov    (%r14),%ecx
    bbb3:	c1 e9 08             	shr    $0x8,%ecx
    bbb6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bbbc:	89 c9                	mov    %ecx,%ecx
    bbbe:	89 ca                	mov    %ecx,%edx
    bbc0:	e9 43 00 00 00       	jmp    bc08 <AES_encrypt.187>
    bbc5:	0f 1f 00             	nopl   (%rax)

000000000000bbc8 <AES_encrypt.dummy.188>:
    bbc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bbcf:	02 00 00 
    bbd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bbd9:	02 00 00 
    bbdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bbe3:	02 00 00 
    bbe6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bbed:	02 00 00 
    bbf0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bbf7:	02 00 00 
    bbfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc01:	02 00 00 
    bc04:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bc08 <AES_encrypt.187>:
    bc08:	48 8d 0d f1 eb 02 00 	lea    0x2ebf1(%rip),%rcx        # 3a800 <Te2>
    bc0f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc12:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    bc16:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bc1d:	00 00 00 
    bc20:	41 ff d6             	call   *%r14
    bc23:	41 8b 0e             	mov    (%r14),%ecx
    bc26:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc2c:	89 c9                	mov    %ecx,%ecx
    bc2e:	89 ca                	mov    %ecx,%edx
    bc30:	48 8d 0d c9 ef 02 00 	lea    0x2efc9(%rip),%rcx        # 3ac00 <Te3>
    bc37:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc3a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    bc3e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bc45:	00 00 00 
    bc48:	41 ff d6             	call   *%r14
    bc4b:	49 8b 0e             	mov    (%r14),%rcx
    bc4e:	e9 49 00 00 00       	jmp    bc9c <AES_encrypt.188>
    bc53:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    bc5a:	00 00 

000000000000bc5c <AES_encrypt.dummy.189>:
    bc5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc63:	02 00 00 
    bc66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc6d:	02 00 00 
    bc70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc77:	02 00 00 
    bc7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc81:	02 00 00 
    bc84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc8b:	02 00 00 
    bc8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bc95:	02 00 00 
    bc98:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bc9c <AES_encrypt.188>:
    bc9c:	33 81 d8 00 00 00    	xor    0xd8(%rcx),%eax
    bca2:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    bca6:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bcad:	00 00 00 
    bcb0:	41 ff d6             	call   *%r14
    bcb3:	41 89 06             	mov    %eax,(%r14)
    bcb6:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    bcba:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bcc1:	00 00 00 
    bcc4:	41 ff d6             	call   *%r14
    bcc7:	41 8b 06             	mov    (%r14),%eax
    bcca:	c1 e8 18             	shr    $0x18,%eax
    bccd:	89 c0                	mov    %eax,%eax
    bccf:	89 c1                	mov    %eax,%ecx
    bcd1:	e9 46 00 00 00       	jmp    bd1c <AES_encrypt.189>
    bcd6:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000bcdc <AES_encrypt.dummy.190>:
    bcdc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bce3:	02 00 00 
    bce6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bced:	02 00 00 
    bcf0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bcf7:	02 00 00 
    bcfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd01:	02 00 00 
    bd04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd0b:	02 00 00 
    bd0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd15:	02 00 00 
    bd18:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bd1c <AES_encrypt.189>:
    bd1c:	48 8d 05 dd e2 02 00 	lea    0x2e2dd(%rip),%rax        # 3a000 <Te0>
    bd23:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    bd27:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bd2e:	00 00 00 
    bd31:	41 ff d6             	call   *%r14
    bd34:	41 8b 06             	mov    (%r14),%eax
    bd37:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    bd3b:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bd42:	00 00 00 
    bd45:	41 ff d6             	call   *%r14
    bd48:	41 8b 0e             	mov    (%r14),%ecx
    bd4b:	c1 e9 10             	shr    $0x10,%ecx
    bd4e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bd54:	89 c9                	mov    %ecx,%ecx
    bd56:	e9 41 00 00 00       	jmp    bd9c <AES_encrypt.190>
    bd5b:	90                   	nop

000000000000bd5c <AES_encrypt.dummy.191>:
    bd5c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd63:	02 00 00 
    bd66:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd6d:	02 00 00 
    bd70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd77:	02 00 00 
    bd7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd81:	02 00 00 
    bd84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd8b:	02 00 00 
    bd8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bd95:	02 00 00 
    bd98:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bd9c <AES_encrypt.190>:
    bd9c:	89 ca                	mov    %ecx,%edx
    bd9e:	48 8d 0d 5b e6 02 00 	lea    0x2e65b(%rip),%rcx        # 3a400 <Te1>
    bda5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bda8:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    bdac:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bdb3:	00 00 00 
    bdb6:	41 ff d6             	call   *%r14
    bdb9:	41 8b 0e             	mov    (%r14),%ecx
    bdbc:	c1 e9 08             	shr    $0x8,%ecx
    bdbf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bdc5:	89 c9                	mov    %ecx,%ecx
    bdc7:	89 ca                	mov    %ecx,%edx
    bdc9:	48 8d 0d 30 ea 02 00 	lea    0x2ea30(%rip),%rcx        # 3a800 <Te2>
    bdd0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bdd3:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    bdd7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bdde:	00 00 00 
    bde1:	41 ff d6             	call   *%r14
    bde4:	41 8b 0e             	mov    (%r14),%ecx
    bde7:	e9 44 00 00 00       	jmp    be30 <AES_encrypt.191>
    bdec:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bdf0 <AES_encrypt.dummy.192>:
    bdf0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bdf7:	02 00 00 
    bdfa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be01:	02 00 00 
    be04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be0b:	02 00 00 
    be0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be15:	02 00 00 
    be18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be1f:	02 00 00 
    be22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be29:	02 00 00 
    be2c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000be30 <AES_encrypt.191>:
    be30:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    be36:	89 c9                	mov    %ecx,%ecx
    be38:	89 ca                	mov    %ecx,%edx
    be3a:	48 8d 0d bf ed 02 00 	lea    0x2edbf(%rip),%rcx        # 3ac00 <Te3>
    be41:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    be44:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    be48:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    be4f:	00 00 00 
    be52:	41 ff d6             	call   *%r14
    be55:	49 8b 0e             	mov    (%r14),%rcx
    be58:	33 81 dc 00 00 00    	xor    0xdc(%rcx),%eax
    be5e:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    be62:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    be69:	00 00 00 
    be6c:	41 ff d6             	call   *%r14
    be6f:	41 89 06             	mov    %eax,(%r14)
    be72:	e9 4d 00 00 00       	jmp    bec4 <AES_encrypt.192>
    be77:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be7e:	02 00 00 
    be81:	0f 1f 00             	nopl   (%rax)

000000000000be84 <AES_encrypt.dummy.193>:
    be84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be8b:	02 00 00 
    be8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be95:	02 00 00 
    be98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    be9f:	02 00 00 
    bea2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bea9:	02 00 00 
    beac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    beb3:	02 00 00 
    beb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bebd:	02 00 00 
    bec0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bec4 <AES_encrypt.192>:
    bec4:	e9 00 00 00 00       	jmp    bec9 <AES_encrypt.192+0x5>
    bec9:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    becd:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bed4:	00 00 00 
    bed7:	41 ff d6             	call   *%r14
    beda:	49 8b 06             	mov    (%r14),%rax
    bedd:	4c 8d b8 f0 00 00 00 	lea    0xf0(%rax),%r15
    bee4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    beeb:	00 00 00 
    beee:	41 ff d6             	call   *%r14
    bef1:	41 8b 0e             	mov    (%r14),%ecx
    bef4:	c1 e1 02             	shl    $0x2,%ecx
    bef7:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    befb:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bf02:	00 00 00 
    bf05:	41 ff d6             	call   *%r14
    bf08:	49 8b 06             	mov    (%r14),%rax
    bf0b:	e9 48 00 00 00       	jmp    bf58 <AES_encrypt.193>
    bf10:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    bf17:	00 

000000000000bf18 <AES_encrypt.dummy.194>:
    bf18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf1f:	02 00 00 
    bf22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf29:	02 00 00 
    bf2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf33:	02 00 00 
    bf36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf3d:	02 00 00 
    bf40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf47:	02 00 00 
    bf4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf51:	02 00 00 
    bf54:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bf58 <AES_encrypt.193>:
    bf58:	48 63 c9             	movslq %ecx,%rcx
    bf5b:	48 c1 e1 02          	shl    $0x2,%rcx
    bf5f:	48 01 c8             	add    %rcx,%rax
    bf62:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    bf66:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bf6d:	00 00 00 
    bf70:	41 ff d6             	call   *%r14
    bf73:	49 89 06             	mov    %rax,(%r14)
    bf76:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    bf7a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bf81:	00 00 00 
    bf84:	41 ff d6             	call   *%r14
    bf87:	41 8b 06             	mov    (%r14),%eax
    bf8a:	c1 e8 18             	shr    $0x18,%eax
    bf8d:	89 c0                	mov    %eax,%eax
    bf8f:	89 c1                	mov    %eax,%ecx
    bf91:	e9 42 00 00 00       	jmp    bfd8 <AES_encrypt.194>
    bf96:	66 90                	xchg   %ax,%ax

000000000000bf98 <AES_encrypt.dummy.195>:
    bf98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bf9f:	02 00 00 
    bfa2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bfa9:	02 00 00 
    bfac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bfb3:	02 00 00 
    bfb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bfbd:	02 00 00 
    bfc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bfc7:	02 00 00 
    bfca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    bfd1:	02 00 00 
    bfd4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000bfd8 <AES_encrypt.194>:
    bfd8:	48 8d 05 21 e8 02 00 	lea    0x2e821(%rip),%rax        # 3a800 <Te2>
    bfdf:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    bfe3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    bfea:	00 00 00 
    bfed:	41 ff d6             	call   *%r14
    bff0:	41 8b 06             	mov    (%r14),%eax
    bff3:	25 00 00 00 ff       	and    $0xff000000,%eax
    bff8:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    bffc:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c003:	00 00 00 
    c006:	41 ff d6             	call   *%r14
    c009:	41 8b 0e             	mov    (%r14),%ecx
    c00c:	c1 e9 10             	shr    $0x10,%ecx
    c00f:	e9 44 00 00 00       	jmp    c058 <AES_encrypt.195>
    c014:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c018 <AES_encrypt.dummy.196>:
    c018:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c01f:	02 00 00 
    c022:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c029:	02 00 00 
    c02c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c033:	02 00 00 
    c036:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c03d:	02 00 00 
    c040:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c047:	02 00 00 
    c04a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c051:	02 00 00 
    c054:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c058 <AES_encrypt.195>:
    c058:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c05e:	89 c9                	mov    %ecx,%ecx
    c060:	89 ca                	mov    %ecx,%edx
    c062:	48 8d 0d 97 eb 02 00 	lea    0x2eb97(%rip),%rcx        # 3ac00 <Te3>
    c069:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c06d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c074:	00 00 00 
    c077:	41 ff d6             	call   *%r14
    c07a:	41 8b 0e             	mov    (%r14),%ecx
    c07d:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
    c083:	31 c8                	xor    %ecx,%eax
    c085:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    c089:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c090:	00 00 00 
    c093:	41 ff d6             	call   *%r14
    c096:	41 8b 0e             	mov    (%r14),%ecx
    c099:	e9 4e 00 00 00       	jmp    c0ec <AES_encrypt.196>
    c09e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0a5:	02 00 00 
    c0a8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c0ac <AES_encrypt.dummy.197>:
    c0ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0b3:	02 00 00 
    c0b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0bd:	02 00 00 
    c0c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0c7:	02 00 00 
    c0ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0d1:	02 00 00 
    c0d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0db:	02 00 00 
    c0de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c0e5:	02 00 00 
    c0e8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c0ec <AES_encrypt.196>:
    c0ec:	c1 e9 08             	shr    $0x8,%ecx
    c0ef:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c0f5:	89 c9                	mov    %ecx,%ecx
    c0f7:	89 ca                	mov    %ecx,%edx
    c0f9:	48 8d 0d 00 df 02 00 	lea    0x2df00(%rip),%rcx        # 3a000 <Te0>
    c100:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c104:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c10b:	00 00 00 
    c10e:	41 ff d6             	call   *%r14
    c111:	41 8b 0e             	mov    (%r14),%ecx
    c114:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    c11a:	31 c8                	xor    %ecx,%eax
    c11c:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    c120:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c127:	00 00 00 
    c12a:	41 ff d6             	call   *%r14
    c12d:	41 8b 0e             	mov    (%r14),%ecx
    c130:	e9 4b 00 00 00       	jmp    c180 <AES_encrypt.197>
    c135:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c13c:	02 00 00 
    c13f:	90                   	nop

000000000000c140 <AES_encrypt.dummy.198>:
    c140:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c147:	02 00 00 
    c14a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c151:	02 00 00 
    c154:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c15b:	02 00 00 
    c15e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c165:	02 00 00 
    c168:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c16f:	02 00 00 
    c172:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c179:	02 00 00 
    c17c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c180 <AES_encrypt.197>:
    c180:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c186:	89 c9                	mov    %ecx,%ecx
    c188:	89 ca                	mov    %ecx,%edx
    c18a:	48 8d 0d 6f e2 02 00 	lea    0x2e26f(%rip),%rcx        # 3a400 <Te1>
    c191:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c195:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c19c:	00 00 00 
    c19f:	41 ff d6             	call   *%r14
    c1a2:	41 8b 0e             	mov    (%r14),%ecx
    c1a5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c1ab:	31 c8                	xor    %ecx,%eax
    c1ad:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    c1b1:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c1b8:	00 00 00 
    c1bb:	41 ff d6             	call   *%r14
    c1be:	49 8b 0e             	mov    (%r14),%rcx
    c1c1:	e9 4e 00 00 00       	jmp    c214 <AES_encrypt.198>
    c1c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c1cd:	02 00 00 
    c1d0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c1d4 <AES_encrypt.dummy.199>:
    c1d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c1db:	02 00 00 
    c1de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c1e5:	02 00 00 
    c1e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c1ef:	02 00 00 
    c1f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c1f9:	02 00 00 
    c1fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c203:	02 00 00 
    c206:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c20d:	02 00 00 
    c210:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c214 <AES_encrypt.198>:
    c214:	33 01                	xor    (%rcx),%eax
    c216:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    c21a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c221:	00 00 00 
    c224:	41 ff d6             	call   *%r14
    c227:	41 89 06             	mov    %eax,(%r14)
    c22a:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    c22e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c235:	00 00 00 
    c238:	41 ff d6             	call   *%r14
    c23b:	41 8b 06             	mov    (%r14),%eax
    c23e:	c1 e8 18             	shr    $0x18,%eax
    c241:	88 c1                	mov    %al,%cl
    c243:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c247:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c24e:	00 00 00 
    c251:	41 ff d6             	call   *%r14
    c254:	49 8b 06             	mov    (%r14),%rax
    c257:	e9 4c 00 00 00       	jmp    c2a8 <AES_encrypt.199>
    c25c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c263:	02 00 00 
    c266:	66 90                	xchg   %ax,%ax

000000000000c268 <AES_encrypt.dummy.200>:
    c268:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c26f:	02 00 00 
    c272:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c279:	02 00 00 
    c27c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c283:	02 00 00 
    c286:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c28d:	02 00 00 
    c290:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c297:	02 00 00 
    c29a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c2a1:	02 00 00 
    c2a4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c2a8 <AES_encrypt.199>:
    c2a8:	4c 8d 38             	lea    (%rax),%r15
    c2ab:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c2b2:	00 00 00 
    c2b5:	41 ff d6             	call   *%r14
    c2b8:	41 88 0e             	mov    %cl,(%r14)
    c2bb:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    c2bf:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c2c6:	00 00 00 
    c2c9:	41 ff d6             	call   *%r14
    c2cc:	41 8b 06             	mov    (%r14),%eax
    c2cf:	c1 e8 10             	shr    $0x10,%eax
    c2d2:	88 c1                	mov    %al,%cl
    c2d4:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c2d8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c2df:	00 00 00 
    c2e2:	41 ff d6             	call   *%r14
    c2e5:	49 8b 06             	mov    (%r14),%rax
    c2e8:	e9 4f 00 00 00       	jmp    c33c <AES_encrypt.200>
    c2ed:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c2f4:	02 00 00 
    c2f7:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000c2fc <AES_encrypt.dummy.201>:
    c2fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c303:	02 00 00 
    c306:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c30d:	02 00 00 
    c310:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c317:	02 00 00 
    c31a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c321:	02 00 00 
    c324:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c32b:	02 00 00 
    c32e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c335:	02 00 00 
    c338:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c33c <AES_encrypt.200>:
    c33c:	4c 8d 78 01          	lea    0x1(%rax),%r15
    c340:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c347:	00 00 00 
    c34a:	41 ff d6             	call   *%r14
    c34d:	41 88 0e             	mov    %cl,(%r14)
    c350:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    c354:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c35b:	00 00 00 
    c35e:	41 ff d6             	call   *%r14
    c361:	41 8b 06             	mov    (%r14),%eax
    c364:	c1 e8 08             	shr    $0x8,%eax
    c367:	88 c1                	mov    %al,%cl
    c369:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c36d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c374:	00 00 00 
    c377:	41 ff d6             	call   *%r14
    c37a:	49 8b 06             	mov    (%r14),%rax
    c37d:	e9 4e 00 00 00       	jmp    c3d0 <AES_encrypt.201>
    c382:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c389:	02 00 00 
    c38c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c390 <AES_encrypt.dummy.202>:
    c390:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c397:	02 00 00 
    c39a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c3a1:	02 00 00 
    c3a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c3ab:	02 00 00 
    c3ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c3b5:	02 00 00 
    c3b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c3bf:	02 00 00 
    c3c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c3c9:	02 00 00 
    c3cc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c3d0 <AES_encrypt.201>:
    c3d0:	4c 8d 78 02          	lea    0x2(%rax),%r15
    c3d4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c3db:	00 00 00 
    c3de:	41 ff d6             	call   *%r14
    c3e1:	41 88 0e             	mov    %cl,(%r14)
    c3e4:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    c3e8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c3ef:	00 00 00 
    c3f2:	41 ff d6             	call   *%r14
    c3f5:	41 8b 06             	mov    (%r14),%eax
    c3f8:	88 c1                	mov    %al,%cl
    c3fa:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c3fe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c405:	00 00 00 
    c408:	41 ff d6             	call   *%r14
    c40b:	49 8b 06             	mov    (%r14),%rax
    c40e:	e9 51 00 00 00       	jmp    c464 <AES_encrypt.202>
    c413:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c41a:	02 00 00 
    c41d:	0f 1f 80 00 02 00 00 	nopl   0x200(%rax)

000000000000c424 <AES_encrypt.dummy.203>:
    c424:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c42b:	02 00 00 
    c42e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c435:	02 00 00 
    c438:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c43f:	02 00 00 
    c442:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c449:	02 00 00 
    c44c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c453:	02 00 00 
    c456:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c45d:	02 00 00 
    c460:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c464 <AES_encrypt.202>:
    c464:	4c 8d 78 03          	lea    0x3(%rax),%r15
    c468:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c46f:	00 00 00 
    c472:	41 ff d6             	call   *%r14
    c475:	41 88 0e             	mov    %cl,(%r14)
    c478:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    c47c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c483:	00 00 00 
    c486:	41 ff d6             	call   *%r14
    c489:	41 8b 06             	mov    (%r14),%eax
    c48c:	c1 e8 18             	shr    $0x18,%eax
    c48f:	89 c0                	mov    %eax,%eax
    c491:	89 c1                	mov    %eax,%ecx
    c493:	48 8d 05 66 e3 02 00 	lea    0x2e366(%rip),%rax        # 3a800 <Te2>
    c49a:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    c49e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c4a5:	00 00 00 
    c4a8:	41 ff d6             	call   *%r14
    c4ab:	41 8b 06             	mov    (%r14),%eax
    c4ae:	e9 45 00 00 00       	jmp    c4f8 <AES_encrypt.203>
    c4b3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000c4b8 <AES_encrypt.dummy.204>:
    c4b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4bf:	02 00 00 
    c4c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4c9:	02 00 00 
    c4cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4d3:	02 00 00 
    c4d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4dd:	02 00 00 
    c4e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4e7:	02 00 00 
    c4ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c4f1:	02 00 00 
    c4f4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c4f8 <AES_encrypt.203>:
    c4f8:	25 00 00 00 ff       	and    $0xff000000,%eax
    c4fd:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    c501:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c508:	00 00 00 
    c50b:	41 ff d6             	call   *%r14
    c50e:	41 8b 0e             	mov    (%r14),%ecx
    c511:	c1 e9 10             	shr    $0x10,%ecx
    c514:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c51a:	89 c9                	mov    %ecx,%ecx
    c51c:	89 ca                	mov    %ecx,%edx
    c51e:	48 8d 0d db e6 02 00 	lea    0x2e6db(%rip),%rcx        # 3ac00 <Te3>
    c525:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c529:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c530:	00 00 00 
    c533:	41 ff d6             	call   *%r14
    c536:	41 8b 0e             	mov    (%r14),%ecx
    c539:	e9 4e 00 00 00       	jmp    c58c <AES_encrypt.204>
    c53e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c545:	02 00 00 
    c548:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c54c <AES_encrypt.dummy.205>:
    c54c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c553:	02 00 00 
    c556:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c55d:	02 00 00 
    c560:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c567:	02 00 00 
    c56a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c571:	02 00 00 
    c574:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c57b:	02 00 00 
    c57e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c585:	02 00 00 
    c588:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c58c <AES_encrypt.204>:
    c58c:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
    c592:	31 c8                	xor    %ecx,%eax
    c594:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    c598:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c59f:	00 00 00 
    c5a2:	41 ff d6             	call   *%r14
    c5a5:	41 8b 0e             	mov    (%r14),%ecx
    c5a8:	c1 e9 08             	shr    $0x8,%ecx
    c5ab:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c5b1:	89 c9                	mov    %ecx,%ecx
    c5b3:	89 ca                	mov    %ecx,%edx
    c5b5:	48 8d 0d 44 da 02 00 	lea    0x2da44(%rip),%rcx        # 3a000 <Te0>
    c5bc:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c5c0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c5c7:	00 00 00 
    c5ca:	41 ff d6             	call   *%r14
    c5cd:	41 8b 0e             	mov    (%r14),%ecx
    c5d0:	e9 4b 00 00 00       	jmp    c620 <AES_encrypt.205>
    c5d5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c5dc:	02 00 00 
    c5df:	90                   	nop

000000000000c5e0 <AES_encrypt.dummy.206>:
    c5e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c5e7:	02 00 00 
    c5ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c5f1:	02 00 00 
    c5f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c5fb:	02 00 00 
    c5fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c605:	02 00 00 
    c608:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c60f:	02 00 00 
    c612:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c619:	02 00 00 
    c61c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c620 <AES_encrypt.205>:
    c620:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    c626:	31 c8                	xor    %ecx,%eax
    c628:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    c62c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c633:	00 00 00 
    c636:	41 ff d6             	call   *%r14
    c639:	41 8b 0e             	mov    (%r14),%ecx
    c63c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c642:	89 c9                	mov    %ecx,%ecx
    c644:	89 ca                	mov    %ecx,%edx
    c646:	48 8d 0d b3 dd 02 00 	lea    0x2ddb3(%rip),%rcx        # 3a400 <Te1>
    c64d:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    c651:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c658:	00 00 00 
    c65b:	41 ff d6             	call   *%r14
    c65e:	41 8b 0e             	mov    (%r14),%ecx
    c661:	e9 4e 00 00 00       	jmp    c6b4 <AES_encrypt.206>
    c666:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c66d:	02 00 00 
    c670:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c674 <AES_encrypt.dummy.207>:
    c674:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c67b:	02 00 00 
    c67e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c685:	02 00 00 
    c688:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c68f:	02 00 00 
    c692:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c699:	02 00 00 
    c69c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c6a3:	02 00 00 
    c6a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c6ad:	02 00 00 
    c6b0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c6b4 <AES_encrypt.206>:
    c6b4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c6ba:	31 c8                	xor    %ecx,%eax
    c6bc:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    c6c0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c6c7:	00 00 00 
    c6ca:	41 ff d6             	call   *%r14
    c6cd:	49 8b 0e             	mov    (%r14),%rcx
    c6d0:	33 41 04             	xor    0x4(%rcx),%eax
    c6d3:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    c6d7:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c6de:	00 00 00 
    c6e1:	41 ff d6             	call   *%r14
    c6e4:	41 89 06             	mov    %eax,(%r14)
    c6e7:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    c6eb:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c6f2:	00 00 00 
    c6f5:	41 ff d6             	call   *%r14
    c6f8:	41 8b 06             	mov    (%r14),%eax
    c6fb:	e9 48 00 00 00       	jmp    c748 <AES_encrypt.207>
    c700:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    c707:	00 

000000000000c708 <AES_encrypt.dummy.208>:
    c708:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c70f:	02 00 00 
    c712:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c719:	02 00 00 
    c71c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c723:	02 00 00 
    c726:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c72d:	02 00 00 
    c730:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c737:	02 00 00 
    c73a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c741:	02 00 00 
    c744:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c748 <AES_encrypt.207>:
    c748:	c1 e8 18             	shr    $0x18,%eax
    c74b:	88 c1                	mov    %al,%cl
    c74d:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c751:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c758:	00 00 00 
    c75b:	41 ff d6             	call   *%r14
    c75e:	49 8b 06             	mov    (%r14),%rax
    c761:	4c 8d 78 04          	lea    0x4(%rax),%r15
    c765:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c76c:	00 00 00 
    c76f:	41 ff d6             	call   *%r14
    c772:	41 88 0e             	mov    %cl,(%r14)
    c775:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    c779:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c780:	00 00 00 
    c783:	41 ff d6             	call   *%r14
    c786:	41 8b 06             	mov    (%r14),%eax
    c789:	e9 4e 00 00 00       	jmp    c7dc <AES_encrypt.208>
    c78e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c795:	02 00 00 
    c798:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c79c <AES_encrypt.dummy.209>:
    c79c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7a3:	02 00 00 
    c7a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7ad:	02 00 00 
    c7b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7b7:	02 00 00 
    c7ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7c1:	02 00 00 
    c7c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7cb:	02 00 00 
    c7ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c7d5:	02 00 00 
    c7d8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c7dc <AES_encrypt.208>:
    c7dc:	c1 e8 10             	shr    $0x10,%eax
    c7df:	88 c1                	mov    %al,%cl
    c7e1:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c7e5:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c7ec:	00 00 00 
    c7ef:	41 ff d6             	call   *%r14
    c7f2:	49 8b 06             	mov    (%r14),%rax
    c7f5:	4c 8d 78 05          	lea    0x5(%rax),%r15
    c7f9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c800:	00 00 00 
    c803:	41 ff d6             	call   *%r14
    c806:	41 88 0e             	mov    %cl,(%r14)
    c809:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    c80d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c814:	00 00 00 
    c817:	41 ff d6             	call   *%r14
    c81a:	41 8b 06             	mov    (%r14),%eax
    c81d:	e9 4e 00 00 00       	jmp    c870 <AES_encrypt.209>
    c822:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c829:	02 00 00 
    c82c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c830 <AES_encrypt.dummy.210>:
    c830:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c837:	02 00 00 
    c83a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c841:	02 00 00 
    c844:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c84b:	02 00 00 
    c84e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c855:	02 00 00 
    c858:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c85f:	02 00 00 
    c862:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c869:	02 00 00 
    c86c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c870 <AES_encrypt.209>:
    c870:	c1 e8 08             	shr    $0x8,%eax
    c873:	88 c1                	mov    %al,%cl
    c875:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c879:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c880:	00 00 00 
    c883:	41 ff d6             	call   *%r14
    c886:	49 8b 06             	mov    (%r14),%rax
    c889:	4c 8d 78 06          	lea    0x6(%rax),%r15
    c88d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c894:	00 00 00 
    c897:	41 ff d6             	call   *%r14
    c89a:	41 88 0e             	mov    %cl,(%r14)
    c89d:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    c8a1:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c8a8:	00 00 00 
    c8ab:	41 ff d6             	call   *%r14
    c8ae:	41 8b 06             	mov    (%r14),%eax
    c8b1:	e9 4e 00 00 00       	jmp    c904 <AES_encrypt.210>
    c8b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8bd:	02 00 00 
    c8c0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c8c4 <AES_encrypt.dummy.211>:
    c8c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8cb:	02 00 00 
    c8ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8d5:	02 00 00 
    c8d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8df:	02 00 00 
    c8e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8e9:	02 00 00 
    c8ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8f3:	02 00 00 
    c8f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c8fd:	02 00 00 
    c900:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c904 <AES_encrypt.210>:
    c904:	88 c1                	mov    %al,%cl
    c906:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    c90a:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c911:	00 00 00 
    c914:	41 ff d6             	call   *%r14
    c917:	49 8b 06             	mov    (%r14),%rax
    c91a:	4c 8d 78 07          	lea    0x7(%rax),%r15
    c91e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c925:	00 00 00 
    c928:	41 ff d6             	call   *%r14
    c92b:	41 88 0e             	mov    %cl,(%r14)
    c92e:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    c932:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c939:	00 00 00 
    c93c:	41 ff d6             	call   *%r14
    c93f:	41 8b 06             	mov    (%r14),%eax
    c942:	e9 51 00 00 00       	jmp    c998 <AES_encrypt.211>
    c947:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c94e:	02 00 00 
    c951:	0f 1f 80 00 02 00 00 	nopl   0x200(%rax)

000000000000c958 <AES_encrypt.dummy.212>:
    c958:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c95f:	02 00 00 
    c962:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c969:	02 00 00 
    c96c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c973:	02 00 00 
    c976:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c97d:	02 00 00 
    c980:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c987:	02 00 00 
    c98a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c991:	02 00 00 
    c994:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000c998 <AES_encrypt.211>:
    c998:	c1 e8 18             	shr    $0x18,%eax
    c99b:	89 c0                	mov    %eax,%eax
    c99d:	89 c1                	mov    %eax,%ecx
    c99f:	48 8d 05 5a de 02 00 	lea    0x2de5a(%rip),%rax        # 3a800 <Te2>
    c9a6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    c9aa:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c9b1:	00 00 00 
    c9b4:	41 ff d6             	call   *%r14
    c9b7:	41 8b 06             	mov    (%r14),%eax
    c9ba:	25 00 00 00 ff       	and    $0xff000000,%eax
    c9bf:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    c9c3:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    c9ca:	00 00 00 
    c9cd:	41 ff d6             	call   *%r14
    c9d0:	41 8b 0e             	mov    (%r14),%ecx
    c9d3:	e9 40 00 00 00       	jmp    ca18 <AES_encrypt.212>

000000000000c9d8 <AES_encrypt.dummy.213>:
    c9d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c9df:	02 00 00 
    c9e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c9e9:	02 00 00 
    c9ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c9f3:	02 00 00 
    c9f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    c9fd:	02 00 00 
    ca00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca07:	02 00 00 
    ca0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca11:	02 00 00 
    ca14:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ca18 <AES_encrypt.212>:
    ca18:	c1 e9 10             	shr    $0x10,%ecx
    ca1b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ca21:	89 c9                	mov    %ecx,%ecx
    ca23:	89 ca                	mov    %ecx,%edx
    ca25:	48 8d 0d d4 e1 02 00 	lea    0x2e1d4(%rip),%rcx        # 3ac00 <Te3>
    ca2c:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    ca30:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ca37:	00 00 00 
    ca3a:	41 ff d6             	call   *%r14
    ca3d:	41 8b 0e             	mov    (%r14),%ecx
    ca40:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
    ca46:	31 c8                	xor    %ecx,%eax
    ca48:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    ca4c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ca53:	00 00 00 
    ca56:	41 ff d6             	call   *%r14
    ca59:	41 8b 0e             	mov    (%r14),%ecx
    ca5c:	e9 4b 00 00 00       	jmp    caac <AES_encrypt.213>
    ca61:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca68:	02 00 00 
    ca6b:	90                   	nop

000000000000ca6c <AES_encrypt.dummy.214>:
    ca6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca73:	02 00 00 
    ca76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca7d:	02 00 00 
    ca80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca87:	02 00 00 
    ca8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca91:	02 00 00 
    ca94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ca9b:	02 00 00 
    ca9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    caa5:	02 00 00 
    caa8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000caac <AES_encrypt.213>:
    caac:	c1 e9 08             	shr    $0x8,%ecx
    caaf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    cab5:	89 c9                	mov    %ecx,%ecx
    cab7:	89 ca                	mov    %ecx,%edx
    cab9:	48 8d 0d 40 d5 02 00 	lea    0x2d540(%rip),%rcx        # 3a000 <Te0>
    cac0:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    cac4:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cacb:	00 00 00 
    cace:	41 ff d6             	call   *%r14
    cad1:	41 8b 0e             	mov    (%r14),%ecx
    cad4:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    cada:	31 c8                	xor    %ecx,%eax
    cadc:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    cae0:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cae7:	00 00 00 
    caea:	41 ff d6             	call   *%r14
    caed:	41 8b 0e             	mov    (%r14),%ecx
    caf0:	e9 4b 00 00 00       	jmp    cb40 <AES_encrypt.214>
    caf5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cafc:	02 00 00 
    caff:	90                   	nop

000000000000cb00 <AES_encrypt.dummy.215>:
    cb00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb07:	02 00 00 
    cb0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb11:	02 00 00 
    cb14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb1b:	02 00 00 
    cb1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb25:	02 00 00 
    cb28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb2f:	02 00 00 
    cb32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb39:	02 00 00 
    cb3c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cb40 <AES_encrypt.214>:
    cb40:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    cb46:	89 c9                	mov    %ecx,%ecx
    cb48:	89 ca                	mov    %ecx,%edx
    cb4a:	48 8d 0d af d8 02 00 	lea    0x2d8af(%rip),%rcx        # 3a400 <Te1>
    cb51:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    cb55:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cb5c:	00 00 00 
    cb5f:	41 ff d6             	call   *%r14
    cb62:	41 8b 0e             	mov    (%r14),%ecx
    cb65:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    cb6b:	31 c8                	xor    %ecx,%eax
    cb6d:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    cb71:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cb78:	00 00 00 
    cb7b:	41 ff d6             	call   *%r14
    cb7e:	49 8b 0e             	mov    (%r14),%rcx
    cb81:	e9 4e 00 00 00       	jmp    cbd4 <AES_encrypt.215>
    cb86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb8d:	02 00 00 
    cb90:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cb94 <AES_encrypt.dummy.216>:
    cb94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cb9b:	02 00 00 
    cb9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cba5:	02 00 00 
    cba8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cbaf:	02 00 00 
    cbb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cbb9:	02 00 00 
    cbbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cbc3:	02 00 00 
    cbc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cbcd:	02 00 00 
    cbd0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cbd4 <AES_encrypt.215>:
    cbd4:	33 41 08             	xor    0x8(%rcx),%eax
    cbd7:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    cbdb:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cbe2:	00 00 00 
    cbe5:	41 ff d6             	call   *%r14
    cbe8:	41 89 06             	mov    %eax,(%r14)
    cbeb:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    cbef:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cbf6:	00 00 00 
    cbf9:	41 ff d6             	call   *%r14
    cbfc:	41 8b 06             	mov    (%r14),%eax
    cbff:	c1 e8 18             	shr    $0x18,%eax
    cc02:	88 c1                	mov    %al,%cl
    cc04:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    cc08:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cc0f:	00 00 00 
    cc12:	41 ff d6             	call   *%r14
    cc15:	49 8b 06             	mov    (%r14),%rax
    cc18:	e9 4b 00 00 00       	jmp    cc68 <AES_encrypt.216>
    cc1d:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc24:	02 00 00 
    cc27:	90                   	nop

000000000000cc28 <AES_encrypt.dummy.217>:
    cc28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc2f:	02 00 00 
    cc32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc39:	02 00 00 
    cc3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc43:	02 00 00 
    cc46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc4d:	02 00 00 
    cc50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc57:	02 00 00 
    cc5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cc61:	02 00 00 
    cc64:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cc68 <AES_encrypt.216>:
    cc68:	4c 8d 78 08          	lea    0x8(%rax),%r15
    cc6c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cc73:	00 00 00 
    cc76:	41 ff d6             	call   *%r14
    cc79:	41 88 0e             	mov    %cl,(%r14)
    cc7c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    cc80:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cc87:	00 00 00 
    cc8a:	41 ff d6             	call   *%r14
    cc8d:	41 8b 06             	mov    (%r14),%eax
    cc90:	c1 e8 10             	shr    $0x10,%eax
    cc93:	88 c1                	mov    %al,%cl
    cc95:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    cc99:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cca0:	00 00 00 
    cca3:	41 ff d6             	call   *%r14
    cca6:	49 8b 06             	mov    (%r14),%rax
    cca9:	e9 4e 00 00 00       	jmp    ccfc <AES_encrypt.217>
    ccae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ccb5:	02 00 00 
    ccb8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ccbc <AES_encrypt.dummy.218>:
    ccbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ccc3:	02 00 00 
    ccc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cccd:	02 00 00 
    ccd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ccd7:	02 00 00 
    ccda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cce1:	02 00 00 
    cce4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cceb:	02 00 00 
    ccee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ccf5:	02 00 00 
    ccf8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ccfc <AES_encrypt.217>:
    ccfc:	4c 8d 78 09          	lea    0x9(%rax),%r15
    cd00:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cd07:	00 00 00 
    cd0a:	41 ff d6             	call   *%r14
    cd0d:	41 88 0e             	mov    %cl,(%r14)
    cd10:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    cd14:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cd1b:	00 00 00 
    cd1e:	41 ff d6             	call   *%r14
    cd21:	41 8b 06             	mov    (%r14),%eax
    cd24:	c1 e8 08             	shr    $0x8,%eax
    cd27:	88 c1                	mov    %al,%cl
    cd29:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    cd2d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cd34:	00 00 00 
    cd37:	41 ff d6             	call   *%r14
    cd3a:	49 8b 06             	mov    (%r14),%rax
    cd3d:	e9 4e 00 00 00       	jmp    cd90 <AES_encrypt.218>
    cd42:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd49:	02 00 00 
    cd4c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cd50 <AES_encrypt.dummy.219>:
    cd50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd57:	02 00 00 
    cd5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd61:	02 00 00 
    cd64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd6b:	02 00 00 
    cd6e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd75:	02 00 00 
    cd78:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd7f:	02 00 00 
    cd82:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cd89:	02 00 00 
    cd8c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cd90 <AES_encrypt.218>:
    cd90:	4c 8d 78 0a          	lea    0xa(%rax),%r15
    cd94:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cd9b:	00 00 00 
    cd9e:	41 ff d6             	call   *%r14
    cda1:	41 88 0e             	mov    %cl,(%r14)
    cda4:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    cda8:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cdaf:	00 00 00 
    cdb2:	41 ff d6             	call   *%r14
    cdb5:	41 8b 06             	mov    (%r14),%eax
    cdb8:	88 c1                	mov    %al,%cl
    cdba:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    cdbe:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cdc5:	00 00 00 
    cdc8:	41 ff d6             	call   *%r14
    cdcb:	49 8b 06             	mov    (%r14),%rax
    cdce:	e9 51 00 00 00       	jmp    ce24 <AES_encrypt.219>
    cdd3:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cdda:	02 00 00 
    cddd:	0f 1f 80 00 02 00 00 	nopl   0x200(%rax)

000000000000cde4 <AES_encrypt.dummy.220>:
    cde4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cdeb:	02 00 00 
    cdee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cdf5:	02 00 00 
    cdf8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cdff:	02 00 00 
    ce02:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce09:	02 00 00 
    ce0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce13:	02 00 00 
    ce16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce1d:	02 00 00 
    ce20:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ce24 <AES_encrypt.219>:
    ce24:	4c 8d 78 0b          	lea    0xb(%rax),%r15
    ce28:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ce2f:	00 00 00 
    ce32:	41 ff d6             	call   *%r14
    ce35:	41 88 0e             	mov    %cl,(%r14)
    ce38:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    ce3c:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ce43:	00 00 00 
    ce46:	41 ff d6             	call   *%r14
    ce49:	41 8b 06             	mov    (%r14),%eax
    ce4c:	c1 e8 18             	shr    $0x18,%eax
    ce4f:	89 c0                	mov    %eax,%eax
    ce51:	89 c1                	mov    %eax,%ecx
    ce53:	48 8d 05 a6 d9 02 00 	lea    0x2d9a6(%rip),%rax        # 3a800 <Te2>
    ce5a:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    ce5e:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    ce65:	00 00 00 
    ce68:	41 ff d6             	call   *%r14
    ce6b:	41 8b 06             	mov    (%r14),%eax
    ce6e:	e9 45 00 00 00       	jmp    ceb8 <AES_encrypt.220>
    ce73:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000ce78 <AES_encrypt.dummy.221>:
    ce78:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce7f:	02 00 00 
    ce82:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce89:	02 00 00 
    ce8c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce93:	02 00 00 
    ce96:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ce9d:	02 00 00 
    cea0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cea7:	02 00 00 
    ceaa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ceb1:	02 00 00 
    ceb4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ceb8 <AES_encrypt.220>:
    ceb8:	25 00 00 00 ff       	and    $0xff000000,%eax
    cebd:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    cec1:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cec8:	00 00 00 
    cecb:	41 ff d6             	call   *%r14
    cece:	41 8b 0e             	mov    (%r14),%ecx
    ced1:	c1 e9 10             	shr    $0x10,%ecx
    ced4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ceda:	89 c9                	mov    %ecx,%ecx
    cedc:	89 ca                	mov    %ecx,%edx
    cede:	48 8d 0d 1b dd 02 00 	lea    0x2dd1b(%rip),%rcx        # 3ac00 <Te3>
    cee5:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    cee9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cef0:	00 00 00 
    cef3:	41 ff d6             	call   *%r14
    cef6:	41 8b 0e             	mov    (%r14),%ecx
    cef9:	e9 4e 00 00 00       	jmp    cf4c <AES_encrypt.221>
    cefe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf05:	02 00 00 
    cf08:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cf0c <AES_encrypt.dummy.222>:
    cf0c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf13:	02 00 00 
    cf16:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf1d:	02 00 00 
    cf20:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf27:	02 00 00 
    cf2a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf31:	02 00 00 
    cf34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf3b:	02 00 00 
    cf3e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf45:	02 00 00 
    cf48:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cf4c <AES_encrypt.221>:
    cf4c:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
    cf52:	31 c8                	xor    %ecx,%eax
    cf54:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    cf58:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cf5f:	00 00 00 
    cf62:	41 ff d6             	call   *%r14
    cf65:	41 8b 0e             	mov    (%r14),%ecx
    cf68:	c1 e9 08             	shr    $0x8,%ecx
    cf6b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    cf71:	89 c9                	mov    %ecx,%ecx
    cf73:	89 ca                	mov    %ecx,%edx
    cf75:	48 8d 0d 84 d0 02 00 	lea    0x2d084(%rip),%rcx        # 3a000 <Te0>
    cf7c:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    cf80:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cf87:	00 00 00 
    cf8a:	41 ff d6             	call   *%r14
    cf8d:	41 8b 0e             	mov    (%r14),%ecx
    cf90:	e9 4b 00 00 00       	jmp    cfe0 <AES_encrypt.222>
    cf95:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cf9c:	02 00 00 
    cf9f:	90                   	nop

000000000000cfa0 <AES_encrypt.dummy.223>:
    cfa0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfa7:	02 00 00 
    cfaa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfb1:	02 00 00 
    cfb4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfbb:	02 00 00 
    cfbe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfc5:	02 00 00 
    cfc8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfcf:	02 00 00 
    cfd2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    cfd9:	02 00 00 
    cfdc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000cfe0 <AES_encrypt.222>:
    cfe0:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    cfe6:	31 c8                	xor    %ecx,%eax
    cfe8:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    cfec:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    cff3:	00 00 00 
    cff6:	41 ff d6             	call   *%r14
    cff9:	41 8b 0e             	mov    (%r14),%ecx
    cffc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d002:	89 c9                	mov    %ecx,%ecx
    d004:	89 ca                	mov    %ecx,%edx
    d006:	48 8d 0d f3 d3 02 00 	lea    0x2d3f3(%rip),%rcx        # 3a400 <Te1>
    d00d:	4c 8d 3c 91          	lea    (%rcx,%rdx,4),%r15
    d011:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d018:	00 00 00 
    d01b:	41 ff d6             	call   *%r14
    d01e:	41 8b 0e             	mov    (%r14),%ecx
    d021:	e9 4e 00 00 00       	jmp    d074 <AES_encrypt.223>
    d026:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d02d:	02 00 00 
    d030:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d034 <AES_encrypt.dummy.224>:
    d034:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d03b:	02 00 00 
    d03e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d045:	02 00 00 
    d048:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d04f:	02 00 00 
    d052:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d059:	02 00 00 
    d05c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d063:	02 00 00 
    d066:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d06d:	02 00 00 
    d070:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d074 <AES_encrypt.223>:
    d074:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d07a:	31 c8                	xor    %ecx,%eax
    d07c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    d080:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d087:	00 00 00 
    d08a:	41 ff d6             	call   *%r14
    d08d:	49 8b 0e             	mov    (%r14),%rcx
    d090:	33 41 0c             	xor    0xc(%rcx),%eax
    d093:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    d097:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d09e:	00 00 00 
    d0a1:	41 ff d6             	call   *%r14
    d0a4:	41 89 06             	mov    %eax,(%r14)
    d0a7:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    d0ab:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d0b2:	00 00 00 
    d0b5:	41 ff d6             	call   *%r14
    d0b8:	41 8b 06             	mov    (%r14),%eax
    d0bb:	e9 48 00 00 00       	jmp    d108 <AES_encrypt.224>
    d0c0:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    d0c7:	00 

000000000000d0c8 <AES_encrypt.dummy.225>:
    d0c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d0cf:	02 00 00 
    d0d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d0d9:	02 00 00 
    d0dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d0e3:	02 00 00 
    d0e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d0ed:	02 00 00 
    d0f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d0f7:	02 00 00 
    d0fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d101:	02 00 00 
    d104:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d108 <AES_encrypt.224>:
    d108:	c1 e8 18             	shr    $0x18,%eax
    d10b:	88 c1                	mov    %al,%cl
    d10d:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    d111:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d118:	00 00 00 
    d11b:	41 ff d6             	call   *%r14
    d11e:	49 8b 06             	mov    (%r14),%rax
    d121:	4c 8d 78 0c          	lea    0xc(%rax),%r15
    d125:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d12c:	00 00 00 
    d12f:	41 ff d6             	call   *%r14
    d132:	41 88 0e             	mov    %cl,(%r14)
    d135:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    d139:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d140:	00 00 00 
    d143:	41 ff d6             	call   *%r14
    d146:	41 8b 06             	mov    (%r14),%eax
    d149:	e9 4e 00 00 00       	jmp    d19c <AES_encrypt.225>
    d14e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d155:	02 00 00 
    d158:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d15c <AES_encrypt.dummy.226>:
    d15c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d163:	02 00 00 
    d166:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d16d:	02 00 00 
    d170:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d177:	02 00 00 
    d17a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d181:	02 00 00 
    d184:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d18b:	02 00 00 
    d18e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d195:	02 00 00 
    d198:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d19c <AES_encrypt.225>:
    d19c:	c1 e8 10             	shr    $0x10,%eax
    d19f:	88 c1                	mov    %al,%cl
    d1a1:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    d1a5:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d1ac:	00 00 00 
    d1af:	41 ff d6             	call   *%r14
    d1b2:	49 8b 06             	mov    (%r14),%rax
    d1b5:	4c 8d 78 0d          	lea    0xd(%rax),%r15
    d1b9:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d1c0:	00 00 00 
    d1c3:	41 ff d6             	call   *%r14
    d1c6:	41 88 0e             	mov    %cl,(%r14)
    d1c9:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    d1cd:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d1d4:	00 00 00 
    d1d7:	41 ff d6             	call   *%r14
    d1da:	41 8b 06             	mov    (%r14),%eax
    d1dd:	e9 4e 00 00 00       	jmp    d230 <AES_encrypt.226>
    d1e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d1e9:	02 00 00 
    d1ec:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d1f0 <AES_encrypt.dummy.227>:
    d1f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d1f7:	02 00 00 
    d1fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d201:	02 00 00 
    d204:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d20b:	02 00 00 
    d20e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d215:	02 00 00 
    d218:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d21f:	02 00 00 
    d222:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d229:	02 00 00 
    d22c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d230 <AES_encrypt.226>:
    d230:	c1 e8 08             	shr    $0x8,%eax
    d233:	88 c1                	mov    %al,%cl
    d235:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    d239:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d240:	00 00 00 
    d243:	41 ff d6             	call   *%r14
    d246:	49 8b 06             	mov    (%r14),%rax
    d249:	4c 8d 78 0e          	lea    0xe(%rax),%r15
    d24d:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d254:	00 00 00 
    d257:	41 ff d6             	call   *%r14
    d25a:	41 88 0e             	mov    %cl,(%r14)
    d25d:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    d261:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d268:	00 00 00 
    d26b:	41 ff d6             	call   *%r14
    d26e:	41 8b 06             	mov    (%r14),%eax
    d271:	e9 4e 00 00 00       	jmp    d2c4 <AES_encrypt.227>
    d276:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d27d:	02 00 00 
    d280:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d284 <AES_encrypt.dummy.228>:
    d284:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d28b:	02 00 00 
    d28e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d295:	02 00 00 
    d298:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d29f:	02 00 00 
    d2a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d2a9:	02 00 00 
    d2ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d2b3:	02 00 00 
    d2b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    d2bd:	02 00 00 
    d2c0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000d2c4 <AES_encrypt.227>:
    d2c4:	88 c1                	mov    %al,%cl
    d2c6:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    d2ca:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d2d1:	00 00 00 
    d2d4:	41 ff d6             	call   *%r14
    d2d7:	49 8b 06             	mov    (%r14),%rax
    d2da:	4c 8d 78 0f          	lea    0xf(%rax),%r15
    d2de:	49 be a0 ec 00 00 00 	movabs $0xeca0,%r14
    d2e5:	00 00 00 
    d2e8:	41 ff d6             	call   *%r14
    d2eb:	41 88 0e             	mov    %cl,(%r14)
    d2ee:	5d                   	pop    %rbp
    d2ef:	c3                   	ret    

000000000000d2f0 <AES_decrypt>:
    d2f0:	55                   	push   %rbp
    d2f1:	48 89 e5             	mov    %rsp,%rbp
    d2f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d2fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d304:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d30c:	0f b6 00             	movzbl (%rax),%eax
    d30f:	c1 e0 18             	shl    $0x18,%eax
    d312:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d316:	0f b6 49 01          	movzbl 0x1(%rcx),%ecx
    d31a:	c1 e1 10             	shl    $0x10,%ecx
    d31d:	31 c8                	xor    %ecx,%eax
    d31f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d323:	0f b6 49 02          	movzbl 0x2(%rcx),%ecx
    d327:	c1 e1 08             	shl    $0x8,%ecx
    d32a:	31 c8                	xor    %ecx,%eax
    d32c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d330:	0f b6 49 03          	movzbl 0x3(%rcx),%ecx
    d334:	31 c8                	xor    %ecx,%eax
    d336:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d33a:	33 01                	xor    (%rcx),%eax
    d33c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    d33f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d343:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    d347:	c1 e0 18             	shl    $0x18,%eax
    d34a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d34e:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    d352:	c1 e1 10             	shl    $0x10,%ecx
    d355:	31 c8                	xor    %ecx,%eax
    d357:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d35b:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    d35f:	c1 e1 08             	shl    $0x8,%ecx
    d362:	31 c8                	xor    %ecx,%eax
    d364:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d368:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    d36c:	31 c8                	xor    %ecx,%eax
    d36e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d372:	33 41 04             	xor    0x4(%rcx),%eax
    d375:	89 45 d8             	mov    %eax,-0x28(%rbp)
    d378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d37c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    d380:	c1 e0 18             	shl    $0x18,%eax
    d383:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d387:	0f b6 49 09          	movzbl 0x9(%rcx),%ecx
    d38b:	c1 e1 10             	shl    $0x10,%ecx
    d38e:	31 c8                	xor    %ecx,%eax
    d390:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d394:	0f b6 49 0a          	movzbl 0xa(%rcx),%ecx
    d398:	c1 e1 08             	shl    $0x8,%ecx
    d39b:	31 c8                	xor    %ecx,%eax
    d39d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d3a1:	0f b6 49 0b          	movzbl 0xb(%rcx),%ecx
    d3a5:	31 c8                	xor    %ecx,%eax
    d3a7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d3ab:	33 41 08             	xor    0x8(%rcx),%eax
    d3ae:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    d3b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b5:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
    d3b9:	c1 e0 18             	shl    $0x18,%eax
    d3bc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d3c0:	0f b6 49 0d          	movzbl 0xd(%rcx),%ecx
    d3c4:	c1 e1 10             	shl    $0x10,%ecx
    d3c7:	31 c8                	xor    %ecx,%eax
    d3c9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d3cd:	0f b6 49 0e          	movzbl 0xe(%rcx),%ecx
    d3d1:	c1 e1 08             	shl    $0x8,%ecx
    d3d4:	31 c8                	xor    %ecx,%eax
    d3d6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d3da:	0f b6 49 0f          	movzbl 0xf(%rcx),%ecx
    d3de:	31 c8                	xor    %ecx,%eax
    d3e0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d3e4:	33 41 0c             	xor    0xc(%rcx),%eax
    d3e7:	89 45 d0             	mov    %eax,-0x30(%rbp)
    d3ea:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d3ed:	c1 e8 18             	shr    $0x18,%eax
    d3f0:	89 c0                	mov    %eax,%eax
    d3f2:	89 c1                	mov    %eax,%ecx
    d3f4:	48 8d 05 55 4c 02 00 	lea    0x24c55(%rip),%rax        # 32050 <Td0>
    d3fb:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d3fe:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d401:	c1 e9 10             	shr    $0x10,%ecx
    d404:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d40a:	89 c9                	mov    %ecx,%ecx
    d40c:	89 ca                	mov    %ecx,%edx
    d40e:	48 8d 0d 3b 50 02 00 	lea    0x2503b(%rip),%rcx        # 32450 <Td1>
    d415:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d418:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d41b:	c1 e9 08             	shr    $0x8,%ecx
    d41e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d424:	89 c9                	mov    %ecx,%ecx
    d426:	89 ca                	mov    %ecx,%edx
    d428:	48 8d 0d 21 54 02 00 	lea    0x25421(%rip),%rcx        # 32850 <Td2>
    d42f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d432:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d435:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d43b:	89 c9                	mov    %ecx,%ecx
    d43d:	89 ca                	mov    %ecx,%edx
    d43f:	48 8d 0d 0a 58 02 00 	lea    0x2580a(%rip),%rcx        # 32c50 <Td3>
    d446:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d449:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d44d:	33 41 10             	xor    0x10(%rcx),%eax
    d450:	89 45 cc             	mov    %eax,-0x34(%rbp)
    d453:	8b 45 d8             	mov    -0x28(%rbp),%eax
    d456:	c1 e8 18             	shr    $0x18,%eax
    d459:	89 c0                	mov    %eax,%eax
    d45b:	89 c1                	mov    %eax,%ecx
    d45d:	48 8d 05 ec 4b 02 00 	lea    0x24bec(%rip),%rax        # 32050 <Td0>
    d464:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d467:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d46a:	c1 e9 10             	shr    $0x10,%ecx
    d46d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d473:	89 c9                	mov    %ecx,%ecx
    d475:	89 ca                	mov    %ecx,%edx
    d477:	48 8d 0d d2 4f 02 00 	lea    0x24fd2(%rip),%rcx        # 32450 <Td1>
    d47e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d481:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d484:	c1 e9 08             	shr    $0x8,%ecx
    d487:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d48d:	89 c9                	mov    %ecx,%ecx
    d48f:	89 ca                	mov    %ecx,%edx
    d491:	48 8d 0d b8 53 02 00 	lea    0x253b8(%rip),%rcx        # 32850 <Td2>
    d498:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d49b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d49e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d4a4:	89 c9                	mov    %ecx,%ecx
    d4a6:	89 ca                	mov    %ecx,%edx
    d4a8:	48 8d 0d a1 57 02 00 	lea    0x257a1(%rip),%rcx        # 32c50 <Td3>
    d4af:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d4b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d4b6:	33 41 14             	xor    0x14(%rcx),%eax
    d4b9:	89 45 c8             	mov    %eax,-0x38(%rbp)
    d4bc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    d4bf:	c1 e8 18             	shr    $0x18,%eax
    d4c2:	89 c0                	mov    %eax,%eax
    d4c4:	89 c1                	mov    %eax,%ecx
    d4c6:	48 8d 05 83 4b 02 00 	lea    0x24b83(%rip),%rax        # 32050 <Td0>
    d4cd:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d4d0:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d4d3:	c1 e9 10             	shr    $0x10,%ecx
    d4d6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d4dc:	89 c9                	mov    %ecx,%ecx
    d4de:	89 ca                	mov    %ecx,%edx
    d4e0:	48 8d 0d 69 4f 02 00 	lea    0x24f69(%rip),%rcx        # 32450 <Td1>
    d4e7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d4ea:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d4ed:	c1 e9 08             	shr    $0x8,%ecx
    d4f0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d4f6:	89 c9                	mov    %ecx,%ecx
    d4f8:	89 ca                	mov    %ecx,%edx
    d4fa:	48 8d 0d 4f 53 02 00 	lea    0x2534f(%rip),%rcx        # 32850 <Td2>
    d501:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d504:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d507:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d50d:	89 c9                	mov    %ecx,%ecx
    d50f:	89 ca                	mov    %ecx,%edx
    d511:	48 8d 0d 38 57 02 00 	lea    0x25738(%rip),%rcx        # 32c50 <Td3>
    d518:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d51b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d51f:	33 41 18             	xor    0x18(%rcx),%eax
    d522:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    d525:	8b 45 d0             	mov    -0x30(%rbp),%eax
    d528:	c1 e8 18             	shr    $0x18,%eax
    d52b:	89 c0                	mov    %eax,%eax
    d52d:	89 c1                	mov    %eax,%ecx
    d52f:	48 8d 05 1a 4b 02 00 	lea    0x24b1a(%rip),%rax        # 32050 <Td0>
    d536:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d539:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d53c:	c1 e9 10             	shr    $0x10,%ecx
    d53f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d545:	89 c9                	mov    %ecx,%ecx
    d547:	89 ca                	mov    %ecx,%edx
    d549:	48 8d 0d 00 4f 02 00 	lea    0x24f00(%rip),%rcx        # 32450 <Td1>
    d550:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d553:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d556:	c1 e9 08             	shr    $0x8,%ecx
    d559:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d55f:	89 c9                	mov    %ecx,%ecx
    d561:	89 ca                	mov    %ecx,%edx
    d563:	48 8d 0d e6 52 02 00 	lea    0x252e6(%rip),%rcx        # 32850 <Td2>
    d56a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d56d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d570:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d576:	89 c9                	mov    %ecx,%ecx
    d578:	89 ca                	mov    %ecx,%edx
    d57a:	48 8d 0d cf 56 02 00 	lea    0x256cf(%rip),%rcx        # 32c50 <Td3>
    d581:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d584:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d588:	33 41 1c             	xor    0x1c(%rcx),%eax
    d58b:	89 45 c0             	mov    %eax,-0x40(%rbp)
    d58e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d591:	c1 e8 18             	shr    $0x18,%eax
    d594:	89 c0                	mov    %eax,%eax
    d596:	89 c1                	mov    %eax,%ecx
    d598:	48 8d 05 b1 4a 02 00 	lea    0x24ab1(%rip),%rax        # 32050 <Td0>
    d59f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d5a2:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d5a5:	c1 e9 10             	shr    $0x10,%ecx
    d5a8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d5ae:	89 c9                	mov    %ecx,%ecx
    d5b0:	89 ca                	mov    %ecx,%edx
    d5b2:	48 8d 0d 97 4e 02 00 	lea    0x24e97(%rip),%rcx        # 32450 <Td1>
    d5b9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d5bc:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    d5bf:	c1 e9 08             	shr    $0x8,%ecx
    d5c2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d5c8:	89 c9                	mov    %ecx,%ecx
    d5ca:	89 ca                	mov    %ecx,%edx
    d5cc:	48 8d 0d 7d 52 02 00 	lea    0x2527d(%rip),%rcx        # 32850 <Td2>
    d5d3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d5d6:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    d5d9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d5df:	89 c9                	mov    %ecx,%ecx
    d5e1:	89 ca                	mov    %ecx,%edx
    d5e3:	48 8d 0d 66 56 02 00 	lea    0x25666(%rip),%rcx        # 32c50 <Td3>
    d5ea:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d5ed:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d5f1:	33 41 20             	xor    0x20(%rcx),%eax
    d5f4:	89 45 dc             	mov    %eax,-0x24(%rbp)
    d5f7:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d5fa:	c1 e8 18             	shr    $0x18,%eax
    d5fd:	89 c0                	mov    %eax,%eax
    d5ff:	89 c1                	mov    %eax,%ecx
    d601:	48 8d 05 48 4a 02 00 	lea    0x24a48(%rip),%rax        # 32050 <Td0>
    d608:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d60b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    d60e:	c1 e9 10             	shr    $0x10,%ecx
    d611:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d617:	89 c9                	mov    %ecx,%ecx
    d619:	89 ca                	mov    %ecx,%edx
    d61b:	48 8d 0d 2e 4e 02 00 	lea    0x24e2e(%rip),%rcx        # 32450 <Td1>
    d622:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d625:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d628:	c1 e9 08             	shr    $0x8,%ecx
    d62b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d631:	89 c9                	mov    %ecx,%ecx
    d633:	89 ca                	mov    %ecx,%edx
    d635:	48 8d 0d 14 52 02 00 	lea    0x25214(%rip),%rcx        # 32850 <Td2>
    d63c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d63f:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    d642:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d648:	89 c9                	mov    %ecx,%ecx
    d64a:	89 ca                	mov    %ecx,%edx
    d64c:	48 8d 0d fd 55 02 00 	lea    0x255fd(%rip),%rcx        # 32c50 <Td3>
    d653:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d656:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d65a:	33 41 24             	xor    0x24(%rcx),%eax
    d65d:	89 45 d8             	mov    %eax,-0x28(%rbp)
    d660:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    d663:	c1 e8 18             	shr    $0x18,%eax
    d666:	89 c0                	mov    %eax,%eax
    d668:	89 c1                	mov    %eax,%ecx
    d66a:	48 8d 05 df 49 02 00 	lea    0x249df(%rip),%rax        # 32050 <Td0>
    d671:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d674:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    d677:	c1 e9 10             	shr    $0x10,%ecx
    d67a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d680:	89 c9                	mov    %ecx,%ecx
    d682:	89 ca                	mov    %ecx,%edx
    d684:	48 8d 0d c5 4d 02 00 	lea    0x24dc5(%rip),%rcx        # 32450 <Td1>
    d68b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d68e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    d691:	c1 e9 08             	shr    $0x8,%ecx
    d694:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d69a:	89 c9                	mov    %ecx,%ecx
    d69c:	89 ca                	mov    %ecx,%edx
    d69e:	48 8d 0d ab 51 02 00 	lea    0x251ab(%rip),%rcx        # 32850 <Td2>
    d6a5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d6a8:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d6ab:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d6b1:	89 c9                	mov    %ecx,%ecx
    d6b3:	89 ca                	mov    %ecx,%edx
    d6b5:	48 8d 0d 94 55 02 00 	lea    0x25594(%rip),%rcx        # 32c50 <Td3>
    d6bc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d6bf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d6c3:	33 41 28             	xor    0x28(%rcx),%eax
    d6c6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    d6c9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    d6cc:	c1 e8 18             	shr    $0x18,%eax
    d6cf:	89 c0                	mov    %eax,%eax
    d6d1:	89 c1                	mov    %eax,%ecx
    d6d3:	48 8d 05 76 49 02 00 	lea    0x24976(%rip),%rax        # 32050 <Td0>
    d6da:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d6dd:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    d6e0:	c1 e9 10             	shr    $0x10,%ecx
    d6e3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d6e9:	89 c9                	mov    %ecx,%ecx
    d6eb:	89 ca                	mov    %ecx,%edx
    d6ed:	48 8d 0d 5c 4d 02 00 	lea    0x24d5c(%rip),%rcx        # 32450 <Td1>
    d6f4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d6f7:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    d6fa:	c1 e9 08             	shr    $0x8,%ecx
    d6fd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d703:	89 c9                	mov    %ecx,%ecx
    d705:	89 ca                	mov    %ecx,%edx
    d707:	48 8d 0d 42 51 02 00 	lea    0x25142(%rip),%rcx        # 32850 <Td2>
    d70e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d711:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    d714:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d71a:	89 c9                	mov    %ecx,%ecx
    d71c:	89 ca                	mov    %ecx,%edx
    d71e:	48 8d 0d 2b 55 02 00 	lea    0x2552b(%rip),%rcx        # 32c50 <Td3>
    d725:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d728:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d72c:	33 41 2c             	xor    0x2c(%rcx),%eax
    d72f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    d732:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d735:	c1 e8 18             	shr    $0x18,%eax
    d738:	89 c0                	mov    %eax,%eax
    d73a:	89 c1                	mov    %eax,%ecx
    d73c:	48 8d 05 0d 49 02 00 	lea    0x2490d(%rip),%rax        # 32050 <Td0>
    d743:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d746:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d749:	c1 e9 10             	shr    $0x10,%ecx
    d74c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d752:	89 c9                	mov    %ecx,%ecx
    d754:	89 ca                	mov    %ecx,%edx
    d756:	48 8d 0d f3 4c 02 00 	lea    0x24cf3(%rip),%rcx        # 32450 <Td1>
    d75d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d760:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d763:	c1 e9 08             	shr    $0x8,%ecx
    d766:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d76c:	89 c9                	mov    %ecx,%ecx
    d76e:	89 ca                	mov    %ecx,%edx
    d770:	48 8d 0d d9 50 02 00 	lea    0x250d9(%rip),%rcx        # 32850 <Td2>
    d777:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d77a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d77d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d783:	89 c9                	mov    %ecx,%ecx
    d785:	89 ca                	mov    %ecx,%edx
    d787:	48 8d 0d c2 54 02 00 	lea    0x254c2(%rip),%rcx        # 32c50 <Td3>
    d78e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d791:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d795:	33 41 30             	xor    0x30(%rcx),%eax
    d798:	89 45 cc             	mov    %eax,-0x34(%rbp)
    d79b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    d79e:	c1 e8 18             	shr    $0x18,%eax
    d7a1:	89 c0                	mov    %eax,%eax
    d7a3:	89 c1                	mov    %eax,%ecx
    d7a5:	48 8d 05 a4 48 02 00 	lea    0x248a4(%rip),%rax        # 32050 <Td0>
    d7ac:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d7af:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d7b2:	c1 e9 10             	shr    $0x10,%ecx
    d7b5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d7bb:	89 c9                	mov    %ecx,%ecx
    d7bd:	89 ca                	mov    %ecx,%edx
    d7bf:	48 8d 0d 8a 4c 02 00 	lea    0x24c8a(%rip),%rcx        # 32450 <Td1>
    d7c6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d7c9:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d7cc:	c1 e9 08             	shr    $0x8,%ecx
    d7cf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d7d5:	89 c9                	mov    %ecx,%ecx
    d7d7:	89 ca                	mov    %ecx,%edx
    d7d9:	48 8d 0d 70 50 02 00 	lea    0x25070(%rip),%rcx        # 32850 <Td2>
    d7e0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d7e3:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d7e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d7ec:	89 c9                	mov    %ecx,%ecx
    d7ee:	89 ca                	mov    %ecx,%edx
    d7f0:	48 8d 0d 59 54 02 00 	lea    0x25459(%rip),%rcx        # 32c50 <Td3>
    d7f7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d7fa:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d7fe:	33 41 34             	xor    0x34(%rcx),%eax
    d801:	89 45 c8             	mov    %eax,-0x38(%rbp)
    d804:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    d807:	c1 e8 18             	shr    $0x18,%eax
    d80a:	89 c0                	mov    %eax,%eax
    d80c:	89 c1                	mov    %eax,%ecx
    d80e:	48 8d 05 3b 48 02 00 	lea    0x2483b(%rip),%rax        # 32050 <Td0>
    d815:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d818:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d81b:	c1 e9 10             	shr    $0x10,%ecx
    d81e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d824:	89 c9                	mov    %ecx,%ecx
    d826:	89 ca                	mov    %ecx,%edx
    d828:	48 8d 0d 21 4c 02 00 	lea    0x24c21(%rip),%rcx        # 32450 <Td1>
    d82f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d832:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d835:	c1 e9 08             	shr    $0x8,%ecx
    d838:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d83e:	89 c9                	mov    %ecx,%ecx
    d840:	89 ca                	mov    %ecx,%edx
    d842:	48 8d 0d 07 50 02 00 	lea    0x25007(%rip),%rcx        # 32850 <Td2>
    d849:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d84c:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d84f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d855:	89 c9                	mov    %ecx,%ecx
    d857:	89 ca                	mov    %ecx,%edx
    d859:	48 8d 0d f0 53 02 00 	lea    0x253f0(%rip),%rcx        # 32c50 <Td3>
    d860:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d863:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d867:	33 41 38             	xor    0x38(%rcx),%eax
    d86a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    d86d:	8b 45 d0             	mov    -0x30(%rbp),%eax
    d870:	c1 e8 18             	shr    $0x18,%eax
    d873:	89 c0                	mov    %eax,%eax
    d875:	89 c1                	mov    %eax,%ecx
    d877:	48 8d 05 d2 47 02 00 	lea    0x247d2(%rip),%rax        # 32050 <Td0>
    d87e:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d881:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d884:	c1 e9 10             	shr    $0x10,%ecx
    d887:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d88d:	89 c9                	mov    %ecx,%ecx
    d88f:	89 ca                	mov    %ecx,%edx
    d891:	48 8d 0d b8 4b 02 00 	lea    0x24bb8(%rip),%rcx        # 32450 <Td1>
    d898:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d89b:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    d89e:	c1 e9 08             	shr    $0x8,%ecx
    d8a1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d8a7:	89 c9                	mov    %ecx,%ecx
    d8a9:	89 ca                	mov    %ecx,%edx
    d8ab:	48 8d 0d 9e 4f 02 00 	lea    0x24f9e(%rip),%rcx        # 32850 <Td2>
    d8b2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d8b5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    d8b8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d8be:	89 c9                	mov    %ecx,%ecx
    d8c0:	89 ca                	mov    %ecx,%edx
    d8c2:	48 8d 0d 87 53 02 00 	lea    0x25387(%rip),%rcx        # 32c50 <Td3>
    d8c9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d8cc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d8d0:	33 41 3c             	xor    0x3c(%rcx),%eax
    d8d3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    d8d6:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d8d9:	c1 e8 18             	shr    $0x18,%eax
    d8dc:	89 c0                	mov    %eax,%eax
    d8de:	89 c1                	mov    %eax,%ecx
    d8e0:	48 8d 05 69 47 02 00 	lea    0x24769(%rip),%rax        # 32050 <Td0>
    d8e7:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d8ea:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d8ed:	c1 e9 10             	shr    $0x10,%ecx
    d8f0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d8f6:	89 c9                	mov    %ecx,%ecx
    d8f8:	89 ca                	mov    %ecx,%edx
    d8fa:	48 8d 0d 4f 4b 02 00 	lea    0x24b4f(%rip),%rcx        # 32450 <Td1>
    d901:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d904:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    d907:	c1 e9 08             	shr    $0x8,%ecx
    d90a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d910:	89 c9                	mov    %ecx,%ecx
    d912:	89 ca                	mov    %ecx,%edx
    d914:	48 8d 0d 35 4f 02 00 	lea    0x24f35(%rip),%rcx        # 32850 <Td2>
    d91b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d91e:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    d921:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d927:	89 c9                	mov    %ecx,%ecx
    d929:	89 ca                	mov    %ecx,%edx
    d92b:	48 8d 0d 1e 53 02 00 	lea    0x2531e(%rip),%rcx        # 32c50 <Td3>
    d932:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d935:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d939:	33 41 40             	xor    0x40(%rcx),%eax
    d93c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    d93f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d942:	c1 e8 18             	shr    $0x18,%eax
    d945:	89 c0                	mov    %eax,%eax
    d947:	89 c1                	mov    %eax,%ecx
    d949:	48 8d 05 00 47 02 00 	lea    0x24700(%rip),%rax        # 32050 <Td0>
    d950:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d953:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    d956:	c1 e9 10             	shr    $0x10,%ecx
    d959:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d95f:	89 c9                	mov    %ecx,%ecx
    d961:	89 ca                	mov    %ecx,%edx
    d963:	48 8d 0d e6 4a 02 00 	lea    0x24ae6(%rip),%rcx        # 32450 <Td1>
    d96a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d96d:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d970:	c1 e9 08             	shr    $0x8,%ecx
    d973:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d979:	89 c9                	mov    %ecx,%ecx
    d97b:	89 ca                	mov    %ecx,%edx
    d97d:	48 8d 0d cc 4e 02 00 	lea    0x24ecc(%rip),%rcx        # 32850 <Td2>
    d984:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d987:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    d98a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d990:	89 c9                	mov    %ecx,%ecx
    d992:	89 ca                	mov    %ecx,%edx
    d994:	48 8d 0d b5 52 02 00 	lea    0x252b5(%rip),%rcx        # 32c50 <Td3>
    d99b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d99e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d9a2:	33 41 44             	xor    0x44(%rcx),%eax
    d9a5:	89 45 d8             	mov    %eax,-0x28(%rbp)
    d9a8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    d9ab:	c1 e8 18             	shr    $0x18,%eax
    d9ae:	89 c0                	mov    %eax,%eax
    d9b0:	89 c1                	mov    %eax,%ecx
    d9b2:	48 8d 05 97 46 02 00 	lea    0x24697(%rip),%rax        # 32050 <Td0>
    d9b9:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    d9bc:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    d9bf:	c1 e9 10             	shr    $0x10,%ecx
    d9c2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d9c8:	89 c9                	mov    %ecx,%ecx
    d9ca:	89 ca                	mov    %ecx,%edx
    d9cc:	48 8d 0d 7d 4a 02 00 	lea    0x24a7d(%rip),%rcx        # 32450 <Td1>
    d9d3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d9d6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    d9d9:	c1 e9 08             	shr    $0x8,%ecx
    d9dc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d9e2:	89 c9                	mov    %ecx,%ecx
    d9e4:	89 ca                	mov    %ecx,%edx
    d9e6:	48 8d 0d 63 4e 02 00 	lea    0x24e63(%rip),%rcx        # 32850 <Td2>
    d9ed:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    d9f0:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    d9f3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    d9f9:	89 c9                	mov    %ecx,%ecx
    d9fb:	89 ca                	mov    %ecx,%edx
    d9fd:	48 8d 0d 4c 52 02 00 	lea    0x2524c(%rip),%rcx        # 32c50 <Td3>
    da04:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    da07:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    da0b:	33 41 48             	xor    0x48(%rcx),%eax
    da0e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    da11:	8b 45 c0             	mov    -0x40(%rbp),%eax
    da14:	c1 e8 18             	shr    $0x18,%eax
    da17:	89 c0                	mov    %eax,%eax
    da19:	89 c1                	mov    %eax,%ecx
    da1b:	48 8d 05 2e 46 02 00 	lea    0x2462e(%rip),%rax        # 32050 <Td0>
    da22:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    da25:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    da28:	c1 e9 10             	shr    $0x10,%ecx
    da2b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    da31:	89 c9                	mov    %ecx,%ecx
    da33:	89 ca                	mov    %ecx,%edx
    da35:	48 8d 0d 14 4a 02 00 	lea    0x24a14(%rip),%rcx        # 32450 <Td1>
    da3c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    da3f:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    da42:	c1 e9 08             	shr    $0x8,%ecx
    da45:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    da4b:	89 c9                	mov    %ecx,%ecx
    da4d:	89 ca                	mov    %ecx,%edx
    da4f:	48 8d 0d fa 4d 02 00 	lea    0x24dfa(%rip),%rcx        # 32850 <Td2>
    da56:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    da59:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    da5c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    da62:	89 c9                	mov    %ecx,%ecx
    da64:	89 ca                	mov    %ecx,%edx
    da66:	48 8d 0d e3 51 02 00 	lea    0x251e3(%rip),%rcx        # 32c50 <Td3>
    da6d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    da70:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    da74:	33 41 4c             	xor    0x4c(%rcx),%eax
    da77:	89 45 d0             	mov    %eax,-0x30(%rbp)
    da7a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    da7d:	c1 e8 18             	shr    $0x18,%eax
    da80:	89 c0                	mov    %eax,%eax
    da82:	89 c1                	mov    %eax,%ecx
    da84:	48 8d 05 c5 45 02 00 	lea    0x245c5(%rip),%rax        # 32050 <Td0>
    da8b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    da8e:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    da91:	c1 e9 10             	shr    $0x10,%ecx
    da94:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    da9a:	89 c9                	mov    %ecx,%ecx
    da9c:	89 ca                	mov    %ecx,%edx
    da9e:	48 8d 0d ab 49 02 00 	lea    0x249ab(%rip),%rcx        # 32450 <Td1>
    daa5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    daa8:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    daab:	c1 e9 08             	shr    $0x8,%ecx
    daae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dab4:	89 c9                	mov    %ecx,%ecx
    dab6:	89 ca                	mov    %ecx,%edx
    dab8:	48 8d 0d 91 4d 02 00 	lea    0x24d91(%rip),%rcx        # 32850 <Td2>
    dabf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dac2:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    dac5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dacb:	89 c9                	mov    %ecx,%ecx
    dacd:	89 ca                	mov    %ecx,%edx
    dacf:	48 8d 0d 7a 51 02 00 	lea    0x2517a(%rip),%rcx        # 32c50 <Td3>
    dad6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dad9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dadd:	33 41 50             	xor    0x50(%rcx),%eax
    dae0:	89 45 cc             	mov    %eax,-0x34(%rbp)
    dae3:	8b 45 d8             	mov    -0x28(%rbp),%eax
    dae6:	c1 e8 18             	shr    $0x18,%eax
    dae9:	89 c0                	mov    %eax,%eax
    daeb:	89 c1                	mov    %eax,%ecx
    daed:	48 8d 05 5c 45 02 00 	lea    0x2455c(%rip),%rax        # 32050 <Td0>
    daf4:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    daf7:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    dafa:	c1 e9 10             	shr    $0x10,%ecx
    dafd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db03:	89 c9                	mov    %ecx,%ecx
    db05:	89 ca                	mov    %ecx,%edx
    db07:	48 8d 0d 42 49 02 00 	lea    0x24942(%rip),%rcx        # 32450 <Td1>
    db0e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    db11:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    db14:	c1 e9 08             	shr    $0x8,%ecx
    db17:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db1d:	89 c9                	mov    %ecx,%ecx
    db1f:	89 ca                	mov    %ecx,%edx
    db21:	48 8d 0d 28 4d 02 00 	lea    0x24d28(%rip),%rcx        # 32850 <Td2>
    db28:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    db2b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    db2e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db34:	89 c9                	mov    %ecx,%ecx
    db36:	89 ca                	mov    %ecx,%edx
    db38:	48 8d 0d 11 51 02 00 	lea    0x25111(%rip),%rcx        # 32c50 <Td3>
    db3f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    db42:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    db46:	33 41 54             	xor    0x54(%rcx),%eax
    db49:	89 45 c8             	mov    %eax,-0x38(%rbp)
    db4c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    db4f:	c1 e8 18             	shr    $0x18,%eax
    db52:	89 c0                	mov    %eax,%eax
    db54:	89 c1                	mov    %eax,%ecx
    db56:	48 8d 05 f3 44 02 00 	lea    0x244f3(%rip),%rax        # 32050 <Td0>
    db5d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    db60:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    db63:	c1 e9 10             	shr    $0x10,%ecx
    db66:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db6c:	89 c9                	mov    %ecx,%ecx
    db6e:	89 ca                	mov    %ecx,%edx
    db70:	48 8d 0d d9 48 02 00 	lea    0x248d9(%rip),%rcx        # 32450 <Td1>
    db77:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    db7a:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    db7d:	c1 e9 08             	shr    $0x8,%ecx
    db80:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db86:	89 c9                	mov    %ecx,%ecx
    db88:	89 ca                	mov    %ecx,%edx
    db8a:	48 8d 0d bf 4c 02 00 	lea    0x24cbf(%rip),%rcx        # 32850 <Td2>
    db91:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    db94:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    db97:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    db9d:	89 c9                	mov    %ecx,%ecx
    db9f:	89 ca                	mov    %ecx,%edx
    dba1:	48 8d 0d a8 50 02 00 	lea    0x250a8(%rip),%rcx        # 32c50 <Td3>
    dba8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dbab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dbaf:	33 41 58             	xor    0x58(%rcx),%eax
    dbb2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    dbb5:	8b 45 d0             	mov    -0x30(%rbp),%eax
    dbb8:	c1 e8 18             	shr    $0x18,%eax
    dbbb:	89 c0                	mov    %eax,%eax
    dbbd:	89 c1                	mov    %eax,%ecx
    dbbf:	48 8d 05 8a 44 02 00 	lea    0x2448a(%rip),%rax        # 32050 <Td0>
    dbc6:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dbc9:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    dbcc:	c1 e9 10             	shr    $0x10,%ecx
    dbcf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dbd5:	89 c9                	mov    %ecx,%ecx
    dbd7:	89 ca                	mov    %ecx,%edx
    dbd9:	48 8d 0d 70 48 02 00 	lea    0x24870(%rip),%rcx        # 32450 <Td1>
    dbe0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dbe3:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    dbe6:	c1 e9 08             	shr    $0x8,%ecx
    dbe9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dbef:	89 c9                	mov    %ecx,%ecx
    dbf1:	89 ca                	mov    %ecx,%edx
    dbf3:	48 8d 0d 56 4c 02 00 	lea    0x24c56(%rip),%rcx        # 32850 <Td2>
    dbfa:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dbfd:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    dc00:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dc06:	89 c9                	mov    %ecx,%ecx
    dc08:	89 ca                	mov    %ecx,%edx
    dc0a:	48 8d 0d 3f 50 02 00 	lea    0x2503f(%rip),%rcx        # 32c50 <Td3>
    dc11:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dc14:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dc18:	33 41 5c             	xor    0x5c(%rcx),%eax
    dc1b:	89 45 c0             	mov    %eax,-0x40(%rbp)
    dc1e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    dc21:	c1 e8 18             	shr    $0x18,%eax
    dc24:	89 c0                	mov    %eax,%eax
    dc26:	89 c1                	mov    %eax,%ecx
    dc28:	48 8d 05 21 44 02 00 	lea    0x24421(%rip),%rax        # 32050 <Td0>
    dc2f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dc32:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    dc35:	c1 e9 10             	shr    $0x10,%ecx
    dc38:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dc3e:	89 c9                	mov    %ecx,%ecx
    dc40:	89 ca                	mov    %ecx,%edx
    dc42:	48 8d 0d 07 48 02 00 	lea    0x24807(%rip),%rcx        # 32450 <Td1>
    dc49:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dc4c:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    dc4f:	c1 e9 08             	shr    $0x8,%ecx
    dc52:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dc58:	89 c9                	mov    %ecx,%ecx
    dc5a:	89 ca                	mov    %ecx,%edx
    dc5c:	48 8d 0d ed 4b 02 00 	lea    0x24bed(%rip),%rcx        # 32850 <Td2>
    dc63:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dc66:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    dc69:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dc6f:	89 c9                	mov    %ecx,%ecx
    dc71:	89 ca                	mov    %ecx,%edx
    dc73:	48 8d 0d d6 4f 02 00 	lea    0x24fd6(%rip),%rcx        # 32c50 <Td3>
    dc7a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dc7d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dc81:	33 41 60             	xor    0x60(%rcx),%eax
    dc84:	89 45 dc             	mov    %eax,-0x24(%rbp)
    dc87:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dc8a:	c1 e8 18             	shr    $0x18,%eax
    dc8d:	89 c0                	mov    %eax,%eax
    dc8f:	89 c1                	mov    %eax,%ecx
    dc91:	48 8d 05 b8 43 02 00 	lea    0x243b8(%rip),%rax        # 32050 <Td0>
    dc98:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dc9b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    dc9e:	c1 e9 10             	shr    $0x10,%ecx
    dca1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dca7:	89 c9                	mov    %ecx,%ecx
    dca9:	89 ca                	mov    %ecx,%edx
    dcab:	48 8d 0d 9e 47 02 00 	lea    0x2479e(%rip),%rcx        # 32450 <Td1>
    dcb2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dcb5:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    dcb8:	c1 e9 08             	shr    $0x8,%ecx
    dcbb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dcc1:	89 c9                	mov    %ecx,%ecx
    dcc3:	89 ca                	mov    %ecx,%edx
    dcc5:	48 8d 0d 84 4b 02 00 	lea    0x24b84(%rip),%rcx        # 32850 <Td2>
    dccc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dccf:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    dcd2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dcd8:	89 c9                	mov    %ecx,%ecx
    dcda:	89 ca                	mov    %ecx,%edx
    dcdc:	48 8d 0d 6d 4f 02 00 	lea    0x24f6d(%rip),%rcx        # 32c50 <Td3>
    dce3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dce6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dcea:	33 41 64             	xor    0x64(%rcx),%eax
    dced:	89 45 d8             	mov    %eax,-0x28(%rbp)
    dcf0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    dcf3:	c1 e8 18             	shr    $0x18,%eax
    dcf6:	89 c0                	mov    %eax,%eax
    dcf8:	89 c1                	mov    %eax,%ecx
    dcfa:	48 8d 05 4f 43 02 00 	lea    0x2434f(%rip),%rax        # 32050 <Td0>
    dd01:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dd04:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    dd07:	c1 e9 10             	shr    $0x10,%ecx
    dd0a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dd10:	89 c9                	mov    %ecx,%ecx
    dd12:	89 ca                	mov    %ecx,%edx
    dd14:	48 8d 0d 35 47 02 00 	lea    0x24735(%rip),%rcx        # 32450 <Td1>
    dd1b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dd1e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    dd21:	c1 e9 08             	shr    $0x8,%ecx
    dd24:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dd2a:	89 c9                	mov    %ecx,%ecx
    dd2c:	89 ca                	mov    %ecx,%edx
    dd2e:	48 8d 0d 1b 4b 02 00 	lea    0x24b1b(%rip),%rcx        # 32850 <Td2>
    dd35:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dd38:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    dd3b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dd41:	89 c9                	mov    %ecx,%ecx
    dd43:	89 ca                	mov    %ecx,%edx
    dd45:	48 8d 0d 04 4f 02 00 	lea    0x24f04(%rip),%rcx        # 32c50 <Td3>
    dd4c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dd4f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dd53:	33 41 68             	xor    0x68(%rcx),%eax
    dd56:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    dd59:	8b 45 c0             	mov    -0x40(%rbp),%eax
    dd5c:	c1 e8 18             	shr    $0x18,%eax
    dd5f:	89 c0                	mov    %eax,%eax
    dd61:	89 c1                	mov    %eax,%ecx
    dd63:	48 8d 05 e6 42 02 00 	lea    0x242e6(%rip),%rax        # 32050 <Td0>
    dd6a:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dd6d:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    dd70:	c1 e9 10             	shr    $0x10,%ecx
    dd73:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dd79:	89 c9                	mov    %ecx,%ecx
    dd7b:	89 ca                	mov    %ecx,%edx
    dd7d:	48 8d 0d cc 46 02 00 	lea    0x246cc(%rip),%rcx        # 32450 <Td1>
    dd84:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dd87:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    dd8a:	c1 e9 08             	shr    $0x8,%ecx
    dd8d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dd93:	89 c9                	mov    %ecx,%ecx
    dd95:	89 ca                	mov    %ecx,%edx
    dd97:	48 8d 0d b2 4a 02 00 	lea    0x24ab2(%rip),%rcx        # 32850 <Td2>
    dd9e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dda1:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    dda4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ddaa:	89 c9                	mov    %ecx,%ecx
    ddac:	89 ca                	mov    %ecx,%edx
    ddae:	48 8d 0d 9b 4e 02 00 	lea    0x24e9b(%rip),%rcx        # 32c50 <Td3>
    ddb5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ddb8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ddbc:	33 41 6c             	xor    0x6c(%rcx),%eax
    ddbf:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ddc2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ddc5:	c1 e8 18             	shr    $0x18,%eax
    ddc8:	89 c0                	mov    %eax,%eax
    ddca:	89 c1                	mov    %eax,%ecx
    ddcc:	48 8d 05 7d 42 02 00 	lea    0x2427d(%rip),%rax        # 32050 <Td0>
    ddd3:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    ddd6:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    ddd9:	c1 e9 10             	shr    $0x10,%ecx
    dddc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dde2:	89 c9                	mov    %ecx,%ecx
    dde4:	89 ca                	mov    %ecx,%edx
    dde6:	48 8d 0d 63 46 02 00 	lea    0x24663(%rip),%rcx        # 32450 <Td1>
    dded:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ddf0:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    ddf3:	c1 e9 08             	shr    $0x8,%ecx
    ddf6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ddfc:	89 c9                	mov    %ecx,%ecx
    ddfe:	89 ca                	mov    %ecx,%edx
    de00:	48 8d 0d 49 4a 02 00 	lea    0x24a49(%rip),%rcx        # 32850 <Td2>
    de07:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    de0a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    de0d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    de13:	89 c9                	mov    %ecx,%ecx
    de15:	89 ca                	mov    %ecx,%edx
    de17:	48 8d 0d 32 4e 02 00 	lea    0x24e32(%rip),%rcx        # 32c50 <Td3>
    de1e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    de21:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    de25:	33 41 70             	xor    0x70(%rcx),%eax
    de28:	89 45 cc             	mov    %eax,-0x34(%rbp)
    de2b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    de2e:	c1 e8 18             	shr    $0x18,%eax
    de31:	89 c0                	mov    %eax,%eax
    de33:	89 c1                	mov    %eax,%ecx
    de35:	48 8d 05 14 42 02 00 	lea    0x24214(%rip),%rax        # 32050 <Td0>
    de3c:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    de3f:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    de42:	c1 e9 10             	shr    $0x10,%ecx
    de45:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    de4b:	89 c9                	mov    %ecx,%ecx
    de4d:	89 ca                	mov    %ecx,%edx
    de4f:	48 8d 0d fa 45 02 00 	lea    0x245fa(%rip),%rcx        # 32450 <Td1>
    de56:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    de59:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    de5c:	c1 e9 08             	shr    $0x8,%ecx
    de5f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    de65:	89 c9                	mov    %ecx,%ecx
    de67:	89 ca                	mov    %ecx,%edx
    de69:	48 8d 0d e0 49 02 00 	lea    0x249e0(%rip),%rcx        # 32850 <Td2>
    de70:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    de73:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    de76:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    de7c:	89 c9                	mov    %ecx,%ecx
    de7e:	89 ca                	mov    %ecx,%edx
    de80:	48 8d 0d c9 4d 02 00 	lea    0x24dc9(%rip),%rcx        # 32c50 <Td3>
    de87:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    de8a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    de8e:	33 41 74             	xor    0x74(%rcx),%eax
    de91:	89 45 c8             	mov    %eax,-0x38(%rbp)
    de94:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    de97:	c1 e8 18             	shr    $0x18,%eax
    de9a:	89 c0                	mov    %eax,%eax
    de9c:	89 c1                	mov    %eax,%ecx
    de9e:	48 8d 05 ab 41 02 00 	lea    0x241ab(%rip),%rax        # 32050 <Td0>
    dea5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dea8:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    deab:	c1 e9 10             	shr    $0x10,%ecx
    deae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    deb4:	89 c9                	mov    %ecx,%ecx
    deb6:	89 ca                	mov    %ecx,%edx
    deb8:	48 8d 0d 91 45 02 00 	lea    0x24591(%rip),%rcx        # 32450 <Td1>
    debf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dec2:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    dec5:	c1 e9 08             	shr    $0x8,%ecx
    dec8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dece:	89 c9                	mov    %ecx,%ecx
    ded0:	89 ca                	mov    %ecx,%edx
    ded2:	48 8d 0d 77 49 02 00 	lea    0x24977(%rip),%rcx        # 32850 <Td2>
    ded9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dedc:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    dedf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dee5:	89 c9                	mov    %ecx,%ecx
    dee7:	89 ca                	mov    %ecx,%edx
    dee9:	48 8d 0d 60 4d 02 00 	lea    0x24d60(%rip),%rcx        # 32c50 <Td3>
    def0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    def3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    def7:	33 41 78             	xor    0x78(%rcx),%eax
    defa:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    defd:	8b 45 d0             	mov    -0x30(%rbp),%eax
    df00:	c1 e8 18             	shr    $0x18,%eax
    df03:	89 c0                	mov    %eax,%eax
    df05:	89 c1                	mov    %eax,%ecx
    df07:	48 8d 05 42 41 02 00 	lea    0x24142(%rip),%rax        # 32050 <Td0>
    df0e:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    df11:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    df14:	c1 e9 10             	shr    $0x10,%ecx
    df17:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    df1d:	89 c9                	mov    %ecx,%ecx
    df1f:	89 ca                	mov    %ecx,%edx
    df21:	48 8d 0d 28 45 02 00 	lea    0x24528(%rip),%rcx        # 32450 <Td1>
    df28:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    df2b:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    df2e:	c1 e9 08             	shr    $0x8,%ecx
    df31:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    df37:	89 c9                	mov    %ecx,%ecx
    df39:	89 ca                	mov    %ecx,%edx
    df3b:	48 8d 0d 0e 49 02 00 	lea    0x2490e(%rip),%rcx        # 32850 <Td2>
    df42:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    df45:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    df48:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    df4e:	89 c9                	mov    %ecx,%ecx
    df50:	89 ca                	mov    %ecx,%edx
    df52:	48 8d 0d f7 4c 02 00 	lea    0x24cf7(%rip),%rcx        # 32c50 <Td3>
    df59:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    df5c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    df60:	33 41 7c             	xor    0x7c(%rcx),%eax
    df63:	89 45 c0             	mov    %eax,-0x40(%rbp)
    df66:	8b 45 cc             	mov    -0x34(%rbp),%eax
    df69:	c1 e8 18             	shr    $0x18,%eax
    df6c:	89 c0                	mov    %eax,%eax
    df6e:	89 c1                	mov    %eax,%ecx
    df70:	48 8d 05 d9 40 02 00 	lea    0x240d9(%rip),%rax        # 32050 <Td0>
    df77:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    df7a:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    df7d:	c1 e9 10             	shr    $0x10,%ecx
    df80:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    df86:	89 c9                	mov    %ecx,%ecx
    df88:	89 ca                	mov    %ecx,%edx
    df8a:	48 8d 0d bf 44 02 00 	lea    0x244bf(%rip),%rcx        # 32450 <Td1>
    df91:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    df94:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    df97:	c1 e9 08             	shr    $0x8,%ecx
    df9a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dfa0:	89 c9                	mov    %ecx,%ecx
    dfa2:	89 ca                	mov    %ecx,%edx
    dfa4:	48 8d 0d a5 48 02 00 	lea    0x248a5(%rip),%rcx        # 32850 <Td2>
    dfab:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dfae:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    dfb1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dfb7:	89 c9                	mov    %ecx,%ecx
    dfb9:	89 ca                	mov    %ecx,%edx
    dfbb:	48 8d 0d 8e 4c 02 00 	lea    0x24c8e(%rip),%rcx        # 32c50 <Td3>
    dfc2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    dfc5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dfc9:	33 81 80 00 00 00    	xor    0x80(%rcx),%eax
    dfcf:	89 45 dc             	mov    %eax,-0x24(%rbp)
    dfd2:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dfd5:	c1 e8 18             	shr    $0x18,%eax
    dfd8:	89 c0                	mov    %eax,%eax
    dfda:	89 c1                	mov    %eax,%ecx
    dfdc:	48 8d 05 6d 40 02 00 	lea    0x2406d(%rip),%rax        # 32050 <Td0>
    dfe3:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    dfe6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    dfe9:	c1 e9 10             	shr    $0x10,%ecx
    dfec:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    dff2:	89 c9                	mov    %ecx,%ecx
    dff4:	89 ca                	mov    %ecx,%edx
    dff6:	48 8d 0d 53 44 02 00 	lea    0x24453(%rip),%rcx        # 32450 <Td1>
    dffd:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e000:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e003:	c1 e9 08             	shr    $0x8,%ecx
    e006:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e00c:	89 c9                	mov    %ecx,%ecx
    e00e:	89 ca                	mov    %ecx,%edx
    e010:	48 8d 0d 39 48 02 00 	lea    0x24839(%rip),%rcx        # 32850 <Td2>
    e017:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e01a:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e01d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e023:	89 c9                	mov    %ecx,%ecx
    e025:	89 ca                	mov    %ecx,%edx
    e027:	48 8d 0d 22 4c 02 00 	lea    0x24c22(%rip),%rcx        # 32c50 <Td3>
    e02e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e031:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e035:	33 81 84 00 00 00    	xor    0x84(%rcx),%eax
    e03b:	89 45 d8             	mov    %eax,-0x28(%rbp)
    e03e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    e041:	c1 e8 18             	shr    $0x18,%eax
    e044:	89 c0                	mov    %eax,%eax
    e046:	89 c1                	mov    %eax,%ecx
    e048:	48 8d 05 01 40 02 00 	lea    0x24001(%rip),%rax        # 32050 <Td0>
    e04f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e052:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e055:	c1 e9 10             	shr    $0x10,%ecx
    e058:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e05e:	89 c9                	mov    %ecx,%ecx
    e060:	89 ca                	mov    %ecx,%edx
    e062:	48 8d 0d e7 43 02 00 	lea    0x243e7(%rip),%rcx        # 32450 <Td1>
    e069:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e06c:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e06f:	c1 e9 08             	shr    $0x8,%ecx
    e072:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e078:	89 c9                	mov    %ecx,%ecx
    e07a:	89 ca                	mov    %ecx,%edx
    e07c:	48 8d 0d cd 47 02 00 	lea    0x247cd(%rip),%rcx        # 32850 <Td2>
    e083:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e086:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e089:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e08f:	89 c9                	mov    %ecx,%ecx
    e091:	89 ca                	mov    %ecx,%edx
    e093:	48 8d 0d b6 4b 02 00 	lea    0x24bb6(%rip),%rcx        # 32c50 <Td3>
    e09a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e09d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e0a1:	33 81 88 00 00 00    	xor    0x88(%rcx),%eax
    e0a7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e0aa:	8b 45 c0             	mov    -0x40(%rbp),%eax
    e0ad:	c1 e8 18             	shr    $0x18,%eax
    e0b0:	89 c0                	mov    %eax,%eax
    e0b2:	89 c1                	mov    %eax,%ecx
    e0b4:	48 8d 05 95 3f 02 00 	lea    0x23f95(%rip),%rax        # 32050 <Td0>
    e0bb:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e0be:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e0c1:	c1 e9 10             	shr    $0x10,%ecx
    e0c4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e0ca:	89 c9                	mov    %ecx,%ecx
    e0cc:	89 ca                	mov    %ecx,%edx
    e0ce:	48 8d 0d 7b 43 02 00 	lea    0x2437b(%rip),%rcx        # 32450 <Td1>
    e0d5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e0d8:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e0db:	c1 e9 08             	shr    $0x8,%ecx
    e0de:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e0e4:	89 c9                	mov    %ecx,%ecx
    e0e6:	89 ca                	mov    %ecx,%edx
    e0e8:	48 8d 0d 61 47 02 00 	lea    0x24761(%rip),%rcx        # 32850 <Td2>
    e0ef:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e0f2:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e0f5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e0fb:	89 c9                	mov    %ecx,%ecx
    e0fd:	89 ca                	mov    %ecx,%edx
    e0ff:	48 8d 0d 4a 4b 02 00 	lea    0x24b4a(%rip),%rcx        # 32c50 <Td3>
    e106:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e109:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e10d:	33 81 8c 00 00 00    	xor    0x8c(%rcx),%eax
    e113:	89 45 d0             	mov    %eax,-0x30(%rbp)
    e116:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e119:	c1 e8 18             	shr    $0x18,%eax
    e11c:	89 c0                	mov    %eax,%eax
    e11e:	89 c1                	mov    %eax,%ecx
    e120:	48 8d 05 29 3f 02 00 	lea    0x23f29(%rip),%rax        # 32050 <Td0>
    e127:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e12a:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e12d:	c1 e9 10             	shr    $0x10,%ecx
    e130:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e136:	89 c9                	mov    %ecx,%ecx
    e138:	89 ca                	mov    %ecx,%edx
    e13a:	48 8d 0d 0f 43 02 00 	lea    0x2430f(%rip),%rcx        # 32450 <Td1>
    e141:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e144:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e147:	c1 e9 08             	shr    $0x8,%ecx
    e14a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e150:	89 c9                	mov    %ecx,%ecx
    e152:	89 ca                	mov    %ecx,%edx
    e154:	48 8d 0d f5 46 02 00 	lea    0x246f5(%rip),%rcx        # 32850 <Td2>
    e15b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e15e:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e161:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e167:	89 c9                	mov    %ecx,%ecx
    e169:	89 ca                	mov    %ecx,%edx
    e16b:	48 8d 0d de 4a 02 00 	lea    0x24ade(%rip),%rcx        # 32c50 <Td3>
    e172:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e175:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e179:	33 81 90 00 00 00    	xor    0x90(%rcx),%eax
    e17f:	89 45 cc             	mov    %eax,-0x34(%rbp)
    e182:	8b 45 d8             	mov    -0x28(%rbp),%eax
    e185:	c1 e8 18             	shr    $0x18,%eax
    e188:	89 c0                	mov    %eax,%eax
    e18a:	89 c1                	mov    %eax,%ecx
    e18c:	48 8d 05 bd 3e 02 00 	lea    0x23ebd(%rip),%rax        # 32050 <Td0>
    e193:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e196:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e199:	c1 e9 10             	shr    $0x10,%ecx
    e19c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e1a2:	89 c9                	mov    %ecx,%ecx
    e1a4:	89 ca                	mov    %ecx,%edx
    e1a6:	48 8d 0d a3 42 02 00 	lea    0x242a3(%rip),%rcx        # 32450 <Td1>
    e1ad:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e1b0:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e1b3:	c1 e9 08             	shr    $0x8,%ecx
    e1b6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e1bc:	89 c9                	mov    %ecx,%ecx
    e1be:	89 ca                	mov    %ecx,%edx
    e1c0:	48 8d 0d 89 46 02 00 	lea    0x24689(%rip),%rcx        # 32850 <Td2>
    e1c7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e1ca:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e1cd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e1d3:	89 c9                	mov    %ecx,%ecx
    e1d5:	89 ca                	mov    %ecx,%edx
    e1d7:	48 8d 0d 72 4a 02 00 	lea    0x24a72(%rip),%rcx        # 32c50 <Td3>
    e1de:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e1e1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e1e5:	33 81 94 00 00 00    	xor    0x94(%rcx),%eax
    e1eb:	89 45 c8             	mov    %eax,-0x38(%rbp)
    e1ee:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e1f1:	c1 e8 18             	shr    $0x18,%eax
    e1f4:	89 c0                	mov    %eax,%eax
    e1f6:	89 c1                	mov    %eax,%ecx
    e1f8:	48 8d 05 51 3e 02 00 	lea    0x23e51(%rip),%rax        # 32050 <Td0>
    e1ff:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e202:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e205:	c1 e9 10             	shr    $0x10,%ecx
    e208:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e20e:	89 c9                	mov    %ecx,%ecx
    e210:	89 ca                	mov    %ecx,%edx
    e212:	48 8d 0d 37 42 02 00 	lea    0x24237(%rip),%rcx        # 32450 <Td1>
    e219:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e21c:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e21f:	c1 e9 08             	shr    $0x8,%ecx
    e222:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e228:	89 c9                	mov    %ecx,%ecx
    e22a:	89 ca                	mov    %ecx,%edx
    e22c:	48 8d 0d 1d 46 02 00 	lea    0x2461d(%rip),%rcx        # 32850 <Td2>
    e233:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e236:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e239:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e23f:	89 c9                	mov    %ecx,%ecx
    e241:	89 ca                	mov    %ecx,%edx
    e243:	48 8d 0d 06 4a 02 00 	lea    0x24a06(%rip),%rcx        # 32c50 <Td3>
    e24a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e24d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e251:	33 81 98 00 00 00    	xor    0x98(%rcx),%eax
    e257:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    e25a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    e25d:	c1 e8 18             	shr    $0x18,%eax
    e260:	89 c0                	mov    %eax,%eax
    e262:	89 c1                	mov    %eax,%ecx
    e264:	48 8d 05 e5 3d 02 00 	lea    0x23de5(%rip),%rax        # 32050 <Td0>
    e26b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e26e:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e271:	c1 e9 10             	shr    $0x10,%ecx
    e274:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e27a:	89 c9                	mov    %ecx,%ecx
    e27c:	89 ca                	mov    %ecx,%edx
    e27e:	48 8d 0d cb 41 02 00 	lea    0x241cb(%rip),%rcx        # 32450 <Td1>
    e285:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e288:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e28b:	c1 e9 08             	shr    $0x8,%ecx
    e28e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e294:	89 c9                	mov    %ecx,%ecx
    e296:	89 ca                	mov    %ecx,%edx
    e298:	48 8d 0d b1 45 02 00 	lea    0x245b1(%rip),%rcx        # 32850 <Td2>
    e29f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e2a2:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e2a5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e2ab:	89 c9                	mov    %ecx,%ecx
    e2ad:	89 ca                	mov    %ecx,%edx
    e2af:	48 8d 0d 9a 49 02 00 	lea    0x2499a(%rip),%rcx        # 32c50 <Td3>
    e2b6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e2b9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e2bd:	33 81 9c 00 00 00    	xor    0x9c(%rcx),%eax
    e2c3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    e2c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2ca:	83 b8 f0 00 00 00 0a 	cmpl   $0xa,0xf0(%rax)
    e2d1:	0f 8e d6 06 00 00    	jle    e9ad <AES_decrypt+0x16bd>
    e2d7:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e2da:	c1 e8 18             	shr    $0x18,%eax
    e2dd:	89 c0                	mov    %eax,%eax
    e2df:	89 c1                	mov    %eax,%ecx
    e2e1:	48 8d 05 68 3d 02 00 	lea    0x23d68(%rip),%rax        # 32050 <Td0>
    e2e8:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e2eb:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e2ee:	c1 e9 10             	shr    $0x10,%ecx
    e2f1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e2f7:	89 c9                	mov    %ecx,%ecx
    e2f9:	89 ca                	mov    %ecx,%edx
    e2fb:	48 8d 0d 4e 41 02 00 	lea    0x2414e(%rip),%rcx        # 32450 <Td1>
    e302:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e305:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e308:	c1 e9 08             	shr    $0x8,%ecx
    e30b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e311:	89 c9                	mov    %ecx,%ecx
    e313:	89 ca                	mov    %ecx,%edx
    e315:	48 8d 0d 34 45 02 00 	lea    0x24534(%rip),%rcx        # 32850 <Td2>
    e31c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e31f:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e322:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e328:	89 c9                	mov    %ecx,%ecx
    e32a:	89 ca                	mov    %ecx,%edx
    e32c:	48 8d 0d 1d 49 02 00 	lea    0x2491d(%rip),%rcx        # 32c50 <Td3>
    e333:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e336:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e33a:	33 81 a0 00 00 00    	xor    0xa0(%rcx),%eax
    e340:	89 45 dc             	mov    %eax,-0x24(%rbp)
    e343:	8b 45 c8             	mov    -0x38(%rbp),%eax
    e346:	c1 e8 18             	shr    $0x18,%eax
    e349:	89 c0                	mov    %eax,%eax
    e34b:	89 c1                	mov    %eax,%ecx
    e34d:	48 8d 05 fc 3c 02 00 	lea    0x23cfc(%rip),%rax        # 32050 <Td0>
    e354:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e357:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e35a:	c1 e9 10             	shr    $0x10,%ecx
    e35d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e363:	89 c9                	mov    %ecx,%ecx
    e365:	89 ca                	mov    %ecx,%edx
    e367:	48 8d 0d e2 40 02 00 	lea    0x240e2(%rip),%rcx        # 32450 <Td1>
    e36e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e371:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e374:	c1 e9 08             	shr    $0x8,%ecx
    e377:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e37d:	89 c9                	mov    %ecx,%ecx
    e37f:	89 ca                	mov    %ecx,%edx
    e381:	48 8d 0d c8 44 02 00 	lea    0x244c8(%rip),%rcx        # 32850 <Td2>
    e388:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e38b:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e38e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e394:	89 c9                	mov    %ecx,%ecx
    e396:	89 ca                	mov    %ecx,%edx
    e398:	48 8d 0d b1 48 02 00 	lea    0x248b1(%rip),%rcx        # 32c50 <Td3>
    e39f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e3a2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e3a6:	33 81 a4 00 00 00    	xor    0xa4(%rcx),%eax
    e3ac:	89 45 d8             	mov    %eax,-0x28(%rbp)
    e3af:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    e3b2:	c1 e8 18             	shr    $0x18,%eax
    e3b5:	89 c0                	mov    %eax,%eax
    e3b7:	89 c1                	mov    %eax,%ecx
    e3b9:	48 8d 05 90 3c 02 00 	lea    0x23c90(%rip),%rax        # 32050 <Td0>
    e3c0:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e3c3:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e3c6:	c1 e9 10             	shr    $0x10,%ecx
    e3c9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e3cf:	89 c9                	mov    %ecx,%ecx
    e3d1:	89 ca                	mov    %ecx,%edx
    e3d3:	48 8d 0d 76 40 02 00 	lea    0x24076(%rip),%rcx        # 32450 <Td1>
    e3da:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e3dd:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e3e0:	c1 e9 08             	shr    $0x8,%ecx
    e3e3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e3e9:	89 c9                	mov    %ecx,%ecx
    e3eb:	89 ca                	mov    %ecx,%edx
    e3ed:	48 8d 0d 5c 44 02 00 	lea    0x2445c(%rip),%rcx        # 32850 <Td2>
    e3f4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e3f7:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e3fa:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e400:	89 c9                	mov    %ecx,%ecx
    e402:	89 ca                	mov    %ecx,%edx
    e404:	48 8d 0d 45 48 02 00 	lea    0x24845(%rip),%rcx        # 32c50 <Td3>
    e40b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e40e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e412:	33 81 a8 00 00 00    	xor    0xa8(%rcx),%eax
    e418:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e41b:	8b 45 c0             	mov    -0x40(%rbp),%eax
    e41e:	c1 e8 18             	shr    $0x18,%eax
    e421:	89 c0                	mov    %eax,%eax
    e423:	89 c1                	mov    %eax,%ecx
    e425:	48 8d 05 24 3c 02 00 	lea    0x23c24(%rip),%rax        # 32050 <Td0>
    e42c:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e42f:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e432:	c1 e9 10             	shr    $0x10,%ecx
    e435:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e43b:	89 c9                	mov    %ecx,%ecx
    e43d:	89 ca                	mov    %ecx,%edx
    e43f:	48 8d 0d 0a 40 02 00 	lea    0x2400a(%rip),%rcx        # 32450 <Td1>
    e446:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e449:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e44c:	c1 e9 08             	shr    $0x8,%ecx
    e44f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e455:	89 c9                	mov    %ecx,%ecx
    e457:	89 ca                	mov    %ecx,%edx
    e459:	48 8d 0d f0 43 02 00 	lea    0x243f0(%rip),%rcx        # 32850 <Td2>
    e460:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e463:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e466:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e46c:	89 c9                	mov    %ecx,%ecx
    e46e:	89 ca                	mov    %ecx,%edx
    e470:	48 8d 0d d9 47 02 00 	lea    0x247d9(%rip),%rcx        # 32c50 <Td3>
    e477:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e47a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e47e:	33 81 ac 00 00 00    	xor    0xac(%rcx),%eax
    e484:	89 45 d0             	mov    %eax,-0x30(%rbp)
    e487:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e48a:	c1 e8 18             	shr    $0x18,%eax
    e48d:	89 c0                	mov    %eax,%eax
    e48f:	89 c1                	mov    %eax,%ecx
    e491:	48 8d 05 b8 3b 02 00 	lea    0x23bb8(%rip),%rax        # 32050 <Td0>
    e498:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e49b:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e49e:	c1 e9 10             	shr    $0x10,%ecx
    e4a1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e4a7:	89 c9                	mov    %ecx,%ecx
    e4a9:	89 ca                	mov    %ecx,%edx
    e4ab:	48 8d 0d 9e 3f 02 00 	lea    0x23f9e(%rip),%rcx        # 32450 <Td1>
    e4b2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e4b5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e4b8:	c1 e9 08             	shr    $0x8,%ecx
    e4bb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e4c1:	89 c9                	mov    %ecx,%ecx
    e4c3:	89 ca                	mov    %ecx,%edx
    e4c5:	48 8d 0d 84 43 02 00 	lea    0x24384(%rip),%rcx        # 32850 <Td2>
    e4cc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e4cf:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e4d2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e4d8:	89 c9                	mov    %ecx,%ecx
    e4da:	89 ca                	mov    %ecx,%edx
    e4dc:	48 8d 0d 6d 47 02 00 	lea    0x2476d(%rip),%rcx        # 32c50 <Td3>
    e4e3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e4e6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e4ea:	33 81 b0 00 00 00    	xor    0xb0(%rcx),%eax
    e4f0:	89 45 cc             	mov    %eax,-0x34(%rbp)
    e4f3:	8b 45 d8             	mov    -0x28(%rbp),%eax
    e4f6:	c1 e8 18             	shr    $0x18,%eax
    e4f9:	89 c0                	mov    %eax,%eax
    e4fb:	89 c1                	mov    %eax,%ecx
    e4fd:	48 8d 05 4c 3b 02 00 	lea    0x23b4c(%rip),%rax        # 32050 <Td0>
    e504:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e507:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e50a:	c1 e9 10             	shr    $0x10,%ecx
    e50d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e513:	89 c9                	mov    %ecx,%ecx
    e515:	89 ca                	mov    %ecx,%edx
    e517:	48 8d 0d 32 3f 02 00 	lea    0x23f32(%rip),%rcx        # 32450 <Td1>
    e51e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e521:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e524:	c1 e9 08             	shr    $0x8,%ecx
    e527:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e52d:	89 c9                	mov    %ecx,%ecx
    e52f:	89 ca                	mov    %ecx,%edx
    e531:	48 8d 0d 18 43 02 00 	lea    0x24318(%rip),%rcx        # 32850 <Td2>
    e538:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e53b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e53e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e544:	89 c9                	mov    %ecx,%ecx
    e546:	89 ca                	mov    %ecx,%edx
    e548:	48 8d 0d 01 47 02 00 	lea    0x24701(%rip),%rcx        # 32c50 <Td3>
    e54f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e552:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e556:	33 81 b4 00 00 00    	xor    0xb4(%rcx),%eax
    e55c:	89 45 c8             	mov    %eax,-0x38(%rbp)
    e55f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e562:	c1 e8 18             	shr    $0x18,%eax
    e565:	89 c0                	mov    %eax,%eax
    e567:	89 c1                	mov    %eax,%ecx
    e569:	48 8d 05 e0 3a 02 00 	lea    0x23ae0(%rip),%rax        # 32050 <Td0>
    e570:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e573:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e576:	c1 e9 10             	shr    $0x10,%ecx
    e579:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e57f:	89 c9                	mov    %ecx,%ecx
    e581:	89 ca                	mov    %ecx,%edx
    e583:	48 8d 0d c6 3e 02 00 	lea    0x23ec6(%rip),%rcx        # 32450 <Td1>
    e58a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e58d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e590:	c1 e9 08             	shr    $0x8,%ecx
    e593:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e599:	89 c9                	mov    %ecx,%ecx
    e59b:	89 ca                	mov    %ecx,%edx
    e59d:	48 8d 0d ac 42 02 00 	lea    0x242ac(%rip),%rcx        # 32850 <Td2>
    e5a4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e5a7:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e5aa:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e5b0:	89 c9                	mov    %ecx,%ecx
    e5b2:	89 ca                	mov    %ecx,%edx
    e5b4:	48 8d 0d 95 46 02 00 	lea    0x24695(%rip),%rcx        # 32c50 <Td3>
    e5bb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e5be:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e5c2:	33 81 b8 00 00 00    	xor    0xb8(%rcx),%eax
    e5c8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    e5cb:	8b 45 d0             	mov    -0x30(%rbp),%eax
    e5ce:	c1 e8 18             	shr    $0x18,%eax
    e5d1:	89 c0                	mov    %eax,%eax
    e5d3:	89 c1                	mov    %eax,%ecx
    e5d5:	48 8d 05 74 3a 02 00 	lea    0x23a74(%rip),%rax        # 32050 <Td0>
    e5dc:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e5df:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e5e2:	c1 e9 10             	shr    $0x10,%ecx
    e5e5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e5eb:	89 c9                	mov    %ecx,%ecx
    e5ed:	89 ca                	mov    %ecx,%edx
    e5ef:	48 8d 0d 5a 3e 02 00 	lea    0x23e5a(%rip),%rcx        # 32450 <Td1>
    e5f6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e5f9:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e5fc:	c1 e9 08             	shr    $0x8,%ecx
    e5ff:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e605:	89 c9                	mov    %ecx,%ecx
    e607:	89 ca                	mov    %ecx,%edx
    e609:	48 8d 0d 40 42 02 00 	lea    0x24240(%rip),%rcx        # 32850 <Td2>
    e610:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e613:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e616:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e61c:	89 c9                	mov    %ecx,%ecx
    e61e:	89 ca                	mov    %ecx,%edx
    e620:	48 8d 0d 29 46 02 00 	lea    0x24629(%rip),%rcx        # 32c50 <Td3>
    e627:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e62a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e62e:	33 81 bc 00 00 00    	xor    0xbc(%rcx),%eax
    e634:	89 45 c0             	mov    %eax,-0x40(%rbp)
    e637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e63b:	83 b8 f0 00 00 00 0c 	cmpl   $0xc,0xf0(%rax)
    e642:	0f 8e 60 03 00 00    	jle    e9a8 <AES_decrypt+0x16b8>
    e648:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e64b:	c1 e8 18             	shr    $0x18,%eax
    e64e:	89 c0                	mov    %eax,%eax
    e650:	89 c1                	mov    %eax,%ecx
    e652:	48 8d 05 f7 39 02 00 	lea    0x239f7(%rip),%rax        # 32050 <Td0>
    e659:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e65c:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e65f:	c1 e9 10             	shr    $0x10,%ecx
    e662:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e668:	89 c9                	mov    %ecx,%ecx
    e66a:	89 ca                	mov    %ecx,%edx
    e66c:	48 8d 0d dd 3d 02 00 	lea    0x23ddd(%rip),%rcx        # 32450 <Td1>
    e673:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e676:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e679:	c1 e9 08             	shr    $0x8,%ecx
    e67c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e682:	89 c9                	mov    %ecx,%ecx
    e684:	89 ca                	mov    %ecx,%edx
    e686:	48 8d 0d c3 41 02 00 	lea    0x241c3(%rip),%rcx        # 32850 <Td2>
    e68d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e690:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e693:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e699:	89 c9                	mov    %ecx,%ecx
    e69b:	89 ca                	mov    %ecx,%edx
    e69d:	48 8d 0d ac 45 02 00 	lea    0x245ac(%rip),%rcx        # 32c50 <Td3>
    e6a4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e6a7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e6ab:	33 81 c0 00 00 00    	xor    0xc0(%rcx),%eax
    e6b1:	89 45 dc             	mov    %eax,-0x24(%rbp)
    e6b4:	8b 45 c8             	mov    -0x38(%rbp),%eax
    e6b7:	c1 e8 18             	shr    $0x18,%eax
    e6ba:	89 c0                	mov    %eax,%eax
    e6bc:	89 c1                	mov    %eax,%ecx
    e6be:	48 8d 05 8b 39 02 00 	lea    0x2398b(%rip),%rax        # 32050 <Td0>
    e6c5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e6c8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e6cb:	c1 e9 10             	shr    $0x10,%ecx
    e6ce:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e6d4:	89 c9                	mov    %ecx,%ecx
    e6d6:	89 ca                	mov    %ecx,%edx
    e6d8:	48 8d 0d 71 3d 02 00 	lea    0x23d71(%rip),%rcx        # 32450 <Td1>
    e6df:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e6e2:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e6e5:	c1 e9 08             	shr    $0x8,%ecx
    e6e8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e6ee:	89 c9                	mov    %ecx,%ecx
    e6f0:	89 ca                	mov    %ecx,%edx
    e6f2:	48 8d 0d 57 41 02 00 	lea    0x24157(%rip),%rcx        # 32850 <Td2>
    e6f9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e6fc:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e6ff:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e705:	89 c9                	mov    %ecx,%ecx
    e707:	89 ca                	mov    %ecx,%edx
    e709:	48 8d 0d 40 45 02 00 	lea    0x24540(%rip),%rcx        # 32c50 <Td3>
    e710:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e713:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e717:	33 81 c4 00 00 00    	xor    0xc4(%rcx),%eax
    e71d:	89 45 d8             	mov    %eax,-0x28(%rbp)
    e720:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    e723:	c1 e8 18             	shr    $0x18,%eax
    e726:	89 c0                	mov    %eax,%eax
    e728:	89 c1                	mov    %eax,%ecx
    e72a:	48 8d 05 1f 39 02 00 	lea    0x2391f(%rip),%rax        # 32050 <Td0>
    e731:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e734:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e737:	c1 e9 10             	shr    $0x10,%ecx
    e73a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e740:	89 c9                	mov    %ecx,%ecx
    e742:	89 ca                	mov    %ecx,%edx
    e744:	48 8d 0d 05 3d 02 00 	lea    0x23d05(%rip),%rcx        # 32450 <Td1>
    e74b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e74e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e751:	c1 e9 08             	shr    $0x8,%ecx
    e754:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e75a:	89 c9                	mov    %ecx,%ecx
    e75c:	89 ca                	mov    %ecx,%edx
    e75e:	48 8d 0d eb 40 02 00 	lea    0x240eb(%rip),%rcx        # 32850 <Td2>
    e765:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e768:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e76b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e771:	89 c9                	mov    %ecx,%ecx
    e773:	89 ca                	mov    %ecx,%edx
    e775:	48 8d 0d d4 44 02 00 	lea    0x244d4(%rip),%rcx        # 32c50 <Td3>
    e77c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e77f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e783:	33 81 c8 00 00 00    	xor    0xc8(%rcx),%eax
    e789:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e78c:	8b 45 c0             	mov    -0x40(%rbp),%eax
    e78f:	c1 e8 18             	shr    $0x18,%eax
    e792:	89 c0                	mov    %eax,%eax
    e794:	89 c1                	mov    %eax,%ecx
    e796:	48 8d 05 b3 38 02 00 	lea    0x238b3(%rip),%rax        # 32050 <Td0>
    e79d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e7a0:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    e7a3:	c1 e9 10             	shr    $0x10,%ecx
    e7a6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e7ac:	89 c9                	mov    %ecx,%ecx
    e7ae:	89 ca                	mov    %ecx,%edx
    e7b0:	48 8d 0d 99 3c 02 00 	lea    0x23c99(%rip),%rcx        # 32450 <Td1>
    e7b7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e7ba:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    e7bd:	c1 e9 08             	shr    $0x8,%ecx
    e7c0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e7c6:	89 c9                	mov    %ecx,%ecx
    e7c8:	89 ca                	mov    %ecx,%edx
    e7ca:	48 8d 0d 7f 40 02 00 	lea    0x2407f(%rip),%rcx        # 32850 <Td2>
    e7d1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e7d4:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    e7d7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e7dd:	89 c9                	mov    %ecx,%ecx
    e7df:	89 ca                	mov    %ecx,%edx
    e7e1:	48 8d 0d 68 44 02 00 	lea    0x24468(%rip),%rcx        # 32c50 <Td3>
    e7e8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e7eb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e7ef:	33 81 cc 00 00 00    	xor    0xcc(%rcx),%eax
    e7f5:	89 45 d0             	mov    %eax,-0x30(%rbp)
    e7f8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e7fb:	c1 e8 18             	shr    $0x18,%eax
    e7fe:	89 c0                	mov    %eax,%eax
    e800:	89 c1                	mov    %eax,%ecx
    e802:	48 8d 05 47 38 02 00 	lea    0x23847(%rip),%rax        # 32050 <Td0>
    e809:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e80c:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e80f:	c1 e9 10             	shr    $0x10,%ecx
    e812:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e818:	89 c9                	mov    %ecx,%ecx
    e81a:	89 ca                	mov    %ecx,%edx
    e81c:	48 8d 0d 2d 3c 02 00 	lea    0x23c2d(%rip),%rcx        # 32450 <Td1>
    e823:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e826:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e829:	c1 e9 08             	shr    $0x8,%ecx
    e82c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e832:	89 c9                	mov    %ecx,%ecx
    e834:	89 ca                	mov    %ecx,%edx
    e836:	48 8d 0d 13 40 02 00 	lea    0x24013(%rip),%rcx        # 32850 <Td2>
    e83d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e840:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e843:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e849:	89 c9                	mov    %ecx,%ecx
    e84b:	89 ca                	mov    %ecx,%edx
    e84d:	48 8d 0d fc 43 02 00 	lea    0x243fc(%rip),%rcx        # 32c50 <Td3>
    e854:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e857:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e85b:	33 81 d0 00 00 00    	xor    0xd0(%rcx),%eax
    e861:	89 45 cc             	mov    %eax,-0x34(%rbp)
    e864:	8b 45 d8             	mov    -0x28(%rbp),%eax
    e867:	c1 e8 18             	shr    $0x18,%eax
    e86a:	89 c0                	mov    %eax,%eax
    e86c:	89 c1                	mov    %eax,%ecx
    e86e:	48 8d 05 db 37 02 00 	lea    0x237db(%rip),%rax        # 32050 <Td0>
    e875:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e878:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e87b:	c1 e9 10             	shr    $0x10,%ecx
    e87e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e884:	89 c9                	mov    %ecx,%ecx
    e886:	89 ca                	mov    %ecx,%edx
    e888:	48 8d 0d c1 3b 02 00 	lea    0x23bc1(%rip),%rcx        # 32450 <Td1>
    e88f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e892:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e895:	c1 e9 08             	shr    $0x8,%ecx
    e898:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e89e:	89 c9                	mov    %ecx,%ecx
    e8a0:	89 ca                	mov    %ecx,%edx
    e8a2:	48 8d 0d a7 3f 02 00 	lea    0x23fa7(%rip),%rcx        # 32850 <Td2>
    e8a9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e8ac:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e8af:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e8b5:	89 c9                	mov    %ecx,%ecx
    e8b7:	89 ca                	mov    %ecx,%edx
    e8b9:	48 8d 0d 90 43 02 00 	lea    0x24390(%rip),%rcx        # 32c50 <Td3>
    e8c0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e8c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e8c7:	33 81 d4 00 00 00    	xor    0xd4(%rcx),%eax
    e8cd:	89 45 c8             	mov    %eax,-0x38(%rbp)
    e8d0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e8d3:	c1 e8 18             	shr    $0x18,%eax
    e8d6:	89 c0                	mov    %eax,%eax
    e8d8:	89 c1                	mov    %eax,%ecx
    e8da:	48 8d 05 6f 37 02 00 	lea    0x2376f(%rip),%rax        # 32050 <Td0>
    e8e1:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e8e4:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e8e7:	c1 e9 10             	shr    $0x10,%ecx
    e8ea:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e8f0:	89 c9                	mov    %ecx,%ecx
    e8f2:	89 ca                	mov    %ecx,%edx
    e8f4:	48 8d 0d 55 3b 02 00 	lea    0x23b55(%rip),%rcx        # 32450 <Td1>
    e8fb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e8fe:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e901:	c1 e9 08             	shr    $0x8,%ecx
    e904:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e90a:	89 c9                	mov    %ecx,%ecx
    e90c:	89 ca                	mov    %ecx,%edx
    e90e:	48 8d 0d 3b 3f 02 00 	lea    0x23f3b(%rip),%rcx        # 32850 <Td2>
    e915:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e918:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    e91b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e921:	89 c9                	mov    %ecx,%ecx
    e923:	89 ca                	mov    %ecx,%edx
    e925:	48 8d 0d 24 43 02 00 	lea    0x24324(%rip),%rcx        # 32c50 <Td3>
    e92c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e92f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e933:	33 81 d8 00 00 00    	xor    0xd8(%rcx),%eax
    e939:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    e93c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    e93f:	c1 e8 18             	shr    $0x18,%eax
    e942:	89 c0                	mov    %eax,%eax
    e944:	89 c1                	mov    %eax,%ecx
    e946:	48 8d 05 03 37 02 00 	lea    0x23703(%rip),%rax        # 32050 <Td0>
    e94d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    e950:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e953:	c1 e9 10             	shr    $0x10,%ecx
    e956:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e95c:	89 c9                	mov    %ecx,%ecx
    e95e:	89 ca                	mov    %ecx,%edx
    e960:	48 8d 0d e9 3a 02 00 	lea    0x23ae9(%rip),%rcx        # 32450 <Td1>
    e967:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e96a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    e96d:	c1 e9 08             	shr    $0x8,%ecx
    e970:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e976:	89 c9                	mov    %ecx,%ecx
    e978:	89 ca                	mov    %ecx,%edx
    e97a:	48 8d 0d cf 3e 02 00 	lea    0x23ecf(%rip),%rcx        # 32850 <Td2>
    e981:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e984:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    e987:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e98d:	89 c9                	mov    %ecx,%ecx
    e98f:	89 ca                	mov    %ecx,%edx
    e991:	48 8d 0d b8 42 02 00 	lea    0x242b8(%rip),%rcx        # 32c50 <Td3>
    e998:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    e99b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e99f:	33 81 dc 00 00 00    	xor    0xdc(%rcx),%eax
    e9a5:	89 45 c0             	mov    %eax,-0x40(%rbp)
    e9a8:	e9 00 00 00 00       	jmp    e9ad <AES_decrypt+0x16bd>
    e9ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9b1:	8b 88 f0 00 00 00    	mov    0xf0(%rax),%ecx
    e9b7:	c1 e1 02             	shl    $0x2,%ecx
    e9ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e9be:	48 63 c9             	movslq %ecx,%rcx
    e9c1:	48 c1 e1 02          	shl    $0x2,%rcx
    e9c5:	48 01 c8             	add    %rcx,%rax
    e9c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e9cc:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e9cf:	c1 e8 18             	shr    $0x18,%eax
    e9d2:	89 c0                	mov    %eax,%eax
    e9d4:	89 c1                	mov    %eax,%ecx
    e9d6:	48 8d 05 73 46 02 00 	lea    0x24673(%rip),%rax        # 33050 <Td4>
    e9dd:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    e9e1:	c1 e0 18             	shl    $0x18,%eax
    e9e4:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    e9e7:	c1 e9 10             	shr    $0x10,%ecx
    e9ea:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    e9f0:	89 c9                	mov    %ecx,%ecx
    e9f2:	89 ca                	mov    %ecx,%edx
    e9f4:	48 8d 0d 55 46 02 00 	lea    0x24655(%rip),%rcx        # 33050 <Td4>
    e9fb:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    e9ff:	c1 e1 10             	shl    $0x10,%ecx
    ea02:	31 c8                	xor    %ecx,%eax
    ea04:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    ea07:	c1 e9 08             	shr    $0x8,%ecx
    ea0a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ea10:	89 c9                	mov    %ecx,%ecx
    ea12:	89 ca                	mov    %ecx,%edx
    ea14:	48 8d 0d 35 46 02 00 	lea    0x24635(%rip),%rcx        # 33050 <Td4>
    ea1b:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ea1f:	c1 e1 08             	shl    $0x8,%ecx
    ea22:	31 c8                	xor    %ecx,%eax
    ea24:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    ea27:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ea2d:	89 c9                	mov    %ecx,%ecx
    ea2f:	89 ca                	mov    %ecx,%edx
    ea31:	48 8d 0d 18 46 02 00 	lea    0x24618(%rip),%rcx        # 33050 <Td4>
    ea38:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ea3c:	31 c8                	xor    %ecx,%eax
    ea3e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ea42:	33 01                	xor    (%rcx),%eax
    ea44:	89 45 dc             	mov    %eax,-0x24(%rbp)
    ea47:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ea4a:	c1 e8 18             	shr    $0x18,%eax
    ea4d:	88 c1                	mov    %al,%cl
    ea4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea53:	88 08                	mov    %cl,(%rax)
    ea55:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ea58:	c1 e8 10             	shr    $0x10,%eax
    ea5b:	88 c1                	mov    %al,%cl
    ea5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea61:	88 48 01             	mov    %cl,0x1(%rax)
    ea64:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ea67:	c1 e8 08             	shr    $0x8,%eax
    ea6a:	88 c1                	mov    %al,%cl
    ea6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea70:	88 48 02             	mov    %cl,0x2(%rax)
    ea73:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ea76:	88 c1                	mov    %al,%cl
    ea78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea7c:	88 48 03             	mov    %cl,0x3(%rax)
    ea7f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    ea82:	c1 e8 18             	shr    $0x18,%eax
    ea85:	89 c0                	mov    %eax,%eax
    ea87:	89 c1                	mov    %eax,%ecx
    ea89:	48 8d 05 c0 45 02 00 	lea    0x245c0(%rip),%rax        # 33050 <Td4>
    ea90:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    ea94:	c1 e0 18             	shl    $0x18,%eax
    ea97:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    ea9a:	c1 e9 10             	shr    $0x10,%ecx
    ea9d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eaa3:	89 c9                	mov    %ecx,%ecx
    eaa5:	89 ca                	mov    %ecx,%edx
    eaa7:	48 8d 0d a2 45 02 00 	lea    0x245a2(%rip),%rcx        # 33050 <Td4>
    eaae:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    eab2:	c1 e1 10             	shl    $0x10,%ecx
    eab5:	31 c8                	xor    %ecx,%eax
    eab7:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    eaba:	c1 e9 08             	shr    $0x8,%ecx
    eabd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eac3:	89 c9                	mov    %ecx,%ecx
    eac5:	89 ca                	mov    %ecx,%edx
    eac7:	48 8d 0d 82 45 02 00 	lea    0x24582(%rip),%rcx        # 33050 <Td4>
    eace:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ead2:	c1 e1 08             	shl    $0x8,%ecx
    ead5:	31 c8                	xor    %ecx,%eax
    ead7:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    eada:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eae0:	89 c9                	mov    %ecx,%ecx
    eae2:	89 ca                	mov    %ecx,%edx
    eae4:	48 8d 0d 65 45 02 00 	lea    0x24565(%rip),%rcx        # 33050 <Td4>
    eaeb:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    eaef:	31 c8                	xor    %ecx,%eax
    eaf1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    eaf5:	33 41 04             	xor    0x4(%rcx),%eax
    eaf8:	89 45 d8             	mov    %eax,-0x28(%rbp)
    eafb:	8b 45 d8             	mov    -0x28(%rbp),%eax
    eafe:	c1 e8 18             	shr    $0x18,%eax
    eb01:	88 c1                	mov    %al,%cl
    eb03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb07:	88 48 04             	mov    %cl,0x4(%rax)
    eb0a:	8b 45 d8             	mov    -0x28(%rbp),%eax
    eb0d:	c1 e8 10             	shr    $0x10,%eax
    eb10:	88 c1                	mov    %al,%cl
    eb12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb16:	88 48 05             	mov    %cl,0x5(%rax)
    eb19:	8b 45 d8             	mov    -0x28(%rbp),%eax
    eb1c:	c1 e8 08             	shr    $0x8,%eax
    eb1f:	88 c1                	mov    %al,%cl
    eb21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb25:	88 48 06             	mov    %cl,0x6(%rax)
    eb28:	8b 45 d8             	mov    -0x28(%rbp),%eax
    eb2b:	88 c1                	mov    %al,%cl
    eb2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb31:	88 48 07             	mov    %cl,0x7(%rax)
    eb34:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    eb37:	c1 e8 18             	shr    $0x18,%eax
    eb3a:	89 c0                	mov    %eax,%eax
    eb3c:	89 c1                	mov    %eax,%ecx
    eb3e:	48 8d 05 0b 45 02 00 	lea    0x2450b(%rip),%rax        # 33050 <Td4>
    eb45:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    eb49:	c1 e0 18             	shl    $0x18,%eax
    eb4c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    eb4f:	c1 e9 10             	shr    $0x10,%ecx
    eb52:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eb58:	89 c9                	mov    %ecx,%ecx
    eb5a:	89 ca                	mov    %ecx,%edx
    eb5c:	48 8d 0d ed 44 02 00 	lea    0x244ed(%rip),%rcx        # 33050 <Td4>
    eb63:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    eb67:	c1 e1 10             	shl    $0x10,%ecx
    eb6a:	31 c8                	xor    %ecx,%eax
    eb6c:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    eb6f:	c1 e9 08             	shr    $0x8,%ecx
    eb72:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eb78:	89 c9                	mov    %ecx,%ecx
    eb7a:	89 ca                	mov    %ecx,%edx
    eb7c:	48 8d 0d cd 44 02 00 	lea    0x244cd(%rip),%rcx        # 33050 <Td4>
    eb83:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    eb87:	c1 e1 08             	shl    $0x8,%ecx
    eb8a:	31 c8                	xor    %ecx,%eax
    eb8c:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    eb8f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    eb95:	89 c9                	mov    %ecx,%ecx
    eb97:	89 ca                	mov    %ecx,%edx
    eb99:	48 8d 0d b0 44 02 00 	lea    0x244b0(%rip),%rcx        # 33050 <Td4>
    eba0:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    eba4:	31 c8                	xor    %ecx,%eax
    eba6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ebaa:	33 41 08             	xor    0x8(%rcx),%eax
    ebad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ebb0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ebb3:	c1 e8 18             	shr    $0x18,%eax
    ebb6:	88 c1                	mov    %al,%cl
    ebb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebbc:	88 48 08             	mov    %cl,0x8(%rax)
    ebbf:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ebc2:	c1 e8 10             	shr    $0x10,%eax
    ebc5:	88 c1                	mov    %al,%cl
    ebc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebcb:	88 48 09             	mov    %cl,0x9(%rax)
    ebce:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ebd1:	c1 e8 08             	shr    $0x8,%eax
    ebd4:	88 c1                	mov    %al,%cl
    ebd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebda:	88 48 0a             	mov    %cl,0xa(%rax)
    ebdd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ebe0:	88 c1                	mov    %al,%cl
    ebe2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebe6:	88 48 0b             	mov    %cl,0xb(%rax)
    ebe9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    ebec:	c1 e8 18             	shr    $0x18,%eax
    ebef:	89 c0                	mov    %eax,%eax
    ebf1:	89 c1                	mov    %eax,%ecx
    ebf3:	48 8d 05 56 44 02 00 	lea    0x24456(%rip),%rax        # 33050 <Td4>
    ebfa:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    ebfe:	c1 e0 18             	shl    $0x18,%eax
    ec01:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    ec04:	c1 e9 10             	shr    $0x10,%ecx
    ec07:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ec0d:	89 c9                	mov    %ecx,%ecx
    ec0f:	89 ca                	mov    %ecx,%edx
    ec11:	48 8d 0d 38 44 02 00 	lea    0x24438(%rip),%rcx        # 33050 <Td4>
    ec18:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ec1c:	c1 e1 10             	shl    $0x10,%ecx
    ec1f:	31 c8                	xor    %ecx,%eax
    ec21:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    ec24:	c1 e9 08             	shr    $0x8,%ecx
    ec27:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ec2d:	89 c9                	mov    %ecx,%ecx
    ec2f:	89 ca                	mov    %ecx,%edx
    ec31:	48 8d 0d 18 44 02 00 	lea    0x24418(%rip),%rcx        # 33050 <Td4>
    ec38:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ec3c:	c1 e1 08             	shl    $0x8,%ecx
    ec3f:	31 c8                	xor    %ecx,%eax
    ec41:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    ec44:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ec4a:	89 c9                	mov    %ecx,%ecx
    ec4c:	89 ca                	mov    %ecx,%edx
    ec4e:	48 8d 0d fb 43 02 00 	lea    0x243fb(%rip),%rcx        # 33050 <Td4>
    ec55:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    ec59:	31 c8                	xor    %ecx,%eax
    ec5b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ec5f:	33 41 0c             	xor    0xc(%rcx),%eax
    ec62:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ec65:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ec68:	c1 e8 18             	shr    $0x18,%eax
    ec6b:	88 c1                	mov    %al,%cl
    ec6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec71:	88 48 0c             	mov    %cl,0xc(%rax)
    ec74:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ec77:	c1 e8 10             	shr    $0x10,%eax
    ec7a:	88 c1                	mov    %al,%cl
    ec7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec80:	88 48 0d             	mov    %cl,0xd(%rax)
    ec83:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ec86:	c1 e8 08             	shr    $0x8,%eax
    ec89:	88 c1                	mov    %al,%cl
    ec8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec8f:	88 48 0e             	mov    %cl,0xe(%rax)
    ec92:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ec95:	88 c1                	mov    %al,%cl
    ec97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec9b:	88 48 0f             	mov    %cl,0xf(%rax)
    ec9e:	5d                   	pop    %rbp
    ec9f:	c3                   	ret    

000000000000eca0 <__mince_data_addr_translate>:
    eca0:	50                   	push   %rax
    eca1:	53                   	push   %rbx
    eca2:	51                   	push   %rcx
    eca3:	52                   	push   %rdx
    eca4:	56                   	push   %rsi
    eca5:	57                   	push   %rdi
    eca6:	41 50                	push   %r8
    eca8:	41 51                	push   %r9
    ecaa:	41 52                	push   %r10
    ecac:	41 53                	push   %r11
    ecae:	41 54                	push   %r12
    ecb0:	41 55                	push   %r13
    ecb2:	9c                   	pushf  
    ecb3:	e8 47 00 00 00       	call   ecff <__mince_data_addr_translate_inner>
    ecb8:	49 89 c6             	mov    %rax,%r14
    ecbb:	9d                   	popf   
    ecbc:	41 5d                	pop    %r13
    ecbe:	41 5c                	pop    %r12
    ecc0:	41 5b                	pop    %r11
    ecc2:	41 5a                	pop    %r10
    ecc4:	41 59                	pop    %r9
    ecc6:	41 58                	pop    %r8
    ecc8:	5f                   	pop    %rdi
    ecc9:	5e                   	pop    %rsi
    ecca:	5a                   	pop    %rdx
    eccb:	59                   	pop    %rcx
    eccc:	5b                   	pop    %rbx
    eccd:	58                   	pop    %rax
    ecce:	c3                   	ret    

000000000000eccf <__mince_populate>:
    eccf:	f3 0f 1e fa          	endbr64 
    ecd3:	55                   	push   %rbp
    ecd4:	48 89 e5             	mov    %rsp,%rbp
    ecd7:	48 83 ec 20          	sub    $0x20,%rsp
    ecdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecdf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ece3:	89 55 ec             	mov    %edx,-0x14(%rbp)
    ece6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ece9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecf1:	48 89 ce             	mov    %rcx,%rsi
    ecf4:	48 89 c7             	mov    %rax,%rdi
    ecf7:	e8 25 00 00 00       	call   ed21 <_Z16populate_newdrammmj>
    ecfc:	90                   	nop
    ecfd:	c9                   	leave  
    ecfe:	c3                   	ret    

000000000000ecff <__mince_data_addr_translate_inner>:
    ecff:	f3 0f 1e fa          	endbr64 
    ed03:	55                   	push   %rbp
    ed04:	48 89 e5             	mov    %rsp,%rbp
    ed07:	41 57                	push   %r15
    ed09:	4c 89 f8             	mov    %r15,%rax
    ed0c:	41 5f                	pop    %r15
    ed0e:	5d                   	pop    %rbp
    ed0f:	c3                   	ret    

000000000000ed10 <get_mince_start_addr>:
    ed10:	f3 0f 1e fa          	endbr64 
    ed14:	55                   	push   %rbp
    ed15:	48 89 e5             	mov    %rsp,%rbp
    ed18:	48 8d 05 e1 d2 02 00 	lea    0x2d2e1(%rip),%rax        # 3c000 <data_region>
    ed1f:	5d                   	pop    %rbp
    ed20:	c3                   	ret    

000000000000ed21 <_Z16populate_newdrammmj>:
    ed21:	f3 0f 1e fa          	endbr64 
    ed25:	55                   	push   %rbp
    ed26:	48 89 e5             	mov    %rsp,%rbp
    ed29:	48 83 ec 20          	sub    $0x20,%rsp
    ed2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed35:	89 55 ec             	mov    %edx,-0x14(%rbp)
    ed38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed3c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ed3f:	48 89 d1             	mov    %rdx,%rcx
    ed42:	48 c1 e1 0c          	shl    $0xc,%rcx
    ed46:	48 8d 15 b3 d2 02 00 	lea    0x2d2b3(%rip),%rdx        # 3c000 <data_region>
    ed4d:	48 01 d1             	add    %rdx,%rcx
    ed50:	ba 40 00 00 00       	mov    $0x40,%edx
    ed55:	48 89 c6             	mov    %rax,%rsi
    ed58:	48 89 cf             	mov    %rcx,%rdi
    ed5b:	e8 8f 46 01 00       	call   233ef <memcpy>
    ed60:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ed63:	48 89 d0             	mov    %rdx,%rax
    ed66:	48 01 c0             	add    %rax,%rax
    ed69:	48 01 d0             	add    %rdx,%rax
    ed6c:	48 c1 e0 03          	shl    $0x3,%rax
    ed70:	48 89 c1             	mov    %rax,%rcx
    ed73:	48 8d 15 b6 26 04 00 	lea    0x426b6(%rip),%rdx        # 51430 <data_mapping+0x10>
    ed7a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ed7d:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
    ed80:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ed83:	48 89 d0             	mov    %rdx,%rax
    ed86:	48 01 c0             	add    %rax,%rax
    ed89:	48 01 d0             	add    %rdx,%rax
    ed8c:	48 c1 e0 03          	shl    $0x3,%rax
    ed90:	48 89 c1             	mov    %rax,%rcx
    ed93:	48 8d 15 8e 26 04 00 	lea    0x4268e(%rip),%rdx        # 51428 <data_mapping+0x8>
    ed9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed9e:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    eda2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    eda5:	48 c1 e0 0c          	shl    $0xc,%rax
    eda9:	48 89 c2             	mov    %rax,%rdx
    edac:	48 8d 05 4d d2 02 00 	lea    0x2d24d(%rip),%rax        # 3c000 <data_region>
    edb3:	48 01 d0             	add    %rdx,%rax
    edb6:	48 89 c1             	mov    %rax,%rcx
    edb9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    edbc:	48 89 d0             	mov    %rdx,%rax
    edbf:	48 01 c0             	add    %rax,%rax
    edc2:	48 01 d0             	add    %rdx,%rax
    edc5:	48 c1 e0 03          	shl    $0x3,%rax
    edc9:	48 89 c2             	mov    %rax,%rdx
    edcc:	48 8d 05 4d 26 04 00 	lea    0x4264d(%rip),%rax        # 51420 <data_mapping>
    edd3:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
    edd7:	8b 05 23 26 04 00    	mov    0x42623(%rip),%eax        # 51400 <real_data_blocks_num>
    eddd:	83 c0 01             	add    $0x1,%eax
    ede0:	89 05 1a 26 04 00    	mov    %eax,0x4261a(%rip)        # 51400 <real_data_blocks_num>
    ede6:	90                   	nop
    ede7:	c9                   	leave  
    ede8:	c3                   	ret    

000000000000ede9 <_ZL23build_rts_context_nodesP15_layout_entry_tm>:
    ede9:	f3 0f 1e fa          	endbr64 
    eded:	55                   	push   %rbp
    edee:	48 89 e5             	mov    %rsp,%rbp
    edf1:	48 83 ec 50          	sub    $0x50,%rsp
    edf5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    edf9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    edfd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee01:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ee05:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ee09:	48 01 d0             	add    %rdx,%rax
    ee0c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ee10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee14:	25 ff 0f 00 00       	and    $0xfff,%eax
    ee19:	48 85 c0             	test   %rax,%rax
    ee1c:	74 1f                	je     ee3d <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x54>
    ee1e:	48 8d 0d 8b 43 02 00 	lea    0x2438b(%rip),%rcx        # 331b0 <Td4+0x160>
    ee25:	48 8d 15 99 43 02 00 	lea    0x24399(%rip),%rdx        # 331c5 <Td4+0x175>
    ee2c:	be 2a 00 00 00       	mov    $0x2a,%esi
    ee31:	48 8d 3d a5 43 02 00 	lea    0x243a5(%rip),%rdi        # 331dd <Td4+0x18d>
    ee38:	e8 0c a4 00 00       	call   19249 <__assert>
    ee3d:	e8 69 28 02 00       	call   316ab <get_enclave_base>
    ee42:	48 89 c2             	mov    %rax,%rdx
    ee45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee49:	48 01 d0             	add    %rdx,%rax
    ee4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ee50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee54:	8b 40 04             	mov    0x4(%rax),%eax
    ee57:	c1 e0 0c             	shl    $0xc,%eax
    ee5a:	89 c0                	mov    %eax,%eax
    ee5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ee60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee64:	48 8b 40 18          	mov    0x18(%rax),%rax
    ee68:	48 85 c0             	test   %rax,%rax
    ee6b:	74 12                	je     ee7f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x96>
    ee6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee71:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    ee75:	0f b7 c0             	movzwl %ax,%eax
    ee78:	83 e0 04             	and    $0x4,%eax
    ee7b:	85 c0                	test   %eax,%eax
    ee7d:	74 43                	je     eec2 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0xd9>
    ee7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee83:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    ee87:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    ee8d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ee93:	b9 00 00 00 00       	mov    $0x0,%ecx
    ee98:	ba 81 00 00 00       	mov    $0x81,%edx
    ee9d:	48 89 c7             	mov    %rax,%rdi
    eea0:	e8 5d 91 00 00       	call   18002 <mm_init_ema>
    eea5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    eea8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    eeac:	74 0a                	je     eeb8 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0xcf>
    eeae:	b8 01 00 00 00       	mov    $0x1,%eax
    eeb3:	e9 c9 01 00 00       	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    eeb8:	b8 00 00 00 00       	mov    $0x0,%eax
    eebd:	e9 bf 01 00 00       	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    eec2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eec6:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    eeca:	0f b7 c0             	movzwl %ax,%eax
    eecd:	83 e0 10             	and    $0x10,%eax
    eed0:	85 c0                	test   %eax,%eax
    eed2:	0f 95 c0             	setne  %al
    eed5:	88 45 c9             	mov    %al,-0x37(%rbp)
    eed8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eedc:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    eee0:	0f b7 c0             	movzwl %ax,%eax
    eee3:	83 e0 08             	and    $0x8,%eax
    eee6:	85 c0                	test   %eax,%eax
    eee8:	0f 95 c0             	setne  %al
    eeeb:	88 45 ca             	mov    %al,-0x36(%rbp)
    eeee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eef2:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    eef6:	0f b7 c0             	movzwl %ax,%eax
    eef9:	83 e0 01             	and    $0x1,%eax
    eefc:	85 c0                	test   %eax,%eax
    eefe:	74 12                	je     ef12 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x129>
    ef00:	0f b6 45 c9          	movzbl -0x37(%rbp),%eax
    ef04:	83 f0 01             	xor    $0x1,%eax
    ef07:	84 c0                	test   %al,%al
    ef09:	74 07                	je     ef12 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x129>
    ef0b:	b8 01 00 00 00       	mov    $0x1,%eax
    ef10:	eb 05                	jmp    ef17 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x12e>
    ef12:	b8 00 00 00 00       	mov    $0x0,%eax
    ef17:	88 45 cb             	mov    %al,-0x35(%rbp)
    ef1a:	80 7d c9 00          	cmpb   $0x0,-0x37(%rbp)
    ef1e:	74 5f                	je     ef7f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x196>
    ef20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef24:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    ef28:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    ef2e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ef34:	b9 03 00 00 00       	mov    $0x3,%ecx
    ef39:	ba 80 00 00 00       	mov    $0x80,%edx
    ef3e:	48 89 c7             	mov    %rax,%rdi
    ef41:	e8 bc 90 00 00       	call   18002 <mm_init_ema>
    ef46:	85 c0                	test   %eax,%eax
    ef48:	0f 95 c0             	setne  %al
    ef4b:	84 c0                	test   %al,%al
    ef4d:	74 0a                	je     ef59 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x170>
    ef4f:	b8 01 00 00 00       	mov    $0x1,%eax
    ef54:	e9 28 01 00 00       	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    ef59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ef61:	48 89 d6             	mov    %rdx,%rsi
    ef64:	48 89 c7             	mov    %rax,%rdi
    ef67:	e8 7c 92 00 00       	call   181e8 <mm_dealloc>
    ef6c:	85 c0                	test   %eax,%eax
    ef6e:	0f 95 c0             	setne  %al
    ef71:	84 c0                	test   %al,%al
    ef73:	74 0a                	je     ef7f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x196>
    ef75:	b8 01 00 00 00       	mov    $0x1,%eax
    ef7a:	e9 02 01 00 00       	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    ef7f:	80 7d ca 00          	cmpb   $0x0,-0x36(%rbp)
    ef83:	0f 84 83 00 00 00    	je     f00c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x223>
    ef89:	c7 45 cc 20 00 00 00 	movl   $0x20,-0x34(%rbp)
    ef90:	c7 45 dc 00 02 00 00 	movl   $0x200,-0x24(%rbp)
    ef97:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef9b:	0f b7 00             	movzwl (%rax),%eax
    ef9e:	66 83 f8 07          	cmp    $0x7,%ax
    efa2:	74 1a                	je     efbe <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1d5>
    efa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    efa8:	0f b7 00             	movzwl (%rax),%eax
    efab:	66 83 f8 11          	cmp    $0x11,%ax
    efaf:	74 0d                	je     efbe <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1d5>
    efb1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    efb5:	0f b7 00             	movzwl (%rax),%eax
    efb8:	66 83 f8 12          	cmp    $0x12,%ax
    efbc:	75 07                	jne    efc5 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1dc>
    efbe:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    efc5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    efc8:	0b 45 dc             	or     -0x24(%rbp),%eax
    efcb:	0c c4                	or     $0xc4,%al
    efcd:	89 c2                	mov    %eax,%edx
    efcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    efd3:	8b 40 04             	mov    0x4(%rax),%eax
    efd6:	89 c0                	mov    %eax,%eax
    efd8:	48 c1 e0 0c          	shl    $0xc,%rax
    efdc:	48 89 c6             	mov    %rax,%rsi
    efdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    efe3:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    efe9:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    efef:	b9 00 00 00 00       	mov    $0x0,%ecx
    eff4:	48 89 c7             	mov    %rax,%rdi
    eff7:	e8 38 91 00 00       	call   18134 <mm_alloc>
    effc:	89 45 e0             	mov    %eax,-0x20(%rbp)
    efff:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    f003:	74 77                	je     f07c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    f005:	b8 01 00 00 00       	mov    $0x1,%eax
    f00a:	eb 75                	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    f00c:	80 7d cb 00          	cmpb   $0x0,-0x35(%rbp)
    f010:	74 6a                	je     f07c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    f012:	c7 45 d0 00 02 00 00 	movl   $0x200,-0x30(%rbp)
    f019:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f01d:	48 8b 40 18          	mov    0x18(%rax),%rax
    f021:	83 e0 07             	and    $0x7,%eax
    f024:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    f027:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f02b:	0f b7 00             	movzwl (%rax),%eax
    f02e:	66 83 f8 04          	cmp    $0x4,%ax
    f032:	75 0e                	jne    f042 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x259>
    f034:	c7 45 d0 00 01 00 00 	movl   $0x100,-0x30(%rbp)
    f03b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    f042:	8b 45 d0             	mov    -0x30(%rbp),%eax
    f045:	0c 80                	or     $0x80,%al
    f047:	89 c7                	mov    %eax,%edi
    f049:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f04d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    f050:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    f054:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    f05a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f060:	89 d1                	mov    %edx,%ecx
    f062:	89 fa                	mov    %edi,%edx
    f064:	48 89 c7             	mov    %rax,%rdi
    f067:	e8 96 8f 00 00       	call   18002 <mm_init_ema>
    f06c:	89 45 d8             	mov    %eax,-0x28(%rbp)
    f06f:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    f073:	74 07                	je     f07c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    f075:	b8 01 00 00 00       	mov    $0x1,%eax
    f07a:	eb 05                	jmp    f081 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    f07c:	b8 00 00 00 00       	mov    $0x0,%eax
    f081:	c9                   	leave  
    f082:	c3                   	ret    

000000000000f083 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    f083:	f3 0f 1e fa          	endbr64 
    f087:	55                   	push   %rbp
    f088:	48 89 e5             	mov    %rsp,%rbp
    f08b:	48 83 ec 40          	sub    $0x40,%rsp
    f08f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f093:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f097:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    f09b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    f0a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f0aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0ae:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    f0b2:	0f 83 aa 00 00 00    	jae    f162 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xdf>
    f0b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0bc:	0f b7 00             	movzwl (%rax),%eax
    f0bf:	0f b7 c0             	movzwl %ax,%eax
    f0c2:	25 00 10 00 00       	and    $0x1000,%eax
    f0c7:	85 c0                	test   %eax,%eax
    f0c9:	75 21                	jne    f0ec <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x69>
    f0cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f0d3:	48 89 d6             	mov    %rdx,%rsi
    f0d6:	48 89 c7             	mov    %rax,%rdi
    f0d9:	e8 0b fd ff ff       	call   ede9 <_ZL23build_rts_context_nodesP15_layout_entry_tm>
    f0de:	89 45 ec             	mov    %eax,-0x14(%rbp)
    f0e1:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f0e5:	74 71                	je     f158 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd5>
    f0e7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    f0ea:	eb 7b                	jmp    f167 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe4>
    f0ec:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f0f3:	00 
    f0f4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    f0fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0ff:	8b 40 04             	mov    0x4(%rax),%eax
    f102:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    f105:	73 51                	jae    f158 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd5>
    f107:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f10b:	48 8b 40 08          	mov    0x8(%rax),%rax
    f10f:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    f113:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f117:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    f11b:	0f b7 c0             	movzwl %ax,%eax
    f11e:	f7 d8                	neg    %eax
    f120:	48 98                	cltq   
    f122:	48 c1 e0 05          	shl    $0x5,%rax
    f126:	48 89 c2             	mov    %rax,%rdx
    f129:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f12d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f131:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f139:	48 89 c6             	mov    %rax,%rsi
    f13c:	48 89 cf             	mov    %rcx,%rdi
    f13f:	e8 3f ff ff ff       	call   f083 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    f144:	89 45 ec             	mov    %eax,-0x14(%rbp)
    f147:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f14b:	74 05                	je     f152 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xcf>
    f14d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    f150:	eb 15                	jmp    f167 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe4>
    f152:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    f156:	eb a3                	jmp    f0fb <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x78>
    f158:	48 83 45 f0 20       	addq   $0x20,-0x10(%rbp)
    f15d:	e9 48 ff ff ff       	jmp    f0aa <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x27>
    f162:	b8 00 00 00 00       	mov    $0x0,%eax
    f167:	c9                   	leave  
    f168:	c3                   	ret    

000000000000f169 <init_rts_emas>:
    f169:	f3 0f 1e fa          	endbr64 
    f16d:	55                   	push   %rbp
    f16e:	48 89 e5             	mov    %rsp,%rbp
    f171:	48 83 ec 30          	sub    $0x30,%rsp
    f175:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f179:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f17d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f181:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    f188:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f18c:	48 89 c7             	mov    %rax,%rdi
    f18f:	e8 f4 41 00 00       	call   13388 <init_segment_emas>
    f194:	89 45 fc             	mov    %eax,-0x4(%rbp)
    f197:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    f19b:	74 05                	je     f1a2 <init_rts_emas+0x39>
    f19d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f1a0:	eb 1e                	jmp    f1c0 <init_rts_emas+0x57>
    f1a2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f1a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f1aa:	ba 00 00 00 00       	mov    $0x0,%edx
    f1af:	48 89 ce             	mov    %rcx,%rsi
    f1b2:	48 89 c7             	mov    %rax,%rdi
    f1b5:	e8 c9 fe ff ff       	call   f083 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    f1ba:	89 45 fc             	mov    %eax,-0x4(%rbp)
    f1bd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f1c0:	c9                   	leave  
    f1c1:	c3                   	ret    

000000000000f1c2 <sgx_mm_alloc_ocall>:
    f1c2:	f3 0f 1e fa          	endbr64 
    f1c6:	55                   	push   %rbp
    f1c7:	48 89 e5             	mov    %rsp,%rbp
    f1ca:	48 83 ec 40          	sub    $0x40,%rsp
    f1ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f1d2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f1d6:	89 55 cc             	mov    %edx,-0x34(%rbp)
    f1d9:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    f1dc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    f1e3:	c7 45 e8 0e 00 00 00 	movl   $0xe,-0x18(%rbp)
    f1ea:	bf 20 00 00 00       	mov    $0x20,%edi
    f1ef:	e8 54 06 00 00       	call   f848 <sgx_ocalloc>
    f1f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f1f8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f1fd:	75 0c                	jne    f20b <sgx_mm_alloc_ocall+0x49>
    f1ff:	e8 59 07 00 00       	call   f95d <sgx_ocfree>
    f204:	b8 01 00 00 00       	mov    $0x1,%eax
    f209:	eb 67                	jmp    f272 <sgx_mm_alloc_ocall+0xb0>
    f20b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f20f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f217:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f21b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f223:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f227:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f22f:	8b 55 cc             	mov    -0x34(%rbp),%edx
    f232:	89 50 18             	mov    %edx,0x18(%rax)
    f235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f239:	8b 55 c8             	mov    -0x38(%rbp),%edx
    f23c:	89 50 1c             	mov    %edx,0x1c(%rax)
    f23f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f243:	48 89 c6             	mov    %rax,%rsi
    f246:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    f24b:	e8 ff 21 00 00       	call   1144f <sgx_ocall>
    f250:	89 45 ec             	mov    %eax,-0x14(%rbp)
    f253:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f257:	75 11                	jne    f26a <sgx_mm_alloc_ocall+0xa8>
    f259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f25d:	8b 00                	mov    (%rax),%eax
    f25f:	85 c0                	test   %eax,%eax
    f261:	75 07                	jne    f26a <sgx_mm_alloc_ocall+0xa8>
    f263:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    f26a:	e8 ee 06 00 00       	call   f95d <sgx_ocfree>
    f26f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    f272:	c9                   	leave  
    f273:	c3                   	ret    

000000000000f274 <sgx_mm_modify_ocall>:
    f274:	f3 0f 1e fa          	endbr64 
    f278:	55                   	push   %rbp
    f279:	48 89 e5             	mov    %rsp,%rbp
    f27c:	48 83 ec 40          	sub    $0x40,%rsp
    f280:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f284:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f288:	89 55 cc             	mov    %edx,-0x34(%rbp)
    f28b:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    f28e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    f295:	c7 45 e8 0e 00 00 00 	movl   $0xe,-0x18(%rbp)
    f29c:	bf 20 00 00 00       	mov    $0x20,%edi
    f2a1:	e8 a2 05 00 00       	call   f848 <sgx_ocalloc>
    f2a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f2aa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f2af:	75 0c                	jne    f2bd <sgx_mm_modify_ocall+0x49>
    f2b1:	e8 a7 06 00 00       	call   f95d <sgx_ocfree>
    f2b6:	b8 01 00 00 00       	mov    $0x1,%eax
    f2bb:	eb 67                	jmp    f324 <sgx_mm_modify_ocall+0xb0>
    f2bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f2c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f2c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2c9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f2cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f2d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2d5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f2d9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    f2dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2e1:	8b 55 cc             	mov    -0x34(%rbp),%edx
    f2e4:	89 50 18             	mov    %edx,0x18(%rax)
    f2e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2eb:	8b 55 c8             	mov    -0x38(%rbp),%edx
    f2ee:	89 50 1c             	mov    %edx,0x1c(%rax)
    f2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2f5:	48 89 c6             	mov    %rax,%rsi
    f2f8:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    f2fd:	e8 4d 21 00 00       	call   1144f <sgx_ocall>
    f302:	89 45 ec             	mov    %eax,-0x14(%rbp)
    f305:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f309:	75 11                	jne    f31c <sgx_mm_modify_ocall+0xa8>
    f30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f30f:	8b 00                	mov    (%rax),%eax
    f311:	85 c0                	test   %eax,%eax
    f313:	75 07                	jne    f31c <sgx_mm_modify_ocall+0xa8>
    f315:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    f31c:	e8 3c 06 00 00       	call   f95d <sgx_ocfree>
    f321:	8b 45 e8             	mov    -0x18(%rbp),%eax
    f324:	c9                   	leave  
    f325:	c3                   	ret    

000000000000f326 <sgx_mm_register_pfhandler>:
    f326:	f3 0f 1e fa          	endbr64 
    f32a:	55                   	push   %rbp
    f32b:	48 89 e5             	mov    %rsp,%rbp
    f32e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f332:	48 8b 05 f7 22 04 00 	mov    0x422f7(%rip),%rax        # 51630 <g_mm_pfhandler>
    f339:	48 85 c0             	test   %rax,%rax
    f33c:	74 07                	je     f345 <sgx_mm_register_pfhandler+0x1f>
    f33e:	b8 00 00 00 00       	mov    $0x0,%eax
    f343:	eb 10                	jmp    f355 <sgx_mm_register_pfhandler+0x2f>
    f345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f349:	48 89 05 e0 22 04 00 	mov    %rax,0x422e0(%rip)        # 51630 <g_mm_pfhandler>
    f350:	b8 01 00 00 00       	mov    $0x1,%eax
    f355:	5d                   	pop    %rbp
    f356:	c3                   	ret    

000000000000f357 <sgx_mm_unregister_pfhandler>:
    f357:	f3 0f 1e fa          	endbr64 
    f35b:	55                   	push   %rbp
    f35c:	48 89 e5             	mov    %rsp,%rbp
    f35f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f363:	48 8b 05 c6 22 04 00 	mov    0x422c6(%rip),%rax        # 51630 <g_mm_pfhandler>
    f36a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    f36e:	74 07                	je     f377 <sgx_mm_unregister_pfhandler+0x20>
    f370:	b8 00 00 00 00       	mov    $0x0,%eax
    f375:	eb 10                	jmp    f387 <sgx_mm_unregister_pfhandler+0x30>
    f377:	48 c7 05 ae 22 04 00 	movq   $0x0,0x422ae(%rip)        # 51630 <g_mm_pfhandler>
    f37e:	00 00 00 00 
    f382:	b8 01 00 00 00       	mov    $0x1,%eax
    f387:	5d                   	pop    %rbp
    f388:	c3                   	ret    

000000000000f389 <sgx_mm_mutex_init>:
    f389:	f3 0f 1e fa          	endbr64 
    f38d:	55                   	push   %rbp
    f38e:	48 89 e5             	mov    %rsp,%rbp
    f391:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f395:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f399:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f3a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f3a4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    f3ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f3af:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f3b6:	00 
    f3b7:	b8 00 00 00 00       	mov    $0x0,%eax
    f3bc:	5d                   	pop    %rbp
    f3bd:	c3                   	ret    

000000000000f3be <sgx_mm_mutex_create>:
    f3be:	f3 0f 1e fa          	endbr64 
    f3c2:	55                   	push   %rbp
    f3c3:	48 89 e5             	mov    %rsp,%rbp
    f3c6:	48 83 ec 10          	sub    $0x10,%rsp
    f3ca:	bf 18 00 00 00       	mov    $0x18,%edi
    f3cf:	e8 53 06 01 00       	call   1fa27 <dlmalloc>
    f3d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3d8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f3dd:	75 07                	jne    f3e6 <sgx_mm_mutex_create+0x28>
    f3df:	b8 00 00 00 00       	mov    $0x0,%eax
    f3e4:	eb 10                	jmp    f3f6 <sgx_mm_mutex_create+0x38>
    f3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3ea:	48 89 c7             	mov    %rax,%rdi
    f3ed:	e8 97 ff ff ff       	call   f389 <sgx_mm_mutex_init>
    f3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3f6:	c9                   	leave  
    f3f7:	c3                   	ret    

000000000000f3f8 <sgx_mm_mutex_lock>:
    f3f8:	f3 0f 1e fa          	endbr64 
    f3fc:	55                   	push   %rbp
    f3fd:	48 89 e5             	mov    %rsp,%rbp
    f400:	48 83 ec 10          	sub    $0x10,%rsp
    f404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f408:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f40d:	75 1f                	jne    f42e <sgx_mm_mutex_lock+0x36>
    f40f:	48 8d 0d d4 3d 02 00 	lea    0x23dd4(%rip),%rcx        # 331ea <Td4+0x19a>
    f416:	48 8d 15 f3 3d 02 00 	lea    0x23df3(%rip),%rdx        # 33210 <__func__.2612>
    f41d:	be 99 00 00 00       	mov    $0x99,%esi
    f422:	48 8d 3d cf 3d 02 00 	lea    0x23dcf(%rip),%rdi        # 331f8 <Td4+0x1a8>
    f429:	e8 1b 9e 00 00       	call   19249 <__assert>
    f42e:	90                   	nop
    f42f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f433:	48 89 c7             	mov    %rax,%rdi
    f436:	e8 00 45 01 00       	call   2393b <sgx_thread_spin_trylock>
    f43b:	85 c0                	test   %eax,%eax
    f43d:	75 f0                	jne    f42f <sgx_mm_mutex_lock+0x37>
    f43f:	b8 00 00 00 00       	mov    $0x0,%eax
    f444:	c9                   	leave  
    f445:	c3                   	ret    

000000000000f446 <sgx_mm_mutex_unlock>:
    f446:	f3 0f 1e fa          	endbr64 
    f44a:	55                   	push   %rbp
    f44b:	48 89 e5             	mov    %rsp,%rbp
    f44e:	48 83 ec 10          	sub    $0x10,%rsp
    f452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f456:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f45b:	75 1f                	jne    f47c <sgx_mm_mutex_unlock+0x36>
    f45d:	48 8d 0d 86 3d 02 00 	lea    0x23d86(%rip),%rcx        # 331ea <Td4+0x19a>
    f464:	48 8d 15 c5 3d 02 00 	lea    0x23dc5(%rip),%rdx        # 33230 <__func__.2619>
    f46b:	be a7 00 00 00       	mov    $0xa7,%esi
    f470:	48 8d 3d 81 3d 02 00 	lea    0x23d81(%rip),%rdi        # 331f8 <Td4+0x1a8>
    f477:	e8 cd 9d 00 00       	call   19249 <__assert>
    f47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f480:	48 89 c7             	mov    %rax,%rdi
    f483:	e8 a2 45 01 00       	call   23a2a <sgx_thread_spin_unlock>
    f488:	c9                   	leave  
    f489:	c3                   	ret    

000000000000f48a <sgx_mm_mutex_destroy>:
    f48a:	f3 0f 1e fa          	endbr64 
    f48e:	55                   	push   %rbp
    f48f:	48 89 e5             	mov    %rsp,%rbp
    f492:	48 83 ec 20          	sub    $0x20,%rsp
    f496:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f49a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f49f:	75 1f                	jne    f4c0 <sgx_mm_mutex_destroy+0x36>
    f4a1:	48 8d 0d 42 3d 02 00 	lea    0x23d42(%rip),%rcx        # 331ea <Td4+0x19a>
    f4a8:	48 8d 15 a1 3d 02 00 	lea    0x23da1(%rip),%rdx        # 33250 <__func__.2623>
    f4af:	be ad 00 00 00       	mov    $0xad,%esi
    f4b4:	48 8d 3d 3d 3d 02 00 	lea    0x23d3d(%rip),%rdi        # 331f8 <Td4+0x1a8>
    f4bb:	e8 89 9d 00 00       	call   19249 <__assert>
    f4c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4c4:	48 89 c7             	mov    %rax,%rdi
    f4c7:	e8 d6 43 01 00       	call   238a2 <sgx_thread_spin_destroy>
    f4cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
    f4cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4d3:	48 89 c7             	mov    %rax,%rdi
    f4d6:	e8 47 10 01 00       	call   20522 <dlfree>
    f4db:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f4de:	c9                   	leave  
    f4df:	c3                   	ret    

000000000000f4e0 <sgx_mm_is_within_enclave>:
    f4e0:	f3 0f 1e fa          	endbr64 
    f4e4:	55                   	push   %rbp
    f4e5:	48 89 e5             	mov    %rsp,%rbp
    f4e8:	48 83 ec 10          	sub    $0x10,%rsp
    f4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4fc:	48 89 d6             	mov    %rdx,%rsi
    f4ff:	48 89 c7             	mov    %rax,%rdi
    f502:	e8 13 02 00 00       	call   f71a <sgx_is_within_enclave>
    f507:	85 c0                	test   %eax,%eax
    f509:	0f 95 c0             	setne  %al
    f50c:	c9                   	leave  
    f50d:	c3                   	ret    

000000000000f50e <_ZL28set_global_feature_indicatormm>:
    f50e:	f3 0f 1e fa          	endbr64 
    f512:	55                   	push   %rbp
    f513:	48 89 e5             	mov    %rsp,%rbp
    f516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f51a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f51e:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    f525:	00 00 ff 
    f528:	48 23 45 f8          	and    -0x8(%rbp),%rax
    f52c:	48 85 c0             	test   %rax,%rax
    f52f:	74 0e                	je     f53f <_ZL28set_global_feature_indicatormm+0x31>
    f531:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    f538:	ff ff 00 
    f53b:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    f53f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f543:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
    f549:	48 85 c0             	test   %rax,%rax
    f54c:	75 0a                	jne    f558 <_ZL28set_global_feature_indicatormm+0x4a>
    f54e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f553:	e9 02 01 00 00       	jmp    f65a <_ZL28set_global_feature_indicatormm+0x14c>
    f558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f55c:	83 e0 20             	and    $0x20,%eax
    f55f:	48 85 c0             	test   %rax,%rax
    f562:	74 11                	je     f575 <_ZL28set_global_feature_indicatormm+0x67>
    f564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f568:	83 e0 1f             	and    $0x1f,%eax
    f56b:	48 83 f8 1f          	cmp    $0x1f,%rax
    f56f:	0f 85 8f 00 00 00    	jne    f604 <_ZL28set_global_feature_indicatormm+0xf6>
    f575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f579:	83 e0 40             	and    $0x40,%eax
    f57c:	48 85 c0             	test   %rax,%rax
    f57f:	74 0d                	je     f58e <_ZL28set_global_feature_indicatormm+0x80>
    f581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f585:	83 e0 3f             	and    $0x3f,%eax
    f588:	48 83 f8 3f          	cmp    $0x3f,%rax
    f58c:	75 76                	jne    f604 <_ZL28set_global_feature_indicatormm+0xf6>
    f58e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f592:	25 80 00 00 00       	and    $0x80,%eax
    f597:	48 85 c0             	test   %rax,%rax
    f59a:	74 0d                	je     f5a9 <_ZL28set_global_feature_indicatormm+0x9b>
    f59c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5a0:	83 e0 7f             	and    $0x7f,%eax
    f5a3:	48 83 f8 7f          	cmp    $0x7f,%rax
    f5a7:	75 5b                	jne    f604 <_ZL28set_global_feature_indicatormm+0xf6>
    f5a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5ad:	25 00 01 00 00       	and    $0x100,%eax
    f5b2:	48 85 c0             	test   %rax,%rax
    f5b5:	74 0f                	je     f5c6 <_ZL28set_global_feature_indicatormm+0xb8>
    f5b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5bb:	0f b6 c0             	movzbl %al,%eax
    f5be:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f5c4:	75 3e                	jne    f604 <_ZL28set_global_feature_indicatormm+0xf6>
    f5c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5ca:	25 00 02 00 00       	and    $0x200,%eax
    f5cf:	48 85 c0             	test   %rax,%rax
    f5d2:	74 11                	je     f5e5 <_ZL28set_global_feature_indicatormm+0xd7>
    f5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5d8:	25 ff 01 00 00       	and    $0x1ff,%eax
    f5dd:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    f5e3:	75 1f                	jne    f604 <_ZL28set_global_feature_indicatormm+0xf6>
    f5e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5e9:	25 00 04 00 00       	and    $0x400,%eax
    f5ee:	48 85 c0             	test   %rax,%rax
    f5f1:	74 18                	je     f60b <_ZL28set_global_feature_indicatormm+0xfd>
    f5f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5f7:	25 ff 03 00 00       	and    $0x3ff,%eax
    f5fc:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    f602:	74 07                	je     f60b <_ZL28set_global_feature_indicatormm+0xfd>
    f604:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f609:	eb 4f                	jmp    f65a <_ZL28set_global_feature_indicatormm+0x14c>
    f60b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f60f:	83 e0 06             	and    $0x6,%eax
    f612:	48 83 f8 06          	cmp    $0x6,%rax
    f616:	74 10                	je     f628 <_ZL28set_global_feature_indicatormm+0x11a>
    f618:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    f61f:	20 fe ff 
    f622:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    f626:	eb 1f                	jmp    f647 <_ZL28set_global_feature_indicatormm+0x139>
    f628:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f62c:	25 e0 00 00 00       	and    $0xe0,%eax
    f631:	48 3d e0 00 00 00    	cmp    $0xe0,%rax
    f637:	74 0e                	je     f647 <_ZL28set_global_feature_indicatormm+0x139>
    f639:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    f640:	e0 fe ff 
    f643:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    f647:	48 8d 05 9a a7 02 00 	lea    0x2a79a(%rip),%rax        # 39de8 <g_cpu_feature_indicator>
    f64e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f652:	48 89 10             	mov    %rdx,(%rax)
    f655:	b8 00 00 00 00       	mov    $0x0,%eax
    f65a:	5d                   	pop    %rbp
    f65b:	c3                   	ret    

000000000000f65c <init_optimized_libs>:
    f65c:	f3 0f 1e fa          	endbr64 
    f660:	55                   	push   %rbp
    f661:	48 89 e5             	mov    %rsp,%rbp
    f664:	48 83 ec 20          	sub    $0x20,%rsp
    f668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f66c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f670:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f674:	e8 3e 20 02 00       	call   316b7 <get_enclave_state>
    f679:	83 f8 01             	cmp    $0x1,%eax
    f67c:	0f 95 c0             	setne  %al
    f67f:	84 c0                	test   %al,%al
    f681:	74 07                	je     f68a <init_optimized_libs+0x2e>
    f683:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f688:	eb 73                	jmp    f6fd <init_optimized_libs+0xa1>
    f68a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f68e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f692:	48 89 d6             	mov    %rdx,%rsi
    f695:	48 89 c7             	mov    %rax,%rdi
    f698:	e8 71 fe ff ff       	call   f50e <_ZL28set_global_feature_indicatormm>
    f69d:	85 c0                	test   %eax,%eax
    f69f:	0f 95 c0             	setne  %al
    f6a2:	84 c0                	test   %al,%al
    f6a4:	74 07                	je     f6ad <init_optimized_libs+0x51>
    f6a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f6ab:	eb 50                	jmp    f6fd <init_optimized_libs+0xa1>
    f6ad:	48 8d 05 34 a7 02 00 	lea    0x2a734(%rip),%rax        # 39de8 <g_cpu_feature_indicator>
    f6b4:	48 8b 00             	mov    (%rax),%rax
    f6b7:	48 89 c7             	mov    %rax,%rdi
    f6ba:	e8 07 41 01 00       	call   237c6 <sgx_init_string_lib>
    f6bf:	85 c0                	test   %eax,%eax
    f6c1:	0f 95 c0             	setne  %al
    f6c4:	84 c0                	test   %al,%al
    f6c6:	74 07                	je     f6cf <init_optimized_libs+0x73>
    f6c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f6cd:	eb 2e                	jmp    f6fd <init_optimized_libs+0xa1>
    f6cf:	48 8d 05 12 a7 02 00 	lea    0x2a712(%rip),%rax        # 39de8 <g_cpu_feature_indicator>
    f6d6:	48 8b 00             	mov    (%rax),%rax
    f6d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f6dd:	48 89 d6             	mov    %rdx,%rsi
    f6e0:	48 89 c7             	mov    %rax,%rdi
    f6e3:	e8 de 0f 02 00       	call   306c6 <sgx_init_crypto_lib>
    f6e8:	85 c0                	test   %eax,%eax
    f6ea:	0f 95 c0             	setne  %al
    f6ed:	84 c0                	test   %al,%al
    f6ef:	74 07                	je     f6f8 <init_optimized_libs+0x9c>
    f6f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f6f6:	eb 05                	jmp    f6fd <init_optimized_libs+0xa1>
    f6f8:	b8 00 00 00 00       	mov    $0x0,%eax
    f6fd:	c9                   	leave  
    f6fe:	c3                   	ret    

000000000000f6ff <trts_access_version_dummy1>:
    f6ff:	f3 0f 1e fa          	endbr64 
    f703:	55                   	push   %rbp
    f704:	48 89 e5             	mov    %rsp,%rbp
    f707:	48 8d 05 02 b9 02 00 	lea    0x2b902(%rip),%rax        # 3b010 <sgx_trts_version>
    f70e:	c6 00 73             	movb   $0x73,(%rax)
    f711:	48 8d 05 f8 b8 02 00 	lea    0x2b8f8(%rip),%rax        # 3b010 <sgx_trts_version>
    f718:	5d                   	pop    %rbp
    f719:	c3                   	ret    

000000000000f71a <sgx_is_within_enclave>:
    f71a:	f3 0f 1e fa          	endbr64 
    f71e:	55                   	push   %rbp
    f71f:	48 89 e5             	mov    %rsp,%rbp
    f722:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f726:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f72a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f72e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f732:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f739:	00 
    f73a:	48 8d 05 b7 a6 02 00 	lea    0x2a6b7(%rip),%rax        # 39df8 <g_enclave_base>
    f741:	48 8b 00             	mov    (%rax),%rax
    f744:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f748:	48 8d 05 b1 a6 02 00 	lea    0x2a6b1(%rip),%rax        # 39e00 <g_enclave_size>
    f74f:	48 8b 10             	mov    (%rax),%rdx
    f752:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f756:	48 01 d0             	add    %rdx,%rax
    f759:	48 83 e8 01          	sub    $0x1,%rax
    f75d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f761:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    f766:	74 15                	je     f77d <sgx_is_within_enclave+0x63>
    f768:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f76c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f770:	48 01 d0             	add    %rdx,%rax
    f773:	48 83 e8 01          	sub    $0x1,%rax
    f777:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f77b:	eb 08                	jmp    f785 <sgx_is_within_enclave+0x6b>
    f77d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f781:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f789:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f78d:	77 1b                	ja     f7aa <sgx_is_within_enclave+0x90>
    f78f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f793:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f797:	72 11                	jb     f7aa <sgx_is_within_enclave+0x90>
    f799:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f79d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    f7a1:	77 07                	ja     f7aa <sgx_is_within_enclave+0x90>
    f7a3:	b8 01 00 00 00       	mov    $0x1,%eax
    f7a8:	eb 05                	jmp    f7af <sgx_is_within_enclave+0x95>
    f7aa:	b8 00 00 00 00       	mov    $0x0,%eax
    f7af:	5d                   	pop    %rbp
    f7b0:	c3                   	ret    

000000000000f7b1 <sgx_is_outside_enclave>:
    f7b1:	f3 0f 1e fa          	endbr64 
    f7b5:	55                   	push   %rbp
    f7b6:	48 89 e5             	mov    %rsp,%rbp
    f7b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f7bd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f7c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f7c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f7c9:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f7d0:	00 
    f7d1:	48 8d 05 20 a6 02 00 	lea    0x2a620(%rip),%rax        # 39df8 <g_enclave_base>
    f7d8:	48 8b 00             	mov    (%rax),%rax
    f7db:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f7df:	48 8d 05 1a a6 02 00 	lea    0x2a61a(%rip),%rax        # 39e00 <g_enclave_size>
    f7e6:	48 8b 10             	mov    (%rax),%rdx
    f7e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f7ed:	48 01 d0             	add    %rdx,%rax
    f7f0:	48 83 e8 01          	sub    $0x1,%rax
    f7f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f7f8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    f7fd:	74 15                	je     f814 <sgx_is_outside_enclave+0x63>
    f7ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f803:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f807:	48 01 d0             	add    %rdx,%rax
    f80a:	48 83 e8 01          	sub    $0x1,%rax
    f80e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f812:	eb 08                	jmp    f81c <sgx_is_outside_enclave+0x6b>
    f814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f818:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f81c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f820:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f824:	77 1b                	ja     f841 <sgx_is_outside_enclave+0x90>
    f826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f82a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f82e:	72 0a                	jb     f83a <sgx_is_outside_enclave+0x89>
    f830:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f834:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    f838:	76 07                	jbe    f841 <sgx_is_outside_enclave+0x90>
    f83a:	b8 01 00 00 00       	mov    $0x1,%eax
    f83f:	eb 05                	jmp    f846 <sgx_is_outside_enclave+0x95>
    f841:	b8 00 00 00 00       	mov    $0x0,%eax
    f846:	5d                   	pop    %rbp
    f847:	c3                   	ret    

000000000000f848 <sgx_ocalloc>:
    f848:	f3 0f 1e fa          	endbr64 
    f84c:	55                   	push   %rbp
    f84d:	48 89 e5             	mov    %rsp,%rbp
    f850:	48 83 ec 40          	sub    $0x40,%rsp
    f854:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f858:	e8 99 1e 02 00       	call   316f6 <get_thread_data>
    f85d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f865:	48 8b 40 20          	mov    0x20(%rax),%rax
    f869:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f86d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f871:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    f878:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f87c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f880:	be 08 00 00 00       	mov    $0x8,%esi
    f885:	48 89 c7             	mov    %rax,%rdi
    f888:	e8 24 ff ff ff       	call   f7b1 <sgx_is_outside_enclave>
    f88d:	85 c0                	test   %eax,%eax
    f88f:	0f 94 c0             	sete   %al
    f892:	84 c0                	test   %al,%al
    f894:	74 05                	je     f89b <sgx_ocalloc+0x53>
    f896:	e8 00 22 02 00       	call   31a9b <abort>
    f89b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f89f:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    f8a3:	73 05                	jae    f8aa <sgx_ocalloc+0x62>
    f8a5:	e8 f1 21 02 00       	call   31a9b <abort>
    f8aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f8ae:	48 29 45 e8          	sub    %rax,-0x18(%rbp)
    f8b2:	48 83 65 e8 f0       	andq   $0xfffffffffffffff0,-0x18(%rbp)
    f8b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8bb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f8bf:	48 89 d6             	mov    %rdx,%rsi
    f8c2:	48 89 c7             	mov    %rax,%rdi
    f8c5:	e8 e7 fe ff ff       	call   f7b1 <sgx_is_outside_enclave>
    f8ca:	85 c0                	test   %eax,%eax
    f8cc:	0f 94 c0             	sete   %al
    f8cf:	84 c0                	test   %al,%al
    f8d1:	74 05                	je     f8d8 <sgx_ocalloc+0x90>
    f8d3:	e8 c3 21 02 00       	call   31a9b <abort>
    f8d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f8dc:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    f8e3:	48 83 e8 01          	sub    $0x1,%rax
    f8e7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    f8ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f8f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    f8fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f8ff:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f904:	75 05                	jne    f90b <sgx_ocalloc+0xc3>
    f906:	e8 90 21 02 00       	call   31a9b <abort>
    f90b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f90f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f913:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f917:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    f91b:	0f 96 c0             	setbe  %al
    f91e:	84 c0                	test   %al,%al
    f920:	74 26                	je     f948 <sgx_ocalloc+0x100>
    f922:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f926:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f92a:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    f931:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f935:	c6 00 00             	movb   $0x0,(%rax)
    f938:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f93c:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    f942:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f946:	eb cb                	jmp    f913 <sgx_ocalloc+0xcb>
    f948:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f94c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f950:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    f957:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f95b:	c9                   	leave  
    f95c:	c3                   	ret    

000000000000f95d <sgx_ocfree>:
    f95d:	f3 0f 1e fa          	endbr64 
    f961:	55                   	push   %rbp
    f962:	48 89 e5             	mov    %rsp,%rbp
    f965:	48 83 ec 20          	sub    $0x20,%rsp
    f969:	e8 88 1d 02 00       	call   316f6 <get_thread_data>
    f96e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f972:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f976:	48 8b 40 20          	mov    0x20(%rax),%rax
    f97a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f97e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f982:	48 8b 40 08          	mov    0x8(%rax),%rax
    f986:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f98a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f98e:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    f992:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f99a:	be 08 00 00 00       	mov    $0x8,%esi
    f99f:	48 89 c7             	mov    %rax,%rdi
    f9a2:	e8 0a fe ff ff       	call   f7b1 <sgx_is_outside_enclave>
    f9a7:	85 c0                	test   %eax,%eax
    f9a9:	0f 94 c0             	sete   %al
    f9ac:	84 c0                	test   %al,%al
    f9ae:	74 05                	je     f9b5 <sgx_ocfree+0x58>
    f9b0:	e8 e6 20 02 00       	call   31a9b <abort>
    f9b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f9bd:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    f9c4:	90                   	nop
    f9c5:	c9                   	leave  
    f9c6:	c3                   	ret    

000000000000f9c7 <_ZL15__do_get_rand32Pj>:
    f9c7:	f3 0f 1e fa          	endbr64 
    f9cb:	55                   	push   %rbp
    f9cc:	48 89 e5             	mov    %rsp,%rbp
    f9cf:	48 83 ec 10          	sub    $0x10,%rsp
    f9d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9db:	48 89 c7             	mov    %rax,%rdi
    f9de:	e8 95 20 02 00       	call   31a78 <do_rdrand>
    f9e3:	85 c0                	test   %eax,%eax
    f9e5:	0f 94 c0             	sete   %al
    f9e8:	84 c0                	test   %al,%al
    f9ea:	74 07                	je     f9f3 <_ZL15__do_get_rand32Pj+0x2c>
    f9ec:	b8 01 00 00 00       	mov    $0x1,%eax
    f9f1:	eb 05                	jmp    f9f8 <_ZL15__do_get_rand32Pj+0x31>
    f9f3:	b8 00 00 00 00       	mov    $0x0,%eax
    f9f8:	c9                   	leave  
    f9f9:	c3                   	ret    

000000000000f9fa <sgx_read_rand>:
    f9fa:	f3 0f 1e fa          	endbr64 
    f9fe:	55                   	push   %rbp
    f9ff:	48 89 e5             	mov    %rsp,%rbp
    fa02:	48 83 ec 30          	sub    $0x30,%rsp
    fa06:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fa0a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fa0e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fa15:	00 00 
    fa17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fa1b:	31 c0                	xor    %eax,%eax
    fa1d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    fa22:	74 07                	je     fa2b <sgx_read_rand+0x31>
    fa24:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    fa29:	75 0a                	jne    fa35 <sgx_read_rand+0x3b>
    fa2b:	b8 02 00 00 00       	mov    $0x2,%eax
    fa30:	e9 cc 00 00 00       	jmp    fb01 <sgx_read_rand+0x107>
    fa35:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fa39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa3d:	48 89 d6             	mov    %rdx,%rsi
    fa40:	48 89 c7             	mov    %rax,%rdi
    fa43:	e8 d2 fc ff ff       	call   f71a <sgx_is_within_enclave>
    fa48:	85 c0                	test   %eax,%eax
    fa4a:	75 1e                	jne    fa6a <sgx_read_rand+0x70>
    fa4c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fa50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa54:	48 89 d6             	mov    %rdx,%rsi
    fa57:	48 89 c7             	mov    %rax,%rdi
    fa5a:	e8 52 fd ff ff       	call   f7b1 <sgx_is_outside_enclave>
    fa5f:	85 c0                	test   %eax,%eax
    fa61:	75 07                	jne    fa6a <sgx_read_rand+0x70>
    fa63:	b8 01 00 00 00       	mov    $0x1,%eax
    fa68:	eb 05                	jmp    fa6f <sgx_read_rand+0x75>
    fa6a:	b8 00 00 00 00       	mov    $0x0,%eax
    fa6f:	84 c0                	test   %al,%al
    fa71:	74 0a                	je     fa7d <sgx_read_rand+0x83>
    fa73:	b8 02 00 00 00       	mov    $0x2,%eax
    fa78:	e9 84 00 00 00       	jmp    fb01 <sgx_read_rand+0x107>
    fa7d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    fa84:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    fa89:	74 56                	je     fae1 <sgx_read_rand+0xe7>
    fa8b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fa8f:	48 89 c7             	mov    %rax,%rdi
    fa92:	e8 30 ff ff ff       	call   f9c7 <_ZL15__do_get_rand32Pj>
    fa97:	89 45 ec             	mov    %eax,-0x14(%rbp)
    fa9a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    fa9e:	74 05                	je     faa5 <sgx_read_rand+0xab>
    faa0:	8b 45 ec             	mov    -0x14(%rbp),%eax
    faa3:	eb 5c                	jmp    fb01 <sgx_read_rand+0x107>
    faa5:	b8 04 00 00 00       	mov    $0x4,%eax
    faaa:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
    faaf:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
    fab4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fab8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fabc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    fac0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fac4:	48 89 ce             	mov    %rcx,%rsi
    fac7:	48 89 c7             	mov    %rax,%rdi
    faca:	e8 20 39 01 00       	call   233ef <memcpy>
    facf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fad3:	48 01 45 d8          	add    %rax,-0x28(%rbp)
    fad7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fadb:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
    fadf:	eb a3                	jmp    fa84 <sgx_read_rand+0x8a>
    fae1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fae5:	b9 04 00 00 00       	mov    $0x4,%ecx
    faea:	ba 00 00 00 00       	mov    $0x0,%edx
    faef:	be 04 00 00 00       	mov    $0x4,%esi
    faf4:	48 89 c7             	mov    %rax,%rdi
    faf7:	e8 b5 3b 01 00       	call   236b1 <memset_s>
    fafc:	b8 00 00 00 00       	mov    $0x0,%eax
    fb01:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    fb05:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    fb0c:	00 00 
    fb0e:	74 05                	je     fb15 <sgx_read_rand+0x11b>
    fb10:	e8 e2 3c 01 00       	call   237f7 <__stack_chk_fail>
    fb15:	c9                   	leave  
    fb16:	c3                   	ret    

000000000000fb17 <check_static_stack_canary>:
    fb17:	f3 0f 1e fa          	endbr64 
    fb1b:	55                   	push   %rbp
    fb1c:	48 89 e5             	mov    %rsp,%rbp
    fb1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb27:	48 2d f8 03 01 00    	sub    $0x103f8,%rax
    fb2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fb31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb35:	48 8b 10             	mov    (%rax),%rdx
    fb38:	48 8d 05 d1 a2 02 00 	lea    0x2a2d1(%rip),%rax        # 39e10 <__intel_security_cookie>
    fb3f:	48 8b 00             	mov    (%rax),%rax
    fb42:	48 39 c2             	cmp    %rax,%rdx
    fb45:	74 07                	je     fb4e <check_static_stack_canary+0x37>
    fb47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fb4c:	eb 05                	jmp    fb53 <check_static_stack_canary+0x3c>
    fb4e:	b8 00 00 00 00       	mov    $0x0,%eax
    fb53:	5d                   	pop    %rbp
    fb54:	c3                   	ret    

000000000000fb55 <sgx_rdpkru>:
    fb55:	f3 0f 1e fa          	endbr64 
    fb59:	55                   	push   %rbp
    fb5a:	48 89 e5             	mov    %rsp,%rbp
    fb5d:	48 83 ec 20          	sub    $0x20,%rsp
    fb61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb65:	e8 91 1f 00 00       	call   11afb <is_pkru_enabled>
    fb6a:	83 f0 01             	xor    $0x1,%eax
    fb6d:	84 c0                	test   %al,%al
    fb6f:	74 07                	je     fb78 <sgx_rdpkru+0x23>
    fb71:	b8 00 00 00 00       	mov    $0x0,%eax
    fb76:	eb 23                	jmp    fb9b <sgx_rdpkru+0x46>
    fb78:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    fb7f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    fb82:	89 c1                	mov    %eax,%ecx
    fb84:	0f 01 ee             	rdpkru 
    fb87:	89 45 f8             	mov    %eax,-0x8(%rbp)
    fb8a:	89 55 fc             	mov    %edx,-0x4(%rbp)
    fb8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb91:	8b 55 f8             	mov    -0x8(%rbp),%edx
    fb94:	89 10                	mov    %edx,(%rax)
    fb96:	b8 01 00 00 00       	mov    $0x1,%eax
    fb9b:	c9                   	leave  
    fb9c:	c3                   	ret    

000000000000fb9d <sgx_wrpkru>:
    fb9d:	f3 0f 1e fa          	endbr64 
    fba1:	55                   	push   %rbp
    fba2:	48 89 e5             	mov    %rsp,%rbp
    fba5:	48 83 ec 20          	sub    $0x20,%rsp
    fba9:	89 7d ec             	mov    %edi,-0x14(%rbp)
    fbac:	e8 4a 1f 00 00       	call   11afb <is_pkru_enabled>
    fbb1:	83 f0 01             	xor    $0x1,%eax
    fbb4:	84 c0                	test   %al,%al
    fbb6:	74 07                	je     fbbf <sgx_wrpkru+0x22>
    fbb8:	b8 00 00 00 00       	mov    $0x0,%eax
    fbbd:	eb 1f                	jmp    fbde <sgx_wrpkru+0x41>
    fbbf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    fbc6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    fbcd:	8b 45 ec             	mov    -0x14(%rbp),%eax
    fbd0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    fbd3:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fbd6:	0f 01 ef             	wrpkru 
    fbd9:	b8 01 00 00 00       	mov    $0x1,%eax
    fbde:	c9                   	leave  
    fbdf:	c3                   	ret    

000000000000fbe0 <memcpy_s>:
    fbe0:	55                   	push   %rbp
    fbe1:	48 89 e5             	mov    %rsp,%rbp
    fbe4:	48 83 ec 20          	sub    $0x20,%rsp
    fbe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fbf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    fbf4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    fbf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbfc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fc00:	73 07                	jae    fc09 <memcpy_s+0x29>
    fc02:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fc07:	eb 1c                	jmp    fc25 <memcpy_s+0x45>
    fc09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fc0d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    fc11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc15:	48 89 ce             	mov    %rcx,%rsi
    fc18:	48 89 c7             	mov    %rax,%rdi
    fc1b:	e8 cf 37 01 00       	call   233ef <memcpy>
    fc20:	b8 00 00 00 00       	mov    $0x0,%eax
    fc25:	c9                   	leave  
    fc26:	c3                   	ret    

000000000000fc27 <_Z24get_dynamic_layout_by_idt>:
    fc27:	f3 0f 1e fa          	endbr64 
    fc2b:	55                   	push   %rbp
    fc2c:	48 89 e5             	mov    %rsp,%rbp
    fc2f:	89 f8                	mov    %edi,%eax
    fc31:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    fc35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    fc3c:	48 8d 05 fd 42 02 00 	lea    0x242fd(%rip),%rax        # 33f40 <g_global_data>
    fc43:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    fc49:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    fc4c:	0f 92 c0             	setb   %al
    fc4f:	84 c0                	test   %al,%al
    fc51:	74 43                	je     fc96 <_Z24get_dynamic_layout_by_idt+0x6f>
    fc53:	48 8d 05 e6 42 02 00 	lea    0x242e6(%rip),%rax        # 33f40 <g_global_data>
    fc5a:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fc5d:	48 83 c2 0a          	add    $0xa,%rdx
    fc61:	48 c1 e2 05          	shl    $0x5,%rdx
    fc65:	48 01 d0             	add    %rdx,%rax
    fc68:	0f b7 00             	movzwl (%rax),%eax
    fc6b:	66 39 45 ec          	cmp    %ax,-0x14(%rbp)
    fc6f:	0f 94 c0             	sete   %al
    fc72:	84 c0                	test   %al,%al
    fc74:	74 1a                	je     fc90 <_Z24get_dynamic_layout_by_idt+0x69>
    fc76:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fc79:	48 83 c0 0a          	add    $0xa,%rax
    fc7d:	48 c1 e0 05          	shl    $0x5,%rax
    fc81:	48 89 c2             	mov    %rax,%rdx
    fc84:	48 8d 05 b5 42 02 00 	lea    0x242b5(%rip),%rax        # 33f40 <g_global_data>
    fc8b:	48 01 d0             	add    %rdx,%rax
    fc8e:	eb 0b                	jmp    fc9b <_Z24get_dynamic_layout_by_idt+0x74>
    fc90:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    fc94:	eb a6                	jmp    fc3c <_Z24get_dynamic_layout_by_idt+0x15>
    fc96:	b8 00 00 00 00       	mov    $0x0,%eax
    fc9b:	5d                   	pop    %rbp
    fc9c:	c3                   	ret    

000000000000fc9d <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>:
    fc9d:	f3 0f 1e fa          	endbr64 
    fca1:	55                   	push   %rbp
    fca2:	48 89 e5             	mov    %rsp,%rbp
    fca5:	53                   	push   %rbx
    fca6:	48 83 ec 38          	sub    $0x38,%rsp
    fcaa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fcae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fcb2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    fcb6:	e8 b7 19 00 00       	call   11672 <get_heap_base>
    fcbb:	48 89 c3             	mov    %rax,%rbx
    fcbe:	e8 65 1a 00 00       	call   11728 <get_heap_min_size>
    fcc3:	48 01 d8             	add    %rbx,%rax
    fcc6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fcca:	e8 c3 19 00 00       	call   11692 <get_heap_size>
    fccf:	48 89 c3             	mov    %rax,%rbx
    fcd2:	e8 51 1a 00 00       	call   11728 <get_heap_min_size>
    fcd7:	48 29 c3             	sub    %rax,%rbx
    fcda:	48 89 d8             	mov    %rbx,%rax
    fcdd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fce1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fce5:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    fce9:	77 46                	ja     fd31 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x94>
    fceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcef:	48 c1 e0 0c          	shl    $0xc,%rax
    fcf3:	48 89 c2             	mov    %rax,%rdx
    fcf6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcfa:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fcfe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fd02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd06:	48 01 d0             	add    %rdx,%rax
    fd09:	48 39 c1             	cmp    %rax,%rcx
    fd0c:	77 23                	ja     fd31 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x94>
    fd0e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    fd13:	74 15                	je     fd2a <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x8d>
    fd15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fd19:	48 c7 00 03 02 00 00 	movq   $0x203,(%rax)
    fd20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fd24:	66 c7 40 08 08 00    	movw   $0x8,0x8(%rax)
    fd2a:	b8 00 00 00 00       	mov    $0x0,%eax
    fd2f:	eb 05                	jmp    fd36 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x99>
    fd31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fd36:	48 83 c4 38          	add    $0x38,%rsp
    fd3a:	5b                   	pop    %rbx
    fd3b:	5d                   	pop    %rbp
    fd3c:	c3                   	ret    

000000000000fd3d <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes>:
    fd3d:	f3 0f 1e fa          	endbr64 
    fd41:	55                   	push   %rbp
    fd42:	48 89 e5             	mov    %rsp,%rbp
    fd45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fd4d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    fd51:	48 8d 05 e0 a0 02 00 	lea    0x2a0e0(%rip),%rax        # 39e38 <rsrv_mem_base>
    fd58:	48 8b 00             	mov    (%rax),%rax
    fd5b:	48 89 c2             	mov    %rax,%rdx
    fd5e:	48 8d 05 e3 a0 02 00 	lea    0x2a0e3(%rip),%rax        # 39e48 <rsrv_mem_min_size>
    fd65:	48 8b 00             	mov    (%rax),%rax
    fd68:	48 01 d0             	add    %rdx,%rax
    fd6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fd6f:	48 8d 05 ca a0 02 00 	lea    0x2a0ca(%rip),%rax        # 39e40 <rsrv_mem_size>
    fd76:	48 8b 10             	mov    (%rax),%rdx
    fd79:	48 8d 05 c8 a0 02 00 	lea    0x2a0c8(%rip),%rax        # 39e48 <rsrv_mem_min_size>
    fd80:	48 8b 00             	mov    (%rax),%rax
    fd83:	48 29 c2             	sub    %rax,%rdx
    fd86:	48 89 d0             	mov    %rdx,%rax
    fd89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fd8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd91:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    fd95:	77 46                	ja     fddd <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa0>
    fd97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd9b:	48 c1 e0 0c          	shl    $0xc,%rax
    fd9f:	48 89 c2             	mov    %rax,%rdx
    fda2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fda6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fdaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fdae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdb2:	48 01 d0             	add    %rdx,%rax
    fdb5:	48 39 c1             	cmp    %rax,%rcx
    fdb8:	77 23                	ja     fddd <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa0>
    fdba:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    fdbf:	74 15                	je     fdd6 <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0x99>
    fdc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fdc5:	48 c7 00 03 02 00 00 	movq   $0x203,(%rax)
    fdcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fdd0:	66 c7 40 08 08 00    	movw   $0x8,0x8(%rax)
    fdd6:	b8 00 00 00 00       	mov    $0x0,%eax
    fddb:	eb 05                	jmp    fde2 <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa5>
    fddd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fde2:	5d                   	pop    %rbp
    fde3:	c3                   	ret    

000000000000fde4 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>:
    fde4:	f3 0f 1e fa          	endbr64 
    fde8:	55                   	push   %rbp
    fde9:	48 89 e5             	mov    %rsp,%rbp
    fdec:	48 83 ec 50          	sub    $0x50,%rsp
    fdf0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fdf4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fdf8:	89 d0                	mov    %edx,%eax
    fdfa:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    fdfe:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    fe02:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
    fe06:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    fe0d:	00 
    fe0e:	66 83 7d cc 00       	cmpw   $0x0,-0x34(%rbp)
    fe13:	74 1d                	je     fe32 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4e>
    fe15:	66 83 7d cc 12       	cmpw   $0x12,-0x34(%rbp)
    fe1a:	77 16                	ja     fe32 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4e>
    fe1c:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax
    fe20:	89 c7                	mov    %eax,%edi
    fe22:	e8 00 fe ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
    fe27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fe2b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fe30:	75 07                	jne    fe39 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x55>
    fe32:	b8 01 00 00 00       	mov    $0x1,%eax
    fe37:	eb 05                	jmp    fe3e <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x5a>
    fe39:	b8 00 00 00 00       	mov    $0x0,%eax
    fe3e:	84 c0                	test   %al,%al
    fe40:	74 0a                	je     fe4c <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x68>
    fe42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fe47:	e9 8c 00 00 00       	jmp    fed8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf4>
    fe4c:	e8 5a 18 02 00       	call   316ab <get_enclave_base>
    fe51:	48 89 c2             	mov    %rax,%rdx
    fe54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe58:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe5c:	48 01 c2             	add    %rax,%rdx
    fe5f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fe63:	48 01 d0             	add    %rdx,%rax
    fe66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fe6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe6e:	8b 40 04             	mov    0x4(%rax),%eax
    fe71:	89 45 ec             	mov    %eax,-0x14(%rbp)
    fe74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe78:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    fe7c:	77 55                	ja     fed3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xef>
    fe7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fe82:	48 c1 e0 0c          	shl    $0xc,%rax
    fe86:	48 89 c2             	mov    %rax,%rdx
    fe89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe8d:	48 01 c2             	add    %rax,%rdx
    fe90:	8b 45 ec             	mov    -0x14(%rbp),%eax
    fe93:	48 c1 e0 0c          	shl    $0xc,%rax
    fe97:	48 89 c1             	mov    %rax,%rcx
    fe9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe9e:	48 01 c8             	add    %rcx,%rax
    fea1:	48 39 c2             	cmp    %rax,%rdx
    fea4:	77 2d                	ja     fed3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xef>
    fea6:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    feab:	74 1f                	je     fecc <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xe8>
    fead:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    feb1:	48 8b 50 18          	mov    0x18(%rax),%rdx
    feb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    feb9:	48 89 10             	mov    %rdx,(%rax)
    febc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fec0:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    fec4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fec8:	66 89 50 08          	mov    %dx,0x8(%rax)
    fecc:	b8 00 00 00 00       	mov    $0x0,%eax
    fed1:	eb 05                	jmp    fed8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf4>
    fed3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fed8:	c9                   	leave  
    fed9:	c3                   	ret    

000000000000feda <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>:
    feda:	f3 0f 1e fa          	endbr64 
    fede:	55                   	push   %rbp
    fedf:	48 89 e5             	mov    %rsp,%rbp
    fee2:	48 83 ec 20          	sub    $0x20,%rsp
    fee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    feea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    feee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    fef2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fef6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    fefa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fefe:	49 89 d0             	mov    %rdx,%r8
    ff01:	b9 00 00 00 00       	mov    $0x0,%ecx
    ff06:	ba 07 00 00 00       	mov    $0x7,%edx
    ff0b:	48 89 c7             	mov    %rax,%rdi
    ff0e:	e8 d1 fe ff ff       	call   fde4 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    ff13:	c9                   	leave  
    ff14:	c3                   	ret    

000000000000ff15 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    ff15:	f3 0f 1e fa          	endbr64 
    ff19:	55                   	push   %rbp
    ff1a:	48 89 e5             	mov    %rsp,%rbp
    ff1d:	48 83 ec 30          	sub    $0x30,%rsp
    ff21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ff29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ff2d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    ff31:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    ff38:	00 
    ff39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff3d:	48 c1 e0 0c          	shl    $0xc,%rax
    ff41:	48 f7 d0             	not    %rax
    ff44:	48 89 c2             	mov    %rax,%rdx
    ff47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff4b:	48 39 c2             	cmp    %rax,%rdx
    ff4e:	73 0a                	jae    ff5a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x45>
    ff50:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ff55:	e9 99 01 00 00       	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    ff5a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ff5e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ff62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff66:	48 89 ce             	mov    %rcx,%rsi
    ff69:	48 89 c7             	mov    %rax,%rdi
    ff6c:	e8 2c fd ff ff       	call   fc9d <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>
    ff71:	85 c0                	test   %eax,%eax
    ff73:	0f 94 c0             	sete   %al
    ff76:	84 c0                	test   %al,%al
    ff78:	74 0a                	je     ff84 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x6f>
    ff7a:	b8 00 00 00 00       	mov    $0x0,%eax
    ff7f:	e9 6f 01 00 00       	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    ff84:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ff88:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ff8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff90:	48 89 ce             	mov    %rcx,%rsi
    ff93:	48 89 c7             	mov    %rax,%rdi
    ff96:	e8 3f ff ff ff       	call   feda <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>
    ff9b:	85 c0                	test   %eax,%eax
    ff9d:	0f 94 c0             	sete   %al
    ffa0:	84 c0                	test   %al,%al
    ffa2:	74 0a                	je     ffae <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x99>
    ffa4:	b8 00 00 00 00       	mov    $0x0,%eax
    ffa9:	e9 45 01 00 00       	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    ffae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ffb2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ffb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffba:	48 89 ce             	mov    %rcx,%rsi
    ffbd:	48 89 c7             	mov    %rax,%rdi
    ffc0:	e8 78 fd ff ff       	call   fd3d <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes>
    ffc5:	85 c0                	test   %eax,%eax
    ffc7:	0f 94 c0             	sete   %al
    ffca:	84 c0                	test   %al,%al
    ffcc:	74 0a                	je     ffd8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xc3>
    ffce:	b8 00 00 00 00       	mov    $0x0,%eax
    ffd3:	e9 1b 01 00 00       	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    ffd8:	bf 13 10 00 00       	mov    $0x1013,%edi
    ffdd:	e8 45 fc ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
    ffe2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ffe6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ffeb:	0f 95 c0             	setne  %al
    ffee:	84 c0                	test   %al,%al
    fff0:	0f 84 9c 00 00 00    	je     10092 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x17d>
    fff6:	66 c7 45 f0 0e 00    	movw   $0xe,-0x10(%rbp)
    fffc:	66 83 7d f0 12       	cmpw   $0x12,-0x10(%rbp)
   10001:	0f 87 e7 00 00 00    	ja     100ee <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1d9>
   10007:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1000e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10012:	8b 40 04             	mov    0x4(%rax),%eax
   10015:	83 c0 01             	add    $0x1,%eax
   10018:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   1001b:	0f 92 c0             	setb   %al
   1001e:	84 c0                	test   %al,%al
   10020:	74 60                	je     10082 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x16d>
   10022:	8b 55 f4             	mov    -0xc(%rbp),%edx
   10025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10029:	48 8b 40 08          	mov    0x8(%rax),%rax
   1002d:	48 89 d1             	mov    %rdx,%rcx
   10030:	48 0f af c8          	imul   %rax,%rcx
   10034:	0f b7 55 f0          	movzwl -0x10(%rbp),%edx
   10038:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   1003c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   10040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10044:	49 89 f8             	mov    %rdi,%r8
   10047:	48 89 c7             	mov    %rax,%rdi
   1004a:	e8 95 fd ff ff       	call   fde4 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
   1004f:	85 c0                	test   %eax,%eax
   10051:	0f 94 c0             	sete   %al
   10054:	84 c0                	test   %al,%al
   10056:	74 24                	je     1007c <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x167>
   10058:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1005d:	74 16                	je     10075 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x160>
   1005f:	8b 55 f4             	mov    -0xc(%rbp),%edx
   10062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10066:	48 8b 40 08          	mov    0x8(%rax),%rax
   1006a:	48 0f af d0          	imul   %rax,%rdx
   1006e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10072:	48 89 10             	mov    %rdx,(%rax)
   10075:	b8 00 00 00 00       	mov    $0x0,%eax
   1007a:	eb 77                	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
   1007c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   10080:	eb 8c                	jmp    1000e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xf9>
   10082:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
   10086:	83 c0 01             	add    $0x1,%eax
   10089:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
   1008d:	e9 6a ff ff ff       	jmp    fffc <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xe7>
   10092:	66 c7 45 f2 0e 00    	movw   $0xe,-0xe(%rbp)
   10098:	66 83 7d f2 12       	cmpw   $0x12,-0xe(%rbp)
   1009d:	77 4f                	ja     100ee <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1d9>
   1009f:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
   100a3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   100a7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   100ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100af:	49 89 c8             	mov    %rcx,%r8
   100b2:	b9 00 00 00 00       	mov    $0x0,%ecx
   100b7:	48 89 c7             	mov    %rax,%rdi
   100ba:	e8 25 fd ff ff       	call   fde4 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
   100bf:	85 c0                	test   %eax,%eax
   100c1:	0f 94 c0             	sete   %al
   100c4:	84 c0                	test   %al,%al
   100c6:	74 19                	je     100e1 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1cc>
   100c8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   100cd:	74 0b                	je     100da <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c5>
   100cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   100d3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   100da:	b8 00 00 00 00       	mov    $0x0,%eax
   100df:	eb 12                	jmp    100f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
   100e1:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
   100e5:	83 c0 01             	add    $0x1,%eax
   100e8:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
   100ec:	eb aa                	jmp    10098 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x183>
   100ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   100f3:	c9                   	leave  
   100f4:	c3                   	ret    

00000000000100f5 <is_dynamic_thread>:
   100f5:	f3 0f 1e fa          	endbr64 
   100f9:	55                   	push   %rbp
   100fa:	48 89 e5             	mov    %rsp,%rbp
   100fd:	48 83 ec 30          	sub    $0x30,%rsp
   10101:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10105:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1010c:	00 00 
   1010e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10112:	31 c0                	xor    %eax,%eax
   10114:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   10119:	74 34                	je     1014f <is_dynamic_thread+0x5a>
   1011b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1011f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10123:	48 89 d1             	mov    %rdx,%rcx
   10126:	ba 00 00 00 00       	mov    $0x0,%edx
   1012b:	be 01 00 00 00       	mov    $0x1,%esi
   10130:	48 89 c7             	mov    %rax,%rdi
   10133:	e8 dd fd ff ff       	call   ff15 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
   10138:	85 c0                	test   %eax,%eax
   1013a:	75 13                	jne    1014f <is_dynamic_thread+0x5a>
   1013c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10140:	48 3d 00 01 00 00    	cmp    $0x100,%rax
   10146:	75 07                	jne    1014f <is_dynamic_thread+0x5a>
   10148:	b8 01 00 00 00       	mov    $0x1,%eax
   1014d:	eb 05                	jmp    10154 <is_dynamic_thread+0x5f>
   1014f:	b8 00 00 00 00       	mov    $0x0,%eax
   10154:	84 c0                	test   %al,%al
   10156:	74 07                	je     1015f <is_dynamic_thread+0x6a>
   10158:	b8 01 00 00 00       	mov    $0x1,%eax
   1015d:	eb 05                	jmp    10164 <is_dynamic_thread+0x6f>
   1015f:	b8 00 00 00 00       	mov    $0x0,%eax
   10164:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10168:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1016f:	00 00 
   10171:	74 05                	je     10178 <is_dynamic_thread+0x83>
   10173:	e8 7f 36 01 00       	call   237f7 <__stack_chk_fail>
   10178:	c9                   	leave  
   10179:	c3                   	ret    

000000000001017a <is_dynamic_thread_exist>:
   1017a:	f3 0f 1e fa          	endbr64 
   1017e:	55                   	push   %rbp
   1017f:	48 89 e5             	mov    %rsp,%rbp
   10182:	48 83 ec 10          	sub    $0x10,%rsp
   10186:	48 8d 05 63 9c 02 00 	lea    0x29c63(%rip),%rax        # 39df0 <EDMM_supported>
   1018d:	8b 00                	mov    (%rax),%eax
   1018f:	85 c0                	test   %eax,%eax
   10191:	75 07                	jne    1019a <is_dynamic_thread_exist+0x20>
   10193:	b8 00 00 00 00       	mov    $0x0,%eax
   10198:	eb 21                	jmp    101bb <is_dynamic_thread_exist+0x41>
   1019a:	bf 12 00 00 00       	mov    $0x12,%edi
   1019f:	e8 83 fa ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
   101a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   101a8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   101ad:	75 07                	jne    101b6 <is_dynamic_thread_exist+0x3c>
   101af:	b8 00 00 00 00       	mov    $0x0,%eax
   101b4:	eb 05                	jmp    101bb <is_dynamic_thread_exist+0x41>
   101b6:	b8 01 00 00 00       	mov    $0x1,%eax
   101bb:	c9                   	leave  
   101bc:	c3                   	ret    

00000000000101bd <get_dynamic_stack_max_page>:
   101bd:	f3 0f 1e fa          	endbr64 
   101c1:	55                   	push   %rbp
   101c2:	48 89 e5             	mov    %rsp,%rbp
   101c5:	48 83 ec 10          	sub    $0x10,%rsp
   101c9:	bf 07 00 00 00       	mov    $0x7,%edi
   101ce:	e8 54 fa ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
   101d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   101d7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   101dc:	75 07                	jne    101e5 <get_dynamic_stack_max_page+0x28>
   101de:	b8 00 00 00 00       	mov    $0x0,%eax
   101e3:	eb 07                	jmp    101ec <get_dynamic_stack_max_page+0x2f>
   101e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101e9:	8b 40 04             	mov    0x4(%rax),%eax
   101ec:	c9                   	leave  
   101ed:	c3                   	ret    

00000000000101ee <do_add_thread>:
   101ee:	f3 0f 1e fa          	endbr64 
   101f2:	55                   	push   %rbp
   101f3:	48 89 e5             	mov    %rsp,%rbp
   101f6:	48 83 ec 50          	sub    $0x50,%rsp
   101fa:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   101fe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10205:	00 00 
   10207:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1020b:	31 c0                	xor    %eax,%eax
   1020d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
   10214:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10218:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1021c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   10223:	00 
   10224:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1022b:	00 
   1022c:	e8 7a 14 02 00       	call   316ab <get_enclave_base>
   10231:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10235:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10239:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1023d:	b9 00 00 00 00       	mov    $0x0,%ecx
   10242:	be 01 00 00 00       	mov    $0x1,%esi
   10247:	48 89 c7             	mov    %rax,%rdi
   1024a:	e8 c6 fc ff ff       	call   ff15 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
   1024f:	85 c0                	test   %eax,%eax
   10251:	0f 95 c0             	setne  %al
   10254:	84 c0                	test   %al,%al
   10256:	74 0a                	je     10262 <do_add_thread+0x74>
   10258:	b8 01 00 00 00       	mov    $0x1,%eax
   1025d:	e9 97 01 00 00       	jmp    103f9 <do_add_thread+0x20b>
   10262:	bf 0e 00 00 00       	mov    $0xe,%edi
   10267:	e8 bb f9 ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
   1026c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10270:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10275:	75 0a                	jne    10281 <do_add_thread+0x93>
   10277:	b8 01 00 00 00       	mov    $0x1,%eax
   1027c:	e9 78 01 00 00       	jmp    103f9 <do_add_thread+0x20b>
   10281:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10285:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10289:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1028d:	48 01 c2             	add    %rax,%rdx
   10290:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10294:	48 01 c2             	add    %rax,%rdx
   10297:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1029b:	48 39 c2             	cmp    %rax,%rdx
   1029e:	0f 95 c0             	setne  %al
   102a1:	84 c0                	test   %al,%al
   102a3:	74 0a                	je     102af <do_add_thread+0xc1>
   102a5:	b8 01 00 00 00       	mov    $0x1,%eax
   102aa:	e9 4a 01 00 00       	jmp    103f9 <do_add_thread+0x20b>
   102af:	66 c7 45 c2 0e 00    	movw   $0xe,-0x3e(%rbp)
   102b5:	66 83 7d c2 12       	cmpw   $0x12,-0x3e(%rbp)
   102ba:	0f 87 88 00 00 00    	ja     10348 <do_add_thread+0x15a>
   102c0:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   102c4:	89 c7                	mov    %eax,%edi
   102c6:	e8 5c f9 ff ff       	call   fc27 <_Z24get_dynamic_layout_by_idt>
   102cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   102cf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   102d4:	74 19                	je     102ef <do_add_thread+0x101>
   102d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   102da:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   102de:	0f b7 c0             	movzwl %ax,%eax
   102e1:	83 e0 20             	and    $0x20,%eax
   102e4:	85 c0                	test   %eax,%eax
   102e6:	74 07                	je     102ef <do_add_thread+0x101>
   102e8:	b8 01 00 00 00       	mov    $0x1,%eax
   102ed:	eb 05                	jmp    102f4 <do_add_thread+0x106>
   102ef:	b8 00 00 00 00       	mov    $0x0,%eax
   102f4:	84 c0                	test   %al,%al
   102f6:	74 40                	je     10338 <do_add_thread+0x14a>
   102f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   102fc:	8b 40 04             	mov    0x4(%rax),%eax
   102ff:	c1 e0 0c             	shl    $0xc,%eax
   10302:	89 c1                	mov    %eax,%ecx
   10304:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10308:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1030c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10310:	48 01 c2             	add    %rax,%rdx
   10313:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10317:	48 01 d0             	add    %rdx,%rax
   1031a:	48 89 ce             	mov    %rcx,%rsi
   1031d:	48 89 c7             	mov    %rax,%rdi
   10320:	e8 63 7e 00 00       	call   18188 <mm_commit>
   10325:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   10328:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1032c:	74 0a                	je     10338 <do_add_thread+0x14a>
   1032e:	b8 01 00 00 00       	mov    $0x1,%eax
   10333:	e9 c1 00 00 00       	jmp    103f9 <do_add_thread+0x20b>
   10338:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   1033c:	83 c0 01             	add    $0x1,%eax
   1033f:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
   10343:	e9 6d ff ff ff       	jmp    102b5 <do_add_thread+0xc7>
   10348:	48 8d 05 f1 3b 02 00 	lea    0x23bf1(%rip),%rax        # 33f40 <g_global_data>
   1034f:	48 8d 80 f0 00 00 00 	lea    0xf0(%rax),%rax
   10356:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1035a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1035e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10362:	b9 48 00 00 00       	mov    $0x48,%ecx
   10367:	be 00 10 00 00       	mov    $0x1000,%esi
   1036c:	48 89 c7             	mov    %rax,%rdi
   1036f:	e8 6c f8 ff ff       	call   fbe0 <memcpy_s>
   10374:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10378:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1037c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10380:	48 01 d0             	add    %rdx,%rax
   10383:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10387:	48 89 c2             	mov    %rax,%rdx
   1038a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1038e:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10392:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10396:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1039a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1039e:	48 01 d0             	add    %rdx,%rax
   103a1:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   103a5:	48 89 c2             	mov    %rax,%rdx
   103a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103ac:	48 89 50 30          	mov    %rdx,0x30(%rax)
   103b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103b4:	48 8b 50 38          	mov    0x38(%rax),%rdx
   103b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103bc:	48 01 d0             	add    %rdx,%rax
   103bf:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   103c3:	48 89 c2             	mov    %rax,%rdx
   103c6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103ca:	48 89 50 38          	mov    %rdx,0x38(%rax)
   103ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103d2:	ba 00 01 00 00       	mov    $0x100,%edx
   103d7:	be 00 10 00 00       	mov    $0x1000,%esi
   103dc:	48 89 c7             	mov    %rax,%rdi
   103df:	e8 6f 7e 00 00       	call   18253 <mm_modify_type>
   103e4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   103e7:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   103eb:	74 07                	je     103f4 <do_add_thread+0x206>
   103ed:	b8 01 00 00 00       	mov    $0x1,%eax
   103f2:	eb 05                	jmp    103f9 <do_add_thread+0x20b>
   103f4:	b8 00 00 00 00       	mov    $0x0,%eax
   103f9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   103fd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10404:	00 00 
   10406:	74 05                	je     1040d <do_add_thread+0x21f>
   10408:	e8 ea 33 01 00       	call   237f7 <__stack_chk_fail>
   1040d:	c9                   	leave  
   1040e:	c3                   	ret    

000000000001040f <memcpy_s>:
   1040f:	55                   	push   %rbp
   10410:	48 89 e5             	mov    %rsp,%rbp
   10413:	48 83 ec 20          	sub    $0x20,%rsp
   10417:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1041b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1041f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10423:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   10427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1042b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1042f:	73 07                	jae    10438 <memcpy_s+0x29>
   10431:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10436:	eb 1c                	jmp    10454 <memcpy_s+0x45>
   10438:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1043c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10444:	48 89 ce             	mov    %rcx,%rsi
   10447:	48 89 c7             	mov    %rax,%rdi
   1044a:	e8 a0 2f 01 00       	call   233ef <memcpy>
   1044f:	b8 00 00 00 00       	mov    $0x0,%eax
   10454:	c9                   	leave  
   10455:	c3                   	ret    

0000000000010456 <_pthread_thread_run>:
   10456:	f3 0f 1e fa          	endbr64 
   1045a:	55                   	push   %rbp
   1045b:	48 89 e5             	mov    %rsp,%rbp
   1045e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10462:	b8 00 00 00 00       	mov    $0x0,%eax
   10467:	5d                   	pop    %rbp
   10468:	c3                   	ret    

0000000000010469 <_Z16_pthread_enabledv>:
   10469:	f3 0f 1e fa          	endbr64 
   1046d:	55                   	push   %rbp
   1046e:	48 89 e5             	mov    %rsp,%rbp
   10471:	b8 00 00 00 00       	mov    $0x0,%eax
   10476:	5d                   	pop    %rbp
   10477:	c3                   	ret    

0000000000010478 <_Z24_pthread_tls_store_state9_status_t>:
   10478:	f3 0f 1e fa          	endbr64 
   1047c:	55                   	push   %rbp
   1047d:	48 89 e5             	mov    %rsp,%rbp
   10480:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10483:	90                   	nop
   10484:	5d                   	pop    %rbp
   10485:	c3                   	ret    

0000000000010486 <_Z22_pthread_tls_get_statev>:
   10486:	f3 0f 1e fa          	endbr64 
   1048a:	55                   	push   %rbp
   1048b:	48 89 e5             	mov    %rsp,%rbp
   1048e:	b8 00 00 00 00       	mov    $0x0,%eax
   10493:	5d                   	pop    %rbp
   10494:	c3                   	ret    

0000000000010495 <_Z26_pthread_tls_store_contextPv>:
   10495:	f3 0f 1e fa          	endbr64 
   10499:	55                   	push   %rbp
   1049a:	48 89 e5             	mov    %rsp,%rbp
   1049d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104a1:	90                   	nop
   104a2:	5d                   	pop    %rbp
   104a3:	c3                   	ret    

00000000000104a4 <_Z20_pthread_wakeup_joinPv>:
   104a4:	f3 0f 1e fa          	endbr64 
   104a8:	55                   	push   %rbp
   104a9:	48 89 e5             	mov    %rsp,%rbp
   104ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104b0:	90                   	nop
   104b1:	5d                   	pop    %rbp
   104b2:	c3                   	ret    

00000000000104b3 <_Z24_pthread_tls_destructorsv>:
   104b3:	f3 0f 1e fa          	endbr64 
   104b7:	55                   	push   %rbp
   104b8:	48 89 e5             	mov    %rsp,%rbp
   104bb:	90                   	nop
   104bc:	5d                   	pop    %rbp
   104bd:	c3                   	ret    

00000000000104be <tc_set_idle>:
   104be:	f3 0f 1e fa          	endbr64 
   104c2:	55                   	push   %rbp
   104c3:	48 89 e5             	mov    %rsp,%rbp
   104c6:	90                   	nop
   104c7:	5d                   	pop    %rbp
   104c8:	c3                   	ret    

00000000000104c9 <_ZL16is_ecall_allowedj>:
   104c9:	f3 0f 1e fa          	endbr64 
   104cd:	55                   	push   %rbp
   104ce:	48 89 e5             	mov    %rsp,%rbp
   104d1:	48 83 ec 30          	sub    $0x30,%rsp
   104d5:	89 7d dc             	mov    %edi,-0x24(%rbp)
   104d8:	8b 55 dc             	mov    -0x24(%rbp),%edx
   104db:	48 8d 05 be 98 02 00 	lea    0x298be(%rip),%rax        # 39da0 <g_ecall_table>
   104e2:	48 8b 00             	mov    (%rax),%rax
   104e5:	48 39 c2             	cmp    %rax,%rdx
   104e8:	72 0a                	jb     104f4 <_ZL16is_ecall_allowedj+0x2b>
   104ea:	b8 01 10 00 00       	mov    $0x1001,%eax
   104ef:	e9 c7 00 00 00       	jmp    105bb <_ZL16is_ecall_allowedj+0xf2>
   104f4:	e8 fd 11 02 00       	call   316f6 <get_thread_data>
   104f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   104fd:	0f ae e8             	lfence 
   10500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10504:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10508:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1050c:	48 8b 40 10          	mov    0x10(%rax),%rax
   10510:	48 39 c2             	cmp    %rax,%rdx
   10513:	75 2d                	jne    10542 <_ZL16is_ecall_allowedj+0x79>
   10515:	48 8d 05 84 98 02 00 	lea    0x29884(%rip),%rax        # 39da0 <g_ecall_table>
   1051c:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1051f:	48 c1 e2 04          	shl    $0x4,%rdx
   10523:	48 01 d0             	add    %rdx,%rax
   10526:	48 83 c0 10          	add    $0x10,%rax
   1052a:	0f b6 00             	movzbl (%rax),%eax
   1052d:	84 c0                	test   %al,%al
   1052f:	74 0a                	je     1053b <_ZL16is_ecall_allowedj+0x72>
   10531:	b8 07 10 00 00       	mov    $0x1007,%eax
   10536:	e9 80 00 00 00       	jmp    105bb <_ZL16is_ecall_allowedj+0xf2>
   1053b:	b8 00 00 00 00       	mov    $0x0,%eax
   10540:	eb 79                	jmp    105bb <_ZL16is_ecall_allowedj+0xf2>
   10542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10546:	48 8b 40 08          	mov    0x8(%rax),%rax
   1054a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1054e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10552:	48 8b 40 20          	mov    0x20(%rax),%rax
   10556:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
   1055c:	74 05                	je     10563 <_ZL16is_ecall_allowedj+0x9a>
   1055e:	e8 38 15 02 00       	call   31a9b <abort>
   10563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10567:	48 8b 40 28          	mov    0x28(%rax),%rax
   1056b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1056f:	48 8d 05 8a 1a 02 00 	lea    0x21a8a(%rip),%rax        # 32000 <g_dyn_entry_table>
   10576:	48 8b 00             	mov    (%rax),%rax
   10579:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1057d:	72 07                	jb     10586 <_ZL16is_ecall_allowedj+0xbd>
   1057f:	b8 01 10 00 00       	mov    $0x1001,%eax
   10584:	eb 35                	jmp    105bb <_ZL16is_ecall_allowedj+0xf2>
   10586:	48 8d 05 13 98 02 00 	lea    0x29813(%rip),%rax        # 39da0 <g_ecall_table>
   1058d:	48 8b 00             	mov    (%rax),%rax
   10590:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
   10595:	48 89 c2             	mov    %rax,%rdx
   10598:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1059b:	48 01 c2             	add    %rax,%rdx
   1059e:	48 8d 05 5b 1a 02 00 	lea    0x21a5b(%rip),%rax        # 32000 <g_dyn_entry_table>
   105a5:	0f b6 44 10 08       	movzbl 0x8(%rax,%rdx,1),%eax
   105aa:	84 c0                	test   %al,%al
   105ac:	74 07                	je     105b5 <_ZL16is_ecall_allowedj+0xec>
   105ae:	b8 00 00 00 00       	mov    $0x0,%eax
   105b3:	eb 05                	jmp    105ba <_ZL16is_ecall_allowedj+0xf1>
   105b5:	b8 07 10 00 00       	mov    $0x1007,%eax
   105ba:	90                   	nop
   105bb:	c9                   	leave  
   105bc:	c3                   	ret    

00000000000105bd <_ZL13get_func_addrjPPv>:
   105bd:	f3 0f 1e fa          	endbr64 
   105c1:	55                   	push   %rbp
   105c2:	48 89 e5             	mov    %rsp,%rbp
   105c5:	48 83 ec 20          	sub    $0x20,%rsp
   105c9:	89 7d ec             	mov    %edi,-0x14(%rbp)
   105cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   105d0:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
   105d4:	75 15                	jne    105eb <_ZL13get_func_addrjPPv+0x2e>
   105d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105da:	48 8d 15 75 fe ff ff 	lea    -0x18b(%rip),%rdx        # 10456 <_pthread_thread_run>
   105e1:	48 89 10             	mov    %rdx,(%rax)
   105e4:	b8 00 00 00 00       	mov    $0x0,%eax
   105e9:	eb 60                	jmp    1064b <_ZL13get_func_addrjPPv+0x8e>
   105eb:	8b 45 ec             	mov    -0x14(%rbp),%eax
   105ee:	89 c7                	mov    %eax,%edi
   105f0:	e8 d4 fe ff ff       	call   104c9 <_ZL16is_ecall_allowedj>
   105f5:	89 45 fc             	mov    %eax,-0x4(%rbp)
   105f8:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   105fc:	74 05                	je     10603 <_ZL13get_func_addrjPPv+0x46>
   105fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
   10601:	eb 48                	jmp    1064b <_ZL13get_func_addrjPPv+0x8e>
   10603:	48 8d 05 96 97 02 00 	lea    0x29796(%rip),%rax        # 39da0 <g_ecall_table>
   1060a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1060d:	48 c1 e2 04          	shl    $0x4,%rdx
   10611:	48 01 d0             	add    %rdx,%rax
   10614:	48 83 c0 08          	add    $0x8,%rax
   10618:	48 8b 10             	mov    (%rax),%rdx
   1061b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1061f:	48 89 10             	mov    %rdx,(%rax)
   10622:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10626:	48 8b 00             	mov    (%rax),%rax
   10629:	be 00 00 00 00       	mov    $0x0,%esi
   1062e:	48 89 c7             	mov    %rax,%rdi
   10631:	e8 e4 f0 ff ff       	call   f71a <sgx_is_within_enclave>
   10636:	85 c0                	test   %eax,%eax
   10638:	0f 94 c0             	sete   %al
   1063b:	84 c0                	test   %al,%al
   1063d:	74 07                	je     10646 <_ZL13get_func_addrjPPv+0x89>
   1063f:	b8 01 00 00 00       	mov    $0x1,%eax
   10644:	eb 05                	jmp    1064b <_ZL13get_func_addrjPPv+0x8e>
   10646:	b8 00 00 00 00       	mov    $0x0,%eax
   1064b:	c9                   	leave  
   1064c:	c3                   	ret    

000000000001064d <_ZL11do_save_tcsPv>:
   1064d:	f3 0f 1e fa          	endbr64 
   10651:	55                   	push   %rbp
   10652:	48 89 e5             	mov    %rsp,%rbp
   10655:	48 83 ec 30          	sub    $0x30,%rsp
   10659:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1065d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10664:	00 00 
   10666:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1066a:	31 c0                	xor    %eax,%eax
   1066c:	48 8b 05 95 0f 04 00 	mov    0x40f95(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   10673:	48 85 c0             	test   %rax,%rax
   10676:	0f 94 c0             	sete   %al
   10679:	0f b6 c0             	movzbl %al,%eax
   1067c:	48 85 c0             	test   %rax,%rax
   1067f:	74 4b                	je     106cc <_ZL11do_save_tcsPv+0x7f>
   10681:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10688:	00 
   10689:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1068d:	be 08 00 00 00       	mov    $0x8,%esi
   10692:	48 89 c7             	mov    %rax,%rdi
   10695:	e8 60 f3 ff ff       	call   f9fa <sgx_read_rand>
   1069a:	85 c0                	test   %eax,%eax
   1069c:	0f 95 c0             	setne  %al
   1069f:	84 c0                	test   %al,%al
   106a1:	74 07                	je     106aa <_ZL11do_save_tcsPv+0x5d>
   106a3:	b8 01 00 00 00       	mov    $0x1,%eax
   106a8:	eb 72                	jmp    1071c <_ZL11do_save_tcsPv+0xcf>
   106aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106ae:	48 85 c0             	test   %rax,%rax
   106b1:	75 02                	jne    106b5 <_ZL11do_save_tcsPv+0x68>
   106b3:	eb d4                	jmp    10689 <_ZL11do_save_tcsPv+0x3c>
   106b5:	48 8b 05 4c 0f 04 00 	mov    0x40f4c(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   106bc:	48 85 c0             	test   %rax,%rax
   106bf:	75 0b                	jne    106cc <_ZL11do_save_tcsPv+0x7f>
   106c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106c5:	48 89 05 3c 0f 04 00 	mov    %rax,0x40f3c(%rip)        # 51608 <_ZL12g_tcs_cookie>
   106cc:	bf 10 00 00 00       	mov    $0x10,%edi
   106d1:	e8 51 f3 00 00       	call   1fa27 <dlmalloc>
   106d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   106da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   106df:	75 07                	jne    106e8 <_ZL11do_save_tcsPv+0x9b>
   106e1:	b8 01 00 00 00       	mov    $0x1,%eax
   106e6:	eb 34                	jmp    1071c <_ZL11do_save_tcsPv+0xcf>
   106e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   106ec:	48 8b 05 15 0f 04 00 	mov    0x40f15(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   106f3:	48 31 c2             	xor    %rax,%rdx
   106f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   106fa:	48 89 10             	mov    %rdx,(%rax)
   106fd:	48 8b 15 fc 0e 04 00 	mov    0x40efc(%rip),%rdx        # 51600 <_ZL10g_tcs_node>
   10704:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10708:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1070c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10710:	48 89 05 e9 0e 04 00 	mov    %rax,0x40ee9(%rip)        # 51600 <_ZL10g_tcs_node>
   10717:	b8 00 00 00 00       	mov    $0x0,%eax
   1071c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10720:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10727:	00 00 
   10729:	74 05                	je     10730 <_ZL11do_save_tcsPv+0xe3>
   1072b:	e8 c7 30 01 00       	call   237f7 <__stack_chk_fail>
   10730:	c9                   	leave  
   10731:	c3                   	ret    

0000000000010732 <_ZL10do_del_tcsPv>:
   10732:	f3 0f 1e fa          	endbr64 
   10736:	55                   	push   %rbp
   10737:	48 89 e5             	mov    %rsp,%rbp
   1073a:	48 83 ec 30          	sub    $0x30,%rsp
   1073e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10742:	e8 4a 13 00 00       	call   11a91 <is_utility_thread>
   10747:	83 f0 01             	xor    $0x1,%eax
   1074a:	84 c0                	test   %al,%al
   1074c:	0f 85 c1 00 00 00    	jne    10813 <_ZL10do_del_tcsPv+0xe1>
   10752:	48 8b 05 a7 0e 04 00 	mov    0x40ea7(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   10759:	48 85 c0             	test   %rax,%rax
   1075c:	0f 84 b2 00 00 00    	je     10814 <_ZL10do_del_tcsPv+0xe2>
   10762:	48 8b 05 97 0e 04 00 	mov    0x40e97(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   10769:	48 8b 10             	mov    (%rax),%rdx
   1076c:	48 8b 05 95 0e 04 00 	mov    0x40e95(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   10773:	48 31 d0             	xor    %rdx,%rax
   10776:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1077a:	75 2b                	jne    107a7 <_ZL10do_del_tcsPv+0x75>
   1077c:	48 8b 05 7d 0e 04 00 	mov    0x40e7d(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   10783:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10787:	48 8b 05 72 0e 04 00 	mov    0x40e72(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   1078e:	48 8b 40 08          	mov    0x8(%rax),%rax
   10792:	48 89 05 67 0e 04 00 	mov    %rax,0x40e67(%rip)        # 51600 <_ZL10g_tcs_node>
   10799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1079d:	48 89 c7             	mov    %rax,%rdi
   107a0:	e8 7d fd 00 00       	call   20522 <dlfree>
   107a5:	eb 6d                	jmp    10814 <_ZL10do_del_tcsPv+0xe2>
   107a7:	48 8b 05 52 0e 04 00 	mov    0x40e52(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   107ae:	48 8b 40 08          	mov    0x8(%rax),%rax
   107b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   107b6:	48 8b 05 43 0e 04 00 	mov    0x40e43(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   107bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   107c1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   107c6:	74 4c                	je     10814 <_ZL10do_del_tcsPv+0xe2>
   107c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107cc:	48 8b 10             	mov    (%rax),%rdx
   107cf:	48 8b 05 32 0e 04 00 	mov    0x40e32(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   107d6:	48 31 d0             	xor    %rdx,%rax
   107d9:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   107dd:	75 1e                	jne    107fd <_ZL10do_del_tcsPv+0xcb>
   107df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107e3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   107e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   107eb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   107ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107f3:	48 89 c7             	mov    %rax,%rdi
   107f6:	e8 27 fd 00 00       	call   20522 <dlfree>
   107fb:	eb 17                	jmp    10814 <_ZL10do_del_tcsPv+0xe2>
   107fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10801:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10809:	48 8b 40 08          	mov    0x8(%rax),%rax
   1080d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10811:	eb ae                	jmp    107c1 <_ZL10do_del_tcsPv+0x8f>
   10813:	90                   	nop
   10814:	c9                   	leave  
   10815:	c3                   	ret    

0000000000010816 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
   10816:	f3 0f 1e fa          	endbr64 
   1081a:	55                   	push   %rbp
   1081b:	48 89 e5             	mov    %rsp,%rbp
   1081e:	53                   	push   %rbx
   1081f:	48 83 ec 48          	sub    $0x48,%rsp
   10823:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10827:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1082b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1082f:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   10836:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1083a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1083e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10842:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10846:	0f 83 1a 01 00 00    	jae    10966 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x150>
   1084c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10850:	0f b7 00             	movzwl (%rax),%eax
   10853:	0f b7 c0             	movzwl %ax,%eax
   10856:	25 00 10 00 00       	and    $0x1000,%eax
   1085b:	85 c0                	test   %eax,%eax
   1085d:	75 27                	jne    10886 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
   1085f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10863:	48 8b 40 18          	mov    0x18(%rax),%rax
   10867:	25 00 01 00 00       	and    $0x100,%eax
   1086c:	48 85 c0             	test   %rax,%rax
   1086f:	74 15                	je     10886 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
   10871:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10875:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   10879:	66 83 f8 03          	cmp    $0x3,%ax
   1087d:	75 07                	jne    10886 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
   1087f:	b8 01 00 00 00       	mov    $0x1,%eax
   10884:	eb 05                	jmp    1088b <_ZL18add_static_threadsPVK9_layout_tS1_m+0x75>
   10886:	b8 00 00 00 00       	mov    $0x0,%eax
   1088b:	84 c0                	test   %al,%al
   1088d:	74 3f                	je     108ce <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb8>
   1088f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10893:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10897:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1089b:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
   1089f:	e8 07 0e 02 00       	call   316ab <get_enclave_base>
   108a4:	48 01 d8             	add    %rbx,%rax
   108a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   108ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108af:	48 89 c7             	mov    %rax,%rdi
   108b2:	e8 96 fd ff ff       	call   1064d <_ZL11do_save_tcsPv>
   108b7:	85 c0                	test   %eax,%eax
   108b9:	0f 95 c0             	setne  %al
   108bc:	84 c0                	test   %al,%al
   108be:	0f 84 98 00 00 00    	je     1095c <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
   108c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   108c9:	e9 9d 00 00 00       	jmp    1096b <_ZL18add_static_threadsPVK9_layout_tS1_m+0x155>
   108ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108d2:	0f b7 00             	movzwl (%rax),%eax
   108d5:	0f b7 c0             	movzwl %ax,%eax
   108d8:	25 00 10 00 00       	and    $0x1000,%eax
   108dd:	85 c0                	test   %eax,%eax
   108df:	0f 95 c0             	setne  %al
   108e2:	84 c0                	test   %al,%al
   108e4:	74 76                	je     1095c <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
   108e6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   108ed:	00 
   108ee:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   108f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108f9:	8b 40 04             	mov    0x4(%rax),%eax
   108fc:	39 45 d0             	cmp    %eax,-0x30(%rbp)
   108ff:	0f 92 c0             	setb   %al
   10902:	84 c0                	test   %al,%al
   10904:	74 56                	je     1095c <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
   10906:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1090a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1090e:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   10912:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10916:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   1091a:	0f b7 c0             	movzwl %ax,%eax
   1091d:	f7 d8                	neg    %eax
   1091f:	48 98                	cltq   
   10921:	48 c1 e0 05          	shl    $0x5,%rax
   10925:	48 89 c2             	mov    %rax,%rdx
   10928:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1092c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10930:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10934:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10938:	48 89 c6             	mov    %rax,%rsi
   1093b:	48 89 cf             	mov    %rcx,%rdi
   1093e:	e8 d3 fe ff ff       	call   10816 <_ZL18add_static_threadsPVK9_layout_tS1_m>
   10943:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   10946:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1094a:	0f 95 c0             	setne  %al
   1094d:	84 c0                	test   %al,%al
   1094f:	74 05                	je     10956 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x140>
   10951:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   10954:	eb 15                	jmp    1096b <_ZL18add_static_threadsPVK9_layout_tS1_m+0x155>
   10956:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   1095a:	eb 99                	jmp    108f5 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xdf>
   1095c:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
   10961:	e9 d8 fe ff ff       	jmp    1083e <_ZL18add_static_threadsPVK9_layout_tS1_m+0x28>
   10966:	b8 00 00 00 00       	mov    $0x0,%eax
   1096b:	48 83 c4 48          	add    $0x48,%rsp
   1096f:	5b                   	pop    %rbx
   10970:	5d                   	pop    %rbp
   10971:	c3                   	ret    

0000000000010972 <_ZL10trts_ecalljPv>:
   10972:	f3 0f 1e fa          	endbr64 
   10976:	55                   	push   %rbp
   10977:	48 89 e5             	mov    %rsp,%rbp
   1097a:	48 83 ec 40          	sub    $0x40,%rsp
   1097e:	89 7d cc             	mov    %edi,-0x34(%rbp)
   10981:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   10985:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1098c:	00 00 
   1098e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10992:	31 c0                	xor    %eax,%eax
   10994:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
   1099b:	0f b6 05 5e a6 02 00 	movzbl 0x2a65e(%rip),%eax        # 3b000 <_ZL16g_is_first_ecall>
   109a2:	0f b6 c0             	movzbl %al,%eax
   109a5:	48 85 c0             	test   %rax,%rax
   109a8:	0f 95 c0             	setne  %al
   109ab:	84 c0                	test   %al,%al
   109ad:	0f 84 01 01 00 00    	je     10ab4 <_ZL10trts_ecalljPv+0x142>
   109b3:	e8 3e 0d 02 00       	call   316f6 <get_thread_data>
   109b8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   109bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109c0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   109c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109c8:	48 8b 40 10          	mov    0x10(%rax),%rax
   109cc:	48 39 c2             	cmp    %rax,%rdx
   109cf:	74 0a                	je     109db <_ZL10trts_ecalljPv+0x69>
   109d1:	b8 07 10 00 00       	mov    $0x1007,%eax
   109d6:	e9 19 01 00 00       	jmp    10af4 <_ZL10trts_ecalljPv+0x182>
   109db:	48 8d 3d 2e 0c 04 00 	lea    0x40c2e(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   109e2:	e8 b5 8c 00 00       	call   1969c <sgx_spin_lock>
   109e7:	0f b6 05 12 a6 02 00 	movzbl 0x2a612(%rip),%eax        # 3b000 <_ZL16g_is_first_ecall>
   109ee:	84 c0                	test   %al,%al
   109f0:	0f 84 b2 00 00 00    	je     10aa8 <_ZL10trts_ecalljPv+0x136>
   109f6:	48 8d 05 f3 93 02 00 	lea    0x293f3(%rip),%rax        # 39df0 <EDMM_supported>
   109fd:	8b 00                	mov    (%rax),%eax
   109ff:	85 c0                	test   %eax,%eax
   10a01:	0f 84 95 00 00 00    	je     10a9c <_ZL10trts_ecalljPv+0x12a>
   10a07:	48 8d 05 32 35 02 00 	lea    0x23532(%rip),%rax        # 33f40 <g_global_data>
   10a0e:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   10a14:	89 c0                	mov    %eax,%eax
   10a16:	48 c1 e0 05          	shl    $0x5,%rax
   10a1a:	48 89 c2             	mov    %rax,%rdx
   10a1d:	48 8d 05 1c 35 02 00 	lea    0x2351c(%rip),%rax        # 33f40 <g_global_data>
   10a24:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
   10a2b:	48 01 d0             	add    %rdx,%rax
   10a2e:	ba 00 00 00 00       	mov    $0x0,%edx
   10a33:	48 89 c6             	mov    %rax,%rsi
   10a36:	48 8d 05 03 35 02 00 	lea    0x23503(%rip),%rax        # 33f40 <g_global_data>
   10a3d:	48 8d b8 40 01 00 00 	lea    0x140(%rax),%rdi
   10a44:	e8 cd fd ff ff       	call   10816 <_ZL18add_static_threadsPVK9_layout_tS1_m>
   10a49:	85 c0                	test   %eax,%eax
   10a4b:	0f 95 c0             	setne  %al
   10a4e:	84 c0                	test   %al,%al
   10a50:	74 16                	je     10a68 <_ZL10trts_ecalljPv+0xf6>
   10a52:	48 8d 3d b7 0b 04 00 	lea    0x40bb7(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   10a59:	e8 d9 8c 00 00       	call   19737 <sgx_spin_unlock>
   10a5e:	b8 01 00 00 00       	mov    $0x1,%eax
   10a63:	e9 8c 00 00 00       	jmp    10af4 <_ZL10trts_ecalljPv+0x182>
   10a68:	e8 3e 0c 02 00       	call   316ab <get_enclave_base>
   10a6d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10a71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a75:	48 89 c7             	mov    %rax,%rdi
   10a78:	e8 44 26 00 00       	call   130c1 <change_protection>
   10a7d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   10a80:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   10a84:	0f 95 c0             	setne  %al
   10a87:	84 c0                	test   %al,%al
   10a89:	74 11                	je     10a9c <_ZL10trts_ecalljPv+0x12a>
   10a8b:	48 8d 3d 7e 0b 04 00 	lea    0x40b7e(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   10a92:	e8 a0 8c 00 00       	call   19737 <sgx_spin_unlock>
   10a97:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   10a9a:	eb 58                	jmp    10af4 <_ZL10trts_ecalljPv+0x182>
   10a9c:	e8 c5 2d 00 00       	call   13866 <init_global_object>
   10aa1:	c6 05 58 a5 02 00 00 	movb   $0x0,0x2a558(%rip)        # 3b000 <_ZL16g_is_first_ecall>
   10aa8:	48 8d 3d 61 0b 04 00 	lea    0x40b61(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   10aaf:	e8 83 8c 00 00       	call   19737 <sgx_spin_unlock>
   10ab4:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   10abb:	00 
   10abc:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   10ac0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   10ac3:	48 89 d6             	mov    %rdx,%rsi
   10ac6:	89 c7                	mov    %eax,%edi
   10ac8:	e8 f0 fa ff ff       	call   105bd <_ZL13get_func_addrjPPv>
   10acd:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   10ad0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   10ad4:	75 1b                	jne    10af1 <_ZL10trts_ecalljPv+0x17f>
   10ad6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ada:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10ade:	0f ae e8             	lfence 
   10ae1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10ae5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10ae9:	48 89 c7             	mov    %rax,%rdi
   10aec:	ff d2                	call   *%rdx
   10aee:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   10af1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   10af4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10af8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10aff:	00 00 
   10b01:	74 05                	je     10b08 <_ZL10trts_ecalljPv+0x196>
   10b03:	e8 ef 2c 01 00       	call   237f7 <__stack_chk_fail>
   10b08:	c9                   	leave  
   10b09:	c3                   	ret    

0000000000010b0a <_ZL24init_static_stack_canaryPv>:
   10b0a:	f3 0f 1e fa          	endbr64 
   10b0e:	55                   	push   %rbp
   10b0f:	48 89 e5             	mov    %rsp,%rbp
   10b12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b1a:	48 2d f8 03 01 00    	sub    $0x103f8,%rax
   10b20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b24:	48 8d 05 e5 92 02 00 	lea    0x292e5(%rip),%rax        # 39e10 <__intel_security_cookie>
   10b2b:	48 8b 10             	mov    (%rax),%rdx
   10b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b32:	48 89 10             	mov    %rdx,(%rax)
   10b35:	90                   	nop
   10b36:	5d                   	pop    %rbp
   10b37:	c3                   	ret    

0000000000010b38 <do_init_thread>:
   10b38:	f3 0f 1e fa          	endbr64 
   10b3c:	55                   	push   %rbp
   10b3d:	48 89 e5             	mov    %rsp,%rbp
   10b40:	48 83 ec 50          	sub    $0x50,%rsp
   10b44:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10b48:	89 f0                	mov    %esi,%eax
   10b4a:	88 45 b4             	mov    %al,-0x4c(%rbp)
   10b4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b54:	00 00 
   10b56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b5a:	31 c0                	xor    %eax,%eax
   10b5c:	48 8d 05 dd 33 02 00 	lea    0x233dd(%rip),%rax        # 33f40 <g_global_data>
   10b63:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10b67:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b6b:	48 01 d0             	add    %rdx,%rax
   10b6e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10b72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b76:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   10b7d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10b81:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10b86:	0f 94 c0             	sete   %al
   10b89:	88 45 c3             	mov    %al,-0x3d(%rbp)
   10b8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b90:	48 8b 40 28          	mov    0x28(%rax),%rax
   10b94:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10b98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b9c:	48 8b 40 30          	mov    0x30(%rax),%rax
   10ba0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10ba4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ba8:	b9 a0 00 00 00       	mov    $0xa0,%ecx
   10bad:	48 8d 15 8c 33 02 00 	lea    0x2338c(%rip),%rdx        # 33f40 <g_global_data>
   10bb4:	48 8d 52 50          	lea    0x50(%rdx),%rdx
   10bb8:	be 00 10 00 00       	mov    $0x1000,%esi
   10bbd:	48 89 c7             	mov    %rax,%rdi
   10bc0:	e8 4a f8 ff ff       	call   1040f <memcpy_s>
   10bc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bc9:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10bcd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bd1:	48 01 c2             	add    %rax,%rdx
   10bd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bd8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10bdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10be0:	48 8b 10             	mov    (%rax),%rdx
   10be3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10be7:	48 01 c2             	add    %rax,%rdx
   10bea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bee:	48 89 10             	mov    %rdx,(%rax)
   10bf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bf5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10bf9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bfd:	48 01 c2             	add    %rax,%rdx
   10c00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c04:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10c08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c0c:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10c10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c14:	48 01 c2             	add    %rax,%rdx
   10c17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c1b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   10c1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c23:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10c27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c2b:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   10c32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c36:	48 8b 50 20          	mov    0x20(%rax),%rdx
   10c3a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c3e:	48 01 c2             	add    %rax,%rdx
   10c41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c45:	48 89 50 20          	mov    %rdx,0x20(%rax)
   10c49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c4d:	48 8b 50 58          	mov    0x58(%rax),%rdx
   10c51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c55:	48 01 c2             	add    %rax,%rdx
   10c58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c5c:	48 89 50 58          	mov    %rdx,0x58(%rax)
   10c60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c64:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10c68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c6c:	48 01 c2             	add    %rax,%rdx
   10c6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c73:	48 89 50 50          	mov    %rdx,0x50(%rax)
   10c77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c7b:	48 8b 40 08          	mov    0x8(%rax),%rax
   10c7f:	48 8d 90 00 fc ff ff 	lea    -0x400(%rax),%rdx
   10c86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c8a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10c8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c92:	48 8b 40 10          	mov    0x10(%rax),%rax
   10c96:	48 8d 90 00 fc ff ff 	lea    -0x400(%rax),%rdx
   10c9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ca1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   10ca5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ca9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10cad:	48 89 50 28          	mov    %rdx,0x28(%rax)
   10cb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10cb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10cb9:	48 89 50 30          	mov    %rdx,0x30(%rax)
   10cbd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cc1:	48 89 c7             	mov    %rax,%rdi
   10cc4:	e8 41 fe ff ff       	call   10b0a <_ZL24init_static_stack_canaryPv>
   10cc9:	48 8d 05 20 91 02 00 	lea    0x29120(%rip),%rax        # 39df0 <EDMM_supported>
   10cd0:	8b 00                	mov    (%rax),%eax
   10cd2:	85 c0                	test   %eax,%eax
   10cd4:	74 12                	je     10ce8 <do_init_thread+0x1b0>
   10cd6:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
   10cda:	74 0c                	je     10ce8 <do_init_thread+0x1b0>
   10cdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ce0:	48 c7 40 30 01 00 00 	movq   $0x1,0x30(%rax)
   10ce7:	00 
   10ce8:	80 7d c3 00          	cmpb   $0x0,-0x3d(%rbp)
   10cec:	74 5d                	je     10d4b <do_init_thread+0x213>
   10cee:	48 8d 05 fb 90 02 00 	lea    0x290fb(%rip),%rax        # 39df0 <EDMM_supported>
   10cf5:	8b 00                	mov    (%rax),%eax
   10cf7:	85 c0                	test   %eax,%eax
   10cf9:	74 1d                	je     10d18 <do_init_thread+0x1e0>
   10cfb:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
   10cff:	75 10                	jne    10d11 <do_init_thread+0x1d9>
   10d01:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d05:	48 89 c7             	mov    %rax,%rdi
   10d08:	e8 e8 f3 ff ff       	call   100f5 <is_dynamic_thread>
   10d0d:	85 c0                	test   %eax,%eax
   10d0f:	74 07                	je     10d18 <do_init_thread+0x1e0>
   10d11:	b8 01 00 00 00       	mov    $0x1,%eax
   10d16:	eb 05                	jmp    10d1d <do_init_thread+0x1e5>
   10d18:	b8 00 00 00 00       	mov    $0x0,%eax
   10d1d:	84 c0                	test   %al,%al
   10d1f:	74 39                	je     10d5a <do_init_thread+0x222>
   10d21:	e8 97 f4 ff ff       	call   101bd <get_dynamic_stack_max_page>
   10d26:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   10d29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d2d:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   10d34:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   10d37:	48 c1 e2 0c          	shl    $0xc,%rdx
   10d3b:	48 01 c2             	add    %rax,%rdx
   10d3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d42:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   10d49:	eb 0f                	jmp    10d5a <do_init_thread+0x222>
   10d4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10d53:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   10d5a:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   10d61:	00 
   10d62:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   10d69:	00 
   10d6a:	e8 3c 09 02 00       	call   316ab <get_enclave_base>
   10d6f:	48 89 c1             	mov    %rax,%rcx
   10d72:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10d76:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10d7a:	48 89 c6             	mov    %rax,%rsi
   10d7d:	48 89 cf             	mov    %rcx,%rdi
   10d80:	e8 94 1e 00 00       	call   12c19 <elf_tls_info>
   10d85:	85 c0                	test   %eax,%eax
   10d87:	0f 95 c0             	setne  %al
   10d8a:	84 c0                	test   %al,%al
   10d8c:	74 0a                	je     10d98 <do_init_thread+0x260>
   10d8e:	b8 01 00 00 00       	mov    $0x1,%eax
   10d93:	e9 87 00 00 00       	jmp    10e1f <do_init_thread+0x2e7>
   10d98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d9c:	48 85 c0             	test   %rax,%rax
   10d9f:	74 79                	je     10e1a <do_init_thread+0x2e2>
   10da1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10da5:	48 8b 10             	mov    (%rax),%rdx
   10da8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10dac:	48 8b 40 50          	mov    0x50(%rax),%rax
   10db0:	48 29 c2             	sub    %rax,%rdx
   10db3:	48 89 d0             	mov    %rdx,%rax
   10db6:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   10dbc:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10dc2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10dc6:	48 8b 52 50          	mov    0x50(%rdx),%rdx
   10dca:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   10dd1:	48 89 d1             	mov    %rdx,%rcx
   10dd4:	48 89 c2             	mov    %rax,%rdx
   10dd7:	be 00 00 00 00       	mov    $0x0,%esi
   10ddc:	48 89 cf             	mov    %rcx,%rdi
   10ddf:	e8 9f 28 01 00       	call   23683 <memset>
   10de4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10de8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10dec:	49 89 d0             	mov    %rdx,%r8
   10def:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10df3:	48 8b 0a             	mov    (%rdx),%rcx
   10df6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10dfa:	48 8b 52 50          	mov    0x50(%rdx),%rdx
   10dfe:	48 89 ce             	mov    %rcx,%rsi
   10e01:	48 29 d6             	sub    %rdx,%rsi
   10e04:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10e08:	48 8b 52 50          	mov    0x50(%rdx),%rdx
   10e0c:	48 89 d7             	mov    %rdx,%rdi
   10e0f:	48 89 c1             	mov    %rax,%rcx
   10e12:	4c 89 c2             	mov    %r8,%rdx
   10e15:	e8 f5 f5 ff ff       	call   1040f <memcpy_s>
   10e1a:	b8 00 00 00 00       	mov    $0x0,%eax
   10e1f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10e23:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10e2a:	00 00 
   10e2c:	74 05                	je     10e33 <do_init_thread+0x2fb>
   10e2e:	e8 c4 29 01 00       	call   237f7 <__stack_chk_fail>
   10e33:	c9                   	leave  
   10e34:	c3                   	ret    

0000000000010e35 <do_ecall>:
   10e35:	f3 0f 1e fa          	endbr64 
   10e39:	55                   	push   %rbp
   10e3a:	48 89 e5             	mov    %rsp,%rbp
   10e3d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10e41:	89 7d 9c             	mov    %edi,-0x64(%rbp)
   10e44:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   10e48:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   10e4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10e53:	00 00 
   10e55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10e59:	31 c0                	xor    %eax,%eax
   10e5b:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%rbp)
   10e62:	e8 50 08 02 00       	call   316b7 <get_enclave_state>
   10e67:	83 f8 02             	cmp    $0x2,%eax
   10e6a:	0f 95 c0             	setne  %al
   10e6d:	84 c0                	test   %al,%al
   10e6f:	74 08                	je     10e79 <do_ecall+0x44>
   10e71:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   10e74:	e9 e2 01 00 00       	jmp    1105b <do_ecall+0x226>
   10e79:	e8 78 08 02 00       	call   316f6 <get_thread_data>
   10e7e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10e82:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   10e87:	74 37                	je     10ec0 <do_ecall+0x8b>
   10e89:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10e8d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10e91:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10e95:	48 8b 40 08          	mov    0x8(%rax),%rax
   10e99:	48 39 c2             	cmp    %rax,%rdx
   10e9c:	75 29                	jne    10ec7 <do_ecall+0x92>
   10e9e:	48 8d 05 9b 30 02 00 	lea    0x2309b(%rip),%rax        # 33f40 <g_global_data>
   10ea5:	48 8b 40 38          	mov    0x38(%rax),%rax
   10ea9:	48 85 c0             	test   %rax,%rax
   10eac:	75 12                	jne    10ec0 <do_ecall+0x8b>
   10eae:	e8 d3 f5 ff ff       	call   10486 <_Z22_pthread_tls_get_statev>
   10eb3:	83 f8 09             	cmp    $0x9,%eax
   10eb6:	74 08                	je     10ec0 <do_ecall+0x8b>
   10eb8:	8b 45 9c             	mov    -0x64(%rbp),%eax
   10ebb:	83 f8 fa             	cmp    $0xfffffffa,%eax
   10ebe:	75 07                	jne    10ec7 <do_ecall+0x92>
   10ec0:	b8 01 00 00 00       	mov    $0x1,%eax
   10ec5:	eb 05                	jmp    10ecc <do_ecall+0x97>
   10ec7:	b8 00 00 00 00       	mov    $0x0,%eax
   10ecc:	84 c0                	test   %al,%al
   10ece:	74 22                	je     10ef2 <do_ecall+0xbd>
   10ed0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10ed4:	be 00 00 00 00       	mov    $0x0,%esi
   10ed9:	48 89 c7             	mov    %rax,%rdi
   10edc:	e8 57 fc ff ff       	call   10b38 <do_init_thread>
   10ee1:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   10ee4:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   10ee8:	74 08                	je     10ef2 <do_ecall+0xbd>
   10eea:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   10eed:	e9 69 01 00 00       	jmp    1105b <do_ecall+0x226>
   10ef2:	e8 ff 07 02 00       	call   316f6 <get_thread_data>
   10ef7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10efb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10eff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10f03:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10f07:	48 8b 40 08          	mov    0x8(%rax),%rax
   10f0b:	48 39 c2             	cmp    %rax,%rdx
   10f0e:	0f 85 f6 00 00 00    	jne    1100a <do_ecall+0x1d5>
   10f14:	bf 00 00 00 00       	mov    $0x0,%edi
   10f19:	e8 7f ec ff ff       	call   fb9d <sgx_wrpkru>
   10f1e:	e8 46 f5 ff ff       	call   10469 <_Z16_pthread_enabledv>
   10f23:	84 c0                	test   %al,%al
   10f25:	0f 84 c3 00 00 00    	je     10fee <do_ecall+0x1b9>
   10f2b:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   10f32:	00 
   10f33:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   10f3a:	00 
   10f3b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   10f42:	00 
   10f43:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   10f4a:	00 
   10f4b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   10f52:	00 
   10f53:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   10f5a:	00 
   10f5b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10f62:	00 
   10f63:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10f6a:	00 
   10f6b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10f6f:	48 89 c7             	mov    %rax,%rdi
   10f72:	e8 81 2d 01 00       	call   23cf8 <_setjmp>
   10f77:	f3 0f 1e fa          	endbr64 
   10f7b:	85 c0                	test   %eax,%eax
   10f7d:	0f 94 c0             	sete   %al
   10f80:	84 c0                	test   %al,%al
   10f82:	74 28                	je     10fac <do_ecall+0x177>
   10f84:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10f88:	48 89 c7             	mov    %rax,%rdi
   10f8b:	e8 05 f5 ff ff       	call   10495 <_Z26_pthread_tls_store_contextPv>
   10f90:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10f94:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
   10f98:	48 89 c6             	mov    %rax,%rsi
   10f9b:	48 8d 3d d0 f9 ff ff 	lea    -0x630(%rip),%rdi        # 10972 <_ZL10trts_ecalljPv>
   10fa2:	e8 12 03 00 00       	call   112b9 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
   10fa7:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   10faa:	eb 17                	jmp    10fc3 <do_ecall+0x18e>
   10fac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10fb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10fb4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10fb8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10fbc:	c7 45 a4 09 00 00 00 	movl   $0x9,-0x5c(%rbp)
   10fc3:	8b 45 9c             	mov    -0x64(%rbp),%eax
   10fc6:	83 f8 fa             	cmp    $0xfffffffa,%eax
   10fc9:	74 06                	je     10fd1 <do_ecall+0x19c>
   10fcb:	83 7d a4 09          	cmpl   $0x9,-0x5c(%rbp)
   10fcf:	75 0a                	jne    10fdb <do_ecall+0x1a6>
   10fd1:	bf 09 00 00 00       	mov    $0x9,%edi
   10fd6:	e8 9d f4 ff ff       	call   10478 <_Z24_pthread_tls_store_state9_status_t>
   10fdb:	e8 d3 f4 ff ff       	call   104b3 <_Z24_pthread_tls_destructorsv>
   10fe0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10fe4:	48 89 c7             	mov    %rax,%rdi
   10fe7:	e8 b8 f4 ff ff       	call   104a4 <_Z20_pthread_wakeup_joinPv>
   10fec:	eb 30                	jmp    1101e <do_ecall+0x1e9>
   10fee:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10ff2:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
   10ff6:	48 89 c6             	mov    %rax,%rsi
   10ff9:	48 8d 3d 72 f9 ff ff 	lea    -0x68e(%rip),%rdi        # 10972 <_ZL10trts_ecalljPv>
   11000:	e8 b4 02 00 00       	call   112b9 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
   11005:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   11008:	eb 14                	jmp    1101e <do_ecall+0x1e9>
   1100a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1100e:	8b 55 9c             	mov    -0x64(%rbp),%edx
   11011:	48 89 c6             	mov    %rax,%rsi
   11014:	89 d7                	mov    %edx,%edi
   11016:	e8 57 f9 ff ff       	call   10972 <_ZL10trts_ecalljPv>
   1101b:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   1101e:	48 8d 05 1b 2f 02 00 	lea    0x22f1b(%rip),%rax        # 33f40 <g_global_data>
   11025:	48 8b 40 38          	mov    0x38(%rax),%rax
   11029:	48 85 c0             	test   %rax,%rax
   1102c:	74 1c                	je     1104a <do_ecall+0x215>
   1102e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11032:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11036:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1103a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1103e:	48 39 c2             	cmp    %rax,%rdx
   11041:	75 07                	jne    1104a <do_ecall+0x215>
   11043:	b8 01 00 00 00       	mov    $0x1,%eax
   11048:	eb 05                	jmp    1104f <do_ecall+0x21a>
   1104a:	b8 00 00 00 00       	mov    $0x0,%eax
   1104f:	84 c0                	test   %al,%al
   11051:	74 05                	je     11058 <do_ecall+0x223>
   11053:	e8 66 f4 ff ff       	call   104be <tc_set_idle>
   11058:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   1105b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1105f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   11066:	00 00 
   11068:	74 05                	je     1106f <do_ecall+0x23a>
   1106a:	e8 88 27 01 00       	call   237f7 <__stack_chk_fail>
   1106f:	c9                   	leave  
   11070:	c3                   	ret    

0000000000011071 <do_ecall_add_thread>:
   11071:	f3 0f 1e fa          	endbr64 
   11075:	55                   	push   %rbp
   11076:	48 89 e5             	mov    %rsp,%rbp
   11079:	48 83 ec 30          	sub    $0x30,%rsp
   1107d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11081:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
   11088:	e8 04 0a 00 00       	call   11a91 <is_utility_thread>
   1108d:	83 f0 01             	xor    $0x1,%eax
   11090:	84 c0                	test   %al,%al
   11092:	74 08                	je     1109c <do_ecall_add_thread+0x2b>
   11094:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   11097:	e9 9e 00 00 00       	jmp    1113a <do_ecall_add_thread+0xc9>
   1109c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   110a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   110a4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   110a9:	75 08                	jne    110b3 <do_ecall_add_thread+0x42>
   110ab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   110ae:	e9 87 00 00 00       	jmp    1113a <do_ecall_add_thread+0xc9>
   110b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   110b7:	be 08 00 00 00       	mov    $0x8,%esi
   110bc:	48 89 c7             	mov    %rax,%rdi
   110bf:	e8 ed e6 ff ff       	call   f7b1 <sgx_is_outside_enclave>
   110c4:	85 c0                	test   %eax,%eax
   110c6:	0f 94 c0             	sete   %al
   110c9:	84 c0                	test   %al,%al
   110cb:	74 05                	je     110d2 <do_ecall_add_thread+0x61>
   110cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   110d0:	eb 68                	jmp    1113a <do_ecall_add_thread+0xc9>
   110d2:	0f ae e8             	lfence 
   110d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   110d9:	48 8b 00             	mov    (%rax),%rax
   110dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   110e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   110e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   110ed:	75 05                	jne    110f4 <do_ecall_add_thread+0x83>
   110ef:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   110f2:	eb 46                	jmp    1113a <do_ecall_add_thread+0xc9>
   110f4:	0f ae e8             	lfence 
   110f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110fb:	48 89 c7             	mov    %rax,%rdi
   110fe:	e8 4a f5 ff ff       	call   1064d <_ZL11do_save_tcsPv>
   11103:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   11106:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1110a:	74 05                	je     11111 <do_ecall_add_thread+0xa0>
   1110c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1110f:	eb 29                	jmp    1113a <do_ecall_add_thread+0xc9>
   11111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11115:	48 89 c7             	mov    %rax,%rdi
   11118:	e8 d1 f0 ff ff       	call   101ee <do_add_thread>
   1111d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   11120:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   11124:	74 11                	je     11137 <do_ecall_add_thread+0xc6>
   11126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1112a:	48 89 c7             	mov    %rax,%rdi
   1112d:	e8 00 f6 ff ff       	call   10732 <_ZL10do_del_tcsPv>
   11132:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   11135:	eb 03                	jmp    1113a <do_ecall_add_thread+0xc9>
   11137:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1113a:	c9                   	leave  
   1113b:	c3                   	ret    

000000000001113c <do_uninit_enclave>:
   1113c:	f3 0f 1e fa          	endbr64 
   11140:	55                   	push   %rbp
   11141:	48 89 e5             	mov    %rsp,%rbp
   11144:	48 83 ec 40          	sub    $0x40,%rsp
   11148:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1114c:	48 8d 05 9d 8c 02 00 	lea    0x28c9d(%rip),%rax        # 39df0 <EDMM_supported>
   11153:	8b 00                	mov    (%rax),%eax
   11155:	85 c0                	test   %eax,%eax
   11157:	75 14                	jne    1116d <do_uninit_enclave+0x31>
   11159:	bf 03 00 00 00       	mov    $0x3,%edi
   1115e:	e8 65 05 02 00       	call   316c8 <set_enclave_state>
   11163:	b8 01 00 00 00       	mov    $0x1,%eax
   11168:	e9 4a 01 00 00       	jmp    112b7 <do_uninit_enclave+0x17b>
   1116d:	e8 1f 09 00 00       	call   11a91 <is_utility_thread>
   11172:	83 f0 01             	xor    $0x1,%eax
   11175:	84 c0                	test   %al,%al
   11177:	74 10                	je     11189 <do_uninit_enclave+0x4d>
   11179:	e8 fc ef ff ff       	call   1017a <is_dynamic_thread_exist>
   1117e:	85 c0                	test   %eax,%eax
   11180:	74 07                	je     11189 <do_uninit_enclave+0x4d>
   11182:	b8 01 00 00 00       	mov    $0x1,%eax
   11187:	eb 05                	jmp    1118e <do_uninit_enclave+0x52>
   11189:	b8 00 00 00 00       	mov    $0x0,%eax
   1118e:	84 c0                	test   %al,%al
   11190:	74 14                	je     111a6 <do_uninit_enclave+0x6a>
   11192:	bf 03 00 00 00       	mov    $0x3,%edi
   11197:	e8 2c 05 02 00       	call   316c8 <set_enclave_state>
   1119c:	b8 01 00 00 00       	mov    $0x1,%eax
   111a1:	e9 11 01 00 00       	jmp    112b7 <do_uninit_enclave+0x17b>
   111a6:	f0 83 0d 66 04 04 00 	lock orl $0x1,0x40466(%rip)        # 51614 <g_uninit_flag>
   111ad:	01 
   111ae:	48 8b 05 4b 04 04 00 	mov    0x4044b(%rip),%rax        # 51600 <_ZL10g_tcs_node>
   111b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   111b9:	48 c7 05 3c 04 04 00 	movq   $0x0,0x4043c(%rip)        # 51600 <_ZL10g_tcs_node>
   111c0:	00 00 00 00 
   111c4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   111c9:	0f 84 ae 00 00 00    	je     1127d <do_uninit_enclave+0x141>
   111cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111d3:	48 8b 10             	mov    (%rax),%rdx
   111d6:	48 8b 05 2b 04 04 00 	mov    0x4042b(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   111dd:	48 31 d0             	xor    %rdx,%rax
   111e0:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   111e4:	75 22                	jne    11208 <do_uninit_enclave+0xcc>
   111e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   111ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111f2:	48 8b 40 08          	mov    0x8(%rax),%rax
   111f6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   111fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111fe:	48 89 c7             	mov    %rax,%rdi
   11201:	e8 1c f3 00 00       	call   20522 <dlfree>
   11206:	eb 70                	jmp    11278 <do_uninit_enclave+0x13c>
   11208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1120c:	48 8b 10             	mov    (%rax),%rdx
   1120f:	48 8b 05 f2 03 04 00 	mov    0x403f2(%rip),%rax        # 51608 <_ZL12g_tcs_cookie>
   11216:	48 31 d0             	xor    %rdx,%rax
   11219:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1121d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11221:	48 05 00 10 00 00    	add    $0x1000,%rax
   11227:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1122b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1122f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11233:	48 89 d6             	mov    %rdx,%rsi
   11236:	48 89 c7             	mov    %rax,%rdi
   11239:	e8 aa 6f 00 00       	call   181e8 <mm_dealloc>
   1123e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   11241:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   11245:	74 11                	je     11258 <do_uninit_enclave+0x11c>
   11247:	bf 03 00 00 00       	mov    $0x3,%edi
   1124c:	e8 77 04 02 00       	call   316c8 <set_enclave_state>
   11251:	b8 01 00 00 00       	mov    $0x1,%eax
   11256:	eb 5f                	jmp    112b7 <do_uninit_enclave+0x17b>
   11258:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1125c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11260:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11264:	48 8b 40 08          	mov    0x8(%rax),%rax
   11268:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1126c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11270:	48 89 c7             	mov    %rax,%rdi
   11273:	e8 aa f2 00 00       	call   20522 <dlfree>
   11278:	e9 47 ff ff ff       	jmp    111c4 <do_uninit_enclave+0x88>
   1127d:	48 8d 3d 8c 03 04 00 	lea    0x4038c(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   11284:	e8 13 84 00 00       	call   1969c <sgx_spin_lock>
   11289:	0f b6 05 70 9d 02 00 	movzbl 0x29d70(%rip),%eax        # 3b000 <_ZL16g_is_first_ecall>
   11290:	83 f0 01             	xor    $0x1,%eax
   11293:	84 c0                	test   %al,%al
   11295:	74 05                	je     1129c <do_uninit_enclave+0x160>
   11297:	e8 da 25 00 00       	call   13876 <uninit_global_object>
   1129c:	48 8d 3d 6d 03 04 00 	lea    0x4036d(%rip),%rdi        # 51610 <_ZL10g_ife_lock>
   112a3:	e8 8f 84 00 00       	call   19737 <sgx_spin_unlock>
   112a8:	bf 03 00 00 00       	mov    $0x3,%edi
   112ad:	e8 16 04 02 00       	call   316c8 <set_enclave_state>
   112b2:	b8 00 00 00 00       	mov    $0x0,%eax
   112b7:	c9                   	leave  
   112b8:	c3                   	ret    

00000000000112b9 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>:
   112b9:	f3 0f 1e fa          	endbr64 
   112bd:	55                   	push   %rbp
   112be:	48 89 e5             	mov    %rsp,%rbp
   112c1:	41 57                	push   %r15
   112c3:	41 56                	push   %r14
   112c5:	41 55                	push   %r13
   112c7:	41 54                	push   %r12
   112c9:	53                   	push   %rbx
   112ca:	48 83 ec 58          	sub    $0x58,%rsp
   112ce:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   112d2:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   112d6:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   112da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   112e1:	00 00 
   112e3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   112e7:	31 c0                	xor    %eax,%eax
   112e9:	48 89 e0             	mov    %rsp,%rax
   112ec:	48 89 c3             	mov    %rax,%rbx
   112ef:	e8 04 01 00 00       	call   113f8 <_Z6rdrandIjET_v>
   112f4:	25 ff 07 00 00       	and    $0x7ff,%eax
   112f9:	83 c0 01             	add    $0x1,%eax
   112fc:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   112ff:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   11302:	48 83 e8 01          	sub    $0x1,%rax
   11306:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1130a:	48 89 c2             	mov    %rax,%rdx
   1130d:	48 83 c2 01          	add    $0x1,%rdx
   11311:	49 89 d6             	mov    %rdx,%r14
   11314:	41 bf 00 00 00 00    	mov    $0x0,%r15d
   1131a:	48 89 c2             	mov    %rax,%rdx
   1131d:	48 83 c2 01          	add    $0x1,%rdx
   11321:	49 89 d4             	mov    %rdx,%r12
   11324:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   1132a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1132e:	b8 10 00 00 00       	mov    $0x10,%eax
   11333:	48 83 e8 01          	sub    $0x1,%rax
   11337:	48 01 d0             	add    %rdx,%rax
   1133a:	bf 10 00 00 00       	mov    $0x10,%edi
   1133f:	ba 00 00 00 00       	mov    $0x0,%edx
   11344:	48 f7 f7             	div    %rdi
   11347:	48 6b c0 10          	imul   $0x10,%rax,%rax
   1134b:	48 89 c2             	mov    %rax,%rdx
   1134e:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   11355:	48 89 e1             	mov    %rsp,%rcx
   11358:	48 29 d1             	sub    %rdx,%rcx
   1135b:	48 89 ca             	mov    %rcx,%rdx
   1135e:	48 39 d4             	cmp    %rdx,%rsp
   11361:	74 12                	je     11375 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xbc>
   11363:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1136a:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   11371:	00 00 
   11373:	eb e9                	jmp    1135e <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xa5>
   11375:	48 89 c2             	mov    %rax,%rdx
   11378:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
   1137e:	48 29 d4             	sub    %rdx,%rsp
   11381:	48 89 c2             	mov    %rax,%rdx
   11384:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
   1138a:	48 85 d2             	test   %rdx,%rdx
   1138d:	74 10                	je     1139f <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xe6>
   1138f:	25 ff 0f 00 00       	and    $0xfff,%eax
   11394:	48 83 e8 08          	sub    $0x8,%rax
   11398:	48 01 e0             	add    %rsp,%rax
   1139b:	48 83 08 00          	orq    $0x0,(%rax)
   1139f:	48 89 e0             	mov    %rsp,%rax
   113a2:	48 83 c0 00          	add    $0x0,%rax
   113a6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   113aa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   113ae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   113b2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   113b6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   113ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   113be:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   113c2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   113c6:	48 89 ce             	mov    %rcx,%rsi
   113c9:	48 89 c7             	mov    %rax,%rdi
   113cc:	e8 3c 00 00 00       	call   1140d <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>
   113d1:	90                   	nop
   113d2:	48 89 dc             	mov    %rbx,%rsp
   113d5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   113d9:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   113e0:	00 00 
   113e2:	74 05                	je     113e9 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0x130>
   113e4:	e8 0e 24 01 00       	call   237f7 <__stack_chk_fail>
   113e9:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   113ed:	5b                   	pop    %rbx
   113ee:	41 5c                	pop    %r12
   113f0:	41 5d                	pop    %r13
   113f2:	41 5e                	pop    %r14
   113f4:	41 5f                	pop    %r15
   113f6:	5d                   	pop    %rbp
   113f7:	c3                   	ret    

00000000000113f8 <_Z6rdrandIjET_v>:
   113f8:	f3 0f 1e fa          	endbr64 
   113fc:	55                   	push   %rbp
   113fd:	48 89 e5             	mov    %rsp,%rbp
   11400:	0f c7 f0             	rdrand %eax
   11403:	73 fb                	jae    11400 <_Z6rdrandIjET_v+0x8>
   11405:	89 45 fc             	mov    %eax,-0x4(%rbp)
   11408:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1140b:	5d                   	pop    %rbp
   1140c:	c3                   	ret    

000000000001140d <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>:
   1140d:	f3 0f 1e fa          	endbr64 
   11411:	55                   	push   %rbp
   11412:	48 89 e5             	mov    %rsp,%rbp
   11415:	48 83 ec 30          	sub    $0x30,%rsp
   11419:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1141d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11421:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11425:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11429:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1142d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11435:	48 8b 00             	mov    (%rax),%rax
   11438:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1143c:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   11440:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11444:	8b 09                	mov    (%rcx),%ecx
   11446:	48 89 c6             	mov    %rax,%rsi
   11449:	89 cf                	mov    %ecx,%edi
   1144b:	ff d2                	call   *%rdx
   1144d:	c9                   	leave  
   1144e:	c3                   	ret    

000000000001144f <sgx_ocall>:
   1144f:	f3 0f 1e fa          	endbr64 
   11453:	55                   	push   %rbp
   11454:	48 89 e5             	mov    %rsp,%rbp
   11457:	48 83 ec 20          	sub    $0x20,%rsp
   1145b:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1145e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11462:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   11466:	74 29                	je     11491 <sgx_ocall+0x42>
   11468:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1146b:	83 f8 f9             	cmp    $0xfffffff9,%eax
   1146e:	7c 08                	jl     11478 <sgx_ocall+0x29>
   11470:	8b 45 ec             	mov    -0x14(%rbp),%eax
   11473:	83 f8 ff             	cmp    $0xffffffff,%eax
   11476:	7c 19                	jl     11491 <sgx_ocall+0x42>
   11478:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1147b:	48 8d 05 7e 0b 02 00 	lea    0x20b7e(%rip),%rax        # 32000 <g_dyn_entry_table>
   11482:	48 8b 00             	mov    (%rax),%rax
   11485:	48 39 c2             	cmp    %rax,%rdx
   11488:	72 07                	jb     11491 <sgx_ocall+0x42>
   1148a:	b8 01 10 00 00       	mov    $0x1001,%eax
   1148f:	eb 17                	jmp    114a8 <sgx_ocall+0x59>
   11491:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11495:	8b 45 ec             	mov    -0x14(%rbp),%eax
   11498:	48 89 d6             	mov    %rdx,%rsi
   1149b:	89 c7                	mov    %eax,%edi
   1149d:	e8 a1 04 02 00       	call   31943 <__morestack>
   114a2:	89 45 fc             	mov    %eax,-0x4(%rbp)
   114a5:	8b 45 fc             	mov    -0x4(%rbp),%eax
   114a8:	c9                   	leave  
   114a9:	c3                   	ret    

00000000000114aa <update_ocall_lastsp>:
   114aa:	f3 0f 1e fa          	endbr64 
   114ae:	55                   	push   %rbp
   114af:	48 89 e5             	mov    %rsp,%rbp
   114b2:	48 83 ec 30          	sub    $0x30,%rsp
   114b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   114ba:	e8 37 02 02 00       	call   316f6 <get_thread_data>
   114bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   114c3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   114ca:	00 
   114cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114cf:	48 8b 40 08          	mov    0x8(%rax),%rax
   114d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   114d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114df:	48 89 50 30          	mov    %rdx,0x30(%rax)
   114e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114e7:	48 8b 50 30          	mov    0x30(%rax),%rdx
   114eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114ef:	48 8b 40 10          	mov    0x10(%rax),%rax
   114f3:	48 39 c2             	cmp    %rax,%rdx
   114f6:	75 11                	jne    11509 <update_ocall_lastsp+0x5f>
   114f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114fc:	48 c7 80 90 00 00 00 	movq   $0x1,0x90(%rax)
   11503:	01 00 00 00 
   11507:	eb 26                	jmp    1152f <update_ocall_lastsp+0x85>
   11509:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1150d:	48 8b 40 30          	mov    0x30(%rax),%rax
   11511:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11519:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   11520:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11528:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
   1152f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11537:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1153b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1153f:	c9                   	leave  
   11540:	c3                   	ret    

0000000000011541 <do_oret>:
   11541:	f3 0f 1e fa          	endbr64 
   11545:	55                   	push   %rbp
   11546:	48 89 e5             	mov    %rsp,%rbp
   11549:	48 83 ec 30          	sub    $0x30,%rsp
   1154d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11551:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11558:	00 00 
   1155a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1155e:	31 c0                	xor    %eax,%eax
   11560:	e8 91 01 02 00       	call   316f6 <get_thread_data>
   11565:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11569:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1156d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11571:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11579:	48 8b 40 08          	mov    0x8(%rax),%rax
   1157d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11581:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11586:	74 0a                	je     11592 <do_oret+0x51>
   11588:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1158c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   11590:	77 0a                	ja     1159c <do_oret+0x5b>
   11592:	b8 01 00 00 00       	mov    $0x1,%eax
   11597:	e9 87 00 00 00       	jmp    11623 <do_oret+0xe2>
   1159c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115a0:	48 8b 40 10          	mov    0x10(%rax),%rax
   115a4:	48 2d f0 00 00 00    	sub    $0xf0,%rax
   115aa:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   115ae:	76 07                	jbe    115b7 <do_oret+0x76>
   115b0:	b8 01 00 00 00       	mov    $0x1,%eax
   115b5:	eb 6c                	jmp    11623 <do_oret+0xe2>
   115b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115bb:	48 8b 40 20          	mov    0x20(%rax),%rax
   115bf:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
   115c5:	74 07                	je     115ce <do_oret+0x8d>
   115c7:	b8 01 00 00 00       	mov    $0x1,%eax
   115cc:	eb 55                	jmp    11623 <do_oret+0xe2>
   115ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115d2:	48 8b 50 30          	mov    0x30(%rax),%rdx
   115d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115da:	48 8b 40 10          	mov    0x10(%rax),%rax
   115de:	48 39 c2             	cmp    %rax,%rdx
   115e1:	77 11                	ja     115f4 <do_oret+0xb3>
   115e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115e7:	48 8b 40 30          	mov    0x30(%rax),%rax
   115eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   115ef:	48 39 d0             	cmp    %rdx,%rax
   115f2:	77 07                	ja     115fb <do_oret+0xba>
   115f4:	b8 01 00 00 00       	mov    $0x1,%eax
   115f9:	eb 28                	jmp    11623 <do_oret+0xe2>
   115fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115ff:	48 8b 50 30          	mov    0x30(%rax),%rdx
   11603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11607:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1160b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1160f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11613:	48 89 d6             	mov    %rdx,%rsi
   11616:	48 89 c7             	mov    %rax,%rdi
   11619:	e8 38 03 02 00       	call   31956 <asm_oret>
   1161e:	b8 01 00 00 00       	mov    $0x1,%eax
   11623:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11627:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1162e:	00 00 
   11630:	74 05                	je     11637 <do_oret+0xf6>
   11632:	e8 c0 21 01 00       	call   237f7 <__stack_chk_fail>
   11637:	c9                   	leave  
   11638:	c3                   	ret    

0000000000011639 <get_enclave_size>:
   11639:	f3 0f 1e fa          	endbr64 
   1163d:	55                   	push   %rbp
   1163e:	48 89 e5             	mov    %rsp,%rbp
   11641:	48 8d 05 f8 28 02 00 	lea    0x228f8(%rip),%rax        # 33f40 <g_global_data>
   11648:	48 8b 40 08          	mov    0x8(%rax),%rax
   1164c:	5d                   	pop    %rbp
   1164d:	c3                   	ret    

000000000001164e <get_enclave_end>:
   1164e:	f3 0f 1e fa          	endbr64 
   11652:	55                   	push   %rbp
   11653:	48 89 e5             	mov    %rsp,%rbp
   11656:	e8 50 00 02 00       	call   316ab <get_enclave_base>
   1165b:	48 89 c2             	mov    %rax,%rdx
   1165e:	48 8d 05 db 28 02 00 	lea    0x228db(%rip),%rax        # 33f40 <g_global_data>
   11665:	48 8b 40 08          	mov    0x8(%rax),%rax
   11669:	48 01 d0             	add    %rdx,%rax
   1166c:	48 83 e8 01          	sub    $0x1,%rax
   11670:	5d                   	pop    %rbp
   11671:	c3                   	ret    

0000000000011672 <get_heap_base>:
   11672:	f3 0f 1e fa          	endbr64 
   11676:	55                   	push   %rbp
   11677:	48 89 e5             	mov    %rsp,%rbp
   1167a:	e8 2c 00 02 00       	call   316ab <get_enclave_base>
   1167f:	48 89 c2             	mov    %rax,%rdx
   11682:	48 8d 05 b7 28 02 00 	lea    0x228b7(%rip),%rax        # 33f40 <g_global_data>
   11689:	48 8b 40 10          	mov    0x10(%rax),%rax
   1168d:	48 01 d0             	add    %rdx,%rax
   11690:	5d                   	pop    %rbp
   11691:	c3                   	ret    

0000000000011692 <get_heap_size>:
   11692:	f3 0f 1e fa          	endbr64 
   11696:	55                   	push   %rbp
   11697:	48 89 e5             	mov    %rsp,%rbp
   1169a:	48 8d 05 9f 28 02 00 	lea    0x2289f(%rip),%rax        # 33f40 <g_global_data>
   116a1:	48 8b 40 18          	mov    0x18(%rax),%rax
   116a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   116a9:	48 8d 05 40 87 02 00 	lea    0x28740(%rip),%rax        # 39df0 <EDMM_supported>
   116b0:	8b 00                	mov    (%rax),%eax
   116b2:	85 c0                	test   %eax,%eax
   116b4:	74 6c                	je     11722 <get_heap_size+0x90>
   116b6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   116bd:	48 8d 05 7c 28 02 00 	lea    0x2287c(%rip),%rax        # 33f40 <g_global_data>
   116c4:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   116ca:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   116cd:	0f 92 c0             	setb   %al
   116d0:	84 c0                	test   %al,%al
   116d2:	74 4e                	je     11722 <get_heap_size+0x90>
   116d4:	48 8d 05 65 28 02 00 	lea    0x22865(%rip),%rax        # 33f40 <g_global_data>
   116db:	8b 55 f4             	mov    -0xc(%rbp),%edx
   116de:	48 83 c2 0a          	add    $0xa,%rdx
   116e2:	48 c1 e2 05          	shl    $0x5,%rdx
   116e6:	48 01 d0             	add    %rdx,%rax
   116e9:	0f b7 00             	movzwl (%rax),%eax
   116ec:	66 83 f8 03          	cmp    $0x3,%ax
   116f0:	0f 94 c0             	sete   %al
   116f3:	84 c0                	test   %al,%al
   116f5:	74 25                	je     1171c <get_heap_size+0x8a>
   116f7:	48 8d 05 42 28 02 00 	lea    0x22842(%rip),%rax        # 33f40 <g_global_data>
   116fe:	8b 55 f4             	mov    -0xc(%rbp),%edx
   11701:	48 83 c2 0a          	add    $0xa,%rdx
   11705:	48 c1 e2 05          	shl    $0x5,%rdx
   11709:	48 01 d0             	add    %rdx,%rax
   1170c:	48 83 c0 04          	add    $0x4,%rax
   11710:	8b 00                	mov    (%rax),%eax
   11712:	89 c0                	mov    %eax,%eax
   11714:	48 c1 e0 0c          	shl    $0xc,%rax
   11718:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   1171c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   11720:	eb 9b                	jmp    116bd <get_heap_size+0x2b>
   11722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11726:	5d                   	pop    %rbp
   11727:	c3                   	ret    

0000000000011728 <get_heap_min_size>:
   11728:	f3 0f 1e fa          	endbr64 
   1172c:	55                   	push   %rbp
   1172d:	48 89 e5             	mov    %rsp,%rbp
   11730:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   11737:	00 
   11738:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1173f:	48 8d 05 fa 27 02 00 	lea    0x227fa(%rip),%rax        # 33f40 <g_global_data>
   11746:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   1174c:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   1174f:	0f 92 c0             	setb   %al
   11752:	84 c0                	test   %al,%al
   11754:	74 50                	je     117a6 <get_heap_min_size+0x7e>
   11756:	48 8d 05 e3 27 02 00 	lea    0x227e3(%rip),%rax        # 33f40 <g_global_data>
   1175d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   11760:	48 83 c2 0a          	add    $0xa,%rdx
   11764:	48 c1 e2 05          	shl    $0x5,%rdx
   11768:	48 01 d0             	add    %rdx,%rax
   1176b:	0f b7 00             	movzwl (%rax),%eax
   1176e:	66 83 f8 01          	cmp    $0x1,%ax
   11772:	0f 94 c0             	sete   %al
   11775:	84 c0                	test   %al,%al
   11777:	74 27                	je     117a0 <get_heap_min_size+0x78>
   11779:	48 8d 05 c0 27 02 00 	lea    0x227c0(%rip),%rax        # 33f40 <g_global_data>
   11780:	8b 55 f4             	mov    -0xc(%rbp),%edx
   11783:	48 83 c2 0a          	add    $0xa,%rdx
   11787:	48 c1 e2 05          	shl    $0x5,%rdx
   1178b:	48 01 d0             	add    %rdx,%rax
   1178e:	48 83 c0 04          	add    $0x4,%rax
   11792:	8b 00                	mov    (%rax),%eax
   11794:	89 c0                	mov    %eax,%eax
   11796:	48 c1 e0 0c          	shl    $0xc,%rax
   1179a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1179e:	eb 06                	jmp    117a6 <get_heap_min_size+0x7e>
   117a0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   117a4:	eb 99                	jmp    1173f <get_heap_min_size+0x17>
   117a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117aa:	5d                   	pop    %rbp
   117ab:	c3                   	ret    

00000000000117ac <get_rsrv_base>:
   117ac:	f3 0f 1e fa          	endbr64 
   117b0:	55                   	push   %rbp
   117b1:	48 89 e5             	mov    %rsp,%rbp
   117b4:	e8 f2 fe 01 00       	call   316ab <get_enclave_base>
   117b9:	48 89 c2             	mov    %rax,%rdx
   117bc:	48 8d 05 7d 27 02 00 	lea    0x2277d(%rip),%rax        # 33f40 <g_global_data>
   117c3:	48 8b 40 20          	mov    0x20(%rax),%rax
   117c7:	48 01 d0             	add    %rdx,%rax
   117ca:	5d                   	pop    %rbp
   117cb:	c3                   	ret    

00000000000117cc <get_rsrv_end>:
   117cc:	f3 0f 1e fa          	endbr64 
   117d0:	55                   	push   %rbp
   117d1:	48 89 e5             	mov    %rsp,%rbp
   117d4:	53                   	push   %rbx
   117d5:	48 83 ec 08          	sub    $0x8,%rsp
   117d9:	e8 ce ff ff ff       	call   117ac <get_rsrv_base>
   117de:	48 89 c3             	mov    %rax,%rbx
   117e1:	e8 0e 00 00 00       	call   117f4 <get_rsrv_size>
   117e6:	48 01 d8             	add    %rbx,%rax
   117e9:	48 83 e8 01          	sub    $0x1,%rax
   117ed:	48 83 c4 08          	add    $0x8,%rsp
   117f1:	5b                   	pop    %rbx
   117f2:	5d                   	pop    %rbp
   117f3:	c3                   	ret    

00000000000117f4 <get_rsrv_size>:
   117f4:	f3 0f 1e fa          	endbr64 
   117f8:	55                   	push   %rbp
   117f9:	48 89 e5             	mov    %rsp,%rbp
   117fc:	48 8d 05 3d 27 02 00 	lea    0x2273d(%rip),%rax        # 33f40 <g_global_data>
   11803:	48 8b 40 28          	mov    0x28(%rax),%rax
   11807:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1180b:	48 8d 05 de 85 02 00 	lea    0x285de(%rip),%rax        # 39df0 <EDMM_supported>
   11812:	8b 00                	mov    (%rax),%eax
   11814:	85 c0                	test   %eax,%eax
   11816:	74 6c                	je     11884 <get_rsrv_size+0x90>
   11818:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1181f:	48 8d 05 1a 27 02 00 	lea    0x2271a(%rip),%rax        # 33f40 <g_global_data>
   11826:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   1182c:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   1182f:	0f 92 c0             	setb   %al
   11832:	84 c0                	test   %al,%al
   11834:	74 4e                	je     11884 <get_rsrv_size+0x90>
   11836:	48 8d 05 03 27 02 00 	lea    0x22703(%rip),%rax        # 33f40 <g_global_data>
   1183d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   11840:	48 83 c2 0a          	add    $0xa,%rdx
   11844:	48 c1 e2 05          	shl    $0x5,%rdx
   11848:	48 01 d0             	add    %rdx,%rax
   1184b:	0f b7 00             	movzwl (%rax),%eax
   1184e:	66 83 f8 16          	cmp    $0x16,%ax
   11852:	0f 94 c0             	sete   %al
   11855:	84 c0                	test   %al,%al
   11857:	74 25                	je     1187e <get_rsrv_size+0x8a>
   11859:	48 8d 05 e0 26 02 00 	lea    0x226e0(%rip),%rax        # 33f40 <g_global_data>
   11860:	8b 55 f4             	mov    -0xc(%rbp),%edx
   11863:	48 83 c2 0a          	add    $0xa,%rdx
   11867:	48 c1 e2 05          	shl    $0x5,%rdx
   1186b:	48 01 d0             	add    %rdx,%rax
   1186e:	48 83 c0 04          	add    $0x4,%rax
   11872:	8b 00                	mov    (%rax),%eax
   11874:	89 c0                	mov    %eax,%eax
   11876:	48 c1 e0 0c          	shl    $0xc,%rax
   1187a:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   1187e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   11882:	eb 9b                	jmp    1181f <get_rsrv_size+0x2b>
   11884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11888:	5d                   	pop    %rbp
   11889:	c3                   	ret    

000000000001188a <get_rsrv_min_size>:
   1188a:	f3 0f 1e fa          	endbr64 
   1188e:	55                   	push   %rbp
   1188f:	48 89 e5             	mov    %rsp,%rbp
   11892:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   11899:	00 
   1189a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   118a1:	48 8d 05 98 26 02 00 	lea    0x22698(%rip),%rax        # 33f40 <g_global_data>
   118a8:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   118ae:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   118b1:	0f 92 c0             	setb   %al
   118b4:	84 c0                	test   %al,%al
   118b6:	74 50                	je     11908 <get_rsrv_min_size+0x7e>
   118b8:	48 8d 05 81 26 02 00 	lea    0x22681(%rip),%rax        # 33f40 <g_global_data>
   118bf:	8b 55 f4             	mov    -0xc(%rbp),%edx
   118c2:	48 83 c2 0a          	add    $0xa,%rdx
   118c6:	48 c1 e2 05          	shl    $0x5,%rdx
   118ca:	48 01 d0             	add    %rdx,%rax
   118cd:	0f b7 00             	movzwl (%rax),%eax
   118d0:	66 83 f8 14          	cmp    $0x14,%ax
   118d4:	0f 94 c0             	sete   %al
   118d7:	84 c0                	test   %al,%al
   118d9:	74 27                	je     11902 <get_rsrv_min_size+0x78>
   118db:	48 8d 05 5e 26 02 00 	lea    0x2265e(%rip),%rax        # 33f40 <g_global_data>
   118e2:	8b 55 f4             	mov    -0xc(%rbp),%edx
   118e5:	48 83 c2 0a          	add    $0xa,%rdx
   118e9:	48 c1 e2 05          	shl    $0x5,%rdx
   118ed:	48 01 d0             	add    %rdx,%rax
   118f0:	48 83 c0 04          	add    $0x4,%rax
   118f4:	8b 00                	mov    (%rax),%eax
   118f6:	89 c0                	mov    %eax,%eax
   118f8:	48 c1 e0 0c          	shl    $0xc,%rax
   118fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11900:	eb 06                	jmp    11908 <get_rsrv_min_size+0x7e>
   11902:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   11906:	eb 99                	jmp    118a1 <get_rsrv_min_size+0x17>
   11908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1190c:	5d                   	pop    %rbp
   1190d:	c3                   	ret    

000000000001190e <get_errno_addr>:
   1190e:	f3 0f 1e fa          	endbr64 
   11912:	55                   	push   %rbp
   11913:	48 89 e5             	mov    %rsp,%rbp
   11916:	48 83 ec 10          	sub    $0x10,%rsp
   1191a:	e8 d7 fd 01 00       	call   316f6 <get_thread_data>
   1191f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11927:	48 83 c0 40          	add    $0x40,%rax
   1192b:	c9                   	leave  
   1192c:	c3                   	ret    

000000000001192d <feature_supported>:
   1192d:	f3 0f 1e fa          	endbr64 
   11931:	55                   	push   %rbp
   11932:	48 89 e5             	mov    %rsp,%rbp
   11935:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11939:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1193c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11940:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11944:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1194b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   11952:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11957:	75 07                	jne    11960 <feature_supported+0x33>
   11959:	b8 00 00 00 00       	mov    $0x0,%eax
   1195e:	eb 79                	jmp    119d9 <feature_supported+0xac>
   11960:	8b 45 f0             	mov    -0x10(%rbp),%eax
   11963:	83 c0 01             	add    $0x1,%eax
   11966:	c1 e0 06             	shl    $0x6,%eax
   11969:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
   1196c:	72 27                	jb     11995 <feature_supported+0x68>
   1196e:	8b 45 f0             	mov    -0x10(%rbp),%eax
   11971:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11978:	00 
   11979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1197d:	48 01 d0             	add    %rdx,%rax
   11980:	48 8b 00             	mov    (%rax),%rax
   11983:	48 85 c0             	test   %rax,%rax
   11986:	79 07                	jns    1198f <feature_supported+0x62>
   11988:	b8 00 00 00 00       	mov    $0x0,%eax
   1198d:	eb 4a                	jmp    119d9 <feature_supported+0xac>
   1198f:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
   11993:	eb cb                	jmp    11960 <feature_supported+0x33>
   11995:	8b 45 f0             	mov    -0x10(%rbp),%eax
   11998:	c1 e0 06             	shl    $0x6,%eax
   1199b:	89 c2                	mov    %eax,%edx
   1199d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   119a0:	29 d0                	sub    %edx,%eax
   119a2:	89 45 f4             	mov    %eax,-0xc(%rbp)
   119a5:	8b 45 f0             	mov    -0x10(%rbp),%eax
   119a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   119af:	00 
   119b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119b4:	48 01 d0             	add    %rdx,%rax
   119b7:	48 8b 10             	mov    (%rax),%rdx
   119ba:	8b 45 f4             	mov    -0xc(%rbp),%eax
   119bd:	89 c1                	mov    %eax,%ecx
   119bf:	48 d3 ea             	shr    %cl,%rdx
   119c2:	48 89 d0             	mov    %rdx,%rax
   119c5:	83 e0 01             	and    $0x1,%eax
   119c8:	48 85 c0             	test   %rax,%rax
   119cb:	74 07                	je     119d4 <feature_supported+0xa7>
   119cd:	b8 01 00 00 00       	mov    $0x1,%eax
   119d2:	eb 05                	jmp    119d9 <feature_supported+0xac>
   119d4:	b8 00 00 00 00       	mov    $0x0,%eax
   119d9:	5d                   	pop    %rbp
   119da:	c3                   	ret    

00000000000119db <is_stack_addr>:
   119db:	f3 0f 1e fa          	endbr64 
   119df:	55                   	push   %rbp
   119e0:	48 89 e5             	mov    %rsp,%rbp
   119e3:	48 83 ec 30          	sub    $0x30,%rsp
   119e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   119eb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   119ef:	e8 02 fd 01 00       	call   316f6 <get_thread_data>
   119f4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   119f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119fc:	48 8b 40 10          	mov    0x10(%rax),%rax
   11a00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11a04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a08:	48 8b 40 18          	mov    0x18(%rax),%rax
   11a0c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a18:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11a1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11a20:	48 01 d0             	add    %rdx,%rax
   11a23:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11a27:	77 22                	ja     11a4b <is_stack_addr+0x70>
   11a29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11a2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11a31:	48 01 d0             	add    %rdx,%rax
   11a34:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11a38:	72 11                	jb     11a4b <is_stack_addr+0x70>
   11a3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a3e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   11a42:	77 07                	ja     11a4b <is_stack_addr+0x70>
   11a44:	b8 01 00 00 00       	mov    $0x1,%eax
   11a49:	eb 05                	jmp    11a50 <is_stack_addr+0x75>
   11a4b:	b8 00 00 00 00       	mov    $0x0,%eax
   11a50:	c9                   	leave  
   11a51:	c3                   	ret    

0000000000011a52 <is_valid_sp>:
   11a52:	f3 0f 1e fa          	endbr64 
   11a56:	55                   	push   %rbp
   11a57:	48 89 e5             	mov    %rsp,%rbp
   11a5a:	48 83 ec 10          	sub    $0x10,%rsp
   11a5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a66:	83 e0 07             	and    $0x7,%eax
   11a69:	48 85 c0             	test   %rax,%rax
   11a6c:	75 1c                	jne    11a8a <is_valid_sp+0x38>
   11a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a72:	be 00 00 00 00       	mov    $0x0,%esi
   11a77:	48 89 c7             	mov    %rax,%rdi
   11a7a:	e8 5c ff ff ff       	call   119db <is_stack_addr>
   11a7f:	84 c0                	test   %al,%al
   11a81:	74 07                	je     11a8a <is_valid_sp+0x38>
   11a83:	b8 01 00 00 00       	mov    $0x1,%eax
   11a88:	eb 05                	jmp    11a8f <is_valid_sp+0x3d>
   11a8a:	b8 00 00 00 00       	mov    $0x0,%eax
   11a8f:	c9                   	leave  
   11a90:	c3                   	ret    

0000000000011a91 <is_utility_thread>:
   11a91:	f3 0f 1e fa          	endbr64 
   11a95:	55                   	push   %rbp
   11a96:	48 89 e5             	mov    %rsp,%rbp
   11a99:	48 83 ec 10          	sub    $0x10,%rsp
   11a9d:	e8 54 fc 01 00       	call   316f6 <get_thread_data>
   11aa2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11aa6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11aab:	74 17                	je     11ac4 <is_utility_thread+0x33>
   11aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ab1:	48 8b 40 30          	mov    0x30(%rax),%rax
   11ab5:	83 e0 01             	and    $0x1,%eax
   11ab8:	48 85 c0             	test   %rax,%rax
   11abb:	74 07                	je     11ac4 <is_utility_thread+0x33>
   11abd:	b8 01 00 00 00       	mov    $0x1,%eax
   11ac2:	eb 05                	jmp    11ac9 <is_utility_thread+0x38>
   11ac4:	b8 00 00 00 00       	mov    $0x0,%eax
   11ac9:	c9                   	leave  
   11aca:	c3                   	ret    

0000000000011acb <get_max_tcs_num>:
   11acb:	f3 0f 1e fa          	endbr64 
   11acf:	55                   	push   %rbp
   11ad0:	48 89 e5             	mov    %rsp,%rbp
   11ad3:	48 8d 05 16 83 02 00 	lea    0x28316(%rip),%rax        # 39df0 <EDMM_supported>
   11ada:	8b 00                	mov    (%rax),%eax
   11adc:	83 f8 01             	cmp    $0x1,%eax
   11adf:	75 0d                	jne    11aee <get_max_tcs_num+0x23>
   11ae1:	48 8d 05 58 24 02 00 	lea    0x22458(%rip),%rax        # 33f40 <g_global_data>
   11ae8:	48 8b 40 40          	mov    0x40(%rax),%rax
   11aec:	eb 0b                	jmp    11af9 <get_max_tcs_num+0x2e>
   11aee:	48 8d 05 4b 24 02 00 	lea    0x2244b(%rip),%rax        # 33f40 <g_global_data>
   11af5:	48 8b 40 48          	mov    0x48(%rax),%rax
   11af9:	5d                   	pop    %rbp
   11afa:	c3                   	ret    

0000000000011afb <is_pkru_enabled>:
   11afb:	f3 0f 1e fa          	endbr64 
   11aff:	55                   	push   %rbp
   11b00:	48 89 e5             	mov    %rsp,%rbp
   11b03:	48 83 ec 10          	sub    $0x10,%rsp
   11b07:	e8 99 0b 00 00       	call   126a5 <get_xfeature_state>
   11b0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b14:	25 00 02 00 00       	and    $0x200,%eax
   11b19:	48 85 c0             	test   %rax,%rax
   11b1c:	74 07                	je     11b25 <is_pkru_enabled+0x2a>
   11b1e:	b8 01 00 00 00       	mov    $0x1,%eax
   11b23:	eb 05                	jmp    11b2a <is_pkru_enabled+0x2f>
   11b25:	b8 00 00 00 00       	mov    $0x0,%eax
   11b2a:	c9                   	leave  
   11b2b:	c3                   	ret    

0000000000011b2c <is_tcs_binding_mode>:
   11b2c:	f3 0f 1e fa          	endbr64 
   11b30:	55                   	push   %rbp
   11b31:	48 89 e5             	mov    %rsp,%rbp
   11b34:	48 8d 05 05 24 02 00 	lea    0x22405(%rip),%rax        # 33f40 <g_global_data>
   11b3b:	48 8b 40 38          	mov    0x38(%rax),%rax
   11b3f:	48 85 c0             	test   %rax,%rax
   11b42:	0f 94 c0             	sete   %al
   11b45:	5d                   	pop    %rbp
   11b46:	c3                   	ret    

0000000000011b47 <get_xsave_size>:
   11b47:	f3 0f 1e fa          	endbr64 
   11b4b:	55                   	push   %rbp
   11b4c:	48 89 e5             	mov    %rsp,%rbp
   11b4f:	48 8d 05 ea 23 02 00 	lea    0x223ea(%rip),%rax        # 33f40 <g_global_data>
   11b56:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   11b5d:	5d                   	pop    %rbp
   11b5e:	c3                   	ret    

0000000000011b5f <sgx_register_exception_handler>:
   11b5f:	f3 0f 1e fa          	endbr64 
   11b63:	55                   	push   %rbp
   11b64:	48 89 e5             	mov    %rsp,%rbp
   11b67:	48 83 ec 30          	sub    $0x30,%rsp
   11b6b:	89 7d dc             	mov    %edi,-0x24(%rbp)
   11b6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11b72:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11b79:	00 00 
   11b7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b7f:	31 c0                	xor    %eax,%eax
   11b81:	48 8b 05 a0 fa 03 00 	mov    0x3faa0(%rip),%rax        # 51628 <_ZL12g_veh_cookie>
   11b88:	48 85 c0             	test   %rax,%rax
   11b8b:	0f 94 c0             	sete   %al
   11b8e:	0f b6 c0             	movzbl %al,%eax
   11b91:	48 85 c0             	test   %rax,%rax
   11b94:	74 66                	je     11bfc <sgx_register_exception_handler+0x9d>
   11b96:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   11b9d:	00 
   11b9e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11ba2:	be 08 00 00 00       	mov    $0x8,%esi
   11ba7:	48 89 c7             	mov    %rax,%rdi
   11baa:	e8 4b de ff ff       	call   f9fa <sgx_read_rand>
   11baf:	85 c0                	test   %eax,%eax
   11bb1:	0f 95 c0             	setne  %al
   11bb4:	84 c0                	test   %al,%al
   11bb6:	74 0a                	je     11bc2 <sgx_register_exception_handler+0x63>
   11bb8:	b8 00 00 00 00       	mov    $0x0,%eax
   11bbd:	e9 1a 01 00 00       	jmp    11cdc <sgx_register_exception_handler+0x17d>
   11bc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bc6:	48 85 c0             	test   %rax,%rax
   11bc9:	75 02                	jne    11bcd <sgx_register_exception_handler+0x6e>
   11bcb:	eb d1                	jmp    11b9e <sgx_register_exception_handler+0x3f>
   11bcd:	48 8d 3d 4c fa 03 00 	lea    0x3fa4c(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11bd4:	e8 c3 7a 00 00       	call   1969c <sgx_spin_lock>
   11bd9:	48 8b 05 48 fa 03 00 	mov    0x3fa48(%rip),%rax        # 51628 <_ZL12g_veh_cookie>
   11be0:	48 85 c0             	test   %rax,%rax
   11be3:	75 0b                	jne    11bf0 <sgx_register_exception_handler+0x91>
   11be5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11be9:	48 89 05 38 fa 03 00 	mov    %rax,0x3fa38(%rip)        # 51628 <_ZL12g_veh_cookie>
   11bf0:	48 8d 3d 29 fa 03 00 	lea    0x3fa29(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11bf7:	e8 3b 7b 00 00       	call   19737 <sgx_spin_unlock>
   11bfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11c00:	be 00 00 00 00       	mov    $0x0,%esi
   11c05:	48 89 c7             	mov    %rax,%rdi
   11c08:	e8 0d db ff ff       	call   f71a <sgx_is_within_enclave>
   11c0d:	85 c0                	test   %eax,%eax
   11c0f:	0f 94 c0             	sete   %al
   11c12:	84 c0                	test   %al,%al
   11c14:	74 0a                	je     11c20 <sgx_register_exception_handler+0xc1>
   11c16:	b8 00 00 00 00       	mov    $0x0,%eax
   11c1b:	e9 bc 00 00 00       	jmp    11cdc <sgx_register_exception_handler+0x17d>
   11c20:	bf 10 00 00 00       	mov    $0x10,%edi
   11c25:	e8 fd dd 00 00       	call   1fa27 <dlmalloc>
   11c2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11c2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11c33:	75 0a                	jne    11c3f <sgx_register_exception_handler+0xe0>
   11c35:	b8 00 00 00 00       	mov    $0x0,%eax
   11c3a:	e9 9d 00 00 00       	jmp    11cdc <sgx_register_exception_handler+0x17d>
   11c3f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11c43:	48 8b 05 de f9 03 00 	mov    0x3f9de(%rip),%rax        # 51628 <_ZL12g_veh_cookie>
   11c4a:	48 31 c2             	xor    %rax,%rdx
   11c4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c51:	48 89 10             	mov    %rdx,(%rax)
   11c54:	48 8d 3d c5 f9 03 00 	lea    0x3f9c5(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11c5b:	e8 3c 7a 00 00       	call   1969c <sgx_spin_lock>
   11c60:	48 8b 05 b1 f9 03 00 	mov    0x3f9b1(%rip),%rax        # 51618 <_ZL12g_first_node>
   11c67:	48 85 c0             	test   %rax,%rax
   11c6a:	74 06                	je     11c72 <sgx_register_exception_handler+0x113>
   11c6c:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   11c70:	74 1c                	je     11c8e <sgx_register_exception_handler+0x12f>
   11c72:	48 8b 15 9f f9 03 00 	mov    0x3f99f(%rip),%rdx        # 51618 <_ZL12g_first_node>
   11c79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11c81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c85:	48 89 05 8c f9 03 00 	mov    %rax,0x3f98c(%rip)        # 51618 <_ZL12g_first_node>
   11c8c:	eb 3e                	jmp    11ccc <sgx_register_exception_handler+0x16d>
   11c8e:	48 8b 05 83 f9 03 00 	mov    0x3f983(%rip),%rax        # 51618 <_ZL12g_first_node>
   11c95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11c99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c9d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11ca1:	48 85 c0             	test   %rax,%rax
   11ca4:	74 0e                	je     11cb4 <sgx_register_exception_handler+0x155>
   11ca6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11caa:	48 8b 40 08          	mov    0x8(%rax),%rax
   11cae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11cb2:	eb e5                	jmp    11c99 <sgx_register_exception_handler+0x13a>
   11cb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11cb8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11cbf:	00 
   11cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cc8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11ccc:	48 8d 3d 4d f9 03 00 	lea    0x3f94d(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11cd3:	e8 5f 7a 00 00       	call   19737 <sgx_spin_unlock>
   11cd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11cdc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11ce0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   11ce7:	00 00 
   11ce9:	74 05                	je     11cf0 <sgx_register_exception_handler+0x191>
   11ceb:	e8 07 1b 01 00       	call   237f7 <__stack_chk_fail>
   11cf0:	c9                   	leave  
   11cf1:	c3                   	ret    

0000000000011cf2 <sgx_unregister_exception_handler>:
   11cf2:	f3 0f 1e fa          	endbr64 
   11cf6:	55                   	push   %rbp
   11cf7:	48 89 e5             	mov    %rsp,%rbp
   11cfa:	48 83 ec 20          	sub    $0x20,%rsp
   11cfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11d02:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   11d07:	75 0a                	jne    11d13 <sgx_unregister_exception_handler+0x21>
   11d09:	b8 00 00 00 00       	mov    $0x0,%eax
   11d0e:	e9 b3 00 00 00       	jmp    11dc6 <sgx_unregister_exception_handler+0xd4>
   11d13:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   11d1a:	48 8d 3d ff f8 03 00 	lea    0x3f8ff(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11d21:	e8 76 79 00 00       	call   1969c <sgx_spin_lock>
   11d26:	48 8b 05 eb f8 03 00 	mov    0x3f8eb(%rip),%rax        # 51618 <_ZL12g_first_node>
   11d2d:	48 85 c0             	test   %rax,%rax
   11d30:	74 73                	je     11da5 <sgx_unregister_exception_handler+0xb3>
   11d32:	48 8b 05 df f8 03 00 	mov    0x3f8df(%rip),%rax        # 51618 <_ZL12g_first_node>
   11d39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d41:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11d45:	75 18                	jne    11d5f <sgx_unregister_exception_handler+0x6d>
   11d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d4b:	48 8b 40 08          	mov    0x8(%rax),%rax
   11d4f:	48 89 05 c2 f8 03 00 	mov    %rax,0x3f8c2(%rip)        # 51618 <_ZL12g_first_node>
   11d56:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   11d5d:	eb 46                	jmp    11da5 <sgx_unregister_exception_handler+0xb3>
   11d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d63:	48 8b 40 08          	mov    0x8(%rax),%rax
   11d67:	48 85 c0             	test   %rax,%rax
   11d6a:	74 39                	je     11da5 <sgx_unregister_exception_handler+0xb3>
   11d6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d70:	48 8b 40 08          	mov    0x8(%rax),%rax
   11d74:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11d78:	75 1d                	jne    11d97 <sgx_unregister_exception_handler+0xa5>
   11d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d7e:	48 8b 40 08          	mov    0x8(%rax),%rax
   11d82:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d8a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11d8e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   11d95:	eb 0e                	jmp    11da5 <sgx_unregister_exception_handler+0xb3>
   11d97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d9b:	48 8b 40 08          	mov    0x8(%rax),%rax
   11d9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11da3:	eb ba                	jmp    11d5f <sgx_unregister_exception_handler+0x6d>
   11da5:	48 8d 3d 74 f8 03 00 	lea    0x3f874(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11dac:	e8 86 79 00 00       	call   19737 <sgx_spin_unlock>
   11db1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   11db5:	74 0c                	je     11dc3 <sgx_unregister_exception_handler+0xd1>
   11db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11dbb:	48 89 c7             	mov    %rax,%rdi
   11dbe:	e8 5f e7 00 00       	call   20522 <dlfree>
   11dc3:	8b 45 f4             	mov    -0xc(%rbp),%eax
   11dc6:	c9                   	leave  
   11dc7:	c3                   	ret    

0000000000011dc8 <internal_handle_exception>:
   11dc8:	f3 0f 1e fa          	endbr64 
   11dcc:	55                   	push   %rbp
   11dcd:	48 89 e5             	mov    %rsp,%rbp
   11dd0:	48 83 ec 60          	sub    $0x60,%rsp
   11dd4:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   11dd8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11ddf:	00 00 
   11de1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11de5:	31 c0                	xor    %eax,%eax
   11de7:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   11dee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   11df5:	00 
   11df6:	e8 fb f8 01 00       	call   316f6 <get_thread_data>
   11dfb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11dff:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11e06:	00 
   11e07:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   11e0e:	00 
   11e0f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   11e16:	00 
   11e17:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   11e1e:	00 
   11e1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e23:	48 8b 40 60          	mov    0x60(%rax),%rax
   11e27:	48 85 c0             	test   %rax,%rax
   11e2a:	0f 88 f5 01 00 00    	js     12025 <internal_handle_exception+0x25d>
   11e30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e34:	48 8b 40 60          	mov    0x60(%rax),%rax
   11e38:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11e3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e40:	48 89 50 60          	mov    %rdx,0x60(%rax)
   11e44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e48:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   11e4e:	83 f8 0e             	cmp    $0xe,%eax
   11e51:	75 68                	jne    11ebb <internal_handle_exception+0xf3>
   11e53:	48 8b 05 d6 f7 03 00 	mov    0x3f7d6(%rip),%rax        # 51630 <g_mm_pfhandler>
   11e5a:	48 85 c0             	test   %rax,%rax
   11e5d:	74 5c                	je     11ebb <internal_handle_exception+0xf3>
   11e5f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e63:	48 8b 40 60          	mov    0x60(%rax),%rax
   11e67:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   11e6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e6f:	48 89 50 60          	mov    %rdx,0x60(%rax)
   11e73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e77:	48 05 98 00 00 00    	add    $0x98,%rax
   11e7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11e81:	48 8b 15 a8 f7 03 00 	mov    0x3f7a8(%rip),%rdx        # 51630 <g_mm_pfhandler>
   11e88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e8c:	48 89 c7             	mov    %rax,%rdi
   11e8f:	ff d2                	call   *%rdx
   11e91:	83 f8 ff             	cmp    $0xffffffff,%eax
   11e94:	0f 94 c0             	sete   %al
   11e97:	84 c0                	test   %al,%al
   11e99:	74 0c                	je     11ea7 <internal_handle_exception+0xdf>
   11e9b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e9f:	48 89 c7             	mov    %rax,%rdi
   11ea2:	e8 07 fc 01 00       	call   31aae <continue_execution>
   11ea7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11eab:	48 8b 40 60          	mov    0x60(%rax),%rax
   11eaf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11eb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11eb7:	48 89 50 60          	mov    %rdx,0x60(%rax)
   11ebb:	48 8d 3d 5e f7 03 00 	lea    0x3f75e(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11ec2:	e8 d5 77 00 00       	call   1969c <sgx_spin_lock>
   11ec7:	48 8b 05 4a f7 03 00 	mov    0x3f74a(%rip),%rax        # 51618 <_ZL12g_first_node>
   11ece:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11ed2:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   11ed7:	74 13                	je     11eec <internal_handle_exception+0x124>
   11ed9:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
   11ede:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ee2:	48 8b 40 08          	mov    0x8(%rax),%rax
   11ee6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11eea:	eb e6                	jmp    11ed2 <internal_handle_exception+0x10a>
   11eec:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11ef1:	75 24                	jne    11f17 <internal_handle_exception+0x14f>
   11ef3:	48 8d 3d 26 f7 03 00 	lea    0x3f726(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11efa:	e8 38 78 00 00       	call   19737 <sgx_spin_unlock>
   11eff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f03:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
   11f0a:	ff 
   11f0b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f0f:	48 89 c7             	mov    %rax,%rdi
   11f12:	e8 97 fb 01 00       	call   31aae <continue_execution>
   11f17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11f1b:	48 89 c7             	mov    %rax,%rdi
   11f1e:	e8 0d 73 00 00       	call   19230 <alloca>
   11f23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   11f27:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   11f2c:	0f 94 c0             	sete   %al
   11f2f:	84 c0                	test   %al,%al
   11f31:	74 11                	je     11f44 <internal_handle_exception+0x17c>
   11f33:	48 8d 3d e6 f6 03 00 	lea    0x3f6e6(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11f3a:	e8 f8 77 00 00       	call   19737 <sgx_spin_unlock>
   11f3f:	e9 e5 00 00 00       	jmp    12029 <internal_handle_exception+0x261>
   11f44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11f48:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11f4c:	48 8b 05 c5 f6 03 00 	mov    0x3f6c5(%rip),%rax        # 51618 <_ZL12g_first_node>
   11f53:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11f57:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   11f5c:	74 21                	je     11f7f <internal_handle_exception+0x1b7>
   11f5e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f62:	48 8b 10             	mov    (%rax),%rdx
   11f65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f69:	48 89 10             	mov    %rdx,(%rax)
   11f6c:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
   11f71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f75:	48 8b 40 08          	mov    0x8(%rax),%rax
   11f79:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11f7d:	eb d8                	jmp    11f57 <internal_handle_exception+0x18f>
   11f7f:	48 8d 3d 9a f6 03 00 	lea    0x3f69a(%rip),%rdi        # 51620 <_ZL14g_handler_lock>
   11f86:	e8 ac 77 00 00       	call   19737 <sgx_spin_unlock>
   11f8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f8f:	48 8b 40 60          	mov    0x60(%rax),%rax
   11f93:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   11f97:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f9b:	48 89 50 60          	mov    %rdx,0x60(%rax)
   11f9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11fa3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11fa7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11fac:	74 38                	je     11fe6 <internal_handle_exception+0x21e>
   11fae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fb2:	48 8b 10             	mov    (%rax),%rdx
   11fb5:	48 8b 05 6c f6 03 00 	mov    0x3f66c(%rip),%rax        # 51628 <_ZL12g_veh_cookie>
   11fbc:	48 31 d0             	xor    %rdx,%rax
   11fbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11fc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11fc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11fcb:	48 89 c7             	mov    %rax,%rdi
   11fce:	ff d2                	call   *%rdx
   11fd0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   11fd3:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
   11fd7:	74 0c                	je     11fe5 <internal_handle_exception+0x21d>
   11fd9:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
   11fde:	48 83 6d c0 08       	subq   $0x8,-0x40(%rbp)
   11fe3:	eb c2                	jmp    11fa7 <internal_handle_exception+0x1df>
   11fe5:	90                   	nop
   11fe6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11fea:	48 8b 40 20          	mov    0x20(%rax),%rax
   11fee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11ff2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ff6:	48 89 c7             	mov    %rax,%rdi
   11ff9:	e8 54 fa ff ff       	call   11a52 <is_valid_sp>
   11ffe:	83 f0 01             	xor    $0x1,%eax
   12001:	84 c0                	test   %al,%al
   12003:	75 23                	jne    12028 <internal_handle_exception+0x260>
   12005:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
   12009:	74 0c                	je     12017 <internal_handle_exception+0x24f>
   1200b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1200f:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
   12016:	ff 
   12017:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1201b:	48 89 c7             	mov    %rax,%rdi
   1201e:	e8 8b fa 01 00       	call   31aae <continue_execution>
   12023:	eb 04                	jmp    12029 <internal_handle_exception+0x261>
   12025:	90                   	nop
   12026:	eb 01                	jmp    12029 <internal_handle_exception+0x261>
   12028:	90                   	nop
   12029:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1202d:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
   12034:	ff 
   12035:	e8 61 fa 01 00       	call   31a9b <abort>

000000000001203a <_ZL21expand_stack_by_pagesPvm>:
   1203a:	f3 0f 1e fa          	endbr64 
   1203e:	55                   	push   %rbp
   1203f:	48 89 e5             	mov    %rsp,%rbp
   12042:	48 83 ec 20          	sub    $0x20,%rsp
   12046:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1204a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1204e:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
   12055:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1205a:	74 07                	je     12063 <_ZL21expand_stack_by_pagesPvm+0x29>
   1205c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   12061:	75 07                	jne    1206a <_ZL21expand_stack_by_pagesPvm+0x30>
   12063:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12068:	eb 20                	jmp    1208a <_ZL21expand_stack_by_pagesPvm+0x50>
   1206a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1206e:	48 c1 e0 0c          	shl    $0xc,%rax
   12072:	48 89 c2             	mov    %rax,%rdx
   12075:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12079:	48 89 d6             	mov    %rdx,%rsi
   1207c:	48 89 c7             	mov    %rax,%rdi
   1207f:	e8 04 61 00 00       	call   18188 <mm_commit>
   12084:	89 45 fc             	mov    %eax,-0x4(%rbp)
   12087:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1208a:	c9                   	leave  
   1208b:	c3                   	ret    

000000000001208c <trts_handle_exception>:
   1208c:	f3 0f 1e fa          	endbr64 
   12090:	55                   	push   %rbp
   12091:	48 89 e5             	mov    %rsp,%rbp
   12094:	53                   	push   %rbx
   12095:	48 83 ec 68          	sub    $0x68,%rsp
   12099:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   1209d:	e8 54 f6 01 00       	call   316f6 <get_thread_data>
   120a2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   120a6:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   120ad:	00 
   120ae:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   120b5:	00 
   120b6:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   120bd:	00 
   120be:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   120c5:	00 
   120c6:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   120cb:	0f 84 ae 05 00 00    	je     1267f <trts_handle_exception+0x5f3>
   120d1:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   120d6:	0f 84 a3 05 00 00    	je     1267f <trts_handle_exception+0x5f3>
   120dc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   120e0:	48 89 c7             	mov    %rax,%rdi
   120e3:	e8 2f da ff ff       	call   fb17 <check_static_stack_canary>
   120e8:	85 c0                	test   %eax,%eax
   120ea:	0f 95 c0             	setne  %al
   120ed:	84 c0                	test   %al,%al
   120ef:	0f 85 8d 05 00 00    	jne    12682 <trts_handle_exception+0x5f6>
   120f5:	e8 bd f5 01 00       	call   316b7 <get_enclave_state>
   120fa:	83 f8 02             	cmp    $0x2,%eax
   120fd:	0f 95 c0             	setne  %al
   12100:	84 c0                	test   %al,%al
   12102:	0f 85 7d 05 00 00    	jne    12685 <trts_handle_exception+0x5f9>
   12108:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1210c:	48 8b 40 60          	mov    0x60(%rax),%rax
   12110:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   12114:	0f 84 6e 05 00 00    	je     12688 <trts_handle_exception+0x5fc>
   1211a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1211e:	48 8b 40 10          	mov    0x10(%rax),%rax
   12122:	48 05 00 04 01 00    	add    $0x10400,%rax
   12128:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1212c:	75 31                	jne    1215f <trts_handle_exception+0xd3>
   1212e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12132:	48 8b 40 20          	mov    0x20(%rax),%rax
   12136:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1213c:	48 89 c3             	mov    %rax,%rbx
   1213f:	e8 03 fa ff ff       	call   11b47 <get_xsave_size>
   12144:	48 05 b7 10 00 00    	add    $0x10b7,%rax
   1214a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   12150:	48 29 c3             	sub    %rax,%rbx
   12153:	48 89 da             	mov    %rbx,%rdx
   12156:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1215a:	48 39 c2             	cmp    %rax,%rdx
   1215d:	74 07                	je     12166 <trts_handle_exception+0xda>
   1215f:	b8 01 00 00 00       	mov    $0x1,%eax
   12164:	eb 05                	jmp    1216b <trts_handle_exception+0xdf>
   12166:	b8 00 00 00 00       	mov    $0x0,%eax
   1216b:	84 c0                	test   %al,%al
   1216d:	0f 85 18 05 00 00    	jne    1268b <trts_handle_exception+0x5ff>
   12173:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12177:	48 8b 40 20          	mov    0x20(%rax),%rax
   1217b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1217f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12183:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   1218a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1218e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12192:	be 08 00 00 00       	mov    $0x8,%esi
   12197:	48 89 c7             	mov    %rax,%rdi
   1219a:	e8 12 d6 ff ff       	call   f7b1 <sgx_is_outside_enclave>
   1219f:	85 c0                	test   %eax,%eax
   121a1:	0f 94 c0             	sete   %al
   121a4:	84 c0                	test   %al,%al
   121a6:	74 14                	je     121bc <trts_handle_exception+0x130>
   121a8:	bf 03 00 00 00       	mov    $0x3,%edi
   121ad:	e8 16 f5 01 00       	call   316c8 <set_enclave_state>
   121b2:	b8 09 10 00 00       	mov    $0x1009,%eax
   121b7:	e9 e2 04 00 00       	jmp    1269e <trts_handle_exception+0x612>
   121bc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   121c0:	48 8b 40 20          	mov    0x20(%rax),%rax
   121c4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   121c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   121cc:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   121d0:	75 14                	jne    121e6 <trts_handle_exception+0x15a>
   121d2:	bf 03 00 00 00       	mov    $0x3,%edi
   121d7:	e8 ec f4 01 00       	call   316c8 <set_enclave_state>
   121dc:	b8 09 10 00 00       	mov    $0x1009,%eax
   121e1:	e9 b8 04 00 00       	jmp    1269e <trts_handle_exception+0x612>
   121e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   121ea:	be 00 00 00 00       	mov    $0x0,%esi
   121ef:	48 89 c7             	mov    %rax,%rdi
   121f2:	e8 e4 f7 ff ff       	call   119db <is_stack_addr>
   121f7:	83 f0 01             	xor    $0x1,%eax
   121fa:	84 c0                	test   %al,%al
   121fc:	74 14                	je     12212 <trts_handle_exception+0x186>
   121fe:	bf 03 00 00 00       	mov    $0x3,%edi
   12203:	e8 c0 f4 01 00       	call   316c8 <set_enclave_state>
   12208:	b8 09 10 00 00       	mov    $0x1009,%eax
   1220d:	e9 8c 04 00 00       	jmp    1269e <trts_handle_exception+0x612>
   12212:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   12219:	00 
   1221a:	48 83 6d c8 80       	subq   $0xffffffffffffff80,-0x38(%rbp)
   1221f:	48 81 45 c8 a8 00 00 	addq   $0xa8,-0x38(%rbp)
   12226:	00 
   12227:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1222b:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   1222f:	48 83 65 d8 f0       	andq   $0xfffffffffffffff0,-0x28(%rbp)
   12234:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12238:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1223c:	48 89 d6             	mov    %rdx,%rsi
   1223f:	48 89 c7             	mov    %rax,%rdi
   12242:	e8 94 f7 ff ff       	call   119db <is_stack_addr>
   12247:	83 f0 01             	xor    $0x1,%eax
   1224a:	84 c0                	test   %al,%al
   1224c:	74 14                	je     12262 <trts_handle_exception+0x1d6>
   1224e:	bf 03 00 00 00       	mov    $0x3,%edi
   12253:	e8 70 f4 01 00       	call   316c8 <set_enclave_state>
   12258:	b8 09 10 00 00       	mov    $0x1009,%eax
   1225d:	e9 3c 04 00 00       	jmp    1269e <trts_handle_exception+0x612>
   12262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12266:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1226a:	48 c7 45 c8 08 00 00 	movq   $0x8,-0x38(%rbp)
   12271:	00 
   12272:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12276:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   1227a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1227e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12282:	48 89 d6             	mov    %rdx,%rsi
   12285:	48 89 c7             	mov    %rax,%rdi
   12288:	e8 4e f7 ff ff       	call   119db <is_stack_addr>
   1228d:	83 f0 01             	xor    $0x1,%eax
   12290:	84 c0                	test   %al,%al
   12292:	74 14                	je     122a8 <trts_handle_exception+0x21c>
   12294:	bf 03 00 00 00       	mov    $0x3,%edi
   12299:	e8 2a f4 01 00       	call   316c8 <set_enclave_state>
   1229e:	b8 09 10 00 00       	mov    $0x1009,%eax
   122a3:	e9 f6 03 00 00       	jmp    1269e <trts_handle_exception+0x612>
   122a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   122ac:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   122b3:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   122b7:	0f 83 c4 00 00 00    	jae    12381 <trts_handle_exception+0x2f5>
   122bd:	c7 45 a4 ff ff ff ff 	movl   $0xffffffff,-0x5c(%rbp)
   122c4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   122cb:	00 
   122cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   122d0:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   122d7:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   122db:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   122e1:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   122e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   122eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   122ef:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   122f6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   122fa:	73 44                	jae    12340 <trts_handle_exception+0x2b4>
   122fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12300:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   12307:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1230b:	48 89 c2             	mov    %rax,%rdx
   1230e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12312:	48 8b 40 18          	mov    0x18(%rax),%rax
   12316:	48 39 c2             	cmp    %rax,%rdx
   12319:	72 25                	jb     12340 <trts_handle_exception+0x2b4>
   1231b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1231f:	48 c1 e8 0c          	shr    $0xc,%rax
   12323:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12327:	48 8b 92 98 00 00 00 	mov    0x98(%rdx),%rdx
   1232e:	48 2b 55 e8          	sub    -0x18(%rbp),%rdx
   12332:	48 89 c6             	mov    %rax,%rsi
   12335:	48 89 d7             	mov    %rdx,%rdi
   12338:	e8 fd fc ff ff       	call   1203a <_ZL21expand_stack_by_pagesPvm>
   1233d:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   12340:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   12344:	75 27                	jne    1236d <trts_handle_exception+0x2e1>
   12346:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1234a:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   12351:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12355:	48 89 c2             	mov    %rax,%rdx
   12358:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1235c:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   12363:	b8 00 00 00 00       	mov    $0x0,%eax
   12368:	e9 31 03 00 00       	jmp    1269e <trts_handle_exception+0x612>
   1236d:	bf 03 00 00 00       	mov    $0x3,%edi
   12372:	e8 51 f3 01 00       	call   316c8 <set_enclave_state>
   12377:	b8 09 10 00 00       	mov    $0x1009,%eax
   1237c:	e9 1d 03 00 00       	jmp    1269e <trts_handle_exception+0x612>
   12381:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12385:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   1238c:	48 8d 15 66 f6 01 00 	lea    0x1f666(%rip),%rdx        # 319f9 <Lereport_inst>
   12393:	48 39 d0             	cmp    %rdx,%rax
   12396:	75 4d                	jne    123e5 <trts_handle_exception+0x359>
   12398:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1239c:	48 8b 00             	mov    (%rax),%rax
   1239f:	48 85 c0             	test   %rax,%rax
   123a2:	75 41                	jne    123e5 <trts_handle_exception+0x359>
   123a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   123a8:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   123af:	48 8d 50 03          	lea    0x3(%rax),%rdx
   123b3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   123b7:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   123be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   123c2:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   123c9:	48 83 c8 01          	or     $0x1,%rax
   123cd:	48 89 c2             	mov    %rax,%rdx
   123d0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   123d4:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
   123db:	b8 00 00 00 00       	mov    $0x0,%eax
   123e0:	e9 b9 02 00 00       	jmp    1269e <trts_handle_exception+0x612>
   123e5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   123e9:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   123f0:	48 8d 15 20 f6 01 00 	lea    0x1f620(%rip),%rdx        # 31a17 <Leverifyreport2_inst>
   123f7:	48 39 d0             	cmp    %rdx,%rax
   123fa:	75 59                	jne    12455 <trts_handle_exception+0x3c9>
   123fc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12400:	48 8b 00             	mov    (%rax),%rax
   12403:	48 83 f8 08          	cmp    $0x8,%rax
   12407:	75 4c                	jne    12455 <trts_handle_exception+0x3c9>
   12409:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1240d:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   12414:	48 8d 50 03          	lea    0x3(%rax),%rdx
   12418:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1241c:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   12423:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12427:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   1242e:	48 83 c8 40          	or     $0x40,%rax
   12432:	48 89 c2             	mov    %rax,%rdx
   12435:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12439:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
   12440:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12444:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   1244b:	b8 00 00 00 00       	mov    $0x0,%eax
   12450:	e9 49 02 00 00       	jmp    1269e <trts_handle_exception+0x612>
   12455:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12459:	0f b6 80 a3 00 00 00 	movzbl 0xa3(%rax),%eax
   12460:	83 e0 80             	and    $0xffffff80,%eax
   12463:	84 c0                	test   %al,%al
   12465:	0f 84 23 02 00 00    	je     1268e <trts_handle_exception+0x602>
   1246b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1246f:	0f b6 80 a0 00 00 00 	movzbl 0xa0(%rax),%eax
   12476:	0f b6 d0             	movzbl %al,%edx
   12479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1247d:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
   12483:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12487:	0f b6 80 a1 00 00 00 	movzbl 0xa1(%rax),%eax
   1248e:	83 e0 07             	and    $0x7,%eax
   12491:	0f b6 d0             	movzbl %al,%edx
   12494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12498:	89 90 94 00 00 00    	mov    %edx,0x94(%rax)
   1249e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124a2:	48 8b 10             	mov    (%rax),%rdx
   124a5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124a9:	48 89 10             	mov    %rdx,(%rax)
   124ac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124b0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   124b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124b8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   124bc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124c0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   124c4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124c8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   124cc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124d0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   124d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124d8:	48 89 50 18          	mov    %rdx,0x18(%rax)
   124dc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124e0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   124e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124e8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   124ec:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   124f0:	48 8b 50 28          	mov    0x28(%rax),%rdx
   124f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   124f8:	48 89 50 28          	mov    %rdx,0x28(%rax)
   124fc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12500:	48 8b 50 30          	mov    0x30(%rax),%rdx
   12504:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12508:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1250c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12510:	48 8b 50 38          	mov    0x38(%rax),%rdx
   12514:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12518:	48 89 50 38          	mov    %rdx,0x38(%rax)
   1251c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12520:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
   12527:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1252b:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
   12532:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12536:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   1253d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12541:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   12548:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1254c:	48 8b 50 40          	mov    0x40(%rax),%rdx
   12550:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12554:	48 89 50 40          	mov    %rdx,0x40(%rax)
   12558:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1255c:	48 8b 50 48          	mov    0x48(%rax),%rdx
   12560:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12564:	48 89 50 48          	mov    %rdx,0x48(%rax)
   12568:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1256c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   12570:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12574:	48 89 50 50          	mov    %rdx,0x50(%rax)
   12578:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1257c:	48 8b 50 58          	mov    0x58(%rax),%rdx
   12580:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12584:	48 89 50 58          	mov    %rdx,0x58(%rax)
   12588:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1258c:	48 8b 50 60          	mov    0x60(%rax),%rdx
   12590:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12594:	48 89 50 60          	mov    %rdx,0x60(%rax)
   12598:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1259c:	48 8b 50 68          	mov    0x68(%rax),%rdx
   125a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125a4:	48 89 50 68          	mov    %rdx,0x68(%rax)
   125a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   125ac:	48 8b 50 70          	mov    0x70(%rax),%rdx
   125b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125b4:	48 89 50 70          	mov    %rdx,0x70(%rax)
   125b8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   125bc:	48 8b 50 78          	mov    0x78(%rax),%rdx
   125c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125c4:	48 89 50 78          	mov    %rdx,0x78(%rax)
   125c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125cc:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   125d2:	83 f8 0e             	cmp    $0xe,%eax
   125d5:	74 0f                	je     125e6 <trts_handle_exception+0x55a>
   125d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125db:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   125e1:	83 f8 0d             	cmp    $0xd,%eax
   125e4:	75 2f                	jne    12615 <trts_handle_exception+0x589>
   125e6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   125ea:	48 83 e8 10          	sub    $0x10,%rax
   125ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   125f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   125f6:	48 8b 10             	mov    (%rax),%rdx
   125f9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   125fd:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   12604:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12608:	8b 50 08             	mov    0x8(%rax),%edx
   1260b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1260f:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
   12615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12619:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1261d:	48 8d 15 a4 f7 ff ff 	lea    -0x85c(%rip),%rdx        # 11dc8 <internal_handle_exception>
   12624:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12628:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1262f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12633:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12637:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1263b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1263f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12643:	48 89 10             	mov    %rdx,(%rax)
   12646:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1264a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1264e:	48 89 50 38          	mov    %rdx,0x38(%rax)
   12652:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12656:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   1265d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12661:	48 89 10             	mov    %rdx,(%rax)
   12664:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12668:	0f b6 90 a3 00 00 00 	movzbl 0xa3(%rax),%edx
   1266f:	83 e2 7f             	and    $0x7f,%edx
   12672:	88 90 a3 00 00 00    	mov    %dl,0xa3(%rax)
   12678:	b8 00 00 00 00       	mov    $0x0,%eax
   1267d:	eb 1f                	jmp    1269e <trts_handle_exception+0x612>
   1267f:	90                   	nop
   12680:	eb 0d                	jmp    1268f <trts_handle_exception+0x603>
   12682:	90                   	nop
   12683:	eb 0a                	jmp    1268f <trts_handle_exception+0x603>
   12685:	90                   	nop
   12686:	eb 07                	jmp    1268f <trts_handle_exception+0x603>
   12688:	90                   	nop
   12689:	eb 04                	jmp    1268f <trts_handle_exception+0x603>
   1268b:	90                   	nop
   1268c:	eb 01                	jmp    1268f <trts_handle_exception+0x603>
   1268e:	90                   	nop
   1268f:	bf 03 00 00 00       	mov    $0x3,%edi
   12694:	e8 2f f0 01 00       	call   316c8 <set_enclave_state>
   12699:	b8 06 10 00 00       	mov    $0x1006,%eax
   1269e:	48 83 c4 68          	add    $0x68,%rsp
   126a2:	5b                   	pop    %rbx
   126a3:	5d                   	pop    %rbp
   126a4:	c3                   	ret    

00000000000126a5 <get_xfeature_state>:
   126a5:	f3 0f 1e fa          	endbr64 
   126a9:	55                   	push   %rbp
   126aa:	48 89 e5             	mov    %rsp,%rbp
   126ad:	48 83 ec 10          	sub    $0x10,%rsp
   126b1:	e8 81 e5 01 00       	call   30c37 <sgx_self_report>
   126b6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   126ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126be:	48 8b 40 38          	mov    0x38(%rax),%rax
   126c2:	48 83 f8 03          	cmp    $0x3,%rax
   126c6:	0f 95 c0             	setne  %al
   126c9:	0f b6 c0             	movzbl %al,%eax
   126cc:	89 05 32 d9 03 00    	mov    %eax,0x3d932(%rip)        # 50004 <g_xsave_enabled>
   126d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126d6:	48 8b 40 38          	mov    0x38(%rax),%rax
   126da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   126de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126e2:	c9                   	leave  
   126e3:	c3                   	ret    

00000000000126e4 <get_phdr>:
   126e4:	f3 0f 1e fa          	endbr64 
   126e8:	55                   	push   %rbp
   126e9:	48 89 e5             	mov    %rsp,%rbp
   126ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126f0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   126f5:	75 07                	jne    126fe <get_phdr+0x1a>
   126f7:	b8 00 00 00 00       	mov    $0x0,%eax
   126fc:	eb 5a                	jmp    12758 <get_phdr+0x74>
   126fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12702:	0f b6 00             	movzbl (%rax),%eax
   12705:	3c 7f                	cmp    $0x7f,%al
   12707:	75 24                	jne    1272d <get_phdr+0x49>
   12709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1270d:	0f b6 40 01          	movzbl 0x1(%rax),%eax
   12711:	3c 45                	cmp    $0x45,%al
   12713:	75 18                	jne    1272d <get_phdr+0x49>
   12715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12719:	0f b6 40 02          	movzbl 0x2(%rax),%eax
   1271d:	3c 4c                	cmp    $0x4c,%al
   1271f:	75 0c                	jne    1272d <get_phdr+0x49>
   12721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12725:	0f b6 40 03          	movzbl 0x3(%rax),%eax
   12729:	3c 46                	cmp    $0x46,%al
   1272b:	74 07                	je     12734 <get_phdr+0x50>
   1272d:	b8 00 00 00 00       	mov    $0x0,%eax
   12732:	eb 24                	jmp    12758 <get_phdr+0x74>
   12734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12738:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   1273c:	66 83 f8 03          	cmp    $0x3,%ax
   12740:	74 07                	je     12749 <get_phdr+0x65>
   12742:	b8 00 00 00 00       	mov    $0x0,%eax
   12747:	eb 0f                	jmp    12758 <get_phdr+0x74>
   12749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1274d:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12755:	48 01 d0             	add    %rdx,%rax
   12758:	5d                   	pop    %rbp
   12759:	c3                   	ret    

000000000001275a <get_sym>:
   1275a:	f3 0f 1e fa          	endbr64 
   1275e:	55                   	push   %rbp
   1275f:	48 89 e5             	mov    %rsp,%rbp
   12762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12766:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1276a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1276e:	48 89 d0             	mov    %rdx,%rax
   12771:	48 01 c0             	add    %rax,%rax
   12774:	48 01 d0             	add    %rdx,%rax
   12777:	48 c1 e0 03          	shl    $0x3,%rax
   1277b:	48 89 c2             	mov    %rax,%rdx
   1277e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12782:	48 01 d0             	add    %rdx,%rax
   12785:	0f b6 40 04          	movzbl 0x4(%rax),%eax
   12789:	c0 e8 04             	shr    $0x4,%al
   1278c:	3c 02                	cmp    $0x2,%al
   1278e:	75 2b                	jne    127bb <get_sym+0x61>
   12790:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12794:	48 89 d0             	mov    %rdx,%rax
   12797:	48 01 c0             	add    %rax,%rax
   1279a:	48 01 d0             	add    %rdx,%rax
   1279d:	48 c1 e0 03          	shl    $0x3,%rax
   127a1:	48 89 c2             	mov    %rax,%rdx
   127a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a8:	48 01 d0             	add    %rdx,%rax
   127ab:	48 8b 40 08          	mov    0x8(%rax),%rax
   127af:	48 85 c0             	test   %rax,%rax
   127b2:	75 07                	jne    127bb <get_sym+0x61>
   127b4:	b8 00 00 00 00       	mov    $0x0,%eax
   127b9:	eb 1b                	jmp    127d6 <get_sym+0x7c>
   127bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127bf:	48 89 d0             	mov    %rdx,%rax
   127c2:	48 01 c0             	add    %rax,%rax
   127c5:	48 01 d0             	add    %rdx,%rax
   127c8:	48 c1 e0 03          	shl    $0x3,%rax
   127cc:	48 89 c2             	mov    %rax,%rdx
   127cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127d3:	48 01 d0             	add    %rdx,%rax
   127d6:	5d                   	pop    %rbp
   127d7:	c3                   	ret    

00000000000127d8 <do_relocs>:
   127d8:	f3 0f 1e fa          	endbr64 
   127dc:	55                   	push   %rbp
   127dd:	48 89 e5             	mov    %rsp,%rbp
   127e0:	48 83 ec 60          	sub    $0x60,%rsp
   127e4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   127e8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   127ec:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   127f0:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   127f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   127fb:	00 00 
   127fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12801:	31 c0                	xor    %eax,%eax
   12803:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   12807:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1280b:	48 01 d0             	add    %rdx,%rax
   1280e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12812:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   12816:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1281a:	48 01 d0             	add    %rdx,%rax
   1281d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12821:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   12828:	00 
   12829:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   12830:	00 
   12831:	e9 a2 01 00 00       	jmp    129d8 <do_relocs+0x200>
   12836:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1283a:	48 8b 10             	mov    (%rax),%rdx
   1283d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12841:	48 01 d0             	add    %rdx,%rax
   12844:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12848:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1284c:	48 8b 40 08          	mov    0x8(%rax),%rax
   12850:	89 c0                	mov    %eax,%eax
   12852:	48 83 f8 12          	cmp    $0x12,%rax
   12856:	0f 87 61 01 00 00    	ja     129bd <do_relocs+0x1e5>
   1285c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12863:	00 
   12864:	48 8d 05 2d 0a 02 00 	lea    0x20a2d(%rip),%rax        # 33298 <__func__.2623+0x48>
   1286b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1286e:	48 98                	cltq   
   12870:	48 8d 15 21 0a 02 00 	lea    0x20a21(%rip),%rdx        # 33298 <__func__.2623+0x48>
   12877:	48 01 d0             	add    %rdx,%rax
   1287a:	3e ff e0             	notrack jmp *%rax
   1287d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12881:	48 8b 40 10          	mov    0x10(%rax),%rax
   12885:	48 89 c2             	mov    %rax,%rdx
   12888:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1288c:	48 01 c2             	add    %rax,%rdx
   1288f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12893:	48 89 10             	mov    %rdx,(%rax)
   12896:	e9 33 01 00 00       	jmp    129ce <do_relocs+0x1f6>
   1289b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1289f:	48 8b 40 08          	mov    0x8(%rax),%rax
   128a3:	48 c1 e8 20          	shr    $0x20,%rax
   128a7:	48 89 c2             	mov    %rax,%rdx
   128aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128ae:	48 89 d6             	mov    %rdx,%rsi
   128b1:	48 89 c7             	mov    %rax,%rdi
   128b4:	e8 a1 fe ff ff       	call   1275a <get_sym>
   128b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   128bd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   128c2:	0f 84 ff 00 00 00    	je     129c7 <do_relocs+0x1ef>
   128c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128cc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   128d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   128d4:	48 01 c2             	add    %rax,%rdx
   128d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   128db:	48 8b 40 10          	mov    0x10(%rax),%rax
   128df:	48 01 c2             	add    %rax,%rdx
   128e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128e6:	48 89 10             	mov    %rdx,(%rax)
   128e9:	e9 e0 00 00 00       	jmp    129ce <do_relocs+0x1f6>
   128ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128f2:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   128f9:	e9 d0 00 00 00       	jmp    129ce <do_relocs+0x1f6>
   128fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12902:	48 8b 40 08          	mov    0x8(%rax),%rax
   12906:	48 c1 e8 20          	shr    $0x20,%rax
   1290a:	48 89 c2             	mov    %rax,%rdx
   1290d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12911:	48 89 d6             	mov    %rdx,%rsi
   12914:	48 89 c7             	mov    %rax,%rdi
   12917:	e8 3e fe ff ff       	call   1275a <get_sym>
   1291c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12920:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12925:	0f 84 9f 00 00 00    	je     129ca <do_relocs+0x1f2>
   1292b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1292f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12933:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12937:	48 8b 40 10          	mov    0x10(%rax),%rax
   1293b:	48 01 c2             	add    %rax,%rdx
   1293e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12942:	48 89 10             	mov    %rdx,(%rax)
   12945:	e9 84 00 00 00       	jmp    129ce <do_relocs+0x1f6>
   1294a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1294e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12952:	48 c1 e8 20          	shr    $0x20,%rax
   12956:	48 89 c2             	mov    %rax,%rdx
   12959:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1295d:	48 89 d6             	mov    %rdx,%rsi
   12960:	48 89 c7             	mov    %rax,%rdi
   12963:	e8 f2 fd ff ff       	call   1275a <get_sym>
   12968:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1296c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12971:	74 5a                	je     129cd <do_relocs+0x1f5>
   12973:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12977:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   1297b:	48 89 d6             	mov    %rdx,%rsi
   1297e:	48 89 c7             	mov    %rax,%rdi
   12981:	e8 57 03 00 00       	call   12cdd <elf_tls_aligned_virtual_size>
   12986:	85 c0                	test   %eax,%eax
   12988:	75 2c                	jne    129b6 <do_relocs+0x1de>
   1298a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1298e:	48 85 c0             	test   %rax,%rax
   12991:	74 23                	je     129b6 <do_relocs+0x1de>
   12993:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12997:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1299b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1299f:	48 8b 40 10          	mov    0x10(%rax),%rax
   129a3:	48 01 c2             	add    %rax,%rdx
   129a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   129aa:	48 29 c2             	sub    %rax,%rdx
   129ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129b1:	48 89 10             	mov    %rdx,(%rax)
   129b4:	eb 18                	jmp    129ce <do_relocs+0x1f6>
   129b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   129bb:	eb 2e                	jmp    129eb <do_relocs+0x213>
   129bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   129c2:	eb 27                	jmp    129eb <do_relocs+0x213>
   129c4:	90                   	nop
   129c5:	eb 07                	jmp    129ce <do_relocs+0x1f6>
   129c7:	90                   	nop
   129c8:	eb 04                	jmp    129ce <do_relocs+0x1f6>
   129ca:	90                   	nop
   129cb:	eb 01                	jmp    129ce <do_relocs+0x1f6>
   129cd:	90                   	nop
   129ce:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   129d3:	48 83 45 d0 18       	addq   $0x18,-0x30(%rbp)
   129d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129dc:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   129e0:	0f 82 50 fe ff ff    	jb     12836 <do_relocs+0x5e>
   129e6:	b8 00 00 00 00       	mov    $0x0,%eax
   129eb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   129ef:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   129f6:	00 00 
   129f8:	74 05                	je     129ff <do_relocs+0x227>
   129fa:	e8 f8 0d 01 00       	call   237f7 <__stack_chk_fail>
   129ff:	c9                   	leave  
   12a00:	c3                   	ret    

0000000000012a01 <relocate_enclave>:
   12a01:	f3 0f 1e fa          	endbr64 
   12a05:	55                   	push   %rbp
   12a06:	48 89 e5             	mov    %rsp,%rbp
   12a09:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   12a0d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   12a11:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
   12a18:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12a1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12a20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a24:	48 89 c7             	mov    %rax,%rdi
   12a27:	e8 b8 fc ff ff       	call   126e4 <get_phdr>
   12a2c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   12a30:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   12a35:	0f 85 c3 01 00 00    	jne    12bfe <relocate_enclave+0x1fd>
   12a3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12a40:	e9 d2 01 00 00       	jmp    12c17 <relocate_enclave+0x216>
   12a45:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12a49:	8b 00                	mov    (%rax),%eax
   12a4b:	83 f8 02             	cmp    $0x2,%eax
   12a4e:	0f 85 a1 01 00 00    	jne    12bf5 <relocate_enclave+0x1f4>
   12a54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12a58:	48 8b 40 20          	mov    0x20(%rax),%rax
   12a5c:	48 c1 e8 04          	shr    $0x4,%rax
   12a60:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12a64:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12a68:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12a6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a70:	48 01 d0             	add    %rdx,%rax
   12a73:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   12a77:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   12a7e:	00 
   12a7f:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   12a86:	00 
   12a87:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   12a8e:	00 
   12a8f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   12a96:	00 
   12a97:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   12a9e:	00 
   12a9f:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   12aa6:	00 
   12aa7:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   12aae:	00 
   12aaf:	e9 9b 00 00 00       	jmp    12b4f <relocate_enclave+0x14e>
   12ab4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12ab8:	48 8b 00             	mov    (%rax),%rax
   12abb:	48 85 c0             	test   %rax,%rax
   12abe:	0f 84 9b 00 00 00    	je     12b5f <relocate_enclave+0x15e>
   12ac4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12ac8:	48 8b 00             	mov    (%rax),%rax
   12acb:	48 83 f8 17          	cmp    $0x17,%rax
   12acf:	77 74                	ja     12b45 <relocate_enclave+0x144>
   12ad1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12ad8:	00 
   12ad9:	48 8d 05 04 08 02 00 	lea    0x20804(%rip),%rax        # 332e4 <__func__.2623+0x94>
   12ae0:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   12ae3:	48 98                	cltq   
   12ae5:	48 8d 15 f8 07 02 00 	lea    0x207f8(%rip),%rdx        # 332e4 <__func__.2623+0x94>
   12aec:	48 01 d0             	add    %rdx,%rax
   12aef:	3e ff e0             	notrack jmp *%rax
   12af2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12af6:	48 8b 40 08          	mov    0x8(%rax),%rax
   12afa:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   12afe:	eb 45                	jmp    12b45 <relocate_enclave+0x144>
   12b00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b04:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b08:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12b0c:	eb 37                	jmp    12b45 <relocate_enclave+0x144>
   12b0e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b12:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b16:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   12b1a:	eb 29                	jmp    12b45 <relocate_enclave+0x144>
   12b1c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b20:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b24:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12b28:	eb 1b                	jmp    12b45 <relocate_enclave+0x144>
   12b2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b2e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12b36:	eb 0d                	jmp    12b45 <relocate_enclave+0x144>
   12b38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b3c:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b40:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12b44:	90                   	nop
   12b45:	48 83 45 a0 01       	addq   $0x1,-0x60(%rbp)
   12b4a:	48 83 45 a8 10       	addq   $0x10,-0x58(%rbp)
   12b4f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12b53:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12b57:	0f 82 57 ff ff ff    	jb     12ab4 <relocate_enclave+0xb3>
   12b5d:	eb 01                	jmp    12b60 <relocate_enclave+0x15f>
   12b5f:	90                   	nop
   12b60:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   12b65:	74 45                	je     12bac <relocate_enclave+0x1ab>
   12b67:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12b6c:	75 0a                	jne    12b78 <relocate_enclave+0x177>
   12b6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12b73:	e9 9f 00 00 00       	jmp    12c17 <relocate_enclave+0x216>
   12b78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12b7c:	ba 00 00 00 00       	mov    $0x0,%edx
   12b81:	48 f7 75 d0          	divq   -0x30(%rbp)
   12b85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12b89:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12b8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12b91:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   12b95:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   12b99:	48 89 c7             	mov    %rax,%rdi
   12b9c:	e8 37 fc ff ff       	call   127d8 <do_relocs>
   12ba1:	85 c0                	test   %eax,%eax
   12ba3:	74 07                	je     12bac <relocate_enclave+0x1ab>
   12ba5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12baa:	eb 6b                	jmp    12c17 <relocate_enclave+0x216>
   12bac:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12bb1:	74 42                	je     12bf5 <relocate_enclave+0x1f4>
   12bb3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12bb8:	75 07                	jne    12bc1 <relocate_enclave+0x1c0>
   12bba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12bbf:	eb 56                	jmp    12c17 <relocate_enclave+0x216>
   12bc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bc5:	ba 00 00 00 00       	mov    $0x0,%edx
   12bca:	48 f7 75 d0          	divq   -0x30(%rbp)
   12bce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12bd2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12bd6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12bda:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   12bde:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   12be2:	48 89 c7             	mov    %rax,%rdi
   12be5:	e8 ee fb ff ff       	call   127d8 <do_relocs>
   12bea:	85 c0                	test   %eax,%eax
   12bec:	74 07                	je     12bf5 <relocate_enclave+0x1f4>
   12bee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12bf3:	eb 22                	jmp    12c17 <relocate_enclave+0x216>
   12bf5:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
   12bf9:	48 83 45 98 38       	addq   $0x38,-0x68(%rbp)
   12bfe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c02:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   12c06:	0f b7 c0             	movzwl %ax,%eax
   12c09:	39 45 94             	cmp    %eax,-0x6c(%rbp)
   12c0c:	0f 82 33 fe ff ff    	jb     12a45 <relocate_enclave+0x44>
   12c12:	b8 00 00 00 00       	mov    $0x0,%eax
   12c17:	c9                   	leave  
   12c18:	c3                   	ret    

0000000000012c19 <elf_tls_info>:
   12c19:	f3 0f 1e fa          	endbr64 
   12c1d:	55                   	push   %rbp
   12c1e:	48 89 e5             	mov    %rsp,%rbp
   12c21:	48 83 ec 38          	sub    $0x38,%rsp
   12c25:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12c29:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12c2d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12c31:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   12c38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c44:	48 89 c7             	mov    %rax,%rdi
   12c47:	e8 98 fa ff ff       	call   126e4 <get_phdr>
   12c4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12c50:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12c55:	74 07                	je     12c5e <elf_tls_info+0x45>
   12c57:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   12c5c:	75 07                	jne    12c65 <elf_tls_info+0x4c>
   12c5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12c63:	eb 76                	jmp    12cdb <elf_tls_info+0xc2>
   12c65:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12c6a:	75 07                	jne    12c73 <elf_tls_info+0x5a>
   12c6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12c71:	eb 68                	jmp    12cdb <elf_tls_info+0xc2>
   12c73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c77:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12c7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c82:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12c89:	eb 3b                	jmp    12cc6 <elf_tls_info+0xad>
   12c8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c8f:	8b 00                	mov    (%rax),%eax
   12c91:	83 f8 07             	cmp    $0x7,%eax
   12c94:	75 27                	jne    12cbd <elf_tls_info+0xa4>
   12c96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c9a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12c9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ca2:	48 01 c2             	add    %rax,%rdx
   12ca5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12ca9:	48 89 10             	mov    %rdx,(%rax)
   12cac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cb0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12cb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cb8:	48 89 10             	mov    %rdx,(%rax)
   12cbb:	eb 19                	jmp    12cd6 <elf_tls_info+0xbd>
   12cbd:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   12cc1:	48 83 45 f0 38       	addq   $0x38,-0x10(%rbp)
   12cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cca:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   12cce:	0f b7 c0             	movzwl %ax,%eax
   12cd1:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   12cd4:	72 b5                	jb     12c8b <elf_tls_info+0x72>
   12cd6:	b8 00 00 00 00       	mov    $0x0,%eax
   12cdb:	c9                   	leave  
   12cdc:	c3                   	ret    

0000000000012cdd <elf_tls_aligned_virtual_size>:
   12cdd:	f3 0f 1e fa          	endbr64 
   12ce1:	55                   	push   %rbp
   12ce2:	48 89 e5             	mov    %rsp,%rbp
   12ce5:	48 83 ec 40          	sub    $0x40,%rsp
   12ce9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12ced:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   12cf1:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   12cf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cfc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12d00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d04:	48 89 c7             	mov    %rax,%rdi
   12d07:	e8 d8 f9 ff ff       	call   126e4 <get_phdr>
   12d0c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12d10:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12d17:	00 
   12d18:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   12d1f:	00 
   12d20:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   12d25:	75 0a                	jne    12d31 <elf_tls_aligned_virtual_size+0x54>
   12d27:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12d2c:	e9 9c 00 00 00       	jmp    12dcd <elf_tls_aligned_virtual_size+0xf0>
   12d31:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12d36:	75 0a                	jne    12d42 <elf_tls_aligned_virtual_size+0x65>
   12d38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12d3d:	e9 8b 00 00 00       	jmp    12dcd <elf_tls_aligned_virtual_size+0xf0>
   12d42:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12d46:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12d4d:	eb 69                	jmp    12db8 <elf_tls_aligned_virtual_size+0xdb>
   12d4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d53:	8b 00                	mov    (%rax),%eax
   12d55:	83 f8 07             	cmp    $0x7,%eax
   12d58:	75 55                	jne    12daf <elf_tls_aligned_virtual_size+0xd2>
   12d5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d5e:	48 8b 40 28          	mov    0x28(%rax),%rax
   12d62:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12d66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d6a:	48 8b 40 30          	mov    0x30(%rax),%rax
   12d6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12d72:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12d77:	74 07                	je     12d80 <elf_tls_aligned_virtual_size+0xa3>
   12d79:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
   12d7e:	75 0d                	jne    12d8d <elf_tls_aligned_virtual_size+0xb0>
   12d80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12d84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d88:	48 89 10             	mov    %rdx,(%rax)
   12d8b:	eb 3b                	jmp    12dc8 <elf_tls_aligned_virtual_size+0xeb>
   12d8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d95:	48 01 d0             	add    %rdx,%rax
   12d98:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   12d9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12da0:	48 f7 d8             	neg    %rax
   12da3:	48 21 c2             	and    %rax,%rdx
   12da6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12daa:	48 89 10             	mov    %rdx,(%rax)
   12dad:	eb 19                	jmp    12dc8 <elf_tls_aligned_virtual_size+0xeb>
   12daf:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   12db3:	48 83 45 e0 38       	addq   $0x38,-0x20(%rbp)
   12db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12dbc:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   12dc0:	0f b7 c0             	movzwl %ax,%eax
   12dc3:	39 45 dc             	cmp    %eax,-0x24(%rbp)
   12dc6:	72 87                	jb     12d4f <elf_tls_aligned_virtual_size+0x72>
   12dc8:	b8 00 00 00 00       	mov    $0x0,%eax
   12dcd:	c9                   	leave  
   12dce:	c3                   	ret    

0000000000012dcf <elf_get_init_array>:
   12dcf:	f3 0f 1e fa          	endbr64 
   12dd3:	55                   	push   %rbp
   12dd4:	48 89 e5             	mov    %rsp,%rbp
   12dd7:	48 83 ec 48          	sub    $0x48,%rsp
   12ddb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12ddf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   12de3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   12de7:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   12dee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12df2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12df6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12dfa:	48 89 c7             	mov    %rax,%rdi
   12dfd:	e8 e2 f8 ff ff       	call   126e4 <get_phdr>
   12e02:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12e06:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12e0b:	74 07                	je     12e14 <elf_get_init_array+0x45>
   12e0d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   12e12:	75 0a                	jne    12e1e <elf_get_init_array+0x4f>
   12e14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12e19:	e9 d0 00 00 00       	jmp    12eee <elf_get_init_array+0x11f>
   12e1e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12e23:	75 0a                	jne    12e2f <elf_get_init_array+0x60>
   12e25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12e2a:	e9 bf 00 00 00       	jmp    12eee <elf_get_init_array+0x11f>
   12e2f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12e33:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12e3a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12e3e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12e45:	e9 8b 00 00 00       	jmp    12ed5 <elf_get_init_array+0x106>
   12e4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e4e:	8b 00                	mov    (%rax),%eax
   12e50:	83 f8 02             	cmp    $0x2,%eax
   12e53:	75 77                	jne    12ecc <elf_get_init_array+0xfd>
   12e55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e59:	48 8b 40 20          	mov    0x20(%rax),%rax
   12e5d:	48 c1 e8 04          	shr    $0x4,%rax
   12e61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12e65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e69:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12e6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e71:	48 01 d0             	add    %rdx,%rax
   12e74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12e78:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   12e7f:	00 
   12e80:	eb 40                	jmp    12ec2 <elf_get_init_array+0xf3>
   12e82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e86:	48 8b 00             	mov    (%rax),%rax
   12e89:	48 83 f8 19          	cmp    $0x19,%rax
   12e8d:	74 08                	je     12e97 <elf_get_init_array+0xc8>
   12e8f:	48 83 f8 1b          	cmp    $0x1b,%rax
   12e93:	74 13                	je     12ea8 <elf_get_init_array+0xd9>
   12e95:	eb 21                	jmp    12eb8 <elf_get_init_array+0xe9>
   12e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e9b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12e9f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12ea3:	48 89 10             	mov    %rdx,(%rax)
   12ea6:	eb 10                	jmp    12eb8 <elf_get_init_array+0xe9>
   12ea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12eac:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12eb0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12eb4:	48 89 10             	mov    %rdx,(%rax)
   12eb7:	90                   	nop
   12eb8:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   12ebd:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
   12ec2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ec6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   12eca:	72 b6                	jb     12e82 <elf_get_init_array+0xb3>
   12ecc:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   12ed0:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   12ed5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ed9:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   12edd:	0f b7 c0             	movzwl %ax,%eax
   12ee0:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   12ee3:	0f 82 61 ff ff ff    	jb     12e4a <elf_get_init_array+0x7b>
   12ee9:	b8 00 00 00 00       	mov    $0x0,%eax
   12eee:	c9                   	leave  
   12eef:	c3                   	ret    

0000000000012ef0 <elf_get_uninit_array>:
   12ef0:	f3 0f 1e fa          	endbr64 
   12ef4:	55                   	push   %rbp
   12ef5:	48 89 e5             	mov    %rsp,%rbp
   12ef8:	48 83 ec 48          	sub    $0x48,%rsp
   12efc:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12f00:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   12f04:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   12f08:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   12f0f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12f17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f1b:	48 89 c7             	mov    %rax,%rdi
   12f1e:	e8 c1 f7 ff ff       	call   126e4 <get_phdr>
   12f23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12f27:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12f2c:	74 07                	je     12f35 <elf_get_uninit_array+0x45>
   12f2e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   12f33:	75 0a                	jne    12f3f <elf_get_uninit_array+0x4f>
   12f35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12f3a:	e9 d0 00 00 00       	jmp    1300f <elf_get_uninit_array+0x11f>
   12f3f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12f44:	75 0a                	jne    12f50 <elf_get_uninit_array+0x60>
   12f46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12f4b:	e9 bf 00 00 00       	jmp    1300f <elf_get_uninit_array+0x11f>
   12f50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12f54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12f5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12f5f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12f66:	e9 8b 00 00 00       	jmp    12ff6 <elf_get_uninit_array+0x106>
   12f6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f6f:	8b 00                	mov    (%rax),%eax
   12f71:	83 f8 02             	cmp    $0x2,%eax
   12f74:	75 77                	jne    12fed <elf_get_uninit_array+0xfd>
   12f76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f7a:	48 8b 40 20          	mov    0x20(%rax),%rax
   12f7e:	48 c1 e8 04          	shr    $0x4,%rax
   12f82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12f86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f8a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12f8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f92:	48 01 d0             	add    %rdx,%rax
   12f95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12f99:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   12fa0:	00 
   12fa1:	eb 40                	jmp    12fe3 <elf_get_uninit_array+0xf3>
   12fa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fa7:	48 8b 00             	mov    (%rax),%rax
   12faa:	48 83 f8 1a          	cmp    $0x1a,%rax
   12fae:	74 08                	je     12fb8 <elf_get_uninit_array+0xc8>
   12fb0:	48 83 f8 1c          	cmp    $0x1c,%rax
   12fb4:	74 13                	je     12fc9 <elf_get_uninit_array+0xd9>
   12fb6:	eb 21                	jmp    12fd9 <elf_get_uninit_array+0xe9>
   12fb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fbc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12fc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12fc4:	48 89 10             	mov    %rdx,(%rax)
   12fc7:	eb 10                	jmp    12fd9 <elf_get_uninit_array+0xe9>
   12fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fcd:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12fd1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fd5:	48 89 10             	mov    %rdx,(%rax)
   12fd8:	90                   	nop
   12fd9:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   12fde:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
   12fe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12fe7:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   12feb:	72 b6                	jb     12fa3 <elf_get_uninit_array+0xb3>
   12fed:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   12ff1:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   12ff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ffa:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   12ffe:	0f b7 c0             	movzwl %ax,%eax
   13001:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   13004:	0f 82 61 ff ff ff    	jb     12f6b <elf_get_uninit_array+0x7b>
   1300a:	b8 00 00 00 00       	mov    $0x0,%eax
   1300f:	c9                   	leave  
   13010:	c3                   	ret    

0000000000013011 <has_text_relo>:
   13011:	f3 0f 1e fa          	endbr64 
   13015:	55                   	push   %rbp
   13016:	48 89 e5             	mov    %rsp,%rbp
   13019:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1301d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13021:	89 55 cc             	mov    %edx,-0x34(%rbp)
   13024:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   1302b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   13032:	eb 7c                	jmp    130b0 <has_text_relo+0x9f>
   13034:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13038:	8b 00                	mov    (%rax),%eax
   1303a:	83 f8 02             	cmp    $0x2,%eax
   1303d:	75 68                	jne    130a7 <has_text_relo+0x96>
   1303f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13043:	48 8b 40 20          	mov    0x20(%rax),%rax
   13047:	48 c1 e8 04          	shr    $0x4,%rax
   1304b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1304f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13053:	48 8b 50 18          	mov    0x18(%rax),%rdx
   13057:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1305b:	48 01 d0             	add    %rdx,%rax
   1305e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13062:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13069:	00 
   1306a:	eb 2c                	jmp    13098 <has_text_relo+0x87>
   1306c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13070:	48 8b 00             	mov    (%rax),%rax
   13073:	48 85 c0             	test   %rax,%rax
   13076:	74 2c                	je     130a4 <has_text_relo+0x93>
   13078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1307c:	48 8b 00             	mov    (%rax),%rax
   1307f:	48 83 f8 16          	cmp    $0x16,%rax
   13083:	75 09                	jne    1308e <has_text_relo+0x7d>
   13085:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
   1308c:	eb 17                	jmp    130a5 <has_text_relo+0x94>
   1308e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   13093:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
   13098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1309c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   130a0:	72 ca                	jb     1306c <has_text_relo+0x5b>
   130a2:	eb 18                	jmp    130bc <has_text_relo+0xab>
   130a4:	90                   	nop
   130a5:	eb 15                	jmp    130bc <has_text_relo+0xab>
   130a7:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
   130ab:	48 83 45 d0 38       	addq   $0x38,-0x30(%rbp)
   130b0:	8b 45 e0             	mov    -0x20(%rbp),%eax
   130b3:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   130b6:	0f 82 78 ff ff ff    	jb     13034 <has_text_relo+0x23>
   130bc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   130bf:	5d                   	pop    %rbp
   130c0:	c3                   	ret    

00000000000130c1 <change_protection>:
   130c1:	f3 0f 1e fa          	endbr64 
   130c5:	55                   	push   %rbp
   130c6:	48 89 e5             	mov    %rsp,%rbp
   130c9:	48 83 ec 60          	sub    $0x60,%rsp
   130cd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   130d1:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   130d8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   130dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   130e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   130e4:	48 89 c7             	mov    %rax,%rdi
   130e7:	e8 f8 f5 ff ff       	call   126e4 <get_phdr>
   130ec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   130f0:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   130f7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   130fc:	75 08                	jne    13106 <change_protection+0x45>
   130fe:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13101:	e9 80 02 00 00       	jmp    13386 <change_protection+0x2c5>
   13106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1310a:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1310e:	0f b7 d0             	movzwl %ax,%edx
   13111:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   13115:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13119:	48 89 ce             	mov    %rcx,%rsi
   1311c:	48 89 c7             	mov    %rax,%rdi
   1311f:	e8 ed fe ff ff       	call   13011 <has_text_relo>
   13124:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   13127:	e9 62 01 00 00       	jmp    1328e <change_protection+0x1cd>
   1312c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   13130:	0f 84 c4 00 00 00    	je     131fa <change_protection+0x139>
   13136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1313a:	8b 00                	mov    (%rax),%eax
   1313c:	83 f8 01             	cmp    $0x1,%eax
   1313f:	0f 85 b5 00 00 00    	jne    131fa <change_protection+0x139>
   13145:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13149:	8b 40 04             	mov    0x4(%rax),%eax
   1314c:	83 e0 02             	and    $0x2,%eax
   1314f:	85 c0                	test   %eax,%eax
   13151:	0f 85 a3 00 00 00    	jne    131fa <change_protection+0x139>
   13157:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   1315e:	00 
   1315f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13163:	48 8b 40 10          	mov    0x10(%rax),%rax
   13167:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1316d:	48 89 c2             	mov    %rax,%rdx
   13170:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13174:	48 01 d0             	add    %rdx,%rax
   13177:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1317b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1317f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13183:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13187:	48 8b 40 28          	mov    0x28(%rax),%rax
   1318b:	48 01 d0             	add    %rdx,%rax
   1318e:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   13194:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1319a:	48 89 c2             	mov    %rax,%rdx
   1319d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   131a1:	48 01 d0             	add    %rdx,%rax
   131a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   131a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131ac:	8b 40 04             	mov    0x4(%rax),%eax
   131af:	83 e0 04             	and    $0x4,%eax
   131b2:	85 c0                	test   %eax,%eax
   131b4:	74 05                	je     131bb <change_protection+0xfa>
   131b6:	48 83 4d d0 01       	orq    $0x1,-0x30(%rbp)
   131bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131bf:	8b 40 04             	mov    0x4(%rax),%eax
   131c2:	83 e0 01             	and    $0x1,%eax
   131c5:	85 c0                	test   %eax,%eax
   131c7:	74 05                	je     131ce <change_protection+0x10d>
   131c9:	48 83 4d d0 04       	orq    $0x4,-0x30(%rbp)
   131ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   131d2:	89 c2                	mov    %eax,%edx
   131d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131d8:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   131dc:	48 89 c1             	mov    %rax,%rcx
   131df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   131e3:	48 89 ce             	mov    %rcx,%rsi
   131e6:	48 89 c7             	mov    %rax,%rdi
   131e9:	e8 98 50 00 00       	call   18286 <mm_modify_permissions>
   131ee:	85 c0                	test   %eax,%eax
   131f0:	74 08                	je     131fa <change_protection+0x139>
   131f2:	8b 45 c0             	mov    -0x40(%rbp),%eax
   131f5:	e9 8c 01 00 00       	jmp    13386 <change_protection+0x2c5>
   131fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131fe:	8b 00                	mov    (%rax),%eax
   13200:	3d 52 e5 74 64       	cmp    $0x6474e552,%eax
   13205:	75 7e                	jne    13285 <change_protection+0x1c4>
   13207:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1320b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1320f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   13215:	48 89 c2             	mov    %rax,%rdx
   13218:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1321c:	48 01 d0             	add    %rdx,%rax
   1321f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13223:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13227:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1322b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1322f:	48 8b 40 28          	mov    0x28(%rax),%rax
   13233:	48 01 d0             	add    %rdx,%rax
   13236:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   1323c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   13242:	48 89 c2             	mov    %rax,%rdx
   13245:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13249:	48 01 d0             	add    %rdx,%rax
   1324c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13250:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13254:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   13258:	74 2b                	je     13285 <change_protection+0x1c4>
   1325a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1325e:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13262:	48 89 c1             	mov    %rax,%rcx
   13265:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13269:	ba 01 00 00 00       	mov    $0x1,%edx
   1326e:	48 89 ce             	mov    %rcx,%rsi
   13271:	48 89 c7             	mov    %rax,%rdi
   13274:	e8 0d 50 00 00       	call   18286 <mm_modify_permissions>
   13279:	85 c0                	test   %eax,%eax
   1327b:	74 08                	je     13285 <change_protection+0x1c4>
   1327d:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13280:	e9 01 01 00 00       	jmp    13386 <change_protection+0x2c5>
   13285:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)
   13289:	48 83 45 c8 38       	addq   $0x38,-0x38(%rbp)
   1328e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13292:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   13296:	0f b7 c0             	movzwl %ax,%eax
   13299:	39 45 b8             	cmp    %eax,-0x48(%rbp)
   1329c:	0f 82 8a fe ff ff    	jb     1312c <change_protection+0x6b>
   132a2:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
   132a9:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
   132b0:	e9 ba 00 00 00       	jmp    1336f <change_protection+0x2ae>
   132b5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   132b8:	48 83 c0 0a          	add    $0xa,%rax
   132bc:	48 c1 e0 05          	shl    $0x5,%rax
   132c0:	48 89 c2             	mov    %rax,%rdx
   132c3:	48 8d 05 76 0c 02 00 	lea    0x20c76(%rip),%rax        # 33f40 <g_global_data>
   132ca:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
   132ce:	66 83 f8 14          	cmp    $0x14,%ax
   132d2:	0f 85 93 00 00 00    	jne    1336b <change_protection+0x2aa>
   132d8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   132db:	48 c1 e0 05          	shl    $0x5,%rax
   132df:	48 89 c2             	mov    %rax,%rdx
   132e2:	48 8d 05 af 0d 02 00 	lea    0x20daf(%rip),%rax        # 34098 <g_global_data+0x158>
   132e9:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   132ed:	48 3d 07 02 00 00    	cmp    $0x207,%rax
   132f3:	75 76                	jne    1336b <change_protection+0x2aa>
   132f5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   132f8:	48 83 c0 0a          	add    $0xa,%rax
   132fc:	48 c1 e0 05          	shl    $0x5,%rax
   13300:	48 89 c2             	mov    %rax,%rdx
   13303:	48 8d 05 3a 0c 02 00 	lea    0x20c3a(%rip),%rax        # 33f44 <g_global_data+0x4>
   1330a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1330d:	85 c0                	test   %eax,%eax
   1330f:	74 5a                	je     1336b <change_protection+0x2aa>
   13311:	8b 45 bc             	mov    -0x44(%rbp),%eax
   13314:	48 83 c0 0a          	add    $0xa,%rax
   13318:	48 c1 e0 05          	shl    $0x5,%rax
   1331c:	48 89 c2             	mov    %rax,%rdx
   1331f:	48 8d 05 1e 0c 02 00 	lea    0x20c1e(%rip),%rax        # 33f44 <g_global_data+0x4>
   13326:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   13329:	89 c0                	mov    %eax,%eax
   1332b:	48 c1 e0 0c          	shl    $0xc,%rax
   1332f:	8b 55 bc             	mov    -0x44(%rbp),%edx
   13332:	48 83 c2 0a          	add    $0xa,%rdx
   13336:	48 89 d1             	mov    %rdx,%rcx
   13339:	48 c1 e1 05          	shl    $0x5,%rcx
   1333d:	48 8d 15 04 0c 02 00 	lea    0x20c04(%rip),%rdx        # 33f48 <g_global_data+0x8>
   13344:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   13348:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1334c:	48 01 ca             	add    %rcx,%rdx
   1334f:	48 89 d1             	mov    %rdx,%rcx
   13352:	ba 03 00 00 00       	mov    $0x3,%edx
   13357:	48 89 c6             	mov    %rax,%rsi
   1335a:	48 89 cf             	mov    %rcx,%rdi
   1335d:	e8 24 4f 00 00       	call   18286 <mm_modify_permissions>
   13362:	85 c0                	test   %eax,%eax
   13364:	74 1a                	je     13380 <change_protection+0x2bf>
   13366:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13369:	eb 1b                	jmp    13386 <change_protection+0x2c5>
   1336b:	83 45 bc 01          	addl   $0x1,-0x44(%rbp)
   1336f:	8b 05 03 0d 02 00    	mov    0x20d03(%rip),%eax        # 34078 <g_global_data+0x138>
   13375:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   13378:	0f 82 37 ff ff ff    	jb     132b5 <change_protection+0x1f4>
   1337e:	eb 01                	jmp    13381 <change_protection+0x2c0>
   13380:	90                   	nop
   13381:	b8 00 00 00 00       	mov    $0x0,%eax
   13386:	c9                   	leave  
   13387:	c3                   	ret    

0000000000013388 <init_segment_emas>:
   13388:	f3 0f 1e fa          	endbr64 
   1338c:	55                   	push   %rbp
   1338d:	48 89 e5             	mov    %rsp,%rbp
   13390:	48 83 ec 40          	sub    $0x40,%rsp
   13394:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13398:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   1339f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   133a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ab:	48 89 c7             	mov    %rax,%rdi
   133ae:	e8 31 f3 ff ff       	call   126e4 <get_phdr>
   133b3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   133b7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   133bc:	75 0a                	jne    133c8 <init_segment_emas+0x40>
   133be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   133c3:	e9 0f 01 00 00       	jmp    134d7 <init_segment_emas+0x14f>
   133c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133cc:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   133d0:	0f b7 d0             	movzwl %ax,%edx
   133d3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   133d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133db:	48 89 ce             	mov    %rcx,%rsi
   133de:	48 89 c7             	mov    %rax,%rdi
   133e1:	e8 2b fc ff ff       	call   13011 <has_text_relo>
   133e6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   133e9:	e9 d0 00 00 00       	jmp    134be <init_segment_emas+0x136>
   133ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133f2:	8b 00                	mov    (%rax),%eax
   133f4:	83 f8 01             	cmp    $0x1,%eax
   133f7:	0f 85 b8 00 00 00    	jne    134b5 <init_segment_emas+0x12d>
   133fd:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
   13404:	00 
   13405:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13409:	48 8b 40 10          	mov    0x10(%rax),%rax
   1340d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   13413:	48 89 c2             	mov    %rax,%rdx
   13416:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1341a:	48 01 d0             	add    %rdx,%rax
   1341d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13421:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13425:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13429:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1342d:	48 8b 40 28          	mov    0x28(%rax),%rax
   13431:	48 01 d0             	add    %rdx,%rax
   13434:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   1343a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   13440:	48 89 c2             	mov    %rax,%rdx
   13443:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13447:	48 01 d0             	add    %rdx,%rax
   1344a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1344e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13452:	8b 40 04             	mov    0x4(%rax),%eax
   13455:	83 e0 02             	and    $0x2,%eax
   13458:	85 c0                	test   %eax,%eax
   1345a:	75 06                	jne    13462 <init_segment_emas+0xda>
   1345c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   13460:	74 05                	je     13467 <init_segment_emas+0xdf>
   13462:	48 83 4d e0 02       	orq    $0x2,-0x20(%rbp)
   13467:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1346b:	8b 40 04             	mov    0x4(%rax),%eax
   1346e:	83 e0 01             	and    $0x1,%eax
   13471:	85 c0                	test   %eax,%eax
   13473:	74 05                	je     1347a <init_segment_emas+0xf2>
   13475:	48 83 4d e0 04       	orq    $0x4,-0x20(%rbp)
   1347a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1347e:	89 c2                	mov    %eax,%edx
   13480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13484:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13488:	48 89 c6             	mov    %rax,%rsi
   1348b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1348f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   13495:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1349b:	89 d1                	mov    %edx,%ecx
   1349d:	ba 80 02 00 00       	mov    $0x280,%edx
   134a2:	48 89 c7             	mov    %rax,%rdi
   134a5:	e8 58 4b 00 00       	call   18002 <mm_init_ema>
   134aa:	85 c0                	test   %eax,%eax
   134ac:	74 07                	je     134b5 <init_segment_emas+0x12d>
   134ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   134b3:	eb 22                	jmp    134d7 <init_segment_emas+0x14f>
   134b5:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   134b9:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   134be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134c2:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   134c6:	0f b7 c0             	movzwl %ax,%eax
   134c9:	39 45 d0             	cmp    %eax,-0x30(%rbp)
   134cc:	0f 82 1c ff ff ff    	jb     133ee <init_segment_emas+0x66>
   134d2:	b8 00 00 00 00       	mov    $0x0,%eax
   134d7:	c9                   	leave  
   134d8:	c3                   	ret    

00000000000134d9 <__cxa_atexit>:
   134d9:	f3 0f 1e fa          	endbr64 
   134dd:	55                   	push   %rbp
   134de:	48 89 e5             	mov    %rsp,%rbp
   134e1:	48 83 ec 40          	sub    $0x40,%rsp
   134e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   134e9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   134ed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   134f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   134f8:	00 00 
   134fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   134fe:	31 c0                	xor    %eax,%eax
   13500:	48 8b 05 41 e1 03 00 	mov    0x3e141(%rip),%rax        # 51648 <g_exit_function_cookie>
   13507:	48 85 c0             	test   %rax,%rax
   1350a:	0f 94 c0             	sete   %al
   1350d:	0f b6 c0             	movzbl %al,%eax
   13510:	48 85 c0             	test   %rax,%rax
   13513:	74 5f                	je     13574 <__cxa_atexit+0x9b>
   13515:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1351c:	00 
   1351d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13521:	be 08 00 00 00       	mov    $0x8,%esi
   13526:	48 89 c7             	mov    %rax,%rdi
   13529:	e8 cc c4 ff ff       	call   f9fa <sgx_read_rand>
   1352e:	85 c0                	test   %eax,%eax
   13530:	74 0a                	je     1353c <__cxa_atexit+0x63>
   13532:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   13537:	e9 e1 00 00 00       	jmp    1361d <__cxa_atexit+0x144>
   1353c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13540:	48 85 c0             	test   %rax,%rax
   13543:	74 d8                	je     1351d <__cxa_atexit+0x44>
   13545:	48 8d 3d f4 e0 03 00 	lea    0x3e0f4(%rip),%rdi        # 51640 <g_exit_function_lock>
   1354c:	e8 4b 61 00 00       	call   1969c <sgx_spin_lock>
   13551:	48 8b 05 f0 e0 03 00 	mov    0x3e0f0(%rip),%rax        # 51648 <g_exit_function_cookie>
   13558:	48 85 c0             	test   %rax,%rax
   1355b:	75 0b                	jne    13568 <__cxa_atexit+0x8f>
   1355d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13561:	48 89 05 e0 e0 03 00 	mov    %rax,0x3e0e0(%rip)        # 51648 <g_exit_function_cookie>
   13568:	48 8d 3d d1 e0 03 00 	lea    0x3e0d1(%rip),%rdi        # 51640 <g_exit_function_lock>
   1356f:	e8 c3 61 00 00       	call   19737 <sgx_spin_unlock>
   13574:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13578:	be 00 00 00 00       	mov    $0x0,%esi
   1357d:	48 89 c7             	mov    %rax,%rdi
   13580:	e8 95 c1 ff ff       	call   f71a <sgx_is_within_enclave>
   13585:	85 c0                	test   %eax,%eax
   13587:	75 0a                	jne    13593 <__cxa_atexit+0xba>
   13589:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1358e:	e9 8a 00 00 00       	jmp    1361d <__cxa_atexit+0x144>
   13593:	bf 20 00 00 00       	mov    $0x20,%edi
   13598:	e8 8a c4 00 00       	call   1fa27 <dlmalloc>
   1359d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   135a1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   135a6:	75 07                	jne    135af <__cxa_atexit+0xd6>
   135a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   135ad:	eb 6e                	jmp    1361d <__cxa_atexit+0x144>
   135af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   135b3:	48 8b 05 8e e0 03 00 	mov    0x3e08e(%rip),%rax        # 51648 <g_exit_function_cookie>
   135ba:	48 31 c2             	xor    %rax,%rdx
   135bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135c1:	48 89 10             	mov    %rdx,(%rax)
   135c4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   135c8:	48 8b 05 79 e0 03 00 	mov    0x3e079(%rip),%rax        # 51648 <g_exit_function_cookie>
   135cf:	48 31 c2             	xor    %rax,%rdx
   135d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   135da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135de:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   135e2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   135e6:	48 8d 3d 53 e0 03 00 	lea    0x3e053(%rip),%rdi        # 51640 <g_exit_function_lock>
   135ed:	e8 aa 60 00 00       	call   1969c <sgx_spin_lock>
   135f2:	48 8b 15 3f e0 03 00 	mov    0x3e03f(%rip),%rdx        # 51638 <g_exit_function>
   135f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135fd:	48 89 50 18          	mov    %rdx,0x18(%rax)
   13601:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13605:	48 89 05 2c e0 03 00 	mov    %rax,0x3e02c(%rip)        # 51638 <g_exit_function>
   1360c:	48 8d 3d 2d e0 03 00 	lea    0x3e02d(%rip),%rdi        # 51640 <g_exit_function_lock>
   13613:	e8 1f 61 00 00       	call   19737 <sgx_spin_unlock>
   13618:	b8 00 00 00 00       	mov    $0x0,%eax
   1361d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13621:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13628:	00 00 
   1362a:	74 05                	je     13631 <__cxa_atexit+0x158>
   1362c:	e8 c6 01 01 00       	call   237f7 <__stack_chk_fail>
   13631:	c9                   	leave  
   13632:	c3                   	ret    

0000000000013633 <atexit>:
   13633:	f3 0f 1e fa          	endbr64 
   13637:	55                   	push   %rbp
   13638:	48 89 e5             	mov    %rsp,%rbp
   1363b:	48 83 ec 10          	sub    $0x10,%rsp
   1363f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13643:	48 8b 15 e6 79 02 00 	mov    0x279e6(%rip),%rdx        # 3b030 <__dso_handle>
   1364a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1364e:	be 00 00 00 00       	mov    $0x0,%esi
   13653:	48 89 c7             	mov    %rax,%rdi
   13656:	e8 7e fe ff ff       	call   134d9 <__cxa_atexit>
   1365b:	c9                   	leave  
   1365c:	c3                   	ret    

000000000001365d <do_atexit_aux>:
   1365d:	f3 0f 1e fa          	endbr64 
   13661:	55                   	push   %rbp
   13662:	48 89 e5             	mov    %rsp,%rbp
   13665:	48 83 ec 20          	sub    $0x20,%rsp
   13669:	48 8b 05 c8 df 03 00 	mov    0x3dfc8(%rip),%rax        # 51638 <g_exit_function>
   13670:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13674:	48 c7 05 b9 df 03 00 	movq   $0x0,0x3dfb9(%rip)        # 51638 <g_exit_function>
   1367b:	00 00 00 00 
   1367f:	eb 58                	jmp    136d9 <do_atexit_aux+0x7c>
   13681:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13685:	48 8b 10             	mov    (%rax),%rdx
   13688:	48 8b 05 b9 df 03 00 	mov    0x3dfb9(%rip),%rax        # 51648 <g_exit_function_cookie>
   1368f:	48 31 d0             	xor    %rdx,%rax
   13692:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13696:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1369a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1369e:	48 8b 05 a3 df 03 00 	mov    0x3dfa3(%rip),%rax        # 51648 <g_exit_function_cookie>
   136a5:	48 31 d0             	xor    %rdx,%rax
   136a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   136ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   136b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   136b4:	48 89 c7             	mov    %rax,%rdi
   136b7:	ff d2                	call   *%rdx
   136b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   136c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136c5:	48 8b 40 18          	mov    0x18(%rax),%rax
   136c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   136cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136d1:	48 89 c7             	mov    %rax,%rdi
   136d4:	e8 49 ce 00 00       	call   20522 <dlfree>
   136d9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   136de:	75 a1                	jne    13681 <do_atexit_aux+0x24>
   136e0:	90                   	nop
   136e1:	90                   	nop
   136e2:	c9                   	leave  
   136e3:	c3                   	ret    

00000000000136e4 <do_ctors_aux>:
   136e4:	f3 0f 1e fa          	endbr64 
   136e8:	55                   	push   %rbp
   136e9:	48 89 e5             	mov    %rsp,%rbp
   136ec:	48 83 ec 40          	sub    $0x40,%rsp
   136f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   136f7:	00 00 
   136f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   136fd:	31 c0                	xor    %eax,%eax
   136ff:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   13706:	00 
   13707:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1370e:	00 
   1370f:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   13716:	00 
   13717:	e8 8f df 01 00       	call   316ab <get_enclave_base>
   1371c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13720:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13724:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   13728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1372c:	48 89 ce             	mov    %rcx,%rsi
   1372f:	48 89 c7             	mov    %rax,%rdi
   13732:	e8 98 f6 ff ff       	call   12dcf <elf_get_init_array>
   13737:	85 c0                	test   %eax,%eax
   13739:	75 5b                	jne    13796 <do_ctors_aux+0xb2>
   1373b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1373f:	48 85 c0             	test   %rax,%rax
   13742:	74 52                	je     13796 <do_ctors_aux+0xb2>
   13744:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13748:	48 85 c0             	test   %rax,%rax
   1374b:	74 49                	je     13796 <do_ctors_aux+0xb2>
   1374d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13751:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13755:	48 01 d0             	add    %rdx,%rax
   13758:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1375c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13760:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   13764:	48 89 c2             	mov    %rax,%rdx
   13767:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1376b:	48 01 d0             	add    %rdx,%rax
   1376e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13772:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13776:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1377a:	eb 0e                	jmp    1378a <do_ctors_aux+0xa6>
   1377c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13780:	48 8b 00             	mov    (%rax),%rax
   13783:	ff d0                	call   *%rax
   13785:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
   1378a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1378e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13792:	72 e8                	jb     1377c <do_ctors_aux+0x98>
   13794:	eb 01                	jmp    13797 <do_ctors_aux+0xb3>
   13796:	90                   	nop
   13797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1379b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   137a2:	00 00 
   137a4:	74 05                	je     137ab <do_ctors_aux+0xc7>
   137a6:	e8 4c 00 01 00       	call   237f7 <__stack_chk_fail>
   137ab:	c9                   	leave  
   137ac:	c3                   	ret    

00000000000137ad <do_dtors_aux>:
   137ad:	f3 0f 1e fa          	endbr64 
   137b1:	55                   	push   %rbp
   137b2:	48 89 e5             	mov    %rsp,%rbp
   137b5:	48 83 ec 40          	sub    $0x40,%rsp
   137b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   137c0:	00 00 
   137c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   137c6:	31 c0                	xor    %eax,%eax
   137c8:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   137cf:	00 
   137d0:	e8 d6 de 01 00       	call   316ab <get_enclave_base>
   137d5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   137d9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   137dd:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   137e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   137e5:	48 89 ce             	mov    %rcx,%rsi
   137e8:	48 89 c7             	mov    %rax,%rdi
   137eb:	e8 00 f7 ff ff       	call   12ef0 <elf_get_uninit_array>
   137f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   137f4:	48 85 c0             	test   %rax,%rax
   137f7:	74 56                	je     1384f <do_dtors_aux+0xa2>
   137f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   137fd:	48 85 c0             	test   %rax,%rax
   13800:	74 4d                	je     1384f <do_dtors_aux+0xa2>
   13802:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13806:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1380a:	48 01 d0             	add    %rdx,%rax
   1380d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13811:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13815:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   13819:	48 89 c2             	mov    %rax,%rdx
   1381c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13820:	48 01 d0             	add    %rdx,%rax
   13823:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13827:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1382b:	48 83 e8 08          	sub    $0x8,%rax
   1382f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13833:	eb 0e                	jmp    13843 <do_dtors_aux+0x96>
   13835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13839:	48 8b 00             	mov    (%rax),%rax
   1383c:	ff d0                	call   *%rax
   1383e:	48 83 6d d8 08       	subq   $0x8,-0x28(%rbp)
   13843:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13847:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1384b:	73 e8                	jae    13835 <do_dtors_aux+0x88>
   1384d:	eb 01                	jmp    13850 <do_dtors_aux+0xa3>
   1384f:	90                   	nop
   13850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13854:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1385b:	00 00 
   1385d:	74 05                	je     13864 <do_dtors_aux+0xb7>
   1385f:	e8 93 ff 00 00       	call   237f7 <__stack_chk_fail>
   13864:	c9                   	leave  
   13865:	c3                   	ret    

0000000000013866 <init_global_object>:
   13866:	f3 0f 1e fa          	endbr64 
   1386a:	55                   	push   %rbp
   1386b:	48 89 e5             	mov    %rsp,%rbp
   1386e:	e8 71 fe ff ff       	call   136e4 <do_ctors_aux>
   13873:	90                   	nop
   13874:	5d                   	pop    %rbp
   13875:	c3                   	ret    

0000000000013876 <uninit_global_object>:
   13876:	f3 0f 1e fa          	endbr64 
   1387a:	55                   	push   %rbp
   1387b:	48 89 e5             	mov    %rsp,%rbp
   1387e:	e8 da fd ff ff       	call   1365d <do_atexit_aux>
   13883:	e8 25 ff ff ff       	call   137ad <do_dtors_aux>
   13888:	90                   	nop
   13889:	5d                   	pop    %rbp
   1388a:	c3                   	ret    

000000000001388b <__tls_get_addr>:
   1388b:	f3 0f 1e fa          	endbr64 
   1388f:	55                   	push   %rbp
   13890:	48 89 e5             	mov    %rsp,%rbp
   13893:	48 83 ec 20          	sub    $0x20,%rsp
   13897:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1389b:	e8 56 de 01 00       	call   316f6 <get_thread_data>
   138a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   138a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138a8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   138ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138b0:	48 8b 40 50          	mov    0x50(%rax),%rax
   138b4:	48 01 d0             	add    %rdx,%rax
   138b7:	c9                   	leave  
   138b8:	c3                   	ret    

00000000000138b9 <bit_array_new>:
   138b9:	f3 0f 1e fa          	endbr64 
   138bd:	55                   	push   %rbp
   138be:	48 89 e5             	mov    %rsp,%rbp
   138c1:	48 83 ec 20          	sub    $0x20,%rsp
   138c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   138c9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   138ce:	75 0a                	jne    138da <bit_array_new+0x21>
   138d0:	b8 00 00 00 00       	mov    $0x0,%eax
   138d5:	e9 94 00 00 00       	jmp    1396e <bit_array_new+0xb5>
   138da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138de:	48 83 c0 07          	add    $0x7,%rax
   138e2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   138e6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   138ea:	76 07                	jbe    138f3 <bit_array_new+0x3a>
   138ec:	b8 00 00 00 00       	mov    $0x0,%eax
   138f1:	eb 7b                	jmp    1396e <bit_array_new+0xb5>
   138f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138f7:	48 83 c0 07          	add    $0x7,%rax
   138fb:	48 c1 e8 03          	shr    $0x3,%rax
   138ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13903:	bf 18 00 00 00       	mov    $0x18,%edi
   13908:	e8 8d 43 00 00       	call   17c9a <emalloc>
   1390d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13911:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13916:	75 07                	jne    1391f <bit_array_new+0x66>
   13918:	b8 00 00 00 00       	mov    $0x0,%eax
   1391d:	eb 4f                	jmp    1396e <bit_array_new+0xb5>
   1391f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13923:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13927:	48 89 10             	mov    %rdx,(%rax)
   1392a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1392e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13932:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13936:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1393a:	48 89 c7             	mov    %rax,%rdi
   1393d:	e8 58 43 00 00       	call   17c9a <emalloc>
   13942:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13946:	48 89 42 10          	mov    %rax,0x10(%rdx)
   1394a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1394e:	48 8b 40 10          	mov    0x10(%rax),%rax
   13952:	48 85 c0             	test   %rax,%rax
   13955:	75 13                	jne    1396a <bit_array_new+0xb1>
   13957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1395b:	48 89 c7             	mov    %rax,%rdi
   1395e:	e8 22 45 00 00       	call   17e85 <efree>
   13963:	b8 00 00 00 00       	mov    $0x0,%eax
   13968:	eb 04                	jmp    1396e <bit_array_new+0xb5>
   1396a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1396e:	c9                   	leave  
   1396f:	c3                   	ret    

0000000000013970 <bit_array_new_set>:
   13970:	f3 0f 1e fa          	endbr64 
   13974:	55                   	push   %rbp
   13975:	48 89 e5             	mov    %rsp,%rbp
   13978:	48 83 ec 20          	sub    $0x20,%rsp
   1397c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13980:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13984:	48 89 c7             	mov    %rax,%rdi
   13987:	e8 2d ff ff ff       	call   138b9 <bit_array_new>
   1398c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13990:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13995:	75 07                	jne    1399e <bit_array_new_set+0x2e>
   13997:	b8 00 00 00 00       	mov    $0x0,%eax
   1399c:	eb 20                	jmp    139be <bit_array_new_set+0x4e>
   1399e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139a2:	48 8b 10             	mov    (%rax),%rdx
   139a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139a9:	48 8b 40 10          	mov    0x10(%rax),%rax
   139ad:	be ff 00 00 00       	mov    $0xff,%esi
   139b2:	48 89 c7             	mov    %rax,%rdi
   139b5:	e8 c9 fc 00 00       	call   23683 <memset>
   139ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139be:	c9                   	leave  
   139bf:	c3                   	ret    

00000000000139c0 <bit_array_new_reset>:
   139c0:	f3 0f 1e fa          	endbr64 
   139c4:	55                   	push   %rbp
   139c5:	48 89 e5             	mov    %rsp,%rbp
   139c8:	48 83 ec 20          	sub    $0x20,%rsp
   139cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   139d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139d4:	48 89 c7             	mov    %rax,%rdi
   139d7:	e8 dd fe ff ff       	call   138b9 <bit_array_new>
   139dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   139e0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   139e5:	75 07                	jne    139ee <bit_array_new_reset+0x2e>
   139e7:	b8 00 00 00 00       	mov    $0x0,%eax
   139ec:	eb 20                	jmp    13a0e <bit_array_new_reset+0x4e>
   139ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f2:	48 8b 10             	mov    (%rax),%rdx
   139f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f9:	48 8b 40 10          	mov    0x10(%rax),%rax
   139fd:	be 00 00 00 00       	mov    $0x0,%esi
   13a02:	48 89 c7             	mov    %rax,%rdi
   13a05:	e8 79 fc 00 00       	call   23683 <memset>
   13a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a0e:	c9                   	leave  
   13a0f:	c3                   	ret    

0000000000013a10 <bit_array_delete>:
   13a10:	f3 0f 1e fa          	endbr64 
   13a14:	55                   	push   %rbp
   13a15:	48 89 e5             	mov    %rsp,%rbp
   13a18:	48 83 ec 10          	sub    $0x10,%rsp
   13a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a24:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a28:	48 89 c7             	mov    %rax,%rdi
   13a2b:	e8 55 44 00 00       	call   17e85 <efree>
   13a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a34:	48 89 c7             	mov    %rax,%rdi
   13a37:	e8 49 44 00 00       	call   17e85 <efree>
   13a3c:	90                   	nop
   13a3d:	c9                   	leave  
   13a3e:	c3                   	ret    

0000000000013a3f <bit_array_test>:
   13a3f:	f3 0f 1e fa          	endbr64 
   13a43:	55                   	push   %rbp
   13a44:	48 89 e5             	mov    %rsp,%rbp
   13a47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a53:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a57:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a5b:	48 c1 ea 03          	shr    $0x3,%rdx
   13a5f:	48 01 d0             	add    %rdx,%rax
   13a62:	0f b6 00             	movzbl (%rax),%eax
   13a65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a69:	83 e2 07             	and    $0x7,%edx
   13a6c:	be 01 00 00 00       	mov    $0x1,%esi
   13a71:	89 d1                	mov    %edx,%ecx
   13a73:	d3 e6                	shl    %cl,%esi
   13a75:	89 f2                	mov    %esi,%edx
   13a77:	21 d0                	and    %edx,%eax
   13a79:	84 c0                	test   %al,%al
   13a7b:	0f 95 c0             	setne  %al
   13a7e:	5d                   	pop    %rbp
   13a7f:	c3                   	ret    

0000000000013a80 <set_mask>:
   13a80:	f3 0f 1e fa          	endbr64 
   13a84:	55                   	push   %rbp
   13a85:	48 89 e5             	mov    %rsp,%rbp
   13a88:	48 83 ec 10          	sub    $0x10,%rsp
   13a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a94:	48 83 7d f8 07       	cmpq   $0x7,-0x8(%rbp)
   13a99:	76 1f                	jbe    13aba <set_mask+0x3a>
   13a9b:	48 8d 0d a2 f8 01 00 	lea    0x1f8a2(%rip),%rcx        # 33344 <__func__.2623+0xf4>
   13aa2:	48 8d 15 e7 f8 01 00 	lea    0x1f8e7(%rip),%rdx        # 33390 <__func__.1568>
   13aa9:	be 67 00 00 00       	mov    $0x67,%esi
   13aae:	48 8d 3d 99 f8 01 00 	lea    0x1f899(%rip),%rdi        # 3334e <__func__.2623+0xfe>
   13ab5:	e8 8f 57 00 00       	call   19249 <__assert>
   13aba:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
   13abf:	76 1f                	jbe    13ae0 <set_mask+0x60>
   13ac1:	48 8d 0d 9a f8 01 00 	lea    0x1f89a(%rip),%rcx        # 33362 <__func__.2623+0x112>
   13ac8:	48 8d 15 c1 f8 01 00 	lea    0x1f8c1(%rip),%rdx        # 33390 <__func__.1568>
   13acf:	be 68 00 00 00       	mov    $0x68,%esi
   13ad4:	48 8d 3d 73 f8 01 00 	lea    0x1f873(%rip),%rdi        # 3334e <__func__.2623+0xfe>
   13adb:	e8 69 57 00 00       	call   19249 <__assert>
   13ae0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ae4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ae8:	48 01 d0             	add    %rdx,%rax
   13aeb:	48 83 f8 08          	cmp    $0x8,%rax
   13aef:	76 1f                	jbe    13b10 <set_mask+0x90>
   13af1:	48 8d 0d 7b f8 01 00 	lea    0x1f87b(%rip),%rcx        # 33373 <__func__.2623+0x123>
   13af8:	48 8d 15 91 f8 01 00 	lea    0x1f891(%rip),%rdx        # 33390 <__func__.1568>
   13aff:	be 69 00 00 00       	mov    $0x69,%esi
   13b04:	48 8d 3d 43 f8 01 00 	lea    0x1f843(%rip),%rdi        # 3334e <__func__.2623+0xfe>
   13b0b:	e8 39 57 00 00       	call   19249 <__assert>
   13b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b14:	ba 01 00 00 00       	mov    $0x1,%edx
   13b19:	89 c1                	mov    %eax,%ecx
   13b1b:	d3 e2                	shl    %cl,%edx
   13b1d:	89 d0                	mov    %edx,%eax
   13b1f:	8d 50 ff             	lea    -0x1(%rax),%edx
   13b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b26:	89 c1                	mov    %eax,%ecx
   13b28:	d3 e2                	shl    %cl,%edx
   13b2a:	89 d0                	mov    %edx,%eax
   13b2c:	c9                   	leave  
   13b2d:	c3                   	ret    

0000000000013b2e <bit_array_test_range>:
   13b2e:	f3 0f 1e fa          	endbr64 
   13b32:	55                   	push   %rbp
   13b33:	48 89 e5             	mov    %rsp,%rbp
   13b36:	48 83 ec 50          	sub    $0x50,%rsp
   13b3a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13b3e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13b42:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13b46:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13b4a:	48 c1 e8 03          	shr    $0x3,%rax
   13b4e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13b52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13b56:	83 e0 07             	and    $0x7,%eax
   13b59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13b5d:	b8 08 00 00 00       	mov    $0x8,%eax
   13b62:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13b66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13b6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13b6e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   13b72:	77 44                	ja     13bb8 <bit_array_test_range+0x8a>
   13b74:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13b78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b7c:	48 89 d6             	mov    %rdx,%rsi
   13b7f:	48 89 c7             	mov    %rax,%rdi
   13b82:	e8 f9 fe ff ff       	call   13a80 <set_mask>
   13b87:	88 45 df             	mov    %al,-0x21(%rbp)
   13b8a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b8e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13b92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b96:	48 01 d0             	add    %rdx,%rax
   13b99:	0f b6 00             	movzbl (%rax),%eax
   13b9c:	22 45 df             	and    -0x21(%rbp),%al
   13b9f:	38 45 df             	cmp    %al,-0x21(%rbp)
   13ba2:	74 0a                	je     13bae <bit_array_test_range+0x80>
   13ba4:	b8 00 00 00 00       	mov    $0x0,%eax
   13ba9:	e9 c6 00 00 00       	jmp    13c74 <bit_array_test_range+0x146>
   13bae:	b8 01 00 00 00       	mov    $0x1,%eax
   13bb3:	e9 bc 00 00 00       	jmp    13c74 <bit_array_test_range+0x146>
   13bb8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13bbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13bc0:	48 89 d6             	mov    %rdx,%rsi
   13bc3:	48 89 c7             	mov    %rax,%rdi
   13bc6:	e8 b5 fe ff ff       	call   13a80 <set_mask>
   13bcb:	88 45 de             	mov    %al,-0x22(%rbp)
   13bce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bd2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13bd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13bda:	48 01 d0             	add    %rdx,%rax
   13bdd:	0f b6 00             	movzbl (%rax),%eax
   13be0:	22 45 de             	and    -0x22(%rbp),%al
   13be3:	38 45 de             	cmp    %al,-0x22(%rbp)
   13be6:	74 0a                	je     13bf2 <bit_array_test_range+0xc4>
   13be8:	b8 00 00 00 00       	mov    $0x0,%eax
   13bed:	e9 82 00 00 00       	jmp    13c74 <bit_array_test_range+0x146>
   13bf2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bf6:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13bfa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13bfe:	eb 27                	jmp    13c27 <bit_array_test_range+0xf9>
   13c00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c04:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c08:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13c0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c11:	48 01 d0             	add    %rdx,%rax
   13c14:	0f b6 00             	movzbl (%rax),%eax
   13c17:	3c ff                	cmp    $0xff,%al
   13c19:	74 07                	je     13c22 <bit_array_test_range+0xf4>
   13c1b:	b8 00 00 00 00       	mov    $0x0,%eax
   13c20:	eb 52                	jmp    13c74 <bit_array_test_range+0x146>
   13c22:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   13c27:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   13c2c:	77 d2                	ja     13c00 <bit_array_test_range+0xd2>
   13c2e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13c33:	74 3a                	je     13c6f <bit_array_test_range+0x141>
   13c35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c39:	48 89 c6             	mov    %rax,%rsi
   13c3c:	bf 00 00 00 00       	mov    $0x0,%edi
   13c41:	e8 3a fe ff ff       	call   13a80 <set_mask>
   13c46:	88 45 de             	mov    %al,-0x22(%rbp)
   13c49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c4d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c51:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13c56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c5a:	48 01 d0             	add    %rdx,%rax
   13c5d:	0f b6 00             	movzbl (%rax),%eax
   13c60:	22 45 de             	and    -0x22(%rbp),%al
   13c63:	38 45 de             	cmp    %al,-0x22(%rbp)
   13c66:	74 07                	je     13c6f <bit_array_test_range+0x141>
   13c68:	b8 00 00 00 00       	mov    $0x0,%eax
   13c6d:	eb 05                	jmp    13c74 <bit_array_test_range+0x146>
   13c6f:	b8 01 00 00 00       	mov    $0x1,%eax
   13c74:	c9                   	leave  
   13c75:	c3                   	ret    

0000000000013c76 <bit_array_test_range_any>:
   13c76:	f3 0f 1e fa          	endbr64 
   13c7a:	55                   	push   %rbp
   13c7b:	48 89 e5             	mov    %rsp,%rbp
   13c7e:	48 83 ec 50          	sub    $0x50,%rsp
   13c82:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13c86:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13c8a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13c8e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13c92:	48 c1 e8 03          	shr    $0x3,%rax
   13c96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13c9a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13c9e:	83 e0 07             	and    $0x7,%eax
   13ca1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13ca5:	b8 08 00 00 00       	mov    $0x8,%eax
   13caa:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13cae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13cb2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cb6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   13cba:	77 43                	ja     13cff <bit_array_test_range_any+0x89>
   13cbc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13cc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13cc4:	48 89 d6             	mov    %rdx,%rsi
   13cc7:	48 89 c7             	mov    %rax,%rdi
   13cca:	e8 b1 fd ff ff       	call   13a80 <set_mask>
   13ccf:	88 45 df             	mov    %al,-0x21(%rbp)
   13cd2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cd6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13cda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13cde:	48 01 d0             	add    %rdx,%rax
   13ce1:	0f b6 00             	movzbl (%rax),%eax
   13ce4:	22 45 df             	and    -0x21(%rbp),%al
   13ce7:	84 c0                	test   %al,%al
   13ce9:	74 0a                	je     13cf5 <bit_array_test_range_any+0x7f>
   13ceb:	b8 01 00 00 00       	mov    $0x1,%eax
   13cf0:	e9 c4 00 00 00       	jmp    13db9 <bit_array_test_range_any+0x143>
   13cf5:	b8 00 00 00 00       	mov    $0x0,%eax
   13cfa:	e9 ba 00 00 00       	jmp    13db9 <bit_array_test_range_any+0x143>
   13cff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13d07:	48 89 d6             	mov    %rdx,%rsi
   13d0a:	48 89 c7             	mov    %rax,%rdi
   13d0d:	e8 6e fd ff ff       	call   13a80 <set_mask>
   13d12:	88 45 de             	mov    %al,-0x22(%rbp)
   13d15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d21:	48 01 d0             	add    %rdx,%rax
   13d24:	0f b6 00             	movzbl (%rax),%eax
   13d27:	22 45 de             	and    -0x22(%rbp),%al
   13d2a:	84 c0                	test   %al,%al
   13d2c:	74 0a                	je     13d38 <bit_array_test_range_any+0xc2>
   13d2e:	b8 01 00 00 00       	mov    $0x1,%eax
   13d33:	e9 81 00 00 00       	jmp    13db9 <bit_array_test_range_any+0x143>
   13d38:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d3c:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13d40:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13d44:	eb 27                	jmp    13d6d <bit_array_test_range_any+0xf7>
   13d46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d4a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d4e:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13d53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d57:	48 01 d0             	add    %rdx,%rax
   13d5a:	0f b6 00             	movzbl (%rax),%eax
   13d5d:	84 c0                	test   %al,%al
   13d5f:	74 07                	je     13d68 <bit_array_test_range_any+0xf2>
   13d61:	b8 01 00 00 00       	mov    $0x1,%eax
   13d66:	eb 51                	jmp    13db9 <bit_array_test_range_any+0x143>
   13d68:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   13d6d:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   13d72:	77 d2                	ja     13d46 <bit_array_test_range_any+0xd0>
   13d74:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13d79:	74 39                	je     13db4 <bit_array_test_range_any+0x13e>
   13d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d7f:	48 89 c6             	mov    %rax,%rsi
   13d82:	bf 00 00 00 00       	mov    $0x0,%edi
   13d87:	e8 f4 fc ff ff       	call   13a80 <set_mask>
   13d8c:	88 45 de             	mov    %al,-0x22(%rbp)
   13d8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d93:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d97:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13d9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13da0:	48 01 d0             	add    %rdx,%rax
   13da3:	0f b6 00             	movzbl (%rax),%eax
   13da6:	22 45 de             	and    -0x22(%rbp),%al
   13da9:	84 c0                	test   %al,%al
   13dab:	74 07                	je     13db4 <bit_array_test_range_any+0x13e>
   13dad:	b8 01 00 00 00       	mov    $0x1,%eax
   13db2:	eb 05                	jmp    13db9 <bit_array_test_range_any+0x143>
   13db4:	b8 00 00 00 00       	mov    $0x0,%eax
   13db9:	c9                   	leave  
   13dba:	c3                   	ret    

0000000000013dbb <bit_array_set>:
   13dbb:	f3 0f 1e fa          	endbr64 
   13dbf:	55                   	push   %rbp
   13dc0:	48 89 e5             	mov    %rsp,%rbp
   13dc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13dc7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dcf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13dd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13dd7:	48 c1 e8 03          	shr    $0x3,%rax
   13ddb:	48 01 c2             	add    %rax,%rdx
   13dde:	0f b6 32             	movzbl (%rdx),%esi
   13de1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13de5:	83 e2 07             	and    $0x7,%edx
   13de8:	bf 01 00 00 00       	mov    $0x1,%edi
   13ded:	89 d1                	mov    %edx,%ecx
   13def:	d3 e7                	shl    %cl,%edi
   13df1:	89 fa                	mov    %edi,%edx
   13df3:	89 d1                	mov    %edx,%ecx
   13df5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13df9:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   13dfd:	48 01 d0             	add    %rdx,%rax
   13e00:	09 ce                	or     %ecx,%esi
   13e02:	89 f2                	mov    %esi,%edx
   13e04:	88 10                	mov    %dl,(%rax)
   13e06:	90                   	nop
   13e07:	5d                   	pop    %rbp
   13e08:	c3                   	ret    

0000000000013e09 <bit_array_set_range>:
   13e09:	f3 0f 1e fa          	endbr64 
   13e0d:	55                   	push   %rbp
   13e0e:	48 89 e5             	mov    %rsp,%rbp
   13e11:	48 83 ec 50          	sub    $0x50,%rsp
   13e15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13e19:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13e1d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13e21:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13e25:	48 c1 e8 03          	shr    $0x3,%rax
   13e29:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13e2d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13e31:	83 e0 07             	and    $0x7,%eax
   13e34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13e38:	b8 08 00 00 00       	mov    $0x8,%eax
   13e3d:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13e41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13e45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e49:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   13e4d:	77 41                	ja     13e90 <bit_array_set_range+0x87>
   13e4f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13e53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e57:	48 89 d6             	mov    %rdx,%rsi
   13e5a:	48 89 c7             	mov    %rax,%rdi
   13e5d:	e8 1e fc ff ff       	call   13a80 <set_mask>
   13e62:	88 45 df             	mov    %al,-0x21(%rbp)
   13e65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13e69:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13e71:	48 01 d0             	add    %rdx,%rax
   13e74:	0f b6 00             	movzbl (%rax),%eax
   13e77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13e7b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   13e7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13e83:	48 01 ca             	add    %rcx,%rdx
   13e86:	0a 45 df             	or     -0x21(%rbp),%al
   13e89:	88 02                	mov    %al,(%rdx)
   13e8b:	e9 b2 00 00 00       	jmp    13f42 <bit_array_set_range+0x139>
   13e90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e98:	48 89 d6             	mov    %rdx,%rsi
   13e9b:	48 89 c7             	mov    %rax,%rdi
   13e9e:	e8 dd fb ff ff       	call   13a80 <set_mask>
   13ea3:	88 45 de             	mov    %al,-0x22(%rbp)
   13ea6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13eaa:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13eae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13eb2:	48 01 d0             	add    %rdx,%rax
   13eb5:	0f b6 00             	movzbl (%rax),%eax
   13eb8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13ebc:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   13ec0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13ec4:	48 01 ca             	add    %rcx,%rdx
   13ec7:	0a 45 de             	or     -0x22(%rbp),%al
   13eca:	88 02                	mov    %al,(%rdx)
   13ecc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13ed0:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13ed4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13ed8:	eb 1c                	jmp    13ef6 <bit_array_set_range+0xed>
   13eda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ede:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13ee2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13ee7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13eeb:	48 01 d0             	add    %rdx,%rax
   13eee:	c6 00 ff             	movb   $0xff,(%rax)
   13ef1:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   13ef6:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   13efb:	77 dd                	ja     13eda <bit_array_set_range+0xd1>
   13efd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13f02:	74 3d                	je     13f41 <bit_array_set_range+0x138>
   13f04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f08:	48 89 c6             	mov    %rax,%rsi
   13f0b:	bf 00 00 00 00       	mov    $0x0,%edi
   13f10:	e8 6b fb ff ff       	call   13a80 <set_mask>
   13f15:	88 45 de             	mov    %al,-0x22(%rbp)
   13f18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f1c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f20:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   13f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13f29:	48 01 c2             	add    %rax,%rdx
   13f2c:	0f b6 12             	movzbl (%rdx),%edx
   13f2f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   13f33:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   13f37:	48 01 c1             	add    %rax,%rcx
   13f3a:	89 d0                	mov    %edx,%eax
   13f3c:	0a 45 de             	or     -0x22(%rbp),%al
   13f3f:	88 01                	mov    %al,(%rcx)
   13f41:	90                   	nop
   13f42:	c9                   	leave  
   13f43:	c3                   	ret    

0000000000013f44 <bit_array_set_all>:
   13f44:	f3 0f 1e fa          	endbr64 
   13f48:	55                   	push   %rbp
   13f49:	48 89 e5             	mov    %rsp,%rbp
   13f4c:	48 83 ec 10          	sub    $0x10,%rsp
   13f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f58:	48 8b 10             	mov    (%rax),%rdx
   13f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f5f:	48 8b 40 10          	mov    0x10(%rax),%rax
   13f63:	be ff 00 00 00       	mov    $0xff,%esi
   13f68:	48 89 c7             	mov    %rax,%rdi
   13f6b:	e8 13 f7 00 00       	call   23683 <memset>
   13f70:	90                   	nop
   13f71:	c9                   	leave  
   13f72:	c3                   	ret    

0000000000013f73 <clear_mask>:
   13f73:	f3 0f 1e fa          	endbr64 
   13f77:	55                   	push   %rbp
   13f78:	48 89 e5             	mov    %rsp,%rbp
   13f7b:	48 83 ec 10          	sub    $0x10,%rsp
   13f7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13f87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f8f:	48 89 d6             	mov    %rdx,%rsi
   13f92:	48 89 c7             	mov    %rax,%rdi
   13f95:	e8 e6 fa ff ff       	call   13a80 <set_mask>
   13f9a:	f7 d0                	not    %eax
   13f9c:	c9                   	leave  
   13f9d:	c3                   	ret    

0000000000013f9e <bit_array_reset_range>:
   13f9e:	f3 0f 1e fa          	endbr64 
   13fa2:	55                   	push   %rbp
   13fa3:	48 89 e5             	mov    %rsp,%rbp
   13fa6:	48 83 ec 50          	sub    $0x50,%rsp
   13faa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13fae:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13fb2:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13fb6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13fba:	48 c1 e8 03          	shr    $0x3,%rax
   13fbe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13fc2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13fc6:	83 e0 07             	and    $0x7,%eax
   13fc9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13fcd:	b8 08 00 00 00       	mov    $0x8,%eax
   13fd2:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   13fd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13fda:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13fde:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   13fe2:	77 41                	ja     14025 <bit_array_reset_range+0x87>
   13fe4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13fec:	48 89 d6             	mov    %rdx,%rsi
   13fef:	48 89 c7             	mov    %rax,%rdi
   13ff2:	e8 7c ff ff ff       	call   13f73 <clear_mask>
   13ff7:	88 45 df             	mov    %al,-0x21(%rbp)
   13ffa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ffe:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14002:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14006:	48 01 d0             	add    %rdx,%rax
   14009:	0f b6 00             	movzbl (%rax),%eax
   1400c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14010:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   14014:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14018:	48 01 ca             	add    %rcx,%rdx
   1401b:	22 45 df             	and    -0x21(%rbp),%al
   1401e:	88 02                	mov    %al,(%rdx)
   14020:	e9 b2 00 00 00       	jmp    140d7 <bit_array_reset_range+0x139>
   14025:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14029:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1402d:	48 89 d6             	mov    %rdx,%rsi
   14030:	48 89 c7             	mov    %rax,%rdi
   14033:	e8 3b ff ff ff       	call   13f73 <clear_mask>
   14038:	88 45 de             	mov    %al,-0x22(%rbp)
   1403b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1403f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14043:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14047:	48 01 d0             	add    %rdx,%rax
   1404a:	0f b6 00             	movzbl (%rax),%eax
   1404d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14051:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   14055:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14059:	48 01 ca             	add    %rcx,%rdx
   1405c:	22 45 de             	and    -0x22(%rbp),%al
   1405f:	88 02                	mov    %al,(%rdx)
   14061:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14065:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14069:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1406d:	eb 1c                	jmp    1408b <bit_array_reset_range+0xed>
   1406f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14073:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14077:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   1407c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14080:	48 01 d0             	add    %rdx,%rax
   14083:	c6 00 00             	movb   $0x0,(%rax)
   14086:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   1408b:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   14090:	77 dd                	ja     1406f <bit_array_reset_range+0xd1>
   14092:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14097:	74 3d                	je     140d6 <bit_array_reset_range+0x138>
   14099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1409d:	48 89 c6             	mov    %rax,%rsi
   140a0:	bf 00 00 00 00       	mov    $0x0,%edi
   140a5:	e8 c9 fe ff ff       	call   13f73 <clear_mask>
   140aa:	88 45 de             	mov    %al,-0x22(%rbp)
   140ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   140b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   140b5:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   140ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   140be:	48 01 c2             	add    %rax,%rdx
   140c1:	0f b6 12             	movzbl (%rdx),%edx
   140c4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   140c8:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   140cc:	48 01 c1             	add    %rax,%rcx
   140cf:	89 d0                	mov    %edx,%eax
   140d1:	22 45 de             	and    -0x22(%rbp),%al
   140d4:	88 01                	mov    %al,(%rcx)
   140d6:	90                   	nop
   140d7:	c9                   	leave  
   140d8:	c3                   	ret    

00000000000140d9 <bit_array_reset_all>:
   140d9:	f3 0f 1e fa          	endbr64 
   140dd:	55                   	push   %rbp
   140de:	48 89 e5             	mov    %rsp,%rbp
   140e1:	48 83 ec 10          	sub    $0x10,%rsp
   140e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140ed:	48 8b 10             	mov    (%rax),%rdx
   140f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140f4:	48 8b 40 10          	mov    0x10(%rax),%rax
   140f8:	be 00 00 00 00       	mov    $0x0,%esi
   140fd:	48 89 c7             	mov    %rax,%rdi
   14100:	e8 7e f5 00 00       	call   23683 <memset>
   14105:	90                   	nop
   14106:	c9                   	leave  
   14107:	c3                   	ret    

0000000000014108 <bit_array_reattach>:
   14108:	f3 0f 1e fa          	endbr64 
   1410c:	55                   	push   %rbp
   1410d:	48 89 e5             	mov    %rsp,%rbp
   14110:	48 83 ec 30          	sub    $0x30,%rsp
   14114:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14118:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1411c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14120:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14124:	48 8b 40 10          	mov    0x10(%rax),%rax
   14128:	48 85 c0             	test   %rax,%rax
   1412b:	74 10                	je     1413d <bit_array_reattach+0x35>
   1412d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14131:	48 8b 40 10          	mov    0x10(%rax),%rax
   14135:	48 89 c7             	mov    %rax,%rdi
   14138:	e8 48 3d 00 00       	call   17e85 <efree>
   1413d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14141:	48 83 c0 07          	add    $0x7,%rax
   14145:	48 c1 e8 03          	shr    $0x3,%rax
   14149:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1414d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14151:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14155:	48 89 10             	mov    %rdx,(%rax)
   14158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1415c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14160:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14164:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14168:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1416c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14170:	90                   	nop
   14171:	c9                   	leave  
   14172:	c3                   	ret    

0000000000014173 <bit_array_split>:
   14173:	f3 0f 1e fa          	endbr64 
   14177:	55                   	push   %rbp
   14178:	48 89 e5             	mov    %rsp,%rbp
   1417b:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   1417f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   14183:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   14187:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   1418b:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   1418f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14194:	75 20                	jne    141b6 <bit_array_split+0x43>
   14196:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1419a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   141a1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   141a5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   141a9:	48 89 10             	mov    %rdx,(%rax)
   141ac:	b8 00 00 00 00       	mov    $0x0,%eax
   141b1:	e9 de 02 00 00       	jmp    14494 <bit_array_split+0x321>
   141b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   141ba:	48 8b 40 08          	mov    0x8(%rax),%rax
   141be:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   141c2:	72 20                	jb     141e4 <bit_array_split+0x71>
   141c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   141c8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   141cc:	48 89 10             	mov    %rdx,(%rax)
   141cf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   141d3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   141da:	b8 00 00 00 00       	mov    $0x0,%eax
   141df:	e9 b0 02 00 00       	jmp    14494 <bit_array_split+0x321>
   141e4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   141e8:	48 c1 e8 03          	shr    $0x3,%rax
   141ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   141f0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   141f4:	83 e0 07             	and    $0x7,%eax
   141f7:	88 45 ac             	mov    %al,-0x54(%rbp)
   141fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   141fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14205:	00 
   14206:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   1420a:	48 01 d0             	add    %rdx,%rax
   1420d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   14211:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14215:	48 83 c0 07          	add    $0x7,%rax
   14219:	48 c1 e8 03          	shr    $0x3,%rax
   1421d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14221:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14225:	48 8b 40 08          	mov    0x8(%rax),%rax
   14229:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   1422d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14231:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14235:	48 89 c7             	mov    %rax,%rdi
   14238:	e8 5d 3a 00 00       	call   17c9a <emalloc>
   1423d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14241:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14246:	75 0a                	jne    14252 <bit_array_split+0xdf>
   14248:	b8 0c 00 00 00       	mov    $0xc,%eax
   1424d:	e9 42 02 00 00       	jmp    14494 <bit_array_split+0x321>
   14252:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   14259:	00 
   1425a:	eb 24                	jmp    14280 <bit_array_split+0x10d>
   1425c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14260:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14264:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14268:	48 01 d0             	add    %rdx,%rax
   1426b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1426f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14273:	48 01 ca             	add    %rcx,%rdx
   14276:	0f b6 00             	movzbl (%rax),%eax
   14279:	88 02                	mov    %al,(%rdx)
   1427b:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   14280:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14284:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   14288:	72 d2                	jb     1425c <bit_array_split+0xe9>
   1428a:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
   1428e:	74 3a                	je     142ca <bit_array_split+0x157>
   14290:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14294:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14298:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1429c:	48 01 d0             	add    %rdx,%rax
   1429f:	0f b6 10             	movzbl (%rax),%edx
   142a2:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   142a6:	be 01 00 00 00       	mov    $0x1,%esi
   142ab:	89 c1                	mov    %eax,%ecx
   142ad:	d3 e6                	shl    %cl,%esi
   142af:	89 f0                	mov    %esi,%eax
   142b1:	83 e8 01             	sub    $0x1,%eax
   142b4:	21 d0                	and    %edx,%eax
   142b6:	88 45 ad             	mov    %al,-0x53(%rbp)
   142b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142bd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   142c1:	48 01 c2             	add    %rax,%rdx
   142c4:	0f b6 45 ad          	movzbl -0x53(%rbp),%eax
   142c8:	88 02                	mov    %al,(%rdx)
   142ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142ce:	48 89 c7             	mov    %rax,%rdi
   142d1:	e8 e3 f5 ff ff       	call   138b9 <bit_array_new>
   142d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   142da:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   142df:	75 16                	jne    142f7 <bit_array_split+0x184>
   142e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142e5:	48 89 c7             	mov    %rax,%rdi
   142e8:	e8 98 3b 00 00       	call   17e85 <efree>
   142ed:	b8 0c 00 00 00       	mov    $0xc,%eax
   142f2:	e9 9d 01 00 00       	jmp    14494 <bit_array_split+0x321>
   142f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142fb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   142ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14303:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14307:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1430e:	00 
   1430f:	c6 45 ae 00          	movb   $0x0,-0x52(%rbp)
   14313:	c6 45 af 00          	movb   $0x0,-0x51(%rbp)
   14317:	eb 7b                	jmp    14394 <bit_array_split+0x221>
   14319:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1431d:	48 8b 48 10          	mov    0x10(%rax),%rcx
   14321:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14325:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14329:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1432d:	48 01 c8             	add    %rcx,%rax
   14330:	0f b6 00             	movzbl (%rax),%eax
   14333:	0f b6 d0             	movzbl %al,%edx
   14336:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   1433a:	89 c1                	mov    %eax,%ecx
   1433c:	d3 fa                	sar    %cl,%edx
   1433e:	89 d0                	mov    %edx,%eax
   14340:	88 45 ae             	mov    %al,-0x52(%rbp)
   14343:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14347:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1434b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1434f:	48 01 d0             	add    %rdx,%rax
   14352:	0f b6 00             	movzbl (%rax),%eax
   14355:	0f b6 d0             	movzbl %al,%edx
   14358:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   1435c:	b9 08 00 00 00       	mov    $0x8,%ecx
   14361:	29 c1                	sub    %eax,%ecx
   14363:	89 c8                	mov    %ecx,%eax
   14365:	89 c1                	mov    %eax,%ecx
   14367:	d3 e2                	shl    %cl,%edx
   14369:	89 d0                	mov    %edx,%eax
   1436b:	88 45 af             	mov    %al,-0x51(%rbp)
   1436e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14372:	48 8b 48 10          	mov    0x10(%rax),%rcx
   14376:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1437a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1437e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14382:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   14386:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   1438a:	0a 45 af             	or     -0x51(%rbp),%al
   1438d:	88 02                	mov    %al,(%rdx)
   1438f:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   14394:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   14399:	0f 87 7a ff ff ff    	ja     14319 <bit_array_split+0x1a6>
   1439f:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   143a3:	ba 08 00 00 00       	mov    $0x8,%edx
   143a8:	29 c2                	sub    %eax,%edx
   143aa:	89 d0                	mov    %edx,%eax
   143ac:	0f b6 c0             	movzbl %al,%eax
   143af:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   143b3:	76 6f                	jbe    14424 <bit_array_split+0x2b1>
   143b5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   143b9:	48 8b 48 10          	mov    0x10(%rax),%rcx
   143bd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   143c1:	48 8d 50 01          	lea    0x1(%rax),%rdx
   143c5:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   143c9:	48 01 c8             	add    %rcx,%rax
   143cc:	0f b6 00             	movzbl (%rax),%eax
   143cf:	0f b6 d0             	movzbl %al,%edx
   143d2:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   143d6:	89 c1                	mov    %eax,%ecx
   143d8:	d3 fa                	sar    %cl,%edx
   143da:	89 d0                	mov    %edx,%eax
   143dc:	88 45 ae             	mov    %al,-0x52(%rbp)
   143df:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   143e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   143e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   143eb:	48 01 d0             	add    %rdx,%rax
   143ee:	0f b6 00             	movzbl (%rax),%eax
   143f1:	0f b6 d0             	movzbl %al,%edx
   143f4:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   143f8:	b9 08 00 00 00       	mov    $0x8,%ecx
   143fd:	29 c1                	sub    %eax,%ecx
   143ff:	89 c8                	mov    %ecx,%eax
   14401:	89 c1                	mov    %eax,%ecx
   14403:	d3 e2                	shl    %cl,%edx
   14405:	89 d0                	mov    %edx,%eax
   14407:	88 45 af             	mov    %al,-0x51(%rbp)
   1440a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1440e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14412:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14416:	48 01 c2             	add    %rax,%rdx
   14419:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   1441d:	0a 45 af             	or     -0x51(%rbp),%al
   14420:	88 02                	mov    %al,(%rdx)
   14422:	eb 3e                	jmp    14462 <bit_array_split+0x2ef>
   14424:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14429:	74 37                	je     14462 <bit_array_split+0x2ef>
   1442b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1442f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14433:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14437:	48 01 d0             	add    %rdx,%rax
   1443a:	0f b6 00             	movzbl (%rax),%eax
   1443d:	0f b6 d0             	movzbl %al,%edx
   14440:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   14444:	89 c1                	mov    %eax,%ecx
   14446:	d3 fa                	sar    %cl,%edx
   14448:	89 d0                	mov    %edx,%eax
   1444a:	88 45 ae             	mov    %al,-0x52(%rbp)
   1444d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14451:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14455:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14459:	48 01 c2             	add    %rax,%rdx
   1445c:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   14460:	88 02                	mov    %al,(%rdx)
   14462:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14466:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1446a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1446e:	48 89 ce             	mov    %rcx,%rsi
   14471:	48 89 c7             	mov    %rax,%rdi
   14474:	e8 8f fc ff ff       	call   14108 <bit_array_reattach>
   14479:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1447d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   14481:	48 89 10             	mov    %rdx,(%rax)
   14484:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14488:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1448c:	48 89 10             	mov    %rdx,(%rax)
   1448f:	b8 00 00 00 00       	mov    $0x0,%eax
   14494:	c9                   	leave  
   14495:	c3                   	ret    

0000000000014496 <is_within_user_range>:
   14496:	f3 0f 1e fa          	endbr64 
   1449a:	55                   	push   %rbp
   1449b:	48 89 e5             	mov    %rsp,%rbp
   1449e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   144a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   144aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   144ae:	48 01 d0             	add    %rdx,%rax
   144b1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   144b5:	76 07                	jbe    144be <is_within_user_range+0x28>
   144b7:	b8 00 00 00 00       	mov    $0x0,%eax
   144bc:	eb 33                	jmp    144f1 <is_within_user_range+0x5b>
   144be:	48 8b 05 e3 d9 04 00 	mov    0x4d9e3(%rip),%rax        # 61ea8 <mm_user_base>
   144c5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   144c9:	72 1e                	jb     144e9 <is_within_user_range+0x53>
   144cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   144cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   144d3:	48 01 c2             	add    %rax,%rdx
   144d6:	48 8b 05 d3 d9 04 00 	mov    0x4d9d3(%rip),%rax        # 61eb0 <mm_user_end>
   144dd:	48 39 c2             	cmp    %rax,%rdx
   144e0:	77 07                	ja     144e9 <is_within_user_range+0x53>
   144e2:	b8 01 00 00 00       	mov    $0x1,%eax
   144e7:	eb 05                	jmp    144ee <is_within_user_range+0x58>
   144e9:	b8 00 00 00 00       	mov    $0x0,%eax
   144ee:	83 e0 01             	and    $0x1,%eax
   144f1:	5d                   	pop    %rbp
   144f2:	c3                   	ret    

00000000000144f3 <is_within_rts_range>:
   144f3:	f3 0f 1e fa          	endbr64 
   144f7:	55                   	push   %rbp
   144f8:	48 89 e5             	mov    %rsp,%rbp
   144fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14503:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14507:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1450b:	48 01 d0             	add    %rdx,%rax
   1450e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14512:	76 07                	jbe    1451b <is_within_rts_range+0x28>
   14514:	b8 00 00 00 00       	mov    $0x0,%eax
   14519:	eb 33                	jmp    1454e <is_within_rts_range+0x5b>
   1451b:	48 8b 05 8e d9 04 00 	mov    0x4d98e(%rip),%rax        # 61eb0 <mm_user_end>
   14522:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14526:	73 17                	jae    1453f <is_within_rts_range+0x4c>
   14528:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1452c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14530:	48 01 c2             	add    %rax,%rdx
   14533:	48 8b 05 6e d9 04 00 	mov    0x4d96e(%rip),%rax        # 61ea8 <mm_user_base>
   1453a:	48 39 c2             	cmp    %rax,%rdx
   1453d:	77 07                	ja     14546 <is_within_rts_range+0x53>
   1453f:	b8 01 00 00 00       	mov    $0x1,%eax
   14544:	eb 05                	jmp    1454b <is_within_rts_range+0x58>
   14546:	b8 00 00 00 00       	mov    $0x0,%eax
   1454b:	83 e0 01             	and    $0x1,%eax
   1454e:	5d                   	pop    %rbp
   1454f:	c3                   	ret    

0000000000014550 <destroy_ema_root>:
   14550:	f3 0f 1e fa          	endbr64 
   14554:	55                   	push   %rbp
   14555:	48 89 e5             	mov    %rsp,%rbp
   14558:	48 83 ec 30          	sub    $0x30,%rsp
   1455c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14564:	48 8b 00             	mov    (%rax),%rax
   14567:	48 8b 40 38          	mov    0x38(%rax),%rax
   1456b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1456f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   14576:	00 
   14577:	eb 25                	jmp    1459e <destroy_ema_root+0x4e>
   14579:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   1457e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14582:	48 8b 40 38          	mov    0x38(%rax),%rax
   14586:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1458a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1458e:	48 89 c7             	mov    %rax,%rdi
   14591:	e8 65 10 00 00       	call   155fb <ema_destroy>
   14596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1459a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1459e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145a2:	48 8b 00             	mov    (%rax),%rax
   145a5:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   145a9:	75 ce                	jne    14579 <destroy_ema_root+0x29>
   145ab:	90                   	nop
   145ac:	90                   	nop
   145ad:	c9                   	leave  
   145ae:	c3                   	ret    

00000000000145af <ema_next>:
   145af:	f3 0f 1e fa          	endbr64 
   145b3:	55                   	push   %rbp
   145b4:	48 89 e5             	mov    %rsp,%rbp
   145b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145bf:	48 8b 40 38          	mov    0x38(%rax),%rax
   145c3:	5d                   	pop    %rbp
   145c4:	c3                   	ret    

00000000000145c5 <get_ema_alloc_flags>:
   145c5:	f3 0f 1e fa          	endbr64 
   145c9:	55                   	push   %rbp
   145ca:	48 89 e5             	mov    %rsp,%rbp
   145cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145d5:	8b 40 10             	mov    0x10(%rax),%eax
   145d8:	5d                   	pop    %rbp
   145d9:	c3                   	ret    

00000000000145da <get_ema_si_flags>:
   145da:	f3 0f 1e fa          	endbr64 
   145de:	55                   	push   %rbp
   145df:	48 89 e5             	mov    %rsp,%rbp
   145e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145ea:	48 8b 40 18          	mov    0x18(%rax),%rax
   145ee:	5d                   	pop    %rbp
   145ef:	c3                   	ret    

00000000000145f0 <ema_fault_handler>:
   145f0:	f3 0f 1e fa          	endbr64 
   145f4:	55                   	push   %rbp
   145f5:	48 89 e5             	mov    %rsp,%rbp
   145f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14600:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14605:	74 0f                	je     14616 <ema_fault_handler+0x26>
   14607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1460b:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1460f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14613:	48 89 10             	mov    %rdx,(%rax)
   14616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1461a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1461e:	5d                   	pop    %rbp
   1461f:	c3                   	ret    

0000000000014620 <ema_clone>:
   14620:	f3 0f 1e fa          	endbr64 
   14624:	55                   	push   %rbp
   14625:	48 89 e5             	mov    %rsp,%rbp
   14628:	48 83 ec 10          	sub    $0x10,%rsp
   1462c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14630:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14634:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1463c:	ba 48 00 00 00       	mov    $0x48,%edx
   14641:	48 89 ce             	mov    %rcx,%rsi
   14644:	48 89 c7             	mov    %rax,%rdi
   14647:	e8 a3 ed 00 00       	call   233ef <memcpy>
   1464c:	90                   	nop
   1464d:	c9                   	leave  
   1464e:	c3                   	ret    

000000000001464f <ema_lower_than_addr>:
   1464f:	f3 0f 1e fa          	endbr64 
   14653:	55                   	push   %rbp
   14654:	48 89 e5             	mov    %rsp,%rbp
   14657:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1465b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1465f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14663:	48 8b 10             	mov    (%rax),%rdx
   14666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1466a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1466e:	48 01 d0             	add    %rdx,%rax
   14671:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14675:	0f 93 c0             	setae  %al
   14678:	5d                   	pop    %rbp
   14679:	c3                   	ret    

000000000001467a <ema_higher_than_addr>:
   1467a:	f3 0f 1e fa          	endbr64 
   1467e:	55                   	push   %rbp
   1467f:	48 89 e5             	mov    %rsp,%rbp
   14682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14686:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1468a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468e:	48 8b 00             	mov    (%rax),%rax
   14691:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14695:	0f 96 c0             	setbe  %al
   14698:	5d                   	pop    %rbp
   14699:	c3                   	ret    

000000000001469a <ema_overlap_addr>:
   1469a:	f3 0f 1e fa          	endbr64 
   1469e:	55                   	push   %rbp
   1469f:	48 89 e5             	mov    %rsp,%rbp
   146a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   146aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146ae:	48 8b 00             	mov    (%rax),%rax
   146b1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   146b5:	72 1f                	jb     146d6 <ema_overlap_addr+0x3c>
   146b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146bb:	48 8b 10             	mov    (%rax),%rdx
   146be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146c2:	48 8b 40 08          	mov    0x8(%rax),%rax
   146c6:	48 01 d0             	add    %rdx,%rax
   146c9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   146cd:	73 07                	jae    146d6 <ema_overlap_addr+0x3c>
   146cf:	b8 01 00 00 00       	mov    $0x1,%eax
   146d4:	eb 05                	jmp    146db <ema_overlap_addr+0x41>
   146d6:	b8 00 00 00 00       	mov    $0x0,%eax
   146db:	5d                   	pop    %rbp
   146dc:	c3                   	ret    

00000000000146dd <ema_set_eaccept_full>:
   146dd:	f3 0f 1e fa          	endbr64 
   146e1:	55                   	push   %rbp
   146e2:	48 89 e5             	mov    %rsp,%rbp
   146e5:	48 83 ec 10          	sub    $0x10,%rsp
   146e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146f1:	48 8b 40 20          	mov    0x20(%rax),%rax
   146f5:	48 85 c0             	test   %rax,%rax
   146f8:	75 37                	jne    14731 <ema_set_eaccept_full+0x54>
   146fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146fe:	48 8b 40 08          	mov    0x8(%rax),%rax
   14702:	48 c1 e8 0c          	shr    $0xc,%rax
   14706:	48 89 c7             	mov    %rax,%rdi
   14709:	e8 62 f2 ff ff       	call   13970 <bit_array_new_set>
   1470e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14712:	48 89 42 20          	mov    %rax,0x20(%rdx)
   14716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1471a:	48 8b 40 20          	mov    0x20(%rax),%rax
   1471e:	48 85 c0             	test   %rax,%rax
   14721:	75 07                	jne    1472a <ema_set_eaccept_full+0x4d>
   14723:	b8 0c 00 00 00       	mov    $0xc,%eax
   14728:	eb 1c                	jmp    14746 <ema_set_eaccept_full+0x69>
   1472a:	b8 00 00 00 00       	mov    $0x0,%eax
   1472f:	eb 15                	jmp    14746 <ema_set_eaccept_full+0x69>
   14731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14735:	48 8b 40 20          	mov    0x20(%rax),%rax
   14739:	48 89 c7             	mov    %rax,%rdi
   1473c:	e8 03 f8 ff ff       	call   13f44 <bit_array_set_all>
   14741:	b8 00 00 00 00       	mov    $0x0,%eax
   14746:	c9                   	leave  
   14747:	c3                   	ret    

0000000000014748 <ema_clear_eaccept_full>:
   14748:	f3 0f 1e fa          	endbr64 
   1474c:	55                   	push   %rbp
   1474d:	48 89 e5             	mov    %rsp,%rbp
   14750:	48 83 ec 10          	sub    $0x10,%rsp
   14754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1475c:	48 8b 40 20          	mov    0x20(%rax),%rax
   14760:	48 85 c0             	test   %rax,%rax
   14763:	75 37                	jne    1479c <ema_clear_eaccept_full+0x54>
   14765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14769:	48 8b 40 08          	mov    0x8(%rax),%rax
   1476d:	48 c1 e8 0c          	shr    $0xc,%rax
   14771:	48 89 c7             	mov    %rax,%rdi
   14774:	e8 47 f2 ff ff       	call   139c0 <bit_array_new_reset>
   14779:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1477d:	48 89 42 20          	mov    %rax,0x20(%rdx)
   14781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14785:	48 8b 40 20          	mov    0x20(%rax),%rax
   14789:	48 85 c0             	test   %rax,%rax
   1478c:	75 07                	jne    14795 <ema_clear_eaccept_full+0x4d>
   1478e:	b8 0c 00 00 00       	mov    $0xc,%eax
   14793:	eb 1c                	jmp    147b1 <ema_clear_eaccept_full+0x69>
   14795:	b8 00 00 00 00       	mov    $0x0,%eax
   1479a:	eb 15                	jmp    147b1 <ema_clear_eaccept_full+0x69>
   1479c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147a0:	48 8b 40 20          	mov    0x20(%rax),%rax
   147a4:	48 89 c7             	mov    %rax,%rdi
   147a7:	e8 2d f9 ff ff       	call   140d9 <bit_array_reset_all>
   147ac:	b8 00 00 00 00       	mov    $0x0,%eax
   147b1:	c9                   	leave  
   147b2:	c3                   	ret    

00000000000147b3 <ema_set_eaccept>:
   147b3:	f3 0f 1e fa          	endbr64 
   147b7:	55                   	push   %rbp
   147b8:	48 89 e5             	mov    %rsp,%rbp
   147bb:	48 83 ec 30          	sub    $0x30,%rsp
   147bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   147c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   147cb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   147d0:	75 0a                	jne    147dc <ema_set_eaccept+0x29>
   147d2:	b8 16 00 00 00       	mov    $0x16,%eax
   147d7:	e9 f9 00 00 00       	jmp    148d5 <ema_set_eaccept+0x122>
   147dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147e0:	48 8b 00             	mov    (%rax),%rax
   147e3:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   147e7:	73 1f                	jae    14808 <ema_set_eaccept+0x55>
   147e9:	48 8d 0d b0 eb 01 00 	lea    0x1ebb0(%rip),%rcx        # 333a0 <__func__.1568+0x10>
   147f0:	48 8d 15 49 ed 01 00 	lea    0x1ed49(%rip),%rdx        # 33540 <__func__.1838>
   147f7:	be d1 00 00 00       	mov    $0xd1,%esi
   147fc:	48 8d 3d b7 eb 01 00 	lea    0x1ebb7(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   14803:	e8 41 4a 00 00       	call   19249 <__assert>
   14808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1480c:	48 8b 10             	mov    (%rax),%rdx
   1480f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14813:	48 8b 40 08          	mov    0x8(%rax),%rax
   14817:	48 01 d0             	add    %rdx,%rax
   1481a:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1481e:	76 1f                	jbe    1483f <ema_set_eaccept+0x8c>
   14820:	48 8d 0d a1 eb 01 00 	lea    0x1eba1(%rip),%rcx        # 333c8 <__func__.1568+0x38>
   14827:	48 8d 15 12 ed 01 00 	lea    0x1ed12(%rip),%rdx        # 33540 <__func__.1838>
   1482e:	be d2 00 00 00       	mov    $0xd2,%esi
   14833:	48 8d 3d 80 eb 01 00 	lea    0x1eb80(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   1483a:	e8 0a 4a 00 00       	call   19249 <__assert>
   1483f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14843:	48 8b 00             	mov    (%rax),%rax
   14846:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1484a:	48 29 c2             	sub    %rax,%rdx
   1484d:	48 89 d0             	mov    %rdx,%rax
   14850:	48 c1 e8 0c          	shr    $0xc,%rax
   14854:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1485c:	48 8b 00             	mov    (%rax),%rax
   1485f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14863:	48 29 c2             	sub    %rax,%rdx
   14866:	48 89 d0             	mov    %rdx,%rax
   14869:	48 c1 e8 0c          	shr    $0xc,%rax
   1486d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14871:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14875:	48 8b 40 20          	mov    0x20(%rax),%rax
   14879:	48 85 c0             	test   %rax,%rax
   1487c:	75 30                	jne    148ae <ema_set_eaccept+0xfb>
   1487e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14882:	48 8b 40 08          	mov    0x8(%rax),%rax
   14886:	48 c1 e8 0c          	shr    $0xc,%rax
   1488a:	48 89 c7             	mov    %rax,%rdi
   1488d:	e8 2e f1 ff ff       	call   139c0 <bit_array_new_reset>
   14892:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14896:	48 89 42 20          	mov    %rax,0x20(%rdx)
   1489a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1489e:	48 8b 40 20          	mov    0x20(%rax),%rax
   148a2:	48 85 c0             	test   %rax,%rax
   148a5:	75 07                	jne    148ae <ema_set_eaccept+0xfb>
   148a7:	b8 0c 00 00 00       	mov    $0xc,%eax
   148ac:	eb 27                	jmp    148d5 <ema_set_eaccept+0x122>
   148ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148b2:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   148b6:	48 89 c2             	mov    %rax,%rdx
   148b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148bd:	48 8b 40 20          	mov    0x20(%rax),%rax
   148c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   148c5:	48 89 ce             	mov    %rcx,%rsi
   148c8:	48 89 c7             	mov    %rax,%rdi
   148cb:	e8 39 f5 ff ff       	call   13e09 <bit_array_set_range>
   148d0:	b8 00 00 00 00       	mov    $0x0,%eax
   148d5:	c9                   	leave  
   148d6:	c3                   	ret    

00000000000148d7 <ema_page_committed>:
   148d7:	f3 0f 1e fa          	endbr64 
   148db:	55                   	push   %rbp
   148dc:	48 89 e5             	mov    %rsp,%rbp
   148df:	48 83 ec 10          	sub    $0x10,%rsp
   148e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   148eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   148ef:	25 ff 0f 00 00       	and    $0xfff,%eax
   148f4:	48 85 c0             	test   %rax,%rax
   148f7:	74 1f                	je     14918 <ema_page_committed+0x41>
   148f9:	48 8d 0d ed ea 01 00 	lea    0x1eaed(%rip),%rcx        # 333ed <__func__.1568+0x5d>
   14900:	48 8d 15 49 ec 01 00 	lea    0x1ec49(%rip),%rdx        # 33550 <__func__.1845>
   14907:	be e2 00 00 00       	mov    $0xe2,%esi
   1490c:	48 8d 3d a7 ea 01 00 	lea    0x1eaa7(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   14913:	e8 31 49 00 00       	call   19249 <__assert>
   14918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1491c:	48 8b 40 20          	mov    0x20(%rax),%rax
   14920:	48 85 c0             	test   %rax,%rax
   14923:	75 07                	jne    1492c <ema_page_committed+0x55>
   14925:	b8 00 00 00 00       	mov    $0x0,%eax
   1492a:	eb 2b                	jmp    14957 <ema_page_committed+0x80>
   1492c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14930:	48 8b 00             	mov    (%rax),%rax
   14933:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14937:	48 29 c2             	sub    %rax,%rdx
   1493a:	48 89 d0             	mov    %rdx,%rax
   1493d:	48 c1 e8 0c          	shr    $0xc,%rax
   14941:	48 89 c2             	mov    %rax,%rdx
   14944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14948:	48 8b 40 20          	mov    0x20(%rax),%rax
   1494c:	48 89 d6             	mov    %rdx,%rsi
   1494f:	48 89 c7             	mov    %rax,%rdi
   14952:	e8 e8 f0 ff ff       	call   13a3f <bit_array_test>
   14957:	c9                   	leave  
   14958:	c3                   	ret    

0000000000014959 <search_ema>:
   14959:	f3 0f 1e fa          	endbr64 
   1495d:	55                   	push   %rbp
   1495e:	48 89 e5             	mov    %rsp,%rbp
   14961:	48 83 ec 20          	sub    $0x20,%rsp
   14965:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14969:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1496d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14971:	48 8b 00             	mov    (%rax),%rax
   14974:	48 8b 40 38          	mov    0x38(%rax),%rax
   14978:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1497c:	eb 29                	jmp    149a7 <search_ema+0x4e>
   1497e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14986:	48 89 d6             	mov    %rdx,%rsi
   14989:	48 89 c7             	mov    %rax,%rdi
   1498c:	e8 09 fd ff ff       	call   1469a <ema_overlap_addr>
   14991:	84 c0                	test   %al,%al
   14993:	74 06                	je     1499b <search_ema+0x42>
   14995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14999:	eb 1e                	jmp    149b9 <search_ema+0x60>
   1499b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1499f:	48 8b 40 38          	mov    0x38(%rax),%rax
   149a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   149a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149ab:	48 8b 00             	mov    (%rax),%rax
   149ae:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   149b2:	75 ca                	jne    1497e <search_ema+0x25>
   149b4:	b8 00 00 00 00       	mov    $0x0,%eax
   149b9:	c9                   	leave  
   149ba:	c3                   	ret    

00000000000149bb <insert_ema>:
   149bb:	f3 0f 1e fa          	endbr64 
   149bf:	55                   	push   %rbp
   149c0:	48 89 e5             	mov    %rsp,%rbp
   149c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   149cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149cf:	48 8b 50 40          	mov    0x40(%rax),%rdx
   149d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149d7:	48 89 50 40          	mov    %rdx,0x40(%rax)
   149db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   149e3:	48 89 50 38          	mov    %rdx,0x38(%rax)
   149e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149eb:	48 8b 40 40          	mov    0x40(%rax),%rax
   149ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149f3:	48 89 50 38          	mov    %rdx,0x38(%rax)
   149f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149ff:	48 89 50 40          	mov    %rdx,0x40(%rax)
   14a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a07:	5d                   	pop    %rbp
   14a08:	c3                   	ret    

0000000000014a09 <replace_ema>:
   14a09:	f3 0f 1e fa          	endbr64 
   14a0d:	55                   	push   %rbp
   14a0e:	48 89 e5             	mov    %rsp,%rbp
   14a11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a1d:	48 8b 40 40          	mov    0x40(%rax),%rax
   14a21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a25:	48 89 50 38          	mov    %rdx,0x38(%rax)
   14a29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a2d:	48 8b 40 38          	mov    0x38(%rax),%rax
   14a31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a35:	48 89 50 40          	mov    %rdx,0x40(%rax)
   14a39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a3d:	48 8b 50 38          	mov    0x38(%rax),%rdx
   14a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a45:	48 89 50 38          	mov    %rdx,0x38(%rax)
   14a49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a4d:	48 8b 50 40          	mov    0x40(%rax),%rdx
   14a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a55:	48 89 50 40          	mov    %rdx,0x40(%rax)
   14a59:	90                   	nop
   14a5a:	5d                   	pop    %rbp
   14a5b:	c3                   	ret    

0000000000014a5c <remove_ema>:
   14a5c:	f3 0f 1e fa          	endbr64 
   14a60:	55                   	push   %rbp
   14a61:	48 89 e5             	mov    %rsp,%rbp
   14a64:	48 83 ec 10          	sub    $0x10,%rsp
   14a68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a6c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14a71:	75 06                	jne    14a79 <remove_ema+0x1d>
   14a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a77:	eb 55                	jmp    14ace <remove_ema+0x72>
   14a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a7d:	48 8b 40 40          	mov    0x40(%rax),%rax
   14a81:	48 8b 40 38          	mov    0x38(%rax),%rax
   14a85:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14a89:	75 12                	jne    14a9d <remove_ema+0x41>
   14a8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a8f:	48 8b 40 38          	mov    0x38(%rax),%rax
   14a93:	48 8b 40 40          	mov    0x40(%rax),%rax
   14a97:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14a9b:	74 05                	je     14aa2 <remove_ema+0x46>
   14a9d:	e8 f9 cf 01 00       	call   31a9b <abort>
   14aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa6:	48 8b 40 40          	mov    0x40(%rax),%rax
   14aaa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14aae:	48 8b 52 38          	mov    0x38(%rdx),%rdx
   14ab2:	48 89 50 38          	mov    %rdx,0x38(%rax)
   14ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aba:	48 8b 40 38          	mov    0x38(%rax),%rax
   14abe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ac2:	48 8b 52 40          	mov    0x40(%rdx),%rdx
   14ac6:	48 89 50 40          	mov    %rdx,0x40(%rax)
   14aca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ace:	c9                   	leave  
   14acf:	c3                   	ret    

0000000000014ad0 <push_back_ema>:
   14ad0:	f3 0f 1e fa          	endbr64 
   14ad4:	55                   	push   %rbp
   14ad5:	48 89 e5             	mov    %rsp,%rbp
   14ad8:	48 83 ec 10          	sub    $0x10,%rsp
   14adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ae0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ae8:	48 8b 10             	mov    (%rax),%rdx
   14aeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14aef:	48 89 d6             	mov    %rdx,%rsi
   14af2:	48 89 c7             	mov    %rax,%rdi
   14af5:	e8 c1 fe ff ff       	call   149bb <insert_ema>
   14afa:	90                   	nop
   14afb:	c9                   	leave  
   14afc:	c3                   	ret    

0000000000014afd <search_ema_range>:
   14afd:	f3 0f 1e fa          	endbr64 
   14b01:	55                   	push   %rbp
   14b02:	48 89 e5             	mov    %rsp,%rbp
   14b05:	48 83 ec 38          	sub    $0x38,%rsp
   14b09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14b11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14b15:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14b19:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   14b1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b21:	48 8b 00             	mov    (%rax),%rax
   14b24:	48 8b 40 38          	mov    0x38(%rax),%rax
   14b28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14b2c:	eb 0c                	jmp    14b3a <search_ema_range+0x3d>
   14b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b32:	48 8b 40 38          	mov    0x38(%rax),%rax
   14b36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14b3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b3e:	48 8b 00             	mov    (%rax),%rax
   14b41:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14b45:	74 17                	je     14b5e <search_ema_range+0x61>
   14b47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b4f:	48 89 d6             	mov    %rdx,%rsi
   14b52:	48 89 c7             	mov    %rax,%rdi
   14b55:	e8 f5 fa ff ff       	call   1464f <ema_lower_than_addr>
   14b5a:	84 c0                	test   %al,%al
   14b5c:	75 d0                	jne    14b2e <search_ema_range+0x31>
   14b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b62:	48 8b 00             	mov    (%rax),%rax
   14b65:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14b69:	74 17                	je     14b82 <search_ema_range+0x85>
   14b6b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b73:	48 89 d6             	mov    %rdx,%rsi
   14b76:	48 89 c7             	mov    %rax,%rdi
   14b79:	e8 fc fa ff ff       	call   1467a <ema_higher_than_addr>
   14b7e:	84 c0                	test   %al,%al
   14b80:	74 1d                	je     14b9f <search_ema_range+0xa2>
   14b82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14b86:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14b8d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b91:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14b98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   14b9d:	eb 50                	jmp    14bef <search_ema_range+0xf2>
   14b9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ba3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ba7:	48 89 10             	mov    %rdx,(%rax)
   14baa:	eb 0c                	jmp    14bb8 <search_ema_range+0xbb>
   14bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bb0:	48 8b 40 38          	mov    0x38(%rax),%rax
   14bb4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14bb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bbc:	48 8b 00             	mov    (%rax),%rax
   14bbf:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   14bc3:	74 1a                	je     14bdf <search_ema_range+0xe2>
   14bc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bcd:	48 89 d6             	mov    %rdx,%rsi
   14bd0:	48 89 c7             	mov    %rax,%rdi
   14bd3:	e8 a2 fa ff ff       	call   1467a <ema_higher_than_addr>
   14bd8:	83 f0 01             	xor    $0x1,%eax
   14bdb:	84 c0                	test   %al,%al
   14bdd:	75 cd                	jne    14bac <search_ema_range+0xaf>
   14bdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14be3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14be7:	48 89 10             	mov    %rdx,(%rax)
   14bea:	b8 00 00 00 00       	mov    $0x0,%eax
   14bef:	c9                   	leave  
   14bf0:	c3                   	ret    

0000000000014bf1 <ema_split>:
   14bf1:	f3 0f 1e fa          	endbr64 
   14bf5:	55                   	push   %rbp
   14bf6:	48 89 e5             	mov    %rsp,%rbp
   14bf9:	48 83 ec 70          	sub    $0x70,%rsp
   14bfd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14c01:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14c05:	89 d0                	mov    %edx,%eax
   14c07:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   14c0b:	88 45 9c             	mov    %al,-0x64(%rbp)
   14c0e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14c15:	00 00 
   14c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14c1b:	31 c0                	xor    %eax,%eax
   14c1d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14c21:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c25:	48 89 d6             	mov    %rdx,%rsi
   14c28:	48 89 c7             	mov    %rax,%rdi
   14c2b:	e8 6a fa ff ff       	call   1469a <ema_overlap_addr>
   14c30:	84 c0                	test   %al,%al
   14c32:	75 1f                	jne    14c53 <ema_split+0x62>
   14c34:	48 8d 0d ca e7 01 00 	lea    0x1e7ca(%rip),%rcx        # 33405 <__func__.1568+0x75>
   14c3b:	48 8d 15 26 e9 01 00 	lea    0x1e926(%rip),%rdx        # 33568 <__func__.1889>
   14c42:	be 4f 01 00 00       	mov    $0x14f,%esi
   14c47:	48 8d 3d 6c e7 01 00 	lea    0x1e76c(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   14c4e:	e8 f6 45 00 00       	call   19249 <__assert>
   14c53:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14c58:	75 1f                	jne    14c79 <ema_split+0x88>
   14c5a:	48 8d 0d c0 e7 01 00 	lea    0x1e7c0(%rip),%rcx        # 33421 <__func__.1568+0x91>
   14c61:	48 8d 15 00 e9 01 00 	lea    0x1e900(%rip),%rdx        # 33568 <__func__.1889>
   14c68:	be 50 01 00 00       	mov    $0x150,%esi
   14c6d:	48 8d 3d 46 e7 01 00 	lea    0x1e746(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   14c74:	e8 d0 45 00 00       	call   19249 <__assert>
   14c79:	bf 48 00 00 00       	mov    $0x48,%edi
   14c7e:	e8 17 30 00 00       	call   17c9a <emalloc>
   14c83:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   14c87:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   14c8c:	75 0a                	jne    14c98 <ema_split+0xa7>
   14c8e:	b8 0c 00 00 00       	mov    $0xc,%eax
   14c93:	e9 70 01 00 00       	jmp    14e08 <ema_split+0x217>
   14c98:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   14c9f:	00 
   14ca0:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   14ca7:	00 
   14ca8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cac:	48 8b 40 20          	mov    0x20(%rax),%rax
   14cb0:	48 85 c0             	test   %rax,%rax
   14cb3:	74 52                	je     14d07 <ema_split+0x116>
   14cb5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cb9:	48 8b 00             	mov    (%rax),%rax
   14cbc:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14cc0:	48 29 c2             	sub    %rax,%rdx
   14cc3:	48 89 d0             	mov    %rdx,%rax
   14cc6:	48 c1 e8 0c          	shr    $0xc,%rax
   14cca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14cce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cd2:	48 8b 40 20          	mov    0x20(%rax),%rax
   14cd6:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   14cda:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   14cde:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   14ce2:	48 89 c7             	mov    %rax,%rdi
   14ce5:	e8 89 f4 ff ff       	call   14173 <bit_array_split>
   14cea:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   14ced:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   14cf1:	74 14                	je     14d07 <ema_split+0x116>
   14cf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14cf7:	48 89 c7             	mov    %rax,%rdi
   14cfa:	e8 86 31 00 00       	call   17e85 <efree>
   14cff:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   14d02:	e9 01 01 00 00       	jmp    14e08 <ema_split+0x217>
   14d07:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d0f:	48 89 d6             	mov    %rdx,%rsi
   14d12:	48 89 c7             	mov    %rax,%rdi
   14d15:	e8 06 f9 ff ff       	call   14620 <ema_clone>
   14d1a:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   14d21:	00 
   14d22:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   14d29:	00 
   14d2a:	80 7d 9c 00          	cmpb   $0x0,-0x64(%rbp)
   14d2e:	74 25                	je     14d55 <ema_split+0x164>
   14d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d34:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   14d38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d3c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14d40:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14d44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d48:	48 89 d6             	mov    %rdx,%rsi
   14d4b:	48 89 c7             	mov    %rax,%rdi
   14d4e:	e8 68 fc ff ff       	call   149bb <insert_ema>
   14d53:	eb 27                	jmp    14d7c <ema_split+0x18b>
   14d55:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d59:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   14d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d61:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14d65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d69:	48 8b 50 38          	mov    0x38(%rax),%rdx
   14d6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d71:	48 89 d6             	mov    %rdx,%rsi
   14d74:	48 89 c7             	mov    %rax,%rdi
   14d77:	e8 3f fc ff ff       	call   149bb <insert_ema>
   14d7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d80:	48 8b 00             	mov    (%rax),%rax
   14d83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14d87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d8b:	48 8b 40 08          	mov    0x8(%rax),%rax
   14d8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14d93:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14d9b:	48 89 10             	mov    %rdx,(%rax)
   14d9e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14da2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14da6:	48 89 c2             	mov    %rax,%rdx
   14da9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14dad:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14db1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14db5:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14db9:	48 89 10             	mov    %rdx,(%rax)
   14dbc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14dc0:	48 8b 40 08          	mov    0x8(%rax),%rax
   14dc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14dc8:	48 29 c2             	sub    %rax,%rdx
   14dcb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14dcf:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14dd3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14dd7:	48 8b 40 20          	mov    0x20(%rax),%rax
   14ddb:	48 85 c0             	test   %rax,%rax
   14dde:	74 18                	je     14df8 <ema_split+0x207>
   14de0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14de4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14de8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   14dec:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14df0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14df4:	48 89 50 20          	mov    %rdx,0x20(%rax)
   14df8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14dfc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14e00:	48 89 10             	mov    %rdx,(%rax)
   14e03:	b8 00 00 00 00       	mov    $0x0,%eax
   14e08:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   14e0c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   14e13:	00 00 
   14e15:	74 05                	je     14e1c <ema_split+0x22b>
   14e17:	e8 db e9 00 00       	call   237f7 <__stack_chk_fail>
   14e1c:	c9                   	leave  
   14e1d:	c3                   	ret    

0000000000014e1e <ema_split_ex>:
   14e1e:	f3 0f 1e fa          	endbr64 
   14e22:	55                   	push   %rbp
   14e23:	48 89 e5             	mov    %rsp,%rbp
   14e26:	48 83 ec 40          	sub    $0x40,%rsp
   14e2a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14e2e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14e32:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14e36:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   14e3a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14e41:	00 00 
   14e43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14e47:	31 c0                	xor    %eax,%eax
   14e49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e4d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14e51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e55:	48 8b 00             	mov    (%rax),%rax
   14e58:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   14e5c:	76 3b                	jbe    14e99 <ema_split_ex+0x7b>
   14e5e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   14e62:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   14e66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e6a:	48 89 d1             	mov    %rdx,%rcx
   14e6d:	ba 00 00 00 00       	mov    $0x0,%edx
   14e72:	48 89 c7             	mov    %rax,%rdi
   14e75:	e8 77 fd ff ff       	call   14bf1 <ema_split>
   14e7a:	89 45 e0             	mov    %eax,-0x20(%rbp)
   14e7d:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   14e81:	74 05                	je     14e88 <ema_split_ex+0x6a>
   14e83:	8b 45 e0             	mov    -0x20(%rbp),%eax
   14e86:	eb 7c                	jmp    14f04 <ema_split_ex+0xe6>
   14e88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e8c:	48 85 c0             	test   %rax,%rax
   14e8f:	74 08                	je     14e99 <ema_split_ex+0x7b>
   14e91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14e99:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14ea0:	00 
   14ea1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ea5:	48 8b 10             	mov    (%rax),%rdx
   14ea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14eac:	48 8b 40 08          	mov    0x8(%rax),%rax
   14eb0:	48 01 d0             	add    %rdx,%rax
   14eb3:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   14eb7:	73 3b                	jae    14ef4 <ema_split_ex+0xd6>
   14eb9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   14ebd:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   14ec1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ec5:	48 89 d1             	mov    %rdx,%rcx
   14ec8:	ba 01 00 00 00       	mov    $0x1,%edx
   14ecd:	48 89 c7             	mov    %rax,%rdi
   14ed0:	e8 1c fd ff ff       	call   14bf1 <ema_split>
   14ed5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   14ed8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   14edc:	74 05                	je     14ee3 <ema_split_ex+0xc5>
   14ede:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14ee1:	eb 21                	jmp    14f04 <ema_split_ex+0xe6>
   14ee3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ee7:	48 85 c0             	test   %rax,%rax
   14eea:	74 08                	je     14ef4 <ema_split_ex+0xd6>
   14eec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ef0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14ef4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14ef8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14efc:	48 89 10             	mov    %rdx,(%rax)
   14eff:	b8 00 00 00 00       	mov    $0x0,%eax
   14f04:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   14f08:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   14f0f:	00 00 
   14f11:	74 05                	je     14f18 <ema_split_ex+0xfa>
   14f13:	e8 df e8 00 00       	call   237f7 <__stack_chk_fail>
   14f18:	c9                   	leave  
   14f19:	c3                   	ret    

0000000000014f1a <ema_aligned_end>:
   14f1a:	f3 0f 1e fa          	endbr64 
   14f1e:	55                   	push   %rbp
   14f1f:	48 89 e5             	mov    %rsp,%rbp
   14f22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14f2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f2e:	48 8b 10             	mov    (%rax),%rdx
   14f31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f35:	48 8b 40 08          	mov    0x8(%rax),%rax
   14f39:	48 01 d0             	add    %rdx,%rax
   14f3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14f40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f48:	48 01 d0             	add    %rdx,%rax
   14f4b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   14f4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f53:	48 f7 d8             	neg    %rax
   14f56:	48 21 d0             	and    %rdx,%rax
   14f59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f61:	5d                   	pop    %rbp
   14f62:	c3                   	ret    

0000000000014f63 <find_free_region>:
   14f63:	f3 0f 1e fa          	endbr64 
   14f67:	55                   	push   %rbp
   14f68:	48 89 e5             	mov    %rsp,%rbp
   14f6b:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   14f6f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14f73:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14f77:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   14f7b:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   14f7f:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
   14f83:	48 8d 05 fe 60 02 00 	lea    0x260fe(%rip),%rax        # 3b088 <g_rts_ema_root>
   14f8a:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   14f8e:	0f 94 c0             	sete   %al
   14f91:	88 45 bf             	mov    %al,-0x41(%rbp)
   14f94:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f98:	48 8b 00             	mov    (%rax),%rax
   14f9b:	48 8b 40 38          	mov    0x38(%rax),%rax
   14f9f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   14fa3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14fa7:	48 8b 00             	mov    (%rax),%rax
   14faa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14fae:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14fb2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14fb9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14fbd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14fc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14fc8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14fcc:	0f 85 84 01 00 00    	jne    15156 <find_free_region+0x1f3>
   14fd2:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   14fd9:	00 
   14fda:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
   14fde:	0f 84 11 01 00 00    	je     150f5 <find_free_region+0x192>
   14fe4:	c6 45 be 00          	movb   $0x0,-0x42(%rbp)
   14fe8:	48 8b 05 b9 ce 04 00 	mov    0x4ceb9(%rip),%rax        # 61ea8 <mm_user_base>
   14fef:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   14ff3:	77 2f                	ja     15024 <find_free_region+0xc1>
   14ff5:	48 8b 05 ac ce 04 00 	mov    0x4ceac(%rip),%rax        # 61ea8 <mm_user_base>
   14ffc:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
   15000:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15004:	48 f7 da             	neg    %rdx
   15007:	48 21 d0             	and    %rdx,%rax
   1500a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1500e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15012:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15016:	48 89 d6             	mov    %rdx,%rsi
   15019:	48 89 c7             	mov    %rax,%rdi
   1501c:	e8 bf a4 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   15021:	88 45 be             	mov    %al,-0x42(%rbp)
   15024:	0f b6 45 be          	movzbl -0x42(%rbp),%eax
   15028:	83 f0 01             	xor    $0x1,%eax
   1502b:	84 c0                	test   %al,%al
   1502d:	74 5b                	je     1508a <find_free_region+0x127>
   1502f:	48 8b 15 7a ce 04 00 	mov    0x4ce7a(%rip),%rdx        # 61eb0 <mm_user_end>
   15036:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1503a:	48 01 d0             	add    %rdx,%rax
   1503d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15041:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15045:	48 f7 d8             	neg    %rax
   15048:	48 21 d0             	and    %rdx,%rax
   1504b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1504f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15053:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15057:	48 01 d0             	add    %rdx,%rax
   1505a:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1505e:	77 1e                	ja     1507e <find_free_region+0x11b>
   15060:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15064:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15068:	48 89 d6             	mov    %rdx,%rsi
   1506b:	48 89 c7             	mov    %rax,%rdi
   1506e:	e8 6d a4 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   15073:	84 c0                	test   %al,%al
   15075:	74 07                	je     1507e <find_free_region+0x11b>
   15077:	b8 01 00 00 00       	mov    $0x1,%eax
   1507c:	eb 05                	jmp    15083 <find_free_region+0x120>
   1507e:	b8 00 00 00 00       	mov    $0x0,%eax
   15083:	88 45 be             	mov    %al,-0x42(%rbp)
   15086:	80 65 be 01          	andb   $0x1,-0x42(%rbp)
   1508a:	0f b6 45 be          	movzbl -0x42(%rbp),%eax
   1508e:	83 f0 01             	xor    $0x1,%eax
   15091:	84 c0                	test   %al,%al
   15093:	74 0a                	je     1509f <find_free_region+0x13c>
   15095:	b8 00 00 00 00       	mov    $0x0,%eax
   1509a:	e9 bd 02 00 00       	jmp    1535c <find_free_region+0x3f9>
   1509f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   150a3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   150a7:	48 89 d6             	mov    %rdx,%rsi
   150aa:	48 89 c7             	mov    %rax,%rdi
   150ad:	e8 41 f4 ff ff       	call   144f3 <is_within_rts_range>
   150b2:	84 c0                	test   %al,%al
   150b4:	75 1f                	jne    150d5 <find_free_region+0x172>
   150b6:	48 8d 0d 73 e3 01 00 	lea    0x1e373(%rip),%rcx        # 33430 <__func__.1568+0xa0>
   150bd:	48 8d 15 bc e4 01 00 	lea    0x1e4bc(%rip),%rdx        # 33580 <__func__.1926>
   150c4:	be c4 01 00 00       	mov    $0x1c4,%esi
   150c9:	48 8d 3d ea e2 01 00 	lea    0x1e2ea(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   150d0:	e8 74 41 00 00       	call   19249 <__assert>
   150d5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   150d9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   150dd:	48 89 10             	mov    %rdx,(%rax)
   150e0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   150e4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   150e8:	48 89 10             	mov    %rdx,(%rax)
   150eb:	b8 01 00 00 00       	mov    $0x1,%eax
   150f0:	e9 67 02 00 00       	jmp    1535c <find_free_region+0x3f9>
   150f5:	48 8b 15 ac cd 04 00 	mov    0x4cdac(%rip),%rdx        # 61ea8 <mm_user_base>
   150fc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15100:	48 01 d0             	add    %rdx,%rax
   15103:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   15107:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1510b:	48 f7 d8             	neg    %rax
   1510e:	48 21 d0             	and    %rdx,%rax
   15111:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   15115:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15119:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1511d:	48 89 d6             	mov    %rdx,%rsi
   15120:	48 89 c7             	mov    %rax,%rdi
   15123:	e8 6e f3 ff ff       	call   14496 <is_within_user_range>
   15128:	84 c0                	test   %al,%al
   1512a:	74 20                	je     1514c <find_free_region+0x1e9>
   1512c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15130:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15134:	48 89 10             	mov    %rdx,(%rax)
   15137:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1513b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1513f:	48 89 10             	mov    %rdx,(%rax)
   15142:	b8 01 00 00 00       	mov    $0x1,%eax
   15147:	e9 10 02 00 00       	jmp    1535c <find_free_region+0x3f9>
   1514c:	b8 00 00 00 00       	mov    $0x0,%eax
   15151:	e9 06 02 00 00       	jmp    1535c <find_free_region+0x3f9>
   15156:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1515a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1515e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15162:	48 8b 40 38          	mov    0x38(%rax),%rax
   15166:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1516a:	e9 93 00 00 00       	jmp    15202 <find_free_region+0x29f>
   1516f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15173:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15177:	48 89 d6             	mov    %rdx,%rsi
   1517a:	48 89 c7             	mov    %rax,%rdi
   1517d:	e8 98 fd ff ff       	call   14f1a <ema_aligned_end>
   15182:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15186:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1518a:	48 8b 00             	mov    (%rax),%rax
   1518d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   15191:	77 5b                	ja     151ee <find_free_region+0x28b>
   15193:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15197:	48 8b 00             	mov    (%rax),%rax
   1519a:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   1519e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   151a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a6:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   151aa:	72 42                	jb     151ee <find_free_region+0x28b>
   151ac:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   151b0:	83 f0 01             	xor    $0x1,%eax
   151b3:	84 c0                	test   %al,%al
   151b5:	75 17                	jne    151ce <find_free_region+0x26b>
   151b7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   151bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151bf:	48 89 d6             	mov    %rdx,%rsi
   151c2:	48 89 c7             	mov    %rax,%rdi
   151c5:	e8 29 f3 ff ff       	call   144f3 <is_within_rts_range>
   151ca:	84 c0                	test   %al,%al
   151cc:	74 20                	je     151ee <find_free_region+0x28b>
   151ce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   151d2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   151d6:	48 89 10             	mov    %rdx,(%rax)
   151d9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   151dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   151e1:	48 89 10             	mov    %rdx,(%rax)
   151e4:	b8 01 00 00 00       	mov    $0x1,%eax
   151e9:	e9 6e 01 00 00       	jmp    1535c <find_free_region+0x3f9>
   151ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   151f2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   151f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   151fa:	48 8b 40 38          	mov    0x38(%rax),%rax
   151fe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   15202:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15206:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1520a:	0f 85 5f ff ff ff    	jne    1516f <find_free_region+0x20c>
   15210:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15214:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15218:	48 89 d6             	mov    %rdx,%rsi
   1521b:	48 89 c7             	mov    %rax,%rdi
   1521e:	e8 f7 fc ff ff       	call   14f1a <ema_aligned_end>
   15223:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1522b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1522f:	48 89 d6             	mov    %rdx,%rsi
   15232:	48 89 c7             	mov    %rax,%rdi
   15235:	e8 a6 a2 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   1523a:	84 c0                	test   %al,%al
   1523c:	74 5f                	je     1529d <find_free_region+0x33a>
   1523e:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
   15242:	74 17                	je     1525b <find_free_region+0x2f8>
   15244:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1524c:	48 89 d6             	mov    %rdx,%rsi
   1524f:	48 89 c7             	mov    %rax,%rdi
   15252:	e8 9c f2 ff ff       	call   144f3 <is_within_rts_range>
   15257:	84 c0                	test   %al,%al
   15259:	75 22                	jne    1527d <find_free_region+0x31a>
   1525b:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   1525f:	83 f0 01             	xor    $0x1,%eax
   15262:	84 c0                	test   %al,%al
   15264:	74 37                	je     1529d <find_free_region+0x33a>
   15266:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1526a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1526e:	48 89 d6             	mov    %rdx,%rsi
   15271:	48 89 c7             	mov    %rax,%rdi
   15274:	e8 1d f2 ff ff       	call   14496 <is_within_user_range>
   15279:	84 c0                	test   %al,%al
   1527b:	74 20                	je     1529d <find_free_region+0x33a>
   1527d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15281:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15285:	48 89 10             	mov    %rdx,(%rax)
   15288:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1528c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15290:	48 89 10             	mov    %rdx,(%rax)
   15293:	b8 01 00 00 00       	mov    $0x1,%eax
   15298:	e9 bf 00 00 00       	jmp    1535c <find_free_region+0x3f9>
   1529d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152a1:	48 8b 00             	mov    (%rax),%rax
   152a4:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   152a8:	76 0a                	jbe    152b4 <find_free_region+0x351>
   152aa:	b8 00 00 00 00       	mov    $0x0,%eax
   152af:	e9 a8 00 00 00       	jmp    1535c <find_free_region+0x3f9>
   152b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152b8:	48 8b 00             	mov    (%rax),%rax
   152bb:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
   152bf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   152c3:	48 f7 da             	neg    %rdx
   152c6:	48 21 d0             	and    %rdx,%rax
   152c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   152cd:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   152d1:	83 f0 01             	xor    $0x1,%eax
   152d4:	84 c0                	test   %al,%al
   152d6:	74 34                	je     1530c <find_free_region+0x3a9>
   152d8:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   152dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152e0:	48 89 d6             	mov    %rdx,%rsi
   152e3:	48 89 c7             	mov    %rax,%rdi
   152e6:	e8 ab f1 ff ff       	call   14496 <is_within_user_range>
   152eb:	84 c0                	test   %al,%al
   152ed:	74 68                	je     15357 <find_free_region+0x3f4>
   152ef:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   152f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   152f7:	48 89 10             	mov    %rdx,(%rax)
   152fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   152fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15302:	48 89 10             	mov    %rdx,(%rax)
   15305:	b8 01 00 00 00       	mov    $0x1,%eax
   1530a:	eb 50                	jmp    1535c <find_free_region+0x3f9>
   1530c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15310:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15314:	48 89 d6             	mov    %rdx,%rsi
   15317:	48 89 c7             	mov    %rax,%rdi
   1531a:	e8 c1 a1 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   1531f:	84 c0                	test   %al,%al
   15321:	74 34                	je     15357 <find_free_region+0x3f4>
   15323:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1532b:	48 89 d6             	mov    %rdx,%rsi
   1532e:	48 89 c7             	mov    %rax,%rdi
   15331:	e8 bd f1 ff ff       	call   144f3 <is_within_rts_range>
   15336:	84 c0                	test   %al,%al
   15338:	74 1d                	je     15357 <find_free_region+0x3f4>
   1533a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1533e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15342:	48 89 10             	mov    %rdx,(%rax)
   15345:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15349:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1534d:	48 89 10             	mov    %rdx,(%rax)
   15350:	b8 01 00 00 00       	mov    $0x1,%eax
   15355:	eb 05                	jmp    1535c <find_free_region+0x3f9>
   15357:	b8 00 00 00 00       	mov    $0x0,%eax
   1535c:	c9                   	leave  
   1535d:	c3                   	ret    

000000000001535e <find_free_region_at>:
   1535e:	f3 0f 1e fa          	endbr64 
   15362:	55                   	push   %rbp
   15363:	48 89 e5             	mov    %rsp,%rbp
   15366:	48 83 ec 30          	sub    $0x30,%rsp
   1536a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1536e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15372:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15376:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1537a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1537e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15382:	48 89 d6             	mov    %rdx,%rsi
   15385:	48 89 c7             	mov    %rax,%rdi
   15388:	e8 53 a1 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   1538d:	83 f0 01             	xor    $0x1,%eax
   15390:	84 c0                	test   %al,%al
   15392:	74 15                	je     153a9 <find_free_region_at+0x4b>
   15394:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15398:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1539f:	b8 00 00 00 00       	mov    $0x0,%eax
   153a4:	e9 08 01 00 00       	jmp    154b1 <find_free_region_at+0x153>
   153a9:	48 8d 05 d8 5c 02 00 	lea    0x25cd8(%rip),%rax        # 3b088 <g_rts_ema_root>
   153b0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   153b4:	0f 94 c0             	sete   %al
   153b7:	88 45 f7             	mov    %al,-0x9(%rbp)
   153ba:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
   153be:	74 1a                	je     153da <find_free_region_at+0x7c>
   153c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   153c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153c8:	48 89 d6             	mov    %rdx,%rsi
   153cb:	48 89 c7             	mov    %rax,%rdi
   153ce:	e8 20 f1 ff ff       	call   144f3 <is_within_rts_range>
   153d3:	83 f0 01             	xor    $0x1,%eax
   153d6:	84 c0                	test   %al,%al
   153d8:	75 25                	jne    153ff <find_free_region_at+0xa1>
   153da:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
   153de:	83 f0 01             	xor    $0x1,%eax
   153e1:	84 c0                	test   %al,%al
   153e3:	74 2f                	je     15414 <find_free_region_at+0xb6>
   153e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   153e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153ed:	48 89 d6             	mov    %rdx,%rsi
   153f0:	48 89 c7             	mov    %rax,%rdi
   153f3:	e8 9e f0 ff ff       	call   14496 <is_within_user_range>
   153f8:	83 f0 01             	xor    $0x1,%eax
   153fb:	84 c0                	test   %al,%al
   153fd:	74 15                	je     15414 <find_free_region_at+0xb6>
   153ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15403:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1540a:	b8 00 00 00 00       	mov    $0x0,%eax
   1540f:	e9 9d 00 00 00       	jmp    154b1 <find_free_region_at+0x153>
   15414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15418:	48 8b 00             	mov    (%rax),%rax
   1541b:	48 8b 40 38          	mov    0x38(%rax),%rax
   1541f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15423:	eb 4d                	jmp    15472 <find_free_region_at+0x114>
   15425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15429:	48 8b 00             	mov    (%rax),%rax
   1542c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15430:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15434:	48 01 ca             	add    %rcx,%rdx
   15437:	48 39 d0             	cmp    %rdx,%rax
   1543a:	72 12                	jb     1544e <find_free_region_at+0xf0>
   1543c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15440:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15444:	48 89 10             	mov    %rdx,(%rax)
   15447:	b8 01 00 00 00       	mov    $0x1,%eax
   1544c:	eb 63                	jmp    154b1 <find_free_region_at+0x153>
   1544e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15452:	48 8b 10             	mov    (%rax),%rdx
   15455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15459:	48 8b 40 08          	mov    0x8(%rax),%rax
   1545d:	48 01 d0             	add    %rdx,%rax
   15460:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   15464:	72 1b                	jb     15481 <find_free_region_at+0x123>
   15466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1546a:	48 8b 40 38          	mov    0x38(%rax),%rax
   1546e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15476:	48 8b 00             	mov    (%rax),%rax
   15479:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1547d:	75 a6                	jne    15425 <find_free_region_at+0xc7>
   1547f:	eb 01                	jmp    15482 <find_free_region_at+0x124>
   15481:	90                   	nop
   15482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15486:	48 8b 00             	mov    (%rax),%rax
   15489:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1548d:	75 12                	jne    154a1 <find_free_region_at+0x143>
   1548f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15493:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15497:	48 89 10             	mov    %rdx,(%rax)
   1549a:	b8 01 00 00 00       	mov    $0x1,%eax
   1549f:	eb 10                	jmp    154b1 <find_free_region_at+0x153>
   154a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   154a5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   154ac:	b8 00 00 00 00       	mov    $0x0,%eax
   154b1:	c9                   	leave  
   154b2:	c3                   	ret    

00000000000154b3 <ema_new>:
   154b3:	f3 0f 1e fa          	endbr64 
   154b7:	55                   	push   %rbp
   154b8:	48 89 e5             	mov    %rsp,%rbp
   154bb:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   154c2:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   154c6:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   154ca:	89 55 8c             	mov    %edx,-0x74(%rbp)
   154cd:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   154d1:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
   154d8:	4c 89 8d 70 ff ff ff 	mov    %r9,-0x90(%rbp)
   154df:	48 8b 45 10          	mov    0x10(%rbp),%rax
   154e3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   154ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   154f1:	00 00 
   154f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   154f7:	31 c0                	xor    %eax,%eax
   154f9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   154fd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   15501:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15505:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   15509:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1550c:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1550f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15513:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   15517:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   1551e:	00 
   1551f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   15526:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1552a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   15531:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15535:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1553c:	00 
   1553d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   15544:	00 
   15545:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1554c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   15550:	48 89 d6             	mov    %rdx,%rsi
   15553:	48 89 c7             	mov    %rax,%rdi
   15556:	e8 60 f4 ff ff       	call   149bb <insert_ema>
   1555b:	bf 48 00 00 00       	mov    $0x48,%edi
   15560:	e8 35 27 00 00       	call   17c9a <emalloc>
   15565:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   15569:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1556e:	74 64                	je     155d4 <ema_new+0x121>
   15570:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15574:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   15578:	48 89 10             	mov    %rdx,(%rax)
   1557b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1557f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15583:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15587:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1558b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1558f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   15593:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15597:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1559b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1559f:	48 89 50 28          	mov    %rdx,0x28(%rax)
   155a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   155a7:	48 89 50 30          	mov    %rdx,0x30(%rax)
   155ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   155af:	48 89 50 38          	mov    %rdx,0x38(%rax)
   155b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   155b7:	48 89 50 40          	mov    %rdx,0x40(%rax)
   155bb:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   155bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155c3:	48 89 d6             	mov    %rdx,%rsi
   155c6:	48 89 c7             	mov    %rax,%rdi
   155c9:	e8 3b f4 ff ff       	call   14a09 <replace_ema>
   155ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155d2:	eb 11                	jmp    155e5 <ema_new+0x132>
   155d4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   155d8:	48 89 c7             	mov    %rax,%rdi
   155db:	e8 7c f4 ff ff       	call   14a5c <remove_ema>
   155e0:	b8 00 00 00 00       	mov    $0x0,%eax
   155e5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   155e9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   155f0:	00 00 
   155f2:	74 05                	je     155f9 <ema_new+0x146>
   155f4:	e8 fe e1 00 00       	call   237f7 <__stack_chk_fail>
   155f9:	c9                   	leave  
   155fa:	c3                   	ret    

00000000000155fb <ema_destroy>:
   155fb:	f3 0f 1e fa          	endbr64 
   155ff:	55                   	push   %rbp
   15600:	48 89 e5             	mov    %rsp,%rbp
   15603:	48 83 ec 10          	sub    $0x10,%rsp
   15607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1560b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1560f:	48 89 c7             	mov    %rax,%rdi
   15612:	e8 45 f4 ff ff       	call   14a5c <remove_ema>
   15617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1561b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1561f:	48 85 c0             	test   %rax,%rax
   15622:	74 10                	je     15634 <ema_destroy+0x39>
   15624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15628:	48 8b 40 20          	mov    0x20(%rax),%rax
   1562c:	48 89 c7             	mov    %rax,%rdi
   1562f:	e8 dc e3 ff ff       	call   13a10 <bit_array_delete>
   15634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15638:	48 89 c7             	mov    %rax,%rdi
   1563b:	e8 45 28 00 00       	call   17e85 <efree>
   15640:	90                   	nop
   15641:	c9                   	leave  
   15642:	c3                   	ret    

0000000000015643 <eaccept_range_forward>:
   15643:	f3 0f 1e fa          	endbr64 
   15647:	55                   	push   %rbp
   15648:	48 89 e5             	mov    %rsp,%rbp
   1564b:	48 83 ec 20          	sub    $0x20,%rsp
   1564f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15653:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15657:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1565b:	eb 24                	jmp    15681 <eaccept_range_forward+0x3e>
   1565d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15665:	48 89 d6             	mov    %rdx,%rsi
   15668:	48 89 c7             	mov    %rax,%rdi
   1566b:	e8 b3 c3 01 00       	call   31a23 <do_eaccept>
   15670:	85 c0                	test   %eax,%eax
   15672:	74 05                	je     15679 <eaccept_range_forward+0x36>
   15674:	e8 22 c4 01 00       	call   31a9b <abort>
   15679:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
   15680:	00 
   15681:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15685:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15689:	72 d2                	jb     1565d <eaccept_range_forward+0x1a>
   1568b:	b8 00 00 00 00       	mov    $0x0,%eax
   15690:	c9                   	leave  
   15691:	c3                   	ret    

0000000000015692 <eaccept_range_backward>:
   15692:	f3 0f 1e fa          	endbr64 
   15696:	55                   	push   %rbp
   15697:	48 89 e5             	mov    %rsp,%rbp
   1569a:	48 83 ec 20          	sub    $0x20,%rsp
   1569e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   156a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   156aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   156ae:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   156b2:	72 1f                	jb     156d3 <eaccept_range_backward+0x41>
   156b4:	48 8d 0d 94 dd 01 00 	lea    0x1dd94(%rip),%rcx        # 3344f <__func__.1568+0xbf>
   156bb:	48 8d 15 de de 01 00 	lea    0x1dede(%rip),%rdx        # 335a0 <__func__.1973>
   156c2:	be 7a 02 00 00       	mov    $0x27a,%esi
   156c7:	48 8d 3d ec dc 01 00 	lea    0x1dcec(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   156ce:	e8 76 3b 00 00       	call   19249 <__assert>
   156d3:	48 81 6d e8 00 10 00 	subq   $0x1000,-0x18(%rbp)
   156da:	00 
   156db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   156df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156e3:	48 89 d6             	mov    %rdx,%rsi
   156e6:	48 89 c7             	mov    %rax,%rdi
   156e9:	e8 35 c3 01 00       	call   31a23 <do_eaccept>
   156ee:	85 c0                	test   %eax,%eax
   156f0:	74 05                	je     156f7 <eaccept_range_backward+0x65>
   156f2:	e8 a4 c3 01 00       	call   31a9b <abort>
   156f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156fb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   156ff:	77 d2                	ja     156d3 <eaccept_range_backward+0x41>
   15701:	b8 00 00 00 00       	mov    $0x0,%eax
   15706:	c9                   	leave  
   15707:	c3                   	ret    

0000000000015708 <do_commit>:
   15708:	f3 0f 1e fa          	endbr64 
   1570c:	55                   	push   %rbp
   1570d:	48 89 e5             	mov    %rsp,%rbp
   15710:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   15714:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1571b:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   15720:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   15725:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1572a:	89 c8                	mov    %ecx,%eax
   1572c:	88 44 24 14          	mov    %al,0x14(%rsp)
   15730:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15737:	00 00 
   15739:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   15740:	00 
   15741:	31 c0                	xor    %eax,%eax
   15743:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   15748:	b8 00 00 00 00       	mov    $0x0,%eax
   1574d:	b9 08 00 00 00       	mov    $0x8,%ecx
   15752:	48 89 d7             	mov    %rdx,%rdi
   15755:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15758:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1575d:	48 83 c8 08          	or     $0x8,%rax
   15761:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   15766:	c7 44 24 3c ff ff ff 	movl   $0xffffffff,0x3c(%rsp)
   1576d:	ff 
   1576e:	80 7c 24 14 00       	cmpb   $0x0,0x14(%rsp)
   15773:	74 28                	je     1579d <do_commit+0x95>
   15775:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1577a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1577f:	48 01 c2             	add    %rax,%rdx
   15782:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   15787:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   1578c:	48 89 ce             	mov    %rcx,%rsi
   1578f:	48 89 c7             	mov    %rax,%rdi
   15792:	e8 fb fe ff ff       	call   15692 <eaccept_range_backward>
   15797:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   1579b:	eb 26                	jmp    157c3 <do_commit+0xbb>
   1579d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   157a2:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   157a7:	48 01 c2             	add    %rax,%rdx
   157aa:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   157af:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   157b4:	48 89 ce             	mov    %rcx,%rsi
   157b7:	48 89 c7             	mov    %rax,%rdi
   157ba:	e8 84 fe ff ff       	call   15643 <eaccept_range_forward>
   157bf:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   157c3:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
   157c7:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   157ce:	00 
   157cf:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   157d6:	00 00 
   157d8:	74 05                	je     157df <do_commit+0xd7>
   157da:	e8 18 e0 00 00       	call   237f7 <__stack_chk_fail>
   157df:	c9                   	leave  
   157e0:	c3                   	ret    

00000000000157e1 <ema_do_commit>:
   157e1:	f3 0f 1e fa          	endbr64 
   157e5:	55                   	push   %rbp
   157e6:	48 89 e5             	mov    %rsp,%rbp
   157e9:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   157ed:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   157f4:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   157f9:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   157fe:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   15803:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1580a:	00 00 
   1580c:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   15813:	00 
   15814:	31 c0                	xor    %eax,%eax
   15816:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1581b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1581f:	48 85 c0             	test   %rax,%rax
   15822:	75 1f                	jne    15843 <ema_do_commit+0x62>
   15824:	48 8d 0d 30 dc 01 00 	lea    0x1dc30(%rip),%rcx        # 3345b <__func__.1568+0xcb>
   1582b:	48 8d 15 86 dd 01 00 	lea    0x1dd86(%rip),%rdx        # 335b8 <__func__.1989>
   15832:	be 97 02 00 00       	mov    $0x297,%esi
   15837:	48 8d 3d 7c db 01 00 	lea    0x1db7c(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   1583e:	e8 06 3a 00 00       	call   19249 <__assert>
   15843:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   15848:	48 8b 00             	mov    (%rax),%rax
   1584b:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   15850:	48 0f 43 44 24 40    	cmovae 0x40(%rsp),%rax
   15856:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1585b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   15860:	48 8b 10             	mov    (%rax),%rdx
   15863:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   15868:	48 8b 40 08          	mov    0x8(%rax),%rax
   1586c:	48 01 d0             	add    %rdx,%rax
   1586f:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   15874:	48 0f 46 44 24 38    	cmovbe 0x38(%rsp),%rax
   1587a:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1587f:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   15886:	00 
   15887:	b8 00 00 00 00       	mov    $0x0,%eax
   1588c:	b9 08 00 00 00       	mov    $0x8,%ecx
   15891:	48 89 d7             	mov    %rdx,%rdi
   15894:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15897:	48 c7 84 24 80 00 00 	movq   $0x20b,0x80(%rsp)
   1589e:	00 0b 02 00 00 
   158a3:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   158a8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   158ad:	e9 87 00 00 00       	jmp    15939 <ema_do_commit+0x158>
   158b2:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   158b7:	48 8b 00             	mov    (%rax),%rax
   158ba:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   158bf:	48 29 c2             	sub    %rax,%rdx
   158c2:	48 89 d0             	mov    %rdx,%rax
   158c5:	48 c1 e8 0c          	shr    $0xc,%rax
   158c9:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   158ce:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   158d3:	48 8b 40 20          	mov    0x20(%rax),%rax
   158d7:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   158dc:	48 89 d6             	mov    %rdx,%rsi
   158df:	48 89 c7             	mov    %rax,%rdi
   158e2:	e8 58 e1 ff ff       	call   13a3f <bit_array_test>
   158e7:	83 f0 01             	xor    $0x1,%eax
   158ea:	84 c0                	test   %al,%al
   158ec:	74 42                	je     15930 <ema_do_commit+0x14f>
   158ee:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   158f3:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   158fa:	00 
   158fb:	48 89 d6             	mov    %rdx,%rsi
   158fe:	48 89 c7             	mov    %rax,%rdi
   15901:	e8 1d c1 01 00       	call   31a23 <do_eaccept>
   15906:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1590a:	83 7c 24 5c 00       	cmpl   $0x0,0x5c(%rsp)
   1590f:	74 06                	je     15917 <ema_do_commit+0x136>
   15911:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   15915:	eb 37                	jmp    1594e <ema_do_commit+0x16d>
   15917:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1591c:	48 8b 40 20          	mov    0x20(%rax),%rax
   15920:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   15925:	48 89 d6             	mov    %rdx,%rsi
   15928:	48 89 c7             	mov    %rax,%rdi
   1592b:	e8 8b e4 ff ff       	call   13dbb <bit_array_set>
   15930:	48 81 44 24 60 00 10 	addq   $0x1000,0x60(%rsp)
   15937:	00 00 
   15939:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1593e:	48 3b 44 24 70       	cmp    0x70(%rsp),%rax
   15943:	0f 82 69 ff ff ff    	jb     158b2 <ema_do_commit+0xd1>
   15949:	b8 00 00 00 00       	mov    $0x0,%eax
   1594e:	48 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%rcx
   15955:	00 
   15956:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1595d:	00 00 
   1595f:	74 05                	je     15966 <ema_do_commit+0x185>
   15961:	e8 91 de 00 00       	call   237f7 <__stack_chk_fail>
   15966:	c9                   	leave  
   15967:	c3                   	ret    

0000000000015968 <ema_can_commit>:
   15968:	f3 0f 1e fa          	endbr64 
   1596c:	55                   	push   %rbp
   1596d:	48 89 e5             	mov    %rsp,%rbp
   15970:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15974:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15978:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1597c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   15980:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15984:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1598c:	48 8b 00             	mov    (%rax),%rax
   1598f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15993:	eb 7e                	jmp    15a13 <ema_can_commit+0xab>
   15995:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15999:	48 8b 00             	mov    (%rax),%rax
   1599c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   159a0:	74 0a                	je     159ac <ema_can_commit+0x44>
   159a2:	b8 16 00 00 00       	mov    $0x16,%eax
   159a7:	e9 8b 00 00 00       	jmp    15a37 <ema_can_commit+0xcf>
   159ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159b0:	48 8b 40 18          	mov    0x18(%rax),%rax
   159b4:	83 e0 02             	and    $0x2,%eax
   159b7:	48 85 c0             	test   %rax,%rax
   159ba:	75 07                	jne    159c3 <ema_can_commit+0x5b>
   159bc:	b8 0d 00 00 00       	mov    $0xd,%eax
   159c1:	eb 74                	jmp    15a37 <ema_can_commit+0xcf>
   159c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159c7:	48 8b 40 18          	mov    0x18(%rax),%rax
   159cb:	25 00 02 00 00       	and    $0x200,%eax
   159d0:	48 85 c0             	test   %rax,%rax
   159d3:	75 07                	jne    159dc <ema_can_commit+0x74>
   159d5:	b8 0d 00 00 00       	mov    $0xd,%eax
   159da:	eb 5b                	jmp    15a37 <ema_can_commit+0xcf>
   159dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159e0:	8b 40 10             	mov    0x10(%rax),%eax
   159e3:	83 e0 01             	and    $0x1,%eax
   159e6:	85 c0                	test   %eax,%eax
   159e8:	74 07                	je     159f1 <ema_can_commit+0x89>
   159ea:	b8 0d 00 00 00       	mov    $0xd,%eax
   159ef:	eb 46                	jmp    15a37 <ema_can_commit+0xcf>
   159f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159f5:	48 8b 10             	mov    (%rax),%rdx
   159f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159fc:	48 8b 40 08          	mov    0x8(%rax),%rax
   15a00:	48 01 d0             	add    %rdx,%rax
   15a03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15a07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a0b:	48 8b 40 38          	mov    0x38(%rax),%rax
   15a0f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a17:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15a1b:	0f 85 74 ff ff ff    	jne    15995 <ema_can_commit+0x2d>
   15a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a25:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   15a29:	73 07                	jae    15a32 <ema_can_commit+0xca>
   15a2b:	b8 16 00 00 00       	mov    $0x16,%eax
   15a30:	eb 05                	jmp    15a37 <ema_can_commit+0xcf>
   15a32:	b8 00 00 00 00       	mov    $0x0,%eax
   15a37:	5d                   	pop    %rbp
   15a38:	c3                   	ret    

0000000000015a39 <ema_do_commit_loop>:
   15a39:	f3 0f 1e fa          	endbr64 
   15a3d:	55                   	push   %rbp
   15a3e:	48 89 e5             	mov    %rsp,%rbp
   15a41:	48 83 ec 40          	sub    $0x40,%rsp
   15a45:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15a49:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15a4d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15a51:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   15a55:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15a59:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15a5d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   15a61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a65:	48 89 c7             	mov    %rax,%rdi
   15a68:	e8 fb fe ff ff       	call   15968 <ema_can_commit>
   15a6d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15a70:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15a74:	74 05                	je     15a7b <ema_do_commit_loop+0x42>
   15a76:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15a79:	eb 58                	jmp    15ad3 <ema_do_commit_loop+0x9a>
   15a7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15a83:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   15a8a:	00 
   15a8b:	eb 39                	jmp    15ac6 <ema_do_commit_loop+0x8d>
   15a8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a91:	48 8b 40 38          	mov    0x38(%rax),%rax
   15a95:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15a99:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15a9d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   15aa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15aa5:	48 89 ce             	mov    %rcx,%rsi
   15aa8:	48 89 c7             	mov    %rax,%rdi
   15aab:	e8 31 fd ff ff       	call   157e1 <ema_do_commit>
   15ab0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15ab3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15ab7:	74 05                	je     15abe <ema_do_commit_loop+0x85>
   15ab9:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15abc:	eb 15                	jmp    15ad3 <ema_do_commit_loop+0x9a>
   15abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ac2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15ac6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15aca:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   15ace:	75 bd                	jne    15a8d <ema_do_commit_loop+0x54>
   15ad0:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15ad3:	c9                   	leave  
   15ad4:	c3                   	ret    

0000000000015ad5 <ema_do_uncommit_real>:
   15ad5:	f3 0f 1e fa          	endbr64 
   15ad9:	55                   	push   %rbp
   15ada:	48 89 e5             	mov    %rsp,%rbp
   15add:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   15ae1:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   15ae8:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   15aed:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   15af2:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   15af7:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   15afb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15b02:	00 00 
   15b04:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   15b0b:	00 
   15b0c:	31 c0                	xor    %eax,%eax
   15b0e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15b13:	48 8b 40 18          	mov    0x18(%rax),%rax
   15b17:	25 00 ff 00 00       	and    $0xff00,%eax
   15b1c:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
   15b20:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15b25:	8b 40 10             	mov    0x10(%rax),%eax
   15b28:	25 ff 00 00 00       	and    $0xff,%eax
   15b2d:	89 44 24 50          	mov    %eax,0x50(%rsp)
   15b31:	8b 44 24 50          	mov    0x50(%rsp),%eax
   15b35:	83 e0 01             	and    $0x1,%eax
   15b38:	85 c0                	test   %eax,%eax
   15b3a:	74 0a                	je     15b46 <ema_do_uncommit_real+0x71>
   15b3c:	b8 00 00 00 00       	mov    $0x0,%eax
   15b41:	e9 5d 02 00 00       	jmp    15da3 <ema_do_uncommit_real+0x2ce>
   15b46:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15b4b:	48 8b 40 20          	mov    0x20(%rax),%rax
   15b4f:	48 85 c0             	test   %rax,%rax
   15b52:	75 1f                	jne    15b73 <ema_do_uncommit_real+0x9e>
   15b54:	48 8d 0d 00 d9 01 00 	lea    0x1d900(%rip),%rcx        # 3345b <__func__.1568+0xcb>
   15b5b:	48 8d 15 6e da 01 00 	lea    0x1da6e(%rip),%rdx        # 335d0 <__func__.2030>
   15b62:	be e8 02 00 00       	mov    $0x2e8,%esi
   15b67:	48 8d 3d 4c d8 01 00 	lea    0x1d84c(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   15b6e:	e8 d6 36 00 00       	call   19249 <__assert>
   15b73:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   15b7a:	00 
   15b7b:	b8 00 00 00 00       	mov    $0x0,%eax
   15b80:	b9 08 00 00 00       	mov    $0x8,%ecx
   15b85:	48 89 d7             	mov    %rdx,%rdi
   15b88:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   15b8b:	48 c7 84 24 80 00 00 	movq   $0x410,0x80(%rsp)
   15b92:	00 10 04 00 00 
   15b97:	e9 ef 01 00 00       	jmp    15d8b <ema_do_uncommit_real+0x2b6>
   15b9c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   15ba1:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   15ba6:	eb 42                	jmp    15bea <ema_do_uncommit_real+0x115>
   15ba8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15bad:	48 8b 00             	mov    (%rax),%rax
   15bb0:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   15bb5:	48 29 c2             	sub    %rax,%rdx
   15bb8:	48 89 d0             	mov    %rdx,%rax
   15bbb:	48 c1 e8 0c          	shr    $0xc,%rax
   15bbf:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   15bc4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15bc9:	48 8b 40 20          	mov    0x20(%rax),%rax
   15bcd:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   15bd2:	48 89 d6             	mov    %rdx,%rsi
   15bd5:	48 89 c7             	mov    %rax,%rdi
   15bd8:	e8 62 de ff ff       	call   13a3f <bit_array_test>
   15bdd:	84 c0                	test   %al,%al
   15bdf:	75 17                	jne    15bf8 <ema_do_uncommit_real+0x123>
   15be1:	48 81 44 24 58 00 10 	addq   $0x1000,0x58(%rsp)
   15be8:	00 00 
   15bea:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15bef:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   15bf4:	72 b2                	jb     15ba8 <ema_do_uncommit_real+0xd3>
   15bf6:	eb 01                	jmp    15bf9 <ema_do_uncommit_real+0x124>
   15bf8:	90                   	nop
   15bf9:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15bfe:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   15c03:	0f 84 94 01 00 00    	je     15d9d <ema_do_uncommit_real+0x2c8>
   15c09:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15c0e:	48 05 00 10 00 00    	add    $0x1000,%rax
   15c14:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   15c19:	eb 42                	jmp    15c5d <ema_do_uncommit_real+0x188>
   15c1b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15c20:	48 8b 00             	mov    (%rax),%rax
   15c23:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   15c28:	48 29 c2             	sub    %rax,%rdx
   15c2b:	48 89 d0             	mov    %rdx,%rax
   15c2e:	48 c1 e8 0c          	shr    $0xc,%rax
   15c32:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   15c37:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15c3c:	48 8b 40 20          	mov    0x20(%rax),%rax
   15c40:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   15c45:	48 89 d6             	mov    %rdx,%rsi
   15c48:	48 89 c7             	mov    %rax,%rdi
   15c4b:	e8 ef dd ff ff       	call   13a3f <bit_array_test>
   15c50:	84 c0                	test   %al,%al
   15c52:	74 17                	je     15c6b <ema_do_uncommit_real+0x196>
   15c54:	48 81 44 24 60 00 10 	addq   $0x1000,0x60(%rsp)
   15c5b:	00 00 
   15c5d:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15c62:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   15c67:	72 b2                	jb     15c1b <ema_do_uncommit_real+0x146>
   15c69:	eb 01                	jmp    15c6c <ema_do_uncommit_real+0x197>
   15c6b:	90                   	nop
   15c6c:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15c71:	48 3b 44 24 58       	cmp    0x58(%rsp),%rax
   15c76:	77 1f                	ja     15c97 <ema_do_uncommit_real+0x1c2>
   15c78:	48 8d 0d ee d7 01 00 	lea    0x1d7ee(%rip),%rcx        # 3346d <__func__.1568+0xdd>
   15c7f:	48 8d 15 4a d9 01 00 	lea    0x1d94a(%rip),%rdx        # 335d0 <__func__.2030>
   15c86:	be 09 03 00 00       	mov    $0x309,%esi
   15c8b:	48 8d 3d 28 d7 01 00 	lea    0x1d728(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   15c92:	e8 b2 35 00 00       	call   19249 <__assert>
   15c97:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15c9c:	48 2b 44 24 58       	sub    0x58(%rsp),%rax
   15ca1:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   15ca6:	8b 44 24 24          	mov    0x24(%rsp),%eax
   15caa:	80 cc 04             	or     $0x4,%ah
   15cad:	89 c1                	mov    %eax,%ecx
   15caf:	8b 44 24 24          	mov    0x24(%rsp),%eax
   15cb3:	0b 44 24 4c          	or     0x4c(%rsp),%eax
   15cb7:	89 c2                	mov    %eax,%edx
   15cb9:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   15cbe:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15cc3:	48 89 c7             	mov    %rax,%rdi
   15cc6:	e8 a9 95 ff ff       	call   f274 <sgx_mm_modify_ocall>
   15ccb:	89 44 24 54          	mov    %eax,0x54(%rsp)
   15ccf:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   15cd4:	74 0a                	je     15ce0 <ema_do_uncommit_real+0x20b>
   15cd6:	b8 0e 00 00 00       	mov    $0xe,%eax
   15cdb:	e9 c3 00 00 00       	jmp    15da3 <ema_do_uncommit_real+0x2ce>
   15ce0:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   15ce5:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   15cea:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   15cf1:	00 
   15cf2:	48 89 ce             	mov    %rcx,%rsi
   15cf5:	48 89 c7             	mov    %rax,%rdi
   15cf8:	e8 46 f9 ff ff       	call   15643 <eaccept_range_forward>
   15cfd:	89 44 24 54          	mov    %eax,0x54(%rsp)
   15d01:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   15d06:	74 09                	je     15d11 <ema_do_uncommit_real+0x23c>
   15d08:	8b 44 24 54          	mov    0x54(%rsp),%eax
   15d0c:	e9 92 00 00 00       	jmp    15da3 <ema_do_uncommit_real+0x2ce>
   15d11:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   15d16:	48 c1 e8 0c          	shr    $0xc,%rax
   15d1a:	48 89 c2             	mov    %rax,%rdx
   15d1d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15d22:	48 8b 00             	mov    (%rax),%rax
   15d25:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   15d2a:	48 29 c1             	sub    %rax,%rcx
   15d2d:	48 89 c8             	mov    %rcx,%rax
   15d30:	48 c1 e8 0c          	shr    $0xc,%rax
   15d34:	48 89 c1             	mov    %rax,%rcx
   15d37:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15d3c:	48 8b 40 20          	mov    0x20(%rax),%rax
   15d40:	48 89 ce             	mov    %rcx,%rsi
   15d43:	48 89 c7             	mov    %rax,%rdi
   15d46:	e8 53 e2 ff ff       	call   13f9e <bit_array_reset_range>
   15d4b:	8b 44 24 24          	mov    0x24(%rsp),%eax
   15d4f:	80 cc 04             	or     $0x4,%ah
   15d52:	89 c1                	mov    %eax,%ecx
   15d54:	8b 44 24 24          	mov    0x24(%rsp),%eax
   15d58:	80 cc 04             	or     $0x4,%ah
   15d5b:	89 c2                	mov    %eax,%edx
   15d5d:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   15d62:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15d67:	48 89 c7             	mov    %rax,%rdi
   15d6a:	e8 05 95 ff ff       	call   f274 <sgx_mm_modify_ocall>
   15d6f:	89 44 24 54          	mov    %eax,0x54(%rsp)
   15d73:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   15d78:	74 07                	je     15d81 <ema_do_uncommit_real+0x2ac>
   15d7a:	b8 0e 00 00 00       	mov    $0xe,%eax
   15d7f:	eb 22                	jmp    15da3 <ema_do_uncommit_real+0x2ce>
   15d81:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15d86:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   15d8b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   15d90:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   15d95:	0f 82 01 fe ff ff    	jb     15b9c <ema_do_uncommit_real+0xc7>
   15d9b:	eb 01                	jmp    15d9e <ema_do_uncommit_real+0x2c9>
   15d9d:	90                   	nop
   15d9e:	b8 00 00 00 00       	mov    $0x0,%eax
   15da3:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
   15daa:	00 
   15dab:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   15db2:	00 00 
   15db4:	74 05                	je     15dbb <ema_do_uncommit_real+0x2e6>
   15db6:	e8 3c da 00 00       	call   237f7 <__stack_chk_fail>
   15dbb:	c9                   	leave  
   15dbc:	c3                   	ret    

0000000000015dbd <ema_do_uncommit>:
   15dbd:	f3 0f 1e fa          	endbr64 
   15dc1:	55                   	push   %rbp
   15dc2:	48 89 e5             	mov    %rsp,%rbp
   15dc5:	48 83 ec 40          	sub    $0x40,%rsp
   15dc9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15dcd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15dd1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15dd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dd9:	48 8b 00             	mov    (%rax),%rax
   15ddc:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   15de0:	48 0f 43 45 d0       	cmovae -0x30(%rbp),%rax
   15de5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ded:	48 8b 10             	mov    (%rax),%rdx
   15df0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15df4:	48 8b 40 08          	mov    0x8(%rax),%rax
   15df8:	48 01 d0             	add    %rdx,%rax
   15dfb:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   15dff:	48 0f 46 45 c8       	cmovbe -0x38(%rbp),%rax
   15e04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15e08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e0c:	48 8b 40 18          	mov    0x18(%rax),%rax
   15e10:	83 e0 07             	and    $0x7,%eax
   15e13:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15e16:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15e1a:	75 19                	jne    15e35 <ema_do_uncommit+0x78>
   15e1c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e20:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   15e24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e28:	b9 01 00 00 00       	mov    $0x1,%ecx
   15e2d:	48 89 c7             	mov    %rax,%rdi
   15e30:	e8 af 05 00 00       	call   163e4 <ema_modify_permissions>
   15e35:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   15e38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e3c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15e40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e44:	48 89 c7             	mov    %rax,%rdi
   15e47:	e8 89 fc ff ff       	call   15ad5 <ema_do_uncommit_real>
   15e4c:	c9                   	leave  
   15e4d:	c3                   	ret    

0000000000015e4e <ema_can_uncommit>:
   15e4e:	f3 0f 1e fa          	endbr64 
   15e52:	55                   	push   %rbp
   15e53:	48 89 e5             	mov    %rsp,%rbp
   15e56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15e5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15e5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15e62:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   15e66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15e6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e72:	48 8b 00             	mov    (%rax),%rax
   15e75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15e79:	eb 4b                	jmp    15ec6 <ema_can_uncommit+0x78>
   15e7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e7f:	48 8b 00             	mov    (%rax),%rax
   15e82:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   15e86:	74 07                	je     15e8f <ema_can_uncommit+0x41>
   15e88:	b8 16 00 00 00       	mov    $0x16,%eax
   15e8d:	eb 57                	jmp    15ee6 <ema_can_uncommit+0x98>
   15e8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e93:	8b 40 10             	mov    0x10(%rax),%eax
   15e96:	83 e0 01             	and    $0x1,%eax
   15e99:	85 c0                	test   %eax,%eax
   15e9b:	74 07                	je     15ea4 <ema_can_uncommit+0x56>
   15e9d:	b8 0d 00 00 00       	mov    $0xd,%eax
   15ea2:	eb 42                	jmp    15ee6 <ema_can_uncommit+0x98>
   15ea4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ea8:	48 8b 10             	mov    (%rax),%rdx
   15eab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15eaf:	48 8b 40 08          	mov    0x8(%rax),%rax
   15eb3:	48 01 d0             	add    %rdx,%rax
   15eb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15eba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ebe:	48 8b 40 38          	mov    0x38(%rax),%rax
   15ec2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15ec6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15eca:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15ece:	75 ab                	jne    15e7b <ema_can_uncommit+0x2d>
   15ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ed4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   15ed8:	73 07                	jae    15ee1 <ema_can_uncommit+0x93>
   15eda:	b8 16 00 00 00       	mov    $0x16,%eax
   15edf:	eb 05                	jmp    15ee6 <ema_can_uncommit+0x98>
   15ee1:	b8 00 00 00 00       	mov    $0x0,%eax
   15ee6:	5d                   	pop    %rbp
   15ee7:	c3                   	ret    

0000000000015ee8 <ema_do_uncommit_loop>:
   15ee8:	f3 0f 1e fa          	endbr64 
   15eec:	55                   	push   %rbp
   15eed:	48 89 e5             	mov    %rsp,%rbp
   15ef0:	48 83 ec 40          	sub    $0x40,%rsp
   15ef4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15ef8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15efc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15f00:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   15f04:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15f08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15f0c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   15f10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f14:	48 89 c7             	mov    %rax,%rdi
   15f17:	e8 32 ff ff ff       	call   15e4e <ema_can_uncommit>
   15f1c:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15f1f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15f23:	74 05                	je     15f2a <ema_do_uncommit_loop+0x42>
   15f25:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15f28:	eb 58                	jmp    15f82 <ema_do_uncommit_loop+0x9a>
   15f2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f2e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15f32:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   15f39:	00 
   15f3a:	eb 39                	jmp    15f75 <ema_do_uncommit_loop+0x8d>
   15f3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f40:	48 8b 40 38          	mov    0x38(%rax),%rax
   15f44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15f48:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15f4c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   15f50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f54:	48 89 ce             	mov    %rcx,%rsi
   15f57:	48 89 c7             	mov    %rax,%rdi
   15f5a:	e8 5e fe ff ff       	call   15dbd <ema_do_uncommit>
   15f5f:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15f62:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15f66:	74 05                	je     15f6d <ema_do_uncommit_loop+0x85>
   15f68:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15f6b:	eb 15                	jmp    15f82 <ema_do_uncommit_loop+0x9a>
   15f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f71:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15f75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f79:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   15f7d:	75 bd                	jne    15f3c <ema_do_uncommit_loop+0x54>
   15f7f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15f82:	c9                   	leave  
   15f83:	c3                   	ret    

0000000000015f84 <ema_do_dealloc>:
   15f84:	f3 0f 1e fa          	endbr64 
   15f88:	55                   	push   %rbp
   15f89:	48 89 e5             	mov    %rsp,%rbp
   15f8c:	48 83 ec 50          	sub    $0x50,%rsp
   15f90:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15f94:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15f98:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   15f9c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15fa3:	00 00 
   15fa5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15fa9:	31 c0                	xor    %eax,%eax
   15fab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15faf:	8b 40 10             	mov    0x10(%rax),%eax
   15fb2:	25 ff 00 00 00       	and    $0xff,%eax
   15fb7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15fba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15fbe:	48 8b 00             	mov    (%rax),%rax
   15fc1:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   15fc5:	48 0f 43 45 c0       	cmovae -0x40(%rbp),%rax
   15fca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15fce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15fd2:	48 8b 10             	mov    (%rax),%rdx
   15fd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15fd9:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fdd:	48 01 d0             	add    %rdx,%rax
   15fe0:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   15fe4:	48 0f 46 45 b8       	cmovbe -0x48(%rbp),%rax
   15fe9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15fed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ff1:	48 8b 40 18          	mov    0x18(%rax),%rax
   15ff5:	83 e0 07             	and    $0x7,%eax
   15ff8:	89 45 d8             	mov    %eax,-0x28(%rbp)
   15ffb:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16002:	00 
   16003:	c7 45 dc 0e 00 00 00 	movl   $0xe,-0x24(%rbp)
   1600a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1600d:	83 e0 01             	and    $0x1,%eax
   16010:	85 c0                	test   %eax,%eax
   16012:	75 75                	jne    16089 <ema_do_dealloc+0x105>
   16014:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16018:	48 8b 40 20          	mov    0x20(%rax),%rax
   1601c:	48 85 c0             	test   %rax,%rax
   1601f:	75 1f                	jne    16040 <ema_do_dealloc+0xbc>
   16021:	48 8d 0d 33 d4 01 00 	lea    0x1d433(%rip),%rcx        # 3345b <__func__.1568+0xcb>
   16028:	48 8d 15 b9 d5 01 00 	lea    0x1d5b9(%rip),%rdx        # 335e8 <__func__.2090>
   1602f:	be 64 03 00 00       	mov    $0x364,%esi
   16034:	48 8d 3d 7f d3 01 00 	lea    0x1d37f(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   1603b:	e8 09 32 00 00       	call   19249 <__assert>
   16040:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   16044:	75 19                	jne    1605f <ema_do_dealloc+0xdb>
   16046:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1604a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1604e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16052:	b9 01 00 00 00       	mov    $0x1,%ecx
   16057:	48 89 c7             	mov    %rax,%rdi
   1605a:	e8 85 03 00 00       	call   163e4 <ema_modify_permissions>
   1605f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16063:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   16067:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1606b:	b9 00 00 00 00       	mov    $0x0,%ecx
   16070:	48 89 c7             	mov    %rax,%rdi
   16073:	e8 5d fa ff ff       	call   15ad5 <ema_do_uncommit_real>
   16078:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1607b:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1607f:	74 0b                	je     1608c <ema_do_dealloc+0x108>
   16081:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16084:	e9 f9 00 00 00       	jmp    16182 <ema_do_dealloc+0x1fe>
   16089:	90                   	nop
   1608a:	eb 01                	jmp    1608d <ema_do_dealloc+0x109>
   1608c:	90                   	nop
   1608d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16091:	48 8b 00             	mov    (%rax),%rax
   16094:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   16098:	76 5d                	jbe    160f7 <ema_do_dealloc+0x173>
   1609a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1609e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   160a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   160a6:	48 89 d1             	mov    %rdx,%rcx
   160a9:	ba 00 00 00 00       	mov    $0x0,%edx
   160ae:	48 89 c7             	mov    %rax,%rdi
   160b1:	e8 3b eb ff ff       	call   14bf1 <ema_split>
   160b6:	89 45 dc             	mov    %eax,-0x24(%rbp)
   160b9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   160bd:	74 08                	je     160c7 <ema_do_dealloc+0x143>
   160bf:	8b 45 dc             	mov    -0x24(%rbp),%eax
   160c2:	e9 bb 00 00 00       	jmp    16182 <ema_do_dealloc+0x1fe>
   160c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160cb:	48 85 c0             	test   %rax,%rax
   160ce:	75 1f                	jne    160ef <ema_do_dealloc+0x16b>
   160d0:	48 8d 0d ae d3 01 00 	lea    0x1d3ae(%rip),%rcx        # 33485 <__func__.1568+0xf5>
   160d7:	48 8d 15 0a d5 01 00 	lea    0x1d50a(%rip),%rdx        # 335e8 <__func__.2090>
   160de:	be 71 03 00 00       	mov    $0x371,%esi
   160e3:	48 8d 3d d0 d2 01 00 	lea    0x1d2d0(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   160ea:	e8 5a 31 00 00       	call   19249 <__assert>
   160ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160f3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   160f7:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   160fe:	00 
   160ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16103:	48 8b 10             	mov    (%rax),%rdx
   16106:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1610a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1610e:	48 01 d0             	add    %rdx,%rax
   16111:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   16115:	73 5a                	jae    16171 <ema_do_dealloc+0x1ed>
   16117:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1611b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1611f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16123:	48 89 d1             	mov    %rdx,%rcx
   16126:	ba 01 00 00 00       	mov    $0x1,%edx
   1612b:	48 89 c7             	mov    %rax,%rdi
   1612e:	e8 be ea ff ff       	call   14bf1 <ema_split>
   16133:	89 45 dc             	mov    %eax,-0x24(%rbp)
   16136:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1613a:	74 05                	je     16141 <ema_do_dealloc+0x1bd>
   1613c:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1613f:	eb 41                	jmp    16182 <ema_do_dealloc+0x1fe>
   16141:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16145:	48 85 c0             	test   %rax,%rax
   16148:	75 1f                	jne    16169 <ema_do_dealloc+0x1e5>
   1614a:	48 8d 0d 34 d3 01 00 	lea    0x1d334(%rip),%rcx        # 33485 <__func__.1568+0xf5>
   16151:	48 8d 15 90 d4 01 00 	lea    0x1d490(%rip),%rdx        # 335e8 <__func__.2090>
   16158:	be 7a 03 00 00       	mov    $0x37a,%esi
   1615d:	48 8d 3d 56 d2 01 00 	lea    0x1d256(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16164:	e8 e0 30 00 00       	call   19249 <__assert>
   16169:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1616d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   16171:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16175:	48 89 c7             	mov    %rax,%rdi
   16178:	e8 7e f4 ff ff       	call   155fb <ema_destroy>
   1617d:	b8 00 00 00 00       	mov    $0x0,%eax
   16182:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   16186:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1618d:	00 00 
   1618f:	74 05                	je     16196 <ema_do_dealloc+0x212>
   16191:	e8 61 d6 00 00       	call   237f7 <__stack_chk_fail>
   16196:	c9                   	leave  
   16197:	c3                   	ret    

0000000000016198 <ema_do_dealloc_loop>:
   16198:	f3 0f 1e fa          	endbr64 
   1619c:	55                   	push   %rbp
   1619d:	48 89 e5             	mov    %rsp,%rbp
   161a0:	48 83 ec 40          	sub    $0x40,%rsp
   161a4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   161a8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   161ac:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   161b0:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   161b4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   161bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161bf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   161c3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   161ca:	00 
   161cb:	eb 39                	jmp    16206 <ema_do_dealloc_loop+0x6e>
   161cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161d1:	48 8b 40 38          	mov    0x38(%rax),%rax
   161d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   161d9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   161dd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   161e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161e5:	48 89 ce             	mov    %rcx,%rsi
   161e8:	48 89 c7             	mov    %rax,%rdi
   161eb:	e8 94 fd ff ff       	call   15f84 <ema_do_dealloc>
   161f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   161f3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   161f7:	74 05                	je     161fe <ema_do_dealloc_loop+0x66>
   161f9:	8b 45 ec             	mov    -0x14(%rbp),%eax
   161fc:	eb 15                	jmp    16213 <ema_do_dealloc_loop+0x7b>
   161fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16202:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16206:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1620a:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1620e:	75 bd                	jne    161cd <ema_do_dealloc_loop+0x35>
   16210:	8b 45 ec             	mov    -0x14(%rbp),%eax
   16213:	c9                   	leave  
   16214:	c3                   	ret    

0000000000016215 <ema_change_to_tcs>:
   16215:	f3 0f 1e fa          	endbr64 
   16219:	55                   	push   %rbp
   1621a:	48 89 e5             	mov    %rsp,%rbp
   1621d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   16221:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   16228:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1622d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   16232:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16239:	00 00 
   1623b:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   16242:	00 
   16243:	31 c0                	xor    %eax,%eax
   16245:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1624a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1624e:	83 e0 07             	and    $0x7,%eax
   16251:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   16255:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1625a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1625e:	25 00 ff 00 00       	and    $0xff00,%eax
   16263:	89 44 24 30          	mov    %eax,0x30(%rsp)
   16267:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1626c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16271:	48 89 d6             	mov    %rdx,%rsi
   16274:	48 89 c7             	mov    %rax,%rdi
   16277:	e8 5b e6 ff ff       	call   148d7 <ema_page_committed>
   1627c:	83 f0 01             	xor    $0x1,%eax
   1627f:	84 c0                	test   %al,%al
   16281:	74 0a                	je     1628d <ema_change_to_tcs+0x78>
   16283:	b8 0d 00 00 00       	mov    $0xd,%eax
   16288:	e9 3d 01 00 00       	jmp    163ca <ema_change_to_tcs+0x1b5>
   1628d:	81 7c 24 30 00 01 00 	cmpl   $0x100,0x30(%rsp)
   16294:	00 
   16295:	75 0a                	jne    162a1 <ema_change_to_tcs+0x8c>
   16297:	b8 00 00 00 00       	mov    $0x0,%eax
   1629c:	e9 29 01 00 00       	jmp    163ca <ema_change_to_tcs+0x1b5>
   162a1:	83 7c 24 2c 03       	cmpl   $0x3,0x2c(%rsp)
   162a6:	74 0a                	je     162b2 <ema_change_to_tcs+0x9d>
   162a8:	b8 0d 00 00 00       	mov    $0xd,%eax
   162ad:	e9 18 01 00 00       	jmp    163ca <ema_change_to_tcs+0x1b5>
   162b2:	81 7c 24 30 00 02 00 	cmpl   $0x200,0x30(%rsp)
   162b9:	00 
   162ba:	74 0a                	je     162c6 <ema_change_to_tcs+0xb1>
   162bc:	b8 0d 00 00 00       	mov    $0xd,%eax
   162c1:	e9 04 01 00 00       	jmp    163ca <ema_change_to_tcs+0x1b5>
   162c6:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   162ca:	80 cc 01             	or     $0x1,%ah
   162cd:	89 c1                	mov    %eax,%ecx
   162cf:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   162d3:	0b 44 24 30          	or     0x30(%rsp),%eax
   162d7:	89 c2                	mov    %eax,%edx
   162d9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   162de:	be 00 10 00 00       	mov    $0x1000,%esi
   162e3:	48 89 c7             	mov    %rax,%rdi
   162e6:	e8 89 8f ff ff       	call   f274 <sgx_mm_modify_ocall>
   162eb:	89 44 24 34          	mov    %eax,0x34(%rsp)
   162ef:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   162f4:	74 0a                	je     16300 <ema_change_to_tcs+0xeb>
   162f6:	b8 0e 00 00 00       	mov    $0xe,%eax
   162fb:	e9 ca 00 00 00       	jmp    163ca <ema_change_to_tcs+0x1b5>
   16300:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   16305:	b8 00 00 00 00       	mov    $0x0,%eax
   1630a:	b9 08 00 00 00       	mov    $0x8,%ecx
   1630f:	48 89 d7             	mov    %rdx,%rdi
   16312:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16315:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
   1631c:	00 00 
   1631e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   16323:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   16328:	48 89 d6             	mov    %rdx,%rsi
   1632b:	48 89 c7             	mov    %rax,%rdi
   1632e:	e8 f0 b6 01 00       	call   31a23 <do_eaccept>
   16333:	85 c0                	test   %eax,%eax
   16335:	74 05                	je     1633c <ema_change_to_tcs+0x127>
   16337:	e8 5f b7 01 00       	call   31a9b <abort>
   1633c:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   16343:	00 00 
   16345:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1634a:	48 8d b8 00 10 00 00 	lea    0x1000(%rax),%rdi
   16351:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   16356:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1635b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16360:	48 89 d1             	mov    %rdx,%rcx
   16363:	48 89 fa             	mov    %rdi,%rdx
   16366:	48 89 c7             	mov    %rax,%rdi
   16369:	e8 b0 ea ff ff       	call   14e1e <ema_split_ex>
   1636e:	89 44 24 34          	mov    %eax,0x34(%rsp)
   16372:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   16377:	74 06                	je     1637f <ema_change_to_tcs+0x16a>
   16379:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1637d:	eb 4b                	jmp    163ca <ema_change_to_tcs+0x1b5>
   1637f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   16384:	48 85 c0             	test   %rax,%rax
   16387:	75 1f                	jne    163a8 <ema_change_to_tcs+0x193>
   16389:	48 8d 0d fe d0 01 00 	lea    0x1d0fe(%rip),%rcx        # 3348e <__func__.1568+0xfe>
   16390:	48 8d 15 69 d2 01 00 	lea    0x1d269(%rip),%rdx        # 33600 <__func__.2112>
   16397:	be ba 03 00 00       	mov    $0x3ba,%esi
   1639c:	48 8d 3d 17 d0 01 00 	lea    0x1d017(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   163a3:	e8 a1 2e 00 00       	call   19249 <__assert>
   163a8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   163ad:	48 8b 40 18          	mov    0x18(%rax),%rax
   163b1:	48 25 f8 00 ff ff    	and    $0xffffffffffff00f8,%rax
   163b7:	48 89 c2             	mov    %rax,%rdx
   163ba:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   163bf:	80 ce 01             	or     $0x1,%dh
   163c2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   163c6:	8b 44 24 34          	mov    0x34(%rsp),%eax
   163ca:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
   163d1:	00 
   163d2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   163d9:	00 00 
   163db:	74 05                	je     163e2 <ema_change_to_tcs+0x1cd>
   163dd:	e8 15 d4 00 00       	call   237f7 <__stack_chk_fail>
   163e2:	c9                   	leave  
   163e3:	c3                   	ret    

00000000000163e4 <ema_modify_permissions>:
   163e4:	f3 0f 1e fa          	endbr64 
   163e8:	55                   	push   %rbp
   163e9:	48 89 e5             	mov    %rsp,%rbp
   163ec:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   163f0:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   163f7:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   163fc:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   16401:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   16406:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
   1640a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16411:	00 00 
   16413:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   1641a:	00 
   1641b:	31 c0                	xor    %eax,%eax
   1641d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16422:	48 8b 40 18          	mov    0x18(%rax),%rax
   16426:	83 e0 07             	and    $0x7,%eax
   16429:	89 44 24 58          	mov    %eax,0x58(%rsp)
   1642d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16432:	48 8b 40 18          	mov    0x18(%rax),%rax
   16436:	25 00 ff 00 00       	and    $0xff00,%eax
   1643b:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1643f:	8b 44 24 58          	mov    0x58(%rsp),%eax
   16443:	3b 44 24 34          	cmp    0x34(%rsp),%eax
   16447:	75 0a                	jne    16453 <ema_modify_permissions+0x6f>
   16449:	b8 00 00 00 00       	mov    $0x0,%eax
   1644e:	e9 93 02 00 00       	jmp    166e6 <ema_modify_permissions+0x302>
   16453:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16458:	48 8b 00             	mov    (%rax),%rax
   1645b:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   16460:	48 0f 43 44 24 40    	cmovae 0x40(%rsp),%rax
   16466:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1646b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16470:	48 8b 10             	mov    (%rax),%rdx
   16473:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16478:	48 8b 40 08          	mov    0x8(%rax),%rax
   1647c:	48 01 d0             	add    %rdx,%rax
   1647f:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   16484:	48 0f 46 44 24 38    	cmovbe 0x38(%rsp),%rax
   1648a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1648f:	8b 44 24 34          	mov    0x34(%rsp),%eax
   16493:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   16497:	89 c1                	mov    %eax,%ecx
   16499:	8b 44 24 58          	mov    0x58(%rsp),%eax
   1649d:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   164a1:	89 c2                	mov    %eax,%edx
   164a3:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   164a8:	48 2b 44 24 70       	sub    0x70(%rsp),%rax
   164ad:	48 89 c6             	mov    %rax,%rsi
   164b0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   164b5:	48 89 c7             	mov    %rax,%rdi
   164b8:	e8 b7 8d ff ff       	call   f274 <sgx_mm_modify_ocall>
   164bd:	89 44 24 54          	mov    %eax,0x54(%rsp)
   164c1:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   164c6:	74 0a                	je     164d2 <ema_modify_permissions+0xee>
   164c8:	b8 0e 00 00 00       	mov    $0xe,%eax
   164cd:	e9 14 02 00 00       	jmp    166e6 <ema_modify_permissions+0x302>
   164d2:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   164d9:	00 
   164da:	b8 00 00 00 00       	mov    $0x0,%eax
   164df:	b9 08 00 00 00       	mov    $0x8,%ecx
   164e4:	48 89 d7             	mov    %rdx,%rdi
   164e7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   164ea:	8b 44 24 34          	mov    0x34(%rsp),%eax
   164ee:	0d 20 02 00 00       	or     $0x220,%eax
   164f3:	48 98                	cltq   
   164f5:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   164fc:	00 
   164fd:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   16502:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16507:	eb 67                	jmp    16570 <ema_modify_permissions+0x18c>
   16509:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1650d:	0b 44 24 58          	or     0x58(%rsp),%eax
   16511:	39 44 24 58          	cmp    %eax,0x58(%rsp)
   16515:	74 18                	je     1652f <ema_modify_permissions+0x14b>
   16517:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   1651c:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   16523:	00 
   16524:	48 89 d6             	mov    %rdx,%rsi
   16527:	48 89 c7             	mov    %rax,%rdi
   1652a:	e8 30 b5 01 00       	call   31a5f <do_emodpe>
   1652f:	8b 44 24 34          	mov    0x34(%rsp),%eax
   16533:	83 e0 06             	and    $0x6,%eax
   16536:	83 f8 06             	cmp    $0x6,%eax
   16539:	74 2c                	je     16567 <ema_modify_permissions+0x183>
   1653b:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   16540:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   16547:	00 
   16548:	48 89 d6             	mov    %rdx,%rsi
   1654b:	48 89 c7             	mov    %rax,%rdi
   1654e:	e8 d0 b4 01 00       	call   31a23 <do_eaccept>
   16553:	89 44 24 54          	mov    %eax,0x54(%rsp)
   16557:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   1655c:	74 09                	je     16567 <ema_modify_permissions+0x183>
   1655e:	8b 44 24 54          	mov    0x54(%rsp),%eax
   16562:	e9 7f 01 00 00       	jmp    166e6 <ema_modify_permissions+0x302>
   16567:	48 81 44 24 68 00 10 	addq   $0x1000,0x68(%rsp)
   1656e:	00 00 
   16570:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   16575:	48 3b 44 24 78       	cmp    0x78(%rsp),%rax
   1657a:	72 8d                	jb     16509 <ema_modify_permissions+0x125>
   1657c:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16581:	48 8b 00             	mov    (%rax),%rax
   16584:	48 39 44 24 70       	cmp    %rax,0x70(%rsp)
   16589:	76 6f                	jbe    165fa <ema_modify_permissions+0x216>
   1658b:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   16592:	00 00 
   16594:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
   16599:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1659e:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   165a3:	48 89 d1             	mov    %rdx,%rcx
   165a6:	ba 00 00 00 00       	mov    $0x0,%edx
   165ab:	48 89 c7             	mov    %rax,%rdi
   165ae:	e8 3e e6 ff ff       	call   14bf1 <ema_split>
   165b3:	89 44 24 54          	mov    %eax,0x54(%rsp)
   165b7:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   165bc:	74 09                	je     165c7 <ema_modify_permissions+0x1e3>
   165be:	8b 44 24 54          	mov    0x54(%rsp),%eax
   165c2:	e9 1f 01 00 00       	jmp    166e6 <ema_modify_permissions+0x302>
   165c7:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   165cc:	48 85 c0             	test   %rax,%rax
   165cf:	75 1f                	jne    165f0 <ema_modify_permissions+0x20c>
   165d1:	48 8d 0d ad ce 01 00 	lea    0x1cead(%rip),%rcx        # 33485 <__func__.1568+0xf5>
   165d8:	48 8d 15 41 d0 01 00 	lea    0x1d041(%rip),%rdx        # 33620 <__func__.2130>
   165df:	be ea 03 00 00       	mov    $0x3ea,%esi
   165e4:	48 8d 3d cf cd 01 00 	lea    0x1cdcf(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   165eb:	e8 59 2c 00 00       	call   19249 <__assert>
   165f0:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   165f5:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   165fa:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   165ff:	48 8b 10             	mov    (%rax),%rdx
   16602:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16607:	48 8b 40 08          	mov    0x8(%rax),%rax
   1660b:	48 01 d0             	add    %rdx,%rax
   1660e:	48 39 44 24 78       	cmp    %rax,0x78(%rsp)
   16613:	73 6f                	jae    16684 <ema_modify_permissions+0x2a0>
   16615:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   1661c:	00 00 
   1661e:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
   16623:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   16628:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1662d:	48 89 d1             	mov    %rdx,%rcx
   16630:	ba 01 00 00 00       	mov    $0x1,%edx
   16635:	48 89 c7             	mov    %rax,%rdi
   16638:	e8 b4 e5 ff ff       	call   14bf1 <ema_split>
   1663d:	89 44 24 54          	mov    %eax,0x54(%rsp)
   16641:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   16646:	74 09                	je     16651 <ema_modify_permissions+0x26d>
   16648:	8b 44 24 54          	mov    0x54(%rsp),%eax
   1664c:	e9 95 00 00 00       	jmp    166e6 <ema_modify_permissions+0x302>
   16651:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   16656:	48 85 c0             	test   %rax,%rax
   16659:	75 1f                	jne    1667a <ema_modify_permissions+0x296>
   1665b:	48 8d 0d 23 ce 01 00 	lea    0x1ce23(%rip),%rcx        # 33485 <__func__.1568+0xf5>
   16662:	48 8d 15 b7 cf 01 00 	lea    0x1cfb7(%rip),%rdx        # 33620 <__func__.2130>
   16669:	be f3 03 00 00       	mov    $0x3f3,%esi
   1666e:	48 8d 3d 45 cd 01 00 	lea    0x1cd45(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16675:	e8 cf 2b 00 00       	call   19249 <__assert>
   1667a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1667f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16684:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   16689:	48 8b 40 18          	mov    0x18(%rax),%rax
   1668d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   16691:	48 89 c2             	mov    %rax,%rdx
   16694:	8b 44 24 34          	mov    0x34(%rsp),%eax
   16698:	48 98                	cltq   
   1669a:	48 09 c2             	or     %rax,%rdx
   1669d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   166a2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   166a6:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   166ab:	75 35                	jne    166e2 <ema_modify_permissions+0x2fe>
   166ad:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   166b2:	48 2b 44 24 70       	sub    0x70(%rsp),%rax
   166b7:	48 89 c6             	mov    %rax,%rsi
   166ba:	8b 4c 24 5c          	mov    0x5c(%rsp),%ecx
   166be:	8b 54 24 5c          	mov    0x5c(%rsp),%edx
   166c2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   166c7:	48 89 c7             	mov    %rax,%rdi
   166ca:	e8 a5 8b ff ff       	call   f274 <sgx_mm_modify_ocall>
   166cf:	89 44 24 54          	mov    %eax,0x54(%rsp)
   166d3:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   166d8:	74 08                	je     166e2 <ema_modify_permissions+0x2fe>
   166da:	c7 44 24 54 0e 00 00 	movl   $0xe,0x54(%rsp)
   166e1:	00 
   166e2:	8b 44 24 54          	mov    0x54(%rsp),%eax
   166e6:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
   166ed:	00 
   166ee:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   166f5:	00 00 
   166f7:	74 05                	je     166fe <ema_modify_permissions+0x31a>
   166f9:	e8 f9 d0 00 00       	call   237f7 <__stack_chk_fail>
   166fe:	c9                   	leave  
   166ff:	c3                   	ret    

0000000000016700 <ema_can_modify_permissions>:
   16700:	f3 0f 1e fa          	endbr64 
   16704:	55                   	push   %rbp
   16705:	48 89 e5             	mov    %rsp,%rbp
   16708:	48 83 ec 50          	sub    $0x50,%rsp
   1670c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16710:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16714:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   16718:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1671c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16720:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16724:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16728:	48 8b 00             	mov    (%rax),%rax
   1672b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1672f:	e9 0f 01 00 00       	jmp    16843 <ema_can_modify_permissions+0x143>
   16734:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16738:	48 8b 00             	mov    (%rax),%rax
   1673b:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1673f:	74 0a                	je     1674b <ema_can_modify_permissions+0x4b>
   16741:	b8 16 00 00 00       	mov    $0x16,%eax
   16746:	e9 1c 01 00 00       	jmp    16867 <ema_can_modify_permissions+0x167>
   1674b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1674f:	48 8b 40 18          	mov    0x18(%rax),%rax
   16753:	25 00 02 00 00       	and    $0x200,%eax
   16758:	48 85 c0             	test   %rax,%rax
   1675b:	75 0a                	jne    16767 <ema_can_modify_permissions+0x67>
   1675d:	b8 0d 00 00 00       	mov    $0xd,%eax
   16762:	e9 00 01 00 00       	jmp    16867 <ema_can_modify_permissions+0x167>
   16767:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1676b:	8b 40 10             	mov    0x10(%rax),%eax
   1676e:	83 e0 01             	and    $0x1,%eax
   16771:	85 c0                	test   %eax,%eax
   16773:	74 0a                	je     1677f <ema_can_modify_permissions+0x7f>
   16775:	b8 0d 00 00 00       	mov    $0xd,%eax
   1677a:	e9 e8 00 00 00       	jmp    16867 <ema_can_modify_permissions+0x167>
   1677f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16783:	48 8b 00             	mov    (%rax),%rax
   16786:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1678a:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   1678f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16793:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16797:	48 8b 10             	mov    (%rax),%rdx
   1679a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1679e:	48 8b 40 08          	mov    0x8(%rax),%rax
   167a2:	48 01 d0             	add    %rdx,%rax
   167a5:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   167a9:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   167ae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   167b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   167b6:	48 8b 00             	mov    (%rax),%rax
   167b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   167bd:	48 29 c2             	sub    %rax,%rdx
   167c0:	48 89 d0             	mov    %rdx,%rax
   167c3:	48 c1 e8 0c          	shr    $0xc,%rax
   167c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   167cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   167cf:	48 8b 00             	mov    (%rax),%rax
   167d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   167d6:	48 29 c2             	sub    %rax,%rdx
   167d9:	48 89 d0             	mov    %rdx,%rax
   167dc:	48 c1 e8 0c          	shr    $0xc,%rax
   167e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   167e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   167e8:	48 8b 40 20          	mov    0x20(%rax),%rax
   167ec:	48 85 c0             	test   %rax,%rax
   167ef:	74 29                	je     1681a <ema_can_modify_permissions+0x11a>
   167f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167f5:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   167f9:	48 89 c2             	mov    %rax,%rdx
   167fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16800:	48 8b 40 20          	mov    0x20(%rax),%rax
   16804:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16808:	48 89 ce             	mov    %rcx,%rsi
   1680b:	48 89 c7             	mov    %rax,%rdi
   1680e:	e8 1b d3 ff ff       	call   13b2e <bit_array_test_range>
   16813:	83 f0 01             	xor    $0x1,%eax
   16816:	84 c0                	test   %al,%al
   16818:	74 07                	je     16821 <ema_can_modify_permissions+0x121>
   1681a:	b8 16 00 00 00       	mov    $0x16,%eax
   1681f:	eb 46                	jmp    16867 <ema_can_modify_permissions+0x167>
   16821:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16825:	48 8b 10             	mov    (%rax),%rdx
   16828:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1682c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16830:	48 01 d0             	add    %rdx,%rax
   16833:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   16837:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1683b:	48 8b 40 38          	mov    0x38(%rax),%rax
   1683f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16843:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16847:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1684b:	0f 85 e3 fe ff ff    	jne    16734 <ema_can_modify_permissions+0x34>
   16851:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16855:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   16859:	73 07                	jae    16862 <ema_can_modify_permissions+0x162>
   1685b:	b8 16 00 00 00       	mov    $0x16,%eax
   16860:	eb 05                	jmp    16867 <ema_can_modify_permissions+0x167>
   16862:	b8 00 00 00 00       	mov    $0x0,%eax
   16867:	c9                   	leave  
   16868:	c3                   	ret    

0000000000016869 <ema_modify_permissions_loop_nocheck>:
   16869:	f3 0f 1e fa          	endbr64 
   1686d:	55                   	push   %rbp
   1686e:	48 89 e5             	mov    %rsp,%rbp
   16871:	48 83 ec 50          	sub    $0x50,%rsp
   16875:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16879:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1687d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16881:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   16885:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)
   16889:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   16890:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16894:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16898:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1689f:	00 
   168a0:	eb 39                	jmp    168db <ema_modify_permissions_loop_nocheck+0x72>
   168a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168a6:	48 8b 40 38          	mov    0x38(%rax),%rax
   168aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   168ae:	8b 4d bc             	mov    -0x44(%rbp),%ecx
   168b1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   168b5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   168b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168bd:	48 89 c7             	mov    %rax,%rdi
   168c0:	e8 1f fb ff ff       	call   163e4 <ema_modify_permissions>
   168c5:	89 45 ec             	mov    %eax,-0x14(%rbp)
   168c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   168cc:	74 05                	je     168d3 <ema_modify_permissions_loop_nocheck+0x6a>
   168ce:	8b 45 ec             	mov    -0x14(%rbp),%eax
   168d1:	eb 15                	jmp    168e8 <ema_modify_permissions_loop_nocheck+0x7f>
   168d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   168db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168df:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   168e3:	75 bd                	jne    168a2 <ema_modify_permissions_loop_nocheck+0x39>
   168e5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   168e8:	c9                   	leave  
   168e9:	c3                   	ret    

00000000000168ea <ema_modify_permissions_loop>:
   168ea:	f3 0f 1e fa          	endbr64 
   168ee:	55                   	push   %rbp
   168ef:	48 89 e5             	mov    %rsp,%rbp
   168f2:	48 83 ec 40          	sub    $0x40,%rsp
   168f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   168fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   168fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16902:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   16906:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
   1690a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1690e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16912:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   16916:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1691a:	48 89 c7             	mov    %rax,%rdi
   1691d:	e8 de fd ff ff       	call   16700 <ema_can_modify_permissions>
   16922:	89 45 fc             	mov    %eax,-0x4(%rbp)
   16925:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   16929:	74 05                	je     16930 <ema_modify_permissions_loop+0x46>
   1692b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1692e:	eb 1e                	jmp    1694e <ema_modify_permissions_loop+0x64>
   16930:	8b 7d cc             	mov    -0x34(%rbp),%edi
   16933:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   16937:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1693b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1693f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16943:	41 89 f8             	mov    %edi,%r8d
   16946:	48 89 c7             	mov    %rax,%rdi
   16949:	e8 1b ff ff ff       	call   16869 <ema_modify_permissions_loop_nocheck>
   1694e:	c9                   	leave  
   1694f:	c3                   	ret    

0000000000016950 <ema_can_commit_data>:
   16950:	f3 0f 1e fa          	endbr64 
   16954:	55                   	push   %rbp
   16955:	48 89 e5             	mov    %rsp,%rbp
   16958:	48 83 ec 50          	sub    $0x50,%rsp
   1695c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16960:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16964:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   16968:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1696c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16970:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16974:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16978:	48 8b 00             	mov    (%rax),%rax
   1697b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1697f:	e9 42 01 00 00       	jmp    16ac6 <ema_can_commit_data+0x176>
   16984:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16988:	48 8b 00             	mov    (%rax),%rax
   1698b:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1698f:	74 0a                	je     1699b <ema_can_commit_data+0x4b>
   16991:	b8 16 00 00 00       	mov    $0x16,%eax
   16996:	e9 4f 01 00 00       	jmp    16aea <ema_can_commit_data+0x19a>
   1699b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1699f:	48 8b 40 18          	mov    0x18(%rax),%rax
   169a3:	83 e0 02             	and    $0x2,%eax
   169a6:	48 85 c0             	test   %rax,%rax
   169a9:	75 0a                	jne    169b5 <ema_can_commit_data+0x65>
   169ab:	b8 0d 00 00 00       	mov    $0xd,%eax
   169b0:	e9 35 01 00 00       	jmp    16aea <ema_can_commit_data+0x19a>
   169b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   169b9:	48 8b 40 18          	mov    0x18(%rax),%rax
   169bd:	25 00 02 00 00       	and    $0x200,%eax
   169c2:	48 85 c0             	test   %rax,%rax
   169c5:	75 0a                	jne    169d1 <ema_can_commit_data+0x81>
   169c7:	b8 0d 00 00 00       	mov    $0xd,%eax
   169cc:	e9 19 01 00 00       	jmp    16aea <ema_can_commit_data+0x19a>
   169d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   169d5:	8b 40 10             	mov    0x10(%rax),%eax
   169d8:	83 e0 01             	and    $0x1,%eax
   169db:	85 c0                	test   %eax,%eax
   169dd:	74 0a                	je     169e9 <ema_can_commit_data+0x99>
   169df:	b8 0d 00 00 00       	mov    $0xd,%eax
   169e4:	e9 01 01 00 00       	jmp    16aea <ema_can_commit_data+0x19a>
   169e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   169ed:	8b 40 10             	mov    0x10(%rax),%eax
   169f0:	83 e0 04             	and    $0x4,%eax
   169f3:	85 c0                	test   %eax,%eax
   169f5:	75 0a                	jne    16a01 <ema_can_commit_data+0xb1>
   169f7:	b8 16 00 00 00       	mov    $0x16,%eax
   169fc:	e9 e9 00 00 00       	jmp    16aea <ema_can_commit_data+0x19a>
   16a01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a05:	48 8b 40 20          	mov    0x20(%rax),%rax
   16a09:	48 85 c0             	test   %rax,%rax
   16a0c:	0f 84 92 00 00 00    	je     16aa4 <ema_can_commit_data+0x154>
   16a12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a16:	48 8b 00             	mov    (%rax),%rax
   16a19:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   16a1d:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   16a22:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16a26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a2a:	48 8b 10             	mov    (%rax),%rdx
   16a2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a31:	48 8b 40 08          	mov    0x8(%rax),%rax
   16a35:	48 01 d0             	add    %rdx,%rax
   16a38:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   16a3c:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   16a41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16a45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a49:	48 8b 00             	mov    (%rax),%rax
   16a4c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16a50:	48 29 c2             	sub    %rax,%rdx
   16a53:	48 89 d0             	mov    %rdx,%rax
   16a56:	48 c1 e8 0c          	shr    $0xc,%rax
   16a5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16a5e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a62:	48 8b 00             	mov    (%rax),%rax
   16a65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16a69:	48 29 c2             	sub    %rax,%rdx
   16a6c:	48 89 d0             	mov    %rdx,%rax
   16a6f:	48 c1 e8 0c          	shr    $0xc,%rax
   16a73:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a7b:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   16a7f:	48 89 c2             	mov    %rax,%rdx
   16a82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a86:	48 8b 40 20          	mov    0x20(%rax),%rax
   16a8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16a8e:	48 89 ce             	mov    %rcx,%rsi
   16a91:	48 89 c7             	mov    %rax,%rdi
   16a94:	e8 dd d1 ff ff       	call   13c76 <bit_array_test_range_any>
   16a99:	84 c0                	test   %al,%al
   16a9b:	74 07                	je     16aa4 <ema_can_commit_data+0x154>
   16a9d:	b8 0d 00 00 00       	mov    $0xd,%eax
   16aa2:	eb 46                	jmp    16aea <ema_can_commit_data+0x19a>
   16aa4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16aa8:	48 8b 10             	mov    (%rax),%rdx
   16aab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16aaf:	48 8b 40 08          	mov    0x8(%rax),%rax
   16ab3:	48 01 d0             	add    %rdx,%rax
   16ab6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   16aba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16abe:	48 8b 40 38          	mov    0x38(%rax),%rax
   16ac2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16ac6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16aca:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   16ace:	0f 85 b0 fe ff ff    	jne    16984 <ema_can_commit_data+0x34>
   16ad4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ad8:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   16adc:	73 07                	jae    16ae5 <ema_can_commit_data+0x195>
   16ade:	b8 16 00 00 00       	mov    $0x16,%eax
   16ae3:	eb 05                	jmp    16aea <ema_can_commit_data+0x19a>
   16ae5:	b8 00 00 00 00       	mov    $0x0,%eax
   16aea:	c9                   	leave  
   16aeb:	c3                   	ret    

0000000000016aec <ema_do_commit_data>:
   16aec:	f3 0f 1e fa          	endbr64 
   16af0:	55                   	push   %rbp
   16af1:	48 89 e5             	mov    %rsp,%rbp
   16af4:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   16af8:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   16aff:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
   16b04:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
   16b09:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   16b0e:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   16b13:	44 89 44 24 3c       	mov    %r8d,0x3c(%rsp)
   16b18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b1f:	00 00 
   16b21:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   16b28:	00 
   16b29:	31 c0                	xor    %eax,%eax
   16b2b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   16b30:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   16b35:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   16b3a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   16b3f:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   16b46:	00 
   16b47:	b8 00 00 00 00       	mov    $0x0,%eax
   16b4c:	b9 08 00 00 00       	mov    $0x8,%ecx
   16b51:	48 89 d7             	mov    %rdx,%rdi
   16b54:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   16b57:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
   16b5b:	80 cc 02             	or     $0x2,%ah
   16b5e:	48 98                	cltq   
   16b60:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   16b67:	00 
   16b68:	eb 41                	jmp    16bab <ema_do_commit_data+0xbf>
   16b6a:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   16b6f:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   16b74:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   16b7b:	00 
   16b7c:	48 89 ce             	mov    %rcx,%rsi
   16b7f:	48 89 c7             	mov    %rax,%rdi
   16b82:	e8 ba ae 01 00       	call   31a41 <do_eacceptcopy>
   16b87:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
   16b8b:	83 7c 24 6c 00       	cmpl   $0x0,0x6c(%rsp)
   16b90:	74 07                	je     16b99 <ema_do_commit_data+0xad>
   16b92:	b8 0e 00 00 00       	mov    $0xe,%eax
   16b97:	eb 38                	jmp    16bd1 <ema_do_commit_data+0xe5>
   16b99:	48 81 44 24 70 00 10 	addq   $0x1000,0x70(%rsp)
   16ba0:	00 00 
   16ba2:	48 81 44 24 78 00 10 	addq   $0x1000,0x78(%rsp)
   16ba9:	00 00 
   16bab:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   16bb0:	48 3b 44 24 48       	cmp    0x48(%rsp),%rax
   16bb5:	72 b3                	jb     16b6a <ema_do_commit_data+0x7e>
   16bb7:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   16bbc:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   16bc1:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   16bc6:	48 89 ce             	mov    %rcx,%rsi
   16bc9:	48 89 c7             	mov    %rax,%rdi
   16bcc:	e8 e2 db ff ff       	call   147b3 <ema_set_eaccept>
   16bd1:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
   16bd8:	00 
   16bd9:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   16be0:	00 00 
   16be2:	74 05                	je     16be9 <ema_do_commit_data+0xfd>
   16be4:	e8 0e cc 00 00       	call   237f7 <__stack_chk_fail>
   16be9:	c9                   	leave  
   16bea:	c3                   	ret    

0000000000016beb <ema_do_commit_data_loop>:
   16beb:	f3 0f 1e fa          	endbr64 
   16bef:	55                   	push   %rbp
   16bf0:	48 89 e5             	mov    %rsp,%rbp
   16bf3:	48 83 ec 60          	sub    $0x60,%rsp
   16bf7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16bfb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16bff:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   16c03:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   16c07:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   16c0b:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
   16c0f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   16c16:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   16c1a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   16c1e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   16c22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c26:	48 89 c7             	mov    %rax,%rdi
   16c29:	e8 22 fd ff ff       	call   16950 <ema_can_commit_data>
   16c2e:	89 45 dc             	mov    %eax,-0x24(%rbp)
   16c31:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   16c35:	74 08                	je     16c3f <ema_do_commit_data_loop+0x54>
   16c37:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16c3a:	e9 c0 00 00 00       	jmp    16cff <ema_do_commit_data_loop+0x114>
   16c3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16c47:	e9 81 00 00 00       	jmp    16ccd <ema_do_commit_data_loop+0xe2>
   16c4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c50:	48 8b 00             	mov    (%rax),%rax
   16c53:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   16c57:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   16c5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16c60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c64:	48 8b 10             	mov    (%rax),%rdx
   16c67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c6b:	48 8b 40 08          	mov    0x8(%rax),%rax
   16c6f:	48 01 d0             	add    %rdx,%rax
   16c72:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   16c76:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   16c7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c83:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
   16c87:	48 89 c2             	mov    %rax,%rdx
   16c8a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   16c8e:	48 01 d0             	add    %rdx,%rax
   16c91:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16c95:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   16c98:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   16c9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16ca0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   16ca4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ca8:	41 89 f8             	mov    %edi,%r8d
   16cab:	48 89 c7             	mov    %rax,%rdi
   16cae:	e8 39 fe ff ff       	call   16aec <ema_do_commit_data>
   16cb3:	89 45 dc             	mov    %eax,-0x24(%rbp)
   16cb6:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   16cba:	74 05                	je     16cc1 <ema_do_commit_data_loop+0xd6>
   16cbc:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16cbf:	eb 3e                	jmp    16cff <ema_do_commit_data_loop+0x114>
   16cc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16cc5:	48 8b 40 38          	mov    0x38(%rax),%rax
   16cc9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16ccd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16cd1:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   16cd5:	0f 85 71 ff ff ff    	jne    16c4c <ema_do_commit_data_loop+0x61>
   16cdb:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   16cde:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   16ce2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   16ce6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   16cea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cee:	41 89 f8             	mov    %edi,%r8d
   16cf1:	48 89 c7             	mov    %rax,%rdi
   16cf4:	e8 70 fb ff ff       	call   16869 <ema_modify_permissions_loop_nocheck>
   16cf9:	89 45 dc             	mov    %eax,-0x24(%rbp)
   16cfc:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16cff:	c9                   	leave  
   16d00:	c3                   	ret    

0000000000016d01 <ema_realloc_from_reserve_range>:
   16d01:	f3 0f 1e fa          	endbr64 
   16d05:	55                   	push   %rbp
   16d06:	48 89 e5             	mov    %rsp,%rbp
   16d09:	48 83 ec 70          	sub    $0x70,%rsp
   16d0d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   16d11:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   16d15:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   16d19:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   16d1d:	44 89 45 9c          	mov    %r8d,-0x64(%rbp)
   16d21:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
   16d25:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16d29:	48 85 c0             	test   %rax,%rax
   16d2c:	75 1f                	jne    16d4d <ema_realloc_from_reserve_range+0x4c>
   16d2e:	48 8d 0d 5d c7 01 00 	lea    0x1c75d(%rip),%rcx        # 33492 <__func__.1568+0x102>
   16d35:	48 8d 15 04 c9 01 00 	lea    0x1c904(%rip),%rdx        # 33640 <__func__.2223>
   16d3c:	be 9a 04 00 00       	mov    $0x49a,%esi
   16d41:	48 8d 3d 72 c6 01 00 	lea    0x1c672(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16d48:	e8 fc 24 00 00       	call   19249 <__assert>
   16d4d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16d51:	48 85 c0             	test   %rax,%rax
   16d54:	75 1f                	jne    16d75 <ema_realloc_from_reserve_range+0x74>
   16d56:	48 8d 0d 43 c7 01 00 	lea    0x1c743(%rip),%rcx        # 334a0 <__func__.1568+0x110>
   16d5d:	48 8d 15 dc c8 01 00 	lea    0x1c8dc(%rip),%rdx        # 33640 <__func__.2223>
   16d64:	be 9b 04 00 00       	mov    $0x49b,%esi
   16d69:	48 8d 3d 4a c6 01 00 	lea    0x1c64a(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16d70:	e8 d4 24 00 00       	call   19249 <__assert>
   16d75:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16d79:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16d7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16d81:	48 8b 00             	mov    (%rax),%rax
   16d84:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   16d88:	77 1f                	ja     16da9 <ema_realloc_from_reserve_range+0xa8>
   16d8a:	48 8d 0d 1c c7 01 00 	lea    0x1c71c(%rip),%rcx        # 334ad <__func__.1568+0x11d>
   16d91:	48 8d 15 a8 c8 01 00 	lea    0x1c8a8(%rip),%rdx        # 33640 <__func__.2223>
   16d98:	be 9d 04 00 00       	mov    $0x49d,%esi
   16d9d:	48 8d 3d 16 c6 01 00 	lea    0x1c616(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16da4:	e8 a0 24 00 00       	call   19249 <__assert>
   16da9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16dad:	48 8b 40 40          	mov    0x40(%rax),%rax
   16db1:	48 8b 10             	mov    (%rax),%rdx
   16db4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16db8:	48 8b 40 40          	mov    0x40(%rax),%rax
   16dbc:	48 8b 40 08          	mov    0x8(%rax),%rax
   16dc0:	48 01 d0             	add    %rdx,%rax
   16dc3:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   16dc7:	72 1f                	jb     16de8 <ema_realloc_from_reserve_range+0xe7>
   16dc9:	48 8d 0d f8 c6 01 00 	lea    0x1c6f8(%rip),%rcx        # 334c8 <__func__.1568+0x138>
   16dd0:	48 8d 15 69 c8 01 00 	lea    0x1c869(%rip),%rdx        # 33640 <__func__.2223>
   16dd7:	be 9e 04 00 00       	mov    $0x49e,%esi
   16ddc:	48 8d 3d d7 c5 01 00 	lea    0x1c5d7(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16de3:	e8 61 24 00 00       	call   19249 <__assert>
   16de8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16dec:	48 8b 00             	mov    (%rax),%rax
   16def:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   16df3:	eb 6d                	jmp    16e62 <ema_realloc_from_reserve_range+0x161>
   16df5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16df9:	48 89 c7             	mov    %rax,%rdi
   16dfc:	e8 08 10 00 00       	call   17e09 <can_erealloc>
   16e01:	85 c0                	test   %eax,%eax
   16e03:	75 0a                	jne    16e0f <ema_realloc_from_reserve_range+0x10e>
   16e05:	b8 00 00 00 00       	mov    $0x0,%eax
   16e0a:	e9 e4 01 00 00       	jmp    16ff3 <ema_realloc_from_reserve_range+0x2f2>
   16e0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e13:	48 8b 00             	mov    (%rax),%rax
   16e16:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   16e1a:	74 0a                	je     16e26 <ema_realloc_from_reserve_range+0x125>
   16e1c:	b8 00 00 00 00       	mov    $0x0,%eax
   16e21:	e9 cd 01 00 00       	jmp    16ff3 <ema_realloc_from_reserve_range+0x2f2>
   16e26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e2a:	8b 40 10             	mov    0x10(%rax),%eax
   16e2d:	83 e0 01             	and    $0x1,%eax
   16e30:	85 c0                	test   %eax,%eax
   16e32:	74 24                	je     16e58 <ema_realloc_from_reserve_range+0x157>
   16e34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e38:	48 8b 10             	mov    (%rax),%rdx
   16e3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e3f:	48 8b 40 08          	mov    0x8(%rax),%rax
   16e43:	48 01 d0             	add    %rdx,%rax
   16e46:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   16e4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e4e:	48 8b 40 38          	mov    0x38(%rax),%rax
   16e52:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16e56:	eb 0a                	jmp    16e62 <ema_realloc_from_reserve_range+0x161>
   16e58:	b8 00 00 00 00       	mov    $0x0,%eax
   16e5d:	e9 91 01 00 00       	jmp    16ff3 <ema_realloc_from_reserve_range+0x2f2>
   16e62:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16e66:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   16e6a:	75 89                	jne    16df5 <ema_realloc_from_reserve_range+0xf4>
   16e6c:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   16e73:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16e77:	48 8b 40 40          	mov    0x40(%rax),%rax
   16e7b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16e7f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16e83:	48 8b 00             	mov    (%rax),%rax
   16e86:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   16e8a:	76 49                	jbe    16ed5 <ema_realloc_from_reserve_range+0x1d4>
   16e8c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16e90:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16e94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16e98:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   16e9c:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   16ea0:	48 89 d1             	mov    %rdx,%rcx
   16ea3:	ba 00 00 00 00       	mov    $0x0,%edx
   16ea8:	48 89 c7             	mov    %rax,%rdi
   16eab:	e8 41 dd ff ff       	call   14bf1 <ema_split>
   16eb0:	89 45 cc             	mov    %eax,-0x34(%rbp)
   16eb3:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   16eb7:	74 0a                	je     16ec3 <ema_realloc_from_reserve_range+0x1c2>
   16eb9:	b8 00 00 00 00       	mov    $0x0,%eax
   16ebe:	e9 30 01 00 00       	jmp    16ff3 <ema_realloc_from_reserve_range+0x2f2>
   16ec3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ec7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16ecb:	75 08                	jne    16ed5 <ema_realloc_from_reserve_range+0x1d4>
   16ecd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16ed1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16ed5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ed9:	48 8b 10             	mov    (%rax),%rdx
   16edc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ee0:	48 8b 40 08          	mov    0x8(%rax),%rax
   16ee4:	48 01 d0             	add    %rdx,%rax
   16ee7:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   16eeb:	73 2f                	jae    16f1c <ema_realloc_from_reserve_range+0x21b>
   16eed:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   16ef1:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   16ef5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ef9:	48 89 d1             	mov    %rdx,%rcx
   16efc:	ba 00 00 00 00       	mov    $0x0,%edx
   16f01:	48 89 c7             	mov    %rax,%rdi
   16f04:	e8 e8 dc ff ff       	call   14bf1 <ema_split>
   16f09:	89 45 cc             	mov    %eax,-0x34(%rbp)
   16f0c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   16f10:	74 16                	je     16f28 <ema_realloc_from_reserve_range+0x227>
   16f12:	b8 00 00 00 00       	mov    $0x0,%eax
   16f17:	e9 d7 00 00 00       	jmp    16ff3 <ema_realloc_from_reserve_range+0x2f2>
   16f1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16f20:	48 8b 40 38          	mov    0x38(%rax),%rax
   16f24:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   16f28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16f2c:	8b 40 10             	mov    0x10(%rax),%eax
   16f2f:	83 e0 01             	and    $0x1,%eax
   16f32:	85 c0                	test   %eax,%eax
   16f34:	75 1f                	jne    16f55 <ema_realloc_from_reserve_range+0x254>
   16f36:	48 8d 0d c3 c5 01 00 	lea    0x1c5c3(%rip),%rcx        # 33500 <__func__.1568+0x170>
   16f3d:	48 8d 15 fc c6 01 00 	lea    0x1c6fc(%rip),%rdx        # 33640 <__func__.2223>
   16f44:	be c8 04 00 00       	mov    $0x4c8,%esi
   16f49:	48 8d 3d 6a c4 01 00 	lea    0x1c46a(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16f50:	e8 f4 22 00 00       	call   19249 <__assert>
   16f55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16f59:	48 8b 40 20          	mov    0x20(%rax),%rax
   16f5d:	48 85 c0             	test   %rax,%rax
   16f60:	74 1f                	je     16f81 <ema_realloc_from_reserve_range+0x280>
   16f62:	48 8d 0d bc c5 01 00 	lea    0x1c5bc(%rip),%rcx        # 33525 <__func__.1568+0x195>
   16f69:	48 8d 15 d0 c6 01 00 	lea    0x1c6d0(%rip),%rdx        # 33640 <__func__.2223>
   16f70:	be c9 04 00 00       	mov    $0x4c9,%esi
   16f75:	48 8d 3d 3e c4 01 00 	lea    0x1c43e(%rip),%rdi        # 333ba <__func__.1568+0x2a>
   16f7c:	e8 c8 22 00 00       	call   19249 <__assert>
   16f81:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16f85:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16f89:	eb 20                	jmp    16fab <ema_realloc_from_reserve_range+0x2aa>
   16f8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f8f:	48 8b 40 38          	mov    0x38(%rax),%rax
   16f93:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16f97:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f9b:	48 89 c7             	mov    %rax,%rdi
   16f9e:	e8 58 e6 ff ff       	call   155fb <ema_destroy>
   16fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fa7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16fab:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16faf:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   16fb3:	75 d6                	jne    16f8b <ema_realloc_from_reserve_range+0x28a>
   16fb5:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   16fb9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16fbd:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   16fc1:	48 89 c6             	mov    %rax,%rsi
   16fc4:	4c 8b 45 18          	mov    0x18(%rbp),%r8
   16fc8:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   16fcc:	8b 55 9c             	mov    -0x64(%rbp),%edx
   16fcf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   16fd3:	48 83 ec 08          	sub    $0x8,%rsp
   16fd7:	57                   	push   %rdi
   16fd8:	4d 89 c1             	mov    %r8,%r9
   16fdb:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   16fdf:	48 89 c7             	mov    %rax,%rdi
   16fe2:	e8 cc e4 ff ff       	call   154b3 <ema_new>
   16fe7:	48 83 c4 10          	add    $0x10,%rsp
   16feb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16fef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ff3:	c9                   	leave  
   16ff4:	c3                   	ret    

0000000000016ff5 <ema_do_alloc>:
   16ff5:	f3 0f 1e fa          	endbr64 
   16ff9:	55                   	push   %rbp
   16ffa:	48 89 e5             	mov    %rsp,%rbp
   16ffd:	48 83 ec 30          	sub    $0x30,%rsp
   17001:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17005:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17009:	8b 40 10             	mov    0x10(%rax),%eax
   1700c:	89 45 e8             	mov    %eax,-0x18(%rbp)
   1700f:	8b 45 e8             	mov    -0x18(%rbp),%eax
   17012:	83 e0 01             	and    $0x1,%eax
   17015:	85 c0                	test   %eax,%eax
   17017:	74 0a                	je     17023 <ema_do_alloc+0x2e>
   17019:	b8 00 00 00 00       	mov    $0x0,%eax
   1701e:	e9 ca 00 00 00       	jmp    170ed <ema_do_alloc+0xf8>
   17023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17027:	48 8b 00             	mov    (%rax),%rax
   1702a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1702e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17032:	48 8b 40 08          	mov    0x8(%rax),%rax
   17036:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1703a:	8b 55 e8             	mov    -0x18(%rbp),%edx
   1703d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17041:	48 8b 40 18          	mov    0x18(%rax),%rax
   17045:	25 00 ff 00 00       	and    $0xff00,%eax
   1704a:	89 c7                	mov    %eax,%edi
   1704c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   17050:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17054:	89 d1                	mov    %edx,%ecx
   17056:	89 fa                	mov    %edi,%edx
   17058:	48 89 c7             	mov    %rax,%rdi
   1705b:	e8 62 81 ff ff       	call   f1c2 <sgx_mm_alloc_ocall>
   17060:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   17063:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   17067:	74 0c                	je     17075 <ema_do_alloc+0x80>
   17069:	c7 45 e4 0e 00 00 00 	movl   $0xe,-0x1c(%rbp)
   17070:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   17073:	eb 78                	jmp    170ed <ema_do_alloc+0xf8>
   17075:	8b 45 e8             	mov    -0x18(%rbp),%eax
   17078:	83 e0 02             	and    $0x2,%eax
   1707b:	85 c0                	test   %eax,%eax
   1707d:	74 41                	je     170c0 <ema_do_alloc+0xcb>
   1707f:	8b 45 e8             	mov    -0x18(%rbp),%eax
   17082:	83 e0 10             	and    $0x10,%eax
   17085:	85 c0                	test   %eax,%eax
   17087:	0f 94 c0             	sete   %al
   1708a:	0f b6 c0             	movzbl %al,%eax
   1708d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   17090:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   17094:	0f 95 c0             	setne  %al
   17097:	0f b6 c8             	movzbl %al,%ecx
   1709a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1709e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   170a2:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   170a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   170aa:	48 89 c7             	mov    %rax,%rdi
   170ad:	e8 56 e6 ff ff       	call   15708 <do_commit>
   170b2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   170b5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   170b9:	74 05                	je     170c0 <ema_do_alloc+0xcb>
   170bb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   170be:	eb 2d                	jmp    170ed <ema_do_alloc+0xf8>
   170c0:	8b 45 e8             	mov    -0x18(%rbp),%eax
   170c3:	83 e0 02             	and    $0x2,%eax
   170c6:	85 c0                	test   %eax,%eax
   170c8:	74 11                	je     170db <ema_do_alloc+0xe6>
   170ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   170ce:	48 89 c7             	mov    %rax,%rdi
   170d1:	e8 07 d6 ff ff       	call   146dd <ema_set_eaccept_full>
   170d6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   170d9:	eb 0f                	jmp    170ea <ema_do_alloc+0xf5>
   170db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   170df:	48 89 c7             	mov    %rax,%rdi
   170e2:	e8 61 d6 ff ff       	call   14748 <ema_clear_eaccept_full>
   170e7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   170ea:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   170ed:	c9                   	leave  
   170ee:	c3                   	ret    

00000000000170ef <payload_to_block>:
   170ef:	f3 0f 1e fa          	endbr64 
   170f3:	55                   	push   %rbp
   170f4:	48 89 e5             	mov    %rsp,%rbp
   170f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   170ff:	48 8b 05 ea 3f 02 00 	mov    0x23fea(%rip),%rax        # 3b0f0 <header_size>
   17106:	48 29 c2             	sub    %rax,%rdx
   17109:	48 89 d0             	mov    %rdx,%rax
   1710c:	5d                   	pop    %rbp
   1710d:	c3                   	ret    

000000000001710e <block_to_payload>:
   1710e:	f3 0f 1e fa          	endbr64 
   17112:	55                   	push   %rbp
   17113:	48 89 e5             	mov    %rsp,%rbp
   17116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1711a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1711e:	48 83 c0 08          	add    $0x8,%rax
   17122:	5d                   	pop    %rbp
   17123:	c3                   	ret    

0000000000017124 <is_alloced>:
   17124:	f3 0f 1e fa          	endbr64 
   17128:	55                   	push   %rbp
   17129:	48 89 e5             	mov    %rsp,%rbp
   1712c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17134:	48 8b 00             	mov    (%rax),%rax
   17137:	ba 01 00 00 00       	mov    $0x1,%edx
   1713c:	48 21 d0             	and    %rdx,%rax
   1713f:	48 85 c0             	test   %rax,%rax
   17142:	0f 95 c0             	setne  %al
   17145:	5d                   	pop    %rbp
   17146:	c3                   	ret    

0000000000017147 <block_size>:
   17147:	f3 0f 1e fa          	endbr64 
   1714b:	55                   	push   %rbp
   1714c:	48 89 e5             	mov    %rsp,%rbp
   1714f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17157:	48 8b 10             	mov    (%rax),%rdx
   1715a:	48 8b 05 97 3f 02 00 	mov    0x23f97(%rip),%rax        # 3b0f8 <size_mask>
   17161:	48 21 d0             	and    %rdx,%rax
   17164:	5d                   	pop    %rbp
   17165:	c3                   	ret    

0000000000017166 <block_end>:
   17166:	f3 0f 1e fa          	endbr64 
   1716a:	55                   	push   %rbp
   1716b:	48 89 e5             	mov    %rsp,%rbp
   1716e:	48 83 ec 08          	sub    $0x8,%rsp
   17172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1717a:	48 89 c7             	mov    %rax,%rdi
   1717d:	e8 c5 ff ff ff       	call   17147 <block_size>
   17182:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17186:	48 01 d0             	add    %rdx,%rax
   17189:	c9                   	leave  
   1718a:	c3                   	ret    

000000000001718b <find_used_in_reserve>:
   1718b:	f3 0f 1e fa          	endbr64 
   1718f:	55                   	push   %rbp
   17190:	48 89 e5             	mov    %rsp,%rbp
   17193:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17197:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1719b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   171a0:	75 07                	jne    171a9 <find_used_in_reserve+0x1e>
   171a2:	b8 00 00 00 00       	mov    $0x0,%eax
   171a7:	eb 5b                	jmp    17204 <find_used_in_reserve+0x79>
   171a9:	48 8b 05 e0 ac 04 00 	mov    0x4ace0(%rip),%rax        # 61e90 <reserve_list>
   171b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   171b4:	eb 42                	jmp    171f8 <find_used_in_reserve+0x6d>
   171b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171ba:	48 8b 00             	mov    (%rax),%rax
   171bd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   171c1:	72 29                	jb     171ec <find_used_in_reserve+0x61>
   171c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   171c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   171cb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   171cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171d3:	48 8b 10             	mov    (%rax),%rdx
   171d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171da:	48 8b 40 10          	mov    0x10(%rax),%rax
   171de:	48 01 d0             	add    %rdx,%rax
   171e1:	48 39 c1             	cmp    %rax,%rcx
   171e4:	77 06                	ja     171ec <find_used_in_reserve+0x61>
   171e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171ea:	eb 18                	jmp    17204 <find_used_in_reserve+0x79>
   171ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171f0:	48 8b 40 18          	mov    0x18(%rax),%rax
   171f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   171f8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   171fd:	75 b7                	jne    171b6 <find_used_in_reserve+0x2b>
   171ff:	b8 00 00 00 00       	mov    $0x0,%eax
   17204:	5d                   	pop    %rbp
   17205:	c3                   	ret    

0000000000017206 <get_list_idx>:
   17206:	f3 0f 1e fa          	endbr64 
   1720a:	55                   	push   %rbp
   1720b:	48 89 e5             	mov    %rsp,%rbp
   1720e:	48 83 ec 20          	sub    $0x20,%rsp
   17212:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1721a:	83 e0 07             	and    $0x7,%eax
   1721d:	48 85 c0             	test   %rax,%rax
   17220:	74 1f                	je     17241 <get_list_idx+0x3b>
   17222:	48 8d 0d 4f c4 01 00 	lea    0x1c44f(%rip),%rcx        # 33678 <alloc_mask+0x8>
   17229:	48 8d 15 38 c5 01 00 	lea    0x1c538(%rip),%rdx        # 33768 <__func__.1563>
   17230:	be b9 00 00 00       	mov    $0xb9,%esi
   17235:	48 8d 3d 5e c4 01 00 	lea    0x1c45e(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   1723c:	e8 08 20 00 00       	call   19249 <__assert>
   17241:	48 83 7d e8 0f       	cmpq   $0xf,-0x18(%rbp)
   17246:	77 07                	ja     1724f <get_list_idx+0x49>
   17248:	b8 00 00 00 00       	mov    $0x0,%eax
   1724d:	eb 3d                	jmp    1728c <get_list_idx+0x86>
   1724f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17253:	48 83 e8 10          	sub    $0x10,%rax
   17257:	48 c1 e8 03          	shr    $0x3,%rax
   1725b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1725f:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
   17266:	00 
   17267:	76 1f                	jbe    17288 <get_list_idx+0x82>
   17269:	48 8d 0d 3c c4 01 00 	lea    0x1c43c(%rip),%rcx        # 336ac <alloc_mask+0x3c>
   17270:	48 8d 15 f1 c4 01 00 	lea    0x1c4f1(%rip),%rdx        # 33768 <__func__.1563>
   17277:	be bc 00 00 00       	mov    $0xbc,%esi
   1727c:	48 8d 3d 17 c4 01 00 	lea    0x1c417(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   17283:	e8 c1 1f 00 00       	call   19249 <__assert>
   17288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1728c:	c9                   	leave  
   1728d:	c3                   	ret    

000000000001728e <remove_from_list>:
   1728e:	f3 0f 1e fa          	endbr64 
   17292:	55                   	push   %rbp
   17293:	48 89 e5             	mov    %rsp,%rbp
   17296:	48 83 ec 30          	sub    $0x30,%rsp
   1729a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1729e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   172a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   172a6:	48 89 c7             	mov    %rax,%rdi
   172a9:	e8 99 fe ff ff       	call   17147 <block_size>
   172ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   172b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   172b6:	48 8b 00             	mov    (%rax),%rax
   172b9:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   172bd:	75 33                	jne    172f2 <remove_from_list+0x64>
   172bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   172c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   172c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   172cb:	48 89 10             	mov    %rdx,(%rax)
   172ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   172d2:	48 8b 00             	mov    (%rax),%rax
   172d5:	48 85 c0             	test   %rax,%rax
   172d8:	74 65                	je     1733f <remove_from_list+0xb1>
   172da:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
   172df:	76 5e                	jbe    1733f <remove_from_list+0xb1>
   172e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   172e5:	48 8b 00             	mov    (%rax),%rax
   172e8:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   172ef:	00 
   172f0:	eb 4d                	jmp    1733f <remove_from_list+0xb1>
   172f2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   172f9:	00 
   172fa:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
   172ff:	76 0c                	jbe    1730d <remove_from_list+0x7f>
   17301:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17305:	48 8b 40 10          	mov    0x10(%rax),%rax
   17309:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1730d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17311:	48 8b 40 08          	mov    0x8(%rax),%rax
   17315:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17319:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1731e:	74 0c                	je     1732c <remove_from_list+0x9e>
   17320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17324:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17328:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1732c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   17331:	74 0c                	je     1733f <remove_from_list+0xb1>
   17333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17337:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1733b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1733f:	90                   	nop
   17340:	c9                   	leave  
   17341:	c3                   	ret    

0000000000017342 <remove_from_lists>:
   17342:	f3 0f 1e fa          	endbr64 
   17346:	55                   	push   %rbp
   17347:	48 89 e5             	mov    %rsp,%rbp
   1734a:	48 83 ec 20          	sub    $0x20,%rsp
   1734e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17356:	48 89 c7             	mov    %rax,%rdi
   17359:	e8 e9 fd ff ff       	call   17147 <block_size>
   1735e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17362:	b8 08 08 00 00       	mov    $0x808,%eax
   17367:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1736b:	76 15                	jbe    17382 <remove_from_lists+0x40>
   1736d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17371:	48 8d 35 08 ab 04 00 	lea    0x4ab08(%rip),%rsi        # 61e80 <large_block_list>
   17378:	48 89 c7             	mov    %rax,%rdi
   1737b:	e8 0e ff ff ff       	call   1728e <remove_from_list>
   17380:	eb 35                	jmp    173b7 <remove_from_lists+0x75>
   17382:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17386:	48 89 c7             	mov    %rax,%rdi
   17389:	e8 78 fe ff ff       	call   17206 <get_list_idx>
   1738e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17396:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1739d:	00 
   1739e:	48 8d 05 db a2 04 00 	lea    0x4a2db(%rip),%rax        # 61680 <exact_block_list>
   173a5:	48 01 c2             	add    %rax,%rdx
   173a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173ac:	48 89 d6             	mov    %rdx,%rsi
   173af:	48 89 c7             	mov    %rax,%rdi
   173b2:	e8 d7 fe ff ff       	call   1728e <remove_from_list>
   173b7:	90                   	nop
   173b8:	c9                   	leave  
   173b9:	c3                   	ret    

00000000000173ba <prepend_to_list>:
   173ba:	f3 0f 1e fa          	endbr64 
   173be:	55                   	push   %rbp
   173bf:	48 89 e5             	mov    %rsp,%rbp
   173c2:	48 83 ec 10          	sub    $0x10,%rsp
   173c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   173ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173d2:	48 8b 10             	mov    (%rax),%rdx
   173d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   173dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173e1:	48 8b 00             	mov    (%rax),%rax
   173e4:	48 85 c0             	test   %rax,%rax
   173e7:	74 24                	je     1740d <prepend_to_list+0x53>
   173e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173ed:	48 8b 00             	mov    (%rax),%rax
   173f0:	48 89 c7             	mov    %rax,%rdi
   173f3:	e8 4f fd ff ff       	call   17147 <block_size>
   173f8:	48 83 f8 10          	cmp    $0x10,%rax
   173fc:	76 0f                	jbe    1740d <prepend_to_list+0x53>
   173fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17402:	48 8b 00             	mov    (%rax),%rax
   17405:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17409:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1740d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17411:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17415:	48 89 10             	mov    %rdx,(%rax)
   17418:	90                   	nop
   17419:	c9                   	leave  
   1741a:	c3                   	ret    

000000000001741b <put_exact_block>:
   1741b:	f3 0f 1e fa          	endbr64 
   1741f:	55                   	push   %rbp
   17420:	48 89 e5             	mov    %rsp,%rbp
   17423:	48 83 ec 20          	sub    $0x20,%rsp
   17427:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1742b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1742f:	48 89 c7             	mov    %rax,%rdi
   17432:	e8 10 fd ff ff       	call   17147 <block_size>
   17437:	48 89 c7             	mov    %rax,%rdi
   1743a:	e8 c7 fd ff ff       	call   17206 <get_list_idx>
   1743f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17447:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1744e:	00 
   1744f:	48 8d 05 2a a2 04 00 	lea    0x4a22a(%rip),%rax        # 61680 <exact_block_list>
   17456:	48 01 c2             	add    %rax,%rdx
   17459:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1745d:	48 89 d6             	mov    %rdx,%rsi
   17460:	48 89 c7             	mov    %rax,%rdi
   17463:	e8 52 ff ff ff       	call   173ba <prepend_to_list>
   17468:	48 8b 05 19 aa 04 00 	mov    0x4aa19(%rip),%rax        # 61e88 <num_free_blocks>
   1746f:	48 83 c0 01          	add    $0x1,%rax
   17473:	48 89 05 0e aa 04 00 	mov    %rax,0x4aa0e(%rip)        # 61e88 <num_free_blocks>
   1747a:	90                   	nop
   1747b:	c9                   	leave  
   1747c:	c3                   	ret    

000000000001747d <neighbor_right>:
   1747d:	f3 0f 1e fa          	endbr64 
   17481:	55                   	push   %rbp
   17482:	48 89 e5             	mov    %rsp,%rbp
   17485:	48 83 ec 28          	sub    $0x28,%rsp
   17489:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1748d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17491:	48 89 c7             	mov    %rax,%rdi
   17494:	e8 cd fc ff ff       	call   17166 <block_end>
   17499:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1749d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   174a5:	48 89 d6             	mov    %rdx,%rsi
   174a8:	48 89 c7             	mov    %rax,%rdi
   174ab:	e8 db fc ff ff       	call   1718b <find_used_in_reserve>
   174b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   174b4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   174b9:	75 07                	jne    174c2 <neighbor_right+0x45>
   174bb:	b8 00 00 00 00       	mov    $0x0,%eax
   174c0:	eb 56                	jmp    17518 <neighbor_right+0x9b>
   174c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   174c6:	48 8b 10             	mov    (%rax),%rdx
   174c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   174cd:	48 8b 40 10          	mov    0x10(%rax),%rax
   174d1:	48 01 d0             	add    %rdx,%rax
   174d4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   174d8:	75 07                	jne    174e1 <neighbor_right+0x64>
   174da:	b8 00 00 00 00       	mov    $0x0,%eax
   174df:	eb 37                	jmp    17518 <neighbor_right+0x9b>
   174e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174e5:	48 89 c7             	mov    %rax,%rdi
   174e8:	e8 5a fc ff ff       	call   17147 <block_size>
   174ed:	48 89 c2             	mov    %rax,%rdx
   174f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174f4:	48 89 d6             	mov    %rdx,%rsi
   174f7:	48 89 c7             	mov    %rax,%rdi
   174fa:	e8 8c fc ff ff       	call   1718b <find_used_in_reserve>
   174ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17503:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17507:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1750b:	74 07                	je     17514 <neighbor_right+0x97>
   1750d:	b8 00 00 00 00       	mov    $0x0,%eax
   17512:	eb 04                	jmp    17518 <neighbor_right+0x9b>
   17514:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17518:	c9                   	leave  
   17519:	c3                   	ret    

000000000001751a <possibly_merge>:
   1751a:	f3 0f 1e fa          	endbr64 
   1751e:	55                   	push   %rbp
   1751f:	48 89 e5             	mov    %rsp,%rbp
   17522:	48 83 ec 20          	sub    $0x20,%rsp
   17526:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1752a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1752e:	48 89 c7             	mov    %rax,%rdi
   17531:	e8 47 ff ff ff       	call   1747d <neighbor_right>
   17536:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1753a:	eb 3b                	jmp    17577 <possibly_merge+0x5d>
   1753c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17540:	48 89 c7             	mov    %rax,%rdi
   17543:	e8 fa fd ff ff       	call   17342 <remove_from_lists>
   17548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1754c:	48 89 c7             	mov    %rax,%rdi
   1754f:	e8 f3 fb ff ff       	call   17147 <block_size>
   17554:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17558:	48 8b 12             	mov    (%rdx),%rdx
   1755b:	48 01 c2             	add    %rax,%rdx
   1755e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17562:	48 89 10             	mov    %rdx,(%rax)
   17565:	48 8b 05 1c a9 04 00 	mov    0x4a91c(%rip),%rax        # 61e88 <num_free_blocks>
   1756c:	48 83 e8 01          	sub    $0x1,%rax
   17570:	48 89 05 11 a9 04 00 	mov    %rax,0x4a911(%rip)        # 61e88 <num_free_blocks>
   17577:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1757c:	74 10                	je     1758e <possibly_merge+0x74>
   1757e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17582:	48 89 c7             	mov    %rax,%rdi
   17585:	e8 9a fb ff ff       	call   17124 <is_alloced>
   1758a:	84 c0                	test   %al,%al
   1758c:	75 ae                	jne    1753c <possibly_merge+0x22>
   1758e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17592:	c9                   	leave  
   17593:	c3                   	ret    

0000000000017594 <put_free_block>:
   17594:	f3 0f 1e fa          	endbr64 
   17598:	55                   	push   %rbp
   17599:	48 89 e5             	mov    %rsp,%rbp
   1759c:	48 83 ec 10          	sub    $0x10,%rsp
   175a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   175a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175a8:	48 89 c7             	mov    %rax,%rdi
   175ab:	e8 97 fb ff ff       	call   17147 <block_size>
   175b0:	ba 08 08 00 00       	mov    $0x808,%edx
   175b5:	48 39 d0             	cmp    %rdx,%rax
   175b8:	77 0e                	ja     175c8 <put_free_block+0x34>
   175ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175be:	48 89 c7             	mov    %rax,%rdi
   175c1:	e8 55 fe ff ff       	call   1741b <put_exact_block>
   175c6:	eb 25                	jmp    175ed <put_free_block+0x59>
   175c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175cc:	48 8d 35 ad a8 04 00 	lea    0x4a8ad(%rip),%rsi        # 61e80 <large_block_list>
   175d3:	48 89 c7             	mov    %rax,%rdi
   175d6:	e8 df fd ff ff       	call   173ba <prepend_to_list>
   175db:	48 8b 05 a6 a8 04 00 	mov    0x4a8a6(%rip),%rax        # 61e88 <num_free_blocks>
   175e2:	48 83 c0 01          	add    $0x1,%rax
   175e6:	48 89 05 9b a8 04 00 	mov    %rax,0x4a89b(%rip)        # 61e88 <num_free_blocks>
   175ed:	c9                   	leave  
   175ee:	c3                   	ret    

00000000000175ef <split_free_block>:
   175ef:	f3 0f 1e fa          	endbr64 
   175f3:	55                   	push   %rbp
   175f4:	48 89 e5             	mov    %rsp,%rbp
   175f7:	48 83 ec 20          	sub    $0x20,%rsp
   175fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   175ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17607:	48 8b 00             	mov    (%rax),%rax
   1760a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1760e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17612:	48 83 7d f0 0f       	cmpq   $0xf,-0x10(%rbp)
   17617:	77 1f                	ja     17638 <split_free_block+0x49>
   17619:	48 8d 0d a8 c0 01 00 	lea    0x1c0a8(%rip),%rcx        # 336c8 <alloc_mask+0x58>
   17620:	48 8d 15 59 c1 01 00 	lea    0x1c159(%rip),%rdx        # 33780 <__func__.1606>
   17627:	be 1f 01 00 00       	mov    $0x11f,%esi
   1762c:	48 8d 3d 67 c0 01 00 	lea    0x1c067(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   17633:	e8 11 1c 00 00       	call   19249 <__assert>
   17638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1763c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17640:	48 89 10             	mov    %rdx,(%rax)
   17643:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17647:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1764b:	48 01 d0             	add    %rdx,%rax
   1764e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17656:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1765a:	48 89 10             	mov    %rdx,(%rax)
   1765d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17661:	c9                   	leave  
   17662:	c3                   	ret    

0000000000017663 <get_exact_match>:
   17663:	f3 0f 1e fa          	endbr64 
   17667:	55                   	push   %rbp
   17668:	48 89 e5             	mov    %rsp,%rbp
   1766b:	48 83 ec 20          	sub    $0x20,%rsp
   1766f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17673:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17677:	48 89 c7             	mov    %rax,%rdi
   1767a:	e8 87 fb ff ff       	call   17206 <get_list_idx>
   1767f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17683:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17687:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1768e:	00 
   1768f:	48 8d 05 ea 9f 04 00 	lea    0x49fea(%rip),%rax        # 61680 <exact_block_list>
   17696:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1769a:	48 85 c0             	test   %rax,%rax
   1769d:	75 0a                	jne    176a9 <get_exact_match+0x46>
   1769f:	b8 00 00 00 00       	mov    $0x0,%eax
   176a4:	e9 92 00 00 00       	jmp    1773b <get_exact_match+0xd8>
   176a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   176ad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   176b4:	00 
   176b5:	48 8d 05 c4 9f 04 00 	lea    0x49fc4(%rip),%rax        # 61680 <exact_block_list>
   176bc:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   176c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   176c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   176cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176d0:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   176d7:	00 
   176d8:	48 8d 15 a1 9f 04 00 	lea    0x49fa1(%rip),%rdx        # 61680 <exact_block_list>
   176df:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   176e3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   176e8:	74 3b                	je     17725 <get_exact_match+0xc2>
   176ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   176ee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   176f5:	00 
   176f6:	48 8d 05 83 9f 04 00 	lea    0x49f83(%rip),%rax        # 61680 <exact_block_list>
   176fd:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   17701:	48 85 c0             	test   %rax,%rax
   17704:	74 1f                	je     17725 <get_exact_match+0xc2>
   17706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1770a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17711:	00 
   17712:	48 8d 05 67 9f 04 00 	lea    0x49f67(%rip),%rax        # 61680 <exact_block_list>
   17719:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1771d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17724:	00 
   17725:	48 8b 05 5c a7 04 00 	mov    0x4a75c(%rip),%rax        # 61e88 <num_free_blocks>
   1772c:	48 83 e8 01          	sub    $0x1,%rax
   17730:	48 89 05 51 a7 04 00 	mov    %rax,0x4a751(%rip)        # 61e88 <num_free_blocks>
   17737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1773b:	c9                   	leave  
   1773c:	c3                   	ret    

000000000001773d <get_free_block>:
   1773d:	f3 0f 1e fa          	endbr64 
   17741:	55                   	push   %rbp
   17742:	48 89 e5             	mov    %rsp,%rbp
   17745:	48 83 ec 30          	sub    $0x30,%rsp
   17749:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1774d:	b8 08 08 00 00       	mov    $0x808,%eax
   17752:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   17756:	77 11                	ja     17769 <get_free_block+0x2c>
   17758:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1775c:	48 89 c7             	mov    %rax,%rdi
   1775f:	e8 ff fe ff ff       	call   17663 <get_exact_match>
   17764:	e9 e5 00 00 00       	jmp    1784e <get_free_block+0x111>
   17769:	48 8b 05 10 a7 04 00 	mov    0x4a710(%rip),%rax        # 61e80 <large_block_list>
   17770:	48 85 c0             	test   %rax,%rax
   17773:	75 0a                	jne    1777f <get_free_block+0x42>
   17775:	b8 00 00 00 00       	mov    $0x0,%eax
   1777a:	e9 cf 00 00 00       	jmp    1784e <get_free_block+0x111>
   1777f:	48 8b 05 fa a6 04 00 	mov    0x4a6fa(%rip),%rax        # 61e80 <large_block_list>
   17786:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1778a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   17791:	00 
   17792:	eb 45                	jmp    177d9 <get_free_block+0x9c>
   17794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17798:	48 8b 00             	mov    (%rax),%rax
   1779b:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1779f:	77 2c                	ja     177cd <get_free_block+0x90>
   177a1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   177a6:	75 0a                	jne    177b2 <get_free_block+0x75>
   177a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   177b0:	eb 1b                	jmp    177cd <get_free_block+0x90>
   177b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177b6:	48 8b 10             	mov    (%rax),%rdx
   177b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177bd:	48 8b 00             	mov    (%rax),%rax
   177c0:	48 39 c2             	cmp    %rax,%rdx
   177c3:	76 08                	jbe    177cd <get_free_block+0x90>
   177c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   177cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177d1:	48 8b 40 08          	mov    0x8(%rax),%rax
   177d5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   177d9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   177de:	75 b4                	jne    17794 <get_free_block+0x57>
   177e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   177e5:	75 07                	jne    177ee <get_free_block+0xb1>
   177e7:	b8 00 00 00 00       	mov    $0x0,%eax
   177ec:	eb 60                	jmp    1784e <get_free_block+0x111>
   177ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177f2:	48 8d 35 87 a6 04 00 	lea    0x4a687(%rip),%rsi        # 61e80 <large_block_list>
   177f9:	48 89 c7             	mov    %rax,%rdi
   177fc:	e8 8d fa ff ff       	call   1728e <remove_from_list>
   17801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17805:	48 8b 00             	mov    (%rax),%rax
   17808:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1780c:	48 83 c2 10          	add    $0x10,%rdx
   17810:	48 39 d0             	cmp    %rdx,%rax
   17813:	72 23                	jb     17838 <get_free_block+0xfb>
   17815:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17819:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1781d:	48 89 d6             	mov    %rdx,%rsi
   17820:	48 89 c7             	mov    %rax,%rdi
   17823:	e8 c7 fd ff ff       	call   175ef <split_free_block>
   17828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1782c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17830:	48 89 c7             	mov    %rax,%rdi
   17833:	e8 5c fd ff ff       	call   17594 <put_free_block>
   17838:	48 8b 05 49 a6 04 00 	mov    0x4a649(%rip),%rax        # 61e88 <num_free_blocks>
   1783f:	48 83 e8 01          	sub    $0x1,%rax
   17843:	48 89 05 3e a6 04 00 	mov    %rax,0x4a63e(%rip)        # 61e88 <num_free_blocks>
   1784a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1784e:	c9                   	leave  
   1784f:	c3                   	ret    

0000000000017850 <get_large_block_end_at>:
   17850:	f3 0f 1e fa          	endbr64 
   17854:	55                   	push   %rbp
   17855:	48 89 e5             	mov    %rsp,%rbp
   17858:	48 83 ec 18          	sub    $0x18,%rsp
   1785c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17860:	48 8b 05 19 a6 04 00 	mov    0x4a619(%rip),%rax        # 61e80 <large_block_list>
   17867:	48 85 c0             	test   %rax,%rax
   1786a:	75 07                	jne    17873 <get_large_block_end_at+0x23>
   1786c:	b8 00 00 00 00       	mov    $0x0,%eax
   17871:	eb 52                	jmp    178c5 <get_large_block_end_at+0x75>
   17873:	48 8b 05 06 a6 04 00 	mov    0x4a606(%rip),%rax        # 61e80 <large_block_list>
   1787a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1787e:	eb 39                	jmp    178b9 <get_large_block_end_at+0x69>
   17880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17884:	48 8b 10             	mov    (%rax),%rdx
   17887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1788b:	48 01 d0             	add    %rdx,%rax
   1788e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17892:	75 19                	jne    178ad <get_large_block_end_at+0x5d>
   17894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17898:	48 8d 35 e1 a5 04 00 	lea    0x4a5e1(%rip),%rsi        # 61e80 <large_block_list>
   1789f:	48 89 c7             	mov    %rax,%rdi
   178a2:	e8 e7 f9 ff ff       	call   1728e <remove_from_list>
   178a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178ab:	eb 18                	jmp    178c5 <get_large_block_end_at+0x75>
   178ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178b1:	48 8b 40 08          	mov    0x8(%rax),%rax
   178b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   178b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   178be:	75 c0                	jne    17880 <get_large_block_end_at+0x30>
   178c0:	b8 00 00 00 00       	mov    $0x0,%eax
   178c5:	c9                   	leave  
   178c6:	c3                   	ret    

00000000000178c7 <merge_large_blocks_to_reserve>:
   178c7:	f3 0f 1e fa          	endbr64 
   178cb:	55                   	push   %rbp
   178cc:	48 89 e5             	mov    %rsp,%rbp
   178cf:	48 83 ec 18          	sub    $0x18,%rsp
   178d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   178d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178db:	48 8b 10             	mov    (%rax),%rdx
   178de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178e2:	48 8b 40 10          	mov    0x10(%rax),%rax
   178e6:	48 01 d0             	add    %rdx,%rax
   178e9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   178ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   178f1:	48 89 c7             	mov    %rax,%rdi
   178f4:	e8 57 ff ff ff       	call   17850 <get_large_block_end_at>
   178f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   178fd:	eb 2d                	jmp    1792c <merge_large_blocks_to_reserve+0x65>
   178ff:	48 8b 05 82 a5 04 00 	mov    0x4a582(%rip),%rax        # 61e88 <num_free_blocks>
   17906:	48 83 e8 01          	sub    $0x1,%rax
   1790a:	48 89 05 77 a5 04 00 	mov    %rax,0x4a577(%rip)        # 61e88 <num_free_blocks>
   17911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17915:	48 8b 00             	mov    (%rax),%rax
   17918:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
   1791c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17920:	48 89 c7             	mov    %rax,%rdi
   17923:	e8 28 ff ff ff       	call   17850 <get_large_block_end_at>
   17928:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1792c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   17931:	75 cc                	jne    178ff <merge_large_blocks_to_reserve+0x38>
   17933:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17937:	48 8b 00             	mov    (%rax),%rax
   1793a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1793e:	48 29 c2             	sub    %rax,%rdx
   17941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17945:	48 89 50 10          	mov    %rdx,0x10(%rax)
   17949:	90                   	nop
   1794a:	c9                   	leave  
   1794b:	c3                   	ret    

000000000001794c <new_reserve>:
   1794c:	f3 0f 1e fa          	endbr64 
   17950:	55                   	push   %rbp
   17951:	48 89 e5             	mov    %rsp,%rbp
   17954:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17958:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1795c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17960:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17964:	48 c7 45 f8 20 00 00 	movq   $0x20,-0x8(%rbp)
   1796b:	00 
   1796c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17974:	48 01 c2             	add    %rax,%rdx
   17977:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1797b:	48 89 10             	mov    %rdx,(%rax)
   1797e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17982:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17989:	00 
   1798a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1798e:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17992:	48 89 c2             	mov    %rax,%rdx
   17995:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17999:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1799d:	48 8b 15 ec a4 04 00 	mov    0x4a4ec(%rip),%rdx        # 61e90 <reserve_list>
   179a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179a8:	48 89 50 18          	mov    %rdx,0x18(%rax)
   179ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179b0:	48 89 05 d9 a4 04 00 	mov    %rax,0x4a4d9(%rip)        # 61e90 <reserve_list>
   179b7:	90                   	nop
   179b8:	5d                   	pop    %rbp
   179b9:	c3                   	ret    

00000000000179ba <alloc_from_reserve>:
   179ba:	f3 0f 1e fa          	endbr64 
   179be:	55                   	push   %rbp
   179bf:	48 89 e5             	mov    %rsp,%rbp
   179c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   179c6:	48 8b 05 c3 a4 04 00 	mov    0x4a4c3(%rip),%rax        # 61e90 <reserve_list>
   179cd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   179d1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   179d8:	00 
   179d9:	eb 57                	jmp    17a32 <alloc_from_reserve+0x78>
   179db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179df:	48 8b 50 08          	mov    0x8(%rax),%rdx
   179e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179e7:	48 8b 40 10          	mov    0x10(%rax),%rax
   179eb:	48 29 c2             	sub    %rax,%rdx
   179ee:	48 89 d0             	mov    %rdx,%rax
   179f1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   179f5:	77 2f                	ja     17a26 <alloc_from_reserve+0x6c>
   179f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179fb:	48 8b 10             	mov    (%rax),%rdx
   179fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a02:	48 8b 40 10          	mov    0x10(%rax),%rax
   17a06:	48 01 d0             	add    %rdx,%rax
   17a09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17a0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a11:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a19:	48 01 c2             	add    %rax,%rdx
   17a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a20:	48 89 50 10          	mov    %rdx,0x10(%rax)
   17a24:	eb 13                	jmp    17a39 <alloc_from_reserve+0x7f>
   17a26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a2a:	48 8b 40 18          	mov    0x18(%rax),%rax
   17a2e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17a32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17a37:	75 a2                	jne    179db <alloc_from_reserve+0x21>
   17a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a3d:	5d                   	pop    %rbp
   17a3e:	c3                   	ret    

0000000000017a3f <add_reserve>:
   17a3f:	f3 0f 1e fa          	endbr64 
   17a43:	55                   	push   %rbp
   17a44:	48 89 e5             	mov    %rsp,%rbp
   17a47:	48 83 ec 30          	sub    $0x30,%rsp
   17a4b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17a4f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17a56:	00 00 
   17a58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17a5c:	31 c0                	xor    %eax,%eax
   17a5e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   17a65:	00 
   17a66:	0f b6 05 2b a4 04 00 	movzbl 0x4a42b(%rip),%eax        # 61e98 <adding_reserve>
   17a6d:	84 c0                	test   %al,%al
   17a6f:	74 0a                	je     17a7b <add_reserve+0x3c>
   17a71:	b8 00 00 00 00       	mov    $0x0,%eax
   17a76:	e9 0d 01 00 00       	jmp    17b88 <add_reserve+0x149>
   17a7b:	48 8b 05 7e 36 02 00 	mov    0x2367e(%rip),%rax        # 3b100 <reserve_size_increment>
   17a82:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   17a86:	48 0f 43 45 d8       	cmovae -0x28(%rbp),%rax
   17a8b:	48 89 05 6e 36 02 00 	mov    %rax,0x2366e(%rip)        # 3b100 <reserve_size_increment>
   17a92:	c6 05 ff a3 04 00 01 	movb   $0x1,0x4a3ff(%rip)        # 61e98 <adding_reserve>
   17a99:	b8 00 80 00 00       	mov    $0x8000,%eax
   17a9e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   17aa2:	48 8b 05 57 36 02 00 	mov    0x23657(%rip),%rax        # 3b100 <reserve_size_increment>
   17aa9:	48 01 d0             	add    %rdx,%rax
   17aac:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17ab0:	49 89 d1             	mov    %rdx,%r9
   17ab3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   17ab9:	b9 00 00 00 00       	mov    $0x0,%ecx
   17abe:	ba 01 00 00 00       	mov    $0x1,%edx
   17ac3:	48 89 c6             	mov    %rax,%rsi
   17ac6:	bf 00 00 00 00       	mov    $0x0,%edi
   17acb:	e8 4b 0c 00 00       	call   1871b <sgx_mm_alloc>
   17ad0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   17ad3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   17ad7:	0f 85 9a 00 00 00    	jne    17b77 <add_reserve+0x138>
   17add:	48 8b 05 1c 36 02 00 	mov    0x2361c(%rip),%rax        # 3b100 <reserve_size_increment>
   17ae4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17ae8:	48 89 d1             	mov    %rdx,%rcx
   17aeb:	ba 00 80 00 00       	mov    $0x8000,%edx
   17af0:	48 01 ca             	add    %rcx,%rdx
   17af3:	48 89 d7             	mov    %rdx,%rdi
   17af6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17afa:	49 89 d1             	mov    %rdx,%r9
   17afd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   17b03:	b9 00 00 00 00       	mov    $0x0,%ecx
   17b08:	ba 44 00 00 00       	mov    $0x44,%edx
   17b0d:	48 89 c6             	mov    %rax,%rsi
   17b10:	e8 06 0c 00 00       	call   1871b <sgx_mm_alloc>
   17b15:	89 45 ec             	mov    %eax,-0x14(%rbp)
   17b18:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   17b1c:	75 5c                	jne    17b7a <add_reserve+0x13b>
   17b1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17b26:	48 89 d6             	mov    %rdx,%rsi
   17b29:	48 89 c7             	mov    %rax,%rdi
   17b2c:	e8 35 0d 00 00       	call   18866 <sgx_mm_commit>
   17b31:	48 8b 15 c8 35 02 00 	mov    0x235c8(%rip),%rdx        # 3b100 <reserve_size_increment>
   17b38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b3c:	48 89 d6             	mov    %rdx,%rsi
   17b3f:	48 89 c7             	mov    %rax,%rdi
   17b42:	e8 05 fe ff ff       	call   1794c <new_reserve>
   17b47:	48 8b 05 b2 35 02 00 	mov    0x235b2(%rip),%rax        # 3b100 <reserve_size_increment>
   17b4e:	48 01 c0             	add    %rax,%rax
   17b51:	48 89 05 a8 35 02 00 	mov    %rax,0x235a8(%rip)        # 3b100 <reserve_size_increment>
   17b58:	48 8b 05 a1 35 02 00 	mov    0x235a1(%rip),%rax        # 3b100 <reserve_size_increment>
   17b5f:	ba 00 00 00 10       	mov    $0x10000000,%edx
   17b64:	48 39 d0             	cmp    %rdx,%rax
   17b67:	76 14                	jbe    17b7d <add_reserve+0x13e>
   17b69:	b8 00 00 00 10       	mov    $0x10000000,%eax
   17b6e:	48 89 05 8b 35 02 00 	mov    %rax,0x2358b(%rip)        # 3b100 <reserve_size_increment>
   17b75:	eb 07                	jmp    17b7e <add_reserve+0x13f>
   17b77:	90                   	nop
   17b78:	eb 04                	jmp    17b7e <add_reserve+0x13f>
   17b7a:	90                   	nop
   17b7b:	eb 01                	jmp    17b7e <add_reserve+0x13f>
   17b7d:	90                   	nop
   17b7e:	c6 05 13 a3 04 00 00 	movb   $0x0,0x4a313(%rip)        # 61e98 <adding_reserve>
   17b85:	8b 45 ec             	mov    -0x14(%rbp),%eax
   17b88:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   17b8c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   17b93:	00 00 
   17b95:	74 05                	je     17b9c <add_reserve+0x15d>
   17b97:	e8 5b bc 00 00       	call   237f7 <__stack_chk_fail>
   17b9c:	c9                   	leave  
   17b9d:	c3                   	ret    

0000000000017b9e <alloc_from_meta>:
   17b9e:	f3 0f 1e fa          	endbr64 
   17ba2:	55                   	push   %rbp
   17ba3:	48 89 e5             	mov    %rsp,%rbp
   17ba6:	48 83 ec 20          	sub    $0x20,%rsp
   17baa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17bae:	0f b6 05 e3 a2 04 00 	movzbl 0x4a2e3(%rip),%eax        # 61e98 <adding_reserve>
   17bb5:	84 c0                	test   %al,%al
   17bb7:	75 1f                	jne    17bd8 <alloc_from_meta+0x3a>
   17bb9:	48 8d 0d 29 bb 01 00 	lea    0x1bb29(%rip),%rcx        # 336e9 <alloc_mask+0x79>
   17bc0:	48 8d 15 d9 bb 01 00 	lea    0x1bbd9(%rip),%rdx        # 337a0 <__func__.1663>
   17bc7:	be be 01 00 00       	mov    $0x1be,%esi
   17bcc:	48 8d 3d c7 ba 01 00 	lea    0x1bac7(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   17bd3:	e8 71 16 00 00       	call   19249 <__assert>
   17bd8:	48 8b 15 81 9a 04 00 	mov    0x49a81(%rip),%rdx        # 61660 <meta_used>
   17bdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17be3:	48 01 d0             	add    %rdx,%rax
   17be6:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
   17bec:	76 07                	jbe    17bf5 <alloc_from_meta+0x57>
   17bee:	b8 00 00 00 00       	mov    $0x0,%eax
   17bf3:	eb 49                	jmp    17c3e <alloc_from_meta+0xa0>
   17bf5:	48 8b 05 64 9a 04 00 	mov    0x49a64(%rip),%rax        # 61660 <meta_used>
   17bfc:	48 8d 15 5d 9a 03 00 	lea    0x39a5d(%rip),%rdx        # 51660 <meta_reserve>
   17c03:	48 01 d0             	add    %rdx,%rax
   17c06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17c0a:	48 8b 15 4f 9a 04 00 	mov    0x49a4f(%rip),%rdx        # 61660 <meta_used>
   17c11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c15:	48 01 d0             	add    %rdx,%rax
   17c18:	48 89 05 41 9a 04 00 	mov    %rax,0x49a41(%rip)        # 61660 <meta_used>
   17c1f:	b8 01 00 00 00       	mov    $0x1,%eax
   17c24:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   17c28:	48 89 c2             	mov    %rax,%rdx
   17c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c2f:	48 89 10             	mov    %rdx,(%rax)
   17c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c36:	48 89 c7             	mov    %rax,%rdi
   17c39:	e8 d0 f4 ff ff       	call   1710e <block_to_payload>
   17c3e:	c9                   	leave  
   17c3f:	c3                   	ret    

0000000000017c40 <emalloc_init>:
   17c40:	f3 0f 1e fa          	endbr64 
   17c44:	55                   	push   %rbp
   17c45:	48 89 e5             	mov    %rsp,%rbp
   17c48:	48 83 ec 10          	sub    $0x10,%rsp
   17c4c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   17c53:	eb 20                	jmp    17c75 <emalloc_init+0x35>
   17c55:	8b 45 fc             	mov    -0x4(%rbp),%eax
   17c58:	48 98                	cltq   
   17c5a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17c61:	00 
   17c62:	48 8d 05 17 9a 04 00 	lea    0x49a17(%rip),%rax        # 61680 <exact_block_list>
   17c69:	48 c7 04 02 00 00 00 	movq   $0x0,(%rdx,%rax,1)
   17c70:	00 
   17c71:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   17c75:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
   17c7c:	7e d7                	jle    17c55 <emalloc_init+0x15>
   17c7e:	bf 00 00 01 00       	mov    $0x10000,%edi
   17c83:	e8 b7 fd ff ff       	call   17a3f <add_reserve>
   17c88:	85 c0                	test   %eax,%eax
   17c8a:	74 07                	je     17c93 <emalloc_init+0x53>
   17c8c:	b8 0c 00 00 00       	mov    $0xc,%eax
   17c91:	eb 05                	jmp    17c98 <emalloc_init+0x58>
   17c93:	b8 00 00 00 00       	mov    $0x0,%eax
   17c98:	c9                   	leave  
   17c99:	c3                   	ret    

0000000000017c9a <emalloc>:
   17c9a:	f3 0f 1e fa          	endbr64 
   17c9e:	55                   	push   %rbp
   17c9f:	48 89 e5             	mov    %rsp,%rbp
   17ca2:	48 83 ec 30          	sub    $0x30,%rsp
   17ca6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17caa:	48 8b 15 3f 34 02 00 	mov    0x2343f(%rip),%rdx        # 3b0f0 <header_size>
   17cb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17cb5:	48 01 d0             	add    %rdx,%rax
   17cb8:	48 83 c0 07          	add    $0x7,%rax
   17cbc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17cc0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17cc4:	48 83 7d e8 0f       	cmpq   $0xf,-0x18(%rbp)
   17cc9:	77 08                	ja     17cd3 <emalloc+0x39>
   17ccb:	48 c7 45 e8 10 00 00 	movq   $0x10,-0x18(%rbp)
   17cd2:	00 
   17cd3:	0f b6 05 be a1 04 00 	movzbl 0x4a1be(%rip),%eax        # 61e98 <adding_reserve>
   17cda:	84 c0                	test   %al,%al
   17cdc:	74 11                	je     17cef <emalloc+0x55>
   17cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ce2:	48 89 c7             	mov    %rax,%rdi
   17ce5:	e8 b4 fe ff ff       	call   17b9e <alloc_from_meta>
   17cea:	e9 b5 00 00 00       	jmp    17da4 <emalloc+0x10a>
   17cef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cf3:	48 89 c7             	mov    %rax,%rdi
   17cf6:	e8 42 fa ff ff       	call   1773d <get_free_block>
   17cfb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17cff:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17d04:	74 21                	je     17d27 <emalloc+0x8d>
   17d06:	b8 01 00 00 00       	mov    $0x1,%eax
   17d0b:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   17d0f:	48 89 c2             	mov    %rax,%rdx
   17d12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d16:	48 89 10             	mov    %rdx,(%rax)
   17d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d1d:	48 89 c7             	mov    %rax,%rdi
   17d20:	e8 e9 f3 ff ff       	call   1710e <block_to_payload>
   17d25:	eb 7d                	jmp    17da4 <emalloc+0x10a>
   17d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d2b:	48 89 c7             	mov    %rax,%rdi
   17d2e:	e8 87 fc ff ff       	call   179ba <alloc_from_reserve>
   17d33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17d37:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17d3c:	75 47                	jne    17d85 <emalloc+0xeb>
   17d3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d42:	48 05 1f 00 01 00    	add    $0x1001f,%rax
   17d48:	66 b8 00 00          	mov    $0x0,%ax
   17d4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d54:	48 89 c7             	mov    %rax,%rdi
   17d57:	e8 e3 fc ff ff       	call   17a3f <add_reserve>
   17d5c:	85 c0                	test   %eax,%eax
   17d5e:	74 07                	je     17d67 <emalloc+0xcd>
   17d60:	b8 00 00 00 00       	mov    $0x0,%eax
   17d65:	eb 3d                	jmp    17da4 <emalloc+0x10a>
   17d67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d6b:	48 89 c7             	mov    %rax,%rdi
   17d6e:	e8 47 fc ff ff       	call   179ba <alloc_from_reserve>
   17d73:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17d77:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17d7c:	75 07                	jne    17d85 <emalloc+0xeb>
   17d7e:	b8 00 00 00 00       	mov    $0x0,%eax
   17d83:	eb 1f                	jmp    17da4 <emalloc+0x10a>
   17d85:	b8 01 00 00 00       	mov    $0x1,%eax
   17d8a:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   17d8e:	48 89 c2             	mov    %rax,%rdx
   17d91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d95:	48 89 10             	mov    %rdx,(%rax)
   17d98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d9c:	48 89 c7             	mov    %rax,%rdi
   17d9f:	e8 6a f3 ff ff       	call   1710e <block_to_payload>
   17da4:	c9                   	leave  
   17da5:	c3                   	ret    

0000000000017da6 <reconfigure_block>:
   17da6:	f3 0f 1e fa          	endbr64 
   17daa:	55                   	push   %rbp
   17dab:	48 89 e5             	mov    %rsp,%rbp
   17dae:	48 83 ec 10          	sub    $0x10,%rsp
   17db2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dba:	48 8b 10             	mov    (%rax),%rdx
   17dbd:	48 8b 05 34 33 02 00 	mov    0x23334(%rip),%rax        # 3b0f8 <size_mask>
   17dc4:	48 21 c2             	and    %rax,%rdx
   17dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dcb:	48 89 10             	mov    %rdx,(%rax)
   17dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dd2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17dd9:	00 
   17dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dde:	48 8b 00             	mov    (%rax),%rax
   17de1:	48 83 f8 10          	cmp    $0x10,%rax
   17de5:	76 0c                	jbe    17df3 <reconfigure_block+0x4d>
   17de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17deb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17df2:	00 
   17df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17df7:	48 89 c7             	mov    %rax,%rdi
   17dfa:	e8 1b f7 ff ff       	call   1751a <possibly_merge>
   17dff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e07:	c9                   	leave  
   17e08:	c3                   	ret    

0000000000017e09 <can_erealloc>:
   17e09:	f3 0f 1e fa          	endbr64 
   17e0d:	55                   	push   %rbp
   17e0e:	48 89 e5             	mov    %rsp,%rbp
   17e11:	48 83 ec 28          	sub    $0x28,%rsp
   17e15:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17e19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e1d:	48 89 c7             	mov    %rax,%rdi
   17e20:	e8 ca f2 ff ff       	call   170ef <payload_to_block>
   17e25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17e29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e35:	48 89 c7             	mov    %rax,%rdi
   17e38:	e8 0a f3 ff ff       	call   17147 <block_size>
   17e3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17e41:	0f b6 05 50 a0 04 00 	movzbl 0x4a050(%rip),%eax        # 61e98 <adding_reserve>
   17e48:	84 c0                	test   %al,%al
   17e4a:	74 07                	je     17e53 <can_erealloc+0x4a>
   17e4c:	b8 01 00 00 00       	mov    $0x1,%eax
   17e51:	eb 30                	jmp    17e83 <can_erealloc+0x7a>
   17e53:	48 8d 05 06 98 04 00 	lea    0x49806(%rip),%rax        # 61660 <meta_used>
   17e5a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17e5e:	73 1e                	jae    17e7e <can_erealloc+0x75>
   17e60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e68:	48 01 c2             	add    %rax,%rdx
   17e6b:	48 8d 05 ee 97 03 00 	lea    0x397ee(%rip),%rax        # 51660 <meta_reserve>
   17e72:	48 39 c2             	cmp    %rax,%rdx
   17e75:	76 07                	jbe    17e7e <can_erealloc+0x75>
   17e77:	b8 00 00 00 00       	mov    $0x0,%eax
   17e7c:	eb 05                	jmp    17e83 <can_erealloc+0x7a>
   17e7e:	b8 01 00 00 00       	mov    $0x1,%eax
   17e83:	c9                   	leave  
   17e84:	c3                   	ret    

0000000000017e85 <efree>:
   17e85:	f3 0f 1e fa          	endbr64 
   17e89:	55                   	push   %rbp
   17e8a:	48 89 e5             	mov    %rsp,%rbp
   17e8d:	48 83 ec 40          	sub    $0x40,%rsp
   17e91:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17e95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17e99:	48 89 c7             	mov    %rax,%rdi
   17e9c:	e8 4e f2 ff ff       	call   170ef <payload_to_block>
   17ea1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   17ea5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17ea9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17ead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17eb1:	48 89 c7             	mov    %rax,%rdi
   17eb4:	e8 8e f2 ff ff       	call   17147 <block_size>
   17eb9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17ebd:	48 8d 05 9c 97 04 00 	lea    0x4979c(%rip),%rax        # 61660 <meta_used>
   17ec4:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   17ec8:	0f 83 92 00 00 00    	jae    17f60 <efree+0xdb>
   17ece:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17ed2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ed6:	48 01 c2             	add    %rax,%rdx
   17ed9:	48 8d 05 80 97 03 00 	lea    0x39780(%rip),%rax        # 51660 <meta_reserve>
   17ee0:	48 39 c2             	cmp    %rax,%rdx
   17ee3:	76 7b                	jbe    17f60 <efree+0xdb>
   17ee5:	0f b6 05 ac 9f 04 00 	movzbl 0x49fac(%rip),%eax        # 61e98 <adding_reserve>
   17eec:	84 c0                	test   %al,%al
   17eee:	74 6b                	je     17f5b <efree+0xd6>
   17ef0:	48 8d 05 69 97 03 00 	lea    0x39769(%rip),%rax        # 51660 <meta_reserve>
   17ef7:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   17efb:	73 1f                	jae    17f1c <efree+0x97>
   17efd:	48 8d 0d f4 b7 01 00 	lea    0x1b7f4(%rip),%rcx        # 336f8 <alloc_mask+0x88>
   17f04:	48 8d 15 a5 b8 01 00 	lea    0x1b8a5(%rip),%rdx        # 337b0 <__func__.1692>
   17f0b:	be 16 02 00 00       	mov    $0x216,%esi
   17f10:	48 8d 3d 83 b7 01 00 	lea    0x1b783(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   17f17:	e8 2d 13 00 00       	call   19249 <__assert>
   17f1c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17f20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f24:	48 01 c2             	add    %rax,%rdx
   17f27:	48 8d 05 32 97 04 00 	lea    0x49732(%rip),%rax        # 61660 <meta_used>
   17f2e:	48 39 c2             	cmp    %rax,%rdx
   17f31:	0f 86 c8 00 00 00    	jbe    17fff <efree+0x17a>
   17f37:	48 8d 0d e2 b7 01 00 	lea    0x1b7e2(%rip),%rcx        # 33720 <alloc_mask+0xb0>
   17f3e:	48 8d 15 6b b8 01 00 	lea    0x1b86b(%rip),%rdx        # 337b0 <__func__.1692>
   17f45:	be 17 02 00 00       	mov    $0x217,%esi
   17f4a:	48 8d 3d 49 b7 01 00 	lea    0x1b749(%rip),%rdi        # 3369a <alloc_mask+0x2a>
   17f51:	e8 f3 12 00 00       	call   19249 <__assert>
   17f56:	e9 a4 00 00 00       	jmp    17fff <efree+0x17a>
   17f5b:	e8 3b 9b 01 00       	call   31a9b <abort>
   17f60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f64:	48 89 c7             	mov    %rax,%rdi
   17f67:	e8 db f1 ff ff       	call   17147 <block_size>
   17f6c:	48 89 c2             	mov    %rax,%rdx
   17f6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f73:	48 89 d6             	mov    %rdx,%rsi
   17f76:	48 89 c7             	mov    %rax,%rdi
   17f79:	e8 0d f2 ff ff       	call   1718b <find_used_in_reserve>
   17f7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17f82:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17f87:	75 05                	jne    17f8e <efree+0x109>
   17f89:	e8 0d 9b 01 00       	call   31a9b <abort>
   17f8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f92:	48 89 c7             	mov    %rax,%rdi
   17f95:	e8 0c fe ff ff       	call   17da6 <reconfigure_block>
   17f9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   17f9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17fa2:	48 89 c7             	mov    %rax,%rdi
   17fa5:	e8 bc f1 ff ff       	call   17166 <block_end>
   17faa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17fae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fb2:	48 8b 00             	mov    (%rax),%rax
   17fb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17fb9:	48 29 c2             	sub    %rax,%rdx
   17fbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fc0:	48 8b 40 10          	mov    0x10(%rax),%rax
   17fc4:	48 39 c2             	cmp    %rax,%rdx
   17fc7:	75 28                	jne    17ff1 <efree+0x16c>
   17fc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fcd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17fd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17fd5:	48 8b 00             	mov    (%rax),%rax
   17fd8:	48 29 c2             	sub    %rax,%rdx
   17fdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fdf:	48 89 50 10          	mov    %rdx,0x10(%rax)
   17fe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fe7:	48 89 c7             	mov    %rax,%rdi
   17fea:	e8 d8 f8 ff ff       	call   178c7 <merge_large_blocks_to_reserve>
   17fef:	eb 0f                	jmp    18000 <efree+0x17b>
   17ff1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17ff5:	48 89 c7             	mov    %rax,%rdi
   17ff8:	e8 97 f5 ff ff       	call   17594 <put_free_block>
   17ffd:	eb 01                	jmp    18000 <efree+0x17b>
   17fff:	90                   	nop
   18000:	c9                   	leave  
   18001:	c3                   	ret    

0000000000018002 <mm_init_ema>:
   18002:	f3 0f 1e fa          	endbr64 
   18006:	55                   	push   %rbp
   18007:	48 89 e5             	mov    %rsp,%rbp
   1800a:	48 83 ec 50          	sub    $0x50,%rsp
   1800e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18012:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18016:	89 55 cc             	mov    %edx,-0x34(%rbp)
   18019:	89 4d c8             	mov    %ecx,-0x38(%rbp)
   1801c:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
   18020:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
   18024:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1802b:	00 00 
   1802d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18031:	31 c0                	xor    %eax,%eax
   18033:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18037:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1803b:	48 89 d6             	mov    %rdx,%rsi
   1803e:	48 89 c7             	mov    %rax,%rdi
   18041:	e8 9a 74 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   18046:	83 f0 01             	xor    $0x1,%eax
   18049:	84 c0                	test   %al,%al
   1804b:	74 0a                	je     18057 <mm_init_ema+0x55>
   1804d:	b8 0d 00 00 00       	mov    $0xd,%eax
   18052:	e9 c7 00 00 00       	jmp    1811e <mm_init_ema+0x11c>
   18057:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1805a:	89 c0                	mov    %eax,%eax
   1805c:	48 25 7e f8 ff ff    	and    $0xfffffffffffff87e,%rax
   18062:	48 85 c0             	test   %rax,%rax
   18065:	74 0a                	je     18071 <mm_init_ema+0x6f>
   18067:	b8 16 00 00 00       	mov    $0x16,%eax
   1806c:	e9 ad 00 00 00       	jmp    1811e <mm_init_ema+0x11c>
   18071:	8b 45 c8             	mov    -0x38(%rbp),%eax
   18074:	83 e0 f8             	and    $0xfffffff8,%eax
   18077:	85 c0                	test   %eax,%eax
   18079:	74 0a                	je     18085 <mm_init_ema+0x83>
   1807b:	b8 16 00 00 00       	mov    $0x16,%eax
   18080:	e9 99 00 00 00       	jmp    1811e <mm_init_ema+0x11c>
   18085:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1808c:	00 
   1808d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18091:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   18095:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18099:	48 89 c6             	mov    %rax,%rsi
   1809c:	48 8d 3d e5 2f 02 00 	lea    0x22fe5(%rip),%rdi        # 3b088 <g_rts_ema_root>
   180a3:	e8 b6 d2 ff ff       	call   1535e <find_free_region_at>
   180a8:	83 f0 01             	xor    $0x1,%eax
   180ab:	84 c0                	test   %al,%al
   180ad:	74 07                	je     180b6 <mm_init_ema+0xb4>
   180af:	b8 16 00 00 00       	mov    $0x16,%eax
   180b4:	eb 68                	jmp    1811e <mm_init_ema+0x11c>
   180b6:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   180ba:	8b 45 cc             	mov    -0x34(%rbp),%eax
   180bd:	25 00 ff 00 00       	and    $0xff00,%eax
   180c2:	0b 45 c8             	or     -0x38(%rbp),%eax
   180c5:	48 63 c8             	movslq %eax,%rcx
   180c8:	8b 45 cc             	mov    -0x34(%rbp),%eax
   180cb:	0f b6 d0             	movzbl %al,%edx
   180ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180d2:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
   180d6:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   180da:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   180de:	48 83 ec 08          	sub    $0x8,%rsp
   180e2:	57                   	push   %rdi
   180e3:	48 89 c7             	mov    %rax,%rdi
   180e6:	e8 c8 d3 ff ff       	call   154b3 <ema_new>
   180eb:	48 83 c4 10          	add    $0x10,%rsp
   180ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   180f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   180f8:	75 07                	jne    18101 <mm_init_ema+0xff>
   180fa:	b8 0c 00 00 00       	mov    $0xc,%eax
   180ff:	eb 1d                	jmp    1811e <mm_init_ema+0x11c>
   18101:	8b 45 cc             	mov    -0x34(%rbp),%eax
   18104:	83 e0 01             	and    $0x1,%eax
   18107:	85 c0                	test   %eax,%eax
   18109:	74 07                	je     18112 <mm_init_ema+0x110>
   1810b:	b8 00 00 00 00       	mov    $0x0,%eax
   18110:	eb 0c                	jmp    1811e <mm_init_ema+0x11c>
   18112:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18116:	48 89 c7             	mov    %rax,%rdi
   18119:	e8 bf c5 ff ff       	call   146dd <ema_set_eaccept_full>
   1811e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   18122:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   18129:	00 00 
   1812b:	74 05                	je     18132 <mm_init_ema+0x130>
   1812d:	e8 c5 b6 00 00       	call   237f7 <__stack_chk_fail>
   18132:	c9                   	leave  
   18133:	c3                   	ret    

0000000000018134 <mm_alloc>:
   18134:	f3 0f 1e fa          	endbr64 
   18138:	55                   	push   %rbp
   18139:	48 89 e5             	mov    %rsp,%rbp
   1813c:	48 83 ec 30          	sub    $0x30,%rsp
   18140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18144:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18148:	89 55 ec             	mov    %edx,-0x14(%rbp)
   1814b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   1814f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   18153:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   18157:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
   1815b:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   1815f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18163:	8b 55 ec             	mov    -0x14(%rbp),%edx
   18166:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1816a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1816e:	48 83 ec 08          	sub    $0x8,%rsp
   18172:	48 8d 3d 0f 2f 02 00 	lea    0x22f0f(%rip),%rdi        # 3b088 <g_rts_ema_root>
   18179:	57                   	push   %rdi
   1817a:	48 89 c7             	mov    %rax,%rdi
   1817d:	e8 37 01 00 00       	call   182b9 <mm_alloc_internal>
   18182:	48 83 c4 10          	add    $0x10,%rsp
   18186:	c9                   	leave  
   18187:	c3                   	ret    

0000000000018188 <mm_commit>:
   18188:	f3 0f 1e fa          	endbr64 
   1818c:	55                   	push   %rbp
   1818d:	48 89 e5             	mov    %rsp,%rbp
   18190:	48 83 ec 10          	sub    $0x10,%rsp
   18194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18198:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1819c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   181a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181a4:	48 8d 15 dd 2e 02 00 	lea    0x22edd(%rip),%rdx        # 3b088 <g_rts_ema_root>
   181ab:	48 89 ce             	mov    %rcx,%rsi
   181ae:	48 89 c7             	mov    %rax,%rdi
   181b1:	e8 cf 05 00 00       	call   18785 <mm_commit_internal>
   181b6:	c9                   	leave  
   181b7:	c3                   	ret    

00000000000181b8 <mm_uncommit>:
   181b8:	f3 0f 1e fa          	endbr64 
   181bc:	55                   	push   %rbp
   181bd:	48 89 e5             	mov    %rsp,%rbp
   181c0:	48 83 ec 10          	sub    $0x10,%rsp
   181c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   181cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   181d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181d4:	48 8d 15 ad 2e 02 00 	lea    0x22ead(%rip),%rdx        # 3b088 <g_rts_ema_root>
   181db:	48 89 ce             	mov    %rcx,%rsi
   181de:	48 89 c7             	mov    %rax,%rdi
   181e1:	e8 b0 06 00 00       	call   18896 <mm_uncommit_internal>
   181e6:	c9                   	leave  
   181e7:	c3                   	ret    

00000000000181e8 <mm_dealloc>:
   181e8:	f3 0f 1e fa          	endbr64 
   181ec:	55                   	push   %rbp
   181ed:	48 89 e5             	mov    %rsp,%rbp
   181f0:	48 83 ec 10          	sub    $0x10,%rsp
   181f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   181fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18204:	48 8d 15 7d 2e 02 00 	lea    0x22e7d(%rip),%rdx        # 3b088 <g_rts_ema_root>
   1820b:	48 89 ce             	mov    %rcx,%rsi
   1820e:	48 89 c7             	mov    %rax,%rdi
   18211:	e8 91 07 00 00       	call   189a7 <mm_dealloc_internal>
   18216:	c9                   	leave  
   18217:	c3                   	ret    

0000000000018218 <mm_commit_data>:
   18218:	f3 0f 1e fa          	endbr64 
   1821c:	55                   	push   %rbp
   1821d:	48 89 e5             	mov    %rsp,%rbp
   18220:	48 83 ec 20          	sub    $0x20,%rsp
   18224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18228:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1822c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18230:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   18233:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   18236:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1823a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1823e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18242:	4c 8d 05 3f 2e 02 00 	lea    0x22e3f(%rip),%r8        # 3b088 <g_rts_ema_root>
   18249:	48 89 c7             	mov    %rax,%rdi
   1824c:	e8 67 08 00 00       	call   18ab8 <mm_commit_data_internal>
   18251:	c9                   	leave  
   18252:	c3                   	ret    

0000000000018253 <mm_modify_type>:
   18253:	f3 0f 1e fa          	endbr64 
   18257:	55                   	push   %rbp
   18258:	48 89 e5             	mov    %rsp,%rbp
   1825b:	48 83 ec 20          	sub    $0x20,%rsp
   1825f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18263:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18267:	89 55 ec             	mov    %edx,-0x14(%rbp)
   1826a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1826d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18275:	48 8d 0d 0c 2e 02 00 	lea    0x22e0c(%rip),%rcx        # 3b088 <g_rts_ema_root>
   1827c:	48 89 c7             	mov    %rax,%rdi
   1827f:	e8 f6 09 00 00       	call   18c7a <mm_modify_type_internal>
   18284:	c9                   	leave  
   18285:	c3                   	ret    

0000000000018286 <mm_modify_permissions>:
   18286:	f3 0f 1e fa          	endbr64 
   1828a:	55                   	push   %rbp
   1828b:	48 89 e5             	mov    %rsp,%rbp
   1828e:	48 83 ec 20          	sub    $0x20,%rsp
   18292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1829a:	89 55 ec             	mov    %edx,-0x14(%rbp)
   1829d:	8b 55 ec             	mov    -0x14(%rbp),%edx
   182a0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   182a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182a8:	48 8d 0d d9 2d 02 00 	lea    0x22dd9(%rip),%rcx        # 3b088 <g_rts_ema_root>
   182af:	48 89 c7             	mov    %rax,%rdi
   182b2:	e8 4b 0b 00 00       	call   18e02 <mm_modify_permissions_internal>
   182b7:	c9                   	leave  
   182b8:	c3                   	ret    

00000000000182b9 <mm_alloc_internal>:
   182b9:	f3 0f 1e fa          	endbr64 
   182bd:	55                   	push   %rbp
   182be:	48 89 e5             	mov    %rsp,%rbp
   182c1:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   182c8:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   182cc:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   182d0:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
   182d6:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   182dd:	4c 89 85 68 ff ff ff 	mov    %r8,-0x98(%rbp)
   182e4:	4c 89 8d 60 ff ff ff 	mov    %r9,-0xa0(%rbp)
   182eb:	48 8b 45 10          	mov    0x10(%rbp),%rax
   182ef:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   182f6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   182fd:	00 00 
   182ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18303:	31 c0                	xor    %eax,%eax
   18305:	c7 45 a0 ff ff ff ff 	movl   $0xffffffff,-0x60(%rbp)
   1830c:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   18313:	00 
   18314:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1831b:	00 
   1831c:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   18323:	00 
   18324:	c6 45 9c 00          	movb   $0x0,-0x64(%rbp)
   18328:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   1832e:	25 ff 00 00 00       	and    $0xff,%eax
   18333:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   18336:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   18339:	83 e0 07             	and    $0x7,%eax
   1833c:	85 c0                	test   %eax,%eax
   1833e:	75 0a                	jne    1834a <mm_alloc_internal+0x91>
   18340:	b8 16 00 00 00       	mov    $0x16,%eax
   18345:	e9 bb 03 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   1834a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   18350:	48 98                	cltq   
   18352:	25 00 ff 00 00       	and    $0xff00,%eax
   18357:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1835b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1835f:	80 e4 f8             	and    $0xf8,%ah
   18362:	48 85 c0             	test   %rax,%rax
   18365:	74 0a                	je     18371 <mm_alloc_internal+0xb8>
   18367:	b8 16 00 00 00       	mov    $0x16,%eax
   1836c:	e9 94 03 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   18371:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   18376:	75 08                	jne    18380 <mm_alloc_internal+0xc7>
   18378:	48 c7 45 d0 00 02 00 	movq   $0x200,-0x30(%rbp)
   1837f:	00 
   18380:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18384:	25 ff 0f 00 00       	and    $0xfff,%eax
   18389:	48 85 c0             	test   %rax,%rax
   1838c:	74 0a                	je     18398 <mm_alloc_internal+0xdf>
   1838e:	b8 16 00 00 00       	mov    $0x16,%eax
   18393:	e9 6d 03 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   18398:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   1839e:	c1 e8 18             	shr    $0x18,%eax
   183a1:	88 45 9d             	mov    %al,-0x63(%rbp)
   183a4:	80 7d 9d 00          	cmpb   $0x0,-0x63(%rbp)
   183a8:	75 04                	jne    183ae <mm_alloc_internal+0xf5>
   183aa:	c6 45 9d 0c          	movb   $0xc,-0x63(%rbp)
   183ae:	80 7d 9d 0b          	cmpb   $0xb,-0x63(%rbp)
   183b2:	77 0a                	ja     183be <mm_alloc_internal+0x105>
   183b4:	b8 16 00 00 00       	mov    $0x16,%eax
   183b9:	e9 47 03 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   183be:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
   183c2:	ba 01 00 00 00       	mov    $0x1,%edx
   183c7:	89 c1                	mov    %eax,%ecx
   183c9:	48 d3 e2             	shl    %cl,%rdx
   183cc:	48 89 d0             	mov    %rdx,%rax
   183cf:	48 83 e8 01          	sub    $0x1,%rax
   183d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   183d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   183db:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   183df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   183e3:	48 23 45 e0          	and    -0x20(%rbp),%rax
   183e7:	48 85 c0             	test   %rax,%rax
   183ea:	74 0a                	je     183f6 <mm_alloc_internal+0x13d>
   183ec:	b8 16 00 00 00       	mov    $0x16,%eax
   183f1:	e9 0f 03 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   183f6:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   183fb:	74 24                	je     18421 <mm_alloc_internal+0x168>
   183fd:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   18401:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   18405:	48 89 d6             	mov    %rdx,%rsi
   18408:	48 89 c7             	mov    %rax,%rdi
   1840b:	e8 d0 70 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   18410:	83 f0 01             	xor    $0x1,%eax
   18413:	84 c0                	test   %al,%al
   18415:	74 0a                	je     18421 <mm_alloc_internal+0x168>
   18417:	b8 0d 00 00 00       	mov    $0xd,%eax
   1841c:	e9 e4 02 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   18421:	48 8b 05 78 9a 04 00 	mov    0x49a78(%rip),%rax        # 61ea0 <mm_lock>
   18428:	48 89 c7             	mov    %rax,%rdi
   1842b:	e8 c8 6f ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18430:	85 c0                	test   %eax,%eax
   18432:	74 0a                	je     1843e <mm_alloc_internal+0x185>
   18434:	b8 0e 00 00 00       	mov    $0xe,%eax
   18439:	e9 c7 02 00 00       	jmp    18705 <mm_alloc_internal+0x44c>
   1843e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18442:	48 83 c8 03          	or     $0x3,%rax
   18446:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1844a:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   1844d:	83 e0 01             	and    $0x1,%eax
   18450:	85 c0                	test   %eax,%eax
   18452:	74 08                	je     1845c <mm_alloc_internal+0x1a3>
   18454:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1845b:	00 
   1845c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18460:	48 85 c0             	test   %rax,%rax
   18463:	0f 84 26 01 00 00    	je     1858f <mm_alloc_internal+0x2d6>
   18469:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   1846c:	83 e0 40             	and    $0x40,%eax
   1846f:	85 c0                	test   %eax,%eax
   18471:	0f 95 c0             	setne  %al
   18474:	88 45 9e             	mov    %al,-0x62(%rbp)
   18477:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1847b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1847f:	48 01 d0             	add    %rdx,%rax
   18482:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18486:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1848a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1848e:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   18495:	00 
   18496:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1849d:	00 
   1849e:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
   184a2:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   184a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   184aa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   184ae:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   184b5:	49 89 f8             	mov    %rdi,%r8
   184b8:	48 89 c7             	mov    %rax,%rdi
   184bb:	e8 3d c6 ff ff       	call   14afd <search_ema_range>
   184c0:	85 c0                	test   %eax,%eax
   184c2:	0f 94 c0             	sete   %al
   184c5:	88 45 9f             	mov    %al,-0x61(%rbp)
   184c8:	80 7d 9f 00          	cmpb   $0x0,-0x61(%rbp)
   184cc:	0f 84 82 00 00 00    	je     18554 <mm_alloc_internal+0x29b>
   184d2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   184d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   184da:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   184de:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   184e1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   184e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   184e9:	ff b5 68 ff ff ff    	push   -0x98(%rbp)
   184ef:	ff b5 70 ff ff ff    	push   -0x90(%rbp)
   184f5:	4d 89 c1             	mov    %r8,%r9
   184f8:	41 89 f8             	mov    %edi,%r8d
   184fb:	48 89 c7             	mov    %rax,%rdi
   184fe:	e8 fe e7 ff ff       	call   16d01 <ema_realloc_from_reserve_range>
   18503:	48 83 c4 10          	add    $0x10,%rsp
   18507:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1850b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   18510:	0f 85 69 01 00 00    	jne    1867f <mm_alloc_internal+0x3c6>
   18516:	80 7d 9e 00          	cmpb   $0x0,-0x62(%rbp)
   1851a:	74 0c                	je     18528 <mm_alloc_internal+0x26f>
   1851c:	c7 45 a0 11 00 00 00 	movl   $0x11,-0x60(%rbp)
   18523:	e9 cb 01 00 00       	jmp    186f3 <mm_alloc_internal+0x43a>
   18528:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   1852c:	83 f0 01             	xor    $0x1,%eax
   1852f:	84 c0                	test   %al,%al
   18531:	75 5c                	jne    1858f <mm_alloc_internal+0x2d6>
   18533:	48 8d 0d 7c b2 01 00 	lea    0x1b27c(%rip),%rcx        # 337b6 <__func__.1692+0x6>
   1853a:	48 8d 15 bf b2 01 00 	lea    0x1b2bf(%rip),%rdx        # 33800 <__func__.1574>
   18541:	be 78 00 00 00       	mov    $0x78,%esi
   18546:	48 8d 3d 6e b2 01 00 	lea    0x1b26e(%rip),%rdi        # 337bb <__func__.1692+0xb>
   1854d:	e8 f7 0c 00 00       	call   19249 <__assert>
   18552:	eb 3b                	jmp    1858f <mm_alloc_internal+0x2d6>
   18554:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   18558:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1855c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   18560:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   18567:	48 89 c7             	mov    %rax,%rdi
   1856a:	e8 ef cd ff ff       	call   1535e <find_free_region_at>
   1856f:	88 45 9c             	mov    %al,-0x64(%rbp)
   18572:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   18576:	83 f0 01             	xor    $0x1,%eax
   18579:	84 c0                	test   %al,%al
   1857b:	74 12                	je     1858f <mm_alloc_internal+0x2d6>
   1857d:	80 7d 9e 00          	cmpb   $0x0,-0x62(%rbp)
   18581:	74 0c                	je     1858f <mm_alloc_internal+0x2d6>
   18583:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%rbp)
   1858a:	e9 64 01 00 00       	jmp    186f3 <mm_alloc_internal+0x43a>
   1858f:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   18593:	83 f0 01             	xor    $0x1,%eax
   18596:	84 c0                	test   %al,%al
   18598:	74 38                	je     185d2 <mm_alloc_internal+0x319>
   1859a:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
   1859e:	ba 01 00 00 00       	mov    $0x1,%edx
   185a3:	48 89 d7             	mov    %rdx,%rdi
   185a6:	89 c1                	mov    %eax,%ecx
   185a8:	48 d3 e7             	shl    %cl,%rdi
   185ab:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   185af:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   185b3:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   185b7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   185be:	49 89 c8             	mov    %rcx,%r8
   185c1:	48 89 d1             	mov    %rdx,%rcx
   185c4:	48 89 fa             	mov    %rdi,%rdx
   185c7:	48 89 c7             	mov    %rax,%rdi
   185ca:	e8 94 c9 ff ff       	call   14f63 <find_free_region>
   185cf:	88 45 9c             	mov    %al,-0x64(%rbp)
   185d2:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   185d6:	83 f0 01             	xor    $0x1,%eax
   185d9:	84 c0                	test   %al,%al
   185db:	74 0c                	je     185e9 <mm_alloc_internal+0x330>
   185dd:	c7 45 a0 0c 00 00 00 	movl   $0xc,-0x60(%rbp)
   185e4:	e9 0a 01 00 00       	jmp    186f3 <mm_alloc_internal+0x43a>
   185e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   185ed:	48 85 c0             	test   %rax,%rax
   185f0:	75 1f                	jne    18611 <mm_alloc_internal+0x358>
   185f2:	48 8d 0d d3 b1 01 00 	lea    0x1b1d3(%rip),%rcx        # 337cc <__func__.1692+0x1c>
   185f9:	48 8d 15 00 b2 01 00 	lea    0x1b200(%rip),%rdx        # 33800 <__func__.1574>
   18600:	be 95 00 00 00       	mov    $0x95,%esi
   18605:	48 8d 3d af b1 01 00 	lea    0x1b1af(%rip),%rdi        # 337bb <__func__.1692+0xb>
   1860c:	e8 38 0c 00 00       	call   19249 <__assert>
   18611:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18615:	48 85 c0             	test   %rax,%rax
   18618:	75 1f                	jne    18639 <mm_alloc_internal+0x380>
   1861a:	48 8d 0d b4 b1 01 00 	lea    0x1b1b4(%rip),%rcx        # 337d5 <__func__.1692+0x25>
   18621:	48 8d 15 d8 b1 01 00 	lea    0x1b1d8(%rip),%rdx        # 33800 <__func__.1574>
   18628:	be 96 00 00 00       	mov    $0x96,%esi
   1862d:	48 8d 3d 87 b1 01 00 	lea    0x1b187(%rip),%rdi        # 337bb <__func__.1692+0xb>
   18634:	e8 10 0c 00 00       	call   19249 <__assert>
   18639:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   1863d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18641:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
   18648:	4c 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%r8
   1864f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   18653:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   18656:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   1865a:	48 83 ec 08          	sub    $0x8,%rsp
   1865e:	57                   	push   %rdi
   1865f:	48 89 c7             	mov    %rax,%rdi
   18662:	e8 4c ce ff ff       	call   154b3 <ema_new>
   18667:	48 83 c4 10          	add    $0x10,%rsp
   1866b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1866f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   18674:	75 0c                	jne    18682 <mm_alloc_internal+0x3c9>
   18676:	c7 45 a0 0c 00 00 00 	movl   $0xc,-0x60(%rbp)
   1867d:	eb 74                	jmp    186f3 <mm_alloc_internal+0x43a>
   1867f:	90                   	nop
   18680:	eb 01                	jmp    18683 <mm_alloc_internal+0x3ca>
   18682:	90                   	nop
   18683:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   18688:	75 1f                	jne    186a9 <mm_alloc_internal+0x3f0>
   1868a:	48 8d 0d 4d b1 01 00 	lea    0x1b14d(%rip),%rcx        # 337de <__func__.1692+0x2e>
   18691:	48 8d 15 68 b1 01 00 	lea    0x1b168(%rip),%rdx        # 33800 <__func__.1574>
   18698:	be a0 00 00 00       	mov    $0xa0,%esi
   1869d:	48 8d 3d 17 b1 01 00 	lea    0x1b117(%rip),%rdi        # 337bb <__func__.1692+0xb>
   186a4:	e8 a0 0b 00 00       	call   19249 <__assert>
   186a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   186ad:	48 89 c7             	mov    %rax,%rdi
   186b0:	e8 40 e9 ff ff       	call   16ff5 <ema_do_alloc>
   186b5:	89 45 a0             	mov    %eax,-0x60(%rbp)
   186b8:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   186bc:	75 24                	jne    186e2 <mm_alloc_internal+0x429>
   186be:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   186c5:	00 
   186c6:	74 11                	je     186d9 <mm_alloc_internal+0x420>
   186c8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   186cc:	48 89 c2             	mov    %rax,%rdx
   186cf:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   186d6:	48 89 10             	mov    %rdx,(%rax)
   186d9:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
   186e0:	eb 11                	jmp    186f3 <mm_alloc_internal+0x43a>
   186e2:	90                   	nop
   186e3:	f3 0f 1e fa          	endbr64 
   186e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   186eb:	48 89 c7             	mov    %rax,%rdi
   186ee:	e8 08 cf ff ff       	call   155fb <ema_destroy>
   186f3:	48 8b 05 a6 97 04 00 	mov    0x497a6(%rip),%rax        # 61ea0 <mm_lock>
   186fa:	48 89 c7             	mov    %rax,%rdi
   186fd:	e8 44 6d ff ff       	call   f446 <sgx_mm_mutex_unlock>
   18702:	8b 45 a0             	mov    -0x60(%rbp),%eax
   18705:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   18709:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   18710:	00 00 
   18712:	74 05                	je     18719 <mm_alloc_internal+0x460>
   18714:	e8 de b0 00 00       	call   237f7 <__stack_chk_fail>
   18719:	c9                   	leave  
   1871a:	c3                   	ret    

000000000001871b <sgx_mm_alloc>:
   1871b:	f3 0f 1e fa          	endbr64 
   1871f:	55                   	push   %rbp
   18720:	48 89 e5             	mov    %rsp,%rbp
   18723:	48 83 ec 30          	sub    $0x30,%rsp
   18727:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1872b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1872f:	89 55 ec             	mov    %edx,-0x14(%rbp)
   18732:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   18736:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   1873a:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   1873e:	8b 45 ec             	mov    -0x14(%rbp),%eax
   18741:	48 98                	cltq   
   18743:	25 80 00 00 00       	and    $0x80,%eax
   18748:	48 85 c0             	test   %rax,%rax
   1874b:	74 07                	je     18754 <sgx_mm_alloc+0x39>
   1874d:	b8 16 00 00 00       	mov    $0x16,%eax
   18752:	eb 2f                	jmp    18783 <sgx_mm_alloc+0x68>
   18754:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
   18758:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   1875c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18760:	8b 55 ec             	mov    -0x14(%rbp),%edx
   18763:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1876b:	48 83 ec 08          	sub    $0x8,%rsp
   1876f:	48 8d 3d 72 29 02 00 	lea    0x22972(%rip),%rdi        # 3b0e8 <g_user_ema_root>
   18776:	57                   	push   %rdi
   18777:	48 89 c7             	mov    %rax,%rdi
   1877a:	e8 3a fb ff ff       	call   182b9 <mm_alloc_internal>
   1877f:	48 83 c4 10          	add    $0x10,%rsp
   18783:	c9                   	leave  
   18784:	c3                   	ret    

0000000000018785 <mm_commit_internal>:
   18785:	f3 0f 1e fa          	endbr64 
   18789:	55                   	push   %rbp
   1878a:	48 89 e5             	mov    %rsp,%rbp
   1878d:	48 83 ec 50          	sub    $0x50,%rsp
   18791:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18795:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   18799:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1879d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   187a4:	00 00 
   187a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   187aa:	31 c0                	xor    %eax,%eax
   187ac:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   187b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   187b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   187bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   187bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   187c3:	48 01 d0             	add    %rdx,%rax
   187c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   187ca:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   187d1:	00 
   187d2:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   187d9:	00 
   187da:	48 8b 05 bf 96 04 00 	mov    0x496bf(%rip),%rax        # 61ea0 <mm_lock>
   187e1:	48 89 c7             	mov    %rax,%rdi
   187e4:	e8 0f 6c ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   187e9:	85 c0                	test   %eax,%eax
   187eb:	74 05                	je     187f2 <mm_commit_internal+0x6d>
   187ed:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   187f0:	eb 5e                	jmp    18850 <mm_commit_internal+0xcb>
   187f2:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   187f6:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   187fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   187fe:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18802:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18806:	49 89 f8             	mov    %rdi,%r8
   18809:	48 89 c7             	mov    %rax,%rdi
   1880c:	e8 ec c2 ff ff       	call   14afd <search_ema_range>
   18811:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18814:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18818:	79 09                	jns    18823 <mm_commit_internal+0x9e>
   1881a:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18821:	eb 1b                	jmp    1883e <mm_commit_internal+0xb9>
   18823:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18827:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1882b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1882f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18833:	48 89 c7             	mov    %rax,%rdi
   18836:	e8 fe d1 ff ff       	call   15a39 <ema_do_commit_loop>
   1883b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1883e:	48 8b 05 5b 96 04 00 	mov    0x4965b(%rip),%rax        # 61ea0 <mm_lock>
   18845:	48 89 c7             	mov    %rax,%rdi
   18848:	e8 f9 6b ff ff       	call   f446 <sgx_mm_mutex_unlock>
   1884d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18850:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18854:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1885b:	00 00 
   1885d:	74 05                	je     18864 <mm_commit_internal+0xdf>
   1885f:	e8 93 af 00 00       	call   237f7 <__stack_chk_fail>
   18864:	c9                   	leave  
   18865:	c3                   	ret    

0000000000018866 <sgx_mm_commit>:
   18866:	f3 0f 1e fa          	endbr64 
   1886a:	55                   	push   %rbp
   1886b:	48 89 e5             	mov    %rsp,%rbp
   1886e:	48 83 ec 10          	sub    $0x10,%rsp
   18872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18876:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1887a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1887e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18882:	48 8d 15 5f 28 02 00 	lea    0x2285f(%rip),%rdx        # 3b0e8 <g_user_ema_root>
   18889:	48 89 ce             	mov    %rcx,%rsi
   1888c:	48 89 c7             	mov    %rax,%rdi
   1888f:	e8 f1 fe ff ff       	call   18785 <mm_commit_internal>
   18894:	c9                   	leave  
   18895:	c3                   	ret    

0000000000018896 <mm_uncommit_internal>:
   18896:	f3 0f 1e fa          	endbr64 
   1889a:	55                   	push   %rbp
   1889b:	48 89 e5             	mov    %rsp,%rbp
   1889e:	48 83 ec 50          	sub    $0x50,%rsp
   188a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   188a6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   188aa:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   188ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   188b5:	00 00 
   188b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   188bb:	31 c0                	xor    %eax,%eax
   188bd:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   188c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   188c8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   188cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   188d0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   188d4:	48 01 d0             	add    %rdx,%rax
   188d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   188db:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   188e2:	00 
   188e3:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   188ea:	00 
   188eb:	48 8b 05 ae 95 04 00 	mov    0x495ae(%rip),%rax        # 61ea0 <mm_lock>
   188f2:	48 89 c7             	mov    %rax,%rdi
   188f5:	e8 fe 6a ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   188fa:	85 c0                	test   %eax,%eax
   188fc:	74 05                	je     18903 <mm_uncommit_internal+0x6d>
   188fe:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18901:	eb 5e                	jmp    18961 <mm_uncommit_internal+0xcb>
   18903:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   18907:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   1890b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1890f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18913:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18917:	49 89 f8             	mov    %rdi,%r8
   1891a:	48 89 c7             	mov    %rax,%rdi
   1891d:	e8 db c1 ff ff       	call   14afd <search_ema_range>
   18922:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18925:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18929:	79 09                	jns    18934 <mm_uncommit_internal+0x9e>
   1892b:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18932:	eb 1b                	jmp    1894f <mm_uncommit_internal+0xb9>
   18934:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18938:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1893c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18940:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18944:	48 89 c7             	mov    %rax,%rdi
   18947:	e8 9c d5 ff ff       	call   15ee8 <ema_do_uncommit_loop>
   1894c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1894f:	48 8b 05 4a 95 04 00 	mov    0x4954a(%rip),%rax        # 61ea0 <mm_lock>
   18956:	48 89 c7             	mov    %rax,%rdi
   18959:	e8 e8 6a ff ff       	call   f446 <sgx_mm_mutex_unlock>
   1895e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18961:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18965:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1896c:	00 00 
   1896e:	74 05                	je     18975 <mm_uncommit_internal+0xdf>
   18970:	e8 82 ae 00 00       	call   237f7 <__stack_chk_fail>
   18975:	c9                   	leave  
   18976:	c3                   	ret    

0000000000018977 <sgx_mm_uncommit>:
   18977:	f3 0f 1e fa          	endbr64 
   1897b:	55                   	push   %rbp
   1897c:	48 89 e5             	mov    %rsp,%rbp
   1897f:	48 83 ec 10          	sub    $0x10,%rsp
   18983:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18987:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1898b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1898f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18993:	48 8d 15 4e 27 02 00 	lea    0x2274e(%rip),%rdx        # 3b0e8 <g_user_ema_root>
   1899a:	48 89 ce             	mov    %rcx,%rsi
   1899d:	48 89 c7             	mov    %rax,%rdi
   189a0:	e8 f1 fe ff ff       	call   18896 <mm_uncommit_internal>
   189a5:	c9                   	leave  
   189a6:	c3                   	ret    

00000000000189a7 <mm_dealloc_internal>:
   189a7:	f3 0f 1e fa          	endbr64 
   189ab:	55                   	push   %rbp
   189ac:	48 89 e5             	mov    %rsp,%rbp
   189af:	48 83 ec 50          	sub    $0x50,%rsp
   189b3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   189b7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   189bb:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   189bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   189c6:	00 00 
   189c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   189cc:	31 c0                	xor    %eax,%eax
   189ce:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   189d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   189d9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   189dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   189e1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   189e5:	48 01 d0             	add    %rdx,%rax
   189e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   189ec:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   189f3:	00 
   189f4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   189fb:	00 
   189fc:	48 8b 05 9d 94 04 00 	mov    0x4949d(%rip),%rax        # 61ea0 <mm_lock>
   18a03:	48 89 c7             	mov    %rax,%rdi
   18a06:	e8 ed 69 ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18a0b:	85 c0                	test   %eax,%eax
   18a0d:	74 05                	je     18a14 <mm_dealloc_internal+0x6d>
   18a0f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18a12:	eb 5e                	jmp    18a72 <mm_dealloc_internal+0xcb>
   18a14:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   18a18:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   18a1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18a20:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18a24:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18a28:	49 89 f8             	mov    %rdi,%r8
   18a2b:	48 89 c7             	mov    %rax,%rdi
   18a2e:	e8 ca c0 ff ff       	call   14afd <search_ema_range>
   18a33:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18a36:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18a3a:	79 09                	jns    18a45 <mm_dealloc_internal+0x9e>
   18a3c:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18a43:	eb 1b                	jmp    18a60 <mm_dealloc_internal+0xb9>
   18a45:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18a49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a4d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18a51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18a55:	48 89 c7             	mov    %rax,%rdi
   18a58:	e8 3b d7 ff ff       	call   16198 <ema_do_dealloc_loop>
   18a5d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18a60:	48 8b 05 39 94 04 00 	mov    0x49439(%rip),%rax        # 61ea0 <mm_lock>
   18a67:	48 89 c7             	mov    %rax,%rdi
   18a6a:	e8 d7 69 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   18a6f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18a72:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18a76:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18a7d:	00 00 
   18a7f:	74 05                	je     18a86 <mm_dealloc_internal+0xdf>
   18a81:	e8 71 ad 00 00       	call   237f7 <__stack_chk_fail>
   18a86:	c9                   	leave  
   18a87:	c3                   	ret    

0000000000018a88 <sgx_mm_dealloc>:
   18a88:	f3 0f 1e fa          	endbr64 
   18a8c:	55                   	push   %rbp
   18a8d:	48 89 e5             	mov    %rsp,%rbp
   18a90:	48 83 ec 10          	sub    $0x10,%rsp
   18a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18a9c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18aa4:	48 8d 15 3d 26 02 00 	lea    0x2263d(%rip),%rdx        # 3b0e8 <g_user_ema_root>
   18aab:	48 89 ce             	mov    %rcx,%rsi
   18aae:	48 89 c7             	mov    %rax,%rdi
   18ab1:	e8 f1 fe ff ff       	call   189a7 <mm_dealloc_internal>
   18ab6:	c9                   	leave  
   18ab7:	c3                   	ret    

0000000000018ab8 <mm_commit_data_internal>:
   18ab8:	f3 0f 1e fa          	endbr64 
   18abc:	55                   	push   %rbp
   18abd:	48 89 e5             	mov    %rsp,%rbp
   18ac0:	48 83 ec 60          	sub    $0x60,%rsp
   18ac4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18ac8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   18acc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   18ad0:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
   18ad3:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   18ad7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18ade:	00 00 
   18ae0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18ae4:	31 c0                	xor    %eax,%eax
   18ae6:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   18aed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18af1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18af5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18af9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18afd:	48 01 d0             	add    %rdx,%rax
   18b00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18b04:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   18b0b:	00 
   18b0c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   18b13:	00 
   18b14:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   18b19:	75 0a                	jne    18b25 <mm_commit_data_internal+0x6d>
   18b1b:	b8 16 00 00 00       	mov    $0x16,%eax
   18b20:	e9 04 01 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18b25:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18b29:	25 ff 0f 00 00       	and    $0xfff,%eax
   18b2e:	48 85 c0             	test   %rax,%rax
   18b31:	74 0a                	je     18b3d <mm_commit_data_internal+0x85>
   18b33:	b8 16 00 00 00       	mov    $0x16,%eax
   18b38:	e9 ec 00 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18b3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b41:	25 ff 0f 00 00       	and    $0xfff,%eax
   18b46:	48 85 c0             	test   %rax,%rax
   18b49:	74 0a                	je     18b55 <mm_commit_data_internal+0x9d>
   18b4b:	b8 16 00 00 00       	mov    $0x16,%eax
   18b50:	e9 d4 00 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18b55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18b59:	25 ff 0f 00 00       	and    $0xfff,%eax
   18b5e:	48 85 c0             	test   %rax,%rax
   18b61:	74 0a                	je     18b6d <mm_commit_data_internal+0xb5>
   18b63:	b8 16 00 00 00       	mov    $0x16,%eax
   18b68:	e9 bc 00 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18b6d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   18b70:	83 e0 f8             	and    $0xfffffff8,%eax
   18b73:	85 c0                	test   %eax,%eax
   18b75:	74 0a                	je     18b81 <mm_commit_data_internal+0xc9>
   18b77:	b8 16 00 00 00       	mov    $0x16,%eax
   18b7c:	e9 a8 00 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18b81:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   18b85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18b89:	48 89 d6             	mov    %rdx,%rsi
   18b8c:	48 89 c7             	mov    %rax,%rdi
   18b8f:	e8 4c 69 ff ff       	call   f4e0 <sgx_mm_is_within_enclave>
   18b94:	83 f0 01             	xor    $0x1,%eax
   18b97:	84 c0                	test   %al,%al
   18b99:	74 0a                	je     18ba5 <mm_commit_data_internal+0xed>
   18b9b:	b8 16 00 00 00       	mov    $0x16,%eax
   18ba0:	e9 84 00 00 00       	jmp    18c29 <mm_commit_data_internal+0x171>
   18ba5:	48 8b 05 f4 92 04 00 	mov    0x492f4(%rip),%rax        # 61ea0 <mm_lock>
   18bac:	48 89 c7             	mov    %rax,%rdi
   18baf:	e8 44 68 ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18bb4:	85 c0                	test   %eax,%eax
   18bb6:	74 05                	je     18bbd <mm_commit_data_internal+0x105>
   18bb8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18bbb:	eb 6c                	jmp    18c29 <mm_commit_data_internal+0x171>
   18bbd:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   18bc1:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   18bc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18bc9:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18bcd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18bd1:	49 89 f8             	mov    %rdi,%r8
   18bd4:	48 89 c7             	mov    %rax,%rdi
   18bd7:	e8 21 bf ff ff       	call   14afd <search_ema_range>
   18bdc:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18bdf:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18be3:	79 09                	jns    18bee <mm_commit_data_internal+0x136>
   18be5:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18bec:	eb 29                	jmp    18c17 <mm_commit_data_internal+0x15f>
   18bee:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18bf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18bf6:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
   18bfa:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   18bfe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18c02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c06:	45 89 c1             	mov    %r8d,%r9d
   18c09:	49 89 f8             	mov    %rdi,%r8
   18c0c:	48 89 c7             	mov    %rax,%rdi
   18c0f:	e8 d7 df ff ff       	call   16beb <ema_do_commit_data_loop>
   18c14:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18c17:	48 8b 05 82 92 04 00 	mov    0x49282(%rip),%rax        # 61ea0 <mm_lock>
   18c1e:	48 89 c7             	mov    %rax,%rdi
   18c21:	e8 20 68 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   18c26:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18c29:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18c2d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18c34:	00 00 
   18c36:	74 05                	je     18c3d <mm_commit_data_internal+0x185>
   18c38:	e8 ba ab 00 00       	call   237f7 <__stack_chk_fail>
   18c3d:	c9                   	leave  
   18c3e:	c3                   	ret    

0000000000018c3f <sgx_mm_commit_data>:
   18c3f:	f3 0f 1e fa          	endbr64 
   18c43:	55                   	push   %rbp
   18c44:	48 89 e5             	mov    %rsp,%rbp
   18c47:	48 83 ec 20          	sub    $0x20,%rsp
   18c4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c53:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18c57:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   18c5a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   18c5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c61:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18c65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c69:	4c 8d 05 78 24 02 00 	lea    0x22478(%rip),%r8        # 3b0e8 <g_user_ema_root>
   18c70:	48 89 c7             	mov    %rax,%rdi
   18c73:	e8 40 fe ff ff       	call   18ab8 <mm_commit_data_internal>
   18c78:	c9                   	leave  
   18c79:	c3                   	ret    

0000000000018c7a <mm_modify_type_internal>:
   18c7a:	f3 0f 1e fa          	endbr64 
   18c7e:	55                   	push   %rbp
   18c7f:	48 89 e5             	mov    %rsp,%rbp
   18c82:	48 83 ec 50          	sub    $0x50,%rsp
   18c86:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18c8a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   18c8e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   18c91:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   18c95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18c9c:	00 00 
   18c9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18ca2:	31 c0                	xor    %eax,%eax
   18ca4:	81 7d bc 00 01 00 00 	cmpl   $0x100,-0x44(%rbp)
   18cab:	74 0a                	je     18cb7 <mm_modify_type_internal+0x3d>
   18cad:	b8 01 00 00 00       	mov    $0x1,%eax
   18cb2:	e9 02 01 00 00       	jmp    18db9 <mm_modify_type_internal+0x13f>
   18cb7:	48 81 7d c0 00 10 00 	cmpq   $0x1000,-0x40(%rbp)
   18cbe:	00 
   18cbf:	74 0a                	je     18ccb <mm_modify_type_internal+0x51>
   18cc1:	b8 16 00 00 00       	mov    $0x16,%eax
   18cc6:	e9 ee 00 00 00       	jmp    18db9 <mm_modify_type_internal+0x13f>
   18ccb:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   18cd2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18cd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18cda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18cde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18ce2:	48 01 d0             	add    %rdx,%rax
   18ce5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18ce9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   18cf0:	00 
   18cf1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   18cf8:	00 
   18cf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cfd:	25 ff 0f 00 00       	and    $0xfff,%eax
   18d02:	48 85 c0             	test   %rax,%rax
   18d05:	74 0a                	je     18d11 <mm_modify_type_internal+0x97>
   18d07:	b8 16 00 00 00       	mov    $0x16,%eax
   18d0c:	e9 a8 00 00 00       	jmp    18db9 <mm_modify_type_internal+0x13f>
   18d11:	48 8b 05 88 91 04 00 	mov    0x49188(%rip),%rax        # 61ea0 <mm_lock>
   18d18:	48 89 c7             	mov    %rax,%rdi
   18d1b:	e8 d8 66 ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18d20:	85 c0                	test   %eax,%eax
   18d22:	74 08                	je     18d2c <mm_modify_type_internal+0xb2>
   18d24:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18d27:	e9 8d 00 00 00       	jmp    18db9 <mm_modify_type_internal+0x13f>
   18d2c:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   18d30:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   18d34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d38:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18d3c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18d40:	49 89 f8             	mov    %rdi,%r8
   18d43:	48 89 c7             	mov    %rax,%rdi
   18d46:	e8 b2 bd ff ff       	call   14afd <search_ema_range>
   18d4b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18d4e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18d52:	79 09                	jns    18d5d <mm_modify_type_internal+0xe3>
   18d54:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18d5b:	eb 4a                	jmp    18da7 <mm_modify_type_internal+0x12d>
   18d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d61:	48 89 c7             	mov    %rax,%rdi
   18d64:	e8 46 b8 ff ff       	call   145af <ema_next>
   18d69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18d6d:	48 39 d0             	cmp    %rdx,%rax
   18d70:	74 1f                	je     18d91 <mm_modify_type_internal+0x117>
   18d72:	48 8d 0d 6a aa 01 00 	lea    0x1aa6a(%rip),%rcx        # 337e3 <__func__.1692+0x33>
   18d79:	48 8d 15 a0 aa 01 00 	lea    0x1aaa0(%rip),%rdx        # 33820 <__func__.1660>
   18d80:	be 4d 01 00 00       	mov    $0x14d,%esi
   18d85:	48 8d 3d 2f aa 01 00 	lea    0x1aa2f(%rip),%rdi        # 337bb <__func__.1692+0xb>
   18d8c:	e8 b8 04 00 00       	call   19249 <__assert>
   18d91:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18d95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d99:	48 89 d6             	mov    %rdx,%rsi
   18d9c:	48 89 c7             	mov    %rax,%rdi
   18d9f:	e8 71 d4 ff ff       	call   16215 <ema_change_to_tcs>
   18da4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18da7:	48 8b 05 f2 90 04 00 	mov    0x490f2(%rip),%rax        # 61ea0 <mm_lock>
   18dae:	48 89 c7             	mov    %rax,%rdi
   18db1:	e8 90 66 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   18db6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18db9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18dbd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18dc4:	00 00 
   18dc6:	74 05                	je     18dcd <mm_modify_type_internal+0x153>
   18dc8:	e8 2a aa 00 00       	call   237f7 <__stack_chk_fail>
   18dcd:	c9                   	leave  
   18dce:	c3                   	ret    

0000000000018dcf <sgx_mm_modify_type>:
   18dcf:	f3 0f 1e fa          	endbr64 
   18dd3:	55                   	push   %rbp
   18dd4:	48 89 e5             	mov    %rsp,%rbp
   18dd7:	48 83 ec 20          	sub    $0x20,%rsp
   18ddb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ddf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18de3:	89 55 ec             	mov    %edx,-0x14(%rbp)
   18de6:	8b 55 ec             	mov    -0x14(%rbp),%edx
   18de9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18df1:	48 8d 0d f0 22 02 00 	lea    0x222f0(%rip),%rcx        # 3b0e8 <g_user_ema_root>
   18df8:	48 89 c7             	mov    %rax,%rdi
   18dfb:	e8 7a fe ff ff       	call   18c7a <mm_modify_type_internal>
   18e00:	c9                   	leave  
   18e01:	c3                   	ret    

0000000000018e02 <mm_modify_permissions_internal>:
   18e02:	f3 0f 1e fa          	endbr64 
   18e06:	55                   	push   %rbp
   18e07:	48 89 e5             	mov    %rsp,%rbp
   18e0a:	48 83 ec 50          	sub    $0x50,%rsp
   18e0e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18e12:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   18e16:	89 55 bc             	mov    %edx,-0x44(%rbp)
   18e19:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   18e1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18e24:	00 00 
   18e26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18e2a:	31 c0                	xor    %eax,%eax
   18e2c:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   18e33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18e37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18e3b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e3f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18e43:	48 01 d0             	add    %rdx,%rax
   18e46:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18e4a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   18e4f:	75 0a                	jne    18e5b <mm_modify_permissions_internal+0x59>
   18e51:	b8 16 00 00 00       	mov    $0x16,%eax
   18e56:	e9 da 00 00 00       	jmp    18f35 <mm_modify_permissions_internal+0x133>
   18e5b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18e5f:	25 ff 0f 00 00       	and    $0xfff,%eax
   18e64:	48 85 c0             	test   %rax,%rax
   18e67:	74 0a                	je     18e73 <mm_modify_permissions_internal+0x71>
   18e69:	b8 16 00 00 00       	mov    $0x16,%eax
   18e6e:	e9 c2 00 00 00       	jmp    18f35 <mm_modify_permissions_internal+0x133>
   18e73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18e77:	25 ff 0f 00 00       	and    $0xfff,%eax
   18e7c:	48 85 c0             	test   %rax,%rax
   18e7f:	74 0a                	je     18e8b <mm_modify_permissions_internal+0x89>
   18e81:	b8 16 00 00 00       	mov    $0x16,%eax
   18e86:	e9 aa 00 00 00       	jmp    18f35 <mm_modify_permissions_internal+0x133>
   18e8b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   18e8e:	83 e0 04             	and    $0x4,%eax
   18e91:	85 c0                	test   %eax,%eax
   18e93:	74 14                	je     18ea9 <mm_modify_permissions_internal+0xa7>
   18e95:	8b 45 bc             	mov    -0x44(%rbp),%eax
   18e98:	83 e0 01             	and    $0x1,%eax
   18e9b:	85 c0                	test   %eax,%eax
   18e9d:	75 0a                	jne    18ea9 <mm_modify_permissions_internal+0xa7>
   18e9f:	b8 16 00 00 00       	mov    $0x16,%eax
   18ea4:	e9 8c 00 00 00       	jmp    18f35 <mm_modify_permissions_internal+0x133>
   18ea9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   18eb0:	00 
   18eb1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   18eb8:	00 
   18eb9:	48 8b 05 e0 8f 04 00 	mov    0x48fe0(%rip),%rax        # 61ea0 <mm_lock>
   18ec0:	48 89 c7             	mov    %rax,%rdi
   18ec3:	e8 30 65 ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18ec8:	85 c0                	test   %eax,%eax
   18eca:	74 05                	je     18ed1 <mm_modify_permissions_internal+0xcf>
   18ecc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18ecf:	eb 64                	jmp    18f35 <mm_modify_permissions_internal+0x133>
   18ed1:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   18ed5:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   18ed9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18edd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18ee1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18ee5:	49 89 f8             	mov    %rdi,%r8
   18ee8:	48 89 c7             	mov    %rax,%rdi
   18eeb:	e8 0d bc ff ff       	call   14afd <search_ema_range>
   18ef0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18ef3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   18ef7:	79 09                	jns    18f02 <mm_modify_permissions_internal+0x100>
   18ef9:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   18f00:	eb 21                	jmp    18f23 <mm_modify_permissions_internal+0x121>
   18f02:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18f06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f0a:	8b 7d bc             	mov    -0x44(%rbp),%edi
   18f0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18f11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18f15:	41 89 f8             	mov    %edi,%r8d
   18f18:	48 89 c7             	mov    %rax,%rdi
   18f1b:	e8 ca d9 ff ff       	call   168ea <ema_modify_permissions_loop>
   18f20:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   18f23:	48 8b 05 76 8f 04 00 	mov    0x48f76(%rip),%rax        # 61ea0 <mm_lock>
   18f2a:	48 89 c7             	mov    %rax,%rdi
   18f2d:	e8 14 65 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   18f32:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18f35:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18f39:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   18f40:	00 00 
   18f42:	74 05                	je     18f49 <mm_modify_permissions_internal+0x147>
   18f44:	e8 ae a8 00 00       	call   237f7 <__stack_chk_fail>
   18f49:	c9                   	leave  
   18f4a:	c3                   	ret    

0000000000018f4b <sgx_mm_modify_permissions>:
   18f4b:	f3 0f 1e fa          	endbr64 
   18f4f:	55                   	push   %rbp
   18f50:	48 89 e5             	mov    %rsp,%rbp
   18f53:	48 83 ec 20          	sub    $0x20,%rsp
   18f57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18f5f:	89 55 ec             	mov    %edx,-0x14(%rbp)
   18f62:	8b 55 ec             	mov    -0x14(%rbp),%edx
   18f65:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f6d:	48 8d 0d 74 21 02 00 	lea    0x22174(%rip),%rcx        # 3b0e8 <g_user_ema_root>
   18f74:	48 89 c7             	mov    %rax,%rdi
   18f77:	e8 86 fe ff ff       	call   18e02 <mm_modify_permissions_internal>
   18f7c:	c9                   	leave  
   18f7d:	c3                   	ret    

0000000000018f7e <sgx_mm_enclave_pfhandler>:
   18f7e:	f3 0f 1e fa          	endbr64 
   18f82:	55                   	push   %rbp
   18f83:	48 89 e5             	mov    %rsp,%rbp
   18f86:	48 83 ec 40          	sub    $0x40,%rsp
   18f8a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18f8e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18f95:	00 00 
   18f97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18f9b:	31 c0                	xor    %eax,%eax
   18f9d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   18fa4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18fa8:	48 8b 00             	mov    (%rax),%rax
   18fab:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   18fb1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18fb5:	48 8b 05 e4 8e 04 00 	mov    0x48ee4(%rip),%rax        # 61ea0 <mm_lock>
   18fbc:	48 89 c7             	mov    %rax,%rdi
   18fbf:	e8 34 64 ff ff       	call   f3f8 <sgx_mm_mutex_lock>
   18fc4:	85 c0                	test   %eax,%eax
   18fc6:	74 08                	je     18fd0 <sgx_mm_enclave_pfhandler+0x52>
   18fc8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18fcb:	e9 d7 01 00 00       	jmp    191a7 <sgx_mm_enclave_pfhandler+0x229>
   18fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18fd4:	48 89 c6             	mov    %rax,%rsi
   18fd7:	48 8d 3d 0a 21 02 00 	lea    0x2210a(%rip),%rdi        # 3b0e8 <g_user_ema_root>
   18fde:	e8 76 b9 ff ff       	call   14959 <search_ema>
   18fe3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18fe7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   18fee:	00 
   18fef:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   18ff6:	00 
   18ff7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   18ffc:	75 22                	jne    19020 <sgx_mm_enclave_pfhandler+0xa2>
   18ffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19002:	48 89 c6             	mov    %rax,%rsi
   19005:	48 8d 3d 7c 20 02 00 	lea    0x2207c(%rip),%rdi        # 3b088 <g_rts_ema_root>
   1900c:	e8 48 b9 ff ff       	call   14959 <search_ema>
   19011:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19015:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1901a:	0f 84 74 01 00 00    	je     19194 <sgx_mm_enclave_pfhandler+0x216>
   19020:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   19024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19028:	48 89 d6             	mov    %rdx,%rsi
   1902b:	48 89 c7             	mov    %rax,%rdi
   1902e:	e8 bd b5 ff ff       	call   145f0 <ema_fault_handler>
   19033:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19037:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1903c:	74 28                	je     19066 <sgx_mm_enclave_pfhandler+0xe8>
   1903e:	48 8b 05 5b 8e 04 00 	mov    0x48e5b(%rip),%rax        # 61ea0 <mm_lock>
   19045:	48 89 c7             	mov    %rax,%rdi
   19048:	e8 f9 63 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   1904d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19051:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19055:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19059:	48 89 d6             	mov    %rdx,%rsi
   1905c:	48 89 c7             	mov    %rax,%rdi
   1905f:	ff d1                	call   *%rcx
   19061:	e9 41 01 00 00       	jmp    191a7 <sgx_mm_enclave_pfhandler+0x229>
   19066:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1906a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1906e:	48 89 d6             	mov    %rdx,%rsi
   19071:	48 89 c7             	mov    %rax,%rdi
   19074:	e8 5e b8 ff ff       	call   148d7 <ema_page_committed>
   19079:	84 c0                	test   %al,%al
   1907b:	74 5e                	je     190db <sgx_mm_enclave_pfhandler+0x15d>
   1907d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19081:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   19085:	83 e0 02             	and    $0x2,%eax
   19088:	84 c0                	test   %al,%al
   1908a:	75 14                	jne    190a0 <sgx_mm_enclave_pfhandler+0x122>
   1908c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19090:	48 89 c7             	mov    %rax,%rdi
   19093:	e8 42 b5 ff ff       	call   145da <get_ema_si_flags>
   19098:	83 e0 01             	and    $0x1,%eax
   1909b:	48 85 c0             	test   %rax,%rax
   1909e:	74 23                	je     190c3 <sgx_mm_enclave_pfhandler+0x145>
   190a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   190a4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   190a8:	83 e0 02             	and    $0x2,%eax
   190ab:	84 c0                	test   %al,%al
   190ad:	74 20                	je     190cf <sgx_mm_enclave_pfhandler+0x151>
   190af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190b3:	48 89 c7             	mov    %rax,%rdi
   190b6:	e8 1f b5 ff ff       	call   145da <get_ema_si_flags>
   190bb:	83 e0 02             	and    $0x2,%eax
   190be:	48 85 c0             	test   %rax,%rax
   190c1:	75 0c                	jne    190cf <sgx_mm_enclave_pfhandler+0x151>
   190c3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   190ca:	e9 c6 00 00 00       	jmp    19195 <sgx_mm_enclave_pfhandler+0x217>
   190cf:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   190d6:	e9 ba 00 00 00       	jmp    19195 <sgx_mm_enclave_pfhandler+0x217>
   190db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190df:	48 89 c7             	mov    %rax,%rdi
   190e2:	e8 de b4 ff ff       	call   145c5 <get_ema_alloc_flags>
   190e7:	83 e0 04             	and    $0x4,%eax
   190ea:	85 c0                	test   %eax,%eax
   190ec:	0f 84 8e 00 00 00    	je     19180 <sgx_mm_enclave_pfhandler+0x202>
   190f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   190f6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   190fa:	83 e0 02             	and    $0x2,%eax
   190fd:	84 c0                	test   %al,%al
   190ff:	75 14                	jne    19115 <sgx_mm_enclave_pfhandler+0x197>
   19101:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19105:	48 89 c7             	mov    %rax,%rdi
   19108:	e8 cd b4 ff ff       	call   145da <get_ema_si_flags>
   1910d:	83 e0 01             	and    $0x1,%eax
   19110:	48 85 c0             	test   %rax,%rax
   19113:	74 23                	je     19138 <sgx_mm_enclave_pfhandler+0x1ba>
   19115:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19119:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   1911d:	83 e0 02             	and    $0x2,%eax
   19120:	84 c0                	test   %al,%al
   19122:	74 1d                	je     19141 <sgx_mm_enclave_pfhandler+0x1c3>
   19124:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19128:	48 89 c7             	mov    %rax,%rdi
   1912b:	e8 aa b4 ff ff       	call   145da <get_ema_si_flags>
   19130:	83 e0 02             	and    $0x2,%eax
   19133:	48 85 c0             	test   %rax,%rax
   19136:	75 09                	jne    19141 <sgx_mm_enclave_pfhandler+0x1c3>
   19138:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   1913f:	eb 54                	jmp    19195 <sgx_mm_enclave_pfhandler+0x217>
   19141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19145:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
   1914c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19150:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19154:	48 89 ce             	mov    %rcx,%rsi
   19157:	48 89 c7             	mov    %rax,%rdi
   1915a:	e8 82 c6 ff ff       	call   157e1 <ema_do_commit>
   1915f:	85 c0                	test   %eax,%eax
   19161:	74 14                	je     19177 <sgx_mm_enclave_pfhandler+0x1f9>
   19163:	48 8b 05 36 8d 04 00 	mov    0x48d36(%rip),%rax        # 61ea0 <mm_lock>
   1916a:	48 89 c7             	mov    %rax,%rdi
   1916d:	e8 d4 62 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   19172:	e8 24 89 01 00       	call   31a9b <abort>
   19177:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   1917e:	eb 15                	jmp    19195 <sgx_mm_enclave_pfhandler+0x217>
   19180:	48 8b 05 19 8d 04 00 	mov    0x48d19(%rip),%rax        # 61ea0 <mm_lock>
   19187:	48 89 c7             	mov    %rax,%rdi
   1918a:	e8 b7 62 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   1918f:	e8 07 89 01 00       	call   31a9b <abort>
   19194:	90                   	nop
   19195:	48 8b 05 04 8d 04 00 	mov    0x48d04(%rip),%rax        # 61ea0 <mm_lock>
   1919c:	48 89 c7             	mov    %rax,%rdi
   1919f:	e8 a2 62 ff ff       	call   f446 <sgx_mm_mutex_unlock>
   191a4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   191a7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   191ab:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   191b2:	00 00 
   191b4:	74 05                	je     191bb <sgx_mm_enclave_pfhandler+0x23d>
   191b6:	e8 3c a6 00 00       	call   237f7 <__stack_chk_fail>
   191bb:	c9                   	leave  
   191bc:	c3                   	ret    

00000000000191bd <sgx_mm_init>:
   191bd:	f3 0f 1e fa          	endbr64 
   191c1:	55                   	push   %rbp
   191c2:	48 89 e5             	mov    %rsp,%rbp
   191c5:	48 83 ec 10          	sub    $0x10,%rsp
   191c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   191cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   191d1:	e8 e8 61 ff ff       	call   f3be <sgx_mm_mutex_create>
   191d6:	48 89 05 c3 8c 04 00 	mov    %rax,0x48cc3(%rip)        # 61ea0 <mm_lock>
   191dd:	48 8b 05 bc 8c 04 00 	mov    0x48cbc(%rip),%rax        # 61ea0 <mm_lock>
   191e4:	48 85 c0             	test   %rax,%rax
   191e7:	75 07                	jne    191f0 <sgx_mm_init+0x33>
   191e9:	b8 0e 00 00 00       	mov    $0xe,%eax
   191ee:	eb 35                	jmp    19225 <sgx_mm_init+0x68>
   191f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191f4:	48 89 05 ad 8c 04 00 	mov    %rax,0x48cad(%rip)        # 61ea8 <mm_user_base>
   191fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   191ff:	48 89 05 aa 8c 04 00 	mov    %rax,0x48caa(%rip)        # 61eb0 <mm_user_end>
   19206:	48 8d 3d 71 fd ff ff 	lea    -0x28f(%rip),%rdi        # 18f7e <sgx_mm_enclave_pfhandler>
   1920d:	e8 14 61 ff ff       	call   f326 <sgx_mm_register_pfhandler>
   19212:	83 f0 01             	xor    $0x1,%eax
   19215:	84 c0                	test   %al,%al
   19217:	74 07                	je     19220 <sgx_mm_init+0x63>
   19219:	b8 0e 00 00 00       	mov    $0xe,%eax
   1921e:	eb 05                	jmp    19225 <sgx_mm_init+0x68>
   19220:	e8 1b ea ff ff       	call   17c40 <emalloc_init>
   19225:	c9                   	leave  
   19226:	c3                   	ret    
   19227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1922e:	00 00 

0000000000019230 <alloca>:
   19230:	f3 0f 1e fa          	endbr64 
   19234:	5a                   	pop    %rdx
   19235:	48 89 e1             	mov    %rsp,%rcx
   19238:	48 83 c7 0f          	add    $0xf,%rdi
   1923c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   19240:	48 29 fc             	sub    %rdi,%rsp
   19243:	48 89 e0             	mov    %rsp,%rax
   19246:	3e ff e2             	notrack jmp *%rdx

0000000000019249 <__assert>:
   19249:	f3 0f 1e fa          	endbr64 
   1924d:	55                   	push   %rbp
   1924e:	48 89 e5             	mov    %rsp,%rbp
   19251:	48 83 ec 20          	sub    $0x20,%rsp
   19255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19259:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1925c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   19260:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   19264:	e8 32 88 01 00       	call   31a9b <abort>

0000000000019269 <heap_init>:
   19269:	f3 0f 1e fa          	endbr64 
   1926d:	55                   	push   %rbp
   1926e:	48 89 e5             	mov    %rsp,%rbp
   19271:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19275:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19279:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1927d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   19280:	48 8b 05 91 0b 02 00 	mov    0x20b91(%rip),%rax        # 39e18 <heap_base>
   19287:	48 85 c0             	test   %rax,%rax
   1928a:	74 0a                	je     19296 <heap_init+0x2d>
   1928c:	b8 01 00 00 00       	mov    $0x1,%eax
   19291:	e9 8c 00 00 00       	jmp    19322 <heap_init+0xb9>
   19296:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1929b:	74 0e                	je     192ab <heap_init+0x42>
   1929d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192a1:	25 ff 0f 00 00       	and    $0xfff,%eax
   192a6:	48 85 c0             	test   %rax,%rax
   192a9:	74 07                	je     192b2 <heap_init+0x49>
   192ab:	b8 01 00 00 00       	mov    $0x1,%eax
   192b0:	eb 70                	jmp    19322 <heap_init+0xb9>
   192b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192b6:	25 ff 0f 00 00       	and    $0xfff,%eax
   192bb:	48 85 c0             	test   %rax,%rax
   192be:	74 07                	je     192c7 <heap_init+0x5e>
   192c0:	b8 01 00 00 00       	mov    $0x1,%eax
   192c5:	eb 5b                	jmp    19322 <heap_init+0xb9>
   192c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192cb:	25 ff 0f 00 00       	and    $0xfff,%eax
   192d0:	48 85 c0             	test   %rax,%rax
   192d3:	74 07                	je     192dc <heap_init+0x73>
   192d5:	b8 01 00 00 00       	mov    $0x1,%eax
   192da:	eb 46                	jmp    19322 <heap_init+0xb9>
   192dc:	48 8b 05 35 0b 02 00 	mov    0x20b35(%rip),%rax        # 39e18 <heap_base>
   192e3:	48 f7 d0             	not    %rax
   192e6:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   192ea:	76 07                	jbe    192f3 <heap_init+0x8a>
   192ec:	b8 01 00 00 00       	mov    $0x1,%eax
   192f1:	eb 2f                	jmp    19322 <heap_init+0xb9>
   192f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f7:	48 89 05 1a 0b 02 00 	mov    %rax,0x20b1a(%rip)        # 39e18 <heap_base>
   192fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19302:	48 89 05 17 0b 02 00 	mov    %rax,0x20b17(%rip)        # 39e20 <heap_size>
   19309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1930d:	48 89 05 1c 0b 02 00 	mov    %rax,0x20b1c(%rip)        # 39e30 <heap_min_size>
   19314:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   19317:	89 05 0b 0b 02 00    	mov    %eax,0x20b0b(%rip)        # 39e28 <is_edmm_supported>
   1931d:	b8 00 00 00 00       	mov    $0x0,%eax
   19322:	5d                   	pop    %rbp
   19323:	c3                   	ret    

0000000000019324 <sbrk>:
   19324:	f3 0f 1e fa          	endbr64 
   19328:	55                   	push   %rbp
   19329:	48 89 e5             	mov    %rsp,%rbp
   1932c:	48 83 ec 40          	sub    $0x40,%rsp
   19330:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   19334:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1933b:	00 
   1933c:	48 8b 05 7d 8b 04 00 	mov    0x48b7d(%rip),%rax        # 61ec0 <heap_used.2550>
   19343:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19347:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1934e:	00 
   1934f:	48 8b 05 6a 8b 04 00 	mov    0x48b6a(%rip),%rax        # 61ec0 <heap_used.2550>
   19356:	25 ff 0f 00 00       	and    $0xfff,%eax
   1935b:	48 85 c0             	test   %rax,%rax
   1935e:	74 1f                	je     1937f <sbrk+0x5b>
   19360:	48 8d 0d d1 a4 01 00 	lea    0x1a4d1(%rip),%rcx        # 33838 <__func__.1660+0x18>
   19367:	48 8d 15 3b a5 01 00 	lea    0x1a53b(%rip),%rdx        # 338a9 <__func__.2555>
   1936e:	be 51 00 00 00       	mov    $0x51,%esi
   19373:	48 8d 3d e4 a4 01 00 	lea    0x1a4e4(%rip),%rdi        # 3385e <__func__.1660+0x3e>
   1937a:	e8 ca fe ff ff       	call   19249 <__assert>
   1937f:	48 8b 05 92 0a 02 00 	mov    0x20a92(%rip),%rax        # 39e18 <heap_base>
   19386:	48 85 c0             	test   %rax,%rax
   19389:	75 0c                	jne    19397 <sbrk+0x73>
   1938b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19392:	e9 03 03 00 00       	jmp    1969a <sbrk+0x376>
   19397:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1939c:	0f 89 5c 01 00 00    	jns    194fe <sbrk+0x1da>
   193a2:	48 f7 5d c8          	negq   -0x38(%rbp)
   193a6:	48 8b 15 13 8b 04 00 	mov    0x48b13(%rip),%rdx        # 61ec0 <heap_used.2550>
   193ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   193b1:	48 39 c2             	cmp    %rax,%rdx
   193b4:	73 0c                	jae    193c2 <sbrk+0x9e>
   193b6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   193bd:	e9 d8 02 00 00       	jmp    1969a <sbrk+0x376>
   193c2:	48 8b 15 f7 8a 04 00 	mov    0x48af7(%rip),%rdx        # 61ec0 <heap_used.2550>
   193c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   193cd:	48 29 c2             	sub    %rax,%rdx
   193d0:	48 89 d0             	mov    %rdx,%rax
   193d3:	48 89 05 e6 8a 04 00 	mov    %rax,0x48ae6(%rip)        # 61ec0 <heap_used.2550>
   193da:	48 8b 05 37 0a 02 00 	mov    0x20a37(%rip),%rax        # 39e18 <heap_base>
   193e1:	48 89 c2             	mov    %rax,%rdx
   193e4:	48 8b 05 d5 8a 04 00 	mov    0x48ad5(%rip),%rax        # 61ec0 <heap_used.2550>
   193eb:	48 01 d0             	add    %rdx,%rax
   193ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   193f2:	8b 05 30 0a 02 00    	mov    0x20a30(%rip),%eax        # 39e28 <is_edmm_supported>
   193f8:	85 c0                	test   %eax,%eax
   193fa:	0f 84 f5 00 00 00    	je     194f5 <sbrk+0x1d1>
   19400:	48 8b 05 29 0a 02 00 	mov    0x20a29(%rip),%rax        # 39e30 <heap_min_size>
   19407:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1940b:	0f 86 e4 00 00 00    	jbe    194f5 <sbrk+0x1d1>
   19411:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19415:	25 ff 0f 00 00       	and    $0xfff,%eax
   1941a:	48 85 c0             	test   %rax,%rax
   1941d:	74 1f                	je     1943e <sbrk+0x11a>
   1941f:	48 8d 0d 43 a4 01 00 	lea    0x1a443(%rip),%rcx        # 33869 <__func__.1660+0x49>
   19426:	48 8d 15 7c a4 01 00 	lea    0x1a47c(%rip),%rdx        # 338a9 <__func__.2555>
   1942d:	be 66 00 00 00       	mov    $0x66,%esi
   19432:	48 8d 3d 25 a4 01 00 	lea    0x1a425(%rip),%rdi        # 3385e <__func__.1660+0x3e>
   19439:	e8 0b fe ff ff       	call   19249 <__assert>
   1943e:	48 8b 15 7b 8a 04 00 	mov    0x48a7b(%rip),%rdx        # 61ec0 <heap_used.2550>
   19445:	48 8b 05 e4 09 02 00 	mov    0x209e4(%rip),%rax        # 39e30 <heap_min_size>
   1944c:	48 39 c2             	cmp    %rax,%rdx
   1944f:	76 12                	jbe    19463 <sbrk+0x13f>
   19451:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19455:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19459:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1945d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19461:	eb 2d                	jmp    19490 <sbrk+0x16c>
   19463:	48 8b 05 ae 09 02 00 	mov    0x209ae(%rip),%rax        # 39e18 <heap_base>
   1946a:	48 89 c2             	mov    %rax,%rdx
   1946d:	48 8b 05 bc 09 02 00 	mov    0x209bc(%rip),%rax        # 39e30 <heap_min_size>
   19474:	48 01 d0             	add    %rdx,%rax
   19477:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1947b:	48 8b 05 ae 09 02 00 	mov    0x209ae(%rip),%rax        # 39e30 <heap_min_size>
   19482:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19486:	48 29 c2             	sub    %rax,%rdx
   19489:	48 89 d0             	mov    %rdx,%rax
   1948c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19494:	25 ff 0f 00 00       	and    $0xfff,%eax
   19499:	48 85 c0             	test   %rax,%rax
   1949c:	74 1f                	je     194bd <sbrk+0x199>
   1949e:	48 8d 0d e3 a3 01 00 	lea    0x1a3e3(%rip),%rcx        # 33888 <__func__.1660+0x68>
   194a5:	48 8d 15 fd a3 01 00 	lea    0x1a3fd(%rip),%rdx        # 338a9 <__func__.2555>
   194ac:	be 75 00 00 00       	mov    $0x75,%esi
   194b1:	48 8d 3d a6 a3 01 00 	lea    0x1a3a6(%rip),%rdi        # 3385e <__func__.1660+0x3e>
   194b8:	e8 8c fd ff ff       	call   19249 <__assert>
   194bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   194c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   194c5:	48 89 d6             	mov    %rdx,%rsi
   194c8:	48 89 c7             	mov    %rax,%rdi
   194cb:	b8 00 00 00 00       	mov    $0x0,%eax
   194d0:	e8 e3 ec ff ff       	call   181b8 <mm_uncommit>
   194d5:	89 45 dc             	mov    %eax,-0x24(%rbp)
   194d8:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   194dc:	74 17                	je     194f5 <sbrk+0x1d1>
   194de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194e2:	48 89 05 d7 89 04 00 	mov    %rax,0x489d7(%rip)        # 61ec0 <heap_used.2550>
   194e9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   194f0:	e9 a5 01 00 00       	jmp    1969a <sbrk+0x376>
   194f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   194f9:	e9 9c 01 00 00       	jmp    1969a <sbrk+0x376>
   194fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19502:	48 f7 d0             	not    %rax
   19505:	48 89 c2             	mov    %rax,%rdx
   19508:	48 8b 05 b1 89 04 00 	mov    0x489b1(%rip),%rax        # 61ec0 <heap_used.2550>
   1950f:	48 39 c2             	cmp    %rax,%rdx
   19512:	72 1a                	jb     1952e <sbrk+0x20a>
   19514:	48 8b 15 a5 89 04 00 	mov    0x489a5(%rip),%rdx        # 61ec0 <heap_used.2550>
   1951b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1951f:	48 01 c2             	add    %rax,%rdx
   19522:	48 8b 05 f7 08 02 00 	mov    0x208f7(%rip),%rax        # 39e20 <heap_size>
   19529:	48 39 c2             	cmp    %rax,%rdx
   1952c:	76 0c                	jbe    1953a <sbrk+0x216>
   1952e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19535:	e9 60 01 00 00       	jmp    1969a <sbrk+0x376>
   1953a:	48 8b 05 d7 08 02 00 	mov    0x208d7(%rip),%rax        # 39e18 <heap_base>
   19541:	48 89 c2             	mov    %rax,%rdx
   19544:	48 8b 05 75 89 04 00 	mov    0x48975(%rip),%rax        # 61ec0 <heap_used.2550>
   1954b:	48 01 d0             	add    %rdx,%rax
   1954e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19552:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   19557:	75 09                	jne    19562 <sbrk+0x23e>
   19559:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1955d:	e9 38 01 00 00       	jmp    1969a <sbrk+0x376>
   19562:	48 8b 15 57 89 04 00 	mov    0x48957(%rip),%rdx        # 61ec0 <heap_used.2550>
   19569:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1956d:	48 01 d0             	add    %rdx,%rax
   19570:	48 89 05 49 89 04 00 	mov    %rax,0x48949(%rip)        # 61ec0 <heap_used.2550>
   19577:	48 8b 15 3a 89 04 00 	mov    0x4893a(%rip),%rdx        # 61eb8 <g_peak_heap_used>
   1957e:	48 8b 05 3b 89 04 00 	mov    0x4893b(%rip),%rax        # 61ec0 <heap_used.2550>
   19585:	48 39 c2             	cmp    %rax,%rdx
   19588:	48 0f 43 c2          	cmovae %rdx,%rax
   1958c:	48 89 05 25 89 04 00 	mov    %rax,0x48925(%rip)        # 61eb8 <g_peak_heap_used>
   19593:	8b 05 8f 08 02 00    	mov    0x2088f(%rip),%eax        # 39e28 <is_edmm_supported>
   19599:	85 c0                	test   %eax,%eax
   1959b:	0f 84 f5 00 00 00    	je     19696 <sbrk+0x372>
   195a1:	48 8b 15 18 89 04 00 	mov    0x48918(%rip),%rdx        # 61ec0 <heap_used.2550>
   195a8:	48 8b 05 81 08 02 00 	mov    0x20881(%rip),%rax        # 39e30 <heap_min_size>
   195af:	48 39 c2             	cmp    %rax,%rdx
   195b2:	0f 86 de 00 00 00    	jbe    19696 <sbrk+0x372>
   195b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195bc:	25 ff 0f 00 00       	and    $0xfff,%eax
   195c1:	48 85 c0             	test   %rax,%rax
   195c4:	74 1f                	je     195e5 <sbrk+0x2c1>
   195c6:	48 8d 0d 9c a2 01 00 	lea    0x1a29c(%rip),%rcx        # 33869 <__func__.1660+0x49>
   195cd:	48 8d 15 d5 a2 01 00 	lea    0x1a2d5(%rip),%rdx        # 338a9 <__func__.2555>
   195d4:	be 91 00 00 00       	mov    $0x91,%esi
   195d9:	48 8d 3d 7e a2 01 00 	lea    0x1a27e(%rip),%rdi        # 3385e <__func__.1660+0x3e>
   195e0:	e8 64 fc ff ff       	call   19249 <__assert>
   195e5:	48 8b 05 44 08 02 00 	mov    0x20844(%rip),%rax        # 39e30 <heap_min_size>
   195ec:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   195f0:	76 12                	jbe    19604 <sbrk+0x2e0>
   195f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   195f6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   195fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195fe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19602:	eb 30                	jmp    19634 <sbrk+0x310>
   19604:	48 8b 05 0d 08 02 00 	mov    0x2080d(%rip),%rax        # 39e18 <heap_base>
   1960b:	48 89 c2             	mov    %rax,%rdx
   1960e:	48 8b 05 1b 08 02 00 	mov    0x2081b(%rip),%rax        # 39e30 <heap_min_size>
   19615:	48 01 d0             	add    %rdx,%rax
   19618:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1961c:	48 8b 15 9d 88 04 00 	mov    0x4889d(%rip),%rdx        # 61ec0 <heap_used.2550>
   19623:	48 8b 05 06 08 02 00 	mov    0x20806(%rip),%rax        # 39e30 <heap_min_size>
   1962a:	48 29 c2             	sub    %rax,%rdx
   1962d:	48 89 d0             	mov    %rdx,%rax
   19630:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19634:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19638:	25 ff 0f 00 00       	and    $0xfff,%eax
   1963d:	48 85 c0             	test   %rax,%rax
   19640:	74 1f                	je     19661 <sbrk+0x33d>
   19642:	48 8d 0d 3f a2 01 00 	lea    0x1a23f(%rip),%rcx        # 33888 <__func__.1660+0x68>
   19649:	48 8d 15 59 a2 01 00 	lea    0x1a259(%rip),%rdx        # 338a9 <__func__.2555>
   19650:	be a1 00 00 00       	mov    $0xa1,%esi
   19655:	48 8d 3d 02 a2 01 00 	lea    0x1a202(%rip),%rdi        # 3385e <__func__.1660+0x3e>
   1965c:	e8 e8 fb ff ff       	call   19249 <__assert>
   19661:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19665:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19669:	48 89 d6             	mov    %rdx,%rsi
   1966c:	48 89 c7             	mov    %rax,%rdi
   1966f:	b8 00 00 00 00       	mov    $0x0,%eax
   19674:	e8 0f eb ff ff       	call   18188 <mm_commit>
   19679:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1967c:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   19680:	74 14                	je     19696 <sbrk+0x372>
   19682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19686:	48 89 05 33 88 04 00 	mov    %rax,0x48833(%rip)        # 61ec0 <heap_used.2550>
   1968d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19694:	eb 04                	jmp    1969a <sbrk+0x376>
   19696:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1969a:	c9                   	leave  
   1969b:	c3                   	ret    

000000000001969c <sgx_spin_lock>:
   1969c:	f3 0f 1e fa          	endbr64 
   196a0:	55                   	push   %rbp
   196a1:	48 89 e5             	mov    %rsp,%rbp
   196a4:	48 83 ec 30          	sub    $0x30,%rsp
   196a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   196ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   196b3:	00 00 
   196b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   196b9:	31 c0                	xor    %eax,%eax
   196bb:	eb 3c                	jmp    196f9 <sgx_spin_lock+0x5d>
   196bd:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
   196c4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   196cb:	eb 07                	jmp    196d4 <sgx_spin_lock+0x38>
   196cd:	f3 90                	pause  
   196cf:	90                   	nop
   196d0:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   196d4:	8b 45 e8             	mov    -0x18(%rbp),%eax
   196d7:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   196da:	7c f1                	jl     196cd <sgx_spin_lock+0x31>
   196dc:	d1 65 e4             	shll   -0x1c(%rbp)
   196df:	81 7d e4 00 04 00 00 	cmpl   $0x400,-0x1c(%rbp)
   196e6:	7e 07                	jle    196ef <sgx_spin_lock+0x53>
   196e8:	c7 45 e4 00 04 00 00 	movl   $0x400,-0x1c(%rbp)
   196ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   196f3:	8b 00                	mov    (%rax),%eax
   196f5:	85 c0                	test   %eax,%eax
   196f7:	75 cb                	jne    196c4 <sgx_spin_lock+0x28>
   196f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   196fd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19701:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   19708:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1970c:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1970f:	f0 87 10             	lock xchg %edx,(%rax)
   19712:	89 55 e0             	mov    %edx,-0x20(%rbp)
   19715:	8b 45 e0             	mov    -0x20(%rbp),%eax
   19718:	85 c0                	test   %eax,%eax
   1971a:	75 a1                	jne    196bd <sgx_spin_lock+0x21>
   1971c:	b8 00 00 00 00       	mov    $0x0,%eax
   19721:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19725:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1972c:	00 00 
   1972e:	74 05                	je     19735 <sgx_spin_lock+0x99>
   19730:	e8 c2 a0 00 00       	call   237f7 <__stack_chk_fail>
   19735:	c9                   	leave  
   19736:	c3                   	ret    

0000000000019737 <sgx_spin_unlock>:
   19737:	f3 0f 1e fa          	endbr64 
   1973b:	55                   	push   %rbp
   1973c:	48 89 e5             	mov    %rsp,%rbp
   1973f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19747:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1974d:	b8 00 00 00 00       	mov    $0x0,%eax
   19752:	5d                   	pop    %rbp
   19753:	c3                   	ret    

0000000000019754 <vsnprintf>:
   19754:	f3 0f 1e fa          	endbr64 
   19758:	55                   	push   %rbp
   19759:	48 89 e5             	mov    %rsp,%rbp
   1975c:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   19763:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   1976a:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   19771:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   19778:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1977f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19786:	00 00 
   19788:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1978c:	31 c0                	xor    %eax,%eax
   1978e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   19792:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   19796:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1979a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   197a1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197a5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   197ac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197b0:	48 85 c0             	test   %rax,%rax
   197b3:	74 0a                	je     197bf <vsnprintf+0x6b>
   197b5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197b9:	48 83 c0 10          	add    $0x10,%rax
   197bd:	eb 05                	jmp    197c4 <vsnprintf+0x70>
   197bf:	b8 00 00 00 00       	mov    $0x0,%eax
   197c4:	ba 28 00 00 00       	mov    $0x28,%edx
   197c9:	be 00 00 00 00       	mov    $0x0,%esi
   197ce:	48 89 c7             	mov    %rax,%rdi
   197d1:	e8 ad 9e 00 00       	call   23683 <memset>
   197d6:	b8 00 00 00 80       	mov    $0x80000000,%eax
   197db:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   197e2:	72 0b                	jb     197ef <vsnprintf+0x9b>
   197e4:	48 c7 85 60 ff ff ff 	movq   $0x7fffffff,-0xa0(%rbp)
   197eb:	ff ff ff 7f 
   197ef:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   197f6:	00 
   197f7:	75 19                	jne    19812 <vsnprintf+0xbe>
   197f9:	48 8d 85 7b ff ff ff 	lea    -0x85(%rbp),%rax
   19800:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   19807:	48 c7 85 60 ff ff ff 	movq   $0x1,-0xa0(%rbp)
   1980e:	01 00 00 00 
   19812:	66 c7 45 92 ff ff    	movw   $0xffff,-0x6e(%rbp)
   19818:	66 c7 45 90 08 02    	movw   $0x208,-0x70(%rbp)
   1981e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   19825:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   19829:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1982d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   19831:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   19838:	83 e8 01             	sub    $0x1,%eax
   1983b:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1983e:	8b 45 8c             	mov    -0x74(%rbp),%eax
   19841:	89 45 a0             	mov    %eax,-0x60(%rbp)
   19844:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1984b:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
   19852:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   19856:	48 89 ce             	mov    %rcx,%rsi
   19859:	48 89 c7             	mov    %rax,%rdi
   1985c:	e8 b0 a8 00 00       	call   24111 <__vfprintf>
   19861:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   19867:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1986b:	c6 00 00             	movb   $0x0,(%rax)
   1986e:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   19874:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19878:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1987f:	00 00 
   19881:	74 05                	je     19888 <vsnprintf+0x134>
   19883:	e8 6f 9f 00 00       	call   237f7 <__stack_chk_fail>
   19888:	c9                   	leave  
   19889:	c3                   	ret    

000000000001988a <spin_acquire_lock>:
   1988a:	f3 0f 1e fa          	endbr64 
   1988e:	55                   	push   %rbp
   1988f:	48 89 e5             	mov    %rsp,%rbp
   19892:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19896:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1989d:	eb 04                	jmp    198a3 <spin_acquire_lock+0x19>
   1989f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   198a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198a7:	8b 00                	mov    (%rax),%eax
   198a9:	85 c0                	test   %eax,%eax
   198ab:	75 f2                	jne    1989f <spin_acquire_lock+0x15>
   198ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   198b1:	b8 01 00 00 00       	mov    $0x1,%eax
   198b6:	87 02                	xchg   %eax,(%rdx)
   198b8:	85 c0                	test   %eax,%eax
   198ba:	75 e3                	jne    1989f <spin_acquire_lock+0x15>
   198bc:	b8 00 00 00 00       	mov    $0x0,%eax
   198c1:	5d                   	pop    %rbp
   198c2:	c3                   	ret    

00000000000198c3 <segment_holding>:
   198c3:	f3 0f 1e fa          	endbr64 
   198c7:	55                   	push   %rbp
   198c8:	48 89 e5             	mov    %rsp,%rbp
   198cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198d7:	48 05 78 03 00 00    	add    $0x378,%rax
   198dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   198e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198e5:	48 8b 00             	mov    (%rax),%rax
   198e8:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   198ec:	72 1e                	jb     1990c <segment_holding+0x49>
   198ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198f2:	48 8b 10             	mov    (%rax),%rdx
   198f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198f9:	48 8b 40 08          	mov    0x8(%rax),%rax
   198fd:	48 01 d0             	add    %rdx,%rax
   19900:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19904:	73 06                	jae    1990c <segment_holding+0x49>
   19906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1990a:	eb 18                	jmp    19924 <segment_holding+0x61>
   1990c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19910:	48 8b 40 10          	mov    0x10(%rax),%rax
   19914:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19918:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1991d:	75 c2                	jne    198e1 <segment_holding+0x1e>
   1991f:	b8 00 00 00 00       	mov    $0x0,%eax
   19924:	5d                   	pop    %rbp
   19925:	c3                   	ret    

0000000000019926 <has_segment_link>:
   19926:	f3 0f 1e fa          	endbr64 
   1992a:	55                   	push   %rbp
   1992b:	48 89 e5             	mov    %rsp,%rbp
   1992e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19932:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1993a:	48 05 78 03 00 00    	add    $0x378,%rax
   19940:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19944:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19948:	48 8b 00             	mov    (%rax),%rax
   1994b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1994f:	72 1f                	jb     19970 <has_segment_link+0x4a>
   19951:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19955:	48 8b 10             	mov    (%rax),%rdx
   19958:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1995c:	48 8b 40 08          	mov    0x8(%rax),%rax
   19960:	48 01 d0             	add    %rdx,%rax
   19963:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19967:	73 07                	jae    19970 <has_segment_link+0x4a>
   19969:	b8 01 00 00 00       	mov    $0x1,%eax
   1996e:	eb 18                	jmp    19988 <has_segment_link+0x62>
   19970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19974:	48 8b 40 10          	mov    0x10(%rax),%rax
   19978:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1997c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19981:	75 c1                	jne    19944 <has_segment_link+0x1e>
   19983:	b8 00 00 00 00       	mov    $0x0,%eax
   19988:	5d                   	pop    %rbp
   19989:	c3                   	ret    

000000000001998a <init_mparams>:
   1998a:	f3 0f 1e fa          	endbr64 
   1998e:	55                   	push   %rbp
   1998f:	48 89 e5             	mov    %rsp,%rbp
   19992:	48 83 ec 20          	sub    $0x20,%rsp
   19996:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1999d:	00 00 
   1999f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   199a3:	31 c0                	xor    %eax,%eax
   199a5:	b8 01 00 00 00       	mov    $0x1,%eax
   199aa:	87 05 18 85 04 00    	xchg   %eax,0x48518(%rip)        # 61ec8 <malloc_global_mutex>
   199b0:	85 c0                	test   %eax,%eax
   199b2:	74 0c                	je     199c0 <init_mparams+0x36>
   199b4:	48 8d 3d 0d 85 04 00 	lea    0x4850d(%rip),%rdi        # 61ec8 <malloc_global_mutex>
   199bb:	e8 ca fe ff ff       	call   1988a <spin_acquire_lock>
   199c0:	48 8b 05 19 85 04 00 	mov    0x48519(%rip),%rax        # 61ee0 <mparams>
   199c7:	48 85 c0             	test   %rax,%rax
   199ca:	0f 85 d1 00 00 00    	jne    19aa1 <init_mparams+0x117>
   199d0:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)
   199d7:	00 
   199d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   199dc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   199e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   199e4:	48 83 e8 01          	sub    $0x1,%rax
   199e8:	48 23 45 f0          	and    -0x10(%rbp),%rax
   199ec:	48 85 c0             	test   %rax,%rax
   199ef:	75 11                	jne    19a02 <init_mparams+0x78>
   199f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   199f5:	48 83 e8 01          	sub    $0x1,%rax
   199f9:	48 23 45 e8          	and    -0x18(%rbp),%rax
   199fd:	48 85 c0             	test   %rax,%rax
   19a00:	74 05                	je     19a07 <init_mparams+0x7d>
   19a02:	e8 94 80 01 00       	call   31a9b <abort>
   19a07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19a0b:	48 89 05 de 84 04 00 	mov    %rax,0x484de(%rip)        # 61ef0 <mparams+0x10>
   19a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a16:	48 89 05 cb 84 04 00 	mov    %rax,0x484cb(%rip)        # 61ee8 <mparams+0x8>
   19a1d:	48 c7 05 d0 84 04 00 	movq   $0xffffffffffffffff,0x484d0(%rip)        # 61ef8 <mparams+0x18>
   19a24:	ff ff ff ff 
   19a28:	48 c7 05 cd 84 04 00 	movq   $0x200000,0x484cd(%rip)        # 61f00 <mparams+0x20>
   19a2f:	00 00 20 00 
   19a33:	c7 05 cb 84 04 00 02 	movl   $0x2,0x484cb(%rip)        # 61f08 <mparams+0x28>
   19a3a:	00 00 00 
   19a3d:	8b 05 c5 84 04 00    	mov    0x484c5(%rip),%eax        # 61f08 <mparams+0x28>
   19a43:	89 05 47 88 04 00    	mov    %eax,0x48847(%rip)        # 62290 <_gm_+0x370>
   19a49:	c7 05 41 88 04 00 00 	movl   $0x0,0x48841(%rip)        # 62294 <_gm_+0x374>
   19a50:	00 00 00 
   19a53:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19a57:	be 08 00 00 00       	mov    $0x8,%esi
   19a5c:	48 89 c7             	mov    %rax,%rdi
   19a5f:	e8 96 5f ff ff       	call   f9fa <sgx_read_rand>
   19a64:	85 c0                	test   %eax,%eax
   19a66:	74 05                	je     19a6d <init_mparams+0xe3>
   19a68:	e8 2e 80 01 00       	call   31a9b <abort>
   19a6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a71:	48 35 55 55 55 55    	xor    $0x55555555,%rax
   19a77:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19a7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a7f:	48 83 c8 08          	or     $0x8,%rax
   19a83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19a87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a8b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19a8f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19a93:	48 8d 15 46 84 04 00 	lea    0x48446(%rip),%rdx        # 61ee0 <mparams>
   19a9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a9e:	48 89 02             	mov    %rax,(%rdx)
   19aa1:	b8 00 00 00 00       	mov    $0x0,%eax
   19aa6:	89 05 1c 84 04 00    	mov    %eax,0x4841c(%rip)        # 61ec8 <malloc_global_mutex>
   19aac:	b8 01 00 00 00       	mov    $0x1,%eax
   19ab1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19ab5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19abc:	00 00 
   19abe:	74 05                	je     19ac5 <init_mparams+0x13b>
   19ac0:	e8 32 9d 00 00       	call   237f7 <__stack_chk_fail>
   19ac5:	c9                   	leave  
   19ac6:	c3                   	ret    

0000000000019ac7 <change_mparam>:
   19ac7:	f3 0f 1e fa          	endbr64 
   19acb:	55                   	push   %rbp
   19acc:	48 89 e5             	mov    %rsp,%rbp
   19acf:	48 83 ec 20          	sub    $0x20,%rsp
   19ad3:	89 7d ec             	mov    %edi,-0x14(%rbp)
   19ad6:	89 75 e8             	mov    %esi,-0x18(%rbp)
   19ad9:	48 8b 05 00 84 04 00 	mov    0x48400(%rip),%rax        # 61ee0 <mparams>
   19ae0:	48 85 c0             	test   %rax,%rax
   19ae3:	75 07                	jne    19aec <change_mparam+0x25>
   19ae5:	e8 a0 fe ff ff       	call   1998a <init_mparams>
   19aea:	85 c0                	test   %eax,%eax
   19aec:	90                   	nop
   19aed:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
   19af1:	74 07                	je     19afa <change_mparam+0x33>
   19af3:	8b 45 e8             	mov    -0x18(%rbp),%eax
   19af6:	48 98                	cltq   
   19af8:	eb 07                	jmp    19b01 <change_mparam+0x3a>
   19afa:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19b01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19b05:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   19b09:	74 14                	je     19b1f <change_mparam+0x58>
   19b0b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   19b0f:	79 69                	jns    19b7a <change_mparam+0xb3>
   19b11:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   19b15:	74 51                	je     19b68 <change_mparam+0xa1>
   19b17:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   19b1b:	74 14                	je     19b31 <change_mparam+0x6a>
   19b1d:	eb 5b                	jmp    19b7a <change_mparam+0xb3>
   19b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b23:	48 89 05 d6 83 04 00 	mov    %rax,0x483d6(%rip)        # 61f00 <mparams+0x20>
   19b2a:	b8 01 00 00 00       	mov    $0x1,%eax
   19b2f:	eb 4e                	jmp    19b7f <change_mparam+0xb8>
   19b31:	48 8b 05 b0 83 04 00 	mov    0x483b0(%rip),%rax        # 61ee8 <mparams+0x8>
   19b38:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19b3c:	72 23                	jb     19b61 <change_mparam+0x9a>
   19b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b42:	48 83 e8 01          	sub    $0x1,%rax
   19b46:	48 23 45 f8          	and    -0x8(%rbp),%rax
   19b4a:	48 85 c0             	test   %rax,%rax
   19b4d:	75 12                	jne    19b61 <change_mparam+0x9a>
   19b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b53:	48 89 05 96 83 04 00 	mov    %rax,0x48396(%rip)        # 61ef0 <mparams+0x10>
   19b5a:	b8 01 00 00 00       	mov    $0x1,%eax
   19b5f:	eb 1e                	jmp    19b7f <change_mparam+0xb8>
   19b61:	b8 00 00 00 00       	mov    $0x0,%eax
   19b66:	eb 17                	jmp    19b7f <change_mparam+0xb8>
   19b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b6c:	48 89 05 85 83 04 00 	mov    %rax,0x48385(%rip)        # 61ef8 <mparams+0x18>
   19b73:	b8 01 00 00 00       	mov    $0x1,%eax
   19b78:	eb 05                	jmp    19b7f <change_mparam+0xb8>
   19b7a:	b8 00 00 00 00       	mov    $0x0,%eax
   19b7f:	c9                   	leave  
   19b80:	c3                   	ret    

0000000000019b81 <do_check_any_chunk>:
   19b81:	f3 0f 1e fa          	endbr64 
   19b85:	55                   	push   %rbp
   19b86:	48 89 e5             	mov    %rsp,%rbp
   19b89:	48 83 ec 10          	sub    $0x10,%rsp
   19b8d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b91:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19b95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19b99:	48 83 c0 10          	add    $0x10,%rax
   19b9d:	83 e0 0f             	and    $0xf,%eax
   19ba0:	48 85 c0             	test   %rax,%rax
   19ba3:	74 13                	je     19bb8 <do_check_any_chunk+0x37>
   19ba5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19ba9:	48 8b 40 08          	mov    0x8(%rax),%rax
   19bad:	48 83 f8 0b          	cmp    $0xb,%rax
   19bb1:	74 05                	je     19bb8 <do_check_any_chunk+0x37>
   19bb3:	e8 e3 7e 01 00       	call   31a9b <abort>
   19bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bbc:	48 8b 40 18          	mov    0x18(%rax),%rax
   19bc0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   19bc4:	73 05                	jae    19bcb <do_check_any_chunk+0x4a>
   19bc6:	e8 d0 7e 01 00       	call   31a9b <abort>
   19bcb:	90                   	nop
   19bcc:	c9                   	leave  
   19bcd:	c3                   	ret    

0000000000019bce <do_check_top_chunk>:
   19bce:	f3 0f 1e fa          	endbr64 
   19bd2:	55                   	push   %rbp
   19bd3:	48 89 e5             	mov    %rsp,%rbp
   19bd6:	48 83 ec 20          	sub    $0x20,%rsp
   19bda:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19bde:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19be2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19be6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bea:	48 89 d6             	mov    %rdx,%rsi
   19bed:	48 89 c7             	mov    %rax,%rdi
   19bf0:	e8 ce fc ff ff       	call   198c3 <segment_holding>
   19bf5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19bf9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19bfd:	48 8b 40 08          	mov    0x8(%rax),%rax
   19c01:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   19c05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19c09:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19c0e:	75 05                	jne    19c15 <do_check_top_chunk+0x47>
   19c10:	e8 86 7e 01 00       	call   31a9b <abort>
   19c15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c19:	48 83 c0 10          	add    $0x10,%rax
   19c1d:	83 e0 0f             	and    $0xf,%eax
   19c20:	48 85 c0             	test   %rax,%rax
   19c23:	74 13                	je     19c38 <do_check_top_chunk+0x6a>
   19c25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c29:	48 8b 40 08          	mov    0x8(%rax),%rax
   19c2d:	48 83 f8 0b          	cmp    $0xb,%rax
   19c31:	74 05                	je     19c38 <do_check_top_chunk+0x6a>
   19c33:	e8 63 7e 01 00       	call   31a9b <abort>
   19c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c3c:	48 8b 40 18          	mov    0x18(%rax),%rax
   19c40:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19c44:	73 05                	jae    19c4b <do_check_top_chunk+0x7d>
   19c46:	e8 50 7e 01 00       	call   31a9b <abort>
   19c4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c4f:	48 8b 40 10          	mov    0x10(%rax),%rax
   19c53:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19c57:	74 05                	je     19c5e <do_check_top_chunk+0x90>
   19c59:	e8 3d 7e 01 00       	call   31a9b <abort>
   19c5e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19c63:	75 05                	jne    19c6a <do_check_top_chunk+0x9c>
   19c65:	e8 31 7e 01 00       	call   31a9b <abort>
   19c6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c6e:	48 8b 10             	mov    (%rax),%rdx
   19c71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c75:	48 8b 40 08          	mov    0x8(%rax),%rax
   19c79:	48 01 d0             	add    %rdx,%rax
   19c7c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   19c80:	48 83 e8 50          	sub    $0x50,%rax
   19c84:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19c88:	74 05                	je     19c8f <do_check_top_chunk+0xc1>
   19c8a:	e8 0c 7e 01 00       	call   31a9b <abort>
   19c8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c93:	48 8b 40 08          	mov    0x8(%rax),%rax
   19c97:	83 e0 01             	and    $0x1,%eax
   19c9a:	48 85 c0             	test   %rax,%rax
   19c9d:	75 05                	jne    19ca4 <do_check_top_chunk+0xd6>
   19c9f:	e8 f7 7d 01 00       	call   31a9b <abort>
   19ca4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cac:	48 01 d0             	add    %rdx,%rax
   19caf:	48 8b 40 08          	mov    0x8(%rax),%rax
   19cb3:	83 e0 01             	and    $0x1,%eax
   19cb6:	48 85 c0             	test   %rax,%rax
   19cb9:	74 05                	je     19cc0 <do_check_top_chunk+0xf2>
   19cbb:	e8 db 7d 01 00       	call   31a9b <abort>
   19cc0:	90                   	nop
   19cc1:	c9                   	leave  
   19cc2:	c3                   	ret    

0000000000019cc3 <do_check_mmapped_chunk>:
   19cc3:	f3 0f 1e fa          	endbr64 
   19cc7:	55                   	push   %rbp
   19cc8:	48 89 e5             	mov    %rsp,%rbp
   19ccb:	48 83 ec 20          	sub    $0x20,%rsp
   19ccf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19cd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19cd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19cdb:	48 8b 40 08          	mov    0x8(%rax),%rax
   19cdf:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19ce3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19ce7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ceb:	48 8b 10             	mov    (%rax),%rdx
   19cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cf2:	48 01 d0             	add    %rdx,%rax
   19cf5:	48 83 c0 20          	add    $0x20,%rax
   19cf9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19cfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d01:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d05:	83 e0 03             	and    $0x3,%eax
   19d08:	48 85 c0             	test   %rax,%rax
   19d0b:	74 05                	je     19d12 <do_check_mmapped_chunk+0x4f>
   19d0d:	e8 89 7d 01 00       	call   31a9b <abort>
   19d12:	e8 84 7d 01 00       	call   31a9b <abort>

0000000000019d17 <do_check_inuse_chunk>:
   19d17:	f3 0f 1e fa          	endbr64 
   19d1b:	55                   	push   %rbp
   19d1c:	48 89 e5             	mov    %rsp,%rbp
   19d1f:	48 83 ec 10          	sub    $0x10,%rsp
   19d23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d27:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19d2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19d2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d33:	48 89 d6             	mov    %rdx,%rsi
   19d36:	48 89 c7             	mov    %rax,%rdi
   19d39:	e8 43 fe ff ff       	call   19b81 <do_check_any_chunk>
   19d3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d42:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d46:	83 e0 03             	and    $0x3,%eax
   19d49:	48 83 f8 01          	cmp    $0x1,%rax
   19d4d:	75 05                	jne    19d54 <do_check_inuse_chunk+0x3d>
   19d4f:	e8 47 7d 01 00       	call   31a9b <abort>
   19d54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d58:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d5c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19d60:	48 89 c2             	mov    %rax,%rdx
   19d63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d67:	48 01 d0             	add    %rdx,%rax
   19d6a:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d6e:	83 e0 01             	and    $0x1,%eax
   19d71:	48 85 c0             	test   %rax,%rax
   19d74:	75 05                	jne    19d7b <do_check_inuse_chunk+0x64>
   19d76:	e8 20 7d 01 00       	call   31a9b <abort>
   19d7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d7f:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d83:	83 e0 03             	and    $0x3,%eax
   19d86:	48 85 c0             	test   %rax,%rax
   19d89:	74 40                	je     19dcb <do_check_inuse_chunk+0xb4>
   19d8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d8f:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d93:	83 e0 01             	and    $0x1,%eax
   19d96:	48 85 c0             	test   %rax,%rax
   19d99:	75 30                	jne    19dcb <do_check_inuse_chunk+0xb4>
   19d9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d9f:	48 8b 00             	mov    (%rax),%rax
   19da2:	48 f7 d8             	neg    %rax
   19da5:	48 89 c2             	mov    %rax,%rdx
   19da8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19dac:	48 01 d0             	add    %rdx,%rax
   19daf:	48 8b 40 08          	mov    0x8(%rax),%rax
   19db3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19db7:	48 89 c2             	mov    %rax,%rdx
   19dba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19dbe:	48 8b 00             	mov    (%rax),%rax
   19dc1:	48 39 c2             	cmp    %rax,%rdx
   19dc4:	74 05                	je     19dcb <do_check_inuse_chunk+0xb4>
   19dc6:	e8 d0 7c 01 00       	call   31a9b <abort>
   19dcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19dcf:	48 8b 40 08          	mov    0x8(%rax),%rax
   19dd3:	83 e0 03             	and    $0x3,%eax
   19dd6:	48 85 c0             	test   %rax,%rax
   19dd9:	75 13                	jne    19dee <do_check_inuse_chunk+0xd7>
   19ddb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19de3:	48 89 d6             	mov    %rdx,%rsi
   19de6:	48 89 c7             	mov    %rax,%rdi
   19de9:	e8 d5 fe ff ff       	call   19cc3 <do_check_mmapped_chunk>
   19dee:	90                   	nop
   19def:	c9                   	leave  
   19df0:	c3                   	ret    

0000000000019df1 <do_check_free_chunk>:
   19df1:	f3 0f 1e fa          	endbr64 
   19df5:	55                   	push   %rbp
   19df6:	48 89 e5             	mov    %rsp,%rbp
   19df9:	48 83 ec 20          	sub    $0x20,%rsp
   19dfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19e05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e09:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e0d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19e11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19e15:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19e19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19e1d:	48 01 d0             	add    %rdx,%rax
   19e20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19e24:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19e28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e2c:	48 89 d6             	mov    %rdx,%rsi
   19e2f:	48 89 c7             	mov    %rax,%rdi
   19e32:	e8 4a fd ff ff       	call   19b81 <do_check_any_chunk>
   19e37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e3b:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e3f:	83 e0 03             	and    $0x3,%eax
   19e42:	48 83 f8 01          	cmp    $0x1,%rax
   19e46:	74 05                	je     19e4d <do_check_free_chunk+0x5c>
   19e48:	e8 4e 7c 01 00       	call   31a9b <abort>
   19e4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e51:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e55:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19e59:	48 89 c2             	mov    %rax,%rdx
   19e5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e60:	48 01 d0             	add    %rdx,%rax
   19e63:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e67:	83 e0 01             	and    $0x1,%eax
   19e6a:	48 85 c0             	test   %rax,%rax
   19e6d:	74 05                	je     19e74 <do_check_free_chunk+0x83>
   19e6f:	e8 27 7c 01 00       	call   31a9b <abort>
   19e74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e78:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e7c:	83 e0 03             	and    $0x3,%eax
   19e7f:	48 85 c0             	test   %rax,%rax
   19e82:	75 05                	jne    19e89 <do_check_free_chunk+0x98>
   19e84:	e8 12 7c 01 00       	call   31a9b <abort>
   19e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e8d:	48 8b 40 20          	mov    0x20(%rax),%rax
   19e91:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19e95:	0f 84 c8 00 00 00    	je     19f63 <do_check_free_chunk+0x172>
   19e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e9f:	48 8b 40 28          	mov    0x28(%rax),%rax
   19ea3:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19ea7:	0f 84 b6 00 00 00    	je     19f63 <do_check_free_chunk+0x172>
   19ead:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
   19eb2:	0f 86 9f 00 00 00    	jbe    19f57 <do_check_free_chunk+0x166>
   19eb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19ebc:	83 e0 0f             	and    $0xf,%eax
   19ebf:	48 85 c0             	test   %rax,%rax
   19ec2:	74 05                	je     19ec9 <do_check_free_chunk+0xd8>
   19ec4:	e8 d2 7b 01 00       	call   31a9b <abort>
   19ec9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ecd:	48 83 c0 10          	add    $0x10,%rax
   19ed1:	83 e0 0f             	and    $0xf,%eax
   19ed4:	48 85 c0             	test   %rax,%rax
   19ed7:	74 05                	je     19ede <do_check_free_chunk+0xed>
   19ed9:	e8 bd 7b 01 00       	call   31a9b <abort>
   19ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ee2:	48 8b 00             	mov    (%rax),%rax
   19ee5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   19ee9:	74 05                	je     19ef0 <do_check_free_chunk+0xff>
   19eeb:	e8 ab 7b 01 00       	call   31a9b <abort>
   19ef0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ef4:	48 8b 40 08          	mov    0x8(%rax),%rax
   19ef8:	83 e0 01             	and    $0x1,%eax
   19efb:	48 85 c0             	test   %rax,%rax
   19efe:	75 05                	jne    19f05 <do_check_free_chunk+0x114>
   19f00:	e8 96 7b 01 00       	call   31a9b <abort>
   19f05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f09:	48 8b 40 28          	mov    0x28(%rax),%rax
   19f0d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19f11:	74 16                	je     19f29 <do_check_free_chunk+0x138>
   19f13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f17:	48 8b 40 08          	mov    0x8(%rax),%rax
   19f1b:	83 e0 03             	and    $0x3,%eax
   19f1e:	48 83 f8 01          	cmp    $0x1,%rax
   19f22:	75 05                	jne    19f29 <do_check_free_chunk+0x138>
   19f24:	e8 72 7b 01 00       	call   31a9b <abort>
   19f29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19f2d:	48 8b 40 10          	mov    0x10(%rax),%rax
   19f31:	48 8b 40 18          	mov    0x18(%rax),%rax
   19f35:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19f39:	74 05                	je     19f40 <do_check_free_chunk+0x14f>
   19f3b:	e8 5b 7b 01 00       	call   31a9b <abort>
   19f40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19f44:	48 8b 40 18          	mov    0x18(%rax),%rax
   19f48:	48 8b 40 10          	mov    0x10(%rax),%rax
   19f4c:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   19f50:	74 11                	je     19f63 <do_check_free_chunk+0x172>
   19f52:	e8 44 7b 01 00       	call   31a9b <abort>
   19f57:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
   19f5c:	74 05                	je     19f63 <do_check_free_chunk+0x172>
   19f5e:	e8 38 7b 01 00       	call   31a9b <abort>
   19f63:	90                   	nop
   19f64:	c9                   	leave  
   19f65:	c3                   	ret    

0000000000019f66 <do_check_malloced_chunk>:
   19f66:	f3 0f 1e fa          	endbr64 
   19f6a:	55                   	push   %rbp
   19f6b:	48 89 e5             	mov    %rsp,%rbp
   19f6e:	48 83 ec 30          	sub    $0x30,%rsp
   19f72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19f76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19f7a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19f7e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19f83:	74 7e                	je     1a003 <do_check_malloced_chunk+0x9d>
   19f85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19f89:	48 83 e8 10          	sub    $0x10,%rax
   19f8d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19f91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19f95:	48 8b 40 08          	mov    0x8(%rax),%rax
   19f99:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   19f9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19fa1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19fa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19fa9:	48 89 d6             	mov    %rdx,%rsi
   19fac:	48 89 c7             	mov    %rax,%rdi
   19faf:	e8 63 fd ff ff       	call   19d17 <do_check_inuse_chunk>
   19fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fb8:	83 e0 0f             	and    $0xf,%eax
   19fbb:	48 85 c0             	test   %rax,%rax
   19fbe:	74 05                	je     19fc5 <do_check_malloced_chunk+0x5f>
   19fc0:	e8 d6 7a 01 00       	call   31a9b <abort>
   19fc5:	48 83 7d f8 1f       	cmpq   $0x1f,-0x8(%rbp)
   19fca:	77 05                	ja     19fd1 <do_check_malloced_chunk+0x6b>
   19fcc:	e8 ca 7a 01 00       	call   31a9b <abort>
   19fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fd5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   19fd9:	73 05                	jae    19fe0 <do_check_malloced_chunk+0x7a>
   19fdb:	e8 bb 7a 01 00       	call   31a9b <abort>
   19fe0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19fe4:	48 8b 40 08          	mov    0x8(%rax),%rax
   19fe8:	83 e0 03             	and    $0x3,%eax
   19feb:	48 85 c0             	test   %rax,%rax
   19fee:	74 13                	je     1a003 <do_check_malloced_chunk+0x9d>
   19ff0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19ff4:	48 83 c0 20          	add    $0x20,%rax
   19ff8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   19ffc:	72 05                	jb     1a003 <do_check_malloced_chunk+0x9d>
   19ffe:	e8 98 7a 01 00       	call   31a9b <abort>
   1a003:	90                   	nop
   1a004:	c9                   	leave  
   1a005:	c3                   	ret    

000000000001a006 <do_check_tree>:
   1a006:	f3 0f 1e fa          	endbr64 
   1a00a:	55                   	push   %rbp
   1a00b:	48 89 e5             	mov    %rsp,%rbp
   1a00e:	48 83 ec 40          	sub    $0x40,%rsp
   1a012:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a016:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1a01a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1a021:	00 
   1a022:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a026:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a02a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a02e:	8b 40 38             	mov    0x38(%rax),%eax
   1a031:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1a034:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a038:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a03c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a040:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a048:	48 c1 e8 08          	shr    $0x8,%rax
   1a04c:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1a04f:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   1a053:	75 09                	jne    1a05e <do_check_tree+0x58>
   1a055:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   1a05c:	eb 45                	jmp    1a0a3 <do_check_tree+0x9d>
   1a05e:	81 7d e0 ff ff 00 00 	cmpl   $0xffff,-0x20(%rbp)
   1a065:	76 09                	jbe    1a070 <do_check_tree+0x6a>
   1a067:	c7 45 d8 1f 00 00 00 	movl   $0x1f,-0x28(%rbp)
   1a06e:	eb 33                	jmp    1a0a3 <do_check_tree+0x9d>
   1a070:	0f bd 45 e0          	bsr    -0x20(%rbp),%eax
   1a074:	83 f0 1f             	xor    $0x1f,%eax
   1a077:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1a07c:	29 c2                	sub    %eax,%edx
   1a07e:	89 d0                	mov    %edx,%eax
   1a080:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1a083:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1a086:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1a089:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1a08c:	83 c0 07             	add    $0x7,%eax
   1a08f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a093:	89 c1                	mov    %eax,%ecx
   1a095:	48 d3 ea             	shr    %cl,%rdx
   1a098:	48 89 d0             	mov    %rdx,%rax
   1a09b:	83 e0 01             	and    $0x1,%eax
   1a09e:	01 f0                	add    %esi,%eax
   1a0a0:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1a0a3:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1a0a6:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   1a0a9:	74 05                	je     1a0b0 <do_check_tree+0xaa>
   1a0ab:	e8 eb 79 01 00       	call   31a9b <abort>
   1a0b0:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
   1a0b7:	00 
   1a0b8:	77 05                	ja     1a0bf <do_check_tree+0xb9>
   1a0ba:	e8 dc 79 01 00       	call   31a9b <abort>
   1a0bf:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a0c2:	d1 e8                	shr    %eax
   1a0c4:	83 c0 08             	add    $0x8,%eax
   1a0c7:	ba 01 00 00 00       	mov    $0x1,%edx
   1a0cc:	89 c1                	mov    %eax,%ecx
   1a0ce:	48 d3 e2             	shl    %cl,%rdx
   1a0d1:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a0d4:	83 e0 01             	and    $0x1,%eax
   1a0d7:	48 89 c6             	mov    %rax,%rsi
   1a0da:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a0dd:	d1 e8                	shr    %eax
   1a0df:	83 c0 07             	add    $0x7,%eax
   1a0e2:	89 c1                	mov    %eax,%ecx
   1a0e4:	48 d3 e6             	shl    %cl,%rsi
   1a0e7:	48 89 f0             	mov    %rsi,%rax
   1a0ea:	48 09 d0             	or     %rdx,%rax
   1a0ed:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1a0f1:	73 05                	jae    1a0f8 <do_check_tree+0xf2>
   1a0f3:	e8 a3 79 01 00       	call   31a9b <abort>
   1a0f8:	83 7d d8 1f          	cmpl   $0x1f,-0x28(%rbp)
   1a0fc:	74 44                	je     1a142 <do_check_tree+0x13c>
   1a0fe:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a101:	83 c0 01             	add    $0x1,%eax
   1a104:	d1 e8                	shr    %eax
   1a106:	83 c0 08             	add    $0x8,%eax
   1a109:	ba 01 00 00 00       	mov    $0x1,%edx
   1a10e:	89 c1                	mov    %eax,%ecx
   1a110:	48 d3 e2             	shl    %cl,%rdx
   1a113:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a116:	83 c0 01             	add    $0x1,%eax
   1a119:	89 c0                	mov    %eax,%eax
   1a11b:	83 e0 01             	and    $0x1,%eax
   1a11e:	48 89 c6             	mov    %rax,%rsi
   1a121:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1a124:	83 c0 01             	add    $0x1,%eax
   1a127:	d1 e8                	shr    %eax
   1a129:	83 c0 07             	add    $0x7,%eax
   1a12c:	89 c1                	mov    %eax,%ecx
   1a12e:	48 d3 e6             	shl    %cl,%rsi
   1a131:	48 89 f0             	mov    %rsi,%rax
   1a134:	48 09 d0             	or     %rdx,%rax
   1a137:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1a13b:	72 05                	jb     1a142 <do_check_tree+0x13c>
   1a13d:	e8 59 79 01 00       	call   31a9b <abort>
   1a142:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a146:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a14a:	48 89 d6             	mov    %rdx,%rsi
   1a14d:	48 89 c7             	mov    %rax,%rdi
   1a150:	e8 2c fa ff ff       	call   19b81 <do_check_any_chunk>
   1a155:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a159:	8b 40 38             	mov    0x38(%rax),%eax
   1a15c:	39 45 dc             	cmp    %eax,-0x24(%rbp)
   1a15f:	74 05                	je     1a166 <do_check_tree+0x160>
   1a161:	e8 35 79 01 00       	call   31a9b <abort>
   1a166:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a16a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a16e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a172:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1a176:	74 05                	je     1a17d <do_check_tree+0x177>
   1a178:	e8 1e 79 01 00       	call   31a9b <abort>
   1a17d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a181:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a185:	83 e0 03             	and    $0x3,%eax
   1a188:	48 83 f8 01          	cmp    $0x1,%rax
   1a18c:	74 05                	je     1a193 <do_check_tree+0x18d>
   1a18e:	e8 08 79 01 00       	call   31a9b <abort>
   1a193:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a197:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a19b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a19f:	48 89 c2             	mov    %rax,%rdx
   1a1a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1a6:	48 01 d0             	add    %rdx,%rax
   1a1a9:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a1ad:	83 e0 01             	and    $0x1,%eax
   1a1b0:	48 85 c0             	test   %rax,%rax
   1a1b3:	74 05                	je     1a1ba <do_check_tree+0x1b4>
   1a1b5:	e8 e1 78 01 00       	call   31a9b <abort>
   1a1ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1be:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a1c2:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a1c6:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a1ca:	74 05                	je     1a1d1 <do_check_tree+0x1cb>
   1a1cc:	e8 ca 78 01 00       	call   31a9b <abort>
   1a1d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1d5:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a1d9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a1dd:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a1e1:	74 05                	je     1a1e8 <do_check_tree+0x1e2>
   1a1e3:	e8 b3 78 01 00       	call   31a9b <abort>
   1a1e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1ec:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a1f0:	48 85 c0             	test   %rax,%rax
   1a1f3:	75 28                	jne    1a21d <do_check_tree+0x217>
   1a1f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1f9:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a1fd:	48 85 c0             	test   %rax,%rax
   1a200:	74 05                	je     1a207 <do_check_tree+0x201>
   1a202:	e8 94 78 01 00       	call   31a9b <abort>
   1a207:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a20b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a20f:	48 85 c0             	test   %rax,%rax
   1a212:	0f 84 49 01 00 00    	je     1a361 <do_check_tree+0x35b>
   1a218:	e8 7e 78 01 00       	call   31a9b <abort>
   1a21d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1a222:	74 05                	je     1a229 <do_check_tree+0x223>
   1a224:	e8 72 78 01 00       	call   31a9b <abort>
   1a229:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a22d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a235:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a239:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a23d:	75 05                	jne    1a244 <do_check_tree+0x23e>
   1a23f:	e8 57 78 01 00       	call   31a9b <abort>
   1a244:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a248:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a24c:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a250:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a254:	74 28                	je     1a27e <do_check_tree+0x278>
   1a256:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a25a:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a25e:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a262:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a266:	74 16                	je     1a27e <do_check_tree+0x278>
   1a268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a26c:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a270:	48 8b 00             	mov    (%rax),%rax
   1a273:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a277:	74 05                	je     1a27e <do_check_tree+0x278>
   1a279:	e8 1d 78 01 00       	call   31a9b <abort>
   1a27e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a282:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a286:	48 85 c0             	test   %rax,%rax
   1a289:	74 41                	je     1a2cc <do_check_tree+0x2c6>
   1a28b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a28f:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a293:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a297:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a29b:	74 05                	je     1a2a2 <do_check_tree+0x29c>
   1a29d:	e8 f9 77 01 00       	call   31a9b <abort>
   1a2a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2a6:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a2aa:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a2ae:	75 05                	jne    1a2b5 <do_check_tree+0x2af>
   1a2b0:	e8 e6 77 01 00       	call   31a9b <abort>
   1a2b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2b9:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1a2bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a2c1:	48 89 d6             	mov    %rdx,%rsi
   1a2c4:	48 89 c7             	mov    %rax,%rdi
   1a2c7:	e8 3a fd ff ff       	call   1a006 <do_check_tree>
   1a2cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2d0:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a2d4:	48 85 c0             	test   %rax,%rax
   1a2d7:	74 41                	je     1a31a <do_check_tree+0x314>
   1a2d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2dd:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a2e1:	48 8b 40 30          	mov    0x30(%rax),%rax
   1a2e5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a2e9:	74 05                	je     1a2f0 <do_check_tree+0x2ea>
   1a2eb:	e8 ab 77 01 00       	call   31a9b <abort>
   1a2f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2f4:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a2f8:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a2fc:	75 05                	jne    1a303 <do_check_tree+0x2fd>
   1a2fe:	e8 98 77 01 00       	call   31a9b <abort>
   1a303:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a307:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a30b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a30f:	48 89 d6             	mov    %rdx,%rsi
   1a312:	48 89 c7             	mov    %rax,%rdi
   1a315:	e8 ec fc ff ff       	call   1a006 <do_check_tree>
   1a31a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a31e:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a322:	48 85 c0             	test   %rax,%rax
   1a325:	74 3a                	je     1a361 <do_check_tree+0x35b>
   1a327:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a32b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a32f:	48 85 c0             	test   %rax,%rax
   1a332:	74 2d                	je     1a361 <do_check_tree+0x35b>
   1a334:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a338:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a33c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a340:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a344:	48 89 c2             	mov    %rax,%rdx
   1a347:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a34b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a34f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a353:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a357:	48 39 c2             	cmp    %rax,%rdx
   1a35a:	72 05                	jb     1a361 <do_check_tree+0x35b>
   1a35c:	e8 3a 77 01 00       	call   31a9b <abort>
   1a361:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a365:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a369:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a36d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a371:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a375:	0f 85 c7 fd ff ff    	jne    1a142 <do_check_tree+0x13c>
   1a37b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1a380:	75 05                	jne    1a387 <do_check_tree+0x381>
   1a382:	e8 14 77 01 00       	call   31a9b <abort>
   1a387:	90                   	nop
   1a388:	c9                   	leave  
   1a389:	c3                   	ret    

000000000001a38a <do_check_treebin>:
   1a38a:	f3 0f 1e fa          	endbr64 
   1a38e:	55                   	push   %rbp
   1a38f:	48 89 e5             	mov    %rsp,%rbp
   1a392:	48 83 ec 30          	sub    $0x30,%rsp
   1a396:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a39a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   1a39d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1a3a0:	48 83 c0 4a          	add    $0x4a,%rax
   1a3a4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a3ab:	00 
   1a3ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a3b0:	48 01 d0             	add    %rdx,%rax
   1a3b3:	48 83 c0 08          	add    $0x8,%rax
   1a3b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a3bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a3bf:	48 8b 00             	mov    (%rax),%rax
   1a3c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a3c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a3ca:	8b 50 04             	mov    0x4(%rax),%edx
   1a3cd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1a3d0:	be 01 00 00 00       	mov    $0x1,%esi
   1a3d5:	89 c1                	mov    %eax,%ecx
   1a3d7:	d3 e6                	shl    %cl,%esi
   1a3d9:	89 f0                	mov    %esi,%eax
   1a3db:	21 d0                	and    %edx,%eax
   1a3dd:	85 c0                	test   %eax,%eax
   1a3df:	0f 94 c0             	sete   %al
   1a3e2:	0f b6 c0             	movzbl %al,%eax
   1a3e5:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1a3e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a3ed:	75 0b                	jne    1a3fa <do_check_treebin+0x70>
   1a3ef:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1a3f3:	75 05                	jne    1a3fa <do_check_treebin+0x70>
   1a3f5:	e8 a1 76 01 00       	call   31a9b <abort>
   1a3fa:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1a3fe:	75 13                	jne    1a413 <do_check_treebin+0x89>
   1a400:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a408:	48 89 d6             	mov    %rdx,%rsi
   1a40b:	48 89 c7             	mov    %rax,%rdi
   1a40e:	e8 f3 fb ff ff       	call   1a006 <do_check_tree>
   1a413:	90                   	nop
   1a414:	c9                   	leave  
   1a415:	c3                   	ret    

000000000001a416 <do_check_smallbin>:
   1a416:	f3 0f 1e fa          	endbr64 
   1a41a:	55                   	push   %rbp
   1a41b:	48 89 e5             	mov    %rsp,%rbp
   1a41e:	48 83 ec 40          	sub    $0x40,%rsp
   1a422:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a426:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   1a429:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1a42c:	01 c0                	add    %eax,%eax
   1a42e:	89 c0                	mov    %eax,%eax
   1a430:	48 83 c0 08          	add    $0x8,%rax
   1a434:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a43b:	00 
   1a43c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a440:	48 01 d0             	add    %rdx,%rax
   1a443:	48 83 c0 08          	add    $0x8,%rax
   1a447:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a44f:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a453:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a457:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a45b:	8b 10                	mov    (%rax),%edx
   1a45d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1a460:	be 01 00 00 00       	mov    $0x1,%esi
   1a465:	89 c1                	mov    %eax,%ecx
   1a467:	d3 e6                	shl    %cl,%esi
   1a469:	89 f0                	mov    %esi,%eax
   1a46b:	21 d0                	and    %edx,%eax
   1a46d:	85 c0                	test   %eax,%eax
   1a46f:	0f 94 c0             	sete   %al
   1a472:	0f b6 c0             	movzbl %al,%eax
   1a475:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1a478:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a47c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a480:	75 0b                	jne    1a48d <do_check_smallbin+0x77>
   1a482:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a486:	75 05                	jne    1a48d <do_check_smallbin+0x77>
   1a488:	e8 0e 76 01 00       	call   31a9b <abort>
   1a48d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a491:	0f 85 c2 00 00 00    	jne    1a559 <do_check_smallbin+0x143>
   1a497:	e9 af 00 00 00       	jmp    1a54b <do_check_smallbin+0x135>
   1a49c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a4a4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a4a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a4ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a4b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4b4:	48 89 d6             	mov    %rdx,%rsi
   1a4b7:	48 89 c7             	mov    %rax,%rdi
   1a4ba:	e8 32 f9 ff ff       	call   19df1 <do_check_free_chunk>
   1a4bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a4c3:	48 c1 e8 03          	shr    $0x3,%rax
   1a4c7:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
   1a4ca:	74 05                	je     1a4d1 <do_check_smallbin+0xbb>
   1a4cc:	e8 ca 75 01 00       	call   31a9b <abort>
   1a4d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4d5:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a4d9:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1a4dd:	74 25                	je     1a504 <do_check_smallbin+0xee>
   1a4df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4e3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a4e7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a4eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4ef:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a4f3:	48 31 d0             	xor    %rdx,%rax
   1a4f6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a4fa:	48 85 c0             	test   %rax,%rax
   1a4fd:	74 05                	je     1a504 <do_check_smallbin+0xee>
   1a4ff:	e8 97 75 01 00       	call   31a9b <abort>
   1a504:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a508:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a50c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a510:	48 89 c2             	mov    %rax,%rdx
   1a513:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a517:	48 01 d0             	add    %rdx,%rax
   1a51a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a51e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a522:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a526:	48 83 f8 0b          	cmp    $0xb,%rax
   1a52a:	74 13                	je     1a53f <do_check_smallbin+0x129>
   1a52c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a530:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a534:	48 89 d6             	mov    %rdx,%rsi
   1a537:	48 89 c7             	mov    %rax,%rdi
   1a53a:	e8 d8 f7 ff ff       	call   19d17 <do_check_inuse_chunk>
   1a53f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a543:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a547:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a54b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a54f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a553:	0f 85 43 ff ff ff    	jne    1a49c <do_check_smallbin+0x86>
   1a559:	90                   	nop
   1a55a:	c9                   	leave  
   1a55b:	c3                   	ret    

000000000001a55c <bin_find>:
   1a55c:	f3 0f 1e fa          	endbr64 
   1a560:	55                   	push   %rbp
   1a561:	48 89 e5             	mov    %rsp,%rbp
   1a564:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1a568:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1a56c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1a570:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a574:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a578:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a57c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a580:	48 c1 e8 03          	shr    $0x3,%rax
   1a584:	48 83 f8 1f          	cmp    $0x1f,%rax
   1a588:	0f 87 82 00 00 00    	ja     1a610 <bin_find+0xb4>
   1a58e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a592:	48 c1 e8 03          	shr    $0x3,%rax
   1a596:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1a599:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1a59c:	01 c0                	add    %eax,%eax
   1a59e:	89 c0                	mov    %eax,%eax
   1a5a0:	48 83 c0 08          	add    $0x8,%rax
   1a5a4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5ab:	00 
   1a5ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a5b0:	48 01 d0             	add    %rdx,%rax
   1a5b3:	48 83 c0 08          	add    $0x8,%rax
   1a5b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a5bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a5bf:	8b 10                	mov    (%rax),%edx
   1a5c1:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1a5c4:	be 01 00 00 00       	mov    $0x1,%esi
   1a5c9:	89 c1                	mov    %eax,%ecx
   1a5cb:	d3 e6                	shl    %cl,%esi
   1a5cd:	89 f0                	mov    %esi,%eax
   1a5cf:	21 d0                	and    %edx,%eax
   1a5d1:	85 c0                	test   %eax,%eax
   1a5d3:	0f 84 64 01 00 00    	je     1a73d <bin_find+0x1e1>
   1a5d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5dd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1a5e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5e5:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1a5e9:	75 0a                	jne    1a5f5 <bin_find+0x99>
   1a5eb:	b8 01 00 00 00       	mov    $0x1,%eax
   1a5f0:	e9 4d 01 00 00       	jmp    1a742 <bin_find+0x1e6>
   1a5f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5f9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a5fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1a601:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a605:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   1a609:	75 d6                	jne    1a5e1 <bin_find+0x85>
   1a60b:	e9 2d 01 00 00       	jmp    1a73d <bin_find+0x1e1>
   1a610:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a614:	48 c1 e8 08          	shr    $0x8,%rax
   1a618:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1a61b:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1a61f:	75 09                	jne    1a62a <bin_find+0xce>
   1a621:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   1a628:	eb 45                	jmp    1a66f <bin_find+0x113>
   1a62a:	81 7d c4 ff ff 00 00 	cmpl   $0xffff,-0x3c(%rbp)
   1a631:	76 09                	jbe    1a63c <bin_find+0xe0>
   1a633:	c7 45 c0 1f 00 00 00 	movl   $0x1f,-0x40(%rbp)
   1a63a:	eb 33                	jmp    1a66f <bin_find+0x113>
   1a63c:	0f bd 45 c4          	bsr    -0x3c(%rbp),%eax
   1a640:	83 f0 1f             	xor    $0x1f,%eax
   1a643:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1a648:	29 c2                	sub    %eax,%edx
   1a64a:	89 d0                	mov    %edx,%eax
   1a64c:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1a64f:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1a652:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1a655:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1a658:	83 c0 07             	add    $0x7,%eax
   1a65b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a65f:	89 c1                	mov    %eax,%ecx
   1a661:	48 d3 ea             	shr    %cl,%rdx
   1a664:	48 89 d0             	mov    %rdx,%rax
   1a667:	83 e0 01             	and    $0x1,%eax
   1a66a:	01 f0                	add    %esi,%eax
   1a66c:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1a66f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a673:	8b 50 04             	mov    0x4(%rax),%edx
   1a676:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1a679:	be 01 00 00 00       	mov    $0x1,%esi
   1a67e:	89 c1                	mov    %eax,%ecx
   1a680:	d3 e6                	shl    %cl,%esi
   1a682:	89 f0                	mov    %esi,%eax
   1a684:	21 d0                	and    %edx,%eax
   1a686:	85 c0                	test   %eax,%eax
   1a688:	0f 84 af 00 00 00    	je     1a73d <bin_find+0x1e1>
   1a68e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a692:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1a695:	48 83 c2 4a          	add    $0x4a,%rdx
   1a699:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1a69e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1a6a2:	83 7d c0 1f          	cmpl   $0x1f,-0x40(%rbp)
   1a6a6:	74 10                	je     1a6b8 <bin_find+0x15c>
   1a6a8:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1a6ab:	d1 e8                	shr    %eax
   1a6ad:	ba 39 00 00 00       	mov    $0x39,%edx
   1a6b2:	29 c2                	sub    %eax,%edx
   1a6b4:	89 d0                	mov    %edx,%eax
   1a6b6:	eb 05                	jmp    1a6bd <bin_find+0x161>
   1a6b8:	b8 00 00 00 00       	mov    $0x0,%eax
   1a6bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a6c1:	89 c1                	mov    %eax,%ecx
   1a6c3:	48 d3 e2             	shl    %cl,%rdx
   1a6c6:	48 89 d0             	mov    %rdx,%rax
   1a6c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a6cd:	eb 1f                	jmp    1a6ee <bin_find+0x192>
   1a6cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a6d3:	48 c1 e8 3f          	shr    $0x3f,%rax
   1a6d7:	48 89 c2             	mov    %rax,%rdx
   1a6da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a6de:	48 83 c2 04          	add    $0x4,%rdx
   1a6e2:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1a6e6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1a6ea:	48 d1 65 e0          	shlq   -0x20(%rbp)
   1a6ee:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1a6f3:	74 12                	je     1a707 <bin_find+0x1ab>
   1a6f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a6f9:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a6fd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a701:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a705:	75 c8                	jne    1a6cf <bin_find+0x173>
   1a707:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1a70c:	74 2f                	je     1a73d <bin_find+0x1e1>
   1a70e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a712:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a716:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a71a:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1a71e:	75 07                	jne    1a727 <bin_find+0x1cb>
   1a720:	b8 01 00 00 00       	mov    $0x1,%eax
   1a725:	eb 1b                	jmp    1a742 <bin_find+0x1e6>
   1a727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a72b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a72f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a737:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1a73b:	75 d9                	jne    1a716 <bin_find+0x1ba>
   1a73d:	b8 00 00 00 00       	mov    $0x0,%eax
   1a742:	5d                   	pop    %rbp
   1a743:	c3                   	ret    

000000000001a744 <traverse_and_check>:
   1a744:	f3 0f 1e fa          	endbr64 
   1a748:	55                   	push   %rbp
   1a749:	48 89 e5             	mov    %rsp,%rbp
   1a74c:	48 83 ec 30          	sub    $0x30,%rsp
   1a750:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a754:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1a75b:	00 
   1a75c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a760:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a764:	48 85 c0             	test   %rax,%rax
   1a767:	0f 84 a4 01 00 00    	je     1a911 <traverse_and_check+0x1cd>
   1a76d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a771:	48 05 78 03 00 00    	add    $0x378,%rax
   1a777:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a77b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a77f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a783:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a787:	48 01 d0             	add    %rdx,%rax
   1a78a:	48 83 c0 50          	add    $0x50,%rax
   1a78e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a792:	e9 6f 01 00 00       	jmp    1a906 <traverse_and_check+0x1c2>
   1a797:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a79b:	48 8b 10             	mov    (%rax),%rdx
   1a79e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7a2:	48 8b 00             	mov    (%rax),%rax
   1a7a5:	48 83 c0 10          	add    $0x10,%rax
   1a7a9:	83 e0 0f             	and    $0xf,%eax
   1a7ac:	48 85 c0             	test   %rax,%rax
   1a7af:	74 13                	je     1a7c4 <traverse_and_check+0x80>
   1a7b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7b5:	48 8b 00             	mov    (%rax),%rax
   1a7b8:	48 83 c0 10          	add    $0x10,%rax
   1a7bc:	48 f7 d8             	neg    %rax
   1a7bf:	83 e0 0f             	and    $0xf,%eax
   1a7c2:	eb 05                	jmp    1a7c9 <traverse_and_check+0x85>
   1a7c4:	b8 00 00 00 00       	mov    $0x0,%eax
   1a7c9:	48 01 d0             	add    %rdx,%rax
   1a7cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a7d0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1a7d7:	00 
   1a7d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a7dc:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a7e0:	83 e0 01             	and    $0x1,%eax
   1a7e3:	48 85 c0             	test   %rax,%rax
   1a7e6:	0f 85 c9 00 00 00    	jne    1a8b5 <traverse_and_check+0x171>
   1a7ec:	e8 aa 72 01 00       	call   31a9b <abort>
   1a7f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a7f5:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a7f9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a7fd:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   1a801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a805:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a809:	83 e0 03             	and    $0x3,%eax
   1a80c:	48 83 f8 01          	cmp    $0x1,%rax
   1a810:	74 31                	je     1a843 <traverse_and_check+0xff>
   1a812:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a816:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a81a:	48 89 d6             	mov    %rdx,%rsi
   1a81d:	48 89 c7             	mov    %rax,%rdi
   1a820:	e8 37 fd ff ff       	call   1a55c <bin_find>
   1a825:	85 c0                	test   %eax,%eax
   1a827:	74 05                	je     1a82e <traverse_and_check+0xea>
   1a829:	e8 6d 72 01 00       	call   31a9b <abort>
   1a82e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a836:	48 89 d6             	mov    %rdx,%rsi
   1a839:	48 89 c7             	mov    %rax,%rdi
   1a83c:	e8 d6 f4 ff ff       	call   19d17 <do_check_inuse_chunk>
   1a841:	eb 5a                	jmp    1a89d <traverse_and_check+0x159>
   1a843:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a847:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a84b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a84f:	74 1c                	je     1a86d <traverse_and_check+0x129>
   1a851:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a855:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a859:	48 89 d6             	mov    %rdx,%rsi
   1a85c:	48 89 c7             	mov    %rax,%rdi
   1a85f:	e8 f8 fc ff ff       	call   1a55c <bin_find>
   1a864:	85 c0                	test   %eax,%eax
   1a866:	75 05                	jne    1a86d <traverse_and_check+0x129>
   1a868:	e8 2e 72 01 00       	call   31a9b <abort>
   1a86d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a872:	74 16                	je     1a88a <traverse_and_check+0x146>
   1a874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a878:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a87c:	83 e0 03             	and    $0x3,%eax
   1a87f:	48 83 f8 01          	cmp    $0x1,%rax
   1a883:	75 05                	jne    1a88a <traverse_and_check+0x146>
   1a885:	e8 11 72 01 00       	call   31a9b <abort>
   1a88a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a88e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a892:	48 89 d6             	mov    %rdx,%rsi
   1a895:	48 89 c7             	mov    %rax,%rdi
   1a898:	e8 54 f5 ff ff       	call   19df1 <do_check_free_chunk>
   1a89d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a8a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a8a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a8a9:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a8ad:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a8b1:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   1a8b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8b9:	48 8b 00             	mov    (%rax),%rax
   1a8bc:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a8c0:	72 38                	jb     1a8fa <traverse_and_check+0x1b6>
   1a8c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8c6:	48 8b 10             	mov    (%rax),%rdx
   1a8c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8cd:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a8d1:	48 01 d0             	add    %rdx,%rax
   1a8d4:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a8d8:	73 20                	jae    1a8fa <traverse_and_check+0x1b6>
   1a8da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a8de:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a8e2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a8e6:	74 12                	je     1a8fa <traverse_and_check+0x1b6>
   1a8e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a8ec:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a8f0:	48 83 f8 0b          	cmp    $0xb,%rax
   1a8f4:	0f 85 f7 fe ff ff    	jne    1a7f1 <traverse_and_check+0xad>
   1a8fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8fe:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a902:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a906:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1a90b:	0f 85 86 fe ff ff    	jne    1a797 <traverse_and_check+0x53>
   1a911:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a915:	c9                   	leave  
   1a916:	c3                   	ret    

000000000001a917 <do_check_malloc_state>:
   1a917:	f3 0f 1e fa          	endbr64 
   1a91b:	55                   	push   %rbp
   1a91c:	48 89 e5             	mov    %rsp,%rbp
   1a91f:	48 83 ec 20          	sub    $0x20,%rsp
   1a923:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a927:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1a92e:	eb 15                	jmp    1a945 <do_check_malloc_state+0x2e>
   1a930:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1a933:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a937:	89 d6                	mov    %edx,%esi
   1a939:	48 89 c7             	mov    %rax,%rdi
   1a93c:	e8 d5 fa ff ff       	call   1a416 <do_check_smallbin>
   1a941:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   1a945:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   1a949:	76 e5                	jbe    1a930 <do_check_malloc_state+0x19>
   1a94b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1a952:	eb 15                	jmp    1a969 <do_check_malloc_state+0x52>
   1a954:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1a957:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a95b:	89 d6                	mov    %edx,%esi
   1a95d:	48 89 c7             	mov    %rax,%rdi
   1a960:	e8 25 fa ff ff       	call   1a38a <do_check_treebin>
   1a965:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   1a969:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   1a96d:	76 e5                	jbe    1a954 <do_check_malloc_state+0x3d>
   1a96f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a973:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a977:	48 85 c0             	test   %rax,%rax
   1a97a:	74 6c                	je     1a9e8 <do_check_malloc_state+0xd1>
   1a97c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a980:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1a984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a988:	48 89 d6             	mov    %rdx,%rsi
   1a98b:	48 89 c7             	mov    %rax,%rdi
   1a98e:	e8 ee f1 ff ff       	call   19b81 <do_check_any_chunk>
   1a993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a997:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a99b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a99f:	48 8b 40 20          	mov    0x20(%rax),%rax
   1a9a3:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a9a7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a9ab:	48 39 c2             	cmp    %rax,%rdx
   1a9ae:	74 05                	je     1a9b5 <do_check_malloc_state+0x9e>
   1a9b0:	e8 e6 70 01 00       	call   31a9b <abort>
   1a9b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a9bd:	48 83 f8 1f          	cmp    $0x1f,%rax
   1a9c1:	77 05                	ja     1a9c8 <do_check_malloc_state+0xb1>
   1a9c3:	e8 d3 70 01 00       	call   31a9b <abort>
   1a9c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9cc:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1a9d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9d4:	48 89 d6             	mov    %rdx,%rsi
   1a9d7:	48 89 c7             	mov    %rax,%rdi
   1a9da:	e8 7d fb ff ff       	call   1a55c <bin_find>
   1a9df:	85 c0                	test   %eax,%eax
   1a9e1:	74 05                	je     1a9e8 <do_check_malloc_state+0xd1>
   1a9e3:	e8 b3 70 01 00       	call   31a9b <abort>
   1a9e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9ec:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a9f0:	48 85 c0             	test   %rax,%rax
   1a9f3:	74 49                	je     1aa3e <do_check_malloc_state+0x127>
   1a9f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9f9:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a9fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa01:	48 89 d6             	mov    %rdx,%rsi
   1aa04:	48 89 c7             	mov    %rax,%rdi
   1aa07:	e8 c2 f1 ff ff       	call   19bce <do_check_top_chunk>
   1aa0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa10:	48 8b 40 10          	mov    0x10(%rax),%rax
   1aa14:	48 85 c0             	test   %rax,%rax
   1aa17:	75 05                	jne    1aa1e <do_check_malloc_state+0x107>
   1aa19:	e8 7d 70 01 00       	call   31a9b <abort>
   1aa1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa22:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1aa26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa2a:	48 89 d6             	mov    %rdx,%rsi
   1aa2d:	48 89 c7             	mov    %rax,%rdi
   1aa30:	e8 27 fb ff ff       	call   1a55c <bin_find>
   1aa35:	85 c0                	test   %eax,%eax
   1aa37:	74 05                	je     1aa3e <do_check_malloc_state+0x127>
   1aa39:	e8 5d 70 01 00       	call   31a9b <abort>
   1aa3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa42:	48 89 c7             	mov    %rax,%rdi
   1aa45:	e8 fa fc ff ff       	call   1a744 <traverse_and_check>
   1aa4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1aa4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa52:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1aa59:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1aa5d:	76 05                	jbe    1aa64 <do_check_malloc_state+0x14d>
   1aa5f:	e8 37 70 01 00       	call   31a9b <abort>
   1aa64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa68:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1aa6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa73:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1aa7a:	48 39 c2             	cmp    %rax,%rdx
   1aa7d:	76 05                	jbe    1aa84 <do_check_malloc_state+0x16d>
   1aa7f:	e8 17 70 01 00       	call   31a9b <abort>
   1aa84:	90                   	nop
   1aa85:	c9                   	leave  
   1aa86:	c3                   	ret    

000000000001aa87 <internal_mallinfo>:
   1aa87:	f3 0f 1e fa          	endbr64 
   1aa8b:	55                   	push   %rbp
   1aa8c:	48 89 e5             	mov    %rsp,%rbp
   1aa8f:	53                   	push   %rbx
   1aa90:	48 83 ec 78          	sub    $0x78,%rsp
   1aa94:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1aa98:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   1aa9c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1aaa3:	00 
   1aaa4:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1aaab:	00 
   1aaac:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   1aab3:	00 
   1aab4:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1aabb:	00 
   1aabc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1aac3:	00 
   1aac4:	48 8b 05 15 74 04 00 	mov    0x47415(%rip),%rax        # 61ee0 <mparams>
   1aacb:	48 85 c0             	test   %rax,%rax
   1aace:	75 07                	jne    1aad7 <internal_mallinfo+0x50>
   1aad0:	e8 b5 ee ff ff       	call   1998a <init_mparams>
   1aad5:	85 c0                	test   %eax,%eax
   1aad7:	90                   	nop
   1aad8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aadc:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1aae2:	83 e0 02             	and    $0x2,%eax
   1aae5:	85 c0                	test   %eax,%eax
   1aae7:	74 30                	je     1ab19 <internal_mallinfo+0x92>
   1aae9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aaed:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   1aaf4:	b8 01 00 00 00       	mov    $0x1,%eax
   1aaf9:	87 02                	xchg   %eax,(%rdx)
   1aafb:	85 c0                	test   %eax,%eax
   1aafd:	74 1a                	je     1ab19 <internal_mallinfo+0x92>
   1aaff:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ab03:	48 05 74 03 00 00    	add    $0x374,%rax
   1ab09:	48 89 c7             	mov    %rax,%rdi
   1ab0c:	e8 79 ed ff ff       	call   1988a <spin_acquire_lock>
   1ab11:	85 c0                	test   %eax,%eax
   1ab13:	0f 85 ad 01 00 00    	jne    1acc6 <internal_mallinfo+0x23f>
   1ab19:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ab1d:	48 89 c7             	mov    %rax,%rdi
   1ab20:	e8 f2 fd ff ff       	call   1a917 <do_check_malloc_state>
   1ab25:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ab29:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ab2d:	48 85 c0             	test   %rax,%rax
   1ab30:	0f 84 6e 01 00 00    	je     1aca4 <internal_mallinfo+0x21d>
   1ab36:	48 c7 45 90 01 00 00 	movq   $0x1,-0x70(%rbp)
   1ab3d:	00 
   1ab3e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ab42:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ab46:	48 83 c0 50          	add    $0x50,%rax
   1ab4a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1ab4e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ab52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1ab56:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ab5a:	48 05 78 03 00 00    	add    $0x378,%rax
   1ab60:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1ab64:	e9 d2 00 00 00       	jmp    1ac3b <internal_mallinfo+0x1b4>
   1ab69:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab6d:	48 8b 10             	mov    (%rax),%rdx
   1ab70:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab74:	48 8b 00             	mov    (%rax),%rax
   1ab77:	48 83 c0 10          	add    $0x10,%rax
   1ab7b:	83 e0 0f             	and    $0xf,%eax
   1ab7e:	48 85 c0             	test   %rax,%rax
   1ab81:	74 13                	je     1ab96 <internal_mallinfo+0x10f>
   1ab83:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab87:	48 8b 00             	mov    (%rax),%rax
   1ab8a:	48 83 c0 10          	add    $0x10,%rax
   1ab8e:	48 f7 d8             	neg    %rax
   1ab91:	83 e0 0f             	and    $0xf,%eax
   1ab94:	eb 05                	jmp    1ab9b <internal_mallinfo+0x114>
   1ab96:	b8 00 00 00 00       	mov    $0x0,%eax
   1ab9b:	48 01 d0             	add    %rdx,%rax
   1ab9e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1aba2:	eb 46                	jmp    1abea <internal_mallinfo+0x163>
   1aba4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1aba8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1abac:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1abb0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1abb4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1abb8:	48 01 45 a0          	add    %rax,-0x60(%rbp)
   1abbc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1abc0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1abc4:	83 e0 03             	and    $0x3,%eax
   1abc7:	48 83 f8 01          	cmp    $0x1,%rax
   1abcb:	75 0d                	jne    1abda <internal_mallinfo+0x153>
   1abcd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1abd1:	48 01 45 98          	add    %rax,-0x68(%rbp)
   1abd5:	48 83 45 90 01       	addq   $0x1,-0x70(%rbp)
   1abda:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1abde:	48 8b 40 08          	mov    0x8(%rax),%rax
   1abe2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1abe6:	48 01 45 b0          	add    %rax,-0x50(%rbp)
   1abea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1abee:	48 8b 00             	mov    (%rax),%rax
   1abf1:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1abf5:	72 38                	jb     1ac2f <internal_mallinfo+0x1a8>
   1abf7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1abfb:	48 8b 10             	mov    (%rax),%rdx
   1abfe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ac02:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ac06:	48 01 d0             	add    %rdx,%rax
   1ac09:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1ac0d:	73 20                	jae    1ac2f <internal_mallinfo+0x1a8>
   1ac0f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ac13:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ac17:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1ac1b:	74 12                	je     1ac2f <internal_mallinfo+0x1a8>
   1ac1d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1ac21:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ac25:	48 83 f8 0b          	cmp    $0xb,%rax
   1ac29:	0f 85 75 ff ff ff    	jne    1aba4 <internal_mallinfo+0x11d>
   1ac2f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ac33:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ac37:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1ac3b:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1ac40:	0f 85 23 ff ff ff    	jne    1ab69 <internal_mallinfo+0xe2>
   1ac46:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ac4a:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1ac4d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ac51:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1ac54:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ac58:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1ac5f:	89 c2                	mov    %eax,%edx
   1ac61:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ac65:	29 c2                	sub    %eax,%edx
   1ac67:	89 d0                	mov    %edx,%eax
   1ac69:	89 45 d0             	mov    %eax,-0x30(%rbp)
   1ac6c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ac70:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1ac77:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1ac7a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ac7e:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1ac85:	89 c2                	mov    %eax,%edx
   1ac87:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ac8b:	29 c2                	sub    %eax,%edx
   1ac8d:	89 d0                	mov    %edx,%eax
   1ac8f:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1ac92:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ac96:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1ac99:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ac9d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1aca1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1aca4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aca8:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1acae:	83 e0 02             	and    $0x2,%eax
   1acb1:	85 c0                	test   %eax,%eax
   1acb3:	74 11                	je     1acc6 <internal_mallinfo+0x23f>
   1acb5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1acb9:	48 05 74 03 00 00    	add    $0x374,%rax
   1acbf:	ba 00 00 00 00       	mov    $0x0,%edx
   1acc4:	89 10                	mov    %edx,(%rax)
   1acc6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1acca:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1acce:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   1acd2:	48 89 08             	mov    %rcx,(%rax)
   1acd5:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1acd9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1acdd:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1ace1:	48 89 48 10          	mov    %rcx,0x10(%rax)
   1ace5:	48 89 58 18          	mov    %rbx,0x18(%rax)
   1ace9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1aced:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1acf1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1acf5:	48 83 c4 78          	add    $0x78,%rsp
   1acf9:	5b                   	pop    %rbx
   1acfa:	5d                   	pop    %rbp
   1acfb:	c3                   	ret    

000000000001acfc <internal_malloc_stats>:
   1acfc:	f3 0f 1e fa          	endbr64 
   1ad00:	55                   	push   %rbp
   1ad01:	48 89 e5             	mov    %rsp,%rbp
   1ad04:	48 83 ec 40          	sub    $0x40,%rsp
   1ad08:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1ad0c:	48 8b 05 cd 71 04 00 	mov    0x471cd(%rip),%rax        # 61ee0 <mparams>
   1ad13:	48 85 c0             	test   %rax,%rax
   1ad16:	75 07                	jne    1ad1f <internal_malloc_stats+0x23>
   1ad18:	e8 6d ec ff ff       	call   1998a <init_mparams>
   1ad1d:	85 c0                	test   %eax,%eax
   1ad1f:	90                   	nop
   1ad20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad24:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1ad2a:	83 e0 02             	and    $0x2,%eax
   1ad2d:	85 c0                	test   %eax,%eax
   1ad2f:	74 30                	je     1ad61 <internal_malloc_stats+0x65>
   1ad31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad35:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   1ad3c:	b8 01 00 00 00       	mov    $0x1,%eax
   1ad41:	87 02                	xchg   %eax,(%rdx)
   1ad43:	85 c0                	test   %eax,%eax
   1ad45:	74 1a                	je     1ad61 <internal_malloc_stats+0x65>
   1ad47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad4b:	48 05 74 03 00 00    	add    $0x374,%rax
   1ad51:	48 89 c7             	mov    %rax,%rdi
   1ad54:	e8 31 eb ff ff       	call   1988a <spin_acquire_lock>
   1ad59:	85 c0                	test   %eax,%eax
   1ad5b:	0f 85 66 01 00 00    	jne    1aec7 <internal_malloc_stats+0x1cb>
   1ad61:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1ad68:	00 
   1ad69:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1ad70:	00 
   1ad71:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1ad78:	00 
   1ad79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad7d:	48 89 c7             	mov    %rax,%rdi
   1ad80:	e8 92 fb ff ff       	call   1a917 <do_check_malloc_state>
   1ad85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad89:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ad8d:	48 85 c0             	test   %rax,%rax
   1ad90:	0f 84 0f 01 00 00    	je     1aea5 <internal_malloc_stats+0x1a9>
   1ad96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad9a:	48 05 78 03 00 00    	add    $0x378,%rax
   1ada0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ada4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ada8:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1adaf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1adb3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1adb7:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1adbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1adc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1adc6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1adca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1adce:	48 29 c2             	sub    %rax,%rdx
   1add1:	48 89 d0             	mov    %rdx,%rax
   1add4:	48 83 e8 50          	sub    $0x50,%rax
   1add8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1addc:	e9 b9 00 00 00       	jmp    1ae9a <internal_malloc_stats+0x19e>
   1ade1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ade5:	48 8b 10             	mov    (%rax),%rdx
   1ade8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adec:	48 8b 00             	mov    (%rax),%rax
   1adef:	48 83 c0 10          	add    $0x10,%rax
   1adf3:	83 e0 0f             	and    $0xf,%eax
   1adf6:	48 85 c0             	test   %rax,%rax
   1adf9:	74 13                	je     1ae0e <internal_malloc_stats+0x112>
   1adfb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adff:	48 8b 00             	mov    (%rax),%rax
   1ae02:	48 83 c0 10          	add    $0x10,%rax
   1ae06:	48 f7 d8             	neg    %rax
   1ae09:	83 e0 0f             	and    $0xf,%eax
   1ae0c:	eb 05                	jmp    1ae13 <internal_malloc_stats+0x117>
   1ae0e:	b8 00 00 00 00       	mov    $0x0,%eax
   1ae13:	48 01 d0             	add    %rdx,%rax
   1ae16:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ae1a:	eb 31                	jmp    1ae4d <internal_malloc_stats+0x151>
   1ae1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae20:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ae24:	83 e0 03             	and    $0x3,%eax
   1ae27:	48 83 f8 01          	cmp    $0x1,%rax
   1ae2b:	75 10                	jne    1ae3d <internal_malloc_stats+0x141>
   1ae2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae31:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ae35:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ae39:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   1ae3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae41:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ae45:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ae49:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   1ae4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae51:	48 8b 00             	mov    (%rax),%rax
   1ae54:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ae58:	72 34                	jb     1ae8e <internal_malloc_stats+0x192>
   1ae5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae5e:	48 8b 10             	mov    (%rax),%rdx
   1ae61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae65:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ae69:	48 01 d0             	add    %rdx,%rax
   1ae6c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ae70:	73 1c                	jae    1ae8e <internal_malloc_stats+0x192>
   1ae72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ae76:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ae7a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ae7e:	74 0e                	je     1ae8e <internal_malloc_stats+0x192>
   1ae80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae84:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ae88:	48 83 f8 0b          	cmp    $0xb,%rax
   1ae8c:	75 8e                	jne    1ae1c <internal_malloc_stats+0x120>
   1ae8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae92:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ae96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ae9a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1ae9f:	0f 85 3c ff ff ff    	jne    1ade1 <internal_malloc_stats+0xe5>
   1aea5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1aea9:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1aeaf:	83 e0 02             	and    $0x2,%eax
   1aeb2:	85 c0                	test   %eax,%eax
   1aeb4:	74 11                	je     1aec7 <internal_malloc_stats+0x1cb>
   1aeb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1aeba:	48 05 74 03 00 00    	add    $0x374,%rax
   1aec0:	ba 00 00 00 00       	mov    $0x0,%edx
   1aec5:	89 10                	mov    %edx,(%rax)
   1aec7:	90                   	nop
   1aec8:	c9                   	leave  
   1aec9:	c3                   	ret    

000000000001aeca <mmap_alloc>:
   1aeca:	f3 0f 1e fa          	endbr64 
   1aece:	55                   	push   %rbp
   1aecf:	48 89 e5             	mov    %rsp,%rbp
   1aed2:	48 83 ec 40          	sub    $0x40,%rsp
   1aed6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1aeda:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1aede:	48 8b 15 03 70 04 00 	mov    0x47003(%rip),%rdx        # 61ee8 <mparams+0x8>
   1aee5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1aee9:	48 01 d0             	add    %rdx,%rax
   1aeec:	48 8d 50 3e          	lea    0x3e(%rax),%rdx
   1aef0:	48 8b 05 f1 6f 04 00 	mov    0x46ff1(%rip),%rax        # 61ee8 <mparams+0x8>
   1aef7:	48 f7 d8             	neg    %rax
   1aefa:	48 21 d0             	and    %rdx,%rax
   1aefd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1af01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1af05:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1af0c:	48 85 c0             	test   %rax,%rax
   1af0f:	74 42                	je     1af53 <mmap_alloc+0x89>
   1af11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1af15:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1af1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1af20:	48 01 d0             	add    %rdx,%rax
   1af23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1af27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1af2b:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1af32:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1af36:	76 11                	jbe    1af49 <mmap_alloc+0x7f>
   1af38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1af3c:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1af43:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1af47:	76 0a                	jbe    1af53 <mmap_alloc+0x89>
   1af49:	b8 00 00 00 00       	mov    $0x0,%eax
   1af4e:	e9 72 01 00 00       	jmp    1b0c5 <mmap_alloc+0x1fb>
   1af53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1af57:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1af5b:	0f 86 5f 01 00 00    	jbe    1b0c0 <mmap_alloc+0x1f6>
   1af61:	48 c7 45 e0 ff ff ff 	movq   $0xffffffffffffffff,-0x20(%rbp)
   1af68:	ff 
   1af69:	48 83 7d e0 ff       	cmpq   $0xffffffffffffffff,-0x20(%rbp)
   1af6e:	0f 84 4c 01 00 00    	je     1b0c0 <mmap_alloc+0x1f6>
   1af74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af78:	48 83 c0 10          	add    $0x10,%rax
   1af7c:	83 e0 0f             	and    $0xf,%eax
   1af7f:	48 85 c0             	test   %rax,%rax
   1af82:	74 10                	je     1af94 <mmap_alloc+0xca>
   1af84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af88:	48 83 c0 10          	add    $0x10,%rax
   1af8c:	48 f7 d8             	neg    %rax
   1af8f:	83 e0 0f             	and    $0xf,%eax
   1af92:	eb 05                	jmp    1af99 <mmap_alloc+0xcf>
   1af94:	b8 00 00 00 00       	mov    $0x0,%eax
   1af99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1af9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1afa1:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1afa5:	48 83 e8 20          	sub    $0x20,%rax
   1afa9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1afad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1afb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afb5:	48 01 d0             	add    %rdx,%rax
   1afb8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1afbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1afc4:	48 89 10             	mov    %rdx,(%rax)
   1afc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afcb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1afcf:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1afd3:	48 8b 0d 06 6f 04 00 	mov    0x46f06(%rip),%rcx        # 61ee0 <mparams>
   1afda:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1afde:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1afe2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1afe6:	48 01 f0             	add    %rsi,%rax
   1afe9:	48 31 ca             	xor    %rcx,%rdx
   1afec:	48 89 10             	mov    %rdx,(%rax)
   1afef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aff3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aff7:	48 01 d0             	add    %rdx,%rax
   1affa:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   1b001:	00 
   1b002:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b006:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1b00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b00e:	48 01 d0             	add    %rdx,%rax
   1b011:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1b018:	00 
   1b019:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b01d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b021:	48 85 c0             	test   %rax,%rax
   1b024:	74 0e                	je     1b034 <mmap_alloc+0x16a>
   1b026:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b02a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b02e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1b032:	73 0c                	jae    1b040 <mmap_alloc+0x176>
   1b034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b038:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b03c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b040:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b044:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b04b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b04f:	48 01 c2             	add    %rax,%rdx
   1b052:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b056:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1b05d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b061:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b068:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b06c:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1b073:	48 39 c2             	cmp    %rax,%rdx
   1b076:	76 16                	jbe    1b08e <mmap_alloc+0x1c4>
   1b078:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b07c:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b083:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b087:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   1b08e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b092:	48 83 c0 10          	add    $0x10,%rax
   1b096:	83 e0 0f             	and    $0xf,%eax
   1b099:	48 85 c0             	test   %rax,%rax
   1b09c:	74 05                	je     1b0a3 <mmap_alloc+0x1d9>
   1b09e:	e8 f8 69 01 00       	call   31a9b <abort>
   1b0a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b0a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b0ab:	48 89 d6             	mov    %rdx,%rsi
   1b0ae:	48 89 c7             	mov    %rax,%rdi
   1b0b1:	e8 0d ec ff ff       	call   19cc3 <do_check_mmapped_chunk>
   1b0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0ba:	48 83 c0 10          	add    $0x10,%rax
   1b0be:	eb 05                	jmp    1b0c5 <mmap_alloc+0x1fb>
   1b0c0:	b8 00 00 00 00       	mov    $0x0,%eax
   1b0c5:	c9                   	leave  
   1b0c6:	c3                   	ret    

000000000001b0c7 <mmap_resize>:
   1b0c7:	f3 0f 1e fa          	endbr64 
   1b0cb:	55                   	push   %rbp
   1b0cc:	48 89 e5             	mov    %rsp,%rbp
   1b0cf:	48 83 ec 60          	sub    $0x60,%rsp
   1b0d3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1b0d7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1b0db:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1b0df:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
   1b0e2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1b0e6:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b0ea:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b0ee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1b0f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b0f6:	48 c1 e8 03          	shr    $0x3,%rax
   1b0fa:	48 83 f8 1f          	cmp    $0x1f,%rax
   1b0fe:	77 0a                	ja     1b10a <mmap_resize+0x43>
   1b100:	b8 00 00 00 00       	mov    $0x0,%eax
   1b105:	e9 7d 01 00 00       	jmp    1b287 <mmap_resize+0x1c0>
   1b10a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b10e:	48 83 c0 08          	add    $0x8,%rax
   1b112:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1b116:	72 20                	jb     1b138 <mmap_resize+0x71>
   1b118:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b11c:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   1b120:	48 8b 15 c9 6d 04 00 	mov    0x46dc9(%rip),%rdx        # 61ef0 <mparams+0x10>
   1b127:	48 01 d2             	add    %rdx,%rdx
   1b12a:	48 39 d0             	cmp    %rdx,%rax
   1b12d:	77 09                	ja     1b138 <mmap_resize+0x71>
   1b12f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1b133:	e9 4f 01 00 00       	jmp    1b287 <mmap_resize+0x1c0>
   1b138:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1b13c:	48 8b 00             	mov    (%rax),%rax
   1b13f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1b143:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b147:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b14b:	48 01 d0             	add    %rdx,%rax
   1b14e:	48 83 c0 20          	add    $0x20,%rax
   1b152:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1b156:	48 8b 15 8b 6d 04 00 	mov    0x46d8b(%rip),%rdx        # 61ee8 <mparams+0x8>
   1b15d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b161:	48 01 d0             	add    %rdx,%rax
   1b164:	48 8d 50 3e          	lea    0x3e(%rax),%rdx
   1b168:	48 8b 05 79 6d 04 00 	mov    0x46d79(%rip),%rax        # 61ee8 <mparams+0x8>
   1b16f:	48 f7 d8             	neg    %rax
   1b172:	48 21 d0             	and    %rdx,%rax
   1b175:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b179:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
   1b180:	ff 
   1b181:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
   1b186:	0f 84 f6 00 00 00    	je     1b282 <mmap_resize+0x1bb>
   1b18c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b190:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b194:	48 01 d0             	add    %rdx,%rax
   1b197:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b19b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b19f:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   1b1a3:	48 83 e8 20          	sub    $0x20,%rax
   1b1a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b1ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b1af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b1b3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b1b7:	48 8b 0d 22 6d 04 00 	mov    0x46d22(%rip),%rcx        # 61ee0 <mparams>
   1b1be:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1b1c2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b1c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b1ca:	48 01 f0             	add    %rsi,%rax
   1b1cd:	48 31 ca             	xor    %rcx,%rdx
   1b1d0:	48 89 10             	mov    %rdx,(%rax)
   1b1d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b1db:	48 01 d0             	add    %rdx,%rax
   1b1de:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   1b1e5:	00 
   1b1e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b1ea:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1b1ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b1f2:	48 01 d0             	add    %rdx,%rax
   1b1f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1b1fc:	00 
   1b1fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b201:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b205:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1b209:	73 0c                	jae    1b217 <mmap_resize+0x150>
   1b20b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b20f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b213:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b217:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b21b:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b222:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b226:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   1b22a:	48 01 c2             	add    %rax,%rdx
   1b22d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b231:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1b238:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b23c:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b243:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b247:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1b24e:	48 39 c2             	cmp    %rax,%rdx
   1b251:	76 16                	jbe    1b269 <mmap_resize+0x1a2>
   1b253:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b257:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1b25e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b262:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   1b269:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b26d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b271:	48 89 d6             	mov    %rdx,%rsi
   1b274:	48 89 c7             	mov    %rax,%rdi
   1b277:	e8 47 ea ff ff       	call   19cc3 <do_check_mmapped_chunk>
   1b27c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b280:	eb 05                	jmp    1b287 <mmap_resize+0x1c0>
   1b282:	b8 00 00 00 00       	mov    $0x0,%eax
   1b287:	c9                   	leave  
   1b288:	c3                   	ret    

000000000001b289 <init_top>:
   1b289:	f3 0f 1e fa          	endbr64 
   1b28d:	55                   	push   %rbp
   1b28e:	48 89 e5             	mov    %rsp,%rbp
   1b291:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b295:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b299:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1b29d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2a1:	48 83 c0 10          	add    $0x10,%rax
   1b2a5:	83 e0 0f             	and    $0xf,%eax
   1b2a8:	48 85 c0             	test   %rax,%rax
   1b2ab:	74 10                	je     1b2bd <init_top+0x34>
   1b2ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2b1:	48 83 c0 10          	add    $0x10,%rax
   1b2b5:	48 f7 d8             	neg    %rax
   1b2b8:	83 e0 0f             	and    $0xf,%eax
   1b2bb:	eb 05                	jmp    1b2c2 <init_top+0x39>
   1b2bd:	b8 00 00 00 00       	mov    $0x0,%eax
   1b2c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b2c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b2ca:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   1b2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b2d2:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   1b2d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b2de:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1b2e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b2ea:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b2ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b2f2:	48 83 c8 01          	or     $0x1,%rax
   1b2f6:	48 89 c2             	mov    %rax,%rdx
   1b2f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b301:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b305:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b309:	48 01 d0             	add    %rdx,%rax
   1b30c:	48 c7 40 08 50 00 00 	movq   $0x50,0x8(%rax)
   1b313:	00 
   1b314:	48 8b 15 e5 6b 04 00 	mov    0x46be5(%rip),%rdx        # 61f00 <mparams+0x20>
   1b31b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b31f:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1b323:	90                   	nop
   1b324:	5d                   	pop    %rbp
   1b325:	c3                   	ret    

000000000001b326 <init_bins>:
   1b326:	f3 0f 1e fa          	endbr64 
   1b32a:	55                   	push   %rbp
   1b32b:	48 89 e5             	mov    %rsp,%rbp
   1b32e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b332:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1b339:	eb 42                	jmp    1b37d <init_bins+0x57>
   1b33b:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1b33e:	01 c0                	add    %eax,%eax
   1b340:	89 c0                	mov    %eax,%eax
   1b342:	48 83 c0 08          	add    $0x8,%rax
   1b346:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b34d:	00 
   1b34e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b352:	48 01 d0             	add    %rdx,%rax
   1b355:	48 83 c0 08          	add    $0x8,%rax
   1b359:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b35d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b361:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b365:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b36d:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1b371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b375:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b379:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   1b37d:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   1b381:	76 b8                	jbe    1b33b <init_bins+0x15>
   1b383:	90                   	nop
   1b384:	90                   	nop
   1b385:	5d                   	pop    %rbp
   1b386:	c3                   	ret    

000000000001b387 <prepend_alloc>:
   1b387:	f3 0f 1e fa          	endbr64 
   1b38b:	55                   	push   %rbp
   1b38c:	48 89 e5             	mov    %rsp,%rbp
   1b38f:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   1b396:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
   1b39d:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
   1b3a4:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   1b3ab:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
   1b3b2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1b3b9:	48 83 c0 10          	add    $0x10,%rax
   1b3bd:	83 e0 0f             	and    $0xf,%eax
   1b3c0:	48 85 c0             	test   %rax,%rax
   1b3c3:	74 16                	je     1b3db <prepend_alloc+0x54>
   1b3c5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1b3cc:	48 83 c0 10          	add    $0x10,%rax
   1b3d0:	48 f7 d8             	neg    %rax
   1b3d3:	83 e0 0f             	and    $0xf,%eax
   1b3d6:	48 89 c2             	mov    %rax,%rdx
   1b3d9:	eb 05                	jmp    1b3e0 <prepend_alloc+0x59>
   1b3db:	ba 00 00 00 00       	mov    $0x0,%edx
   1b3e0:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1b3e7:	48 01 d0             	add    %rdx,%rax
   1b3ea:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1b3f1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1b3f8:	48 83 c0 10          	add    $0x10,%rax
   1b3fc:	83 e0 0f             	and    $0xf,%eax
   1b3ff:	48 85 c0             	test   %rax,%rax
   1b402:	74 16                	je     1b41a <prepend_alloc+0x93>
   1b404:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1b40b:	48 83 c0 10          	add    $0x10,%rax
   1b40f:	48 f7 d8             	neg    %rax
   1b412:	83 e0 0f             	and    $0xf,%eax
   1b415:	48 89 c2             	mov    %rax,%rdx
   1b418:	eb 05                	jmp    1b41f <prepend_alloc+0x98>
   1b41a:	ba 00 00 00 00       	mov    $0x0,%edx
   1b41f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1b426:	48 01 d0             	add    %rdx,%rax
   1b429:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1b430:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b437:	48 2b 85 68 ff ff ff 	sub    -0x98(%rbp),%rax
   1b43e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1b445:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1b44c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b453:	48 01 d0             	add    %rdx,%rax
   1b456:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1b45d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1b464:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1b46b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1b472:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b479:	48 83 c8 03          	or     $0x3,%rax
   1b47d:	48 89 c2             	mov    %rax,%rdx
   1b480:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1b487:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b48b:	48 8b 0d 4e 6a 04 00 	mov    0x46a4e(%rip),%rcx        # 61ee0 <mparams>
   1b492:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1b499:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   1b4a0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b4a7:	48 01 f0             	add    %rsi,%rax
   1b4aa:	48 31 ca             	xor    %rcx,%rdx
   1b4ad:	48 89 10             	mov    %rdx,(%rax)
   1b4b0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b4b7:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   1b4be:	77 05                	ja     1b4c5 <prepend_alloc+0x13e>
   1b4c0:	e8 d6 65 01 00       	call   31a9b <abort>
   1b4c5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b4cc:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b4d0:	83 e0 01             	and    $0x1,%eax
   1b4d3:	48 85 c0             	test   %rax,%rax
   1b4d6:	75 05                	jne    1b4dd <prepend_alloc+0x156>
   1b4d8:	e8 be 65 01 00       	call   31a9b <abort>
   1b4dd:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
   1b4e4:	1f 
   1b4e5:	77 05                	ja     1b4ec <prepend_alloc+0x165>
   1b4e7:	e8 af 65 01 00       	call   31a9b <abort>
   1b4ec:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b4f3:	48 8b 40 28          	mov    0x28(%rax),%rax
   1b4f7:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b4fe:	75 75                	jne    1b575 <prepend_alloc+0x1ee>
   1b500:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b507:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1b50b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1b512:	48 01 c2             	add    %rax,%rdx
   1b515:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b51c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b520:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b527:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b52b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b52f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b536:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1b53d:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1b541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b545:	48 83 c8 01          	or     $0x1,%rax
   1b549:	48 89 c2             	mov    %rax,%rdx
   1b54c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1b553:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b557:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1b55e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b565:	48 89 d6             	mov    %rdx,%rsi
   1b568:	48 89 c7             	mov    %rax,%rdi
   1b56b:	e8 5e e6 ff ff       	call   19bce <do_check_top_chunk>
   1b570:	e9 95 0a 00 00       	jmp    1c00a <prepend_alloc+0xc83>
   1b575:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b57c:	48 8b 40 20          	mov    0x20(%rax),%rax
   1b580:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b587:	75 71                	jne    1b5fa <prepend_alloc+0x273>
   1b589:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b590:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1b594:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1b59b:	48 01 c2             	add    %rax,%rdx
   1b59e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b5a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b5a9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b5b0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b5b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b5b8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b5bf:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1b5c6:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1b5ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b5ce:	48 83 c8 01          	or     $0x1,%rax
   1b5d2:	48 89 c2             	mov    %rax,%rdx
   1b5d5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1b5dc:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b5e0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1b5e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b5eb:	48 01 c2             	add    %rax,%rdx
   1b5ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b5f2:	48 89 02             	mov    %rax,(%rdx)
   1b5f5:	e9 10 0a 00 00       	jmp    1c00a <prepend_alloc+0xc83>
   1b5fa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b601:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b605:	83 e0 03             	and    $0x3,%eax
   1b608:	48 83 f8 01          	cmp    $0x1,%rax
   1b60c:	0f 85 70 05 00 00    	jne    1bb82 <prepend_alloc+0x7fb>
   1b612:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b619:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b61d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b621:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1b625:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1b629:	48 c1 e8 03          	shr    $0x3,%rax
   1b62d:	48 83 f8 1f          	cmp    $0x1f,%rax
   1b631:	0f 87 c6 01 00 00    	ja     1b7fd <prepend_alloc+0x476>
   1b637:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b63e:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b642:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1b646:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b64d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b651:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1b655:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1b659:	48 c1 e8 03          	shr    $0x3,%rax
   1b65d:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
   1b663:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b66a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1b66e:	75 05                	jne    1b675 <prepend_alloc+0x2ee>
   1b670:	e8 26 64 01 00       	call   31a9b <abort>
   1b675:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b67c:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1b680:	75 05                	jne    1b687 <prepend_alloc+0x300>
   1b682:	e8 14 64 01 00       	call   31a9b <abort>
   1b687:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b68e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b692:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b696:	48 89 c2             	mov    %rax,%rdx
   1b699:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1b69f:	c1 e0 03             	shl    $0x3,%eax
   1b6a2:	89 c0                	mov    %eax,%eax
   1b6a4:	48 39 c2             	cmp    %rax,%rdx
   1b6a7:	74 05                	je     1b6ae <prepend_alloc+0x327>
   1b6a9:	e8 ed 63 01 00       	call   31a9b <abort>
   1b6ae:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1b6b4:	01 c0                	add    %eax,%eax
   1b6b6:	89 c0                	mov    %eax,%eax
   1b6b8:	48 83 c0 08          	add    $0x8,%rax
   1b6bc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b6c3:	00 
   1b6c4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b6cb:	48 01 d0             	add    %rdx,%rax
   1b6ce:	48 83 c0 08          	add    $0x8,%rax
   1b6d2:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1b6d6:	0f 94 c0             	sete   %al
   1b6d9:	0f b6 c0             	movzbl %al,%eax
   1b6dc:	48 85 c0             	test   %rax,%rax
   1b6df:	75 48                	jne    1b729 <prepend_alloc+0x3a2>
   1b6e1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b6e8:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b6ec:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1b6f0:	0f 93 c0             	setae  %al
   1b6f3:	0f b6 c0             	movzbl %al,%eax
   1b6f6:	48 85 c0             	test   %rax,%rax
   1b6f9:	74 21                	je     1b71c <prepend_alloc+0x395>
   1b6fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b6ff:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b703:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b70a:	0f 94 c0             	sete   %al
   1b70d:	0f b6 c0             	movzbl %al,%eax
   1b710:	48 85 c0             	test   %rax,%rax
   1b713:	74 07                	je     1b71c <prepend_alloc+0x395>
   1b715:	b8 01 00 00 00       	mov    $0x1,%eax
   1b71a:	eb 05                	jmp    1b721 <prepend_alloc+0x39a>
   1b71c:	b8 00 00 00 00       	mov    $0x0,%eax
   1b721:	85 c0                	test   %eax,%eax
   1b723:	0f 84 cf 00 00 00    	je     1b7f8 <prepend_alloc+0x471>
   1b729:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b72d:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1b731:	75 2c                	jne    1b75f <prepend_alloc+0x3d8>
   1b733:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b73a:	8b 10                	mov    (%rax),%edx
   1b73c:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1b742:	be 01 00 00 00       	mov    $0x1,%esi
   1b747:	89 c1                	mov    %eax,%ecx
   1b749:	d3 e6                	shl    %cl,%esi
   1b74b:	89 f0                	mov    %esi,%eax
   1b74d:	f7 d0                	not    %eax
   1b74f:	21 c2                	and    %eax,%edx
   1b751:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b758:	89 10                	mov    %edx,(%rax)
   1b75a:	e9 0d 04 00 00       	jmp    1bb6c <prepend_alloc+0x7e5>
   1b75f:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1b765:	01 c0                	add    %eax,%eax
   1b767:	89 c0                	mov    %eax,%eax
   1b769:	48 83 c0 08          	add    $0x8,%rax
   1b76d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b774:	00 
   1b775:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b77c:	48 01 d0             	add    %rdx,%rax
   1b77f:	48 83 c0 08          	add    $0x8,%rax
   1b783:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1b787:	0f 94 c0             	sete   %al
   1b78a:	0f b6 c0             	movzbl %al,%eax
   1b78d:	48 85 c0             	test   %rax,%rax
   1b790:	75 44                	jne    1b7d6 <prepend_alloc+0x44f>
   1b792:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b799:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b79d:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1b7a1:	0f 93 c0             	setae  %al
   1b7a4:	0f b6 c0             	movzbl %al,%eax
   1b7a7:	48 85 c0             	test   %rax,%rax
   1b7aa:	74 21                	je     1b7cd <prepend_alloc+0x446>
   1b7ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b7b0:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b7b4:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b7bb:	0f 94 c0             	sete   %al
   1b7be:	0f b6 c0             	movzbl %al,%eax
   1b7c1:	48 85 c0             	test   %rax,%rax
   1b7c4:	74 07                	je     1b7cd <prepend_alloc+0x446>
   1b7c6:	b8 01 00 00 00       	mov    $0x1,%eax
   1b7cb:	eb 05                	jmp    1b7d2 <prepend_alloc+0x44b>
   1b7cd:	b8 00 00 00 00       	mov    $0x0,%eax
   1b7d2:	85 c0                	test   %eax,%eax
   1b7d4:	74 1d                	je     1b7f3 <prepend_alloc+0x46c>
   1b7d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b7da:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1b7de:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b7e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b7e6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1b7ea:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b7ee:	e9 79 03 00 00       	jmp    1bb6c <prepend_alloc+0x7e5>
   1b7f3:	e8 a3 62 01 00       	call   31a9b <abort>
   1b7f8:	e8 9e 62 01 00       	call   31a9b <abort>
   1b7fd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b804:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1b808:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b80c:	48 8b 40 30          	mov    0x30(%rax),%rax
   1b810:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1b814:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b818:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b81c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b820:	0f 84 9e 00 00 00    	je     1b8c4 <prepend_alloc+0x53d>
   1b826:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b82a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b82e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1b832:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b836:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b83a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1b841:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b848:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b84c:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1b850:	0f 93 c0             	setae  %al
   1b853:	0f b6 c0             	movzbl %al,%eax
   1b856:	48 85 c0             	test   %rax,%rax
   1b859:	74 1e                	je     1b879 <prepend_alloc+0x4f2>
   1b85b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1b85f:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b863:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b867:	0f 94 c0             	sete   %al
   1b86a:	0f b6 c0             	movzbl %al,%eax
   1b86d:	48 85 c0             	test   %rax,%rax
   1b870:	74 07                	je     1b879 <prepend_alloc+0x4f2>
   1b872:	b8 01 00 00 00       	mov    $0x1,%eax
   1b877:	eb 05                	jmp    1b87e <prepend_alloc+0x4f7>
   1b879:	b8 00 00 00 00       	mov    $0x0,%eax
   1b87e:	85 c0                	test   %eax,%eax
   1b880:	74 3d                	je     1b8bf <prepend_alloc+0x538>
   1b882:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1b889:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b88d:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b891:	0f 94 c0             	sete   %al
   1b894:	0f b6 c0             	movzbl %al,%eax
   1b897:	48 85 c0             	test   %rax,%rax
   1b89a:	74 23                	je     1b8bf <prepend_alloc+0x538>
   1b89c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1b8a0:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1b8a7:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b8ab:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1b8b2:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1b8b6:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b8ba:	e9 f2 00 00 00       	jmp    1b9b1 <prepend_alloc+0x62a>
   1b8bf:	e8 d7 61 01 00       	call   31a9b <abort>
   1b8c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b8c8:	48 83 c0 28          	add    $0x28,%rax
   1b8cc:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1b8d3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b8da:	48 8b 00             	mov    (%rax),%rax
   1b8dd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1b8e4:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1b8eb:	00 
   1b8ec:	75 4f                	jne    1b93d <prepend_alloc+0x5b6>
   1b8ee:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b8f2:	48 83 c0 20          	add    $0x20,%rax
   1b8f6:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1b8fd:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b904:	48 8b 00             	mov    (%rax),%rax
   1b907:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1b90e:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1b915:	00 
   1b916:	0f 84 95 00 00 00    	je     1b9b1 <prepend_alloc+0x62a>
   1b91c:	eb 1f                	jmp    1b93d <prepend_alloc+0x5b6>
   1b91e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b925:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1b92c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b933:	48 8b 00             	mov    (%rax),%rax
   1b936:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1b93d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1b944:	48 83 c0 28          	add    $0x28,%rax
   1b948:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1b94f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b956:	48 8b 00             	mov    (%rax),%rax
   1b959:	48 85 c0             	test   %rax,%rax
   1b95c:	75 c0                	jne    1b91e <prepend_alloc+0x597>
   1b95e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1b965:	48 83 c0 20          	add    $0x20,%rax
   1b969:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1b970:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b977:	48 8b 00             	mov    (%rax),%rax
   1b97a:	48 85 c0             	test   %rax,%rax
   1b97d:	75 9f                	jne    1b91e <prepend_alloc+0x597>
   1b97f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b986:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b98a:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b991:	0f 93 c0             	setae  %al
   1b994:	0f b6 c0             	movzbl %al,%eax
   1b997:	48 85 c0             	test   %rax,%rax
   1b99a:	74 10                	je     1b9ac <prepend_alloc+0x625>
   1b99c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b9a3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b9aa:	eb 05                	jmp    1b9b1 <prepend_alloc+0x62a>
   1b9ac:	e8 ea 60 01 00       	call   31a9b <abort>
   1b9b1:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1b9b6:	0f 84 b0 01 00 00    	je     1bb6c <prepend_alloc+0x7e5>
   1b9bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b9c0:	8b 40 38             	mov    0x38(%rax),%eax
   1b9c3:	89 c0                	mov    %eax,%eax
   1b9c5:	48 83 c0 4a          	add    $0x4a,%rax
   1b9c9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b9d0:	00 
   1b9d1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1b9d8:	48 01 d0             	add    %rdx,%rax
   1b9db:	48 83 c0 08          	add    $0x8,%rax
   1b9df:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1b9e3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1b9e7:	48 8b 00             	mov    (%rax),%rax
   1b9ea:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b9ee:	75 46                	jne    1ba36 <prepend_alloc+0x6af>
   1b9f0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1b9f4:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1b9fb:	48 89 10             	mov    %rdx,(%rax)
   1b9fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ba02:	48 8b 00             	mov    (%rax),%rax
   1ba05:	48 85 c0             	test   %rax,%rax
   1ba08:	75 7b                	jne    1ba85 <prepend_alloc+0x6fe>
   1ba0a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ba11:	8b 50 04             	mov    0x4(%rax),%edx
   1ba14:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ba18:	8b 40 38             	mov    0x38(%rax),%eax
   1ba1b:	be 01 00 00 00       	mov    $0x1,%esi
   1ba20:	89 c1                	mov    %eax,%ecx
   1ba22:	d3 e6                	shl    %cl,%esi
   1ba24:	89 f0                	mov    %esi,%eax
   1ba26:	f7 d0                	not    %eax
   1ba28:	21 c2                	and    %eax,%edx
   1ba2a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ba31:	89 50 04             	mov    %edx,0x4(%rax)
   1ba34:	eb 4f                	jmp    1ba85 <prepend_alloc+0x6fe>
   1ba36:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ba3d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ba41:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1ba45:	0f 93 c0             	setae  %al
   1ba48:	0f b6 c0             	movzbl %al,%eax
   1ba4b:	48 85 c0             	test   %rax,%rax
   1ba4e:	74 30                	je     1ba80 <prepend_alloc+0x6f9>
   1ba50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ba54:	48 8b 40 20          	mov    0x20(%rax),%rax
   1ba58:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ba5c:	75 11                	jne    1ba6f <prepend_alloc+0x6e8>
   1ba5e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ba62:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1ba69:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1ba6d:	eb 16                	jmp    1ba85 <prepend_alloc+0x6fe>
   1ba6f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ba73:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1ba7a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1ba7e:	eb 05                	jmp    1ba85 <prepend_alloc+0x6fe>
   1ba80:	e8 16 60 01 00       	call   31a9b <abort>
   1ba85:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1ba8c:	00 
   1ba8d:	0f 84 d9 00 00 00    	je     1bb6c <prepend_alloc+0x7e5>
   1ba93:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ba9a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ba9e:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1baa5:	0f 93 c0             	setae  %al
   1baa8:	0f b6 c0             	movzbl %al,%eax
   1baab:	48 85 c0             	test   %rax,%rax
   1baae:	0f 84 b3 00 00 00    	je     1bb67 <prepend_alloc+0x7e0>
   1bab4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1babb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1babf:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bac3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bac7:	48 8b 40 20          	mov    0x20(%rax),%rax
   1bacb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1bacf:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1bad4:	74 3f                	je     1bb15 <prepend_alloc+0x78e>
   1bad6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1badd:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bae1:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1bae5:	0f 93 c0             	setae  %al
   1bae8:	0f b6 c0             	movzbl %al,%eax
   1baeb:	48 85 c0             	test   %rax,%rax
   1baee:	74 20                	je     1bb10 <prepend_alloc+0x789>
   1baf0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1baf7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1bafb:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1baff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1bb03:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1bb0a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bb0e:	eb 05                	jmp    1bb15 <prepend_alloc+0x78e>
   1bb10:	e8 86 5f 01 00       	call   31a9b <abort>
   1bb15:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bb19:	48 8b 40 28          	mov    0x28(%rax),%rax
   1bb1d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1bb21:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1bb26:	74 44                	je     1bb6c <prepend_alloc+0x7e5>
   1bb28:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bb2f:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bb33:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1bb37:	0f 93 c0             	setae  %al
   1bb3a:	0f b6 c0             	movzbl %al,%eax
   1bb3d:	48 85 c0             	test   %rax,%rax
   1bb40:	74 20                	je     1bb62 <prepend_alloc+0x7db>
   1bb42:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1bb49:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1bb4d:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1bb51:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1bb55:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1bb5c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bb60:	eb 0a                	jmp    1bb6c <prepend_alloc+0x7e5>
   1bb62:	e8 34 5f 01 00       	call   31a9b <abort>
   1bb67:	e8 2f 5f 01 00       	call   31a9b <abort>
   1bb6c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1bb70:	48 01 85 28 ff ff ff 	add    %rax,-0xd8(%rbp)
   1bb77:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1bb7b:	48 01 85 30 ff ff ff 	add    %rax,-0xd0(%rbp)
   1bb82:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bb89:	48 8b 40 08          	mov    0x8(%rax),%rax
   1bb8d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1bb91:	48 89 c2             	mov    %rax,%rdx
   1bb94:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bb9b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bb9f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bba6:	48 83 c8 01          	or     $0x1,%rax
   1bbaa:	48 89 c2             	mov    %rax,%rdx
   1bbad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1bbb4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bbb8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1bbbf:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bbc6:	48 01 c2             	add    %rax,%rdx
   1bbc9:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bbd0:	48 89 02             	mov    %rax,(%rdx)
   1bbd3:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bbda:	48 c1 e8 03          	shr    $0x3,%rax
   1bbde:	48 83 f8 1f          	cmp    $0x1f,%rax
   1bbe2:	0f 87 18 01 00 00    	ja     1bd00 <prepend_alloc+0x979>
   1bbe8:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bbef:	48 c1 e8 03          	shr    $0x3,%rax
   1bbf3:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   1bbf9:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1bbff:	01 c0                	add    %eax,%eax
   1bc01:	89 c0                	mov    %eax,%eax
   1bc03:	48 83 c0 08          	add    $0x8,%rax
   1bc07:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bc0e:	00 
   1bc0f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bc16:	48 01 d0             	add    %rdx,%rax
   1bc19:	48 83 c0 08          	add    $0x8,%rax
   1bc1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1bc21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc25:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1bc2c:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
   1bc33:	1f 
   1bc34:	77 05                	ja     1bc3b <prepend_alloc+0x8b4>
   1bc36:	e8 60 5e 01 00       	call   31a9b <abort>
   1bc3b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bc42:	8b 10                	mov    (%rax),%edx
   1bc44:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1bc4a:	be 01 00 00 00       	mov    $0x1,%esi
   1bc4f:	89 c1                	mov    %eax,%ecx
   1bc51:	d3 e6                	shl    %cl,%esi
   1bc53:	89 f0                	mov    %esi,%eax
   1bc55:	21 d0                	and    %edx,%eax
   1bc57:	85 c0                	test   %eax,%eax
   1bc59:	75 27                	jne    1bc82 <prepend_alloc+0x8fb>
   1bc5b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bc62:	8b 10                	mov    (%rax),%edx
   1bc64:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1bc6a:	be 01 00 00 00       	mov    $0x1,%esi
   1bc6f:	89 c1                	mov    %eax,%ecx
   1bc71:	d3 e6                	shl    %cl,%esi
   1bc73:	89 f0                	mov    %esi,%eax
   1bc75:	09 c2                	or     %eax,%edx
   1bc77:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bc7e:	89 10                	mov    %edx,(%rax)
   1bc80:	eb 37                	jmp    1bcb9 <prepend_alloc+0x932>
   1bc82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc86:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1bc8a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bc91:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bc95:	48 39 c2             	cmp    %rax,%rdx
   1bc98:	0f 93 c0             	setae  %al
   1bc9b:	0f b6 c0             	movzbl %al,%eax
   1bc9e:	48 85 c0             	test   %rax,%rax
   1bca1:	74 11                	je     1bcb4 <prepend_alloc+0x92d>
   1bca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bca7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1bcab:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1bcb2:	eb 05                	jmp    1bcb9 <prepend_alloc+0x932>
   1bcb4:	e8 e2 5d 01 00       	call   31a9b <abort>
   1bcb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bcbd:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1bcc4:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bcc8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1bccf:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1bcd6:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bcda:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1bce1:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1bce8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bcec:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1bcf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bcf7:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bcfb:	e9 f1 02 00 00       	jmp    1bff1 <prepend_alloc+0xc6a>
   1bd00:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1bd07:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1bd0b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1bd12:	48 c1 e8 08          	shr    $0x8,%rax
   1bd16:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   1bd1c:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
   1bd23:	75 0c                	jne    1bd31 <prepend_alloc+0x9aa>
   1bd25:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
   1bd2c:	00 00 00 
   1bd2f:	eb 5d                	jmp    1bd8e <prepend_alloc+0xa07>
   1bd31:	81 bd 1c ff ff ff ff 	cmpl   $0xffff,-0xe4(%rbp)
   1bd38:	ff 00 00 
   1bd3b:	76 0c                	jbe    1bd49 <prepend_alloc+0x9c2>
   1bd3d:	c7 85 14 ff ff ff 1f 	movl   $0x1f,-0xec(%rbp)
   1bd44:	00 00 00 
   1bd47:	eb 45                	jmp    1bd8e <prepend_alloc+0xa07>
   1bd49:	0f bd 85 1c ff ff ff 	bsr    -0xe4(%rbp),%eax
   1bd50:	83 f0 1f             	xor    $0x1f,%eax
   1bd53:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1bd58:	29 c2                	sub    %eax,%edx
   1bd5a:	89 d0                	mov    %edx,%eax
   1bd5c:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
   1bd62:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   1bd68:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1bd6b:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   1bd71:	83 c0 07             	add    $0x7,%eax
   1bd74:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1bd7b:	89 c1                	mov    %eax,%ecx
   1bd7d:	48 d3 ea             	shr    %cl,%rdx
   1bd80:	48 89 d0             	mov    %rdx,%rax
   1bd83:	83 e0 01             	and    $0x1,%eax
   1bd86:	01 f0                	add    %esi,%eax
   1bd88:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
   1bd8e:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1bd94:	48 83 c0 4a          	add    $0x4a,%rax
   1bd98:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bd9f:	00 
   1bda0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bda7:	48 01 d0             	add    %rdx,%rax
   1bdaa:	48 83 c0 08          	add    $0x8,%rax
   1bdae:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1bdb2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bdb6:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   1bdbc:	89 50 38             	mov    %edx,0x38(%rax)
   1bdbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bdc3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1bdca:	00 
   1bdcb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bdcf:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1bdd3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bdd7:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1bddb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bde2:	8b 50 04             	mov    0x4(%rax),%edx
   1bde5:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1bdeb:	be 01 00 00 00       	mov    $0x1,%esi
   1bdf0:	89 c1                	mov    %eax,%ecx
   1bdf2:	d3 e6                	shl    %cl,%esi
   1bdf4:	89 f0                	mov    %esi,%eax
   1bdf6:	21 d0                	and    %edx,%eax
   1bdf8:	85 c0                	test   %eax,%eax
   1bdfa:	75 5f                	jne    1be5b <prepend_alloc+0xad4>
   1bdfc:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1be03:	8b 50 04             	mov    0x4(%rax),%edx
   1be06:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1be0c:	be 01 00 00 00       	mov    $0x1,%esi
   1be11:	89 c1                	mov    %eax,%ecx
   1be13:	d3 e6                	shl    %cl,%esi
   1be15:	89 f0                	mov    %esi,%eax
   1be17:	09 c2                	or     %eax,%edx
   1be19:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1be20:	89 50 04             	mov    %edx,0x4(%rax)
   1be23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be27:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1be2b:	48 89 10             	mov    %rdx,(%rax)
   1be2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1be32:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1be36:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1be3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1be3e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1be42:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1be46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1be4a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1be4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1be52:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1be56:	e9 96 01 00 00       	jmp    1bff1 <prepend_alloc+0xc6a>
   1be5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be5f:	48 8b 00             	mov    (%rax),%rax
   1be62:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1be69:	83 bd 14 ff ff ff 1f 	cmpl   $0x1f,-0xec(%rbp)
   1be70:	74 13                	je     1be85 <prepend_alloc+0xafe>
   1be72:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1be78:	d1 e8                	shr    %eax
   1be7a:	ba 39 00 00 00       	mov    $0x39,%edx
   1be7f:	29 c2                	sub    %eax,%edx
   1be81:	89 d0                	mov    %edx,%eax
   1be83:	eb 05                	jmp    1be8a <prepend_alloc+0xb03>
   1be85:	b8 00 00 00 00       	mov    $0x0,%eax
   1be8a:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1be91:	89 c1                	mov    %eax,%ecx
   1be93:	48 d3 e2             	shl    %cl,%rdx
   1be96:	48 89 d0             	mov    %rdx,%rax
   1be99:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1bea0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1bea7:	48 8b 40 08          	mov    0x8(%rax),%rax
   1beab:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1beaf:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
   1beb6:	0f 84 a2 00 00 00    	je     1bf5e <prepend_alloc+0xbd7>
   1bebc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1bec3:	48 c1 e8 3f          	shr    $0x3f,%rax
   1bec7:	48 83 c0 04          	add    $0x4,%rax
   1becb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bed2:	00 
   1bed3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1beda:	48 01 d0             	add    %rdx,%rax
   1bedd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1bee1:	48 d1 a5 60 ff ff ff 	shlq   -0xa0(%rbp)
   1bee8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1beec:	48 8b 00             	mov    (%rax),%rax
   1beef:	48 85 c0             	test   %rax,%rax
   1bef2:	74 10                	je     1bf04 <prepend_alloc+0xb7d>
   1bef4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bef8:	48 8b 00             	mov    (%rax),%rax
   1befb:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1bf02:	eb 9c                	jmp    1bea0 <prepend_alloc+0xb19>
   1bf04:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bf0b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bf0f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1bf13:	0f 93 c0             	setae  %al
   1bf16:	0f b6 c0             	movzbl %al,%eax
   1bf19:	48 85 c0             	test   %rax,%rax
   1bf1c:	74 3b                	je     1bf59 <prepend_alloc+0xbd2>
   1bf1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bf22:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1bf26:	48 89 10             	mov    %rdx,(%rax)
   1bf29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bf2d:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1bf34:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bf38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bf3c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1bf40:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bf44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bf48:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1bf4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bf50:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bf54:	e9 98 00 00 00       	jmp    1bff1 <prepend_alloc+0xc6a>
   1bf59:	e8 3d 5b 01 00       	call   31a9b <abort>
   1bf5e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1bf65:	48 8b 40 10          	mov    0x10(%rax),%rax
   1bf69:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1bf6d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bf74:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bf78:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)
   1bf7f:	0f 93 c0             	setae  %al
   1bf82:	0f b6 c0             	movzbl %al,%eax
   1bf85:	48 85 c0             	test   %rax,%rax
   1bf88:	74 62                	je     1bfec <prepend_alloc+0xc65>
   1bf8a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bf91:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bf95:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1bf99:	0f 93 c0             	setae  %al
   1bf9c:	0f b6 c0             	movzbl %al,%eax
   1bf9f:	48 85 c0             	test   %rax,%rax
   1bfa2:	74 48                	je     1bfec <prepend_alloc+0xc65>
   1bfa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfa8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1bfac:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bfb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfb4:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1bfb8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1bfbf:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bfc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bfc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bfcb:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bfcf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bfd3:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1bfda:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bfde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1bfe2:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1bfe9:	00 
   1bfea:	eb 05                	jmp    1bff1 <prepend_alloc+0xc6a>
   1bfec:	e8 aa 5a 01 00       	call   31a9b <abort>
   1bff1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1bff8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bfff:	48 89 d6             	mov    %rdx,%rsi
   1c002:	48 89 c7             	mov    %rax,%rdi
   1c005:	e8 e7 dd ff ff       	call   19df1 <do_check_free_chunk>
   1c00a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c011:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1c015:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1c01c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1c023:	48 89 ce             	mov    %rcx,%rsi
   1c026:	48 89 c7             	mov    %rax,%rdi
   1c029:	e8 38 df ff ff       	call   19f66 <do_check_malloced_chunk>
   1c02e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c035:	48 83 c0 10          	add    $0x10,%rax
   1c039:	c9                   	leave  
   1c03a:	c3                   	ret    

000000000001c03b <add_segment>:
   1c03b:	f3 0f 1e fa          	endbr64 
   1c03f:	55                   	push   %rbp
   1c040:	48 89 e5             	mov    %rsp,%rbp
   1c043:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   1c04a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1c051:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
   1c058:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   1c05f:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
   1c065:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c06c:	48 8b 40 28          	mov    0x28(%rax),%rax
   1c070:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c077:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c07e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c085:	48 89 d6             	mov    %rdx,%rsi
   1c088:	48 89 c7             	mov    %rax,%rdi
   1c08b:	e8 33 d8 ff ff       	call   198c3 <segment_holding>
   1c090:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1c097:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c09e:	48 8b 10             	mov    (%rax),%rdx
   1c0a1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c0a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c0ac:	48 01 d0             	add    %rdx,%rax
   1c0af:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1c0b6:	48 c7 85 78 ff ff ff 	movq   $0x30,-0x88(%rbp)
   1c0bd:	30 00 00 00 
   1c0c1:	48 c7 c0 d1 ff ff ff 	mov    $0xffffffffffffffd1,%rax
   1c0c8:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
   1c0cf:	48 89 c2             	mov    %rax,%rdx
   1c0d2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1c0d9:	48 01 d0             	add    %rdx,%rax
   1c0dc:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1c0e0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1c0e4:	48 83 c0 10          	add    $0x10,%rax
   1c0e8:	83 e0 0f             	and    $0xf,%eax
   1c0eb:	48 85 c0             	test   %rax,%rax
   1c0ee:	74 10                	je     1c100 <add_segment+0xc5>
   1c0f0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1c0f4:	48 83 c0 10          	add    $0x10,%rax
   1c0f8:	48 f7 d8             	neg    %rax
   1c0fb:	83 e0 0f             	and    $0xf,%eax
   1c0fe:	eb 05                	jmp    1c105 <add_segment+0xca>
   1c100:	b8 00 00 00 00       	mov    $0x0,%eax
   1c105:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1c109:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c10d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c111:	48 01 d0             	add    %rdx,%rax
   1c114:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1c118:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c11f:	48 83 c0 20          	add    $0x20,%rax
   1c123:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1c127:	73 09                	jae    1c132 <add_segment+0xf7>
   1c129:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c130:	eb 04                	jmp    1c136 <add_segment+0xfb>
   1c132:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1c136:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c13a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c13e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c142:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c146:	48 83 c0 10          	add    $0x10,%rax
   1c14a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c14e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1c152:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c159:	48 01 d0             	add    %rdx,%rax
   1c15c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c160:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c164:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1c16b:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
   1c172:	00 00 00 
   1c175:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1c17c:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   1c180:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   1c187:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c18e:	48 89 ce             	mov    %rcx,%rsi
   1c191:	48 89 c7             	mov    %rax,%rdi
   1c194:	e8 f0 f0 ff ff       	call   1b289 <init_top>
   1c199:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c19d:	83 e0 0f             	and    $0xf,%eax
   1c1a0:	48 85 c0             	test   %rax,%rax
   1c1a3:	74 05                	je     1c1aa <add_segment+0x16f>
   1c1a5:	e8 f1 58 01 00       	call   31a9b <abort>
   1c1aa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c1b1:	48 83 c8 03          	or     $0x3,%rax
   1c1b5:	48 89 c2             	mov    %rax,%rdx
   1c1b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c1bc:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c1c0:	48 8b 0d 19 5d 04 00 	mov    0x45d19(%rip),%rcx        # 61ee0 <mparams>
   1c1c7:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1c1ce:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   1c1d2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c1d9:	48 01 f0             	add    %rsi,%rax
   1c1dc:	48 31 ca             	xor    %rcx,%rdx
   1c1df:	48 89 10             	mov    %rdx,(%rax)
   1c1e2:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1c1e6:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
   1c1ed:	48 8b 86 78 03 00 00 	mov    0x378(%rsi),%rax
   1c1f4:	48 8b 96 80 03 00 00 	mov    0x380(%rsi),%rdx
   1c1fb:	48 89 01             	mov    %rax,(%rcx)
   1c1fe:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1c202:	48 8b 86 88 03 00 00 	mov    0x388(%rsi),%rax
   1c209:	48 8b 96 90 03 00 00 	mov    0x390(%rsi),%rdx
   1c210:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1c214:	48 89 51 18          	mov    %rdx,0x18(%rcx)
   1c218:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c21f:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1c226:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
   1c22d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c234:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1c23b:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
   1c242:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c249:	8b 95 04 ff ff ff    	mov    -0xfc(%rbp),%edx
   1c24f:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
   1c255:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c25c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1c260:	48 89 90 88 03 00 00 	mov    %rdx,0x388(%rax)
   1c267:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c26e:	48 83 c0 08          	add    $0x8,%rax
   1c272:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1c276:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c27d:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   1c284:	00 
   1c285:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
   1c28c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1c290:	48 83 c0 08          	add    $0x8,%rax
   1c294:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1c29b:	76 0d                	jbe    1c2aa <add_segment+0x26f>
   1c29d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1c2a1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1c2a8:	eb bd                	jmp    1c267 <add_segment+0x22c>
   1c2aa:	90                   	nop
   1c2ab:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
   1c2b2:	7f 05                	jg     1c2b9 <add_segment+0x27e>
   1c2b4:	e8 e2 57 01 00       	call   31a9b <abort>
   1c2b9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c2bd:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
   1c2c4:	0f 84 5f 04 00 00    	je     1c729 <add_segment+0x6ee>
   1c2ca:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c2d1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1c2d5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c2d9:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
   1c2e0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1c2e4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c2e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c2ec:	48 01 d0             	add    %rdx,%rax
   1c2ef:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1c2f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c2f7:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c2fb:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1c2ff:	48 89 c2             	mov    %rax,%rdx
   1c302:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c306:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c30a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c30e:	48 83 c8 01          	or     $0x1,%rax
   1c312:	48 89 c2             	mov    %rax,%rdx
   1c315:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c319:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c31d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c321:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c325:	48 01 c2             	add    %rax,%rdx
   1c328:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c32c:	48 89 02             	mov    %rax,(%rdx)
   1c32f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c333:	48 c1 e8 03          	shr    $0x3,%rax
   1c337:	48 83 f8 1f          	cmp    $0x1f,%rax
   1c33b:	0f 87 06 01 00 00    	ja     1c447 <add_segment+0x40c>
   1c341:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c345:	48 c1 e8 03          	shr    $0x3,%rax
   1c349:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1c34f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1c355:	01 c0                	add    %eax,%eax
   1c357:	89 c0                	mov    %eax,%eax
   1c359:	48 83 c0 08          	add    $0x8,%rax
   1c35d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c364:	00 
   1c365:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c36c:	48 01 d0             	add    %rdx,%rax
   1c36f:	48 83 c0 08          	add    $0x8,%rax
   1c373:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c37b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c382:	48 83 7d c8 1f       	cmpq   $0x1f,-0x38(%rbp)
   1c387:	77 05                	ja     1c38e <add_segment+0x353>
   1c389:	e8 0d 57 01 00       	call   31a9b <abort>
   1c38e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c395:	8b 10                	mov    (%rax),%edx
   1c397:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1c39d:	be 01 00 00 00       	mov    $0x1,%esi
   1c3a2:	89 c1                	mov    %eax,%ecx
   1c3a4:	d3 e6                	shl    %cl,%esi
   1c3a6:	89 f0                	mov    %esi,%eax
   1c3a8:	21 d0                	and    %edx,%eax
   1c3aa:	85 c0                	test   %eax,%eax
   1c3ac:	75 27                	jne    1c3d5 <add_segment+0x39a>
   1c3ae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c3b5:	8b 10                	mov    (%rax),%edx
   1c3b7:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1c3bd:	be 01 00 00 00       	mov    $0x1,%esi
   1c3c2:	89 c1                	mov    %eax,%ecx
   1c3c4:	d3 e6                	shl    %cl,%esi
   1c3c6:	89 f0                	mov    %esi,%eax
   1c3c8:	09 c2                	or     %eax,%edx
   1c3ca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c3d1:	89 10                	mov    %edx,(%rax)
   1c3d3:	eb 37                	jmp    1c40c <add_segment+0x3d1>
   1c3d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c3d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1c3dd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c3e4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c3e8:	48 39 c2             	cmp    %rax,%rdx
   1c3eb:	0f 93 c0             	setae  %al
   1c3ee:	0f b6 c0             	movzbl %al,%eax
   1c3f1:	48 85 c0             	test   %rax,%rax
   1c3f4:	74 11                	je     1c407 <add_segment+0x3cc>
   1c3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c3fa:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c3fe:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c405:	eb 05                	jmp    1c40c <add_segment+0x3d1>
   1c407:	e8 8f 56 01 00       	call   31a9b <abort>
   1c40c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c410:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c414:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c418:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c41f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c423:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c427:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c42b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1c432:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c436:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c43a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1c43e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c442:	e9 e2 02 00 00       	jmp    1c729 <add_segment+0x6ee>
   1c447:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c44b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1c44f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c453:	48 c1 e8 08          	shr    $0x8,%rax
   1c457:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   1c45d:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
   1c464:	75 0c                	jne    1c472 <add_segment+0x437>
   1c466:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
   1c46d:	00 00 00 
   1c470:	eb 5a                	jmp    1c4cc <add_segment+0x491>
   1c472:	81 bd 34 ff ff ff ff 	cmpl   $0xffff,-0xcc(%rbp)
   1c479:	ff 00 00 
   1c47c:	76 0c                	jbe    1c48a <add_segment+0x44f>
   1c47e:	c7 85 30 ff ff ff 1f 	movl   $0x1f,-0xd0(%rbp)
   1c485:	00 00 00 
   1c488:	eb 42                	jmp    1c4cc <add_segment+0x491>
   1c48a:	0f bd 85 34 ff ff ff 	bsr    -0xcc(%rbp),%eax
   1c491:	83 f0 1f             	xor    $0x1f,%eax
   1c494:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1c499:	29 c2                	sub    %eax,%edx
   1c49b:	89 d0                	mov    %edx,%eax
   1c49d:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
   1c4a3:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1c4a9:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1c4ac:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1c4b2:	83 c0 07             	add    $0x7,%eax
   1c4b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1c4b9:	89 c1                	mov    %eax,%ecx
   1c4bb:	48 d3 ea             	shr    %cl,%rdx
   1c4be:	48 89 d0             	mov    %rdx,%rax
   1c4c1:	83 e0 01             	and    $0x1,%eax
   1c4c4:	01 f0                	add    %esi,%eax
   1c4c6:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1c4cc:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1c4d2:	48 83 c0 4a          	add    $0x4a,%rax
   1c4d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c4dd:	00 
   1c4de:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c4e5:	48 01 d0             	add    %rdx,%rax
   1c4e8:	48 83 c0 08          	add    $0x8,%rax
   1c4ec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1c4f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c4f4:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   1c4fa:	89 50 38             	mov    %edx,0x38(%rax)
   1c4fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c501:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1c508:	00 
   1c509:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c50d:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1c511:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c515:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1c519:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c520:	8b 50 04             	mov    0x4(%rax),%edx
   1c523:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1c529:	be 01 00 00 00       	mov    $0x1,%esi
   1c52e:	89 c1                	mov    %eax,%ecx
   1c530:	d3 e6                	shl    %cl,%esi
   1c532:	89 f0                	mov    %esi,%eax
   1c534:	21 d0                	and    %edx,%eax
   1c536:	85 c0                	test   %eax,%eax
   1c538:	75 5f                	jne    1c599 <add_segment+0x55e>
   1c53a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c541:	8b 50 04             	mov    0x4(%rax),%edx
   1c544:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1c54a:	be 01 00 00 00       	mov    $0x1,%esi
   1c54f:	89 c1                	mov    %eax,%ecx
   1c551:	d3 e6                	shl    %cl,%esi
   1c553:	89 f0                	mov    %esi,%eax
   1c555:	09 c2                	or     %eax,%edx
   1c557:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c55e:	89 50 04             	mov    %edx,0x4(%rax)
   1c561:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c565:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c569:	48 89 10             	mov    %rdx,(%rax)
   1c56c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c570:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c574:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c57c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c580:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c584:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c588:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1c58c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c590:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c594:	e9 90 01 00 00       	jmp    1c729 <add_segment+0x6ee>
   1c599:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c59d:	48 8b 00             	mov    (%rax),%rax
   1c5a0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1c5a7:	83 bd 30 ff ff ff 1f 	cmpl   $0x1f,-0xd0(%rbp)
   1c5ae:	74 13                	je     1c5c3 <add_segment+0x588>
   1c5b0:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1c5b6:	d1 e8                	shr    %eax
   1c5b8:	ba 39 00 00 00       	mov    $0x39,%edx
   1c5bd:	29 c2                	sub    %eax,%edx
   1c5bf:	89 d0                	mov    %edx,%eax
   1c5c1:	eb 05                	jmp    1c5c8 <add_segment+0x58d>
   1c5c3:	b8 00 00 00 00       	mov    $0x0,%eax
   1c5c8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1c5cc:	89 c1                	mov    %eax,%ecx
   1c5ce:	48 d3 e2             	shl    %cl,%rdx
   1c5d1:	48 89 d0             	mov    %rdx,%rax
   1c5d4:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1c5db:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1c5e2:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c5e6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c5ea:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1c5ee:	0f 84 a2 00 00 00    	je     1c696 <add_segment+0x65b>
   1c5f4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1c5fb:	48 c1 e8 3f          	shr    $0x3f,%rax
   1c5ff:	48 83 c0 04          	add    $0x4,%rax
   1c603:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c60a:	00 
   1c60b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1c612:	48 01 d0             	add    %rdx,%rax
   1c615:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c619:	48 d1 a5 58 ff ff ff 	shlq   -0xa8(%rbp)
   1c620:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c624:	48 8b 00             	mov    (%rax),%rax
   1c627:	48 85 c0             	test   %rax,%rax
   1c62a:	74 10                	je     1c63c <add_segment+0x601>
   1c62c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c630:	48 8b 00             	mov    (%rax),%rax
   1c633:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1c63a:	eb 9f                	jmp    1c5db <add_segment+0x5a0>
   1c63c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c643:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c647:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1c64b:	0f 93 c0             	setae  %al
   1c64e:	0f b6 c0             	movzbl %al,%eax
   1c651:	48 85 c0             	test   %rax,%rax
   1c654:	74 3b                	je     1c691 <add_segment+0x656>
   1c656:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c65a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c65e:	48 89 10             	mov    %rdx,(%rax)
   1c661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c665:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1c66c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c670:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c674:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c678:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c67c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c680:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1c684:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c688:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c68c:	e9 98 00 00 00       	jmp    1c729 <add_segment+0x6ee>
   1c691:	e8 05 54 01 00       	call   31a9b <abort>
   1c696:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1c69d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c6a1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1c6a5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c6ac:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c6b0:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1c6b7:	0f 93 c0             	setae  %al
   1c6ba:	0f b6 c0             	movzbl %al,%eax
   1c6bd:	48 85 c0             	test   %rax,%rax
   1c6c0:	74 62                	je     1c724 <add_segment+0x6e9>
   1c6c2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c6c9:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c6cd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1c6d1:	0f 93 c0             	setae  %al
   1c6d4:	0f b6 c0             	movzbl %al,%eax
   1c6d7:	48 85 c0             	test   %rax,%rax
   1c6da:	74 48                	je     1c724 <add_segment+0x6e9>
   1c6dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6e0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c6e4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c6e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6ec:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1c6f0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1c6f7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c6fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c6ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c703:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c70b:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1c712:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c716:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c71a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1c721:	00 
   1c722:	eb 05                	jmp    1c729 <add_segment+0x6ee>
   1c724:	e8 72 53 01 00       	call   31a9b <abort>
   1c729:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c730:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1c734:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c73b:	48 89 d6             	mov    %rdx,%rsi
   1c73e:	48 89 c7             	mov    %rax,%rdi
   1c741:	e8 88 d4 ff ff       	call   19bce <do_check_top_chunk>
   1c746:	90                   	nop
   1c747:	c9                   	leave  
   1c748:	c3                   	ret    

000000000001c749 <sys_alloc>:
   1c749:	f3 0f 1e fa          	endbr64 
   1c74d:	55                   	push   %rbp
   1c74e:	48 89 e5             	mov    %rsp,%rbp
   1c751:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1c758:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   1c75f:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
   1c766:	48 c7 85 60 ff ff ff 	movq   $0xffffffffffffffff,-0xa0(%rbp)
   1c76d:	ff ff ff ff 
   1c771:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   1c778:	00 00 00 00 
   1c77c:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   1c783:	00 00 00 
   1c786:	48 8b 05 53 57 04 00 	mov    0x45753(%rip),%rax        # 61ee0 <mparams>
   1c78d:	48 85 c0             	test   %rax,%rax
   1c790:	75 07                	jne    1c799 <sys_alloc+0x50>
   1c792:	e8 f3 d1 ff ff       	call   1998a <init_mparams>
   1c797:	85 c0                	test   %eax,%eax
   1c799:	90                   	nop
   1c79a:	48 8b 15 4f 57 04 00 	mov    0x4574f(%rip),%rdx        # 61ef0 <mparams+0x10>
   1c7a1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c7a8:	48 01 d0             	add    %rdx,%rax
   1c7ab:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1c7af:	48 8b 05 3a 57 04 00 	mov    0x4573a(%rip),%rax        # 61ef0 <mparams+0x10>
   1c7b6:	48 f7 d8             	neg    %rax
   1c7b9:	48 21 d0             	and    %rdx,%rax
   1c7bc:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1c7c0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c7c4:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1c7cb:	77 0a                	ja     1c7d7 <sys_alloc+0x8e>
   1c7cd:	b8 00 00 00 00       	mov    $0x0,%eax
   1c7d2:	e9 41 09 00 00       	jmp    1d118 <sys_alloc+0x9cf>
   1c7d7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c7de:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1c7e5:	48 85 c0             	test   %rax,%rax
   1c7e8:	74 4b                	je     1c835 <sys_alloc+0xec>
   1c7ea:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c7f1:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1c7f8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c7fc:	48 01 d0             	add    %rdx,%rax
   1c7ff:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1c803:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c80a:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1c811:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1c815:	76 14                	jbe    1c82b <sys_alloc+0xe2>
   1c817:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c81e:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1c825:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1c829:	76 0a                	jbe    1c835 <sys_alloc+0xec>
   1c82b:	b8 00 00 00 00       	mov    $0x0,%eax
   1c830:	e9 e3 08 00 00       	jmp    1d118 <sys_alloc+0x9cf>
   1c835:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c83c:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1c842:	83 e0 04             	and    $0x4,%eax
   1c845:	85 c0                	test   %eax,%eax
   1c847:	0f 85 37 03 00 00    	jne    1cb84 <sys_alloc+0x43b>
   1c84d:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
   1c854:	ff ff ff ff 
   1c858:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c85c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1c863:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c86a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1c86e:	48 85 c0             	test   %rax,%rax
   1c871:	74 1f                	je     1c892 <sys_alloc+0x149>
   1c873:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c87a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1c87e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c885:	48 89 d6             	mov    %rdx,%rsi
   1c888:	48 89 c7             	mov    %rax,%rdi
   1c88b:	e8 33 d0 ff ff       	call   198c3 <segment_holding>
   1c890:	eb 05                	jmp    1c897 <sys_alloc+0x14e>
   1c892:	b8 00 00 00 00       	mov    $0x0,%eax
   1c897:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c89b:	b8 01 00 00 00       	mov    $0x1,%eax
   1c8a0:	87 05 22 56 04 00    	xchg   %eax,0x45622(%rip)        # 61ec8 <malloc_global_mutex>
   1c8a6:	85 c0                	test   %eax,%eax
   1c8a8:	74 0c                	je     1c8b6 <sys_alloc+0x16d>
   1c8aa:	48 8d 3d 17 56 04 00 	lea    0x45617(%rip),%rdi        # 61ec8 <malloc_global_mutex>
   1c8b1:	e8 d4 cf ff ff       	call   1988a <spin_acquire_lock>
   1c8b6:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c8bb:	0f 85 2f 01 00 00    	jne    1c9f0 <sys_alloc+0x2a7>
   1c8c1:	bf 00 00 00 00       	mov    $0x0,%edi
   1c8c6:	e8 59 ca ff ff       	call   19324 <sbrk>
   1c8cb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c8cf:	48 83 7d a0 ff       	cmpq   $0xffffffffffffffff,-0x60(%rbp)
   1c8d4:	0f 84 ad 01 00 00    	je     1ca87 <sys_alloc+0x33e>
   1c8da:	48 8b 05 07 56 04 00 	mov    0x45607(%rip),%rax        # 61ee8 <mparams+0x8>
   1c8e1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1c8e5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c8e9:	48 21 d0             	and    %rdx,%rax
   1c8ec:	48 85 c0             	test   %rax,%rax
   1c8ef:	74 30                	je     1c921 <sys_alloc+0x1d8>
   1c8f1:	48 8b 15 f0 55 04 00 	mov    0x455f0(%rip),%rdx        # 61ee8 <mparams+0x8>
   1c8f8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c8fc:	48 01 d0             	add    %rdx,%rax
   1c8ff:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1c903:	48 8b 05 de 55 04 00 	mov    0x455de(%rip),%rax        # 61ee8 <mparams+0x8>
   1c90a:	48 f7 d8             	neg    %rax
   1c90d:	48 21 c2             	and    %rax,%rdx
   1c910:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c914:	48 29 c2             	sub    %rax,%rdx
   1c917:	48 89 d0             	mov    %rdx,%rax
   1c91a:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
   1c921:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c928:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1c92f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c936:	48 01 d0             	add    %rdx,%rax
   1c939:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c93d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c944:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1c94b:	0f 86 36 01 00 00    	jbe    1ca87 <sys_alloc+0x33e>
   1c951:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1c958:	ff ff 7f 
   1c95b:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1c962:	0f 87 1f 01 00 00    	ja     1ca87 <sys_alloc+0x33e>
   1c968:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c96f:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1c976:	48 85 c0             	test   %rax,%rax
   1c979:	74 30                	je     1c9ab <sys_alloc+0x262>
   1c97b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c982:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1c989:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1c98d:	0f 86 f4 00 00 00    	jbe    1ca87 <sys_alloc+0x33e>
   1c993:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c99a:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1c9a1:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1c9a5:	0f 87 dc 00 00 00    	ja     1ca87 <sys_alloc+0x33e>
   1c9ab:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c9b2:	48 89 c7             	mov    %rax,%rdi
   1c9b5:	e8 6a c9 ff ff       	call   19324 <sbrk>
   1c9ba:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1c9c1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1c9c8:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1c9cc:	0f 85 b5 00 00 00    	jne    1ca87 <sys_alloc+0x33e>
   1c9d2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c9d6:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c9dd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1c9e4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1c9eb:	e9 97 00 00 00       	jmp    1ca87 <sys_alloc+0x33e>
   1c9f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c9f7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c9fb:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ca02:	48 29 c2             	sub    %rax,%rdx
   1ca05:	48 8b 05 e4 54 04 00 	mov    0x454e4(%rip),%rax        # 61ef0 <mparams+0x10>
   1ca0c:	48 01 d0             	add    %rdx,%rax
   1ca0f:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1ca13:	48 8b 05 d6 54 04 00 	mov    0x454d6(%rip),%rax        # 61ef0 <mparams+0x10>
   1ca1a:	48 f7 d8             	neg    %rax
   1ca1d:	48 21 d0             	and    %rdx,%rax
   1ca20:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1ca27:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1ca2e:	ff ff 7f 
   1ca31:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1ca38:	77 4d                	ja     1ca87 <sys_alloc+0x33e>
   1ca3a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ca41:	48 89 c7             	mov    %rax,%rdi
   1ca44:	e8 db c8 ff ff       	call   19324 <sbrk>
   1ca49:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1ca50:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ca54:	48 8b 10             	mov    (%rax),%rdx
   1ca57:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ca5b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ca5f:	48 01 d0             	add    %rdx,%rax
   1ca62:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1ca69:	75 1c                	jne    1ca87 <sys_alloc+0x33e>
   1ca6b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1ca72:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1ca79:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ca80:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1ca87:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1ca8e:	ff 
   1ca8f:	0f 85 e4 00 00 00    	jne    1cb79 <sys_alloc+0x430>
   1ca95:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
   1ca9c:	ff 
   1ca9d:	0f 84 b0 00 00 00    	je     1cb53 <sys_alloc+0x40a>
   1caa3:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1caaa:	ff ff 7f 
   1caad:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1cab4:	0f 87 99 00 00 00    	ja     1cb53 <sys_alloc+0x40a>
   1caba:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1cac1:	48 83 c0 60          	add    $0x60,%rax
   1cac5:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1cacc:	0f 83 81 00 00 00    	jae    1cb53 <sys_alloc+0x40a>
   1cad2:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1cad9:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
   1cae0:	48 89 c2             	mov    %rax,%rdx
   1cae3:	48 8b 05 06 54 04 00 	mov    0x45406(%rip),%rax        # 61ef0 <mparams+0x10>
   1caea:	48 01 d0             	add    %rdx,%rax
   1caed:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1caf1:	48 8b 05 f8 53 04 00 	mov    0x453f8(%rip),%rax        # 61ef0 <mparams+0x10>
   1caf8:	48 f7 d8             	neg    %rax
   1cafb:	48 21 d0             	and    %rdx,%rax
   1cafe:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1cb02:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1cb09:	ff ff 7f 
   1cb0c:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1cb10:	77 41                	ja     1cb53 <sys_alloc+0x40a>
   1cb12:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1cb16:	48 89 c7             	mov    %rax,%rdi
   1cb19:	e8 06 c8 ff ff       	call   19324 <sbrk>
   1cb1e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1cb22:	48 83 7d b8 ff       	cmpq   $0xffffffffffffffff,-0x48(%rbp)
   1cb27:	74 0d                	je     1cb36 <sys_alloc+0x3ed>
   1cb29:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1cb2d:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
   1cb34:	eb 1d                	jmp    1cb53 <sys_alloc+0x40a>
   1cb36:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1cb3d:	48 f7 d8             	neg    %rax
   1cb40:	48 89 c7             	mov    %rax,%rdi
   1cb43:	e8 dc c7 ff ff       	call   19324 <sbrk>
   1cb48:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
   1cb4f:	ff ff ff ff 
   1cb53:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
   1cb5a:	ff 
   1cb5b:	74 1c                	je     1cb79 <sys_alloc+0x430>
   1cb5d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1cb64:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1cb6b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1cb72:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1cb79:	b8 00 00 00 00       	mov    $0x0,%eax
   1cb7e:	89 05 44 53 04 00    	mov    %eax,0x45344(%rip)        # 61ec8 <malloc_global_mutex>
   1cb84:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1cb8b:	ff 
   1cb8c:	0f 85 b3 00 00 00    	jne    1cc45 <sys_alloc+0x4fc>
   1cb92:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1cb99:	ff ff 7f 
   1cb9c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1cba0:	0f 87 9f 00 00 00    	ja     1cc45 <sys_alloc+0x4fc>
   1cba6:	48 c7 45 c0 ff ff ff 	movq   $0xffffffffffffffff,-0x40(%rbp)
   1cbad:	ff 
   1cbae:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,-0x38(%rbp)
   1cbb5:	ff 
   1cbb6:	b8 01 00 00 00       	mov    $0x1,%eax
   1cbbb:	87 05 07 53 04 00    	xchg   %eax,0x45307(%rip)        # 61ec8 <malloc_global_mutex>
   1cbc1:	85 c0                	test   %eax,%eax
   1cbc3:	74 0c                	je     1cbd1 <sys_alloc+0x488>
   1cbc5:	48 8d 3d fc 52 04 00 	lea    0x452fc(%rip),%rdi        # 61ec8 <malloc_global_mutex>
   1cbcc:	e8 b9 cc ff ff       	call   1988a <spin_acquire_lock>
   1cbd1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1cbd5:	48 89 c7             	mov    %rax,%rdi
   1cbd8:	e8 47 c7 ff ff       	call   19324 <sbrk>
   1cbdd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1cbe1:	bf 00 00 00 00       	mov    $0x0,%edi
   1cbe6:	e8 39 c7 ff ff       	call   19324 <sbrk>
   1cbeb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1cbef:	b8 00 00 00 00       	mov    $0x0,%eax
   1cbf4:	89 05 ce 52 04 00    	mov    %eax,0x452ce(%rip)        # 61ec8 <malloc_global_mutex>
   1cbfa:	48 83 7d c0 ff       	cmpq   $0xffffffffffffffff,-0x40(%rbp)
   1cbff:	74 44                	je     1cc45 <sys_alloc+0x4fc>
   1cc01:	48 83 7d c8 ff       	cmpq   $0xffffffffffffffff,-0x38(%rbp)
   1cc06:	74 3d                	je     1cc45 <sys_alloc+0x4fc>
   1cc08:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cc0c:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1cc10:	73 33                	jae    1cc45 <sys_alloc+0x4fc>
   1cc12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1cc16:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
   1cc1a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1cc1e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1cc25:	48 83 c0 50          	add    $0x50,%rax
   1cc29:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1cc2d:	76 16                	jbe    1cc45 <sys_alloc+0x4fc>
   1cc2f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cc33:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1cc3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc3e:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1cc45:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1cc4c:	ff 
   1cc4d:	0f 84 b5 04 00 00    	je     1d108 <sys_alloc+0x9bf>
   1cc53:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cc5a:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1cc61:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1cc68:	48 01 c2             	add    %rax,%rdx
   1cc6b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cc72:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1cc79:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cc80:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1cc87:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cc8e:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1cc95:	48 39 c2             	cmp    %rax,%rdx
   1cc98:	76 1c                	jbe    1ccb6 <sys_alloc+0x56d>
   1cc9a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cca1:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1cca8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ccaf:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   1ccb6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ccbd:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ccc1:	48 85 c0             	test   %rax,%rax
   1ccc4:	0f 85 35 01 00 00    	jne    1cdff <sys_alloc+0x6b6>
   1ccca:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ccd1:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ccd5:	48 85 c0             	test   %rax,%rax
   1ccd8:	74 14                	je     1ccee <sys_alloc+0x5a5>
   1ccda:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cce1:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cce5:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1ccec:	73 12                	jae    1cd00 <sys_alloc+0x5b7>
   1ccee:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ccf5:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1ccfc:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cd00:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd07:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1cd0e:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
   1cd15:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd1c:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1cd23:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
   1cd2a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd31:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   1cd37:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
   1cd3d:	48 8b 15 9c 51 04 00 	mov    0x4519c(%rip),%rdx        # 61ee0 <mparams>
   1cd44:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd4b:	48 89 50 40          	mov    %rdx,0x40(%rax)
   1cd4f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd56:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
   1cd5d:	ff 
   1cd5e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd65:	48 89 c7             	mov    %rax,%rdi
   1cd68:	e8 b9 e5 ff ff       	call   1b326 <init_bins>
   1cd6d:	48 8d 05 ac 51 04 00 	lea    0x451ac(%rip),%rax        # 61f20 <_gm_>
   1cd74:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1cd7b:	75 29                	jne    1cda6 <sys_alloc+0x65d>
   1cd7d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1cd84:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   1cd88:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   1cd8f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cd96:	48 89 ce             	mov    %rcx,%rsi
   1cd99:	48 89 c7             	mov    %rax,%rdi
   1cd9c:	e8 e8 e4 ff ff       	call   1b289 <init_top>
   1cda1:	e9 51 02 00 00       	jmp    1cff7 <sys_alloc+0x8ae>
   1cda6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cdad:	48 83 e8 10          	sub    $0x10,%rax
   1cdb1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cdb5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1cdb9:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1cdbd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cdc4:	48 01 d0             	add    %rdx,%rax
   1cdc7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1cdcb:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1cdd2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1cdd9:	48 01 d0             	add    %rdx,%rax
   1cddc:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1cde0:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   1cde4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1cde8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cdef:	48 89 ce             	mov    %rcx,%rsi
   1cdf2:	48 89 c7             	mov    %rax,%rdi
   1cdf5:	e8 8f e4 ff ff       	call   1b289 <init_top>
   1cdfa:	e9 f8 01 00 00       	jmp    1cff7 <sys_alloc+0x8ae>
   1cdff:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ce06:	48 05 78 03 00 00    	add    $0x378,%rax
   1ce0c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1ce10:	eb 0c                	jmp    1ce1e <sys_alloc+0x6d5>
   1ce12:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce16:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ce1a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1ce1e:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1ce23:	74 1b                	je     1ce40 <sys_alloc+0x6f7>
   1ce25:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce29:	48 8b 10             	mov    (%rax),%rdx
   1ce2c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce30:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ce34:	48 01 d0             	add    %rdx,%rax
   1ce37:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1ce3e:	75 d2                	jne    1ce12 <sys_alloc+0x6c9>
   1ce40:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1ce45:	0f 84 a9 00 00 00    	je     1cef4 <sys_alloc+0x7ab>
   1ce4b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce4f:	8b 40 18             	mov    0x18(%rax),%eax
   1ce52:	83 e0 08             	and    $0x8,%eax
   1ce55:	85 c0                	test   %eax,%eax
   1ce57:	0f 85 97 00 00 00    	jne    1cef4 <sys_alloc+0x7ab>
   1ce5d:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1ce64:	0f 85 8a 00 00 00    	jne    1cef4 <sys_alloc+0x7ab>
   1ce6a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ce71:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1ce75:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce79:	48 8b 00             	mov    (%rax),%rax
   1ce7c:	48 39 c2             	cmp    %rax,%rdx
   1ce7f:	72 73                	jb     1cef4 <sys_alloc+0x7ab>
   1ce81:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ce88:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1ce8c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce90:	48 8b 08             	mov    (%rax),%rcx
   1ce93:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ce97:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ce9b:	48 01 c8             	add    %rcx,%rax
   1ce9e:	48 39 c2             	cmp    %rax,%rdx
   1cea1:	73 51                	jae    1cef4 <sys_alloc+0x7ab>
   1cea3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cea7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1ceab:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ceb2:	48 01 c2             	add    %rax,%rdx
   1ceb5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ceb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1cebd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cec4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1cec8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1cecf:	48 01 c2             	add    %rax,%rdx
   1ced2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ced9:	48 8b 48 28          	mov    0x28(%rax),%rcx
   1cedd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cee4:	48 89 ce             	mov    %rcx,%rsi
   1cee7:	48 89 c7             	mov    %rax,%rdi
   1ceea:	e8 9a e3 ff ff       	call   1b289 <init_top>
   1ceef:	e9 03 01 00 00       	jmp    1cff7 <sys_alloc+0x8ae>
   1cef4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cefb:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ceff:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1cf06:	73 12                	jae    1cf1a <sys_alloc+0x7d1>
   1cf08:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cf0f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1cf16:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cf1a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cf21:	48 05 78 03 00 00    	add    $0x378,%rax
   1cf27:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1cf2b:	eb 0c                	jmp    1cf39 <sys_alloc+0x7f0>
   1cf2d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf31:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cf35:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1cf39:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1cf3e:	74 1d                	je     1cf5d <sys_alloc+0x814>
   1cf40:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf44:	48 8b 00             	mov    (%rax),%rax
   1cf47:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   1cf4e:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1cf55:	48 01 ca             	add    %rcx,%rdx
   1cf58:	48 39 d0             	cmp    %rdx,%rax
   1cf5b:	75 d0                	jne    1cf2d <sys_alloc+0x7e4>
   1cf5d:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1cf62:	74 70                	je     1cfd4 <sys_alloc+0x88b>
   1cf64:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf68:	8b 40 18             	mov    0x18(%rax),%eax
   1cf6b:	83 e0 08             	and    $0x8,%eax
   1cf6e:	85 c0                	test   %eax,%eax
   1cf70:	75 62                	jne    1cfd4 <sys_alloc+0x88b>
   1cf72:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1cf79:	75 59                	jne    1cfd4 <sys_alloc+0x88b>
   1cf7b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf7f:	48 8b 00             	mov    (%rax),%rax
   1cf82:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1cf86:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf8a:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1cf91:	48 89 10             	mov    %rdx,(%rax)
   1cf94:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf98:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1cf9c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1cfa3:	48 01 c2             	add    %rax,%rdx
   1cfa6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cfaa:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1cfae:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1cfb5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1cfb9:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
   1cfc0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cfc7:	48 89 c7             	mov    %rax,%rdi
   1cfca:	e8 b8 e3 ff ff       	call   1b387 <prepend_alloc>
   1cfcf:	e9 44 01 00 00       	jmp    1d118 <sys_alloc+0x9cf>
   1cfd4:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
   1cfda:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1cfe1:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
   1cfe8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cfef:	48 89 c7             	mov    %rax,%rdi
   1cff2:	e8 44 f0 ff ff       	call   1c03b <add_segment>
   1cff7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1cffe:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d002:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d009:	0f 83 f9 00 00 00    	jae    1d108 <sys_alloc+0x9bf>
   1d00f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d016:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d01a:	48 2b 85 40 ff ff ff 	sub    -0xc0(%rbp),%rax
   1d021:	48 89 c2             	mov    %rax,%rdx
   1d024:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d02b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d02f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d036:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d03a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d03e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d045:	48 8b 40 28          	mov    0x28(%rax),%rax
   1d049:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d04d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d051:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d058:	48 01 c2             	add    %rax,%rdx
   1d05b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d062:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1d066:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d06d:	48 8b 40 28          	mov    0x28(%rax),%rax
   1d071:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d075:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d079:	48 83 c8 01          	or     $0x1,%rax
   1d07d:	48 89 c2             	mov    %rax,%rdx
   1d080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d084:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d088:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d08f:	48 83 c8 03          	or     $0x3,%rax
   1d093:	48 89 c2             	mov    %rax,%rdx
   1d096:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d09a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d09e:	48 8b 0d 3b 4e 04 00 	mov    0x44e3b(%rip),%rcx        # 61ee0 <mparams>
   1d0a5:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1d0ac:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1d0b0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d0b7:	48 01 f0             	add    %rsi,%rax
   1d0ba:	48 31 ca             	xor    %rcx,%rdx
   1d0bd:	48 89 10             	mov    %rdx,(%rax)
   1d0c0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d0c7:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1d0cb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d0d2:	48 89 d6             	mov    %rdx,%rsi
   1d0d5:	48 89 c7             	mov    %rax,%rdi
   1d0d8:	e8 f1 ca ff ff       	call   19bce <do_check_top_chunk>
   1d0dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d0e1:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1d0e5:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1d0ec:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d0f3:	48 89 ce             	mov    %rcx,%rsi
   1d0f6:	48 89 c7             	mov    %rax,%rdi
   1d0f9:	e8 68 ce ff ff       	call   19f66 <do_check_malloced_chunk>
   1d0fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d102:	48 83 c0 10          	add    $0x10,%rax
   1d106:	eb 10                	jmp    1d118 <sys_alloc+0x9cf>
   1d108:	e8 bc 6d 00 00       	call   23ec9 <__errno>
   1d10d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1d113:	b8 00 00 00 00       	mov    $0x0,%eax
   1d118:	c9                   	leave  
   1d119:	c3                   	ret    

000000000001d11a <release_unused_segments>:
   1d11a:	f3 0f 1e fa          	endbr64 
   1d11e:	55                   	push   %rbp
   1d11f:	48 89 e5             	mov    %rsp,%rbp
   1d122:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1d126:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1d12d:	00 
   1d12e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   1d135:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d139:	48 05 78 03 00 00    	add    $0x378,%rax
   1d13f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1d143:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d147:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d14b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1d14f:	eb 37                	jmp    1d188 <release_unused_segments+0x6e>
   1d151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d155:	48 8b 00             	mov    (%rax),%rax
   1d158:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d15c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d160:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d164:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d168:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d16c:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d170:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d174:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   1d178:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d17c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1d180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d184:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1d188:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1d18d:	75 c2                	jne    1d151 <release_unused_segments+0x37>
   1d18f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d193:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
   1d19a:	ff 
   1d19b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d19f:	5d                   	pop    %rbp
   1d1a0:	c3                   	ret    

000000000001d1a1 <sys_trim>:
   1d1a1:	f3 0f 1e fa          	endbr64 
   1d1a5:	55                   	push   %rbp
   1d1a6:	48 89 e5             	mov    %rsp,%rbp
   1d1a9:	48 83 ec 50          	sub    $0x50,%rsp
   1d1ad:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1d1b1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1d1b5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1d1bc:	00 
   1d1bd:	48 8b 05 1c 4d 04 00 	mov    0x44d1c(%rip),%rax        # 61ee0 <mparams>
   1d1c4:	48 85 c0             	test   %rax,%rax
   1d1c7:	75 07                	jne    1d1d0 <sys_trim+0x2f>
   1d1c9:	e8 bc c7 ff ff       	call   1998a <init_mparams>
   1d1ce:	85 c0                	test   %eax,%eax
   1d1d0:	90                   	nop
   1d1d1:	48 81 7d b0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x50(%rbp)
   1d1d8:	ff 
   1d1d9:	0f 87 df 01 00 00    	ja     1d3be <sys_trim+0x21d>
   1d1df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d1e3:	48 8b 40 28          	mov    0x28(%rax),%rax
   1d1e7:	48 85 c0             	test   %rax,%rax
   1d1ea:	0f 84 ce 01 00 00    	je     1d3be <sys_trim+0x21d>
   1d1f0:	48 83 45 b0 50       	addq   $0x50,-0x50(%rbp)
   1d1f5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d1f9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d1fd:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1d201:	0f 83 8f 01 00 00    	jae    1d396 <sys_trim+0x1f5>
   1d207:	48 8b 05 e2 4c 04 00 	mov    0x44ce2(%rip),%rax        # 61ef0 <mparams+0x10>
   1d20e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1d212:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d216:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d21a:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
   1d21e:	48 89 c2             	mov    %rax,%rdx
   1d221:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d225:	48 01 d0             	add    %rdx,%rax
   1d228:	48 83 e8 01          	sub    $0x1,%rax
   1d22c:	ba 00 00 00 00       	mov    $0x0,%edx
   1d231:	48 f7 75 d8          	divq   -0x28(%rbp)
   1d235:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1d239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d23d:	48 0f af c2          	imul   %rdx,%rax
   1d241:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1d245:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d249:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1d24d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d251:	48 89 d6             	mov    %rdx,%rsi
   1d254:	48 89 c7             	mov    %rax,%rdi
   1d257:	e8 67 c6 ff ff       	call   198c3 <segment_holding>
   1d25c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d260:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d264:	8b 40 18             	mov    0x18(%rax),%eax
   1d267:	83 e0 08             	and    $0x8,%eax
   1d26a:	85 c0                	test   %eax,%eax
   1d26c:	0f 85 ac 00 00 00    	jne    1d31e <sys_trim+0x17d>
   1d272:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1d279:	ff ff 7f 
   1d27c:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1d280:	76 12                	jbe    1d294 <sys_trim+0xf3>
   1d282:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   1d289:	00 00 80 
   1d28c:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   1d290:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1d294:	b8 01 00 00 00       	mov    $0x1,%eax
   1d299:	87 05 29 4c 04 00    	xchg   %eax,0x44c29(%rip)        # 61ec8 <malloc_global_mutex>
   1d29f:	85 c0                	test   %eax,%eax
   1d2a1:	74 0c                	je     1d2af <sys_trim+0x10e>
   1d2a3:	48 8d 3d 1e 4c 04 00 	lea    0x44c1e(%rip),%rdi        # 61ec8 <malloc_global_mutex>
   1d2aa:	e8 db c5 ff ff       	call   1988a <spin_acquire_lock>
   1d2af:	bf 00 00 00 00       	mov    $0x0,%edi
   1d2b4:	e8 6b c0 ff ff       	call   19324 <sbrk>
   1d2b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d2bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d2c1:	48 8b 10             	mov    (%rax),%rdx
   1d2c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d2c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d2cc:	48 01 d0             	add    %rdx,%rax
   1d2cf:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d2d3:	75 3e                	jne    1d313 <sys_trim+0x172>
   1d2d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d2d9:	48 f7 d8             	neg    %rax
   1d2dc:	48 89 c7             	mov    %rax,%rdi
   1d2df:	e8 40 c0 ff ff       	call   19324 <sbrk>
   1d2e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d2e8:	bf 00 00 00 00       	mov    $0x0,%edi
   1d2ed:	e8 32 c0 ff ff       	call   19324 <sbrk>
   1d2f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d2f6:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
   1d2fb:	74 16                	je     1d313 <sys_trim+0x172>
   1d2fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d301:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1d305:	73 0c                	jae    1d313 <sys_trim+0x172>
   1d307:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d30b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1d30f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1d313:	b8 00 00 00 00       	mov    $0x0,%eax
   1d318:	89 05 aa 4b 04 00    	mov    %eax,0x44baa(%rip)        # 61ec8 <malloc_global_mutex>
   1d31e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1d323:	74 71                	je     1d396 <sys_trim+0x1f5>
   1d325:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d329:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d32d:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1d331:	48 89 c2             	mov    %rax,%rdx
   1d334:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d338:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d33c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d340:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1d347:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1d34b:	48 89 c2             	mov    %rax,%rdx
   1d34e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d352:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1d359:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d35d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d361:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1d365:	48 89 c2             	mov    %rax,%rdx
   1d368:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d36c:	48 8b 48 28          	mov    0x28(%rax),%rcx
   1d370:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d374:	48 89 ce             	mov    %rcx,%rsi
   1d377:	48 89 c7             	mov    %rax,%rdi
   1d37a:	e8 0a df ff ff       	call   1b289 <init_top>
   1d37f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d383:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1d387:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d38b:	48 89 d6             	mov    %rdx,%rsi
   1d38e:	48 89 c7             	mov    %rax,%rdi
   1d391:	e8 38 c8 ff ff       	call   19bce <do_check_top_chunk>
   1d396:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1d39b:	75 21                	jne    1d3be <sys_trim+0x21d>
   1d39d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d3a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1d3a5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d3a9:	48 8b 40 30          	mov    0x30(%rax),%rax
   1d3ad:	48 39 c2             	cmp    %rax,%rdx
   1d3b0:	76 0c                	jbe    1d3be <sys_trim+0x21d>
   1d3b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d3b6:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
   1d3bd:	ff 
   1d3be:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1d3c3:	0f 95 c0             	setne  %al
   1d3c6:	0f b6 c0             	movzbl %al,%eax
   1d3c9:	c9                   	leave  
   1d3ca:	c3                   	ret    

000000000001d3cb <dispose_chunk>:
   1d3cb:	f3 0f 1e fa          	endbr64 
   1d3cf:	55                   	push   %rbp
   1d3d0:	48 89 e5             	mov    %rsp,%rbp
   1d3d3:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   1d3da:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
   1d3e1:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
   1d3e8:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
   1d3ef:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1d3f6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1d3fd:	48 01 d0             	add    %rdx,%rax
   1d400:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1d407:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d40e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d412:	83 e0 01             	and    $0x1,%eax
   1d415:	48 85 c0             	test   %rax,%rax
   1d418:	0f 85 3f 07 00 00    	jne    1db5d <dispose_chunk+0x792>
   1d41e:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d425:	48 8b 00             	mov    (%rax),%rax
   1d428:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1d42f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d436:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d43a:	83 e0 03             	and    $0x3,%eax
   1d43d:	48 85 c0             	test   %rax,%rax
   1d440:	75 21                	jne    1d463 <dispose_chunk+0x98>
   1d442:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1d449:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1d450:	48 01 d0             	add    %rdx,%rax
   1d453:	48 83 c0 20          	add    $0x20,%rax
   1d457:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
   1d45e:	e9 9a 12 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1d463:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1d46a:	48 f7 d8             	neg    %rax
   1d46d:	48 89 c2             	mov    %rax,%rdx
   1d470:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d477:	48 01 d0             	add    %rdx,%rax
   1d47a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1d481:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1d488:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
   1d48f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1d496:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   1d49d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d4a4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d4a8:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1d4af:	0f 93 c0             	setae  %al
   1d4b2:	0f b6 c0             	movzbl %al,%eax
   1d4b5:	48 85 c0             	test   %rax,%rax
   1d4b8:	0f 84 9a 06 00 00    	je     1db58 <dispose_chunk+0x78d>
   1d4be:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d4c5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d4c9:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1d4d0:	0f 84 06 06 00 00    	je     1dadc <dispose_chunk+0x711>
   1d4d6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1d4dd:	48 c1 e8 03          	shr    $0x3,%rax
   1d4e1:	48 83 f8 1f          	cmp    $0x1f,%rax
   1d4e5:	0f 87 f9 01 00 00    	ja     1d6e4 <dispose_chunk+0x319>
   1d4eb:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d4f2:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d4f6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1d4fd:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d504:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d508:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1d50f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1d516:	48 c1 e8 03          	shr    $0x3,%rax
   1d51a:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   1d520:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d527:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   1d52e:	75 05                	jne    1d535 <dispose_chunk+0x16a>
   1d530:	e8 66 45 01 00       	call   31a9b <abort>
   1d535:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d53c:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1d543:	75 05                	jne    1d54a <dispose_chunk+0x17f>
   1d545:	e8 51 45 01 00       	call   31a9b <abort>
   1d54a:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d551:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d555:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1d559:	48 89 c2             	mov    %rax,%rdx
   1d55c:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1d562:	c1 e0 03             	shl    $0x3,%eax
   1d565:	89 c0                	mov    %eax,%eax
   1d567:	48 39 c2             	cmp    %rax,%rdx
   1d56a:	74 05                	je     1d571 <dispose_chunk+0x1a6>
   1d56c:	e8 2a 45 01 00       	call   31a9b <abort>
   1d571:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1d577:	01 c0                	add    %eax,%eax
   1d579:	89 c0                	mov    %eax,%eax
   1d57b:	48 83 c0 08          	add    $0x8,%rax
   1d57f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d586:	00 
   1d587:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d58e:	48 01 d0             	add    %rdx,%rax
   1d591:	48 83 c0 08          	add    $0x8,%rax
   1d595:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1d59c:	0f 94 c0             	sete   %al
   1d59f:	0f b6 c0             	movzbl %al,%eax
   1d5a2:	48 85 c0             	test   %rax,%rax
   1d5a5:	75 4e                	jne    1d5f5 <dispose_chunk+0x22a>
   1d5a7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d5ae:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d5b2:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1d5b9:	0f 93 c0             	setae  %al
   1d5bc:	0f b6 c0             	movzbl %al,%eax
   1d5bf:	48 85 c0             	test   %rax,%rax
   1d5c2:	74 24                	je     1d5e8 <dispose_chunk+0x21d>
   1d5c4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1d5cb:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d5cf:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1d5d6:	0f 94 c0             	sete   %al
   1d5d9:	0f b6 c0             	movzbl %al,%eax
   1d5dc:	48 85 c0             	test   %rax,%rax
   1d5df:	74 07                	je     1d5e8 <dispose_chunk+0x21d>
   1d5e1:	b8 01 00 00 00       	mov    $0x1,%eax
   1d5e6:	eb 05                	jmp    1d5ed <dispose_chunk+0x222>
   1d5e8:	b8 00 00 00 00       	mov    $0x0,%eax
   1d5ed:	85 c0                	test   %eax,%eax
   1d5ef:	0f 84 ea 00 00 00    	je     1d6df <dispose_chunk+0x314>
   1d5f5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1d5fc:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1d603:	75 2c                	jne    1d631 <dispose_chunk+0x266>
   1d605:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d60c:	8b 10                	mov    (%rax),%edx
   1d60e:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1d614:	be 01 00 00 00       	mov    $0x1,%esi
   1d619:	89 c1                	mov    %eax,%ecx
   1d61b:	d3 e6                	shl    %cl,%esi
   1d61d:	89 f0                	mov    %esi,%eax
   1d61f:	f7 d0                	not    %eax
   1d621:	21 c2                	and    %eax,%edx
   1d623:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d62a:	89 10                	mov    %edx,(%rax)
   1d62c:	e9 2c 05 00 00       	jmp    1db5d <dispose_chunk+0x792>
   1d631:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1d637:	01 c0                	add    %eax,%eax
   1d639:	89 c0                	mov    %eax,%eax
   1d63b:	48 83 c0 08          	add    $0x8,%rax
   1d63f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d646:	00 
   1d647:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d64e:	48 01 d0             	add    %rdx,%rax
   1d651:	48 83 c0 08          	add    $0x8,%rax
   1d655:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1d65c:	0f 94 c0             	sete   %al
   1d65f:	0f b6 c0             	movzbl %al,%eax
   1d662:	48 85 c0             	test   %rax,%rax
   1d665:	75 4a                	jne    1d6b1 <dispose_chunk+0x2e6>
   1d667:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d66e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d672:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1d679:	0f 93 c0             	setae  %al
   1d67c:	0f b6 c0             	movzbl %al,%eax
   1d67f:	48 85 c0             	test   %rax,%rax
   1d682:	74 24                	je     1d6a8 <dispose_chunk+0x2dd>
   1d684:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1d68b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d68f:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1d696:	0f 94 c0             	sete   %al
   1d699:	0f b6 c0             	movzbl %al,%eax
   1d69c:	48 85 c0             	test   %rax,%rax
   1d69f:	74 07                	je     1d6a8 <dispose_chunk+0x2dd>
   1d6a1:	b8 01 00 00 00       	mov    $0x1,%eax
   1d6a6:	eb 05                	jmp    1d6ad <dispose_chunk+0x2e2>
   1d6a8:	b8 00 00 00 00       	mov    $0x0,%eax
   1d6ad:	85 c0                	test   %eax,%eax
   1d6af:	74 29                	je     1d6da <dispose_chunk+0x30f>
   1d6b1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1d6b8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1d6bf:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d6c3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1d6ca:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1d6d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d6d5:	e9 83 04 00 00       	jmp    1db5d <dispose_chunk+0x792>
   1d6da:	e8 bc 43 01 00       	call   31a9b <abort>
   1d6df:	e8 b7 43 01 00       	call   31a9b <abort>
   1d6e4:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d6eb:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1d6f2:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d6f9:	48 8b 40 30          	mov    0x30(%rax),%rax
   1d6fd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1d704:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d70b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d70f:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d716:	0f 84 b9 00 00 00    	je     1d7d5 <dispose_chunk+0x40a>
   1d71c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d723:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d727:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1d72e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d735:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d739:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1d740:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d747:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d74b:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1d752:	0f 93 c0             	setae  %al
   1d755:	0f b6 c0             	movzbl %al,%eax
   1d758:	48 85 c0             	test   %rax,%rax
   1d75b:	74 24                	je     1d781 <dispose_chunk+0x3b6>
   1d75d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d764:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d768:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d76f:	0f 94 c0             	sete   %al
   1d772:	0f b6 c0             	movzbl %al,%eax
   1d775:	48 85 c0             	test   %rax,%rax
   1d778:	74 07                	je     1d781 <dispose_chunk+0x3b6>
   1d77a:	b8 01 00 00 00       	mov    $0x1,%eax
   1d77f:	eb 05                	jmp    1d786 <dispose_chunk+0x3bb>
   1d781:	b8 00 00 00 00       	mov    $0x0,%eax
   1d786:	85 c0                	test   %eax,%eax
   1d788:	74 46                	je     1d7d0 <dispose_chunk+0x405>
   1d78a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d791:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d795:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d79c:	0f 94 c0             	sete   %al
   1d79f:	0f b6 c0             	movzbl %al,%eax
   1d7a2:	48 85 c0             	test   %rax,%rax
   1d7a5:	74 29                	je     1d7d0 <dispose_chunk+0x405>
   1d7a7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d7ae:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1d7b5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d7b9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d7c0:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1d7c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d7cb:	e9 f8 00 00 00       	jmp    1d8c8 <dispose_chunk+0x4fd>
   1d7d0:	e8 c6 42 01 00       	call   31a9b <abort>
   1d7d5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d7dc:	48 83 c0 28          	add    $0x28,%rax
   1d7e0:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1d7e7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d7ee:	48 8b 00             	mov    (%rax),%rax
   1d7f1:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1d7f8:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1d7ff:	00 
   1d800:	75 52                	jne    1d854 <dispose_chunk+0x489>
   1d802:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d809:	48 83 c0 20          	add    $0x20,%rax
   1d80d:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1d814:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d81b:	48 8b 00             	mov    (%rax),%rax
   1d81e:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1d825:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1d82c:	00 
   1d82d:	0f 84 95 00 00 00    	je     1d8c8 <dispose_chunk+0x4fd>
   1d833:	eb 1f                	jmp    1d854 <dispose_chunk+0x489>
   1d835:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1d83c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1d843:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d84a:	48 8b 00             	mov    (%rax),%rax
   1d84d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1d854:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d85b:	48 83 c0 28          	add    $0x28,%rax
   1d85f:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1d866:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1d86d:	48 8b 00             	mov    (%rax),%rax
   1d870:	48 85 c0             	test   %rax,%rax
   1d873:	75 c0                	jne    1d835 <dispose_chunk+0x46a>
   1d875:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d87c:	48 83 c0 20          	add    $0x20,%rax
   1d880:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1d887:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1d88e:	48 8b 00             	mov    (%rax),%rax
   1d891:	48 85 c0             	test   %rax,%rax
   1d894:	75 9f                	jne    1d835 <dispose_chunk+0x46a>
   1d896:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d89d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d8a1:	48 39 85 e8 fe ff ff 	cmp    %rax,-0x118(%rbp)
   1d8a8:	0f 93 c0             	setae  %al
   1d8ab:	0f b6 c0             	movzbl %al,%eax
   1d8ae:	48 85 c0             	test   %rax,%rax
   1d8b1:	74 10                	je     1d8c3 <dispose_chunk+0x4f8>
   1d8b3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d8ba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1d8c1:	eb 05                	jmp    1d8c8 <dispose_chunk+0x4fd>
   1d8c3:	e8 d3 41 01 00       	call   31a9b <abort>
   1d8c8:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1d8cf:	00 
   1d8d0:	0f 84 87 02 00 00    	je     1db5d <dispose_chunk+0x792>
   1d8d6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d8dd:	8b 40 38             	mov    0x38(%rax),%eax
   1d8e0:	89 c0                	mov    %eax,%eax
   1d8e2:	48 83 c0 4a          	add    $0x4a,%rax
   1d8e6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d8ed:	00 
   1d8ee:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d8f5:	48 01 d0             	add    %rdx,%rax
   1d8f8:	48 83 c0 08          	add    $0x8,%rax
   1d8fc:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1d903:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d90a:	48 8b 00             	mov    (%rax),%rax
   1d90d:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d914:	75 53                	jne    1d969 <dispose_chunk+0x59e>
   1d916:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d91d:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1d924:	48 89 10             	mov    %rdx,(%rax)
   1d927:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d92e:	48 8b 00             	mov    (%rax),%rax
   1d931:	48 85 c0             	test   %rax,%rax
   1d934:	0f 85 8d 00 00 00    	jne    1d9c7 <dispose_chunk+0x5fc>
   1d93a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d941:	8b 50 04             	mov    0x4(%rax),%edx
   1d944:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1d94b:	8b 40 38             	mov    0x38(%rax),%eax
   1d94e:	be 01 00 00 00       	mov    $0x1,%esi
   1d953:	89 c1                	mov    %eax,%ecx
   1d955:	d3 e6                	shl    %cl,%esi
   1d957:	89 f0                	mov    %esi,%eax
   1d959:	f7 d0                	not    %eax
   1d95b:	21 c2                	and    %eax,%edx
   1d95d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d964:	89 50 04             	mov    %edx,0x4(%rax)
   1d967:	eb 5e                	jmp    1d9c7 <dispose_chunk+0x5fc>
   1d969:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d970:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d974:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1d97b:	0f 93 c0             	setae  %al
   1d97e:	0f b6 c0             	movzbl %al,%eax
   1d981:	48 85 c0             	test   %rax,%rax
   1d984:	74 3c                	je     1d9c2 <dispose_chunk+0x5f7>
   1d986:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d98d:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d991:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1d998:	75 14                	jne    1d9ae <dispose_chunk+0x5e3>
   1d99a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d9a1:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1d9a8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1d9ac:	eb 19                	jmp    1d9c7 <dispose_chunk+0x5fc>
   1d9ae:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d9b5:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1d9bc:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1d9c0:	eb 05                	jmp    1d9c7 <dispose_chunk+0x5fc>
   1d9c2:	e8 d4 40 01 00       	call   31a9b <abort>
   1d9c7:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1d9ce:	00 
   1d9cf:	0f 84 88 01 00 00    	je     1db5d <dispose_chunk+0x792>
   1d9d5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d9dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d9e0:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
   1d9e7:	0f 93 c0             	setae  %al
   1d9ea:	0f b6 c0             	movzbl %al,%eax
   1d9ed:	48 85 c0             	test   %rax,%rax
   1d9f0:	0f 84 e1 00 00 00    	je     1dad7 <dispose_chunk+0x70c>
   1d9f6:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d9fd:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1da04:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1da08:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1da0f:	48 8b 40 20          	mov    0x20(%rax),%rax
   1da13:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1da1a:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1da21:	00 
   1da22:	74 48                	je     1da6c <dispose_chunk+0x6a1>
   1da24:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1da2b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1da2f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1da36:	0f 93 c0             	setae  %al
   1da39:	0f b6 c0             	movzbl %al,%eax
   1da3c:	48 85 c0             	test   %rax,%rax
   1da3f:	74 26                	je     1da67 <dispose_chunk+0x69c>
   1da41:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1da48:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1da4f:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1da53:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1da5a:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1da61:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1da65:	eb 05                	jmp    1da6c <dispose_chunk+0x6a1>
   1da67:	e8 2f 40 01 00       	call   31a9b <abort>
   1da6c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1da73:	48 8b 40 28          	mov    0x28(%rax),%rax
   1da77:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1da7e:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1da85:	00 
   1da86:	0f 84 d1 00 00 00    	je     1db5d <dispose_chunk+0x792>
   1da8c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1da93:	48 8b 40 18          	mov    0x18(%rax),%rax
   1da97:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1da9e:	0f 93 c0             	setae  %al
   1daa1:	0f b6 c0             	movzbl %al,%eax
   1daa4:	48 85 c0             	test   %rax,%rax
   1daa7:	74 29                	je     1dad2 <dispose_chunk+0x707>
   1daa9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1dab0:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1dab7:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1dabb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1dac2:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1dac9:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1dacd:	e9 8b 00 00 00       	jmp    1db5d <dispose_chunk+0x792>
   1dad2:	e8 c4 3f 01 00       	call   31a9b <abort>
   1dad7:	e8 bf 3f 01 00       	call   31a9b <abort>
   1dadc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dae3:	48 8b 40 08          	mov    0x8(%rax),%rax
   1dae7:	83 e0 03             	and    $0x3,%eax
   1daea:	48 83 f8 03          	cmp    $0x3,%rax
   1daee:	75 6d                	jne    1db5d <dispose_chunk+0x792>
   1daf0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1daf7:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1dafe:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1db02:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1db09:	48 8b 40 08          	mov    0x8(%rax),%rax
   1db0d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1db11:	48 89 c2             	mov    %rax,%rdx
   1db14:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1db1b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1db1f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1db26:	48 83 c8 01          	or     $0x1,%rax
   1db2a:	48 89 c2             	mov    %rax,%rdx
   1db2d:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1db34:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1db38:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1db3f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1db46:	48 01 c2             	add    %rax,%rdx
   1db49:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1db50:	48 89 02             	mov    %rax,(%rdx)
   1db53:	e9 a5 0b 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1db58:	e8 3e 3f 01 00       	call   31a9b <abort>
   1db5d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1db64:	48 8b 40 18          	mov    0x18(%rax),%rax
   1db68:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1db6f:	0f 93 c0             	setae  %al
   1db72:	0f b6 c0             	movzbl %al,%eax
   1db75:	48 85 c0             	test   %rax,%rax
   1db78:	0f 84 79 0b 00 00    	je     1e6f7 <dispose_chunk+0x132c>
   1db7e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1db85:	48 8b 40 08          	mov    0x8(%rax),%rax
   1db89:	83 e0 02             	and    $0x2,%eax
   1db8c:	48 85 c0             	test   %rax,%rax
   1db8f:	0f 85 f3 06 00 00    	jne    1e288 <dispose_chunk+0xebd>
   1db95:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1db9c:	48 8b 40 28          	mov    0x28(%rax),%rax
   1dba0:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1dba7:	0f 85 92 00 00 00    	jne    1dc3f <dispose_chunk+0x874>
   1dbad:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dbb4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1dbb8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1dbbf:	48 01 c2             	add    %rax,%rdx
   1dbc2:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dbc9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1dbcd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dbd4:	48 8b 40 10          	mov    0x10(%rax),%rax
   1dbd8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1dbdc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dbe3:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1dbea:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1dbee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dbf2:	48 83 c8 01          	or     $0x1,%rax
   1dbf6:	48 89 c2             	mov    %rax,%rdx
   1dbf9:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1dc00:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1dc04:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc0b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dc0f:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1dc16:	0f 85 e0 0a 00 00    	jne    1e6fc <dispose_chunk+0x1331>
   1dc1c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc23:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1dc2a:	00 
   1dc2b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc32:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1dc39:	00 
   1dc3a:	e9 bd 0a 00 00       	jmp    1e6fc <dispose_chunk+0x1331>
   1dc3f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc46:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dc4a:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1dc51:	75 71                	jne    1dcc4 <dispose_chunk+0x8f9>
   1dc53:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc5a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1dc5e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1dc65:	48 01 c2             	add    %rax,%rdx
   1dc68:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc6f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1dc73:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc7a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1dc7e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1dc82:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dc89:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1dc90:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1dc94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dc98:	48 83 c8 01          	or     $0x1,%rax
   1dc9c:	48 89 c2             	mov    %rax,%rdx
   1dc9f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1dca6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1dcaa:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1dcb1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dcb5:	48 01 c2             	add    %rax,%rdx
   1dcb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dcbc:	48 89 02             	mov    %rax,(%rdx)
   1dcbf:	e9 39 0a 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1dcc4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dccb:	48 8b 40 08          	mov    0x8(%rax),%rax
   1dccf:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1dcd3:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1dcd7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1dcdb:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
   1dce2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1dce6:	48 c1 e8 03          	shr    $0x3,%rax
   1dcea:	48 83 f8 1f          	cmp    $0x1f,%rax
   1dcee:	0f 87 c6 01 00 00    	ja     1deba <dispose_chunk+0xaef>
   1dcf4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dcfb:	48 8b 40 10          	mov    0x10(%rax),%rax
   1dcff:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1dd03:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dd0a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1dd0e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1dd12:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1dd16:	48 c1 e8 03          	shr    $0x3,%rax
   1dd1a:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
   1dd20:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dd27:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1dd2b:	75 05                	jne    1dd32 <dispose_chunk+0x967>
   1dd2d:	e8 69 3d 01 00       	call   31a9b <abort>
   1dd32:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dd39:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1dd3d:	75 05                	jne    1dd44 <dispose_chunk+0x979>
   1dd3f:	e8 57 3d 01 00       	call   31a9b <abort>
   1dd44:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dd4b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1dd4f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1dd53:	48 89 c2             	mov    %rax,%rdx
   1dd56:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1dd5c:	c1 e0 03             	shl    $0x3,%eax
   1dd5f:	89 c0                	mov    %eax,%eax
   1dd61:	48 39 c2             	cmp    %rax,%rdx
   1dd64:	74 05                	je     1dd6b <dispose_chunk+0x9a0>
   1dd66:	e8 30 3d 01 00       	call   31a9b <abort>
   1dd6b:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1dd71:	01 c0                	add    %eax,%eax
   1dd73:	89 c0                	mov    %eax,%eax
   1dd75:	48 83 c0 08          	add    $0x8,%rax
   1dd79:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1dd80:	00 
   1dd81:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dd88:	48 01 d0             	add    %rdx,%rax
   1dd8b:	48 83 c0 08          	add    $0x8,%rax
   1dd8f:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1dd93:	0f 94 c0             	sete   %al
   1dd96:	0f b6 c0             	movzbl %al,%eax
   1dd99:	48 85 c0             	test   %rax,%rax
   1dd9c:	75 48                	jne    1dde6 <dispose_chunk+0xa1b>
   1dd9e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1dda5:	48 8b 40 18          	mov    0x18(%rax),%rax
   1dda9:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1ddad:	0f 93 c0             	setae  %al
   1ddb0:	0f b6 c0             	movzbl %al,%eax
   1ddb3:	48 85 c0             	test   %rax,%rax
   1ddb6:	74 21                	je     1ddd9 <dispose_chunk+0xa0e>
   1ddb8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ddbc:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ddc0:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1ddc7:	0f 94 c0             	sete   %al
   1ddca:	0f b6 c0             	movzbl %al,%eax
   1ddcd:	48 85 c0             	test   %rax,%rax
   1ddd0:	74 07                	je     1ddd9 <dispose_chunk+0xa0e>
   1ddd2:	b8 01 00 00 00       	mov    $0x1,%eax
   1ddd7:	eb 05                	jmp    1ddde <dispose_chunk+0xa13>
   1ddd9:	b8 00 00 00 00       	mov    $0x0,%eax
   1ddde:	85 c0                	test   %eax,%eax
   1dde0:	0f 84 cf 00 00 00    	je     1deb5 <dispose_chunk+0xaea>
   1dde6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ddea:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1ddee:	75 2c                	jne    1de1c <dispose_chunk+0xa51>
   1ddf0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1ddf7:	8b 10                	mov    (%rax),%edx
   1ddf9:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1ddff:	be 01 00 00 00       	mov    $0x1,%esi
   1de04:	89 c1                	mov    %eax,%ecx
   1de06:	d3 e6                	shl    %cl,%esi
   1de08:	89 f0                	mov    %esi,%eax
   1de0a:	f7 d0                	not    %eax
   1de0c:	21 c2                	and    %eax,%edx
   1de0e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1de15:	89 10                	mov    %edx,(%rax)
   1de17:	e9 0d 04 00 00       	jmp    1e229 <dispose_chunk+0xe5e>
   1de1c:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1de22:	01 c0                	add    %eax,%eax
   1de24:	89 c0                	mov    %eax,%eax
   1de26:	48 83 c0 08          	add    $0x8,%rax
   1de2a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1de31:	00 
   1de32:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1de39:	48 01 d0             	add    %rdx,%rax
   1de3c:	48 83 c0 08          	add    $0x8,%rax
   1de40:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1de44:	0f 94 c0             	sete   %al
   1de47:	0f b6 c0             	movzbl %al,%eax
   1de4a:	48 85 c0             	test   %rax,%rax
   1de4d:	75 44                	jne    1de93 <dispose_chunk+0xac8>
   1de4f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1de56:	48 8b 40 18          	mov    0x18(%rax),%rax
   1de5a:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1de5e:	0f 93 c0             	setae  %al
   1de61:	0f b6 c0             	movzbl %al,%eax
   1de64:	48 85 c0             	test   %rax,%rax
   1de67:	74 21                	je     1de8a <dispose_chunk+0xabf>
   1de69:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1de6d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1de71:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1de78:	0f 94 c0             	sete   %al
   1de7b:	0f b6 c0             	movzbl %al,%eax
   1de7e:	48 85 c0             	test   %rax,%rax
   1de81:	74 07                	je     1de8a <dispose_chunk+0xabf>
   1de83:	b8 01 00 00 00       	mov    $0x1,%eax
   1de88:	eb 05                	jmp    1de8f <dispose_chunk+0xac4>
   1de8a:	b8 00 00 00 00       	mov    $0x0,%eax
   1de8f:	85 c0                	test   %eax,%eax
   1de91:	74 1d                	je     1deb0 <dispose_chunk+0xae5>
   1de93:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1de97:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1de9b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1de9f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1dea3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1dea7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1deab:	e9 79 03 00 00       	jmp    1e229 <dispose_chunk+0xe5e>
   1deb0:	e8 e6 3b 01 00       	call   31a9b <abort>
   1deb5:	e8 e1 3b 01 00       	call   31a9b <abort>
   1deba:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1dec1:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1dec5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1dec9:	48 8b 40 30          	mov    0x30(%rax),%rax
   1decd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1ded1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ded5:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ded9:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1dedd:	0f 84 9e 00 00 00    	je     1df81 <dispose_chunk+0xbb6>
   1dee3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1dee7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1deeb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1deef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1def3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1def7:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1defe:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1df05:	48 8b 40 18          	mov    0x18(%rax),%rax
   1df09:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1df0d:	0f 93 c0             	setae  %al
   1df10:	0f b6 c0             	movzbl %al,%eax
   1df13:	48 85 c0             	test   %rax,%rax
   1df16:	74 1e                	je     1df36 <dispose_chunk+0xb6b>
   1df18:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1df1c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1df20:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1df24:	0f 94 c0             	sete   %al
   1df27:	0f b6 c0             	movzbl %al,%eax
   1df2a:	48 85 c0             	test   %rax,%rax
   1df2d:	74 07                	je     1df36 <dispose_chunk+0xb6b>
   1df2f:	b8 01 00 00 00       	mov    $0x1,%eax
   1df34:	eb 05                	jmp    1df3b <dispose_chunk+0xb70>
   1df36:	b8 00 00 00 00       	mov    $0x0,%eax
   1df3b:	85 c0                	test   %eax,%eax
   1df3d:	74 3d                	je     1df7c <dispose_chunk+0xbb1>
   1df3f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1df46:	48 8b 40 10          	mov    0x10(%rax),%rax
   1df4a:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1df4e:	0f 94 c0             	sete   %al
   1df51:	0f b6 c0             	movzbl %al,%eax
   1df54:	48 85 c0             	test   %rax,%rax
   1df57:	74 23                	je     1df7c <dispose_chunk+0xbb1>
   1df59:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1df5d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1df64:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1df68:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1df6f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1df73:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1df77:	e9 f2 00 00 00       	jmp    1e06e <dispose_chunk+0xca3>
   1df7c:	e8 1a 3b 01 00       	call   31a9b <abort>
   1df81:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1df85:	48 83 c0 28          	add    $0x28,%rax
   1df89:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1df90:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1df97:	48 8b 00             	mov    (%rax),%rax
   1df9a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1dfa1:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1dfa8:	00 
   1dfa9:	75 4f                	jne    1dffa <dispose_chunk+0xc2f>
   1dfab:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1dfaf:	48 83 c0 20          	add    $0x20,%rax
   1dfb3:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1dfba:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1dfc1:	48 8b 00             	mov    (%rax),%rax
   1dfc4:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1dfcb:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1dfd2:	00 
   1dfd3:	0f 84 95 00 00 00    	je     1e06e <dispose_chunk+0xca3>
   1dfd9:	eb 1f                	jmp    1dffa <dispose_chunk+0xc2f>
   1dfdb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1dfe2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1dfe9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1dff0:	48 8b 00             	mov    (%rax),%rax
   1dff3:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1dffa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e001:	48 83 c0 28          	add    $0x28,%rax
   1e005:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1e00c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1e013:	48 8b 00             	mov    (%rax),%rax
   1e016:	48 85 c0             	test   %rax,%rax
   1e019:	75 c0                	jne    1dfdb <dispose_chunk+0xc10>
   1e01b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e022:	48 83 c0 20          	add    $0x20,%rax
   1e026:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1e02d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1e034:	48 8b 00             	mov    (%rax),%rax
   1e037:	48 85 c0             	test   %rax,%rax
   1e03a:	75 9f                	jne    1dfdb <dispose_chunk+0xc10>
   1e03c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e043:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e047:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   1e04e:	0f 93 c0             	setae  %al
   1e051:	0f b6 c0             	movzbl %al,%eax
   1e054:	48 85 c0             	test   %rax,%rax
   1e057:	74 10                	je     1e069 <dispose_chunk+0xc9e>
   1e059:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1e060:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e067:	eb 05                	jmp    1e06e <dispose_chunk+0xca3>
   1e069:	e8 2d 3a 01 00       	call   31a9b <abort>
   1e06e:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1e073:	0f 84 b0 01 00 00    	je     1e229 <dispose_chunk+0xe5e>
   1e079:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1e07d:	8b 40 38             	mov    0x38(%rax),%eax
   1e080:	89 c0                	mov    %eax,%eax
   1e082:	48 83 c0 4a          	add    $0x4a,%rax
   1e086:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e08d:	00 
   1e08e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e095:	48 01 d0             	add    %rdx,%rax
   1e098:	48 83 c0 08          	add    $0x8,%rax
   1e09c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1e0a0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e0a4:	48 8b 00             	mov    (%rax),%rax
   1e0a7:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1e0ab:	75 46                	jne    1e0f3 <dispose_chunk+0xd28>
   1e0ad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e0b1:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1e0b8:	48 89 10             	mov    %rdx,(%rax)
   1e0bb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e0bf:	48 8b 00             	mov    (%rax),%rax
   1e0c2:	48 85 c0             	test   %rax,%rax
   1e0c5:	75 7b                	jne    1e142 <dispose_chunk+0xd77>
   1e0c7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e0ce:	8b 50 04             	mov    0x4(%rax),%edx
   1e0d1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1e0d5:	8b 40 38             	mov    0x38(%rax),%eax
   1e0d8:	be 01 00 00 00       	mov    $0x1,%esi
   1e0dd:	89 c1                	mov    %eax,%ecx
   1e0df:	d3 e6                	shl    %cl,%esi
   1e0e1:	89 f0                	mov    %esi,%eax
   1e0e3:	f7 d0                	not    %eax
   1e0e5:	21 c2                	and    %eax,%edx
   1e0e7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e0ee:	89 50 04             	mov    %edx,0x4(%rax)
   1e0f1:	eb 4f                	jmp    1e142 <dispose_chunk+0xd77>
   1e0f3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e0fa:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e0fe:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1e102:	0f 93 c0             	setae  %al
   1e105:	0f b6 c0             	movzbl %al,%eax
   1e108:	48 85 c0             	test   %rax,%rax
   1e10b:	74 30                	je     1e13d <dispose_chunk+0xd72>
   1e10d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1e111:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e115:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1e119:	75 11                	jne    1e12c <dispose_chunk+0xd61>
   1e11b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1e11f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1e126:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e12a:	eb 16                	jmp    1e142 <dispose_chunk+0xd77>
   1e12c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1e130:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1e137:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1e13b:	eb 05                	jmp    1e142 <dispose_chunk+0xd77>
   1e13d:	e8 59 39 01 00       	call   31a9b <abort>
   1e142:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1e149:	00 
   1e14a:	0f 84 d9 00 00 00    	je     1e229 <dispose_chunk+0xe5e>
   1e150:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e157:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e15b:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1e162:	0f 93 c0             	setae  %al
   1e165:	0f b6 c0             	movzbl %al,%eax
   1e168:	48 85 c0             	test   %rax,%rax
   1e16b:	0f 84 b3 00 00 00    	je     1e224 <dispose_chunk+0xe59>
   1e171:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e178:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1e17c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e180:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1e184:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e188:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1e18c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1e191:	74 3f                	je     1e1d2 <dispose_chunk+0xe07>
   1e193:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e19a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e19e:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1e1a2:	0f 93 c0             	setae  %al
   1e1a5:	0f b6 c0             	movzbl %al,%eax
   1e1a8:	48 85 c0             	test   %rax,%rax
   1e1ab:	74 20                	je     1e1cd <dispose_chunk+0xe02>
   1e1ad:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e1b4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1e1b8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e1bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1e1c0:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1e1c7:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e1cb:	eb 05                	jmp    1e1d2 <dispose_chunk+0xe07>
   1e1cd:	e8 c9 38 01 00       	call   31a9b <abort>
   1e1d2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1e1d6:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e1da:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1e1de:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1e1e3:	74 44                	je     1e229 <dispose_chunk+0xe5e>
   1e1e5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e1ec:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e1f0:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1e1f4:	0f 93 c0             	setae  %al
   1e1f7:	0f b6 c0             	movzbl %al,%eax
   1e1fa:	48 85 c0             	test   %rax,%rax
   1e1fd:	74 20                	je     1e21f <dispose_chunk+0xe54>
   1e1ff:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e206:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1e20a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1e20e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e212:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1e219:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e21d:	eb 0a                	jmp    1e229 <dispose_chunk+0xe5e>
   1e21f:	e8 77 38 01 00       	call   31a9b <abort>
   1e224:	e8 72 38 01 00       	call   31a9b <abort>
   1e229:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e230:	48 83 c8 01          	or     $0x1,%rax
   1e234:	48 89 c2             	mov    %rax,%rdx
   1e237:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1e23e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e242:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1e249:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e250:	48 01 c2             	add    %rax,%rdx
   1e253:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e25a:	48 89 02             	mov    %rax,(%rdx)
   1e25d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e264:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e268:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1e26f:	75 68                	jne    1e2d9 <dispose_chunk+0xf0e>
   1e271:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e278:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1e27f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e283:	e9 75 04 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1e288:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e28f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e293:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1e297:	48 89 c2             	mov    %rax,%rdx
   1e29a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e2a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e2a5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e2ac:	48 83 c8 01          	or     $0x1,%rax
   1e2b0:	48 89 c2             	mov    %rax,%rdx
   1e2b3:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1e2ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e2be:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1e2c5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e2cc:	48 01 c2             	add    %rax,%rdx
   1e2cf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e2d6:	48 89 02             	mov    %rax,(%rdx)
   1e2d9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e2e0:	48 c1 e8 03          	shr    $0x3,%rax
   1e2e4:	48 83 f8 1f          	cmp    $0x1f,%rax
   1e2e8:	0f 87 18 01 00 00    	ja     1e406 <dispose_chunk+0x103b>
   1e2ee:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e2f5:	48 c1 e8 03          	shr    $0x3,%rax
   1e2f9:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
   1e2ff:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1e305:	01 c0                	add    %eax,%eax
   1e307:	89 c0                	mov    %eax,%eax
   1e309:	48 83 c0 08          	add    $0x8,%rax
   1e30d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e314:	00 
   1e315:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e31c:	48 01 d0             	add    %rdx,%rax
   1e31f:	48 83 c0 08          	add    $0x8,%rax
   1e323:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e32b:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1e332:	48 83 bd a8 fe ff ff 	cmpq   $0x1f,-0x158(%rbp)
   1e339:	1f 
   1e33a:	77 05                	ja     1e341 <dispose_chunk+0xf76>
   1e33c:	e8 5a 37 01 00       	call   31a9b <abort>
   1e341:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e348:	8b 10                	mov    (%rax),%edx
   1e34a:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1e350:	be 01 00 00 00       	mov    $0x1,%esi
   1e355:	89 c1                	mov    %eax,%ecx
   1e357:	d3 e6                	shl    %cl,%esi
   1e359:	89 f0                	mov    %esi,%eax
   1e35b:	21 d0                	and    %edx,%eax
   1e35d:	85 c0                	test   %eax,%eax
   1e35f:	75 27                	jne    1e388 <dispose_chunk+0xfbd>
   1e361:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e368:	8b 10                	mov    (%rax),%edx
   1e36a:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1e370:	be 01 00 00 00       	mov    $0x1,%esi
   1e375:	89 c1                	mov    %eax,%ecx
   1e377:	d3 e6                	shl    %cl,%esi
   1e379:	89 f0                	mov    %esi,%eax
   1e37b:	09 c2                	or     %eax,%edx
   1e37d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e384:	89 10                	mov    %edx,(%rax)
   1e386:	eb 37                	jmp    1e3bf <dispose_chunk+0xff4>
   1e388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e38c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1e390:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e397:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e39b:	48 39 c2             	cmp    %rax,%rdx
   1e39e:	0f 93 c0             	setae  %al
   1e3a1:	0f b6 c0             	movzbl %al,%eax
   1e3a4:	48 85 c0             	test   %rax,%rax
   1e3a7:	74 11                	je     1e3ba <dispose_chunk+0xfef>
   1e3a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e3ad:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e3b1:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1e3b8:	eb 05                	jmp    1e3bf <dispose_chunk+0xff4>
   1e3ba:	e8 dc 36 01 00       	call   31a9b <abort>
   1e3bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e3c3:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1e3ca:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e3ce:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1e3d5:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1e3dc:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e3e0:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1e3e7:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1e3ee:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e3f2:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1e3f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e3fd:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e401:	e9 f7 02 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1e406:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1e40d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1e411:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1e418:	48 c1 e8 08          	shr    $0x8,%rax
   1e41c:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
   1e422:	83 bd d4 fe ff ff 00 	cmpl   $0x0,-0x12c(%rbp)
   1e429:	75 0c                	jne    1e437 <dispose_chunk+0x106c>
   1e42b:	c7 85 c8 fe ff ff 00 	movl   $0x0,-0x138(%rbp)
   1e432:	00 00 00 
   1e435:	eb 5d                	jmp    1e494 <dispose_chunk+0x10c9>
   1e437:	81 bd d4 fe ff ff ff 	cmpl   $0xffff,-0x12c(%rbp)
   1e43e:	ff 00 00 
   1e441:	76 0c                	jbe    1e44f <dispose_chunk+0x1084>
   1e443:	c7 85 c8 fe ff ff 1f 	movl   $0x1f,-0x138(%rbp)
   1e44a:	00 00 00 
   1e44d:	eb 45                	jmp    1e494 <dispose_chunk+0x10c9>
   1e44f:	0f bd 85 d4 fe ff ff 	bsr    -0x12c(%rbp),%eax
   1e456:	83 f0 1f             	xor    $0x1f,%eax
   1e459:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1e45e:	29 c2                	sub    %eax,%edx
   1e460:	89 d0                	mov    %edx,%eax
   1e462:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
   1e468:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
   1e46e:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1e471:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
   1e477:	83 c0 07             	add    $0x7,%eax
   1e47a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1e481:	89 c1                	mov    %eax,%ecx
   1e483:	48 d3 ea             	shr    %cl,%rdx
   1e486:	48 89 d0             	mov    %rdx,%rax
   1e489:	83 e0 01             	and    $0x1,%eax
   1e48c:	01 f0                	add    %esi,%eax
   1e48e:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
   1e494:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1e49a:	48 83 c0 4a          	add    $0x4a,%rax
   1e49e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e4a5:	00 
   1e4a6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e4ad:	48 01 d0             	add    %rdx,%rax
   1e4b0:	48 83 c0 08          	add    $0x8,%rax
   1e4b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e4b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e4bc:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
   1e4c2:	89 50 38             	mov    %edx,0x38(%rax)
   1e4c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e4c9:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1e4d0:	00 
   1e4d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e4d5:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1e4d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e4dd:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e4e1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e4e8:	8b 50 04             	mov    0x4(%rax),%edx
   1e4eb:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1e4f1:	be 01 00 00 00       	mov    $0x1,%esi
   1e4f6:	89 c1                	mov    %eax,%ecx
   1e4f8:	d3 e6                	shl    %cl,%esi
   1e4fa:	89 f0                	mov    %esi,%eax
   1e4fc:	21 d0                	and    %edx,%eax
   1e4fe:	85 c0                	test   %eax,%eax
   1e500:	75 5f                	jne    1e561 <dispose_chunk+0x1196>
   1e502:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e509:	8b 50 04             	mov    0x4(%rax),%edx
   1e50c:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1e512:	be 01 00 00 00       	mov    $0x1,%esi
   1e517:	89 c1                	mov    %eax,%ecx
   1e519:	d3 e6                	shl    %cl,%esi
   1e51b:	89 f0                	mov    %esi,%eax
   1e51d:	09 c2                	or     %eax,%edx
   1e51f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e526:	89 50 04             	mov    %edx,0x4(%rax)
   1e529:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e52d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e531:	48 89 10             	mov    %rdx,(%rax)
   1e534:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e538:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1e53c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e540:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e544:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e548:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e54c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e550:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1e554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e558:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e55c:	e9 9c 01 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1e561:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e565:	48 8b 00             	mov    (%rax),%rax
   1e568:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1e56f:	83 bd c8 fe ff ff 1f 	cmpl   $0x1f,-0x138(%rbp)
   1e576:	74 13                	je     1e58b <dispose_chunk+0x11c0>
   1e578:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1e57e:	d1 e8                	shr    %eax
   1e580:	ba 39 00 00 00       	mov    $0x39,%edx
   1e585:	29 c2                	sub    %eax,%edx
   1e587:	89 d0                	mov    %edx,%eax
   1e589:	eb 05                	jmp    1e590 <dispose_chunk+0x11c5>
   1e58b:	b8 00 00 00 00       	mov    $0x0,%eax
   1e590:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1e597:	89 c1                	mov    %eax,%ecx
   1e599:	48 d3 e2             	shl    %cl,%rdx
   1e59c:	48 89 d0             	mov    %rdx,%rax
   1e59f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1e5a6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1e5ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e5b1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1e5b5:	48 39 85 a8 fe ff ff 	cmp    %rax,-0x158(%rbp)
   1e5bc:	0f 84 a2 00 00 00    	je     1e664 <dispose_chunk+0x1299>
   1e5c2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e5c9:	48 c1 e8 3f          	shr    $0x3f,%rax
   1e5cd:	48 83 c0 04          	add    $0x4,%rax
   1e5d1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e5d8:	00 
   1e5d9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1e5e0:	48 01 d0             	add    %rdx,%rax
   1e5e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e5e7:	48 d1 a5 20 ff ff ff 	shlq   -0xe0(%rbp)
   1e5ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e5f2:	48 8b 00             	mov    (%rax),%rax
   1e5f5:	48 85 c0             	test   %rax,%rax
   1e5f8:	74 10                	je     1e60a <dispose_chunk+0x123f>
   1e5fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e5fe:	48 8b 00             	mov    (%rax),%rax
   1e601:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1e608:	eb 9c                	jmp    1e5a6 <dispose_chunk+0x11db>
   1e60a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e611:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e615:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1e619:	0f 93 c0             	setae  %al
   1e61c:	0f b6 c0             	movzbl %al,%eax
   1e61f:	48 85 c0             	test   %rax,%rax
   1e622:	74 3b                	je     1e65f <dispose_chunk+0x1294>
   1e624:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e628:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e62c:	48 89 10             	mov    %rdx,(%rax)
   1e62f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e633:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1e63a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e63e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e642:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e646:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e64a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e64e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1e652:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e656:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e65a:	e9 9e 00 00 00       	jmp    1e6fd <dispose_chunk+0x1332>
   1e65f:	e8 37 34 01 00       	call   31a9b <abort>
   1e664:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1e66b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e66f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1e673:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e67a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e67e:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
   1e685:	0f 93 c0             	setae  %al
   1e688:	0f b6 c0             	movzbl %al,%eax
   1e68b:	48 85 c0             	test   %rax,%rax
   1e68e:	74 62                	je     1e6f2 <dispose_chunk+0x1327>
   1e690:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1e697:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e69b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1e69f:	0f 93 c0             	setae  %al
   1e6a2:	0f b6 c0             	movzbl %al,%eax
   1e6a5:	48 85 c0             	test   %rax,%rax
   1e6a8:	74 48                	je     1e6f2 <dispose_chunk+0x1327>
   1e6aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e6ae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e6b2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e6b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e6ba:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1e6be:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1e6c5:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e6c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e6cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e6d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e6d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e6d9:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1e6e0:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e6e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e6e8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1e6ef:	00 
   1e6f0:	eb 0b                	jmp    1e6fd <dispose_chunk+0x1332>
   1e6f2:	e8 a4 33 01 00       	call   31a9b <abort>
   1e6f7:	e8 9f 33 01 00       	call   31a9b <abort>
   1e6fc:	90                   	nop
   1e6fd:	c9                   	leave  
   1e6fe:	c3                   	ret    

000000000001e6ff <tmalloc_large>:
   1e6ff:	f3 0f 1e fa          	endbr64 
   1e703:	55                   	push   %rbp
   1e704:	48 89 e5             	mov    %rsp,%rbp
   1e707:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   1e70e:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1e715:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   1e71c:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1e723:	00 00 00 00 
   1e727:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1e72e:	48 f7 d8             	neg    %rax
   1e731:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1e738:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1e73f:	48 c1 e8 08          	shr    $0x8,%rax
   1e743:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
   1e749:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
   1e750:	75 0c                	jne    1e75e <tmalloc_large+0x5f>
   1e752:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
   1e759:	00 00 00 
   1e75c:	eb 5d                	jmp    1e7bb <tmalloc_large+0xbc>
   1e75e:	81 bd 14 ff ff ff ff 	cmpl   $0xffff,-0xec(%rbp)
   1e765:	ff 00 00 
   1e768:	76 0c                	jbe    1e776 <tmalloc_large+0x77>
   1e76a:	c7 85 0c ff ff ff 1f 	movl   $0x1f,-0xf4(%rbp)
   1e771:	00 00 00 
   1e774:	eb 45                	jmp    1e7bb <tmalloc_large+0xbc>
   1e776:	0f bd 85 14 ff ff ff 	bsr    -0xec(%rbp),%eax
   1e77d:	83 f0 1f             	xor    $0x1f,%eax
   1e780:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1e785:	29 c2                	sub    %eax,%edx
   1e787:	89 d0                	mov    %edx,%eax
   1e789:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
   1e78f:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1e795:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1e798:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1e79e:	83 c0 07             	add    $0x7,%eax
   1e7a1:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1e7a8:	89 c1                	mov    %eax,%ecx
   1e7aa:	48 d3 ea             	shr    %cl,%rdx
   1e7ad:	48 89 d0             	mov    %rdx,%rax
   1e7b0:	83 e0 01             	and    $0x1,%eax
   1e7b3:	01 f0                	add    %esi,%eax
   1e7b5:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
   1e7bb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e7c2:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
   1e7c8:	48 83 c2 4a          	add    $0x4a,%rdx
   1e7cc:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1e7d1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1e7d8:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1e7df:	00 
   1e7e0:	0f 84 05 01 00 00    	je     1e8eb <tmalloc_large+0x1ec>
   1e7e6:	83 bd 0c ff ff ff 1f 	cmpl   $0x1f,-0xf4(%rbp)
   1e7ed:	74 13                	je     1e802 <tmalloc_large+0x103>
   1e7ef:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1e7f5:	d1 e8                	shr    %eax
   1e7f7:	ba 39 00 00 00       	mov    $0x39,%edx
   1e7fc:	29 c2                	sub    %eax,%edx
   1e7fe:	89 d0                	mov    %edx,%eax
   1e800:	eb 05                	jmp    1e807 <tmalloc_large+0x108>
   1e802:	b8 00 00 00 00       	mov    $0x0,%eax
   1e807:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1e80e:	89 c1                	mov    %eax,%ecx
   1e810:	48 d3 e2             	shl    %cl,%rdx
   1e813:	48 89 d0             	mov    %rdx,%rax
   1e816:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1e81d:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
   1e824:	00 00 00 00 
   1e828:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e82f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e833:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1e837:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1e83e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1e842:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1e846:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1e84d:	73 23                	jae    1e872 <tmalloc_large+0x173>
   1e84f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e856:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1e85d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1e861:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1e868:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
   1e86f:	00 
   1e870:	74 78                	je     1e8ea <tmalloc_large+0x1eb>
   1e872:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e879:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e87d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1e881:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1e888:	48 c1 e8 3f          	shr    $0x3f,%rax
   1e88c:	48 89 c2             	mov    %rax,%rdx
   1e88f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e896:	48 83 c2 04          	add    $0x4,%rdx
   1e89a:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1e89e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1e8a5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1e8aa:	74 18                	je     1e8c4 <tmalloc_large+0x1c5>
   1e8ac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1e8b0:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
   1e8b7:	74 0b                	je     1e8c4 <tmalloc_large+0x1c5>
   1e8b9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1e8bd:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1e8c4:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1e8cb:	00 
   1e8cc:	75 10                	jne    1e8de <tmalloc_large+0x1df>
   1e8ce:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1e8d5:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1e8dc:	eb 0d                	jmp    1e8eb <tmalloc_large+0x1ec>
   1e8de:	48 d1 a5 50 ff ff ff 	shlq   -0xb0(%rbp)
   1e8e5:	e9 3e ff ff ff       	jmp    1e828 <tmalloc_large+0x129>
   1e8ea:	90                   	nop
   1e8eb:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1e8f2:	00 
   1e8f3:	0f 85 14 01 00 00    	jne    1ea0d <tmalloc_large+0x30e>
   1e8f9:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1e900:	00 
   1e901:	0f 85 06 01 00 00    	jne    1ea0d <tmalloc_large+0x30e>
   1e907:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1e90d:	ba 01 00 00 00       	mov    $0x1,%edx
   1e912:	89 c1                	mov    %eax,%ecx
   1e914:	d3 e2                	shl    %cl,%edx
   1e916:	89 d0                	mov    %edx,%eax
   1e918:	8d 14 00             	lea    (%rax,%rax,1),%edx
   1e91b:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1e921:	be 01 00 00 00       	mov    $0x1,%esi
   1e926:	89 c1                	mov    %eax,%ecx
   1e928:	d3 e6                	shl    %cl,%esi
   1e92a:	89 f0                	mov    %esi,%eax
   1e92c:	01 c0                	add    %eax,%eax
   1e92e:	f7 d8                	neg    %eax
   1e930:	09 c2                	or     %eax,%edx
   1e932:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e939:	8b 40 04             	mov    0x4(%rax),%eax
   1e93c:	21 d0                	and    %edx,%eax
   1e93e:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   1e944:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
   1e94b:	0f 84 bc 00 00 00    	je     1ea0d <tmalloc_large+0x30e>
   1e951:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1e957:	f7 d8                	neg    %eax
   1e959:	23 85 1c ff ff ff    	and    -0xe4(%rbp),%eax
   1e95f:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
   1e965:	f3 0f bc 85 20 ff ff 	tzcnt  -0xe0(%rbp),%eax
   1e96c:	ff 
   1e96d:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   1e973:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1e979:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1e97f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1e986:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   1e98c:	48 83 c2 4a          	add    $0x4a,%rdx
   1e990:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1e995:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1e99c:	eb 6f                	jmp    1ea0d <tmalloc_large+0x30e>
   1e99e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e9a5:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e9a9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1e9ad:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1e9b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9bc:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1e9c3:	73 19                	jae    1e9de <tmalloc_large+0x2df>
   1e9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9c9:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1e9d0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e9d7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1e9de:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e9e5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e9e9:	48 85 c0             	test   %rax,%rax
   1e9ec:	74 0d                	je     1e9fb <tmalloc_large+0x2fc>
   1e9ee:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e9f5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e9f9:	eb 0b                	jmp    1ea06 <tmalloc_large+0x307>
   1e9fb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ea02:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ea06:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1ea0d:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1ea14:	00 
   1ea15:	75 87                	jne    1e99e <tmalloc_large+0x29f>
   1ea17:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1ea1e:	00 
   1ea1f:	0f 84 41 09 00 00    	je     1f366 <tmalloc_large+0xc67>
   1ea25:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ea2c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ea30:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1ea37:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1ea3e:	0f 83 22 09 00 00    	jae    1f366 <tmalloc_large+0xc67>
   1ea44:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ea4b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ea4f:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1ea56:	0f 93 c0             	setae  %al
   1ea59:	0f b6 c0             	movzbl %al,%eax
   1ea5c:	48 85 c0             	test   %rax,%rax
   1ea5f:	0f 84 fc 08 00 00    	je     1f361 <tmalloc_large+0xc62>
   1ea65:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1ea6c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ea73:	48 01 d0             	add    %rdx,%rax
   1ea76:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1ea7a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ea81:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ea85:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ea89:	48 89 c1             	mov    %rax,%rcx
   1ea8c:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ea93:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ea9a:	48 01 d0             	add    %rdx,%rax
   1ea9d:	48 39 c1             	cmp    %rax,%rcx
   1eaa0:	74 05                	je     1eaa7 <tmalloc_large+0x3a8>
   1eaa2:	e8 f4 2f 01 00       	call   31a9b <abort>
   1eaa7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eaae:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1eab2:	0f 92 c0             	setb   %al
   1eab5:	0f b6 c0             	movzbl %al,%eax
   1eab8:	48 85 c0             	test   %rax,%rax
   1eabb:	0f 84 a0 08 00 00    	je     1f361 <tmalloc_large+0xc62>
   1eac1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eac8:	48 8b 40 30          	mov    0x30(%rax),%rax
   1eacc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1ead0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ead7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eadb:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1eae2:	0f 84 aa 00 00 00    	je     1eb92 <tmalloc_large+0x493>
   1eae8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eaef:	48 8b 40 10          	mov    0x10(%rax),%rax
   1eaf3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1eaf7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eafe:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eb02:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1eb09:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1eb10:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eb14:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1eb18:	0f 93 c0             	setae  %al
   1eb1b:	0f b6 c0             	movzbl %al,%eax
   1eb1e:	48 85 c0             	test   %rax,%rax
   1eb21:	74 21                	je     1eb44 <tmalloc_large+0x445>
   1eb23:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1eb27:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eb2b:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1eb32:	0f 94 c0             	sete   %al
   1eb35:	0f b6 c0             	movzbl %al,%eax
   1eb38:	48 85 c0             	test   %rax,%rax
   1eb3b:	74 07                	je     1eb44 <tmalloc_large+0x445>
   1eb3d:	b8 01 00 00 00       	mov    $0x1,%eax
   1eb42:	eb 05                	jmp    1eb49 <tmalloc_large+0x44a>
   1eb44:	b8 00 00 00 00       	mov    $0x0,%eax
   1eb49:	85 c0                	test   %eax,%eax
   1eb4b:	74 40                	je     1eb8d <tmalloc_large+0x48e>
   1eb4d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1eb54:	48 8b 40 10          	mov    0x10(%rax),%rax
   1eb58:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1eb5f:	0f 94 c0             	sete   %al
   1eb62:	0f b6 c0             	movzbl %al,%eax
   1eb65:	48 85 c0             	test   %rax,%rax
   1eb68:	74 23                	je     1eb8d <tmalloc_large+0x48e>
   1eb6a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1eb6e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1eb75:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1eb79:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1eb80:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1eb84:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1eb88:	e9 f8 00 00 00       	jmp    1ec85 <tmalloc_large+0x586>
   1eb8d:	e8 09 2f 01 00       	call   31a9b <abort>
   1eb92:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eb99:	48 83 c0 28          	add    $0x28,%rax
   1eb9d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1eba4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ebab:	48 8b 00             	mov    (%rax),%rax
   1ebae:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1ebb5:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1ebbc:	00 
   1ebbd:	75 52                	jne    1ec11 <tmalloc_large+0x512>
   1ebbf:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ebc6:	48 83 c0 20          	add    $0x20,%rax
   1ebca:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1ebd1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ebd8:	48 8b 00             	mov    (%rax),%rax
   1ebdb:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1ebe2:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1ebe9:	00 
   1ebea:	0f 84 95 00 00 00    	je     1ec85 <tmalloc_large+0x586>
   1ebf0:	eb 1f                	jmp    1ec11 <tmalloc_large+0x512>
   1ebf2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1ebf9:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1ec00:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ec07:	48 8b 00             	mov    (%rax),%rax
   1ec0a:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1ec11:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1ec18:	48 83 c0 28          	add    $0x28,%rax
   1ec1c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1ec23:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1ec2a:	48 8b 00             	mov    (%rax),%rax
   1ec2d:	48 85 c0             	test   %rax,%rax
   1ec30:	75 c0                	jne    1ebf2 <tmalloc_large+0x4f3>
   1ec32:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1ec39:	48 83 c0 20          	add    $0x20,%rax
   1ec3d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1ec44:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1ec4b:	48 8b 00             	mov    (%rax),%rax
   1ec4e:	48 85 c0             	test   %rax,%rax
   1ec51:	75 9f                	jne    1ebf2 <tmalloc_large+0x4f3>
   1ec53:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ec5a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ec5e:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1ec65:	0f 93 c0             	setae  %al
   1ec68:	0f b6 c0             	movzbl %al,%eax
   1ec6b:	48 85 c0             	test   %rax,%rax
   1ec6e:	74 10                	je     1ec80 <tmalloc_large+0x581>
   1ec70:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ec77:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ec7e:	eb 05                	jmp    1ec85 <tmalloc_large+0x586>
   1ec80:	e8 16 2e 01 00       	call   31a9b <abort>
   1ec85:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1ec8a:	0f 84 c6 01 00 00    	je     1ee56 <tmalloc_large+0x757>
   1ec90:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ec97:	8b 40 38             	mov    0x38(%rax),%eax
   1ec9a:	89 c0                	mov    %eax,%eax
   1ec9c:	48 83 c0 4a          	add    $0x4a,%rax
   1eca0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1eca7:	00 
   1eca8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ecaf:	48 01 d0             	add    %rdx,%rax
   1ecb2:	48 83 c0 08          	add    $0x8,%rax
   1ecb6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1ecba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ecbe:	48 8b 00             	mov    (%rax),%rax
   1ecc1:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1ecc8:	75 4d                	jne    1ed17 <tmalloc_large+0x618>
   1ecca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ecce:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1ecd5:	48 89 10             	mov    %rdx,(%rax)
   1ecd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ecdc:	48 8b 00             	mov    (%rax),%rax
   1ecdf:	48 85 c0             	test   %rax,%rax
   1ece2:	0f 85 81 00 00 00    	jne    1ed69 <tmalloc_large+0x66a>
   1ece8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ecef:	8b 50 04             	mov    0x4(%rax),%edx
   1ecf2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ecf9:	8b 40 38             	mov    0x38(%rax),%eax
   1ecfc:	be 01 00 00 00       	mov    $0x1,%esi
   1ed01:	89 c1                	mov    %eax,%ecx
   1ed03:	d3 e6                	shl    %cl,%esi
   1ed05:	89 f0                	mov    %esi,%eax
   1ed07:	f7 d0                	not    %eax
   1ed09:	21 c2                	and    %eax,%edx
   1ed0b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ed12:	89 50 04             	mov    %edx,0x4(%rax)
   1ed15:	eb 52                	jmp    1ed69 <tmalloc_large+0x66a>
   1ed17:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ed1e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ed22:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1ed26:	0f 93 c0             	setae  %al
   1ed29:	0f b6 c0             	movzbl %al,%eax
   1ed2c:	48 85 c0             	test   %rax,%rax
   1ed2f:	74 33                	je     1ed64 <tmalloc_large+0x665>
   1ed31:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ed35:	48 8b 40 20          	mov    0x20(%rax),%rax
   1ed39:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1ed40:	75 11                	jne    1ed53 <tmalloc_large+0x654>
   1ed42:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ed46:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1ed4d:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1ed51:	eb 16                	jmp    1ed69 <tmalloc_large+0x66a>
   1ed53:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ed57:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1ed5e:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1ed62:	eb 05                	jmp    1ed69 <tmalloc_large+0x66a>
   1ed64:	e8 32 2d 01 00       	call   31a9b <abort>
   1ed69:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1ed70:	00 
   1ed71:	0f 84 df 00 00 00    	je     1ee56 <tmalloc_large+0x757>
   1ed77:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ed7e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ed82:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1ed89:	0f 93 c0             	setae  %al
   1ed8c:	0f b6 c0             	movzbl %al,%eax
   1ed8f:	48 85 c0             	test   %rax,%rax
   1ed92:	0f 84 b9 00 00 00    	je     1ee51 <tmalloc_large+0x752>
   1ed98:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1ed9f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1eda3:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1eda7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1edae:	48 8b 40 20          	mov    0x20(%rax),%rax
   1edb2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1edb6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1edbb:	74 3f                	je     1edfc <tmalloc_large+0x6fd>
   1edbd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1edc4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1edc8:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1edcc:	0f 93 c0             	setae  %al
   1edcf:	0f b6 c0             	movzbl %al,%eax
   1edd2:	48 85 c0             	test   %rax,%rax
   1edd5:	74 20                	je     1edf7 <tmalloc_large+0x6f8>
   1edd7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1edde:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1ede2:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1ede6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1edea:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1edf1:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1edf5:	eb 05                	jmp    1edfc <tmalloc_large+0x6fd>
   1edf7:	e8 9f 2c 01 00       	call   31a9b <abort>
   1edfc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ee03:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ee07:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1ee0b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1ee10:	74 44                	je     1ee56 <tmalloc_large+0x757>
   1ee12:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ee19:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ee1d:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1ee21:	0f 93 c0             	setae  %al
   1ee24:	0f b6 c0             	movzbl %al,%eax
   1ee27:	48 85 c0             	test   %rax,%rax
   1ee2a:	74 20                	je     1ee4c <tmalloc_large+0x74d>
   1ee2c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1ee33:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ee37:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1ee3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ee3f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1ee46:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1ee4a:	eb 0a                	jmp    1ee56 <tmalloc_large+0x757>
   1ee4c:	e8 4a 2c 01 00       	call   31a9b <abort>
   1ee51:	e8 45 2c 01 00       	call   31a9b <abort>
   1ee56:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
   1ee5d:	1f 
   1ee5e:	0f 87 99 00 00 00    	ja     1eefd <tmalloc_large+0x7fe>
   1ee64:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ee6b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ee72:	48 01 d0             	add    %rdx,%rax
   1ee75:	48 83 c8 03          	or     $0x3,%rax
   1ee79:	48 89 c2             	mov    %rax,%rdx
   1ee7c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ee83:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ee87:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ee8e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ee95:	48 01 c2             	add    %rax,%rdx
   1ee98:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ee9f:	48 01 d0             	add    %rdx,%rax
   1eea2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1eea6:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1eead:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1eeb4:	48 01 c1             	add    %rax,%rcx
   1eeb7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eebe:	48 01 c8             	add    %rcx,%rax
   1eec1:	48 83 ca 01          	or     $0x1,%rdx
   1eec5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1eec9:	48 8b 0d 10 30 04 00 	mov    0x43010(%rip),%rcx        # 61ee0 <mparams>
   1eed0:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1eed7:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   1eede:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1eee5:	48 01 c6             	add    %rax,%rsi
   1eee8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1eeef:	48 01 f0             	add    %rsi,%rax
   1eef2:	48 31 ca             	xor    %rcx,%rdx
   1eef5:	48 89 10             	mov    %rdx,(%rax)
   1eef8:	e9 57 04 00 00       	jmp    1f354 <tmalloc_large+0xc55>
   1eefd:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ef04:	48 83 c8 03          	or     $0x3,%rax
   1ef08:	48 89 c2             	mov    %rax,%rdx
   1ef0b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ef12:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ef16:	48 8b 0d c3 2f 04 00 	mov    0x42fc3(%rip),%rcx        # 61ee0 <mparams>
   1ef1d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1ef24:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
   1ef2b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ef32:	48 01 f0             	add    %rsi,%rax
   1ef35:	48 31 ca             	xor    %rcx,%rdx
   1ef38:	48 89 10             	mov    %rdx,(%rax)
   1ef3b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ef42:	48 83 c8 01          	or     $0x1,%rax
   1ef46:	48 89 c2             	mov    %rax,%rdx
   1ef49:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ef4d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ef51:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1ef55:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ef5c:	48 01 c2             	add    %rax,%rdx
   1ef5f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ef66:	48 89 02             	mov    %rax,(%rdx)
   1ef69:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ef70:	48 c1 e8 03          	shr    $0x3,%rax
   1ef74:	48 83 f8 1f          	cmp    $0x1f,%rax
   1ef78:	0f 87 0c 01 00 00    	ja     1f08a <tmalloc_large+0x98b>
   1ef7e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ef85:	48 c1 e8 03          	shr    $0x3,%rax
   1ef89:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   1ef8f:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1ef95:	01 c0                	add    %eax,%eax
   1ef97:	89 c0                	mov    %eax,%eax
   1ef99:	48 83 c0 08          	add    $0x8,%rax
   1ef9d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1efa4:	00 
   1efa5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1efac:	48 01 d0             	add    %rdx,%rax
   1efaf:	48 83 c0 08          	add    $0x8,%rax
   1efb3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1efb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1efbb:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1efc2:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
   1efc9:	1f 
   1efca:	77 05                	ja     1efd1 <tmalloc_large+0x8d2>
   1efcc:	e8 ca 2a 01 00       	call   31a9b <abort>
   1efd1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1efd8:	8b 10                	mov    (%rax),%edx
   1efda:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1efe0:	be 01 00 00 00       	mov    $0x1,%esi
   1efe5:	89 c1                	mov    %eax,%ecx
   1efe7:	d3 e6                	shl    %cl,%esi
   1efe9:	89 f0                	mov    %esi,%eax
   1efeb:	21 d0                	and    %edx,%eax
   1efed:	85 c0                	test   %eax,%eax
   1efef:	75 27                	jne    1f018 <tmalloc_large+0x919>
   1eff1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1eff8:	8b 10                	mov    (%rax),%edx
   1effa:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1f000:	be 01 00 00 00       	mov    $0x1,%esi
   1f005:	89 c1                	mov    %eax,%ecx
   1f007:	d3 e6                	shl    %cl,%esi
   1f009:	89 f0                	mov    %esi,%eax
   1f00b:	09 c2                	or     %eax,%edx
   1f00d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f014:	89 10                	mov    %edx,(%rax)
   1f016:	eb 37                	jmp    1f04f <tmalloc_large+0x950>
   1f018:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f01c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f020:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f027:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f02b:	48 39 c2             	cmp    %rax,%rdx
   1f02e:	0f 93 c0             	setae  %al
   1f031:	0f b6 c0             	movzbl %al,%eax
   1f034:	48 85 c0             	test   %rax,%rax
   1f037:	74 11                	je     1f04a <tmalloc_large+0x94b>
   1f039:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f03d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f041:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1f048:	eb 05                	jmp    1f04f <tmalloc_large+0x950>
   1f04a:	e8 4c 2a 01 00       	call   31a9b <abort>
   1f04f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f053:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1f057:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f05b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f062:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1f066:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f06a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f06e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1f075:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f079:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f07d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f081:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f085:	e9 ca 02 00 00       	jmp    1f354 <tmalloc_large+0xc55>
   1f08a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f08e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1f092:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f099:	48 c1 e8 08          	shr    $0x8,%rax
   1f09d:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   1f0a3:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
   1f0aa:	75 0c                	jne    1f0b8 <tmalloc_large+0x9b9>
   1f0ac:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   1f0b3:	00 00 00 
   1f0b6:	eb 5d                	jmp    1f115 <tmalloc_large+0xa16>
   1f0b8:	81 bd 2c ff ff ff ff 	cmpl   $0xffff,-0xd4(%rbp)
   1f0bf:	ff 00 00 
   1f0c2:	76 0c                	jbe    1f0d0 <tmalloc_large+0x9d1>
   1f0c4:	c7 85 10 ff ff ff 1f 	movl   $0x1f,-0xf0(%rbp)
   1f0cb:	00 00 00 
   1f0ce:	eb 45                	jmp    1f115 <tmalloc_large+0xa16>
   1f0d0:	0f bd 85 2c ff ff ff 	bsr    -0xd4(%rbp),%eax
   1f0d7:	83 f0 1f             	xor    $0x1f,%eax
   1f0da:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1f0df:	29 c2                	sub    %eax,%edx
   1f0e1:	89 d0                	mov    %edx,%eax
   1f0e3:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1f0e9:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1f0ef:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1f0f2:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1f0f8:	83 c0 07             	add    $0x7,%eax
   1f0fb:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1f102:	89 c1                	mov    %eax,%ecx
   1f104:	48 d3 ea             	shr    %cl,%rdx
   1f107:	48 89 d0             	mov    %rdx,%rax
   1f10a:	83 e0 01             	and    $0x1,%eax
   1f10d:	01 f0                	add    %esi,%eax
   1f10f:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
   1f115:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1f11b:	48 83 c0 4a          	add    $0x4a,%rax
   1f11f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f126:	00 
   1f127:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f12e:	48 01 d0             	add    %rdx,%rax
   1f131:	48 83 c0 08          	add    $0x8,%rax
   1f135:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f139:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f13d:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
   1f143:	89 50 38             	mov    %edx,0x38(%rax)
   1f146:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f14a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1f151:	00 
   1f152:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f156:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1f15a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f15e:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1f162:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f169:	8b 50 04             	mov    0x4(%rax),%edx
   1f16c:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1f172:	be 01 00 00 00       	mov    $0x1,%esi
   1f177:	89 c1                	mov    %eax,%ecx
   1f179:	d3 e6                	shl    %cl,%esi
   1f17b:	89 f0                	mov    %esi,%eax
   1f17d:	21 d0                	and    %edx,%eax
   1f17f:	85 c0                	test   %eax,%eax
   1f181:	75 5f                	jne    1f1e2 <tmalloc_large+0xae3>
   1f183:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f18a:	8b 50 04             	mov    0x4(%rax),%edx
   1f18d:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1f193:	be 01 00 00 00       	mov    $0x1,%esi
   1f198:	89 c1                	mov    %eax,%ecx
   1f19a:	d3 e6                	shl    %cl,%esi
   1f19c:	89 f0                	mov    %esi,%eax
   1f19e:	09 c2                	or     %eax,%edx
   1f1a0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f1a7:	89 50 04             	mov    %edx,0x4(%rax)
   1f1aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f1ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f1b2:	48 89 10             	mov    %rdx,(%rax)
   1f1b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f1b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f1bd:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f1c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f1c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f1c9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f1cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f1d1:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f1d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f1d9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f1dd:	e9 72 01 00 00       	jmp    1f354 <tmalloc_large+0xc55>
   1f1e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f1e6:	48 8b 00             	mov    (%rax),%rax
   1f1e9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1f1ed:	83 bd 10 ff ff ff 1f 	cmpl   $0x1f,-0xf0(%rbp)
   1f1f4:	74 13                	je     1f209 <tmalloc_large+0xb0a>
   1f1f6:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1f1fc:	d1 e8                	shr    %eax
   1f1fe:	ba 39 00 00 00       	mov    $0x39,%edx
   1f203:	29 c2                	sub    %eax,%edx
   1f205:	89 d0                	mov    %edx,%eax
   1f207:	eb 05                	jmp    1f20e <tmalloc_large+0xb0f>
   1f209:	b8 00 00 00 00       	mov    $0x0,%eax
   1f20e:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1f215:	89 c1                	mov    %eax,%ecx
   1f217:	48 d3 e2             	shl    %cl,%rdx
   1f21a:	48 89 d0             	mov    %rdx,%rax
   1f21d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1f221:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f225:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f229:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f22d:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1f234:	0f 84 93 00 00 00    	je     1f2cd <tmalloc_large+0xbce>
   1f23a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f23e:	48 c1 e8 3f          	shr    $0x3f,%rax
   1f242:	48 83 c0 04          	add    $0x4,%rax
   1f246:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f24d:	00 
   1f24e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f252:	48 01 d0             	add    %rdx,%rax
   1f255:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f259:	48 d1 65 88          	shlq   -0x78(%rbp)
   1f25d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f261:	48 8b 00             	mov    (%rax),%rax
   1f264:	48 85 c0             	test   %rax,%rax
   1f267:	74 0d                	je     1f276 <tmalloc_large+0xb77>
   1f269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f26d:	48 8b 00             	mov    (%rax),%rax
   1f270:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1f274:	eb ab                	jmp    1f221 <tmalloc_large+0xb22>
   1f276:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f27d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f281:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1f285:	0f 93 c0             	setae  %al
   1f288:	0f b6 c0             	movzbl %al,%eax
   1f28b:	48 85 c0             	test   %rax,%rax
   1f28e:	74 38                	je     1f2c8 <tmalloc_large+0xbc9>
   1f290:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f294:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f298:	48 89 10             	mov    %rdx,(%rax)
   1f29b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f29f:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1f2a3:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f2a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f2ab:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f2af:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f2b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f2b7:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f2bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f2bf:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f2c3:	e9 8c 00 00 00       	jmp    1f354 <tmalloc_large+0xc55>
   1f2c8:	e8 ce 27 01 00       	call   31a9b <abort>
   1f2cd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f2d1:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f2d5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f2d9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f2e0:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f2e4:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f2e8:	0f 93 c0             	setae  %al
   1f2eb:	0f b6 c0             	movzbl %al,%eax
   1f2ee:	48 85 c0             	test   %rax,%rax
   1f2f1:	74 5c                	je     1f34f <tmalloc_large+0xc50>
   1f2f3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f2fa:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f2fe:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1f302:	0f 93 c0             	setae  %al
   1f305:	0f b6 c0             	movzbl %al,%eax
   1f308:	48 85 c0             	test   %rax,%rax
   1f30b:	74 42                	je     1f34f <tmalloc_large+0xc50>
   1f30d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f311:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f315:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f319:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f31d:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f321:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f325:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f329:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f32d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f331:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f335:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f339:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1f33d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f341:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f345:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1f34c:	00 
   1f34d:	eb 05                	jmp    1f354 <tmalloc_large+0xc55>
   1f34f:	e8 47 27 01 00       	call   31a9b <abort>
   1f354:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1f35b:	48 83 c0 10          	add    $0x10,%rax
   1f35f:	eb 0a                	jmp    1f36b <tmalloc_large+0xc6c>
   1f361:	e8 35 27 01 00       	call   31a9b <abort>
   1f366:	b8 00 00 00 00       	mov    $0x0,%eax
   1f36b:	c9                   	leave  
   1f36c:	c3                   	ret    

000000000001f36d <tmalloc_small>:
   1f36d:	f3 0f 1e fa          	endbr64 
   1f371:	55                   	push   %rbp
   1f372:	48 89 e5             	mov    %rsp,%rbp
   1f375:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   1f37c:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   1f383:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   1f38a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f391:	8b 50 04             	mov    0x4(%rax),%edx
   1f394:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f39b:	8b 40 04             	mov    0x4(%rax),%eax
   1f39e:	f7 d8                	neg    %eax
   1f3a0:	21 d0                	and    %edx,%eax
   1f3a2:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   1f3a8:	f3 0f bc 85 68 ff ff 	tzcnt  -0x98(%rbp),%eax
   1f3af:	ff 
   1f3b0:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   1f3b6:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   1f3bc:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   1f3c2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f3c9:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
   1f3cf:	48 83 c2 4a          	add    $0x4a,%rdx
   1f3d3:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1f3d8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1f3df:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f3e6:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1f3ea:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f3f1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f3f5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f3f9:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1f400:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1f404:	eb 37                	jmp    1f43d <tmalloc_small+0xd0>
   1f406:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f40d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f411:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f415:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1f41c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f424:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
   1f428:	73 13                	jae    1f43d <tmalloc_small+0xd0>
   1f42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f42e:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1f432:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f439:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1f43d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f444:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f448:	48 85 c0             	test   %rax,%rax
   1f44b:	74 0d                	je     1f45a <tmalloc_small+0xed>
   1f44d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f454:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f458:	eb 0b                	jmp    1f465 <tmalloc_small+0xf8>
   1f45a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1f461:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f465:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1f46c:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   1f473:	00 
   1f474:	75 90                	jne    1f406 <tmalloc_small+0x99>
   1f476:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f47d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f481:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f485:	0f 93 c0             	setae  %al
   1f488:	0f b6 c0             	movzbl %al,%eax
   1f48b:	48 85 c0             	test   %rax,%rax
   1f48e:	0f 84 8c 05 00 00    	je     1fa20 <tmalloc_small+0x6b3>
   1f494:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1f498:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f49f:	48 01 d0             	add    %rdx,%rax
   1f4a2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1f4a6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f4aa:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f4ae:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f4b2:	48 89 c1             	mov    %rax,%rcx
   1f4b5:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1f4b9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f4c0:	48 01 d0             	add    %rdx,%rax
   1f4c3:	48 39 c1             	cmp    %rax,%rcx
   1f4c6:	74 05                	je     1f4cd <tmalloc_small+0x160>
   1f4c8:	e8 ce 25 01 00       	call   31a9b <abort>
   1f4cd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f4d1:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1f4d5:	0f 92 c0             	setb   %al
   1f4d8:	0f b6 c0             	movzbl %al,%eax
   1f4db:	48 85 c0             	test   %rax,%rax
   1f4de:	0f 84 3c 05 00 00    	je     1fa20 <tmalloc_small+0x6b3>
   1f4e4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f4e8:	48 8b 40 30          	mov    0x30(%rax),%rax
   1f4ec:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1f4f0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f4f4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f4f8:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f4fc:	0f 84 92 00 00 00    	je     1f594 <tmalloc_small+0x227>
   1f502:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f506:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f50a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1f50e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f512:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f516:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1f51a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f521:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f525:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1f529:	0f 93 c0             	setae  %al
   1f52c:	0f b6 c0             	movzbl %al,%eax
   1f52f:	48 85 c0             	test   %rax,%rax
   1f532:	74 1e                	je     1f552 <tmalloc_small+0x1e5>
   1f534:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f538:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f53c:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f540:	0f 94 c0             	sete   %al
   1f543:	0f b6 c0             	movzbl %al,%eax
   1f546:	48 85 c0             	test   %rax,%rax
   1f549:	74 07                	je     1f552 <tmalloc_small+0x1e5>
   1f54b:	b8 01 00 00 00       	mov    $0x1,%eax
   1f550:	eb 05                	jmp    1f557 <tmalloc_small+0x1ea>
   1f552:	b8 00 00 00 00       	mov    $0x0,%eax
   1f557:	85 c0                	test   %eax,%eax
   1f559:	74 34                	je     1f58f <tmalloc_small+0x222>
   1f55b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f55f:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f563:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f567:	0f 94 c0             	sete   %al
   1f56a:	0f b6 c0             	movzbl %al,%eax
   1f56d:	48 85 c0             	test   %rax,%rax
   1f570:	74 1d                	je     1f58f <tmalloc_small+0x222>
   1f572:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f576:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f57a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f57e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f582:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1f586:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f58a:	e9 b2 00 00 00       	jmp    1f641 <tmalloc_small+0x2d4>
   1f58f:	e8 07 25 01 00       	call   31a9b <abort>
   1f594:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f598:	48 83 c0 28          	add    $0x28,%rax
   1f59c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1f5a0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1f5a4:	48 8b 00             	mov    (%rax),%rax
   1f5a7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1f5ab:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1f5b0:	75 33                	jne    1f5e5 <tmalloc_small+0x278>
   1f5b2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f5b6:	48 83 c0 20          	add    $0x20,%rax
   1f5ba:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1f5be:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1f5c2:	48 8b 00             	mov    (%rax),%rax
   1f5c5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1f5c9:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1f5ce:	74 71                	je     1f641 <tmalloc_small+0x2d4>
   1f5d0:	eb 13                	jmp    1f5e5 <tmalloc_small+0x278>
   1f5d2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f5d6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1f5da:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1f5de:	48 8b 00             	mov    (%rax),%rax
   1f5e1:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1f5e5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f5e9:	48 83 c0 28          	add    $0x28,%rax
   1f5ed:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1f5f1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f5f5:	48 8b 00             	mov    (%rax),%rax
   1f5f8:	48 85 c0             	test   %rax,%rax
   1f5fb:	75 d5                	jne    1f5d2 <tmalloc_small+0x265>
   1f5fd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f601:	48 83 c0 20          	add    $0x20,%rax
   1f605:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1f609:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f60d:	48 8b 00             	mov    (%rax),%rax
   1f610:	48 85 c0             	test   %rax,%rax
   1f613:	75 bd                	jne    1f5d2 <tmalloc_small+0x265>
   1f615:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f61c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f620:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1f624:	0f 93 c0             	setae  %al
   1f627:	0f b6 c0             	movzbl %al,%eax
   1f62a:	48 85 c0             	test   %rax,%rax
   1f62d:	74 0d                	je     1f63c <tmalloc_small+0x2cf>
   1f62f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1f633:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1f63a:	eb 05                	jmp    1f641 <tmalloc_small+0x2d4>
   1f63c:	e8 5a 24 01 00       	call   31a9b <abort>
   1f641:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   1f646:	0f 84 92 01 00 00    	je     1f7de <tmalloc_small+0x471>
   1f64c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f650:	8b 40 38             	mov    0x38(%rax),%eax
   1f653:	89 c0                	mov    %eax,%eax
   1f655:	48 83 c0 4a          	add    $0x4a,%rax
   1f659:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f660:	00 
   1f661:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f668:	48 01 d0             	add    %rdx,%rax
   1f66b:	48 83 c0 08          	add    $0x8,%rax
   1f66f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1f673:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f677:	48 8b 00             	mov    (%rax),%rax
   1f67a:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f67e:	75 43                	jne    1f6c3 <tmalloc_small+0x356>
   1f680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f684:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f688:	48 89 10             	mov    %rdx,(%rax)
   1f68b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f68f:	48 8b 00             	mov    (%rax),%rax
   1f692:	48 85 c0             	test   %rax,%rax
   1f695:	75 75                	jne    1f70c <tmalloc_small+0x39f>
   1f697:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f69e:	8b 50 04             	mov    0x4(%rax),%edx
   1f6a1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f6a5:	8b 40 38             	mov    0x38(%rax),%eax
   1f6a8:	be 01 00 00 00       	mov    $0x1,%esi
   1f6ad:	89 c1                	mov    %eax,%ecx
   1f6af:	d3 e6                	shl    %cl,%esi
   1f6b1:	89 f0                	mov    %esi,%eax
   1f6b3:	f7 d0                	not    %eax
   1f6b5:	21 c2                	and    %eax,%edx
   1f6b7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f6be:	89 50 04             	mov    %edx,0x4(%rax)
   1f6c1:	eb 49                	jmp    1f70c <tmalloc_small+0x39f>
   1f6c3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f6ca:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f6ce:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1f6d2:	0f 93 c0             	setae  %al
   1f6d5:	0f b6 c0             	movzbl %al,%eax
   1f6d8:	48 85 c0             	test   %rax,%rax
   1f6db:	74 2a                	je     1f707 <tmalloc_small+0x39a>
   1f6dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f6e1:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f6e5:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1f6e9:	75 0e                	jne    1f6f9 <tmalloc_small+0x38c>
   1f6eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f6ef:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f6f3:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1f6f7:	eb 13                	jmp    1f70c <tmalloc_small+0x39f>
   1f6f9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f6fd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f701:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1f705:	eb 05                	jmp    1f70c <tmalloc_small+0x39f>
   1f707:	e8 8f 23 01 00       	call   31a9b <abort>
   1f70c:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1f711:	0f 84 c7 00 00 00    	je     1f7de <tmalloc_small+0x471>
   1f717:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f71e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f722:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1f726:	0f 93 c0             	setae  %al
   1f729:	0f b6 c0             	movzbl %al,%eax
   1f72c:	48 85 c0             	test   %rax,%rax
   1f72f:	0f 84 a4 00 00 00    	je     1f7d9 <tmalloc_small+0x46c>
   1f735:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f739:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1f73d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f741:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f745:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f749:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1f74d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1f752:	74 39                	je     1f78d <tmalloc_small+0x420>
   1f754:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f75b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f75f:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1f763:	0f 93 c0             	setae  %al
   1f766:	0f b6 c0             	movzbl %al,%eax
   1f769:	48 85 c0             	test   %rax,%rax
   1f76c:	74 1a                	je     1f788 <tmalloc_small+0x41b>
   1f76e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f772:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f776:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1f77a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f77e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f782:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f786:	eb 05                	jmp    1f78d <tmalloc_small+0x420>
   1f788:	e8 0e 23 01 00       	call   31a9b <abort>
   1f78d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f791:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f795:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f799:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1f79e:	74 3e                	je     1f7de <tmalloc_small+0x471>
   1f7a0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f7a7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f7ab:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1f7af:	0f 93 c0             	setae  %al
   1f7b2:	0f b6 c0             	movzbl %al,%eax
   1f7b5:	48 85 c0             	test   %rax,%rax
   1f7b8:	74 1a                	je     1f7d4 <tmalloc_small+0x467>
   1f7ba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1f7be:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f7c2:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1f7c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f7ca:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f7ce:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f7d2:	eb 0a                	jmp    1f7de <tmalloc_small+0x471>
   1f7d4:	e8 c2 22 01 00       	call   31a9b <abort>
   1f7d9:	e8 bd 22 01 00       	call   31a9b <abort>
   1f7de:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   1f7e3:	0f 87 81 00 00 00    	ja     1f86a <tmalloc_small+0x4fd>
   1f7e9:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1f7ed:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f7f4:	48 01 d0             	add    %rdx,%rax
   1f7f7:	48 83 c8 03          	or     $0x3,%rax
   1f7fb:	48 89 c2             	mov    %rax,%rdx
   1f7fe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f802:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f806:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1f80a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f811:	48 01 c2             	add    %rax,%rdx
   1f814:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f818:	48 01 d0             	add    %rdx,%rax
   1f81b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1f81f:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   1f823:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f82a:	48 01 c1             	add    %rax,%rcx
   1f82d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f831:	48 01 c8             	add    %rcx,%rax
   1f834:	48 83 ca 01          	or     $0x1,%rdx
   1f838:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f83c:	48 8b 0d 9d 26 04 00 	mov    0x4269d(%rip),%rcx        # 61ee0 <mparams>
   1f843:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1f84a:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
   1f84e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f855:	48 01 c6             	add    %rax,%rsi
   1f858:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f85c:	48 01 f0             	add    %rsi,%rax
   1f85f:	48 31 ca             	xor    %rcx,%rdx
   1f862:	48 89 10             	mov    %rdx,(%rax)
   1f865:	e9 ac 01 00 00       	jmp    1fa16 <tmalloc_small+0x6a9>
   1f86a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f871:	48 83 c8 03          	or     $0x3,%rax
   1f875:	48 89 c2             	mov    %rax,%rdx
   1f878:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1f87c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f880:	48 8b 0d 59 26 04 00 	mov    0x42659(%rip),%rcx        # 61ee0 <mparams>
   1f887:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1f88e:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   1f892:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1f899:	48 01 f0             	add    %rsi,%rax
   1f89c:	48 31 ca             	xor    %rcx,%rdx
   1f89f:	48 89 10             	mov    %rdx,(%rax)
   1f8a2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f8a6:	48 83 c8 01          	or     $0x1,%rax
   1f8aa:	48 89 c2             	mov    %rax,%rdx
   1f8ad:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1f8b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f8b5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1f8b9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f8bd:	48 01 c2             	add    %rax,%rdx
   1f8c0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f8c4:	48 89 02             	mov    %rax,(%rdx)
   1f8c7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f8ce:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f8d2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f8d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f8da:	48 c1 e8 03          	shr    $0x3,%rax
   1f8de:	48 83 f8 1f          	cmp    $0x1f,%rax
   1f8e2:	76 05                	jbe    1f8e9 <tmalloc_small+0x57c>
   1f8e4:	e8 b2 21 01 00       	call   31a9b <abort>
   1f8e9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1f8ee:	0f 84 04 01 00 00    	je     1f9f8 <tmalloc_small+0x68b>
   1f8f4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f8fb:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f8ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f903:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f907:	48 c1 e8 03          	shr    $0x3,%rax
   1f90b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   1f911:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1f917:	01 c0                	add    %eax,%eax
   1f919:	89 c0                	mov    %eax,%eax
   1f91b:	48 83 c0 08          	add    $0x8,%rax
   1f91f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f926:	00 
   1f927:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f92e:	48 01 d0             	add    %rdx,%rax
   1f931:	48 83 c0 08          	add    $0x8,%rax
   1f935:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1f939:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f93d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1f941:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)
   1f946:	77 05                	ja     1f94d <tmalloc_small+0x5e0>
   1f948:	e8 4e 21 01 00       	call   31a9b <abort>
   1f94d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f954:	8b 10                	mov    (%rax),%edx
   1f956:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1f95c:	be 01 00 00 00       	mov    $0x1,%esi
   1f961:	89 c1                	mov    %eax,%ecx
   1f963:	d3 e6                	shl    %cl,%esi
   1f965:	89 f0                	mov    %esi,%eax
   1f967:	21 d0                	and    %edx,%eax
   1f969:	85 c0                	test   %eax,%eax
   1f96b:	75 27                	jne    1f994 <tmalloc_small+0x627>
   1f96d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f974:	8b 10                	mov    (%rax),%edx
   1f976:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1f97c:	be 01 00 00 00       	mov    $0x1,%esi
   1f981:	89 c1                	mov    %eax,%ecx
   1f983:	d3 e6                	shl    %cl,%esi
   1f985:	89 f0                	mov    %esi,%eax
   1f987:	09 c2                	or     %eax,%edx
   1f989:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f990:	89 10                	mov    %edx,(%rax)
   1f992:	eb 34                	jmp    1f9c8 <tmalloc_small+0x65b>
   1f994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f998:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f99c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f9a3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f9a7:	48 39 c2             	cmp    %rax,%rdx
   1f9aa:	0f 93 c0             	setae  %al
   1f9ad:	0f b6 c0             	movzbl %al,%eax
   1f9b0:	48 85 c0             	test   %rax,%rax
   1f9b3:	74 0e                	je     1f9c3 <tmalloc_small+0x656>
   1f9b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f9b9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f9bd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1f9c1:	eb 05                	jmp    1f9c8 <tmalloc_small+0x65b>
   1f9c3:	e8 d3 20 01 00       	call   31a9b <abort>
   1f9c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f9cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f9d0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f9d4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1f9d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f9dc:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9e4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1f9e8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f9ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f9f4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f9f8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1f9ff:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1fa03:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fa07:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1fa0e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1fa12:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1fa16:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1fa1a:	48 83 c0 10          	add    $0x10,%rax
   1fa1e:	eb 05                	jmp    1fa25 <tmalloc_small+0x6b8>
   1fa20:	e8 76 20 01 00       	call   31a9b <abort>
   1fa25:	c9                   	leave  
   1fa26:	c3                   	ret    

000000000001fa27 <dlmalloc>:
   1fa27:	f3 0f 1e fa          	endbr64 
   1fa2b:	55                   	push   %rbp
   1fa2c:	48 89 e5             	mov    %rsp,%rbp
   1fa2f:	53                   	push   %rbx
   1fa30:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   1fa37:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1fa3e:	48 8b 05 9b 24 04 00 	mov    0x4249b(%rip),%rax        # 61ee0 <mparams>
   1fa45:	48 85 c0             	test   %rax,%rax
   1fa48:	75 07                	jne    1fa51 <dlmalloc+0x2a>
   1fa4a:	e8 3b 9f ff ff       	call   1998a <init_mparams>
   1fa4f:	85 c0                	test   %eax,%eax
   1fa51:	90                   	nop
   1fa52:	8b 05 38 28 04 00    	mov    0x42838(%rip),%eax        # 62290 <_gm_+0x370>
   1fa58:	83 e0 02             	and    $0x2,%eax
   1fa5b:	85 c0                	test   %eax,%eax
   1fa5d:	74 23                	je     1fa82 <dlmalloc+0x5b>
   1fa5f:	b8 01 00 00 00       	mov    $0x1,%eax
   1fa64:	87 05 2a 28 04 00    	xchg   %eax,0x4282a(%rip)        # 62294 <_gm_+0x374>
   1fa6a:	85 c0                	test   %eax,%eax
   1fa6c:	74 14                	je     1fa82 <dlmalloc+0x5b>
   1fa6e:	48 8d 3d 1f 28 04 00 	lea    0x4281f(%rip),%rdi        # 62294 <_gm_+0x374>
   1fa75:	e8 10 9e ff ff       	call   1988a <spin_acquire_lock>
   1fa7a:	85 c0                	test   %eax,%eax
   1fa7c:	0f 85 91 0a 00 00    	jne    20513 <dlmalloc+0xaec>
   1fa82:	48 81 bd 18 ff ff ff 	cmpq   $0xe0,-0xe8(%rbp)
   1fa89:	e0 00 00 00 
   1fa8d:	0f 87 12 07 00 00    	ja     201a5 <dlmalloc+0x77e>
   1fa93:	48 83 bd 18 ff ff ff 	cmpq   $0xe,-0xe8(%rbp)
   1fa9a:	0e 
   1fa9b:	76 11                	jbe    1faae <dlmalloc+0x87>
   1fa9d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1faa4:	48 83 c0 1f          	add    $0x1f,%rax
   1faa8:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1faac:	eb 05                	jmp    1fab3 <dlmalloc+0x8c>
   1faae:	b8 20 00 00 00       	mov    $0x20,%eax
   1fab3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1faba:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fac1:	48 c1 e8 03          	shr    $0x3,%rax
   1fac5:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   1facb:	8b 15 4f 24 04 00    	mov    0x4244f(%rip),%edx        # 61f20 <_gm_>
   1fad1:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fad7:	89 c1                	mov    %eax,%ecx
   1fad9:	d3 ea                	shr    %cl,%edx
   1fadb:	89 d0                	mov    %edx,%eax
   1fadd:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1fae3:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1fae9:	83 e0 03             	and    $0x3,%eax
   1faec:	85 c0                	test   %eax,%eax
   1faee:	0f 84 d3 01 00 00    	je     1fcc7 <dlmalloc+0x2a0>
   1faf4:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1fafa:	83 e0 01             	and    $0x1,%eax
   1fafd:	85 c0                	test   %eax,%eax
   1faff:	0f 94 c0             	sete   %al
   1fb02:	0f b6 c0             	movzbl %al,%eax
   1fb05:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   1fb0b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fb11:	01 c0                	add    %eax,%eax
   1fb13:	89 c0                	mov    %eax,%eax
   1fb15:	48 83 c0 08          	add    $0x8,%rax
   1fb19:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fb20:	00 
   1fb21:	48 8d 05 f8 23 04 00 	lea    0x423f8(%rip),%rax        # 61f20 <_gm_>
   1fb28:	48 01 d0             	add    %rdx,%rax
   1fb2b:	48 83 c0 08          	add    $0x8,%rax
   1fb2f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1fb33:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1fb37:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fb3b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1fb3f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fb43:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fb47:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fb4b:	48 89 c2             	mov    %rax,%rdx
   1fb4e:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fb54:	c1 e0 03             	shl    $0x3,%eax
   1fb57:	89 c0                	mov    %eax,%eax
   1fb59:	48 39 c2             	cmp    %rax,%rdx
   1fb5c:	74 05                	je     1fb63 <dlmalloc+0x13c>
   1fb5e:	e8 38 1f 01 00       	call   31a9b <abort>
   1fb63:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fb67:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fb6b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1fb6f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fb73:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1fb77:	75 05                	jne    1fb7e <dlmalloc+0x157>
   1fb79:	e8 1d 1f 01 00       	call   31a9b <abort>
   1fb7e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fb82:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1fb86:	75 05                	jne    1fb8d <dlmalloc+0x166>
   1fb88:	e8 0e 1f 01 00       	call   31a9b <abort>
   1fb8d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fb91:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fb95:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fb99:	48 89 c2             	mov    %rax,%rdx
   1fb9c:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fba2:	c1 e0 03             	shl    $0x3,%eax
   1fba5:	89 c0                	mov    %eax,%eax
   1fba7:	48 39 c2             	cmp    %rax,%rdx
   1fbaa:	74 05                	je     1fbb1 <dlmalloc+0x18a>
   1fbac:	e8 ea 1e 01 00       	call   31a9b <abort>
   1fbb1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1fbb5:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1fbb9:	75 23                	jne    1fbde <dlmalloc+0x1b7>
   1fbbb:	8b 15 5f 23 04 00    	mov    0x4235f(%rip),%edx        # 61f20 <_gm_>
   1fbc1:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fbc7:	be 01 00 00 00       	mov    $0x1,%esi
   1fbcc:	89 c1                	mov    %eax,%ecx
   1fbce:	d3 e6                	shl    %cl,%esi
   1fbd0:	89 f0                	mov    %esi,%eax
   1fbd2:	f7 d0                	not    %eax
   1fbd4:	21 d0                	and    %edx,%eax
   1fbd6:	89 05 44 23 04 00    	mov    %eax,0x42344(%rip)        # 61f20 <_gm_>
   1fbdc:	eb 4c                	jmp    1fc2a <dlmalloc+0x203>
   1fbde:	48 8b 05 53 23 04 00 	mov    0x42353(%rip),%rax        # 61f38 <_gm_+0x18>
   1fbe5:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1fbe9:	0f 93 c0             	setae  %al
   1fbec:	0f b6 c0             	movzbl %al,%eax
   1fbef:	48 85 c0             	test   %rax,%rax
   1fbf2:	74 31                	je     1fc25 <dlmalloc+0x1fe>
   1fbf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1fbf8:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fbfc:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1fc00:	0f 94 c0             	sete   %al
   1fc03:	0f b6 c0             	movzbl %al,%eax
   1fc06:	48 85 c0             	test   %rax,%rax
   1fc09:	74 1a                	je     1fc25 <dlmalloc+0x1fe>
   1fc0b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1fc0f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1fc13:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1fc17:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1fc1b:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1fc1f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1fc23:	eb 05                	jmp    1fc2a <dlmalloc+0x203>
   1fc25:	e8 71 1e 01 00       	call   31a9b <abort>
   1fc2a:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fc30:	c1 e0 03             	shl    $0x3,%eax
   1fc33:	83 c8 03             	or     $0x3,%eax
   1fc36:	89 c2                	mov    %eax,%edx
   1fc38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fc3c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fc40:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fc46:	c1 e0 03             	shl    $0x3,%eax
   1fc49:	89 c2                	mov    %eax,%edx
   1fc4b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fc4f:	48 01 d0             	add    %rdx,%rax
   1fc52:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1fc56:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fc5c:	c1 e0 03             	shl    $0x3,%eax
   1fc5f:	89 c1                	mov    %eax,%ecx
   1fc61:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fc65:	48 01 c8             	add    %rcx,%rax
   1fc68:	48 83 ca 01          	or     $0x1,%rdx
   1fc6c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fc70:	48 8b 15 69 22 04 00 	mov    0x42269(%rip),%rdx        # 61ee0 <mparams>
   1fc77:	48 8d 0d a2 22 04 00 	lea    0x422a2(%rip),%rcx        # 61f20 <_gm_>
   1fc7e:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fc84:	c1 e0 03             	shl    $0x3,%eax
   1fc87:	89 c6                	mov    %eax,%esi
   1fc89:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fc8d:	48 01 f0             	add    %rsi,%rax
   1fc90:	48 31 ca             	xor    %rcx,%rdx
   1fc93:	48 89 10             	mov    %rdx,(%rax)
   1fc96:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1fc9a:	48 83 c0 10          	add    $0x10,%rax
   1fc9e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1fca5:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1fcac:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fcb3:	48 89 c6             	mov    %rax,%rsi
   1fcb6:	48 8d 3d 63 22 04 00 	lea    0x42263(%rip),%rdi        # 61f20 <_gm_>
   1fcbd:	e8 a4 a2 ff ff       	call   19f66 <do_check_malloced_chunk>
   1fcc2:	e9 d8 07 00 00       	jmp    2049f <dlmalloc+0xa78>
   1fcc7:	48 8b 05 5a 22 04 00 	mov    0x4225a(%rip),%rax        # 61f28 <_gm_+0x8>
   1fcce:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1fcd5:	0f 86 4d 05 00 00    	jbe    20228 <dlmalloc+0x801>
   1fcdb:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   1fce2:	0f 84 62 04 00 00    	je     2014a <dlmalloc+0x723>
   1fce8:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fcee:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   1fcf4:	89 c1                	mov    %eax,%ecx
   1fcf6:	d3 e2                	shl    %cl,%edx
   1fcf8:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fcfe:	be 01 00 00 00       	mov    $0x1,%esi
   1fd03:	89 c1                	mov    %eax,%ecx
   1fd05:	d3 e6                	shl    %cl,%esi
   1fd07:	89 f0                	mov    %esi,%eax
   1fd09:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1fd0c:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1fd12:	bf 01 00 00 00       	mov    $0x1,%edi
   1fd17:	89 c1                	mov    %eax,%ecx
   1fd19:	d3 e7                	shl    %cl,%edi
   1fd1b:	89 f8                	mov    %edi,%eax
   1fd1d:	01 c0                	add    %eax,%eax
   1fd1f:	f7 d8                	neg    %eax
   1fd21:	09 f0                	or     %esi,%eax
   1fd23:	21 d0                	and    %edx,%eax
   1fd25:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   1fd2b:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1fd31:	f7 d8                	neg    %eax
   1fd33:	23 85 34 ff ff ff    	and    -0xcc(%rbp),%eax
   1fd39:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
   1fd3f:	f3 0f bc 85 38 ff ff 	tzcnt  -0xc8(%rbp),%eax
   1fd46:	ff 
   1fd47:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1fd4d:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1fd53:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1fd59:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fd5f:	01 c0                	add    %eax,%eax
   1fd61:	89 c0                	mov    %eax,%eax
   1fd63:	48 83 c0 08          	add    $0x8,%rax
   1fd67:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fd6e:	00 
   1fd6f:	48 8d 05 aa 21 04 00 	lea    0x421aa(%rip),%rax        # 61f20 <_gm_>
   1fd76:	48 01 d0             	add    %rdx,%rax
   1fd79:	48 83 c0 08          	add    $0x8,%rax
   1fd7d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1fd84:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fd8b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fd8f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1fd96:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fd9d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fda1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fda5:	48 89 c2             	mov    %rax,%rdx
   1fda8:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fdae:	c1 e0 03             	shl    $0x3,%eax
   1fdb1:	89 c0                	mov    %eax,%eax
   1fdb3:	48 39 c2             	cmp    %rax,%rdx
   1fdb6:	74 05                	je     1fdbd <dlmalloc+0x396>
   1fdb8:	e8 de 1c 01 00       	call   31a9b <abort>
   1fdbd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fdc4:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fdc8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1fdcf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fdd6:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
   1fddd:	75 05                	jne    1fde4 <dlmalloc+0x3bd>
   1fddf:	e8 b7 1c 01 00       	call   31a9b <abort>
   1fde4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fdeb:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1fdf2:	75 05                	jne    1fdf9 <dlmalloc+0x3d2>
   1fdf4:	e8 a2 1c 01 00       	call   31a9b <abort>
   1fdf9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fe00:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fe04:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fe08:	48 89 c2             	mov    %rax,%rdx
   1fe0b:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fe11:	c1 e0 03             	shl    $0x3,%eax
   1fe14:	89 c0                	mov    %eax,%eax
   1fe16:	48 39 c2             	cmp    %rax,%rdx
   1fe19:	74 05                	je     1fe20 <dlmalloc+0x3f9>
   1fe1b:	e8 7b 1c 01 00       	call   31a9b <abort>
   1fe20:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fe27:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1fe2e:	75 23                	jne    1fe53 <dlmalloc+0x42c>
   1fe30:	8b 15 ea 20 04 00    	mov    0x420ea(%rip),%edx        # 61f20 <_gm_>
   1fe36:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fe3c:	be 01 00 00 00       	mov    $0x1,%esi
   1fe41:	89 c1                	mov    %eax,%ecx
   1fe43:	d3 e6                	shl    %cl,%esi
   1fe45:	89 f0                	mov    %esi,%eax
   1fe47:	f7 d0                	not    %eax
   1fe49:	21 d0                	and    %edx,%eax
   1fe4b:	89 05 cf 20 04 00    	mov    %eax,0x420cf(%rip)        # 61f20 <_gm_>
   1fe51:	eb 61                	jmp    1feb4 <dlmalloc+0x48d>
   1fe53:	48 8b 05 de 20 04 00 	mov    0x420de(%rip),%rax        # 61f38 <_gm_+0x18>
   1fe5a:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1fe61:	0f 93 c0             	setae  %al
   1fe64:	0f b6 c0             	movzbl %al,%eax
   1fe67:	48 85 c0             	test   %rax,%rax
   1fe6a:	74 43                	je     1feaf <dlmalloc+0x488>
   1fe6c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fe73:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fe77:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1fe7e:	0f 94 c0             	sete   %al
   1fe81:	0f b6 c0             	movzbl %al,%eax
   1fe84:	48 85 c0             	test   %rax,%rax
   1fe87:	74 26                	je     1feaf <dlmalloc+0x488>
   1fe89:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fe90:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1fe97:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1fe9b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fea2:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1fea9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1fead:	eb 05                	jmp    1feb4 <dlmalloc+0x48d>
   1feaf:	e8 e7 1b 01 00       	call   31a9b <abort>
   1feb4:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1feba:	c1 e0 03             	shl    $0x3,%eax
   1febd:	89 c0                	mov    %eax,%eax
   1febf:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1fec6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1fecd:	48 83 bd 78 ff ff ff 	cmpq   $0x1f,-0x88(%rbp)
   1fed4:	1f 
   1fed5:	77 7d                	ja     1ff54 <dlmalloc+0x52d>
   1fed7:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fedd:	c1 e0 03             	shl    $0x3,%eax
   1fee0:	83 c8 03             	or     $0x3,%eax
   1fee3:	89 c2                	mov    %eax,%edx
   1fee5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1feec:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fef0:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1fef6:	c1 e0 03             	shl    $0x3,%eax
   1fef9:	89 c2                	mov    %eax,%edx
   1fefb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ff02:	48 01 d0             	add    %rdx,%rax
   1ff05:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1ff09:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1ff0f:	c1 e0 03             	shl    $0x3,%eax
   1ff12:	89 c1                	mov    %eax,%ecx
   1ff14:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ff1b:	48 01 c8             	add    %rcx,%rax
   1ff1e:	48 83 ca 01          	or     $0x1,%rdx
   1ff22:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ff26:	48 8b 15 b3 1f 04 00 	mov    0x41fb3(%rip),%rdx        # 61ee0 <mparams>
   1ff2d:	48 8d 0d ec 1f 04 00 	lea    0x41fec(%rip),%rcx        # 61f20 <_gm_>
   1ff34:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1ff3a:	c1 e0 03             	shl    $0x3,%eax
   1ff3d:	89 c6                	mov    %eax,%esi
   1ff3f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ff46:	48 01 f0             	add    %rsi,%rax
   1ff49:	48 31 ca             	xor    %rcx,%rdx
   1ff4c:	48 89 10             	mov    %rdx,(%rax)
   1ff4f:	e9 c2 01 00 00       	jmp    20116 <dlmalloc+0x6ef>
   1ff54:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1ff5b:	48 83 c8 03          	or     $0x3,%rax
   1ff5f:	48 89 c2             	mov    %rax,%rdx
   1ff62:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ff69:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ff6d:	48 8b 15 6c 1f 04 00 	mov    0x41f6c(%rip),%rdx        # 61ee0 <mparams>
   1ff74:	48 8d 35 a5 1f 04 00 	lea    0x41fa5(%rip),%rsi        # 61f20 <_gm_>
   1ff7b:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
   1ff82:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1ff89:	48 01 c8             	add    %rcx,%rax
   1ff8c:	48 31 f2             	xor    %rsi,%rdx
   1ff8f:	48 89 10             	mov    %rdx,(%rax)
   1ff92:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1ff99:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1ffa0:	48 01 d0             	add    %rdx,%rax
   1ffa3:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1ffa7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffae:	48 83 c8 01          	or     $0x1,%rax
   1ffb2:	48 89 c2             	mov    %rax,%rdx
   1ffb5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ffb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ffbd:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1ffc1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffc8:	48 01 c2             	add    %rax,%rdx
   1ffcb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffd2:	48 89 02             	mov    %rax,(%rdx)
   1ffd5:	48 8b 05 4c 1f 04 00 	mov    0x41f4c(%rip),%rax        # 61f28 <_gm_+0x8>
   1ffdc:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1ffe0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ffe4:	48 c1 e8 03          	shr    $0x3,%rax
   1ffe8:	48 83 f8 1f          	cmp    $0x1f,%rax
   1ffec:	76 05                	jbe    1fff3 <dlmalloc+0x5cc>
   1ffee:	e8 a8 1a 01 00       	call   31a9b <abort>
   1fff3:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   1fff8:	0f 84 ff 00 00 00    	je     200fd <dlmalloc+0x6d6>
   1fffe:	48 8b 05 3b 1f 04 00 	mov    0x41f3b(%rip),%rax        # 61f40 <_gm_+0x20>
   20005:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   20009:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2000d:	48 c1 e8 03          	shr    $0x3,%rax
   20011:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   20017:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2001d:	01 c0                	add    %eax,%eax
   2001f:	89 c0                	mov    %eax,%eax
   20021:	48 83 c0 08          	add    $0x8,%rax
   20025:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2002c:	00 
   2002d:	48 8d 05 ec 1e 04 00 	lea    0x41eec(%rip),%rax        # 61f20 <_gm_>
   20034:	48 01 d0             	add    %rdx,%rax
   20037:	48 83 c0 08          	add    $0x8,%rax
   2003b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2003f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20043:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   2004a:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   2004f:	77 05                	ja     20056 <dlmalloc+0x62f>
   20051:	e8 45 1a 01 00       	call   31a9b <abort>
   20056:	8b 15 c4 1e 04 00    	mov    0x41ec4(%rip),%edx        # 61f20 <_gm_>
   2005c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   20062:	be 01 00 00 00       	mov    $0x1,%esi
   20067:	89 c1                	mov    %eax,%ecx
   20069:	d3 e6                	shl    %cl,%esi
   2006b:	89 f0                	mov    %esi,%eax
   2006d:	21 d0                	and    %edx,%eax
   2006f:	85 c0                	test   %eax,%eax
   20071:	75 21                	jne    20094 <dlmalloc+0x66d>
   20073:	8b 15 a7 1e 04 00    	mov    0x41ea7(%rip),%edx        # 61f20 <_gm_>
   20079:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2007f:	be 01 00 00 00       	mov    $0x1,%esi
   20084:	89 c1                	mov    %eax,%ecx
   20086:	d3 e6                	shl    %cl,%esi
   20088:	89 f0                	mov    %esi,%eax
   2008a:	09 d0                	or     %edx,%eax
   2008c:	89 05 8e 1e 04 00    	mov    %eax,0x41e8e(%rip)        # 61f20 <_gm_>
   20092:	eb 33                	jmp    200c7 <dlmalloc+0x6a0>
   20094:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20098:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2009c:	48 8b 05 95 1e 04 00 	mov    0x41e95(%rip),%rax        # 61f38 <_gm_+0x18>
   200a3:	48 39 c2             	cmp    %rax,%rdx
   200a6:	0f 93 c0             	setae  %al
   200a9:	0f b6 c0             	movzbl %al,%eax
   200ac:	48 85 c0             	test   %rax,%rax
   200af:	74 11                	je     200c2 <dlmalloc+0x69b>
   200b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   200b5:	48 8b 40 10          	mov    0x10(%rax),%rax
   200b9:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   200c0:	eb 05                	jmp    200c7 <dlmalloc+0x6a0>
   200c2:	e8 d4 19 01 00       	call   31a9b <abort>
   200c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   200cb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   200cf:	48 89 50 10          	mov    %rdx,0x10(%rax)
   200d3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   200da:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   200de:	48 89 50 18          	mov    %rdx,0x18(%rax)
   200e2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   200e6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   200ed:	48 89 50 10          	mov    %rdx,0x10(%rax)
   200f1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   200f5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   200f9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   200fd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20104:	48 89 05 1d 1e 04 00 	mov    %rax,0x41e1d(%rip)        # 61f28 <_gm_+0x8>
   2010b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2010f:	48 89 05 2a 1e 04 00 	mov    %rax,0x41e2a(%rip)        # 61f40 <_gm_+0x20>
   20116:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2011d:	48 83 c0 10          	add    $0x10,%rax
   20121:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   20128:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   2012f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20136:	48 89 c6             	mov    %rax,%rsi
   20139:	48 8d 3d e0 1d 04 00 	lea    0x41de0(%rip),%rdi        # 61f20 <_gm_>
   20140:	e8 21 9e ff ff       	call   19f66 <do_check_malloced_chunk>
   20145:	e9 55 03 00 00       	jmp    2049f <dlmalloc+0xa78>
   2014a:	8b 05 d4 1d 04 00    	mov    0x41dd4(%rip),%eax        # 61f24 <_gm_+0x4>
   20150:	85 c0                	test   %eax,%eax
   20152:	0f 84 d0 00 00 00    	je     20228 <dlmalloc+0x801>
   20158:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2015f:	48 89 c6             	mov    %rax,%rsi
   20162:	48 8d 3d b7 1d 04 00 	lea    0x41db7(%rip),%rdi        # 61f20 <_gm_>
   20169:	e8 ff f1 ff ff       	call   1f36d <tmalloc_small>
   2016e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   20175:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   2017c:	00 
   2017d:	0f 84 a5 00 00 00    	je     20228 <dlmalloc+0x801>
   20183:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   2018a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20191:	48 89 c6             	mov    %rax,%rsi
   20194:	48 8d 3d 85 1d 04 00 	lea    0x41d85(%rip),%rdi        # 61f20 <_gm_>
   2019b:	e8 c6 9d ff ff       	call   19f66 <do_check_malloced_chunk>
   201a0:	e9 fa 02 00 00       	jmp    2049f <dlmalloc+0xa78>
   201a5:	48 81 bd 18 ff ff ff 	cmpq   $0xffffffffffffff7f,-0xe8(%rbp)
   201ac:	7f ff ff ff 
   201b0:	76 0d                	jbe    201bf <dlmalloc+0x798>
   201b2:	48 c7 85 50 ff ff ff 	movq   $0xffffffffffffffff,-0xb0(%rbp)
   201b9:	ff ff ff ff 
   201bd:	eb 69                	jmp    20228 <dlmalloc+0x801>
   201bf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   201c6:	48 83 c0 1f          	add    $0x1f,%rax
   201ca:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   201ce:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   201d5:	8b 05 49 1d 04 00    	mov    0x41d49(%rip),%eax        # 61f24 <_gm_+0x4>
   201db:	85 c0                	test   %eax,%eax
   201dd:	74 49                	je     20228 <dlmalloc+0x801>
   201df:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   201e6:	48 89 c6             	mov    %rax,%rsi
   201e9:	48 8d 3d 30 1d 04 00 	lea    0x41d30(%rip),%rdi        # 61f20 <_gm_>
   201f0:	e8 0a e5 ff ff       	call   1e6ff <tmalloc_large>
   201f5:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   201fc:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   20203:	00 
   20204:	74 22                	je     20228 <dlmalloc+0x801>
   20206:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   2020d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20214:	48 89 c6             	mov    %rax,%rsi
   20217:	48 8d 3d 02 1d 04 00 	lea    0x41d02(%rip),%rdi        # 61f20 <_gm_>
   2021e:	e8 43 9d ff ff       	call   19f66 <do_check_malloced_chunk>
   20223:	e9 77 02 00 00       	jmp    2049f <dlmalloc+0xa78>
   20228:	48 8b 05 f9 1c 04 00 	mov    0x41cf9(%rip),%rax        # 61f28 <_gm_+0x8>
   2022f:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   20236:	0f 87 58 01 00 00    	ja     20394 <dlmalloc+0x96d>
   2023c:	48 8b 05 e5 1c 04 00 	mov    0x41ce5(%rip),%rax        # 61f28 <_gm_+0x8>
   20243:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   2024a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2024e:	48 8b 05 eb 1c 04 00 	mov    0x41ceb(%rip),%rax        # 61f40 <_gm_+0x20>
   20255:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20259:	48 83 7d d0 1f       	cmpq   $0x1f,-0x30(%rbp)
   2025e:	0f 86 8a 00 00 00    	jbe    202ee <dlmalloc+0x8c7>
   20264:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20268:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2026f:	48 01 d0             	add    %rdx,%rax
   20272:	48 89 05 c7 1c 04 00 	mov    %rax,0x41cc7(%rip)        # 61f40 <_gm_+0x20>
   20279:	48 8b 05 c0 1c 04 00 	mov    0x41cc0(%rip),%rax        # 61f40 <_gm_+0x20>
   20280:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20284:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20288:	48 89 05 99 1c 04 00 	mov    %rax,0x41c99(%rip)        # 61f28 <_gm_+0x8>
   2028f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20293:	48 83 c8 01          	or     $0x1,%rax
   20297:	48 89 c2             	mov    %rax,%rdx
   2029a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2029e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   202a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   202a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   202aa:	48 01 c2             	add    %rax,%rdx
   202ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   202b1:	48 89 02             	mov    %rax,(%rdx)
   202b4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   202bb:	48 83 c8 03          	or     $0x3,%rax
   202bf:	48 89 c2             	mov    %rax,%rdx
   202c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   202c6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   202ca:	48 8b 15 0f 1c 04 00 	mov    0x41c0f(%rip),%rdx        # 61ee0 <mparams>
   202d1:	48 8d 35 48 1c 04 00 	lea    0x41c48(%rip),%rsi        # 61f20 <_gm_>
   202d8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   202dc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   202e3:	48 01 c8             	add    %rcx,%rax
   202e6:	48 31 f2             	xor    %rsi,%rdx
   202e9:	48 89 10             	mov    %rdx,(%rax)
   202ec:	eb 75                	jmp    20363 <dlmalloc+0x93c>
   202ee:	48 8b 05 33 1c 04 00 	mov    0x41c33(%rip),%rax        # 61f28 <_gm_+0x8>
   202f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   202f9:	48 c7 05 24 1c 04 00 	movq   $0x0,0x41c24(%rip)        # 61f28 <_gm_+0x8>
   20300:	00 00 00 00 
   20304:	48 c7 05 31 1c 04 00 	movq   $0x0,0x41c31(%rip)        # 61f40 <_gm_+0x20>
   2030b:	00 00 00 00 
   2030f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20313:	48 83 c8 03          	or     $0x3,%rax
   20317:	48 89 c2             	mov    %rax,%rdx
   2031a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2031e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20322:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20326:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2032a:	48 01 d0             	add    %rdx,%rax
   2032d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   20331:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   20335:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20339:	48 01 c8             	add    %rcx,%rax
   2033c:	48 83 ca 01          	or     $0x1,%rdx
   20340:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20344:	48 8b 15 95 1b 04 00 	mov    0x41b95(%rip),%rdx        # 61ee0 <mparams>
   2034b:	48 8d 35 ce 1b 04 00 	lea    0x41bce(%rip),%rsi        # 61f20 <_gm_>
   20352:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   20356:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2035a:	48 01 c8             	add    %rcx,%rax
   2035d:	48 31 f2             	xor    %rsi,%rdx
   20360:	48 89 10             	mov    %rdx,(%rax)
   20363:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20367:	48 83 c0 10          	add    $0x10,%rax
   2036b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   20372:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   20379:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20380:	48 89 c6             	mov    %rax,%rsi
   20383:	48 8d 3d 96 1b 04 00 	lea    0x41b96(%rip),%rdi        # 61f20 <_gm_>
   2038a:	e8 d7 9b ff ff       	call   19f66 <do_check_malloced_chunk>
   2038f:	e9 0b 01 00 00       	jmp    2049f <dlmalloc+0xa78>
   20394:	48 8b 05 95 1b 04 00 	mov    0x41b95(%rip),%rax        # 61f30 <_gm_+0x10>
   2039b:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   203a2:	0f 83 da 00 00 00    	jae    20482 <dlmalloc+0xa5b>
   203a8:	48 8b 05 81 1b 04 00 	mov    0x41b81(%rip),%rax        # 61f30 <_gm_+0x10>
   203af:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   203b6:	48 89 05 73 1b 04 00 	mov    %rax,0x41b73(%rip)        # 61f30 <_gm_+0x10>
   203bd:	48 8b 05 6c 1b 04 00 	mov    0x41b6c(%rip),%rax        # 61f30 <_gm_+0x10>
   203c4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   203c8:	48 8b 05 79 1b 04 00 	mov    0x41b79(%rip),%rax        # 61f48 <_gm_+0x28>
   203cf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   203d3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   203d7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   203de:	48 01 d0             	add    %rdx,%rax
   203e1:	48 89 05 60 1b 04 00 	mov    %rax,0x41b60(%rip)        # 61f48 <_gm_+0x28>
   203e8:	48 8b 05 59 1b 04 00 	mov    0x41b59(%rip),%rax        # 61f48 <_gm_+0x28>
   203ef:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   203f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   203f7:	48 83 c8 01          	or     $0x1,%rax
   203fb:	48 89 c2             	mov    %rax,%rdx
   203fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20402:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20406:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2040d:	48 83 c8 03          	or     $0x3,%rax
   20411:	48 89 c2             	mov    %rax,%rdx
   20414:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20418:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2041c:	48 8b 15 bd 1a 04 00 	mov    0x41abd(%rip),%rdx        # 61ee0 <mparams>
   20423:	48 8d 35 f6 1a 04 00 	lea    0x41af6(%rip),%rsi        # 61f20 <_gm_>
   2042a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   2042e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   20435:	48 01 c8             	add    %rcx,%rax
   20438:	48 31 f2             	xor    %rsi,%rdx
   2043b:	48 89 10             	mov    %rdx,(%rax)
   2043e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20442:	48 83 c0 10          	add    $0x10,%rax
   20446:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   2044d:	48 8b 05 f4 1a 04 00 	mov    0x41af4(%rip),%rax        # 61f48 <_gm_+0x28>
   20454:	48 89 c6             	mov    %rax,%rsi
   20457:	48 8d 3d c2 1a 04 00 	lea    0x41ac2(%rip),%rdi        # 61f20 <_gm_>
   2045e:	e8 6b 97 ff ff       	call   19bce <do_check_top_chunk>
   20463:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   2046a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20471:	48 89 c6             	mov    %rax,%rsi
   20474:	48 8d 3d a5 1a 04 00 	lea    0x41aa5(%rip),%rdi        # 61f20 <_gm_>
   2047b:	e8 e6 9a ff ff       	call   19f66 <do_check_malloced_chunk>
   20480:	eb 1d                	jmp    2049f <dlmalloc+0xa78>
   20482:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   20489:	48 89 c6             	mov    %rax,%rsi
   2048c:	48 8d 3d 8d 1a 04 00 	lea    0x41a8d(%rip),%rdi        # 61f20 <_gm_>
   20493:	e8 b1 c2 ff ff       	call   1c749 <sys_alloc>
   20498:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   2049f:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   204a6:	00 
   204a7:	74 49                	je     204f2 <dlmalloc+0xacb>
   204a9:	e8 c4 11 ff ff       	call   11672 <get_heap_base>
   204ae:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   204b5:	72 36                	jb     204ed <dlmalloc+0xac6>
   204b7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   204be:	48 f7 d0             	not    %rax
   204c1:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
   204c8:	77 23                	ja     204ed <dlmalloc+0xac6>
   204ca:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   204d1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   204d8:	48 01 d0             	add    %rdx,%rax
   204db:	48 89 c3             	mov    %rax,%rbx
   204de:	bf 00 00 00 00       	mov    $0x0,%edi
   204e3:	e8 3c 8e ff ff       	call   19324 <sbrk>
   204e8:	48 39 c3             	cmp    %rax,%rbx
   204eb:	76 05                	jbe    204f2 <dlmalloc+0xacb>
   204ed:	e8 a9 15 01 00       	call   31a9b <abort>
   204f2:	8b 05 98 1d 04 00    	mov    0x41d98(%rip),%eax        # 62290 <_gm_+0x370>
   204f8:	83 e0 02             	and    $0x2,%eax
   204fb:	85 c0                	test   %eax,%eax
   204fd:	74 0b                	je     2050a <dlmalloc+0xae3>
   204ff:	b8 00 00 00 00       	mov    $0x0,%eax
   20504:	89 05 8a 1d 04 00    	mov    %eax,0x41d8a(%rip)        # 62294 <_gm_+0x374>
   2050a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20511:	eb 05                	jmp    20518 <dlmalloc+0xaf1>
   20513:	b8 00 00 00 00       	mov    $0x0,%eax
   20518:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   2051f:	5b                   	pop    %rbx
   20520:	5d                   	pop    %rbp
   20521:	c3                   	ret    

0000000000020522 <dlfree>:
   20522:	f3 0f 1e fa          	endbr64 
   20526:	55                   	push   %rbp
   20527:	48 89 e5             	mov    %rsp,%rbp
   2052a:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   20531:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   20538:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
   2053f:	00 
   20540:	0f 84 ff 14 00 00    	je     21a45 <dlfree+0x1523>
   20546:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   2054d:	48 83 e8 10          	sub    $0x10,%rax
   20551:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   20558:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   2055f:	48 8b 40 08          	mov    0x8(%rax),%rax
   20563:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20567:	48 89 c2             	mov    %rax,%rdx
   2056a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20571:	48 01 d0             	add    %rdx,%rax
   20574:	48 8b 10             	mov    (%rax),%rdx
   20577:	48 8b 05 62 19 04 00 	mov    0x41962(%rip),%rax        # 61ee0 <mparams>
   2057e:	48 31 d0             	xor    %rdx,%rax
   20581:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   20588:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2058f:	48 8b 50 40          	mov    0x40(%rax),%rdx
   20593:	48 8b 05 46 19 04 00 	mov    0x41946(%rip),%rax        # 61ee0 <mparams>
   2059a:	48 39 c2             	cmp    %rax,%rdx
   2059d:	74 05                	je     205a4 <dlfree+0x82>
   2059f:	e8 f7 14 01 00       	call   31a9b <abort>
   205a4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   205ab:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   205b1:	83 e0 02             	and    $0x2,%eax
   205b4:	85 c0                	test   %eax,%eax
   205b6:	74 36                	je     205ee <dlfree+0xcc>
   205b8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   205bf:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   205c6:	b8 01 00 00 00       	mov    $0x1,%eax
   205cb:	87 02                	xchg   %eax,(%rdx)
   205cd:	85 c0                	test   %eax,%eax
   205cf:	74 1d                	je     205ee <dlfree+0xcc>
   205d1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   205d8:	48 05 74 03 00 00    	add    $0x374,%rax
   205de:	48 89 c7             	mov    %rax,%rdi
   205e1:	e8 a4 92 ff ff       	call   1988a <spin_acquire_lock>
   205e6:	85 c0                	test   %eax,%eax
   205e8:	0f 85 57 14 00 00    	jne    21a45 <dlfree+0x1523>
   205ee:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   205f5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   205fc:	48 89 d6             	mov    %rdx,%rsi
   205ff:	48 89 c7             	mov    %rax,%rdi
   20602:	e8 10 97 ff ff       	call   19d17 <do_check_inuse_chunk>
   20607:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2060e:	48 8b 40 18          	mov    0x18(%rax),%rax
   20612:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   20619:	0f 93 c0             	setae  %al
   2061c:	0f b6 c0             	movzbl %al,%eax
   2061f:	48 85 c0             	test   %rax,%rax
   20622:	0f 84 e8 13 00 00    	je     21a10 <dlfree+0x14ee>
   20628:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   2062f:	48 8b 40 08          	mov    0x8(%rax),%rax
   20633:	83 e0 03             	and    $0x3,%eax
   20636:	48 83 f8 01          	cmp    $0x1,%rax
   2063a:	0f 95 c0             	setne  %al
   2063d:	0f b6 c0             	movzbl %al,%eax
   20640:	48 85 c0             	test   %rax,%rax
   20643:	0f 84 c7 13 00 00    	je     21a10 <dlfree+0x14ee>
   20649:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20650:	48 8b 40 08          	mov    0x8(%rax),%rax
   20654:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20658:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   2065f:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   20666:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   2066d:	48 01 d0             	add    %rdx,%rax
   20670:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   20677:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   2067e:	48 8b 40 08          	mov    0x8(%rax),%rax
   20682:	83 e0 01             	and    $0x1,%eax
   20685:	48 85 c0             	test   %rax,%rax
   20688:	0f 85 3a 07 00 00    	jne    20dc8 <dlfree+0x8a6>
   2068e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20695:	48 8b 00             	mov    (%rax),%rax
   20698:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   2069f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   206a6:	48 8b 40 08          	mov    0x8(%rax),%rax
   206aa:	83 e0 03             	and    $0x3,%eax
   206ad:	48 85 c0             	test   %rax,%rax
   206b0:	75 21                	jne    206d3 <dlfree+0x1b1>
   206b2:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   206b9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   206c0:	48 01 d0             	add    %rdx,%rax
   206c3:	48 83 c0 20          	add    $0x20,%rax
   206c7:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   206ce:	e9 4a 13 00 00       	jmp    21a1d <dlfree+0x14fb>
   206d3:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   206da:	48 f7 d8             	neg    %rax
   206dd:	48 89 c2             	mov    %rax,%rdx
   206e0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   206e7:	48 01 d0             	add    %rdx,%rax
   206ea:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   206f1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   206f8:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   206ff:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   20706:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   2070d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20714:	48 8b 40 18          	mov    0x18(%rax),%rax
   20718:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   2071f:	0f 93 c0             	setae  %al
   20722:	0f b6 c0             	movzbl %al,%eax
   20725:	48 85 c0             	test   %rax,%rax
   20728:	0f 84 e5 12 00 00    	je     21a13 <dlfree+0x14f1>
   2072e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20735:	48 8b 40 20          	mov    0x20(%rax),%rax
   20739:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   20740:	0f 84 06 06 00 00    	je     20d4c <dlfree+0x82a>
   20746:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   2074d:	48 c1 e8 03          	shr    $0x3,%rax
   20751:	48 83 f8 1f          	cmp    $0x1f,%rax
   20755:	0f 87 f9 01 00 00    	ja     20954 <dlfree+0x432>
   2075b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20762:	48 8b 40 10          	mov    0x10(%rax),%rax
   20766:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   2076d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20774:	48 8b 40 18          	mov    0x18(%rax),%rax
   20778:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2077f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   20786:	48 c1 e8 03          	shr    $0x3,%rax
   2078a:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
   20790:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20797:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   2079e:	75 05                	jne    207a5 <dlfree+0x283>
   207a0:	e8 f6 12 01 00       	call   31a9b <abort>
   207a5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   207ac:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   207b3:	75 05                	jne    207ba <dlfree+0x298>
   207b5:	e8 e1 12 01 00       	call   31a9b <abort>
   207ba:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   207c1:	48 8b 40 08          	mov    0x8(%rax),%rax
   207c5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   207c9:	48 89 c2             	mov    %rax,%rdx
   207cc:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   207d2:	c1 e0 03             	shl    $0x3,%eax
   207d5:	89 c0                	mov    %eax,%eax
   207d7:	48 39 c2             	cmp    %rax,%rdx
   207da:	74 05                	je     207e1 <dlfree+0x2bf>
   207dc:	e8 ba 12 01 00       	call   31a9b <abort>
   207e1:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   207e7:	01 c0                	add    %eax,%eax
   207e9:	89 c0                	mov    %eax,%eax
   207eb:	48 83 c0 08          	add    $0x8,%rax
   207ef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   207f6:	00 
   207f7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   207fe:	48 01 d0             	add    %rdx,%rax
   20801:	48 83 c0 08          	add    $0x8,%rax
   20805:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   2080c:	0f 94 c0             	sete   %al
   2080f:	0f b6 c0             	movzbl %al,%eax
   20812:	48 85 c0             	test   %rax,%rax
   20815:	75 4e                	jne    20865 <dlfree+0x343>
   20817:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2081e:	48 8b 40 18          	mov    0x18(%rax),%rax
   20822:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   20829:	0f 93 c0             	setae  %al
   2082c:	0f b6 c0             	movzbl %al,%eax
   2082f:	48 85 c0             	test   %rax,%rax
   20832:	74 24                	je     20858 <dlfree+0x336>
   20834:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2083b:	48 8b 40 18          	mov    0x18(%rax),%rax
   2083f:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   20846:	0f 94 c0             	sete   %al
   20849:	0f b6 c0             	movzbl %al,%eax
   2084c:	48 85 c0             	test   %rax,%rax
   2084f:	74 07                	je     20858 <dlfree+0x336>
   20851:	b8 01 00 00 00       	mov    $0x1,%eax
   20856:	eb 05                	jmp    2085d <dlfree+0x33b>
   20858:	b8 00 00 00 00       	mov    $0x0,%eax
   2085d:	85 c0                	test   %eax,%eax
   2085f:	0f 84 ea 00 00 00    	je     2094f <dlfree+0x42d>
   20865:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2086c:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   20873:	75 2c                	jne    208a1 <dlfree+0x37f>
   20875:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2087c:	8b 10                	mov    (%rax),%edx
   2087e:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   20884:	be 01 00 00 00       	mov    $0x1,%esi
   20889:	89 c1                	mov    %eax,%ecx
   2088b:	d3 e6                	shl    %cl,%esi
   2088d:	89 f0                	mov    %esi,%eax
   2088f:	f7 d0                	not    %eax
   20891:	21 c2                	and    %eax,%edx
   20893:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2089a:	89 10                	mov    %edx,(%rax)
   2089c:	e9 27 05 00 00       	jmp    20dc8 <dlfree+0x8a6>
   208a1:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   208a7:	01 c0                	add    %eax,%eax
   208a9:	89 c0                	mov    %eax,%eax
   208ab:	48 83 c0 08          	add    $0x8,%rax
   208af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   208b6:	00 
   208b7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   208be:	48 01 d0             	add    %rdx,%rax
   208c1:	48 83 c0 08          	add    $0x8,%rax
   208c5:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   208cc:	0f 94 c0             	sete   %al
   208cf:	0f b6 c0             	movzbl %al,%eax
   208d2:	48 85 c0             	test   %rax,%rax
   208d5:	75 4a                	jne    20921 <dlfree+0x3ff>
   208d7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   208de:	48 8b 40 18          	mov    0x18(%rax),%rax
   208e2:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   208e9:	0f 93 c0             	setae  %al
   208ec:	0f b6 c0             	movzbl %al,%eax
   208ef:	48 85 c0             	test   %rax,%rax
   208f2:	74 24                	je     20918 <dlfree+0x3f6>
   208f4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   208fb:	48 8b 40 10          	mov    0x10(%rax),%rax
   208ff:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   20906:	0f 94 c0             	sete   %al
   20909:	0f b6 c0             	movzbl %al,%eax
   2090c:	48 85 c0             	test   %rax,%rax
   2090f:	74 07                	je     20918 <dlfree+0x3f6>
   20911:	b8 01 00 00 00       	mov    $0x1,%eax
   20916:	eb 05                	jmp    2091d <dlfree+0x3fb>
   20918:	b8 00 00 00 00       	mov    $0x0,%eax
   2091d:	85 c0                	test   %eax,%eax
   2091f:	74 29                	je     2094a <dlfree+0x428>
   20921:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   20928:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   2092f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   20933:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2093a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   20941:	48 89 50 10          	mov    %rdx,0x10(%rax)
   20945:	e9 7e 04 00 00       	jmp    20dc8 <dlfree+0x8a6>
   2094a:	e8 4c 11 01 00       	call   31a9b <abort>
   2094f:	e8 47 11 01 00       	call   31a9b <abort>
   20954:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   2095b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   20962:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20969:	48 8b 40 30          	mov    0x30(%rax),%rax
   2096d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   20974:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   2097b:	48 8b 40 18          	mov    0x18(%rax),%rax
   2097f:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   20986:	0f 84 b9 00 00 00    	je     20a45 <dlfree+0x523>
   2098c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20993:	48 8b 40 10          	mov    0x10(%rax),%rax
   20997:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   2099e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   209a5:	48 8b 40 18          	mov    0x18(%rax),%rax
   209a9:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   209b0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   209b7:	48 8b 40 18          	mov    0x18(%rax),%rax
   209bb:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   209c2:	0f 93 c0             	setae  %al
   209c5:	0f b6 c0             	movzbl %al,%eax
   209c8:	48 85 c0             	test   %rax,%rax
   209cb:	74 24                	je     209f1 <dlfree+0x4cf>
   209cd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   209d4:	48 8b 40 18          	mov    0x18(%rax),%rax
   209d8:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   209df:	0f 94 c0             	sete   %al
   209e2:	0f b6 c0             	movzbl %al,%eax
   209e5:	48 85 c0             	test   %rax,%rax
   209e8:	74 07                	je     209f1 <dlfree+0x4cf>
   209ea:	b8 01 00 00 00       	mov    $0x1,%eax
   209ef:	eb 05                	jmp    209f6 <dlfree+0x4d4>
   209f1:	b8 00 00 00 00       	mov    $0x0,%eax
   209f6:	85 c0                	test   %eax,%eax
   209f8:	74 46                	je     20a40 <dlfree+0x51e>
   209fa:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20a01:	48 8b 40 10          	mov    0x10(%rax),%rax
   20a05:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   20a0c:	0f 94 c0             	sete   %al
   20a0f:	0f b6 c0             	movzbl %al,%eax
   20a12:	48 85 c0             	test   %rax,%rax
   20a15:	74 29                	je     20a40 <dlfree+0x51e>
   20a17:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   20a1e:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20a25:	48 89 50 18          	mov    %rdx,0x18(%rax)
   20a29:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20a30:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   20a37:	48 89 50 10          	mov    %rdx,0x10(%rax)
   20a3b:	e9 f8 00 00 00       	jmp    20b38 <dlfree+0x616>
   20a40:	e8 56 10 01 00       	call   31a9b <abort>
   20a45:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20a4c:	48 83 c0 28          	add    $0x28,%rax
   20a50:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   20a57:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   20a5e:	48 8b 00             	mov    (%rax),%rax
   20a61:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   20a68:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   20a6f:	00 
   20a70:	75 52                	jne    20ac4 <dlfree+0x5a2>
   20a72:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20a79:	48 83 c0 20          	add    $0x20,%rax
   20a7d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   20a84:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   20a8b:	48 8b 00             	mov    (%rax),%rax
   20a8e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   20a95:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   20a9c:	00 
   20a9d:	0f 84 95 00 00 00    	je     20b38 <dlfree+0x616>
   20aa3:	eb 1f                	jmp    20ac4 <dlfree+0x5a2>
   20aa5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   20aac:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   20ab3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   20aba:	48 8b 00             	mov    (%rax),%rax
   20abd:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   20ac4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20acb:	48 83 c0 28          	add    $0x28,%rax
   20acf:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   20ad6:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   20add:	48 8b 00             	mov    (%rax),%rax
   20ae0:	48 85 c0             	test   %rax,%rax
   20ae3:	75 c0                	jne    20aa5 <dlfree+0x583>
   20ae5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20aec:	48 83 c0 20          	add    $0x20,%rax
   20af0:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   20af7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   20afe:	48 8b 00             	mov    (%rax),%rax
   20b01:	48 85 c0             	test   %rax,%rax
   20b04:	75 9f                	jne    20aa5 <dlfree+0x583>
   20b06:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20b0d:	48 8b 40 18          	mov    0x18(%rax),%rax
   20b11:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
   20b18:	0f 93 c0             	setae  %al
   20b1b:	0f b6 c0             	movzbl %al,%eax
   20b1e:	48 85 c0             	test   %rax,%rax
   20b21:	74 10                	je     20b33 <dlfree+0x611>
   20b23:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   20b2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   20b31:	eb 05                	jmp    20b38 <dlfree+0x616>
   20b33:	e8 63 0f 01 00       	call   31a9b <abort>
   20b38:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   20b3f:	00 
   20b40:	0f 84 82 02 00 00    	je     20dc8 <dlfree+0x8a6>
   20b46:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20b4d:	8b 40 38             	mov    0x38(%rax),%eax
   20b50:	89 c0                	mov    %eax,%eax
   20b52:	48 83 c0 4a          	add    $0x4a,%rax
   20b56:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20b5d:	00 
   20b5e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20b65:	48 01 d0             	add    %rdx,%rax
   20b68:	48 83 c0 08          	add    $0x8,%rax
   20b6c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   20b73:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   20b7a:	48 8b 00             	mov    (%rax),%rax
   20b7d:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   20b84:	75 53                	jne    20bd9 <dlfree+0x6b7>
   20b86:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   20b8d:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20b94:	48 89 10             	mov    %rdx,(%rax)
   20b97:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   20b9e:	48 8b 00             	mov    (%rax),%rax
   20ba1:	48 85 c0             	test   %rax,%rax
   20ba4:	0f 85 8d 00 00 00    	jne    20c37 <dlfree+0x715>
   20baa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20bb1:	8b 50 04             	mov    0x4(%rax),%edx
   20bb4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20bbb:	8b 40 38             	mov    0x38(%rax),%eax
   20bbe:	be 01 00 00 00       	mov    $0x1,%esi
   20bc3:	89 c1                	mov    %eax,%ecx
   20bc5:	d3 e6                	shl    %cl,%esi
   20bc7:	89 f0                	mov    %esi,%eax
   20bc9:	f7 d0                	not    %eax
   20bcb:	21 c2                	and    %eax,%edx
   20bcd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20bd4:	89 50 04             	mov    %edx,0x4(%rax)
   20bd7:	eb 5e                	jmp    20c37 <dlfree+0x715>
   20bd9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20be0:	48 8b 40 18          	mov    0x18(%rax),%rax
   20be4:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   20beb:	0f 93 c0             	setae  %al
   20bee:	0f b6 c0             	movzbl %al,%eax
   20bf1:	48 85 c0             	test   %rax,%rax
   20bf4:	74 3c                	je     20c32 <dlfree+0x710>
   20bf6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20bfd:	48 8b 40 20          	mov    0x20(%rax),%rax
   20c01:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   20c08:	75 14                	jne    20c1e <dlfree+0x6fc>
   20c0a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20c11:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20c18:	48 89 50 20          	mov    %rdx,0x20(%rax)
   20c1c:	eb 19                	jmp    20c37 <dlfree+0x715>
   20c1e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20c25:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20c2c:	48 89 50 28          	mov    %rdx,0x28(%rax)
   20c30:	eb 05                	jmp    20c37 <dlfree+0x715>
   20c32:	e8 64 0e 01 00       	call   31a9b <abort>
   20c37:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   20c3e:	00 
   20c3f:	0f 84 83 01 00 00    	je     20dc8 <dlfree+0x8a6>
   20c45:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20c4c:	48 8b 40 18          	mov    0x18(%rax),%rax
   20c50:	48 39 85 d8 fe ff ff 	cmp    %rax,-0x128(%rbp)
   20c57:	0f 93 c0             	setae  %al
   20c5a:	0f b6 c0             	movzbl %al,%eax
   20c5d:	48 85 c0             	test   %rax,%rax
   20c60:	0f 84 e1 00 00 00    	je     20d47 <dlfree+0x825>
   20c66:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20c6d:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   20c74:	48 89 50 30          	mov    %rdx,0x30(%rax)
   20c78:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20c7f:	48 8b 40 20          	mov    0x20(%rax),%rax
   20c83:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   20c8a:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   20c91:	00 
   20c92:	74 48                	je     20cdc <dlfree+0x7ba>
   20c94:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20c9b:	48 8b 40 18          	mov    0x18(%rax),%rax
   20c9f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   20ca6:	0f 93 c0             	setae  %al
   20ca9:	0f b6 c0             	movzbl %al,%eax
   20cac:	48 85 c0             	test   %rax,%rax
   20caf:	74 26                	je     20cd7 <dlfree+0x7b5>
   20cb1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20cb8:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   20cbf:	48 89 50 20          	mov    %rdx,0x20(%rax)
   20cc3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   20cca:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20cd1:	48 89 50 30          	mov    %rdx,0x30(%rax)
   20cd5:	eb 05                	jmp    20cdc <dlfree+0x7ba>
   20cd7:	e8 bf 0d 01 00       	call   31a9b <abort>
   20cdc:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20ce3:	48 8b 40 28          	mov    0x28(%rax),%rax
   20ce7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   20cee:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   20cf5:	00 
   20cf6:	0f 84 cc 00 00 00    	je     20dc8 <dlfree+0x8a6>
   20cfc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20d03:	48 8b 40 18          	mov    0x18(%rax),%rax
   20d07:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   20d0e:	0f 93 c0             	setae  %al
   20d11:	0f b6 c0             	movzbl %al,%eax
   20d14:	48 85 c0             	test   %rax,%rax
   20d17:	74 29                	je     20d42 <dlfree+0x820>
   20d19:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   20d20:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   20d27:	48 89 50 28          	mov    %rdx,0x28(%rax)
   20d2b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20d32:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   20d39:	48 89 50 30          	mov    %rdx,0x30(%rax)
   20d3d:	e9 86 00 00 00       	jmp    20dc8 <dlfree+0x8a6>
   20d42:	e8 54 0d 01 00       	call   31a9b <abort>
   20d47:	e8 4f 0d 01 00       	call   31a9b <abort>
   20d4c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20d53:	48 8b 40 08          	mov    0x8(%rax),%rax
   20d57:	83 e0 03             	and    $0x3,%eax
   20d5a:	48 83 f8 03          	cmp    $0x3,%rax
   20d5e:	75 68                	jne    20dc8 <dlfree+0x8a6>
   20d60:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20d67:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   20d6e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20d72:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20d79:	48 8b 40 08          	mov    0x8(%rax),%rax
   20d7d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   20d81:	48 89 c2             	mov    %rax,%rdx
   20d84:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20d8b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20d8f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   20d96:	48 83 c8 01          	or     $0x1,%rax
   20d9a:	48 89 c2             	mov    %rax,%rdx
   20d9d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20da4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20da8:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   20daf:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   20db6:	48 01 c2             	add    %rax,%rdx
   20db9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   20dc0:	48 89 02             	mov    %rax,(%rdx)
   20dc3:	e9 55 0c 00 00       	jmp    21a1d <dlfree+0x14fb>
   20dc8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20dcf:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
   20dd6:	0f 92 c0             	setb   %al
   20dd9:	0f b6 c0             	movzbl %al,%eax
   20ddc:	48 85 c0             	test   %rax,%rax
   20ddf:	0f 84 2b 0c 00 00    	je     21a10 <dlfree+0x14ee>
   20de5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20dec:	48 8b 40 08          	mov    0x8(%rax),%rax
   20df0:	83 e0 01             	and    $0x1,%eax
   20df3:	48 85 c0             	test   %rax,%rax
   20df6:	0f 95 c0             	setne  %al
   20df9:	0f b6 c0             	movzbl %al,%eax
   20dfc:	48 85 c0             	test   %rax,%rax
   20dff:	0f 84 0b 0c 00 00    	je     21a10 <dlfree+0x14ee>
   20e05:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20e0c:	48 8b 40 08          	mov    0x8(%rax),%rax
   20e10:	83 e0 02             	and    $0x2,%eax
   20e13:	48 85 c0             	test   %rax,%rax
   20e16:	0f 85 18 07 00 00    	jne    21534 <dlfree+0x1012>
   20e1c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e23:	48 8b 40 28          	mov    0x28(%rax),%rax
   20e27:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   20e2e:	0f 85 b7 00 00 00    	jne    20eeb <dlfree+0x9c9>
   20e34:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e3b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   20e3f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   20e46:	48 01 c2             	add    %rax,%rdx
   20e49:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e50:	48 89 50 10          	mov    %rdx,0x10(%rax)
   20e54:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e5b:	48 8b 40 10          	mov    0x10(%rax),%rax
   20e5f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   20e63:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e6a:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   20e71:	48 89 50 28          	mov    %rdx,0x28(%rax)
   20e75:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20e79:	48 83 c8 01          	or     $0x1,%rax
   20e7d:	48 89 c2             	mov    %rax,%rdx
   20e80:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20e87:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20e8b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20e92:	48 8b 40 20          	mov    0x20(%rax),%rax
   20e96:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   20e9d:	75 1e                	jne    20ebd <dlfree+0x99b>
   20e9f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20ea6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   20ead:	00 
   20eae:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20eb5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   20ebc:	00 
   20ebd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20ec4:	48 8b 40 30          	mov    0x30(%rax),%rax
   20ec8:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   20ecc:	0f 86 47 0b 00 00    	jbe    21a19 <dlfree+0x14f7>
   20ed2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20ed9:	be 00 00 00 00       	mov    $0x0,%esi
   20ede:	48 89 c7             	mov    %rax,%rdi
   20ee1:	e8 bb c2 ff ff       	call   1d1a1 <sys_trim>
   20ee6:	e9 2e 0b 00 00       	jmp    21a19 <dlfree+0x14f7>
   20eeb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20ef2:	48 8b 40 20          	mov    0x20(%rax),%rax
   20ef6:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   20efd:	75 71                	jne    20f70 <dlfree+0xa4e>
   20eff:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20f06:	48 8b 50 08          	mov    0x8(%rax),%rdx
   20f0a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   20f11:	48 01 c2             	add    %rax,%rdx
   20f14:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20f1b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20f1f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20f26:	48 8b 40 08          	mov    0x8(%rax),%rax
   20f2a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   20f2e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20f35:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   20f3c:	48 89 50 20          	mov    %rdx,0x20(%rax)
   20f40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20f44:	48 83 c8 01          	or     $0x1,%rax
   20f48:	48 89 c2             	mov    %rax,%rdx
   20f4b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   20f52:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20f56:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   20f5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20f61:	48 01 c2             	add    %rax,%rdx
   20f64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20f68:	48 89 02             	mov    %rax,(%rdx)
   20f6b:	e9 ad 0a 00 00       	jmp    21a1d <dlfree+0x14fb>
   20f70:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20f77:	48 8b 40 08          	mov    0x8(%rax),%rax
   20f7b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20f7f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   20f83:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20f87:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   20f8e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20f92:	48 c1 e8 03          	shr    $0x3,%rax
   20f96:	48 83 f8 1f          	cmp    $0x1f,%rax
   20f9a:	0f 87 c6 01 00 00    	ja     21166 <dlfree+0xc44>
   20fa0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20fa7:	48 8b 40 10          	mov    0x10(%rax),%rax
   20fab:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   20faf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20fb6:	48 8b 40 18          	mov    0x18(%rax),%rax
   20fba:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   20fbe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20fc2:	48 c1 e8 03          	shr    $0x3,%rax
   20fc6:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
   20fcc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20fd3:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   20fd7:	75 05                	jne    20fde <dlfree+0xabc>
   20fd9:	e8 bd 0a 01 00       	call   31a9b <abort>
   20fde:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20fe5:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   20fe9:	75 05                	jne    20ff0 <dlfree+0xace>
   20feb:	e8 ab 0a 01 00       	call   31a9b <abort>
   20ff0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   20ff7:	48 8b 40 08          	mov    0x8(%rax),%rax
   20ffb:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20fff:	48 89 c2             	mov    %rax,%rdx
   21002:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   21008:	c1 e0 03             	shl    $0x3,%eax
   2100b:	89 c0                	mov    %eax,%eax
   2100d:	48 39 c2             	cmp    %rax,%rdx
   21010:	74 05                	je     21017 <dlfree+0xaf5>
   21012:	e8 84 0a 01 00       	call   31a9b <abort>
   21017:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   2101d:	01 c0                	add    %eax,%eax
   2101f:	89 c0                	mov    %eax,%eax
   21021:	48 83 c0 08          	add    $0x8,%rax
   21025:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2102c:	00 
   2102d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21034:	48 01 d0             	add    %rdx,%rax
   21037:	48 83 c0 08          	add    $0x8,%rax
   2103b:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   2103f:	0f 94 c0             	sete   %al
   21042:	0f b6 c0             	movzbl %al,%eax
   21045:	48 85 c0             	test   %rax,%rax
   21048:	75 48                	jne    21092 <dlfree+0xb70>
   2104a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21051:	48 8b 40 18          	mov    0x18(%rax),%rax
   21055:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   21059:	0f 93 c0             	setae  %al
   2105c:	0f b6 c0             	movzbl %al,%eax
   2105f:	48 85 c0             	test   %rax,%rax
   21062:	74 21                	je     21085 <dlfree+0xb63>
   21064:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21068:	48 8b 40 18          	mov    0x18(%rax),%rax
   2106c:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   21073:	0f 94 c0             	sete   %al
   21076:	0f b6 c0             	movzbl %al,%eax
   21079:	48 85 c0             	test   %rax,%rax
   2107c:	74 07                	je     21085 <dlfree+0xb63>
   2107e:	b8 01 00 00 00       	mov    $0x1,%eax
   21083:	eb 05                	jmp    2108a <dlfree+0xb68>
   21085:	b8 00 00 00 00       	mov    $0x0,%eax
   2108a:	85 c0                	test   %eax,%eax
   2108c:	0f 84 cf 00 00 00    	je     21161 <dlfree+0xc3f>
   21092:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21096:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   2109a:	75 2c                	jne    210c8 <dlfree+0xba6>
   2109c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   210a3:	8b 10                	mov    (%rax),%edx
   210a5:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   210ab:	be 01 00 00 00       	mov    $0x1,%esi
   210b0:	89 c1                	mov    %eax,%ecx
   210b2:	d3 e6                	shl    %cl,%esi
   210b4:	89 f0                	mov    %esi,%eax
   210b6:	f7 d0                	not    %eax
   210b8:	21 c2                	and    %eax,%edx
   210ba:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   210c1:	89 10                	mov    %edx,(%rax)
   210c3:	e9 0d 04 00 00       	jmp    214d5 <dlfree+0xfb3>
   210c8:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   210ce:	01 c0                	add    %eax,%eax
   210d0:	89 c0                	mov    %eax,%eax
   210d2:	48 83 c0 08          	add    $0x8,%rax
   210d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   210dd:	00 
   210de:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   210e5:	48 01 d0             	add    %rdx,%rax
   210e8:	48 83 c0 08          	add    $0x8,%rax
   210ec:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   210f0:	0f 94 c0             	sete   %al
   210f3:	0f b6 c0             	movzbl %al,%eax
   210f6:	48 85 c0             	test   %rax,%rax
   210f9:	75 44                	jne    2113f <dlfree+0xc1d>
   210fb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21102:	48 8b 40 18          	mov    0x18(%rax),%rax
   21106:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   2110a:	0f 93 c0             	setae  %al
   2110d:	0f b6 c0             	movzbl %al,%eax
   21110:	48 85 c0             	test   %rax,%rax
   21113:	74 21                	je     21136 <dlfree+0xc14>
   21115:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21119:	48 8b 40 10          	mov    0x10(%rax),%rax
   2111d:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   21124:	0f 94 c0             	sete   %al
   21127:	0f b6 c0             	movzbl %al,%eax
   2112a:	48 85 c0             	test   %rax,%rax
   2112d:	74 07                	je     21136 <dlfree+0xc14>
   2112f:	b8 01 00 00 00       	mov    $0x1,%eax
   21134:	eb 05                	jmp    2113b <dlfree+0xc19>
   21136:	b8 00 00 00 00       	mov    $0x0,%eax
   2113b:	85 c0                	test   %eax,%eax
   2113d:	74 1d                	je     2115c <dlfree+0xc3a>
   2113f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21143:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   21147:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2114b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2114f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   21153:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21157:	e9 79 03 00 00       	jmp    214d5 <dlfree+0xfb3>
   2115c:	e8 3a 09 01 00       	call   31a9b <abort>
   21161:	e8 35 09 01 00       	call   31a9b <abort>
   21166:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2116d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   21171:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21175:	48 8b 40 30          	mov    0x30(%rax),%rax
   21179:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2117d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21181:	48 8b 40 18          	mov    0x18(%rax),%rax
   21185:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   21189:	0f 84 9e 00 00 00    	je     2122d <dlfree+0xd0b>
   2118f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21193:	48 8b 40 10          	mov    0x10(%rax),%rax
   21197:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2119b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2119f:	48 8b 40 18          	mov    0x18(%rax),%rax
   211a3:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   211aa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   211b1:	48 8b 40 18          	mov    0x18(%rax),%rax
   211b5:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   211b9:	0f 93 c0             	setae  %al
   211bc:	0f b6 c0             	movzbl %al,%eax
   211bf:	48 85 c0             	test   %rax,%rax
   211c2:	74 1e                	je     211e2 <dlfree+0xcc0>
   211c4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   211c8:	48 8b 40 18          	mov    0x18(%rax),%rax
   211cc:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   211d0:	0f 94 c0             	sete   %al
   211d3:	0f b6 c0             	movzbl %al,%eax
   211d6:	48 85 c0             	test   %rax,%rax
   211d9:	74 07                	je     211e2 <dlfree+0xcc0>
   211db:	b8 01 00 00 00       	mov    $0x1,%eax
   211e0:	eb 05                	jmp    211e7 <dlfree+0xcc5>
   211e2:	b8 00 00 00 00       	mov    $0x0,%eax
   211e7:	85 c0                	test   %eax,%eax
   211e9:	74 3d                	je     21228 <dlfree+0xd06>
   211eb:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   211f2:	48 8b 40 10          	mov    0x10(%rax),%rax
   211f6:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   211fa:	0f 94 c0             	sete   %al
   211fd:	0f b6 c0             	movzbl %al,%eax
   21200:	48 85 c0             	test   %rax,%rax
   21203:	74 23                	je     21228 <dlfree+0xd06>
   21205:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   21209:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   21210:	48 89 50 18          	mov    %rdx,0x18(%rax)
   21214:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2121b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2121f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21223:	e9 f2 00 00 00       	jmp    2131a <dlfree+0xdf8>
   21228:	e8 6e 08 01 00       	call   31a9b <abort>
   2122d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21231:	48 83 c0 28          	add    $0x28,%rax
   21235:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   2123c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21243:	48 8b 00             	mov    (%rax),%rax
   21246:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   2124d:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   21254:	00 
   21255:	75 4f                	jne    212a6 <dlfree+0xd84>
   21257:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2125b:	48 83 c0 20          	add    $0x20,%rax
   2125f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   21266:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2126d:	48 8b 00             	mov    (%rax),%rax
   21270:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   21277:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   2127e:	00 
   2127f:	0f 84 95 00 00 00    	je     2131a <dlfree+0xdf8>
   21285:	eb 1f                	jmp    212a6 <dlfree+0xd84>
   21287:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2128e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   21295:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2129c:	48 8b 00             	mov    (%rax),%rax
   2129f:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   212a6:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   212ad:	48 83 c0 28          	add    $0x28,%rax
   212b1:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   212b8:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   212bf:	48 8b 00             	mov    (%rax),%rax
   212c2:	48 85 c0             	test   %rax,%rax
   212c5:	75 c0                	jne    21287 <dlfree+0xd65>
   212c7:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   212ce:	48 83 c0 20          	add    $0x20,%rax
   212d2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   212d9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   212e0:	48 8b 00             	mov    (%rax),%rax
   212e3:	48 85 c0             	test   %rax,%rax
   212e6:	75 9f                	jne    21287 <dlfree+0xd65>
   212e8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   212ef:	48 8b 40 18          	mov    0x18(%rax),%rax
   212f3:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   212fa:	0f 93 c0             	setae  %al
   212fd:	0f b6 c0             	movzbl %al,%eax
   21300:	48 85 c0             	test   %rax,%rax
   21303:	74 10                	je     21315 <dlfree+0xdf3>
   21305:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2130c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21313:	eb 05                	jmp    2131a <dlfree+0xdf8>
   21315:	e8 81 07 01 00       	call   31a9b <abort>
   2131a:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2131f:	0f 84 b0 01 00 00    	je     214d5 <dlfree+0xfb3>
   21325:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21329:	8b 40 38             	mov    0x38(%rax),%eax
   2132c:	89 c0                	mov    %eax,%eax
   2132e:	48 83 c0 4a          	add    $0x4a,%rax
   21332:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21339:	00 
   2133a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21341:	48 01 d0             	add    %rdx,%rax
   21344:	48 83 c0 08          	add    $0x8,%rax
   21348:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2134c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   21350:	48 8b 00             	mov    (%rax),%rax
   21353:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   21357:	75 46                	jne    2139f <dlfree+0xe7d>
   21359:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2135d:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   21364:	48 89 10             	mov    %rdx,(%rax)
   21367:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2136b:	48 8b 00             	mov    (%rax),%rax
   2136e:	48 85 c0             	test   %rax,%rax
   21371:	75 7b                	jne    213ee <dlfree+0xecc>
   21373:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2137a:	8b 50 04             	mov    0x4(%rax),%edx
   2137d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21381:	8b 40 38             	mov    0x38(%rax),%eax
   21384:	be 01 00 00 00       	mov    $0x1,%esi
   21389:	89 c1                	mov    %eax,%ecx
   2138b:	d3 e6                	shl    %cl,%esi
   2138d:	89 f0                	mov    %esi,%eax
   2138f:	f7 d0                	not    %eax
   21391:	21 c2                	and    %eax,%edx
   21393:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2139a:	89 50 04             	mov    %edx,0x4(%rax)
   2139d:	eb 4f                	jmp    213ee <dlfree+0xecc>
   2139f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   213a6:	48 8b 40 18          	mov    0x18(%rax),%rax
   213aa:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   213ae:	0f 93 c0             	setae  %al
   213b1:	0f b6 c0             	movzbl %al,%eax
   213b4:	48 85 c0             	test   %rax,%rax
   213b7:	74 30                	je     213e9 <dlfree+0xec7>
   213b9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   213bd:	48 8b 40 20          	mov    0x20(%rax),%rax
   213c1:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   213c5:	75 11                	jne    213d8 <dlfree+0xeb6>
   213c7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   213cb:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   213d2:	48 89 50 20          	mov    %rdx,0x20(%rax)
   213d6:	eb 16                	jmp    213ee <dlfree+0xecc>
   213d8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   213dc:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   213e3:	48 89 50 28          	mov    %rdx,0x28(%rax)
   213e7:	eb 05                	jmp    213ee <dlfree+0xecc>
   213e9:	e8 ad 06 01 00       	call   31a9b <abort>
   213ee:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   213f5:	00 
   213f6:	0f 84 d9 00 00 00    	je     214d5 <dlfree+0xfb3>
   213fc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21403:	48 8b 40 18          	mov    0x18(%rax),%rax
   21407:	48 39 85 f0 fe ff ff 	cmp    %rax,-0x110(%rbp)
   2140e:	0f 93 c0             	setae  %al
   21411:	0f b6 c0             	movzbl %al,%eax
   21414:	48 85 c0             	test   %rax,%rax
   21417:	0f 84 b3 00 00 00    	je     214d0 <dlfree+0xfae>
   2141d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   21424:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   21428:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2142c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21430:	48 8b 40 20          	mov    0x20(%rax),%rax
   21434:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   21438:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2143d:	74 3f                	je     2147e <dlfree+0xf5c>
   2143f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21446:	48 8b 40 18          	mov    0x18(%rax),%rax
   2144a:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   2144e:	0f 93 c0             	setae  %al
   21451:	0f b6 c0             	movzbl %al,%eax
   21454:	48 85 c0             	test   %rax,%rax
   21457:	74 20                	je     21479 <dlfree+0xf57>
   21459:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   21460:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   21464:	48 89 50 20          	mov    %rdx,0x20(%rax)
   21468:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2146c:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   21473:	48 89 50 30          	mov    %rdx,0x30(%rax)
   21477:	eb 05                	jmp    2147e <dlfree+0xf5c>
   21479:	e8 1d 06 01 00       	call   31a9b <abort>
   2147e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   21482:	48 8b 40 28          	mov    0x28(%rax),%rax
   21486:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2148a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2148f:	74 44                	je     214d5 <dlfree+0xfb3>
   21491:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21498:	48 8b 40 18          	mov    0x18(%rax),%rax
   2149c:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   214a0:	0f 93 c0             	setae  %al
   214a3:	0f b6 c0             	movzbl %al,%eax
   214a6:	48 85 c0             	test   %rax,%rax
   214a9:	74 20                	je     214cb <dlfree+0xfa9>
   214ab:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   214b2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   214b6:	48 89 50 28          	mov    %rdx,0x28(%rax)
   214ba:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   214be:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   214c5:	48 89 50 30          	mov    %rdx,0x30(%rax)
   214c9:	eb 0a                	jmp    214d5 <dlfree+0xfb3>
   214cb:	e8 cb 05 01 00       	call   31a9b <abort>
   214d0:	e8 c6 05 01 00       	call   31a9b <abort>
   214d5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   214dc:	48 83 c8 01          	or     $0x1,%rax
   214e0:	48 89 c2             	mov    %rax,%rdx
   214e3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   214ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
   214ee:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   214f5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   214fc:	48 01 c2             	add    %rax,%rdx
   214ff:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   21506:	48 89 02             	mov    %rax,(%rdx)
   21509:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21510:	48 8b 40 20          	mov    0x20(%rax),%rax
   21514:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   2151b:	75 68                	jne    21585 <dlfree+0x1063>
   2151d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21524:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   2152b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2152f:	e9 e9 04 00 00       	jmp    21a1d <dlfree+0x14fb>
   21534:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2153b:	48 8b 40 08          	mov    0x8(%rax),%rax
   2153f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   21543:	48 89 c2             	mov    %rax,%rdx
   21546:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2154d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21551:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   21558:	48 83 c8 01          	or     $0x1,%rax
   2155c:	48 89 c2             	mov    %rax,%rdx
   2155f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   21566:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2156a:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   21571:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   21578:	48 01 c2             	add    %rax,%rdx
   2157b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   21582:	48 89 02             	mov    %rax,(%rdx)
   21585:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   2158c:	48 c1 e8 03          	shr    $0x3,%rax
   21590:	48 83 f8 1f          	cmp    $0x1f,%rax
   21594:	0f 87 31 01 00 00    	ja     216cb <dlfree+0x11a9>
   2159a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   215a1:	48 c1 e8 03          	shr    $0x3,%rax
   215a5:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
   215ab:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   215b1:	01 c0                	add    %eax,%eax
   215b3:	89 c0                	mov    %eax,%eax
   215b5:	48 83 c0 08          	add    $0x8,%rax
   215b9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   215c0:	00 
   215c1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   215c8:	48 01 d0             	add    %rdx,%rax
   215cb:	48 83 c0 08          	add    $0x8,%rax
   215cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   215d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   215d7:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   215de:	48 83 bd d0 fe ff ff 	cmpq   $0x1f,-0x130(%rbp)
   215e5:	1f 
   215e6:	77 05                	ja     215ed <dlfree+0x10cb>
   215e8:	e8 ae 04 01 00       	call   31a9b <abort>
   215ed:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   215f4:	8b 10                	mov    (%rax),%edx
   215f6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   215fc:	be 01 00 00 00       	mov    $0x1,%esi
   21601:	89 c1                	mov    %eax,%ecx
   21603:	d3 e6                	shl    %cl,%esi
   21605:	89 f0                	mov    %esi,%eax
   21607:	21 d0                	and    %edx,%eax
   21609:	85 c0                	test   %eax,%eax
   2160b:	75 27                	jne    21634 <dlfree+0x1112>
   2160d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21614:	8b 10                	mov    (%rax),%edx
   21616:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   2161c:	be 01 00 00 00       	mov    $0x1,%esi
   21621:	89 c1                	mov    %eax,%ecx
   21623:	d3 e6                	shl    %cl,%esi
   21625:	89 f0                	mov    %esi,%eax
   21627:	09 c2                	or     %eax,%edx
   21629:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21630:	89 10                	mov    %edx,(%rax)
   21632:	eb 37                	jmp    2166b <dlfree+0x1149>
   21634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21638:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2163c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21643:	48 8b 40 18          	mov    0x18(%rax),%rax
   21647:	48 39 c2             	cmp    %rax,%rdx
   2164a:	0f 93 c0             	setae  %al
   2164d:	0f b6 c0             	movzbl %al,%eax
   21650:	48 85 c0             	test   %rax,%rax
   21653:	74 11                	je     21666 <dlfree+0x1144>
   21655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21659:	48 8b 40 10          	mov    0x10(%rax),%rax
   2165d:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   21664:	eb 05                	jmp    2166b <dlfree+0x1149>
   21666:	e8 30 04 01 00       	call   31a9b <abort>
   2166b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2166f:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   21676:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2167a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21681:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   21688:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2168c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   21693:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   2169a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2169e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   216a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   216a9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   216ad:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   216b4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   216bb:	48 89 d6             	mov    %rdx,%rsi
   216be:	48 89 c7             	mov    %rax,%rdi
   216c1:	e8 2b 87 ff ff       	call   19df1 <do_check_free_chunk>
   216c6:	e9 51 03 00 00       	jmp    21a1c <dlfree+0x14fa>
   216cb:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   216d2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   216d6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   216dd:	48 c1 e8 08          	shr    $0x8,%rax
   216e1:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
   216e7:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
   216ee:	75 0c                	jne    216fc <dlfree+0x11da>
   216f0:	c7 85 b0 fe ff ff 00 	movl   $0x0,-0x150(%rbp)
   216f7:	00 00 00 
   216fa:	eb 5d                	jmp    21759 <dlfree+0x1237>
   216fc:	81 bd bc fe ff ff ff 	cmpl   $0xffff,-0x144(%rbp)
   21703:	ff 00 00 
   21706:	76 0c                	jbe    21714 <dlfree+0x11f2>
   21708:	c7 85 b0 fe ff ff 1f 	movl   $0x1f,-0x150(%rbp)
   2170f:	00 00 00 
   21712:	eb 45                	jmp    21759 <dlfree+0x1237>
   21714:	0f bd 85 bc fe ff ff 	bsr    -0x144(%rbp),%eax
   2171b:	83 f0 1f             	xor    $0x1f,%eax
   2171e:	ba 1f 00 00 00       	mov    $0x1f,%edx
   21723:	29 c2                	sub    %eax,%edx
   21725:	89 d0                	mov    %edx,%eax
   21727:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   2172d:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   21733:	8d 34 00             	lea    (%rax,%rax,1),%esi
   21736:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   2173c:	83 c0 07             	add    $0x7,%eax
   2173f:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   21746:	89 c1                	mov    %eax,%ecx
   21748:	48 d3 ea             	shr    %cl,%rdx
   2174b:	48 89 d0             	mov    %rdx,%rax
   2174e:	83 e0 01             	and    $0x1,%eax
   21751:	01 f0                	add    %esi,%eax
   21753:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
   21759:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   2175f:	48 83 c0 4a          	add    $0x4a,%rax
   21763:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2176a:	00 
   2176b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21772:	48 01 d0             	add    %rdx,%rax
   21775:	48 83 c0 08          	add    $0x8,%rax
   21779:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2177d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21781:	8b 95 b0 fe ff ff    	mov    -0x150(%rbp),%edx
   21787:	89 50 38             	mov    %edx,0x38(%rax)
   2178a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2178e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   21795:	00 
   21796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2179a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   2179e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   217a2:	48 89 50 20          	mov    %rdx,0x20(%rax)
   217a6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   217ad:	8b 50 04             	mov    0x4(%rax),%edx
   217b0:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   217b6:	be 01 00 00 00       	mov    $0x1,%esi
   217bb:	89 c1                	mov    %eax,%ecx
   217bd:	d3 e6                	shl    %cl,%esi
   217bf:	89 f0                	mov    %esi,%eax
   217c1:	21 d0                	and    %edx,%eax
   217c3:	85 c0                	test   %eax,%eax
   217c5:	75 5f                	jne    21826 <dlfree+0x1304>
   217c7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   217ce:	8b 50 04             	mov    0x4(%rax),%edx
   217d1:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   217d7:	be 01 00 00 00       	mov    $0x1,%esi
   217dc:	89 c1                	mov    %eax,%ecx
   217de:	d3 e6                	shl    %cl,%esi
   217e0:	89 f0                	mov    %esi,%eax
   217e2:	09 c2                	or     %eax,%edx
   217e4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   217eb:	89 50 04             	mov    %edx,0x4(%rax)
   217ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   217f2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   217f6:	48 89 10             	mov    %rdx,(%rax)
   217f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   217fd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21801:	48 89 50 30          	mov    %rdx,0x30(%rax)
   21805:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21809:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2180d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   21811:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21815:	48 8b 50 18          	mov    0x18(%rax),%rdx
   21819:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2181d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21821:	e9 96 01 00 00       	jmp    219bc <dlfree+0x149a>
   21826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2182a:	48 8b 00             	mov    (%rax),%rax
   2182d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   21834:	83 bd b0 fe ff ff 1f 	cmpl   $0x1f,-0x150(%rbp)
   2183b:	74 13                	je     21850 <dlfree+0x132e>
   2183d:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   21843:	d1 e8                	shr    %eax
   21845:	ba 39 00 00 00       	mov    $0x39,%edx
   2184a:	29 c2                	sub    %eax,%edx
   2184c:	89 d0                	mov    %edx,%eax
   2184e:	eb 05                	jmp    21855 <dlfree+0x1333>
   21850:	b8 00 00 00 00       	mov    $0x0,%eax
   21855:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   2185c:	89 c1                	mov    %eax,%ecx
   2185e:	48 d3 e2             	shl    %cl,%rdx
   21861:	48 89 d0             	mov    %rdx,%rax
   21864:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   2186b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   21872:	48 8b 40 08          	mov    0x8(%rax),%rax
   21876:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2187a:	48 39 85 d0 fe ff ff 	cmp    %rax,-0x130(%rbp)
   21881:	0f 84 a2 00 00 00    	je     21929 <dlfree+0x1407>
   21887:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2188e:	48 c1 e8 3f          	shr    $0x3f,%rax
   21892:	48 83 c0 04          	add    $0x4,%rax
   21896:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2189d:	00 
   2189e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   218a5:	48 01 d0             	add    %rdx,%rax
   218a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   218ac:	48 d1 a5 18 ff ff ff 	shlq   -0xe8(%rbp)
   218b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218b7:	48 8b 00             	mov    (%rax),%rax
   218ba:	48 85 c0             	test   %rax,%rax
   218bd:	74 10                	je     218cf <dlfree+0x13ad>
   218bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218c3:	48 8b 00             	mov    (%rax),%rax
   218c6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   218cd:	eb 9c                	jmp    2186b <dlfree+0x1349>
   218cf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   218d6:	48 8b 40 18          	mov    0x18(%rax),%rax
   218da:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   218de:	0f 93 c0             	setae  %al
   218e1:	0f b6 c0             	movzbl %al,%eax
   218e4:	48 85 c0             	test   %rax,%rax
   218e7:	74 3b                	je     21924 <dlfree+0x1402>
   218e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   218f1:	48 89 10             	mov    %rdx,(%rax)
   218f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   218f8:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   218ff:	48 89 50 30          	mov    %rdx,0x30(%rax)
   21903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21907:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2190b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2190f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21913:	48 8b 50 18          	mov    0x18(%rax),%rdx
   21917:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2191b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2191f:	e9 98 00 00 00       	jmp    219bc <dlfree+0x149a>
   21924:	e8 72 01 01 00       	call   31a9b <abort>
   21929:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   21930:	48 8b 40 10          	mov    0x10(%rax),%rax
   21934:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   21938:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2193f:	48 8b 40 18          	mov    0x18(%rax),%rax
   21943:	48 39 85 10 ff ff ff 	cmp    %rax,-0xf0(%rbp)
   2194a:	0f 93 c0             	setae  %al
   2194d:	0f b6 c0             	movzbl %al,%eax
   21950:	48 85 c0             	test   %rax,%rax
   21953:	74 62                	je     219b7 <dlfree+0x1495>
   21955:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2195c:	48 8b 40 18          	mov    0x18(%rax),%rax
   21960:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   21964:	0f 93 c0             	setae  %al
   21967:	0f b6 c0             	movzbl %al,%eax
   2196a:	48 85 c0             	test   %rax,%rax
   2196d:	74 48                	je     219b7 <dlfree+0x1495>
   2196f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21973:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   21977:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2197b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2197f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   21983:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   2198a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2198e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21992:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21996:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2199a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2199e:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   219a5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   219a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   219ad:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   219b4:	00 
   219b5:	eb 05                	jmp    219bc <dlfree+0x149a>
   219b7:	e8 df 00 01 00       	call   31a9b <abort>
   219bc:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   219c3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   219ca:	48 89 d6             	mov    %rdx,%rsi
   219cd:	48 89 c7             	mov    %rax,%rdi
   219d0:	e8 1c 84 ff ff       	call   19df1 <do_check_free_chunk>
   219d5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   219dc:	48 8b 40 38          	mov    0x38(%rax),%rax
   219e0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   219e4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   219eb:	48 89 50 38          	mov    %rdx,0x38(%rax)
   219ef:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   219f6:	48 8b 40 38          	mov    0x38(%rax),%rax
   219fa:	48 85 c0             	test   %rax,%rax
   219fd:	75 1d                	jne    21a1c <dlfree+0x14fa>
   219ff:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21a06:	48 89 c7             	mov    %rax,%rdi
   21a09:	e8 0c b7 ff ff       	call   1d11a <release_unused_segments>
   21a0e:	eb 0c                	jmp    21a1c <dlfree+0x14fa>
   21a10:	90                   	nop
   21a11:	eb 01                	jmp    21a14 <dlfree+0x14f2>
   21a13:	90                   	nop
   21a14:	e8 82 00 01 00       	call   31a9b <abort>
   21a19:	90                   	nop
   21a1a:	eb 01                	jmp    21a1d <dlfree+0x14fb>
   21a1c:	90                   	nop
   21a1d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21a24:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   21a2a:	83 e0 02             	and    $0x2,%eax
   21a2d:	85 c0                	test   %eax,%eax
   21a2f:	74 14                	je     21a45 <dlfree+0x1523>
   21a31:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   21a38:	48 05 74 03 00 00    	add    $0x374,%rax
   21a3e:	ba 00 00 00 00       	mov    $0x0,%edx
   21a43:	89 10                	mov    %edx,(%rax)
   21a45:	c9                   	leave  
   21a46:	c3                   	ret    

0000000000021a47 <calloc>:
   21a47:	f3 0f 1e fa          	endbr64 
   21a4b:	55                   	push   %rbp
   21a4c:	48 89 e5             	mov    %rsp,%rbp
   21a4f:	48 83 ec 20          	sub    $0x20,%rsp
   21a53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21a57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21a5b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   21a62:	00 
   21a63:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   21a68:	74 39                	je     21aa3 <calloc+0x5c>
   21a6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21a6e:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
   21a73:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   21a77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21a7b:	48 0b 45 e0          	or     -0x20(%rbp),%rax
   21a7f:	66 b8 00 00          	mov    $0x0,%ax
   21a83:	48 85 c0             	test   %rax,%rax
   21a86:	74 1b                	je     21aa3 <calloc+0x5c>
   21a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21a8c:	ba 00 00 00 00       	mov    $0x0,%edx
   21a91:	48 f7 75 e8          	divq   -0x18(%rbp)
   21a95:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   21a99:	74 08                	je     21aa3 <calloc+0x5c>
   21a9b:	48 c7 45 f0 ff ff ff 	movq   $0xffffffffffffffff,-0x10(%rbp)
   21aa2:	ff 
   21aa3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21aa7:	48 89 c7             	mov    %rax,%rdi
   21aaa:	e8 78 df ff ff       	call   1fa27 <dlmalloc>
   21aaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21ab3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   21ab8:	74 15                	je     21acf <calloc+0x88>
   21aba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ac2:	be 00 00 00 00       	mov    $0x0,%esi
   21ac7:	48 89 c7             	mov    %rax,%rdi
   21aca:	e8 b4 1b 00 00       	call   23683 <memset>
   21acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ad3:	c9                   	leave  
   21ad4:	c3                   	ret    

0000000000021ad5 <try_realloc_chunk>:
   21ad5:	f3 0f 1e fa          	endbr64 
   21ad9:	55                   	push   %rbp
   21ada:	48 89 e5             	mov    %rsp,%rbp
   21add:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   21ae4:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
   21aeb:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
   21af2:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   21af9:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)
   21aff:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
   21b06:	00 00 00 00 
   21b0a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21b11:	48 8b 40 08          	mov    0x8(%rax),%rax
   21b15:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   21b19:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   21b20:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21b27:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   21b2e:	48 01 d0             	add    %rdx,%rax
   21b31:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   21b38:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21b3f:	48 8b 40 18          	mov    0x18(%rax),%rax
   21b43:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   21b4a:	0f 93 c0             	setae  %al
   21b4d:	0f b6 c0             	movzbl %al,%eax
   21b50:	48 85 c0             	test   %rax,%rax
   21b53:	74 24                	je     21b79 <try_realloc_chunk+0xa4>
   21b55:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21b5c:	48 8b 40 08          	mov    0x8(%rax),%rax
   21b60:	83 e0 03             	and    $0x3,%eax
   21b63:	48 83 f8 01          	cmp    $0x1,%rax
   21b67:	0f 95 c0             	setne  %al
   21b6a:	0f b6 c0             	movzbl %al,%eax
   21b6d:	48 85 c0             	test   %rax,%rax
   21b70:	74 07                	je     21b79 <try_realloc_chunk+0xa4>
   21b72:	b8 01 00 00 00       	mov    $0x1,%eax
   21b77:	eb 05                	jmp    21b7e <try_realloc_chunk+0xa9>
   21b79:	b8 00 00 00 00       	mov    $0x0,%eax
   21b7e:	85 c0                	test   %eax,%eax
   21b80:	74 20                	je     21ba2 <try_realloc_chunk+0xcd>
   21b82:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21b89:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
   21b90:	0f 92 c0             	setb   %al
   21b93:	0f b6 c0             	movzbl %al,%eax
   21b96:	48 85 c0             	test   %rax,%rax
   21b99:	74 07                	je     21ba2 <try_realloc_chunk+0xcd>
   21b9b:	b8 01 00 00 00       	mov    $0x1,%eax
   21ba0:	eb 05                	jmp    21ba7 <try_realloc_chunk+0xd2>
   21ba2:	b8 00 00 00 00       	mov    $0x0,%eax
   21ba7:	85 c0                	test   %eax,%eax
   21ba9:	0f 84 ec 0c 00 00    	je     2289b <try_realloc_chunk+0xdc6>
   21baf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   21bb6:	48 8b 40 08          	mov    0x8(%rax),%rax
   21bba:	83 e0 01             	and    $0x1,%eax
   21bbd:	48 85 c0             	test   %rax,%rax
   21bc0:	0f 95 c0             	setne  %al
   21bc3:	0f b6 c0             	movzbl %al,%eax
   21bc6:	48 85 c0             	test   %rax,%rax
   21bc9:	0f 84 cc 0c 00 00    	je     2289b <try_realloc_chunk+0xdc6>
   21bcf:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21bd6:	48 8b 40 08          	mov    0x8(%rax),%rax
   21bda:	83 e0 03             	and    $0x3,%eax
   21bdd:	48 85 c0             	test   %rax,%rax
   21be0:	75 2f                	jne    21c11 <try_realloc_chunk+0x13c>
   21be2:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
   21be8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   21bef:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   21bf6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21bfd:	48 89 c7             	mov    %rax,%rdi
   21c00:	e8 c2 94 ff ff       	call   1b0c7 <mmap_resize>
   21c05:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   21c0c:	e9 8f 0c 00 00       	jmp    228a0 <try_realloc_chunk+0xdcb>
   21c11:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   21c18:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
   21c1f:	0f 82 55 01 00 00    	jb     21d7a <try_realloc_chunk+0x2a5>
   21c25:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   21c2c:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   21c33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   21c37:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
   21c3c:	0f 86 25 01 00 00    	jbe    21d67 <try_realloc_chunk+0x292>
   21c42:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21c49:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21c50:	48 01 d0             	add    %rdx,%rax
   21c53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21c57:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21c5e:	48 8b 40 08          	mov    0x8(%rax),%rax
   21c62:	83 e0 01             	and    $0x1,%eax
   21c65:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   21c6c:	48 83 c8 02          	or     $0x2,%rax
   21c70:	48 89 c2             	mov    %rax,%rdx
   21c73:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21c7a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21c7e:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21c85:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21c8c:	48 01 d0             	add    %rdx,%rax
   21c8f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   21c93:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   21c9a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21ca1:	48 01 c8             	add    %rcx,%rax
   21ca4:	48 83 ca 01          	or     $0x1,%rdx
   21ca8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21cac:	48 8b 0d 2d 02 04 00 	mov    0x4022d(%rip),%rcx        # 61ee0 <mparams>
   21cb3:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   21cba:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   21cc1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21cc8:	48 01 f0             	add    %rsi,%rax
   21ccb:	48 31 ca             	xor    %rcx,%rdx
   21cce:	48 89 10             	mov    %rdx,(%rax)
   21cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21cd5:	48 8b 40 08          	mov    0x8(%rax),%rax
   21cd9:	83 e0 01             	and    $0x1,%eax
   21cdc:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   21ce0:	48 83 c8 02          	or     $0x2,%rax
   21ce4:	48 89 c2             	mov    %rax,%rdx
   21ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ceb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21cef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21cf3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21cf7:	48 01 d0             	add    %rdx,%rax
   21cfa:	48 8b 50 08          	mov    0x8(%rax),%rdx
   21cfe:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21d02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21d06:	48 01 c8             	add    %rcx,%rax
   21d09:	48 83 ca 01          	or     $0x1,%rdx
   21d0d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21d11:	48 8b 0d c8 01 04 00 	mov    0x401c8(%rip),%rcx        # 61ee0 <mparams>
   21d18:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   21d1f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   21d23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21d27:	48 01 f0             	add    %rsi,%rax
   21d2a:	48 31 ca             	xor    %rcx,%rdx
   21d2d:	48 89 10             	mov    %rdx,(%rax)
   21d30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21d34:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   21d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d3c:	48 83 c0 10          	add    $0x10,%rax
   21d40:	be 00 00 00 00       	mov    $0x0,%esi
   21d45:	48 89 c7             	mov    %rax,%rdi
   21d48:	e8 36 19 00 00       	call   23683 <memset>
   21d4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21d51:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21d55:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21d5c:	48 89 ce             	mov    %rcx,%rsi
   21d5f:	48 89 c7             	mov    %rax,%rdi
   21d62:	e8 64 b6 ff ff       	call   1d3cb <dispose_chunk>
   21d67:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21d6e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   21d75:	e9 26 0b 00 00       	jmp    228a0 <try_realloc_chunk+0xdcb>
   21d7a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21d81:	48 8b 40 28          	mov    0x28(%rax),%rax
   21d85:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   21d8c:	0f 85 1d 01 00 00    	jne    21eaf <try_realloc_chunk+0x3da>
   21d92:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21d99:	48 8b 50 10          	mov    0x10(%rax),%rdx
   21d9d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   21da4:	48 01 d0             	add    %rdx,%rax
   21da7:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   21dae:	0f 83 ec 0a 00 00    	jae    228a0 <try_realloc_chunk+0xdcb>
   21db4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21dbb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   21dbf:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   21dc6:	48 01 d0             	add    %rdx,%rax
   21dc9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   21dcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21dd1:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   21dd8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   21ddc:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21de3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21dea:	48 01 d0             	add    %rdx,%rax
   21ded:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   21df1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21df8:	48 8b 40 08          	mov    0x8(%rax),%rax
   21dfc:	83 e0 01             	and    $0x1,%eax
   21dff:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   21e06:	48 83 c8 02          	or     $0x2,%rax
   21e0a:	48 89 c2             	mov    %rax,%rdx
   21e0d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21e14:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21e18:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21e1f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21e26:	48 01 d0             	add    %rdx,%rax
   21e29:	48 8b 50 08          	mov    0x8(%rax),%rdx
   21e2d:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   21e34:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21e3b:	48 01 c8             	add    %rcx,%rax
   21e3e:	48 83 ca 01          	or     $0x1,%rdx
   21e42:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21e46:	48 8b 0d 93 00 04 00 	mov    0x40093(%rip),%rcx        # 61ee0 <mparams>
   21e4d:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   21e54:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   21e5b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21e62:	48 01 f0             	add    %rsi,%rax
   21e65:	48 31 ca             	xor    %rcx,%rdx
   21e68:	48 89 10             	mov    %rdx,(%rax)
   21e6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21e6f:	48 83 c8 01          	or     $0x1,%rax
   21e73:	48 89 c2             	mov    %rax,%rdx
   21e76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21e7a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21e7e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21e85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21e89:	48 89 50 28          	mov    %rdx,0x28(%rax)
   21e8d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21e94:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21e98:	48 89 50 10          	mov    %rdx,0x10(%rax)
   21e9c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21ea3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   21eaa:	e9 f1 09 00 00       	jmp    228a0 <try_realloc_chunk+0xdcb>
   21eaf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21eb6:	48 8b 40 20          	mov    0x20(%rax),%rax
   21eba:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   21ec1:	0f 85 fc 01 00 00    	jne    220c3 <try_realloc_chunk+0x5ee>
   21ec7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21ece:	48 8b 40 08          	mov    0x8(%rax),%rax
   21ed2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   21ed6:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   21edd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   21ee1:	48 01 d0             	add    %rdx,%rax
   21ee4:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   21eeb:	0f 87 af 09 00 00    	ja     228a0 <try_realloc_chunk+0xdcb>
   21ef1:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   21ef8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   21efc:	48 01 d0             	add    %rdx,%rax
   21eff:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   21f06:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   21f0a:	48 83 7d b8 1f       	cmpq   $0x1f,-0x48(%rbp)
   21f0f:	0f 86 fd 00 00 00    	jbe    22012 <try_realloc_chunk+0x53d>
   21f15:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21f1c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21f23:	48 01 d0             	add    %rdx,%rax
   21f26:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   21f2a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21f2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21f32:	48 01 d0             	add    %rdx,%rax
   21f35:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   21f39:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21f40:	48 8b 40 08          	mov    0x8(%rax),%rax
   21f44:	83 e0 01             	and    $0x1,%eax
   21f47:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   21f4e:	48 83 c8 02          	or     $0x2,%rax
   21f52:	48 89 c2             	mov    %rax,%rdx
   21f55:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21f5c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21f60:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   21f67:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21f6e:	48 01 d0             	add    %rdx,%rax
   21f71:	48 8b 50 08          	mov    0x8(%rax),%rdx
   21f75:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   21f7c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21f83:	48 01 c8             	add    %rcx,%rax
   21f86:	48 83 ca 01          	or     $0x1,%rdx
   21f8a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21f8e:	48 8b 0d 4b ff 03 00 	mov    0x3ff4b(%rip),%rcx        # 61ee0 <mparams>
   21f95:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   21f9c:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   21fa3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21faa:	48 01 f0             	add    %rsi,%rax
   21fad:	48 31 ca             	xor    %rcx,%rdx
   21fb0:	48 89 10             	mov    %rdx,(%rax)
   21fb3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21fb7:	48 83 c8 01          	or     $0x1,%rax
   21fbb:	48 89 c2             	mov    %rax,%rdx
   21fbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21fc2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21fc6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   21fca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21fce:	48 01 c2             	add    %rax,%rdx
   21fd1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21fd5:	48 89 02             	mov    %rax,(%rdx)
   21fd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21fdc:	48 8b 40 08          	mov    0x8(%rax),%rax
   21fe0:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   21fe4:	48 89 c2             	mov    %rax,%rdx
   21fe7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21feb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21fef:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   21ff6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   21ffa:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21ffe:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22005:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   22009:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2200d:	e9 9e 00 00 00       	jmp    220b0 <try_realloc_chunk+0x5db>
   22012:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   22019:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2201d:	48 01 d0             	add    %rdx,%rax
   22020:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   22024:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2202b:	48 8b 40 08          	mov    0x8(%rax),%rax
   2202f:	83 e0 01             	and    $0x1,%eax
   22032:	48 0b 45 c0          	or     -0x40(%rbp),%rax
   22036:	48 83 c8 02          	or     $0x2,%rax
   2203a:	48 89 c2             	mov    %rax,%rdx
   2203d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   22044:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22048:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   2204f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22053:	48 01 d0             	add    %rdx,%rax
   22056:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2205a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   22061:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22065:	48 01 c8             	add    %rcx,%rax
   22068:	48 83 ca 01          	or     $0x1,%rdx
   2206c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22070:	48 8b 0d 69 fe 03 00 	mov    0x3fe69(%rip),%rcx        # 61ee0 <mparams>
   22077:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   2207e:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   22085:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22089:	48 01 f0             	add    %rsi,%rax
   2208c:	48 31 ca             	xor    %rcx,%rdx
   2208f:	48 89 10             	mov    %rdx,(%rax)
   22092:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22099:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   220a0:	00 
   220a1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   220a8:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   220af:	00 
   220b0:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   220b7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   220be:	e9 dd 07 00 00       	jmp    228a0 <try_realloc_chunk+0xdcb>
   220c3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   220ca:	48 8b 40 08          	mov    0x8(%rax),%rax
   220ce:	83 e0 02             	and    $0x2,%eax
   220d1:	48 85 c0             	test   %rax,%rax
   220d4:	0f 85 c6 07 00 00    	jne    228a0 <try_realloc_chunk+0xdcb>
   220da:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   220e1:	48 8b 40 08          	mov    0x8(%rax),%rax
   220e5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   220e9:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   220f0:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   220f7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   220fe:	48 01 d0             	add    %rdx,%rax
   22101:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   22108:	0f 87 92 07 00 00    	ja     228a0 <try_realloc_chunk+0xdcb>
   2210e:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   22115:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2211c:	48 01 d0             	add    %rdx,%rax
   2211f:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   22126:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   2212d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   22134:	48 c1 e8 03          	shr    $0x3,%rax
   22138:	48 83 f8 1f          	cmp    $0x1f,%rax
   2213c:	0f 87 c9 01 00 00    	ja     2230b <try_realloc_chunk+0x836>
   22142:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   22149:	48 8b 40 10          	mov    0x10(%rax),%rax
   2214d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   22151:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   22158:	48 8b 40 18          	mov    0x18(%rax),%rax
   2215c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   22160:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   22167:	48 c1 e8 03          	shr    $0x3,%rax
   2216b:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   22171:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   22178:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
   2217c:	75 05                	jne    22183 <try_realloc_chunk+0x6ae>
   2217e:	e8 18 f9 00 00       	call   31a9b <abort>
   22183:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2218a:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   2218e:	75 05                	jne    22195 <try_realloc_chunk+0x6c0>
   22190:	e8 06 f9 00 00       	call   31a9b <abort>
   22195:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   2219c:	48 8b 40 08          	mov    0x8(%rax),%rax
   221a0:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   221a4:	48 89 c2             	mov    %rax,%rdx
   221a7:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   221ad:	c1 e0 03             	shl    $0x3,%eax
   221b0:	89 c0                	mov    %eax,%eax
   221b2:	48 39 c2             	cmp    %rax,%rdx
   221b5:	74 05                	je     221bc <try_realloc_chunk+0x6e7>
   221b7:	e8 df f8 00 00       	call   31a9b <abort>
   221bc:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   221c2:	01 c0                	add    %eax,%eax
   221c4:	89 c0                	mov    %eax,%eax
   221c6:	48 83 c0 08          	add    $0x8,%rax
   221ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   221d1:	00 
   221d2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   221d9:	48 01 d0             	add    %rdx,%rax
   221dc:	48 83 c0 08          	add    $0x8,%rax
   221e0:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   221e4:	0f 94 c0             	sete   %al
   221e7:	0f b6 c0             	movzbl %al,%eax
   221ea:	48 85 c0             	test   %rax,%rax
   221ed:	75 48                	jne    22237 <try_realloc_chunk+0x762>
   221ef:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   221f6:	48 8b 40 18          	mov    0x18(%rax),%rax
   221fa:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   221fe:	0f 93 c0             	setae  %al
   22201:	0f b6 c0             	movzbl %al,%eax
   22204:	48 85 c0             	test   %rax,%rax
   22207:	74 21                	je     2222a <try_realloc_chunk+0x755>
   22209:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2220d:	48 8b 40 18          	mov    0x18(%rax),%rax
   22211:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   22218:	0f 94 c0             	sete   %al
   2221b:	0f b6 c0             	movzbl %al,%eax
   2221e:	48 85 c0             	test   %rax,%rax
   22221:	74 07                	je     2222a <try_realloc_chunk+0x755>
   22223:	b8 01 00 00 00       	mov    $0x1,%eax
   22228:	eb 05                	jmp    2222f <try_realloc_chunk+0x75a>
   2222a:	b8 00 00 00 00       	mov    $0x0,%eax
   2222f:	85 c0                	test   %eax,%eax
   22231:	0f 84 cf 00 00 00    	je     22306 <try_realloc_chunk+0x831>
   22237:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2223b:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   2223f:	75 2c                	jne    2226d <try_realloc_chunk+0x798>
   22241:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22248:	8b 10                	mov    (%rax),%edx
   2224a:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   22250:	be 01 00 00 00       	mov    $0x1,%esi
   22255:	89 c1                	mov    %eax,%ecx
   22257:	d3 e6                	shl    %cl,%esi
   22259:	89 f0                	mov    %esi,%eax
   2225b:	f7 d0                	not    %eax
   2225d:	21 c2                	and    %eax,%edx
   2225f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22266:	89 10                	mov    %edx,(%rax)
   22268:	e9 71 04 00 00       	jmp    226de <try_realloc_chunk+0xc09>
   2226d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   22273:	01 c0                	add    %eax,%eax
   22275:	89 c0                	mov    %eax,%eax
   22277:	48 83 c0 08          	add    $0x8,%rax
   2227b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22282:	00 
   22283:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2228a:	48 01 d0             	add    %rdx,%rax
   2228d:	48 83 c0 08          	add    $0x8,%rax
   22291:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   22295:	0f 94 c0             	sete   %al
   22298:	0f b6 c0             	movzbl %al,%eax
   2229b:	48 85 c0             	test   %rax,%rax
   2229e:	75 44                	jne    222e4 <try_realloc_chunk+0x80f>
   222a0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   222a7:	48 8b 40 18          	mov    0x18(%rax),%rax
   222ab:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   222af:	0f 93 c0             	setae  %al
   222b2:	0f b6 c0             	movzbl %al,%eax
   222b5:	48 85 c0             	test   %rax,%rax
   222b8:	74 21                	je     222db <try_realloc_chunk+0x806>
   222ba:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   222be:	48 8b 40 10          	mov    0x10(%rax),%rax
   222c2:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   222c9:	0f 94 c0             	sete   %al
   222cc:	0f b6 c0             	movzbl %al,%eax
   222cf:	48 85 c0             	test   %rax,%rax
   222d2:	74 07                	je     222db <try_realloc_chunk+0x806>
   222d4:	b8 01 00 00 00       	mov    $0x1,%eax
   222d9:	eb 05                	jmp    222e0 <try_realloc_chunk+0x80b>
   222db:	b8 00 00 00 00       	mov    $0x0,%eax
   222e0:	85 c0                	test   %eax,%eax
   222e2:	74 1d                	je     22301 <try_realloc_chunk+0x82c>
   222e4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   222e8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   222ec:	48 89 50 18          	mov    %rdx,0x18(%rax)
   222f0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   222f4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   222f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   222fc:	e9 dd 03 00 00       	jmp    226de <try_realloc_chunk+0xc09>
   22301:	e8 95 f7 00 00       	call   31a9b <abort>
   22306:	e8 90 f7 00 00       	call   31a9b <abort>
   2230b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   22312:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   22319:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22320:	48 8b 40 30          	mov    0x30(%rax),%rax
   22324:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   2232b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22332:	48 8b 40 18          	mov    0x18(%rax),%rax
   22336:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   2233d:	0f 84 b9 00 00 00    	je     223fc <try_realloc_chunk+0x927>
   22343:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2234a:	48 8b 40 10          	mov    0x10(%rax),%rax
   2234e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   22355:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2235c:	48 8b 40 18          	mov    0x18(%rax),%rax
   22360:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   22367:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2236e:	48 8b 40 18          	mov    0x18(%rax),%rax
   22372:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   22379:	0f 93 c0             	setae  %al
   2237c:	0f b6 c0             	movzbl %al,%eax
   2237f:	48 85 c0             	test   %rax,%rax
   22382:	74 24                	je     223a8 <try_realloc_chunk+0x8d3>
   22384:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2238b:	48 8b 40 18          	mov    0x18(%rax),%rax
   2238f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   22396:	0f 94 c0             	sete   %al
   22399:	0f b6 c0             	movzbl %al,%eax
   2239c:	48 85 c0             	test   %rax,%rax
   2239f:	74 07                	je     223a8 <try_realloc_chunk+0x8d3>
   223a1:	b8 01 00 00 00       	mov    $0x1,%eax
   223a6:	eb 05                	jmp    223ad <try_realloc_chunk+0x8d8>
   223a8:	b8 00 00 00 00       	mov    $0x0,%eax
   223ad:	85 c0                	test   %eax,%eax
   223af:	74 46                	je     223f7 <try_realloc_chunk+0x922>
   223b1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   223b8:	48 8b 40 10          	mov    0x10(%rax),%rax
   223bc:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   223c3:	0f 94 c0             	sete   %al
   223c6:	0f b6 c0             	movzbl %al,%eax
   223c9:	48 85 c0             	test   %rax,%rax
   223cc:	74 29                	je     223f7 <try_realloc_chunk+0x922>
   223ce:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   223d5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   223dc:	48 89 50 18          	mov    %rdx,0x18(%rax)
   223e0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   223e7:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   223ee:	48 89 50 10          	mov    %rdx,0x10(%rax)
   223f2:	e9 f8 00 00 00       	jmp    224ef <try_realloc_chunk+0xa1a>
   223f7:	e8 9f f6 00 00       	call   31a9b <abort>
   223fc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22403:	48 83 c0 28          	add    $0x28,%rax
   22407:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   2240e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   22415:	48 8b 00             	mov    (%rax),%rax
   22418:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   2241f:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   22426:	00 
   22427:	75 52                	jne    2247b <try_realloc_chunk+0x9a6>
   22429:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22430:	48 83 c0 20          	add    $0x20,%rax
   22434:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   2243b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   22442:	48 8b 00             	mov    (%rax),%rax
   22445:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   2244c:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   22453:	00 
   22454:	0f 84 95 00 00 00    	je     224ef <try_realloc_chunk+0xa1a>
   2245a:	eb 1f                	jmp    2247b <try_realloc_chunk+0x9a6>
   2245c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   22463:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   2246a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   22471:	48 8b 00             	mov    (%rax),%rax
   22474:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   2247b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22482:	48 83 c0 28          	add    $0x28,%rax
   22486:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   2248d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   22494:	48 8b 00             	mov    (%rax),%rax
   22497:	48 85 c0             	test   %rax,%rax
   2249a:	75 c0                	jne    2245c <try_realloc_chunk+0x987>
   2249c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   224a3:	48 83 c0 20          	add    $0x20,%rax
   224a7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   224ae:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   224b5:	48 8b 00             	mov    (%rax),%rax
   224b8:	48 85 c0             	test   %rax,%rax
   224bb:	75 9f                	jne    2245c <try_realloc_chunk+0x987>
   224bd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   224c4:	48 8b 40 18          	mov    0x18(%rax),%rax
   224c8:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
   224cf:	0f 93 c0             	setae  %al
   224d2:	0f b6 c0             	movzbl %al,%eax
   224d5:	48 85 c0             	test   %rax,%rax
   224d8:	74 10                	je     224ea <try_realloc_chunk+0xa15>
   224da:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   224e1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   224e8:	eb 05                	jmp    224ef <try_realloc_chunk+0xa1a>
   224ea:	e8 ac f5 00 00       	call   31a9b <abort>
   224ef:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   224f6:	00 
   224f7:	0f 84 e1 01 00 00    	je     226de <try_realloc_chunk+0xc09>
   224fd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22504:	8b 40 38             	mov    0x38(%rax),%eax
   22507:	89 c0                	mov    %eax,%eax
   22509:	48 83 c0 4a          	add    $0x4a,%rax
   2250d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22514:	00 
   22515:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2251c:	48 01 d0             	add    %rdx,%rax
   2251f:	48 83 c0 08          	add    $0x8,%rax
   22523:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   2252a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22531:	48 8b 00             	mov    (%rax),%rax
   22534:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   2253b:	75 53                	jne    22590 <try_realloc_chunk+0xabb>
   2253d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22544:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   2254b:	48 89 10             	mov    %rdx,(%rax)
   2254e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22555:	48 8b 00             	mov    (%rax),%rax
   22558:	48 85 c0             	test   %rax,%rax
   2255b:	0f 85 8d 00 00 00    	jne    225ee <try_realloc_chunk+0xb19>
   22561:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22568:	8b 50 04             	mov    0x4(%rax),%edx
   2256b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22572:	8b 40 38             	mov    0x38(%rax),%eax
   22575:	be 01 00 00 00       	mov    $0x1,%esi
   2257a:	89 c1                	mov    %eax,%ecx
   2257c:	d3 e6                	shl    %cl,%esi
   2257e:	89 f0                	mov    %esi,%eax
   22580:	f7 d0                	not    %eax
   22582:	21 c2                	and    %eax,%edx
   22584:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2258b:	89 50 04             	mov    %edx,0x4(%rax)
   2258e:	eb 5e                	jmp    225ee <try_realloc_chunk+0xb19>
   22590:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22597:	48 8b 40 18          	mov    0x18(%rax),%rax
   2259b:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   225a2:	0f 93 c0             	setae  %al
   225a5:	0f b6 c0             	movzbl %al,%eax
   225a8:	48 85 c0             	test   %rax,%rax
   225ab:	74 3c                	je     225e9 <try_realloc_chunk+0xb14>
   225ad:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   225b4:	48 8b 40 20          	mov    0x20(%rax),%rax
   225b8:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   225bf:	75 14                	jne    225d5 <try_realloc_chunk+0xb00>
   225c1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   225c8:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   225cf:	48 89 50 20          	mov    %rdx,0x20(%rax)
   225d3:	eb 19                	jmp    225ee <try_realloc_chunk+0xb19>
   225d5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   225dc:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   225e3:	48 89 50 28          	mov    %rdx,0x28(%rax)
   225e7:	eb 05                	jmp    225ee <try_realloc_chunk+0xb19>
   225e9:	e8 ad f4 00 00       	call   31a9b <abort>
   225ee:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   225f5:	00 
   225f6:	0f 84 e2 00 00 00    	je     226de <try_realloc_chunk+0xc09>
   225fc:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22603:	48 8b 40 18          	mov    0x18(%rax),%rax
   22607:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   2260e:	0f 93 c0             	setae  %al
   22611:	0f b6 c0             	movzbl %al,%eax
   22614:	48 85 c0             	test   %rax,%rax
   22617:	0f 84 bc 00 00 00    	je     226d9 <try_realloc_chunk+0xc04>
   2261d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22624:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   2262b:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2262f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   22636:	48 8b 40 20          	mov    0x20(%rax),%rax
   2263a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   2263e:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   22643:	74 3f                	je     22684 <try_realloc_chunk+0xbaf>
   22645:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2264c:	48 8b 40 18          	mov    0x18(%rax),%rax
   22650:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   22654:	0f 93 c0             	setae  %al
   22657:	0f b6 c0             	movzbl %al,%eax
   2265a:	48 85 c0             	test   %rax,%rax
   2265d:	74 20                	je     2267f <try_realloc_chunk+0xbaa>
   2265f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22666:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   2266a:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2266e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22672:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   22679:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2267d:	eb 05                	jmp    22684 <try_realloc_chunk+0xbaf>
   2267f:	e8 17 f4 00 00       	call   31a9b <abort>
   22684:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2268b:	48 8b 40 28          	mov    0x28(%rax),%rax
   2268f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   22693:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   22698:	74 44                	je     226de <try_realloc_chunk+0xc09>
   2269a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   226a1:	48 8b 40 18          	mov    0x18(%rax),%rax
   226a5:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   226a9:	0f 93 c0             	setae  %al
   226ac:	0f b6 c0             	movzbl %al,%eax
   226af:	48 85 c0             	test   %rax,%rax
   226b2:	74 20                	je     226d4 <try_realloc_chunk+0xbff>
   226b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   226bb:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   226bf:	48 89 50 28          	mov    %rdx,0x28(%rax)
   226c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   226c7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   226ce:	48 89 50 30          	mov    %rdx,0x30(%rax)
   226d2:	eb 0a                	jmp    226de <try_realloc_chunk+0xc09>
   226d4:	e8 c2 f3 00 00       	call   31a9b <abort>
   226d9:	e8 bd f3 00 00       	call   31a9b <abort>
   226de:	48 83 bd 58 ff ff ff 	cmpq   $0x1f,-0xa8(%rbp)
   226e5:	1f 
   226e6:	0f 87 88 00 00 00    	ja     22774 <try_realloc_chunk+0xc9f>
   226ec:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   226f3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   226fa:	48 01 d0             	add    %rdx,%rax
   226fd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   22701:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   22708:	48 8b 40 08          	mov    0x8(%rax),%rax
   2270c:	83 e0 01             	and    $0x1,%eax
   2270f:	48 0b 45 a8          	or     -0x58(%rbp),%rax
   22713:	48 83 c8 02          	or     $0x2,%rax
   22717:	48 89 c2             	mov    %rax,%rdx
   2271a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   22721:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22725:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   2272c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22730:	48 01 d0             	add    %rdx,%rax
   22733:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22737:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   2273e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22742:	48 01 c8             	add    %rcx,%rax
   22745:	48 83 ca 01          	or     $0x1,%rdx
   22749:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2274d:	48 8b 0d 8c f7 03 00 	mov    0x3f78c(%rip),%rcx        # 61ee0 <mparams>
   22754:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   2275b:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   22762:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22766:	48 01 f0             	add    %rsi,%rax
   22769:	48 31 ca             	xor    %rcx,%rdx
   2276c:	48 89 10             	mov    %rdx,(%rax)
   2276f:	e9 17 01 00 00       	jmp    2288b <try_realloc_chunk+0xdb6>
   22774:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   2277b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   22782:	48 01 d0             	add    %rdx,%rax
   22785:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   22789:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   22790:	48 8b 40 08          	mov    0x8(%rax),%rax
   22794:	83 e0 01             	and    $0x1,%eax
   22797:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   2279e:	48 83 c8 02          	or     $0x2,%rax
   227a2:	48 89 c2             	mov    %rax,%rdx
   227a5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   227ac:	48 89 50 08          	mov    %rdx,0x8(%rax)
   227b0:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   227b7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   227be:	48 01 d0             	add    %rdx,%rax
   227c1:	48 8b 50 08          	mov    0x8(%rax),%rdx
   227c5:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   227cc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   227d3:	48 01 c8             	add    %rcx,%rax
   227d6:	48 83 ca 01          	or     $0x1,%rdx
   227da:	48 89 50 08          	mov    %rdx,0x8(%rax)
   227de:	48 8b 0d fb f6 03 00 	mov    0x3f6fb(%rip),%rcx        # 61ee0 <mparams>
   227e5:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   227ec:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   227f3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   227fa:	48 01 f0             	add    %rsi,%rax
   227fd:	48 31 ca             	xor    %rcx,%rdx
   22800:	48 89 10             	mov    %rdx,(%rax)
   22803:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22807:	48 8b 40 08          	mov    0x8(%rax),%rax
   2280b:	83 e0 01             	and    $0x1,%eax
   2280e:	48 0b 85 58 ff ff ff 	or     -0xa8(%rbp),%rax
   22815:	48 83 c8 02          	or     $0x2,%rax
   22819:	48 89 c2             	mov    %rax,%rdx
   2281c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22820:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22824:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   22828:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   2282f:	48 01 d0             	add    %rdx,%rax
   22832:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22836:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   2283a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   22841:	48 01 c8             	add    %rcx,%rax
   22844:	48 83 ca 01          	or     $0x1,%rdx
   22848:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2284c:	48 8b 0d 8d f6 03 00 	mov    0x3f68d(%rip),%rcx        # 61ee0 <mparams>
   22853:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   2285a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   2285e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   22865:	48 01 f0             	add    %rsi,%rax
   22868:	48 31 ca             	xor    %rcx,%rdx
   2286b:	48 89 10             	mov    %rdx,(%rax)
   2286e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   22875:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   22879:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   22880:	48 89 ce             	mov    %rcx,%rsi
   22883:	48 89 c7             	mov    %rax,%rdi
   22886:	e8 40 ab ff ff       	call   1d3cb <dispose_chunk>
   2288b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   22892:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   22899:	eb 05                	jmp    228a0 <try_realloc_chunk+0xdcb>
   2289b:	e8 fb f1 00 00       	call   31a9b <abort>
   228a0:	90                   	nop
   228a1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   228a8:	c9                   	leave  
   228a9:	c3                   	ret    

00000000000228aa <internal_memalign>:
   228aa:	f3 0f 1e fa          	endbr64 
   228ae:	55                   	push   %rbp
   228af:	48 89 e5             	mov    %rsp,%rbp
   228b2:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   228b9:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   228bd:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   228c1:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   228c8:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   228cf:	00 
   228d0:	48 83 7d 80 1f       	cmpq   $0x1f,-0x80(%rbp)
   228d5:	77 08                	ja     228df <internal_memalign+0x35>
   228d7:	48 c7 45 80 20 00 00 	movq   $0x20,-0x80(%rbp)
   228de:	00 
   228df:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   228e3:	48 83 e8 01          	sub    $0x1,%rax
   228e7:	48 23 45 80          	and    -0x80(%rbp),%rax
   228eb:	48 85 c0             	test   %rax,%rax
   228ee:	74 20                	je     22910 <internal_memalign+0x66>
   228f0:	48 c7 45 a0 20 00 00 	movq   $0x20,-0x60(%rbp)
   228f7:	00 
   228f8:	eb 04                	jmp    228fe <internal_memalign+0x54>
   228fa:	48 d1 65 a0          	shlq   -0x60(%rbp)
   228fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   22902:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
   22906:	72 f2                	jb     228fa <internal_memalign+0x50>
   22908:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2290c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   22910:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   22917:	48 2b 45 80          	sub    -0x80(%rbp),%rax
   2291b:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   22922:	72 1b                	jb     2293f <internal_memalign+0x95>
   22924:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   22929:	0f 84 da 03 00 00    	je     22d09 <internal_memalign+0x45f>
   2292f:	e8 95 15 00 00       	call   23ec9 <__errno>
   22934:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2293a:	e9 ca 03 00 00       	jmp    22d09 <internal_memalign+0x45f>
   2293f:	48 83 bd 78 ff ff ff 	cmpq   $0xe,-0x88(%rbp)
   22946:	0e 
   22947:	76 11                	jbe    2295a <internal_memalign+0xb0>
   22949:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22950:	48 83 c0 1f          	add    $0x1f,%rax
   22954:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   22958:	eb 05                	jmp    2295f <internal_memalign+0xb5>
   2295a:	b8 20 00 00 00       	mov    $0x20,%eax
   2295f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   22963:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   22967:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2296b:	48 01 d0             	add    %rdx,%rax
   2296e:	48 83 c0 10          	add    $0x10,%rax
   22972:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   22976:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2297a:	48 89 c7             	mov    %rax,%rdi
   2297d:	e8 a5 d0 ff ff       	call   1fa27 <dlmalloc>
   22982:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   22986:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2298b:	0f 84 78 03 00 00    	je     22d09 <internal_memalign+0x45f>
   22991:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22995:	48 83 e8 10          	sub    $0x10,%rax
   22999:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2299d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   229a1:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   229a7:	83 e0 02             	and    $0x2,%eax
   229aa:	85 c0                	test   %eax,%eax
   229ac:	74 36                	je     229e4 <internal_memalign+0x13a>
   229ae:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   229b2:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   229b9:	b8 01 00 00 00       	mov    $0x1,%eax
   229be:	87 02                	xchg   %eax,(%rdx)
   229c0:	85 c0                	test   %eax,%eax
   229c2:	74 20                	je     229e4 <internal_memalign+0x13a>
   229c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   229c8:	48 05 74 03 00 00    	add    $0x374,%rax
   229ce:	48 89 c7             	mov    %rax,%rdi
   229d1:	e8 b4 6e ff ff       	call   1988a <spin_acquire_lock>
   229d6:	85 c0                	test   %eax,%eax
   229d8:	74 0a                	je     229e4 <internal_memalign+0x13a>
   229da:	b8 00 00 00 00       	mov    $0x0,%eax
   229df:	e9 29 03 00 00       	jmp    22d0d <internal_memalign+0x463>
   229e4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   229e8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   229ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   229f0:	48 21 d0             	and    %rdx,%rax
   229f3:	48 85 c0             	test   %rax,%rax
   229f6:	0f 84 7c 01 00 00    	je     22b78 <internal_memalign+0x2ce>
   229fc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22a00:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   22a04:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22a08:	48 01 d0             	add    %rdx,%rax
   22a0b:	48 89 c2             	mov    %rax,%rdx
   22a0e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22a12:	48 f7 d8             	neg    %rax
   22a15:	48 21 d0             	and    %rdx,%rax
   22a18:	48 83 e8 10          	sub    $0x10,%rax
   22a1c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   22a20:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22a24:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   22a28:	48 83 f8 1f          	cmp    $0x1f,%rax
   22a2c:	77 0d                	ja     22a3b <internal_memalign+0x191>
   22a2e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   22a32:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22a36:	48 01 d0             	add    %rdx,%rax
   22a39:	eb 04                	jmp    22a3f <internal_memalign+0x195>
   22a3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22a3f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   22a43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22a47:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   22a4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22a4f:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   22a53:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   22a57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22a5b:	48 8b 40 08          	mov    0x8(%rax),%rax
   22a5f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   22a63:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   22a67:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   22a6b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22a6f:	48 8b 40 08          	mov    0x8(%rax),%rax
   22a73:	83 e0 03             	and    $0x3,%eax
   22a76:	48 85 c0             	test   %rax,%rax
   22a79:	75 26                	jne    22aa1 <internal_memalign+0x1f7>
   22a7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22a7f:	48 8b 10             	mov    (%rax),%rdx
   22a82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22a86:	48 01 c2             	add    %rax,%rdx
   22a89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22a8d:	48 89 10             	mov    %rdx,(%rax)
   22a90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22a94:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   22a98:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22a9c:	e9 cf 00 00 00       	jmp    22b70 <internal_memalign+0x2c6>
   22aa1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22aa5:	48 8b 40 08          	mov    0x8(%rax),%rax
   22aa9:	83 e0 01             	and    $0x1,%eax
   22aac:	48 0b 45 e0          	or     -0x20(%rbp),%rax
   22ab0:	48 83 c8 02          	or     $0x2,%rax
   22ab4:	48 89 c2             	mov    %rax,%rdx
   22ab7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22abb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22abf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   22ac3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22ac7:	48 01 d0             	add    %rdx,%rax
   22aca:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22ace:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   22ad2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22ad6:	48 01 c8             	add    %rcx,%rax
   22ad9:	48 83 ca 01          	or     $0x1,%rdx
   22add:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22ae1:	48 8b 0d f8 f3 03 00 	mov    0x3f3f8(%rip),%rcx        # 61ee0 <mparams>
   22ae8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22aec:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   22af0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22af4:	48 01 f0             	add    %rsi,%rax
   22af7:	48 31 ca             	xor    %rcx,%rdx
   22afa:	48 89 10             	mov    %rdx,(%rax)
   22afd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22b01:	48 8b 40 08          	mov    0x8(%rax),%rax
   22b05:	83 e0 01             	and    $0x1,%eax
   22b08:	48 0b 45 d8          	or     -0x28(%rbp),%rax
   22b0c:	48 83 c8 02          	or     $0x2,%rax
   22b10:	48 89 c2             	mov    %rax,%rdx
   22b13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22b17:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22b1b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   22b1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22b23:	48 01 d0             	add    %rdx,%rax
   22b26:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22b2a:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   22b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22b32:	48 01 c8             	add    %rcx,%rax
   22b35:	48 83 ca 01          	or     $0x1,%rdx
   22b39:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22b3d:	48 8b 0d 9c f3 03 00 	mov    0x3f39c(%rip),%rcx        # 61ee0 <mparams>
   22b44:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22b48:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   22b4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22b50:	48 01 f0             	add    %rsi,%rax
   22b53:	48 31 ca             	xor    %rcx,%rdx
   22b56:	48 89 10             	mov    %rdx,(%rax)
   22b59:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   22b5d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   22b61:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22b65:	48 89 ce             	mov    %rcx,%rsi
   22b68:	48 89 c7             	mov    %rax,%rdi
   22b6b:	e8 5b a8 ff ff       	call   1d3cb <dispose_chunk>
   22b70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22b74:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   22b78:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22b7c:	48 8b 40 08          	mov    0x8(%rax),%rax
   22b80:	83 e0 03             	and    $0x3,%eax
   22b83:	48 85 c0             	test   %rax,%rax
   22b86:	0f 84 0c 01 00 00    	je     22c98 <internal_memalign+0x3ee>
   22b8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22b90:	48 8b 40 08          	mov    0x8(%rax),%rax
   22b94:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   22b98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   22b9c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22ba0:	48 83 c0 20          	add    $0x20,%rax
   22ba4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   22ba8:	0f 86 ea 00 00 00    	jbe    22c98 <internal_memalign+0x3ee>
   22bae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22bb2:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
   22bb6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   22bba:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   22bbe:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22bc2:	48 01 d0             	add    %rdx,%rax
   22bc5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22bc9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22bcd:	48 8b 40 08          	mov    0x8(%rax),%rax
   22bd1:	83 e0 01             	and    $0x1,%eax
   22bd4:	48 0b 45 b0          	or     -0x50(%rbp),%rax
   22bd8:	48 83 c8 02          	or     $0x2,%rax
   22bdc:	48 89 c2             	mov    %rax,%rdx
   22bdf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22be3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22be7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   22beb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22bef:	48 01 d0             	add    %rdx,%rax
   22bf2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22bf6:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   22bfa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22bfe:	48 01 c8             	add    %rcx,%rax
   22c01:	48 83 ca 01          	or     $0x1,%rdx
   22c05:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22c09:	48 8b 0d d0 f2 03 00 	mov    0x3f2d0(%rip),%rcx        # 61ee0 <mparams>
   22c10:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22c14:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   22c18:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22c1c:	48 01 f0             	add    %rsi,%rax
   22c1f:	48 31 ca             	xor    %rcx,%rdx
   22c22:	48 89 10             	mov    %rdx,(%rax)
   22c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22c29:	48 8b 40 08          	mov    0x8(%rax),%rax
   22c2d:	83 e0 01             	and    $0x1,%eax
   22c30:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   22c34:	48 83 c8 02          	or     $0x2,%rax
   22c38:	48 89 c2             	mov    %rax,%rdx
   22c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22c3f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22c43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22c47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22c4b:	48 01 d0             	add    %rdx,%rax
   22c4e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22c52:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   22c56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22c5a:	48 01 c8             	add    %rcx,%rax
   22c5d:	48 83 ca 01          	or     $0x1,%rdx
   22c61:	48 89 50 08          	mov    %rdx,0x8(%rax)
   22c65:	48 8b 0d 74 f2 03 00 	mov    0x3f274(%rip),%rcx        # 61ee0 <mparams>
   22c6c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   22c70:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   22c74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22c78:	48 01 f0             	add    %rsi,%rax
   22c7b:	48 31 ca             	xor    %rcx,%rdx
   22c7e:	48 89 10             	mov    %rdx,(%rax)
   22c81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22c85:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   22c89:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22c8d:	48 89 ce             	mov    %rcx,%rsi
   22c90:	48 89 c7             	mov    %rax,%rdi
   22c93:	e8 33 a7 ff ff       	call   1d3cb <dispose_chunk>
   22c98:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22c9c:	48 83 c0 10          	add    $0x10,%rax
   22ca0:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   22ca4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   22ca8:	48 8b 40 08          	mov    0x8(%rax),%rax
   22cac:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   22cb0:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   22cb4:	76 05                	jbe    22cbb <internal_memalign+0x411>
   22cb6:	e8 e0 ed 00 00       	call   31a9b <abort>
   22cbb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22cbf:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   22cc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22cc7:	48 21 d0             	and    %rdx,%rax
   22cca:	48 85 c0             	test   %rax,%rax
   22ccd:	74 05                	je     22cd4 <internal_memalign+0x42a>
   22ccf:	e8 c7 ed 00 00       	call   31a9b <abort>
   22cd4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   22cd8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22cdc:	48 89 d6             	mov    %rdx,%rsi
   22cdf:	48 89 c7             	mov    %rax,%rdi
   22ce2:	e8 30 70 ff ff       	call   19d17 <do_check_inuse_chunk>
   22ce7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22ceb:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   22cf1:	83 e0 02             	and    $0x2,%eax
   22cf4:	85 c0                	test   %eax,%eax
   22cf6:	74 11                	je     22d09 <internal_memalign+0x45f>
   22cf8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22cfc:	48 05 74 03 00 00    	add    $0x374,%rax
   22d02:	ba 00 00 00 00       	mov    $0x0,%edx
   22d07:	89 10                	mov    %edx,(%rax)
   22d09:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   22d0d:	c9                   	leave  
   22d0e:	c3                   	ret    

0000000000022d0f <dlrealloc>:
   22d0f:	f3 0f 1e fa          	endbr64 
   22d13:	55                   	push   %rbp
   22d14:	48 89 e5             	mov    %rsp,%rbp
   22d17:	48 83 ec 40          	sub    $0x40,%rsp
   22d1b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   22d1f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   22d23:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   22d2a:	00 
   22d2b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   22d30:	75 15                	jne    22d47 <dlrealloc+0x38>
   22d32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22d36:	48 89 c7             	mov    %rax,%rdi
   22d39:	e8 e9 cc ff ff       	call   1fa27 <dlmalloc>
   22d3e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   22d42:	e9 b3 01 00 00       	jmp    22efa <dlrealloc+0x1eb>
   22d47:	48 81 7d c0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x40(%rbp)
   22d4e:	ff 
   22d4f:	76 10                	jbe    22d61 <dlrealloc+0x52>
   22d51:	e8 73 11 00 00       	call   23ec9 <__errno>
   22d56:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   22d5c:	e9 99 01 00 00       	jmp    22efa <dlrealloc+0x1eb>
   22d61:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   22d66:	75 11                	jne    22d79 <dlrealloc+0x6a>
   22d68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22d6c:	48 89 c7             	mov    %rax,%rdi
   22d6f:	e8 ae d7 ff ff       	call   20522 <dlfree>
   22d74:	e9 81 01 00 00       	jmp    22efa <dlrealloc+0x1eb>
   22d79:	48 83 7d c0 0e       	cmpq   $0xe,-0x40(%rbp)
   22d7e:	76 0e                	jbe    22d8e <dlrealloc+0x7f>
   22d80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22d84:	48 83 c0 1f          	add    $0x1f,%rax
   22d88:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   22d8c:	eb 05                	jmp    22d93 <dlrealloc+0x84>
   22d8e:	b8 20 00 00 00       	mov    $0x20,%eax
   22d93:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   22d97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22d9b:	48 83 e8 10          	sub    $0x10,%rax
   22d9f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   22da3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22da7:	48 8b 40 08          	mov    0x8(%rax),%rax
   22dab:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   22daf:	48 89 c2             	mov    %rax,%rdx
   22db2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22db6:	48 01 d0             	add    %rdx,%rax
   22db9:	48 8b 10             	mov    (%rax),%rdx
   22dbc:	48 8b 05 1d f1 03 00 	mov    0x3f11d(%rip),%rax        # 61ee0 <mparams>
   22dc3:	48 31 d0             	xor    %rdx,%rax
   22dc6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   22dca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22dce:	48 8b 50 40          	mov    0x40(%rax),%rdx
   22dd2:	48 8b 05 07 f1 03 00 	mov    0x3f107(%rip),%rax        # 61ee0 <mparams>
   22dd9:	48 39 c2             	cmp    %rax,%rdx
   22ddc:	74 05                	je     22de3 <dlrealloc+0xd4>
   22dde:	e8 b8 ec 00 00       	call   31a9b <abort>
   22de3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22de7:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   22ded:	83 e0 02             	and    $0x2,%eax
   22df0:	85 c0                	test   %eax,%eax
   22df2:	74 30                	je     22e24 <dlrealloc+0x115>
   22df4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22df8:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   22dff:	b8 01 00 00 00       	mov    $0x1,%eax
   22e04:	87 02                	xchg   %eax,(%rdx)
   22e06:	85 c0                	test   %eax,%eax
   22e08:	74 1a                	je     22e24 <dlrealloc+0x115>
   22e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e0e:	48 05 74 03 00 00    	add    $0x374,%rax
   22e14:	48 89 c7             	mov    %rax,%rdi
   22e17:	e8 6e 6a ff ff       	call   1988a <spin_acquire_lock>
   22e1c:	85 c0                	test   %eax,%eax
   22e1e:	0f 85 d6 00 00 00    	jne    22efa <dlrealloc+0x1eb>
   22e24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   22e28:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   22e2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e30:	b9 01 00 00 00       	mov    $0x1,%ecx
   22e35:	48 89 c7             	mov    %rax,%rdi
   22e38:	e8 98 ec ff ff       	call   21ad5 <try_realloc_chunk>
   22e3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   22e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e45:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   22e4b:	83 e0 02             	and    $0x2,%eax
   22e4e:	85 c0                	test   %eax,%eax
   22e50:	74 11                	je     22e63 <dlrealloc+0x154>
   22e52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e56:	48 05 74 03 00 00    	add    $0x374,%rax
   22e5c:	ba 00 00 00 00       	mov    $0x0,%edx
   22e61:	89 10                	mov    %edx,(%rax)
   22e63:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   22e68:	74 21                	je     22e8b <dlrealloc+0x17c>
   22e6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22e6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e72:	48 89 d6             	mov    %rdx,%rsi
   22e75:	48 89 c7             	mov    %rax,%rdi
   22e78:	e8 9a 6e ff ff       	call   19d17 <do_check_inuse_chunk>
   22e7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22e81:	48 83 c0 10          	add    $0x10,%rax
   22e85:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   22e89:	eb 6f                	jmp    22efa <dlrealloc+0x1eb>
   22e8b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22e8f:	48 89 c7             	mov    %rax,%rdi
   22e92:	e8 90 cb ff ff       	call   1fa27 <dlmalloc>
   22e97:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   22e9b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   22ea0:	74 58                	je     22efa <dlrealloc+0x1eb>
   22ea2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22ea6:	48 8b 40 08          	mov    0x8(%rax),%rax
   22eaa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   22eae:	48 83 e8 10          	sub    $0x10,%rax
   22eb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22eba:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   22ebe:	48 0f 46 45 c0       	cmovbe -0x40(%rbp),%rax
   22ec3:	48 89 c2             	mov    %rax,%rdx
   22ec6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   22eca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22ece:	48 89 ce             	mov    %rcx,%rsi
   22ed1:	48 89 c7             	mov    %rax,%rdi
   22ed4:	e8 16 05 00 00       	call   233ef <memcpy>
   22ed9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22edd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22ee1:	be 00 00 00 00       	mov    $0x0,%esi
   22ee6:	48 89 c7             	mov    %rax,%rdi
   22ee9:	e8 95 07 00 00       	call   23683 <memset>
   22eee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22ef2:	48 89 c7             	mov    %rax,%rdi
   22ef5:	e8 28 d6 ff ff       	call   20522 <dlfree>
   22efa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22efe:	c9                   	leave  
   22eff:	c3                   	ret    

0000000000022f00 <dlmemalign>:
   22f00:	f3 0f 1e fa          	endbr64 
   22f04:	55                   	push   %rbp
   22f05:	48 89 e5             	mov    %rsp,%rbp
   22f08:	48 83 ec 10          	sub    $0x10,%rsp
   22f0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22f10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22f14:	48 83 7d f8 10       	cmpq   $0x10,-0x8(%rbp)
   22f19:	77 0e                	ja     22f29 <dlmemalign+0x29>
   22f1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22f1f:	48 89 c7             	mov    %rax,%rdi
   22f22:	e8 00 cb ff ff       	call   1fa27 <dlmalloc>
   22f27:	eb 17                	jmp    22f40 <dlmemalign+0x40>
   22f29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22f31:	48 89 c6             	mov    %rax,%rsi
   22f34:	48 8d 3d e5 ef 03 00 	lea    0x3efe5(%rip),%rdi        # 61f20 <_gm_>
   22f3b:	e8 6a f9 ff ff       	call   228aa <internal_memalign>
   22f40:	c9                   	leave  
   22f41:	c3                   	ret    

0000000000022f42 <dlposix_memalign>:
   22f42:	f3 0f 1e fa          	endbr64 
   22f46:	55                   	push   %rbp
   22f47:	48 89 e5             	mov    %rsp,%rbp
   22f4a:	48 83 ec 40          	sub    $0x40,%rsp
   22f4e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   22f52:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   22f56:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   22f5a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   22f61:	00 
   22f62:	48 83 7d d0 10       	cmpq   $0x10,-0x30(%rbp)
   22f67:	75 12                	jne    22f7b <dlposix_memalign+0x39>
   22f69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22f6d:	48 89 c7             	mov    %rax,%rdi
   22f70:	e8 b2 ca ff ff       	call   1fa27 <dlmalloc>
   22f75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   22f79:	eb 78                	jmp    22ff3 <dlposix_memalign+0xb1>
   22f7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22f7f:	48 c1 e8 03          	shr    $0x3,%rax
   22f83:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   22f87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22f8b:	83 e0 07             	and    $0x7,%eax
   22f8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   22f92:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   22f97:	75 18                	jne    22fb1 <dlposix_memalign+0x6f>
   22f99:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   22f9e:	74 11                	je     22fb1 <dlposix_memalign+0x6f>
   22fa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22fa4:	48 83 e8 01          	sub    $0x1,%rax
   22fa8:	48 23 45 f0          	and    -0x10(%rbp),%rax
   22fac:	48 85 c0             	test   %rax,%rax
   22faf:	74 07                	je     22fb8 <dlposix_memalign+0x76>
   22fb1:	b8 16 00 00 00       	mov    $0x16,%eax
   22fb6:	eb 59                	jmp    23011 <dlposix_memalign+0xcf>
   22fb8:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   22fbf:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   22fc3:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   22fc7:	77 2a                	ja     22ff3 <dlposix_memalign+0xb1>
   22fc9:	48 83 7d d0 1f       	cmpq   $0x1f,-0x30(%rbp)
   22fce:	77 08                	ja     22fd8 <dlposix_memalign+0x96>
   22fd0:	48 c7 45 d0 20 00 00 	movq   $0x20,-0x30(%rbp)
   22fd7:	00 
   22fd8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   22fdc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22fe0:	48 89 c6             	mov    %rax,%rsi
   22fe3:	48 8d 3d 36 ef 03 00 	lea    0x3ef36(%rip),%rdi        # 61f20 <_gm_>
   22fea:	e8 bb f8 ff ff       	call   228aa <internal_memalign>
   22fef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   22ff3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   22ff8:	75 07                	jne    23001 <dlposix_memalign+0xbf>
   22ffa:	b8 0c 00 00 00       	mov    $0xc,%eax
   22fff:	eb 10                	jmp    23011 <dlposix_memalign+0xcf>
   23001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23005:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23009:	48 89 10             	mov    %rdx,(%rax)
   2300c:	b8 00 00 00 00       	mov    $0x0,%eax
   23011:	c9                   	leave  
   23012:	c3                   	ret    

0000000000023013 <dlmallinfo>:
   23013:	f3 0f 1e fa          	endbr64 
   23017:	55                   	push   %rbp
   23018:	48 89 e5             	mov    %rsp,%rbp
   2301b:	48 83 ec 20          	sub    $0x20,%rsp
   2301f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23023:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2302a:	00 00 
   2302c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23030:	31 c0                	xor    %eax,%eax
   23032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23036:	48 8d 35 e3 ee 03 00 	lea    0x3eee3(%rip),%rsi        # 61f20 <_gm_>
   2303d:	48 89 c7             	mov    %rax,%rdi
   23040:	e8 42 7a ff ff       	call   1aa87 <internal_mallinfo>
   23045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23049:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   23050:	00 00 
   23052:	74 05                	je     23059 <dlmallinfo+0x46>
   23054:	e8 9e 07 00 00       	call   237f7 <__stack_chk_fail>
   23059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2305d:	c9                   	leave  
   2305e:	c3                   	ret    

000000000002305f <__memcpy>:
   2305f:	f3 0f 1e fa          	endbr64 
   23063:	55                   	push   %rbp
   23064:	48 89 e5             	mov    %rsp,%rbp
   23067:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2306b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2306f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23073:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23077:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2307b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2307f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23083:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   23088:	0f 84 02 01 00 00    	je     23190 <__memcpy+0x131>
   2308e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23092:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   23096:	0f 84 f4 00 00 00    	je     23190 <__memcpy+0x131>
   2309c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   230a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   230a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   230a8:	48 0b 45 f8          	or     -0x8(%rbp),%rax
   230ac:	83 e0 07             	and    $0x7,%eax
   230af:	48 85 c0             	test   %rax,%rax
   230b2:	74 68                	je     2311c <__memcpy+0xbd>
   230b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   230b8:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   230bc:	83 e0 07             	and    $0x7,%eax
   230bf:	48 85 c0             	test   %rax,%rax
   230c2:	75 07                	jne    230cb <__memcpy+0x6c>
   230c4:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   230c9:	77 0a                	ja     230d5 <__memcpy+0x76>
   230cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   230cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   230d3:	eb 16                	jmp    230eb <__memcpy+0x8c>
   230d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   230d9:	83 e0 07             	and    $0x7,%eax
   230dc:	ba 08 00 00 00       	mov    $0x8,%edx
   230e1:	48 29 c2             	sub    %rax,%rdx
   230e4:	48 89 d0             	mov    %rdx,%rax
   230e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   230eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   230ef:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   230f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   230f7:	48 8d 42 01          	lea    0x1(%rdx),%rax
   230fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   230ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23103:	48 8d 48 01          	lea    0x1(%rax),%rcx
   23107:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   2310b:	0f b6 12             	movzbl (%rdx),%edx
   2310e:	88 10                	mov    %dl,(%rax)
   23110:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   23115:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2311a:	75 d7                	jne    230f3 <__memcpy+0x94>
   2311c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23120:	48 c1 e8 03          	shr    $0x3,%rax
   23124:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23128:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2312d:	74 24                	je     23153 <__memcpy+0xf4>
   2312f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23133:	48 8b 10             	mov    (%rax),%rdx
   23136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2313a:	48 89 10             	mov    %rdx,(%rax)
   2313d:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   23142:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   23147:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2314c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   23151:	75 dc                	jne    2312f <__memcpy+0xd0>
   23153:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23157:	83 e0 07             	and    $0x7,%eax
   2315a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2315e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   23163:	74 2e                	je     23193 <__memcpy+0x134>
   23165:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23169:	48 8d 42 01          	lea    0x1(%rdx),%rax
   2316d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23171:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23175:	48 8d 48 01          	lea    0x1(%rax),%rcx
   23179:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   2317d:	0f b6 12             	movzbl (%rdx),%edx
   23180:	88 10                	mov    %dl,(%rax)
   23182:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   23187:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2318c:	75 d7                	jne    23165 <__memcpy+0x106>
   2318e:	eb 03                	jmp    23193 <__memcpy+0x134>
   23190:	90                   	nop
   23191:	eb 01                	jmp    23194 <__memcpy+0x135>
   23193:	90                   	nop
   23194:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23198:	5d                   	pop    %rbp
   23199:	c3                   	ret    

000000000002319a <memcpy_verw>:
   2319a:	f3 0f 1e fa          	endbr64 
   2319e:	55                   	push   %rbp
   2319f:	48 89 e5             	mov    %rsp,%rbp
   231a2:	48 83 ec 40          	sub    $0x40,%rsp
   231a6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   231aa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   231ae:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   231b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   231b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   231ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   231be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   231c2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   231c7:	74 0e                	je     231d7 <memcpy_verw+0x3d>
   231c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   231cd:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   231d1:	0f 85 80 00 00 00    	jne    23257 <memcpy_verw+0xbd>
   231d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   231db:	e9 b5 00 00 00       	jmp    23295 <memcpy_verw+0xfb>
   231e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   231e4:	83 e0 07             	and    $0x7,%eax
   231e7:	48 85 c0             	test   %rax,%rax
   231ea:	75 49                	jne    23235 <memcpy_verw+0x9b>
   231ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   231f0:	83 e0 07             	and    $0x7,%eax
   231f3:	48 85 c0             	test   %rax,%rax
   231f6:	75 3d                	jne    23235 <memcpy_verw+0x9b>
   231f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   231fc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   23200:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23204:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   23208:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2320c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23210:	48 89 ce             	mov    %rcx,%rsi
   23213:	48 89 c7             	mov    %rax,%rdi
   23216:	e8 7c 00 00 00       	call   23297 <memcpy_nochecks>
   2321b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2321f:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   23223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23227:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   2322b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2322f:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   23233:	eb 22                	jmp    23257 <memcpy_verw+0xbd>
   23235:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23239:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2323d:	48 89 d6             	mov    %rdx,%rsi
   23240:	48 89 c7             	mov    %rax,%rdi
   23243:	e8 b8 72 00 00       	call   2a500 <__memcpy_verw>
   23248:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2324d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   23252:	48 83 6d c8 01       	subq   $0x1,-0x38(%rbp)
   23257:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   2325c:	77 82                	ja     231e0 <memcpy_verw+0x46>
   2325e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   23265:	eb 21                	jmp    23288 <memcpy_verw+0xee>
   23267:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2326b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2326f:	48 89 d6             	mov    %rdx,%rsi
   23272:	48 89 c7             	mov    %rax,%rdi
   23275:	e8 86 72 00 00       	call   2a500 <__memcpy_verw>
   2327a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2327f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   23284:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   23288:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2328b:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   2328f:	77 d6                	ja     23267 <memcpy_verw+0xcd>
   23291:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23295:	c9                   	leave  
   23296:	c3                   	ret    

0000000000023297 <memcpy_nochecks>:
   23297:	f3 0f 1e fa          	endbr64 
   2329b:	55                   	push   %rbp
   2329c:	48 89 e5             	mov    %rsp,%rbp
   2329f:	48 83 ec 18          	sub    $0x18,%rsp
   232a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   232a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   232ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   232af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   232b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   232b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   232bb:	48 89 ce             	mov    %rcx,%rsi
   232be:	48 89 c7             	mov    %rax,%rdi
   232c1:	e8 99 fd ff ff       	call   2305f <__memcpy>
   232c6:	c9                   	leave  
   232c7:	c3                   	ret    

00000000000232c8 <copy_external_memory>:
   232c8:	f3 0f 1e fa          	endbr64 
   232cc:	55                   	push   %rbp
   232cd:	48 89 e5             	mov    %rsp,%rbp
   232d0:	48 83 ec 50          	sub    $0x50,%rsp
   232d4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   232d8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   232dc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   232e0:	89 c8                	mov    %ecx,%eax
   232e2:	88 45 b4             	mov    %al,-0x4c(%rbp)
   232e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   232ec:	00 00 
   232ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   232f2:	31 c0                	xor    %eax,%eax
   232f4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   232fb:	00 
   232fc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   23303:	00 
   23304:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23308:	83 e0 07             	and    $0x7,%eax
   2330b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2330e:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   23315:	00 
   23316:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2331b:	0f 84 b7 00 00 00    	je     233d8 <copy_external_memory+0x110>
   23321:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   23325:	75 07                	jne    2332e <copy_external_memory+0x66>
   23327:	48 83 7d b8 08       	cmpq   $0x8,-0x48(%rbp)
   2332c:	74 6a                	je     23398 <copy_external_memory+0xd0>
   2332e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   23331:	48 f7 d8             	neg    %rax
   23334:	48 89 c2             	mov    %rax,%rdx
   23337:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2333b:	48 01 c2             	add    %rax,%rdx
   2333e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23342:	48 89 d6             	mov    %rdx,%rsi
   23345:	48 89 c7             	mov    %rax,%rdi
   23348:	e8 d3 71 00 00       	call   2a520 <__memcpy_8a>
   2334d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   23351:	74 35                	je     23388 <copy_external_memory+0xc0>
   23353:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   23356:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2335a:	48 01 d0             	add    %rdx,%rax
   2335d:	48 83 f8 08          	cmp    $0x8,%rax
   23361:	76 25                	jbe    23388 <copy_external_memory+0xc0>
   23363:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   23366:	ba 08 00 00 00       	mov    $0x8,%edx
   2336b:	48 29 c2             	sub    %rax,%rdx
   2336e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23372:	48 01 c2             	add    %rax,%rdx
   23375:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23379:	48 83 c0 08          	add    $0x8,%rax
   2337d:	48 89 d6             	mov    %rdx,%rsi
   23380:	48 89 c7             	mov    %rax,%rdi
   23383:	e8 98 71 00 00       	call   2a520 <__memcpy_8a>
   23388:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2338b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   2338f:	48 01 d0             	add    %rdx,%rax
   23392:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   23396:	eb 08                	jmp    233a0 <copy_external_memory+0xd8>
   23398:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2339c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   233a0:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
   233a4:	74 19                	je     233bf <copy_external_memory+0xf7>
   233a6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   233aa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   233ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   233b2:	48 89 ce             	mov    %rcx,%rsi
   233b5:	48 89 c7             	mov    %rax,%rdi
   233b8:	e8 dd fd ff ff       	call   2319a <memcpy_verw>
   233bd:	eb 1a                	jmp    233d9 <copy_external_memory+0x111>
   233bf:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   233c3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   233c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   233cb:	48 89 ce             	mov    %rcx,%rsi
   233ce:	48 89 c7             	mov    %rax,%rdi
   233d1:	e8 c1 fe ff ff       	call   23297 <memcpy_nochecks>
   233d6:	eb 01                	jmp    233d9 <copy_external_memory+0x111>
   233d8:	90                   	nop
   233d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   233dd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   233e4:	00 00 
   233e6:	74 05                	je     233ed <copy_external_memory+0x125>
   233e8:	e8 0a 04 00 00       	call   237f7 <__stack_chk_fail>
   233ed:	c9                   	leave  
   233ee:	c3                   	ret    

00000000000233ef <memcpy>:
   233ef:	f3 0f 1e fa          	endbr64 
   233f3:	55                   	push   %rbp
   233f4:	48 89 e5             	mov    %rsp,%rbp
   233f7:	48 83 ec 40          	sub    $0x40,%rsp
   233fb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   233ff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23403:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23407:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   2340c:	74 0a                	je     23418 <memcpy+0x29>
   2340e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23412:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23416:	75 09                	jne    23421 <memcpy+0x32>
   23418:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2341c:	e9 5e 01 00 00       	jmp    2357f <memcpy+0x190>
   23421:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   23425:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23429:	48 89 d6             	mov    %rdx,%rsi
   2342c:	48 89 c7             	mov    %rax,%rdi
   2342f:	e8 e6 c2 fe ff       	call   f71a <sgx_is_within_enclave>
   23434:	85 c0                	test   %eax,%eax
   23436:	0f 94 c0             	sete   %al
   23439:	88 45 e6             	mov    %al,-0x1a(%rbp)
   2343c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   23440:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23444:	48 89 d6             	mov    %rdx,%rsi
   23447:	48 89 c7             	mov    %rax,%rdi
   2344a:	e8 cb c2 fe ff       	call   f71a <sgx_is_within_enclave>
   2344f:	85 c0                	test   %eax,%eax
   23451:	0f 94 c0             	sete   %al
   23454:	88 45 e7             	mov    %al,-0x19(%rbp)
   23457:	0f b6 45 e6          	movzbl -0x1a(%rbp),%eax
   2345b:	83 f0 01             	xor    $0x1,%eax
   2345e:	84 c0                	test   %al,%al
   23460:	74 3e                	je     234a0 <memcpy+0xb1>
   23462:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
   23466:	74 1c                	je     23484 <memcpy+0x95>
   23468:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2346c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   23470:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23474:	48 89 ce             	mov    %rcx,%rsi
   23477:	48 89 c7             	mov    %rax,%rdi
   2347a:	e8 1b fd ff ff       	call   2319a <memcpy_verw>
   2347f:	e9 fb 00 00 00       	jmp    2357f <memcpy+0x190>
   23484:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   23488:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2348c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23490:	48 89 ce             	mov    %rcx,%rsi
   23493:	48 89 c7             	mov    %rax,%rdi
   23496:	e8 fc fd ff ff       	call   23297 <memcpy_nochecks>
   2349b:	e9 df 00 00 00       	jmp    2357f <memcpy+0x190>
   234a0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   234a7:	00 
   234a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   234ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   234b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   234b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   234b8:	e9 9b 00 00 00       	jmp    23558 <memcpy+0x169>
   234bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   234c1:	83 e0 07             	and    $0x7,%eax
   234c4:	48 85 c0             	test   %rax,%rax
   234c7:	75 49                	jne    23512 <memcpy+0x123>
   234c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   234cd:	83 e0 07             	and    $0x7,%eax
   234d0:	48 85 c0             	test   %rax,%rax
   234d3:	75 3d                	jne    23512 <memcpy+0x123>
   234d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   234d9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   234dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   234e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   234e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   234e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   234ed:	48 89 ce             	mov    %rcx,%rsi
   234f0:	48 89 c7             	mov    %rax,%rdi
   234f3:	e8 9f fd ff ff       	call   23297 <memcpy_nochecks>
   234f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234fc:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   23500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23504:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   23508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2350c:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   23510:	eb 46                	jmp    23558 <memcpy+0x169>
   23512:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23516:	83 e0 07             	and    $0x7,%eax
   23519:	ba 08 00 00 00       	mov    $0x8,%edx
   2351e:	48 29 c2             	sub    %rax,%rdx
   23521:	48 89 d0             	mov    %rdx,%rax
   23524:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23528:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
   2352c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   23530:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   23534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23538:	48 89 c7             	mov    %rax,%rdi
   2353b:	e8 88 fd ff ff       	call   232c8 <copy_external_memory>
   23540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23544:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   23548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2354c:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   23550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23554:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   23558:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   2355d:	0f 87 5a ff ff ff    	ja     234bd <memcpy+0xce>
   23563:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
   23567:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2356b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2356f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23573:	48 89 c7             	mov    %rax,%rdi
   23576:	e8 4d fd ff ff       	call   232c8 <copy_external_memory>
   2357b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2357f:	c9                   	leave  
   23580:	c3                   	ret    

0000000000023581 <memset_verw>:
   23581:	f3 0f 1e fa          	endbr64 
   23585:	55                   	push   %rbp
   23586:	48 89 e5             	mov    %rsp,%rbp
   23589:	48 83 ec 40          	sub    $0x40,%rsp
   2358d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23591:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   23594:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23598:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2359f:	00 00 
   235a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   235a5:	31 c0                	xor    %eax,%eax
   235a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   235af:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   235b4:	74 07                	je     235bd <memset_verw+0x3c>
   235b6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   235bb:	75 09                	jne    235c6 <memset_verw+0x45>
   235bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235c1:	e9 a7 00 00 00       	jmp    2366d <memset_verw+0xec>
   235c6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   235c9:	88 45 e3             	mov    %al,-0x1d(%rbp)
   235cc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   235d3:	00 
   235d4:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   235d7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   235db:	ba 08 00 00 00       	mov    $0x8,%edx
   235e0:	89 ce                	mov    %ecx,%esi
   235e2:	48 89 c7             	mov    %rax,%rdi
   235e5:	e8 99 00 00 00       	call   23683 <memset>
   235ea:	eb 48                	jmp    23634 <memset_verw+0xb3>
   235ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   235f0:	83 e0 07             	and    $0x7,%eax
   235f3:	48 85 c0             	test   %rax,%rax
   235f6:	75 1f                	jne    23617 <memset_verw+0x96>
   235f8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   235fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23600:	48 89 d6             	mov    %rdx,%rsi
   23603:	48 89 c7             	mov    %rax,%rdi
   23606:	e8 15 6f 00 00       	call   2a520 <__memcpy_8a>
   2360b:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   23610:	48 83 6d c8 08       	subq   $0x8,-0x38(%rbp)
   23615:	eb 1d                	jmp    23634 <memset_verw+0xb3>
   23617:	48 8d 55 e3          	lea    -0x1d(%rbp),%rdx
   2361b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2361f:	48 89 d6             	mov    %rdx,%rsi
   23622:	48 89 c7             	mov    %rax,%rdi
   23625:	e8 d6 6e 00 00       	call   2a500 <__memcpy_verw>
   2362a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2362f:	48 83 6d c8 01       	subq   $0x1,-0x38(%rbp)
   23634:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   23639:	77 b1                	ja     235ec <memset_verw+0x6b>
   2363b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   23642:	eb 1c                	jmp    23660 <memset_verw+0xdf>
   23644:	48 8d 55 e3          	lea    -0x1d(%rbp),%rdx
   23648:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2364c:	48 89 d6             	mov    %rdx,%rsi
   2364f:	48 89 c7             	mov    %rax,%rdi
   23652:	e8 a9 6e 00 00       	call   2a500 <__memcpy_verw>
   23657:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2365c:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   23660:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   23663:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   23667:	77 db                	ja     23644 <memset_verw+0xc3>
   23669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2366d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   23671:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   23678:	00 00 
   2367a:	74 05                	je     23681 <memset_verw+0x100>
   2367c:	e8 76 01 00 00       	call   237f7 <__stack_chk_fail>
   23681:	c9                   	leave  
   23682:	c3                   	ret    

0000000000023683 <memset>:
   23683:	f3 0f 1e fa          	endbr64 
   23687:	55                   	push   %rbp
   23688:	48 89 e5             	mov    %rsp,%rbp
   2368b:	48 83 ec 20          	sub    $0x20,%rsp
   2368f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23693:	89 75 f4             	mov    %esi,-0xc(%rbp)
   23696:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2369a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2369e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   236a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236a5:	89 ce                	mov    %ecx,%esi
   236a7:	48 89 c7             	mov    %rax,%rdi
   236aa:	e8 81 6e 00 00       	call   2a530 <__memset>
   236af:	c9                   	leave  
   236b0:	c3                   	ret    

00000000000236b1 <memset_s>:
   236b1:	f3 0f 1e fa          	endbr64 
   236b5:	55                   	push   %rbp
   236b6:	48 89 e5             	mov    %rsp,%rbp
   236b9:	48 83 ec 30          	sub    $0x30,%rsp
   236bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   236c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   236c5:	89 55 dc             	mov    %edx,-0x24(%rbp)
   236c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   236cc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   236d3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   236d8:	75 09                	jne    236e3 <memset_s+0x32>
   236da:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
   236e1:	eb 33                	jmp    23716 <memset_s+0x65>
   236e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   236e7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   236eb:	76 0f                	jbe    236fc <memset_s+0x4b>
   236ed:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
   236f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   236f8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   236fc:	4c 8b 05 05 7a 01 00 	mov    0x17a05(%rip),%r8        # 3b108 <__memset_vp>
   23703:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   23707:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   2370a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2370e:	89 ce                	mov    %ecx,%esi
   23710:	48 89 c7             	mov    %rax,%rdi
   23713:	41 ff d0             	call   *%r8
   23716:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2371a:	75 07                	jne    23723 <memset_s+0x72>
   2371c:	b8 00 00 00 00       	mov    $0x0,%eax
   23721:	eb 0d                	jmp    23730 <memset_s+0x7f>
   23723:	e8 a1 07 00 00       	call   23ec9 <__errno>
   23728:	8b 55 fc             	mov    -0x4(%rbp),%edx
   2372b:	89 10                	mov    %edx,(%rax)
   2372d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23730:	c9                   	leave  
   23731:	c3                   	ret    

0000000000023732 <memset_verw_s>:
   23732:	f3 0f 1e fa          	endbr64 
   23736:	55                   	push   %rbp
   23737:	48 89 e5             	mov    %rsp,%rbp
   2373a:	48 83 ec 30          	sub    $0x30,%rsp
   2373e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23742:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23746:	89 55 dc             	mov    %edx,-0x24(%rbp)
   23749:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2374d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   23754:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   23759:	75 09                	jne    23764 <memset_verw_s+0x32>
   2375b:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
   23762:	eb 2e                	jmp    23792 <memset_verw_s+0x60>
   23764:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23768:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2376c:	76 0f                	jbe    2377d <memset_verw_s+0x4b>
   2376e:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
   23775:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23779:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2377d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   23781:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   23784:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23788:	89 ce                	mov    %ecx,%esi
   2378a:	48 89 c7             	mov    %rax,%rdi
   2378d:	e8 ef fd ff ff       	call   23581 <memset_verw>
   23792:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   23796:	75 07                	jne    2379f <memset_verw_s+0x6d>
   23798:	b8 00 00 00 00       	mov    $0x0,%eax
   2379d:	eb 0d                	jmp    237ac <memset_verw_s+0x7a>
   2379f:	e8 25 07 00 00       	call   23ec9 <__errno>
   237a4:	8b 55 fc             	mov    -0x4(%rbp),%edx
   237a7:	89 10                	mov    %edx,(%rax)
   237a9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   237ac:	c9                   	leave  
   237ad:	c3                   	ret    

00000000000237ae <tstdc_access_version_dummy1>:
   237ae:	f3 0f 1e fa          	endbr64 
   237b2:	55                   	push   %rbp
   237b3:	48 89 e5             	mov    %rsp,%rbp
   237b6:	c6 05 53 79 01 00 73 	movb   $0x73,0x17953(%rip)        # 3b110 <sgx_tstdc_version>
   237bd:	48 8d 05 4c 79 01 00 	lea    0x1794c(%rip),%rax        # 3b110 <sgx_tstdc_version>
   237c4:	5d                   	pop    %rbp
   237c5:	c3                   	ret    

00000000000237c6 <sgx_init_string_lib>:
   237c6:	f3 0f 1e fa          	endbr64 
   237ca:	55                   	push   %rbp
   237cb:	48 89 e5             	mov    %rsp,%rbp
   237ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   237d2:	b8 00 00 00 00       	mov    $0x0,%eax
   237d7:	5d                   	pop    %rbp
   237d8:	c3                   	ret    

00000000000237d9 <strlen>:
   237d9:	f3 0f 1e fa          	endbr64 
   237dd:	55                   	push   %rbp
   237de:	48 89 e5             	mov    %rsp,%rbp
   237e1:	48 83 ec 10          	sub    $0x10,%rsp
   237e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   237e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   237ed:	48 89 c7             	mov    %rax,%rdi
   237f0:	e8 9b 6d 00 00       	call   2a590 <_libc__strlen>
   237f5:	c9                   	leave  
   237f6:	c3                   	ret    

00000000000237f7 <__stack_chk_fail>:
   237f7:	f3 0f 1e fa          	endbr64 
   237fb:	55                   	push   %rbp
   237fc:	48 89 e5             	mov    %rsp,%rbp
   237ff:	e8 97 e2 00 00       	call   31a9b <abort>

0000000000023804 <__stack_chk_fail_local>:
   23804:	f3 0f 1e fa          	endbr64 
   23808:	55                   	push   %rbp
   23809:	48 89 e5             	mov    %rsp,%rbp
   2380c:	e8 e6 ff ff ff       	call   237f7 <__stack_chk_fail>

0000000000023811 <__intel_security_check_cookie>:
   23811:	f3 0f 1e fa          	endbr64 
   23815:	55                   	push   %rbp
   23816:	48 89 e5             	mov    %rsp,%rbp
   23819:	48 83 ec 10          	sub    $0x10,%rsp
   2381d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23821:	48 8b 05 e8 65 01 00 	mov    0x165e8(%rip),%rax        # 39e10 <__intel_security_cookie>
   23828:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   2382c:	74 05                	je     23833 <__intel_security_check_cookie+0x22>
   2382e:	e8 68 e2 00 00       	call   31a9b <abort>
   23833:	90                   	nop
   23834:	c9                   	leave  
   23835:	c3                   	ret    

0000000000023836 <sgx_thread_spin_init>:
   23836:	f3 0f 1e fa          	endbr64 
   2383a:	55                   	push   %rbp
   2383b:	48 89 e5             	mov    %rsp,%rbp
   2383e:	48 83 ec 10          	sub    $0x10,%rsp
   23842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23846:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2384b:	74 15                	je     23862 <sgx_thread_spin_init+0x2c>
   2384d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23851:	be 18 00 00 00       	mov    $0x18,%esi
   23856:	48 89 c7             	mov    %rax,%rdi
   23859:	e8 bc be fe ff       	call   f71a <sgx_is_within_enclave>
   2385e:	85 c0                	test   %eax,%eax
   23860:	75 07                	jne    23869 <sgx_thread_spin_init+0x33>
   23862:	b8 01 00 00 00       	mov    $0x1,%eax
   23867:	eb 05                	jmp    2386e <sgx_thread_spin_init+0x38>
   23869:	b8 00 00 00 00       	mov    $0x0,%eax
   2386e:	84 c0                	test   %al,%al
   23870:	74 07                	je     23879 <sgx_thread_spin_init+0x43>
   23872:	b8 16 00 00 00       	mov    $0x16,%eax
   23877:	eb 27                	jmp    238a0 <sgx_thread_spin_init+0x6a>
   23879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2387d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23888:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   2388f:	00 
   23890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23894:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   2389b:	b8 00 00 00 00       	mov    $0x0,%eax
   238a0:	c9                   	leave  
   238a1:	c3                   	ret    

00000000000238a2 <sgx_thread_spin_destroy>:
   238a2:	f3 0f 1e fa          	endbr64 
   238a6:	55                   	push   %rbp
   238a7:	48 89 e5             	mov    %rsp,%rbp
   238aa:	48 83 ec 10          	sub    $0x10,%rsp
   238ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   238b2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   238b7:	74 15                	je     238ce <sgx_thread_spin_destroy+0x2c>
   238b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   238bd:	be 18 00 00 00       	mov    $0x18,%esi
   238c2:	48 89 c7             	mov    %rax,%rdi
   238c5:	e8 50 be fe ff       	call   f71a <sgx_is_within_enclave>
   238ca:	85 c0                	test   %eax,%eax
   238cc:	75 07                	jne    238d5 <sgx_thread_spin_destroy+0x33>
   238ce:	b8 01 00 00 00       	mov    $0x1,%eax
   238d3:	eb 05                	jmp    238da <sgx_thread_spin_destroy+0x38>
   238d5:	b8 00 00 00 00       	mov    $0x0,%eax
   238da:	84 c0                	test   %al,%al
   238dc:	74 07                	je     238e5 <sgx_thread_spin_destroy+0x43>
   238de:	b8 16 00 00 00       	mov    $0x16,%eax
   238e3:	eb 54                	jmp    23939 <sgx_thread_spin_destroy+0x97>
   238e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   238e9:	48 83 c0 08          	add    $0x8,%rax
   238ed:	48 89 c7             	mov    %rax,%rdi
   238f0:	e8 a7 5d ff ff       	call   1969c <sgx_spin_lock>
   238f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   238f9:	48 8b 40 10          	mov    0x10(%rax),%rax
   238fd:	48 85 c0             	test   %rax,%rax
   23900:	74 17                	je     23919 <sgx_thread_spin_destroy+0x77>
   23902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23906:	48 83 c0 08          	add    $0x8,%rax
   2390a:	48 89 c7             	mov    %rax,%rdi
   2390d:	e8 25 5e ff ff       	call   19737 <sgx_spin_unlock>
   23912:	b8 10 00 00 00       	mov    $0x10,%eax
   23917:	eb 20                	jmp    23939 <sgx_thread_spin_destroy+0x97>
   23919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2391d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23928:	48 83 c0 08          	add    $0x8,%rax
   2392c:	48 89 c7             	mov    %rax,%rdi
   2392f:	e8 03 5e ff ff       	call   19737 <sgx_spin_unlock>
   23934:	b8 00 00 00 00       	mov    $0x0,%eax
   23939:	c9                   	leave  
   2393a:	c3                   	ret    

000000000002393b <sgx_thread_spin_trylock>:
   2393b:	f3 0f 1e fa          	endbr64 
   2393f:	55                   	push   %rbp
   23940:	48 89 e5             	mov    %rsp,%rbp
   23943:	48 83 ec 20          	sub    $0x20,%rsp
   23947:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2394b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   23950:	74 15                	je     23967 <sgx_thread_spin_trylock+0x2c>
   23952:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23956:	be 18 00 00 00       	mov    $0x18,%esi
   2395b:	48 89 c7             	mov    %rax,%rdi
   2395e:	e8 b7 bd fe ff       	call   f71a <sgx_is_within_enclave>
   23963:	85 c0                	test   %eax,%eax
   23965:	75 07                	jne    2396e <sgx_thread_spin_trylock+0x33>
   23967:	b8 01 00 00 00       	mov    $0x1,%eax
   2396c:	eb 05                	jmp    23973 <sgx_thread_spin_trylock+0x38>
   2396e:	b8 00 00 00 00       	mov    $0x0,%eax
   23973:	84 c0                	test   %al,%al
   23975:	74 0a                	je     23981 <sgx_thread_spin_trylock+0x46>
   23977:	b8 16 00 00 00       	mov    $0x16,%eax
   2397c:	e9 a7 00 00 00       	jmp    23a28 <sgx_thread_spin_trylock+0xed>
   23981:	e8 70 dd 00 00       	call   316f6 <get_thread_data>
   23986:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2398a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2398e:	48 83 c0 08          	add    $0x8,%rax
   23992:	48 89 c7             	mov    %rax,%rdi
   23995:	e8 02 5d ff ff       	call   1969c <sgx_spin_lock>
   2399a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2399e:	48 8b 40 10          	mov    0x10(%rax),%rax
   239a2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   239a6:	75 29                	jne    239d1 <sgx_thread_spin_trylock+0x96>
   239a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239ac:	48 8b 00             	mov    (%rax),%rax
   239af:	48 8d 50 01          	lea    0x1(%rax),%rdx
   239b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239b7:	48 89 10             	mov    %rdx,(%rax)
   239ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239be:	48 83 c0 08          	add    $0x8,%rax
   239c2:	48 89 c7             	mov    %rax,%rdi
   239c5:	e8 6d 5d ff ff       	call   19737 <sgx_spin_unlock>
   239ca:	b8 00 00 00 00       	mov    $0x0,%eax
   239cf:	eb 57                	jmp    23a28 <sgx_thread_spin_trylock+0xed>
   239d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239d5:	48 8b 40 10          	mov    0x10(%rax),%rax
   239d9:	48 85 c0             	test   %rax,%rax
   239dc:	75 35                	jne    23a13 <sgx_thread_spin_trylock+0xd8>
   239de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239e2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   239e6:	48 89 50 10          	mov    %rdx,0x10(%rax)
   239ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239ee:	48 8b 00             	mov    (%rax),%rax
   239f1:	48 8d 50 01          	lea    0x1(%rax),%rdx
   239f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   239f9:	48 89 10             	mov    %rdx,(%rax)
   239fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a00:	48 83 c0 08          	add    $0x8,%rax
   23a04:	48 89 c7             	mov    %rax,%rdi
   23a07:	e8 2b 5d ff ff       	call   19737 <sgx_spin_unlock>
   23a0c:	b8 00 00 00 00       	mov    $0x0,%eax
   23a11:	eb 15                	jmp    23a28 <sgx_thread_spin_trylock+0xed>
   23a13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a17:	48 83 c0 08          	add    $0x8,%rax
   23a1b:	48 89 c7             	mov    %rax,%rdi
   23a1e:	e8 14 5d ff ff       	call   19737 <sgx_spin_unlock>
   23a23:	b8 10 00 00 00       	mov    $0x10,%eax
   23a28:	c9                   	leave  
   23a29:	c3                   	ret    

0000000000023a2a <sgx_thread_spin_unlock>:
   23a2a:	f3 0f 1e fa          	endbr64 
   23a2e:	55                   	push   %rbp
   23a2f:	48 89 e5             	mov    %rsp,%rbp
   23a32:	48 83 ec 20          	sub    $0x20,%rsp
   23a36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23a3a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   23a3f:	74 15                	je     23a56 <sgx_thread_spin_unlock+0x2c>
   23a41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a45:	be 18 00 00 00       	mov    $0x18,%esi
   23a4a:	48 89 c7             	mov    %rax,%rdi
   23a4d:	e8 c8 bc fe ff       	call   f71a <sgx_is_within_enclave>
   23a52:	85 c0                	test   %eax,%eax
   23a54:	75 07                	jne    23a5d <sgx_thread_spin_unlock+0x33>
   23a56:	b8 01 00 00 00       	mov    $0x1,%eax
   23a5b:	eb 05                	jmp    23a62 <sgx_thread_spin_unlock+0x38>
   23a5d:	b8 00 00 00 00       	mov    $0x0,%eax
   23a62:	84 c0                	test   %al,%al
   23a64:	74 0a                	je     23a70 <sgx_thread_spin_unlock+0x46>
   23a66:	b8 16 00 00 00       	mov    $0x16,%eax
   23a6b:	e9 a6 00 00 00       	jmp    23b16 <sgx_thread_spin_unlock+0xec>
   23a70:	e8 81 dc 00 00       	call   316f6 <get_thread_data>
   23a75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a7d:	48 83 c0 08          	add    $0x8,%rax
   23a81:	48 89 c7             	mov    %rax,%rdi
   23a84:	e8 13 5c ff ff       	call   1969c <sgx_spin_lock>
   23a89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a8d:	48 8b 40 10          	mov    0x10(%rax),%rax
   23a91:	48 85 c0             	test   %rax,%rax
   23a94:	75 17                	jne    23aad <sgx_thread_spin_unlock+0x83>
   23a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a9a:	48 83 c0 08          	add    $0x8,%rax
   23a9e:	48 89 c7             	mov    %rax,%rdi
   23aa1:	e8 91 5c ff ff       	call   19737 <sgx_spin_unlock>
   23aa6:	b8 01 00 00 00       	mov    $0x1,%eax
   23aab:	eb 69                	jmp    23b16 <sgx_thread_spin_unlock+0xec>
   23aad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ab1:	48 8b 40 10          	mov    0x10(%rax),%rax
   23ab5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   23ab9:	74 17                	je     23ad2 <sgx_thread_spin_unlock+0xa8>
   23abb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23abf:	48 83 c0 08          	add    $0x8,%rax
   23ac3:	48 89 c7             	mov    %rax,%rdi
   23ac6:	e8 6c 5c ff ff       	call   19737 <sgx_spin_unlock>
   23acb:	b8 01 00 00 00       	mov    $0x1,%eax
   23ad0:	eb 44                	jmp    23b16 <sgx_thread_spin_unlock+0xec>
   23ad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ad6:	48 8b 00             	mov    (%rax),%rax
   23ad9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   23add:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ae1:	48 89 10             	mov    %rdx,(%rax)
   23ae4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ae8:	48 8b 00             	mov    (%rax),%rax
   23aeb:	48 85 c0             	test   %rax,%rax
   23aee:	0f 94 c0             	sete   %al
   23af1:	84 c0                	test   %al,%al
   23af3:	74 0c                	je     23b01 <sgx_thread_spin_unlock+0xd7>
   23af5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23af9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   23b00:	00 
   23b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23b05:	48 83 c0 08          	add    $0x8,%rax
   23b09:	48 89 c7             	mov    %rax,%rdi
   23b0c:	e8 26 5c ff ff       	call   19737 <sgx_spin_unlock>
   23b11:	b8 00 00 00 00       	mov    $0x0,%eax
   23b16:	c9                   	leave  
   23b17:	c3                   	ret    

0000000000023b18 <memcpy_s>:
   23b18:	f3 0f 1e fa          	endbr64 
   23b1c:	55                   	push   %rbp
   23b1d:	48 89 e5             	mov    %rsp,%rbp
   23b20:	48 83 ec 30          	sub    $0x30,%rsp
   23b24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23b28:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23b2c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   23b30:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   23b34:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   23b39:	75 0a                	jne    23b45 <memcpy_s+0x2d>
   23b3b:	b8 00 00 00 00       	mov    $0x0,%eax
   23b40:	e9 c1 00 00 00       	jmp    23c06 <memcpy_s+0xee>
   23b45:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   23b4a:	0f 95 c0             	setne  %al
   23b4d:	0f b6 c0             	movzbl %al,%eax
   23b50:	89 45 f4             	mov    %eax,-0xc(%rbp)
   23b53:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   23b57:	75 15                	jne    23b6e <memcpy_s+0x56>
   23b59:	e8 6b 03 00 00       	call   23ec9 <__errno>
   23b5e:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23b64:	b8 16 00 00 00       	mov    $0x16,%eax
   23b69:	e9 98 00 00 00       	jmp    23c06 <memcpy_s+0xee>
   23b6e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   23b73:	74 0a                	je     23b7f <memcpy_s+0x67>
   23b75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23b79:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23b7d:	73 6b                	jae    23bea <memcpy_s+0xd2>
   23b7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23b83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23b87:	be 00 00 00 00       	mov    $0x0,%esi
   23b8c:	48 89 c7             	mov    %rax,%rdi
   23b8f:	e8 ef fa ff ff       	call   23683 <memset>
   23b94:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   23b99:	0f 95 c0             	setne  %al
   23b9c:	0f b6 c0             	movzbl %al,%eax
   23b9f:	89 45 f8             	mov    %eax,-0x8(%rbp)
   23ba2:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   23ba6:	75 12                	jne    23bba <memcpy_s+0xa2>
   23ba8:	e8 1c 03 00 00       	call   23ec9 <__errno>
   23bad:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23bb3:	b8 16 00 00 00       	mov    $0x16,%eax
   23bb8:	eb 4c                	jmp    23c06 <memcpy_s+0xee>
   23bba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23bbe:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23bc2:	0f 93 c0             	setae  %al
   23bc5:	0f b6 c0             	movzbl %al,%eax
   23bc8:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23bcb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   23bcf:	75 12                	jne    23be3 <memcpy_s+0xcb>
   23bd1:	e8 f3 02 00 00       	call   23ec9 <__errno>
   23bd6:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   23bdc:	b8 22 00 00 00       	mov    $0x22,%eax
   23be1:	eb 23                	jmp    23c06 <memcpy_s+0xee>
   23be3:	b8 16 00 00 00       	mov    $0x16,%eax
   23be8:	eb 1c                	jmp    23c06 <memcpy_s+0xee>
   23bea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   23bee:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   23bf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23bf6:	48 89 ce             	mov    %rcx,%rsi
   23bf9:	48 89 c7             	mov    %rax,%rdi
   23bfc:	e8 ee f7 ff ff       	call   233ef <memcpy>
   23c01:	b8 00 00 00 00       	mov    $0x0,%eax
   23c06:	c9                   	leave  
   23c07:	c3                   	ret    

0000000000023c08 <memcpy_verw_s>:
   23c08:	f3 0f 1e fa          	endbr64 
   23c0c:	55                   	push   %rbp
   23c0d:	48 89 e5             	mov    %rsp,%rbp
   23c10:	48 83 ec 30          	sub    $0x30,%rsp
   23c14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23c18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23c1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   23c20:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   23c24:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   23c29:	75 0a                	jne    23c35 <memcpy_verw_s+0x2d>
   23c2b:	b8 00 00 00 00       	mov    $0x0,%eax
   23c30:	e9 c1 00 00 00       	jmp    23cf6 <memcpy_verw_s+0xee>
   23c35:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   23c3a:	0f 95 c0             	setne  %al
   23c3d:	0f b6 c0             	movzbl %al,%eax
   23c40:	89 45 f4             	mov    %eax,-0xc(%rbp)
   23c43:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   23c47:	75 15                	jne    23c5e <memcpy_verw_s+0x56>
   23c49:	e8 7b 02 00 00       	call   23ec9 <__errno>
   23c4e:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23c54:	b8 16 00 00 00       	mov    $0x16,%eax
   23c59:	e9 98 00 00 00       	jmp    23cf6 <memcpy_verw_s+0xee>
   23c5e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   23c63:	74 0a                	je     23c6f <memcpy_verw_s+0x67>
   23c65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c69:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23c6d:	73 6b                	jae    23cda <memcpy_verw_s+0xd2>
   23c6f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23c73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23c77:	be 00 00 00 00       	mov    $0x0,%esi
   23c7c:	48 89 c7             	mov    %rax,%rdi
   23c7f:	e8 fd f8 ff ff       	call   23581 <memset_verw>
   23c84:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   23c89:	0f 95 c0             	setne  %al
   23c8c:	0f b6 c0             	movzbl %al,%eax
   23c8f:	89 45 f8             	mov    %eax,-0x8(%rbp)
   23c92:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   23c96:	75 12                	jne    23caa <memcpy_verw_s+0xa2>
   23c98:	e8 2c 02 00 00       	call   23ec9 <__errno>
   23c9d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23ca3:	b8 16 00 00 00       	mov    $0x16,%eax
   23ca8:	eb 4c                	jmp    23cf6 <memcpy_verw_s+0xee>
   23caa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23cae:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23cb2:	0f 93 c0             	setae  %al
   23cb5:	0f b6 c0             	movzbl %al,%eax
   23cb8:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23cbb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   23cbf:	75 12                	jne    23cd3 <memcpy_verw_s+0xcb>
   23cc1:	e8 03 02 00 00       	call   23ec9 <__errno>
   23cc6:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   23ccc:	b8 22 00 00 00       	mov    $0x22,%eax
   23cd1:	eb 23                	jmp    23cf6 <memcpy_verw_s+0xee>
   23cd3:	b8 16 00 00 00       	mov    $0x16,%eax
   23cd8:	eb 1c                	jmp    23cf6 <memcpy_verw_s+0xee>
   23cda:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   23cde:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   23ce2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ce6:	48 89 ce             	mov    %rcx,%rsi
   23ce9:	48 89 c7             	mov    %rax,%rdi
   23cec:	e8 a9 f4 ff ff       	call   2319a <memcpy_verw>
   23cf1:	b8 00 00 00 00       	mov    $0x0,%eax
   23cf6:	c9                   	leave  
   23cf7:	c3                   	ret    

0000000000023cf8 <_setjmp>:
   23cf8:	f3 0f 1e fa          	endbr64 
   23cfc:	50                   	push   %rax
   23cfd:	53                   	push   %rbx
   23cfe:	51                   	push   %rcx
   23cff:	52                   	push   %rdx
   23d00:	56                   	push   %rsi
   23d01:	57                   	push   %rdi
   23d02:	41 50                	push   %r8
   23d04:	41 51                	push   %r9
   23d06:	41 52                	push   %r10
   23d08:	41 53                	push   %r11
   23d0a:	41 54                	push   %r12
   23d0c:	41 55                	push   %r13
   23d0e:	41 56                	push   %r14
   23d10:	41 57                	push   %r15
   23d12:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   23d19:	e8 fc b9 fe ff       	call   f71a <sgx_is_within_enclave>
   23d1e:	83 f8 00             	cmp    $0x0,%eax
   23d21:	74 60                	je     23d83 <.crash>
   23d23:	41 5f                	pop    %r15
   23d25:	41 5e                	pop    %r14
   23d27:	41 5d                	pop    %r13
   23d29:	41 5c                	pop    %r12
   23d2b:	41 5b                	pop    %r11
   23d2d:	41 5a                	pop    %r10
   23d2f:	41 59                	pop    %r9
   23d31:	41 58                	pop    %r8
   23d33:	5f                   	pop    %rdi
   23d34:	5e                   	pop    %rsi
   23d35:	5a                   	pop    %rdx
   23d36:	59                   	pop    %rcx
   23d37:	5b                   	pop    %rbx
   23d38:	58                   	pop    %rax
   23d39:	4c 8b 1c 24          	mov    (%rsp),%r11
   23d3d:	48 89 1f             	mov    %rbx,(%rdi)
   23d40:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   23d44:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   23d48:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   23d4c:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   23d50:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   23d54:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   23d58:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   23d5c:	e8 a3 d9 00 00       	call   31704 <get_stack_guard>
   23d61:	48 31 07             	xor    %rax,(%rdi)
   23d64:	48 31 47 08          	xor    %rax,0x8(%rdi)
   23d68:	48 31 47 10          	xor    %rax,0x10(%rdi)
   23d6c:	48 31 47 18          	xor    %rax,0x18(%rdi)
   23d70:	48 31 47 20          	xor    %rax,0x20(%rdi)
   23d74:	48 31 47 28          	xor    %rax,0x28(%rdi)
   23d78:	48 31 47 30          	xor    %rax,0x30(%rdi)
   23d7c:	48 31 47 38          	xor    %rax,0x38(%rdi)
   23d80:	31 c0                	xor    %eax,%eax
   23d82:	c3                   	ret    

0000000000023d83 <.crash>:
   23d83:	0f 0b                	ud2    

0000000000023d85 <_longjmp>:
   23d85:	f3 0f 1e fa          	endbr64 
   23d89:	50                   	push   %rax
   23d8a:	53                   	push   %rbx
   23d8b:	51                   	push   %rcx
   23d8c:	52                   	push   %rdx
   23d8d:	56                   	push   %rsi
   23d8e:	57                   	push   %rdi
   23d8f:	41 50                	push   %r8
   23d91:	41 51                	push   %r9
   23d93:	41 52                	push   %r10
   23d95:	41 53                	push   %r11
   23d97:	41 54                	push   %r12
   23d99:	41 55                	push   %r13
   23d9b:	41 56                	push   %r14
   23d9d:	41 57                	push   %r15
   23d9f:	57                   	push   %rdi
   23da0:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   23da7:	e8 6e b9 fe ff       	call   f71a <sgx_is_within_enclave>
   23dac:	83 f8 00             	cmp    $0x0,%eax
   23daf:	74 d2                	je     23d83 <.crash>
   23db1:	5f                   	pop    %rdi
   23db2:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   23db6:	e8 49 d9 00 00       	call   31704 <get_stack_guard>
   23dbb:	48 31 c2             	xor    %rax,%rdx
   23dbe:	52                   	push   %rdx
   23dbf:	5f                   	pop    %rdi
   23dc0:	e8 8d dc fe ff       	call   11a52 <is_valid_sp>
   23dc5:	83 f8 00             	cmp    $0x0,%eax
   23dc8:	74 b9                	je     23d83 <.crash>
   23dca:	41 5f                	pop    %r15
   23dcc:	41 5e                	pop    %r14
   23dce:	41 5d                	pop    %r13
   23dd0:	41 5c                	pop    %r12
   23dd2:	41 5b                	pop    %r11
   23dd4:	41 5a                	pop    %r10
   23dd6:	41 59                	pop    %r9
   23dd8:	41 58                	pop    %r8
   23dda:	5f                   	pop    %rdi
   23ddb:	5e                   	pop    %rsi
   23ddc:	5a                   	pop    %rdx
   23ddd:	59                   	pop    %rcx
   23dde:	5b                   	pop    %rbx
   23ddf:	58                   	pop    %rax
   23de0:	89 f0                	mov    %esi,%eax
   23de2:	48 8b 1f             	mov    (%rdi),%rbx
   23de5:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   23de9:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   23ded:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   23df1:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   23df5:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   23df9:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   23dfd:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   23e01:	50                   	push   %rax
   23e02:	e8 fd d8 00 00       	call   31704 <get_stack_guard>
   23e07:	48 31 c3             	xor    %rax,%rbx
   23e0a:	48 31 c6             	xor    %rax,%rsi
   23e0d:	49 31 c4             	xor    %rax,%r12
   23e10:	49 31 c5             	xor    %rax,%r13
   23e13:	49 31 c6             	xor    %rax,%r14
   23e16:	49 31 c7             	xor    %rax,%r15
   23e19:	48 31 c2             	xor    %rax,%rdx
   23e1c:	48 31 c1             	xor    %rax,%rcx
   23e1f:	58                   	pop    %rax
   23e20:	48 89 f5             	mov    %rsi,%rbp
   23e23:	48 89 0a             	mov    %rcx,(%rdx)
   23e26:	48 89 d4             	mov    %rdx,%rsp
   23e29:	85 c0                	test   %eax,%eax
   23e2b:	75 02                	jne    23e2f <_longjmp+0xaa>
   23e2d:	ff c0                	inc    %eax
   23e2f:	c3                   	ret    

0000000000023e30 <rsrv_mem_init>:
   23e30:	f3 0f 1e fa          	endbr64 
   23e34:	55                   	push   %rbp
   23e35:	48 89 e5             	mov    %rsp,%rbp
   23e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23e3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23e40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   23e44:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   23e49:	74 0e                	je     23e59 <rsrv_mem_init+0x29>
   23e4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23e4f:	25 ff 0f 00 00       	and    $0xfff,%eax
   23e54:	48 85 c0             	test   %rax,%rax
   23e57:	74 07                	je     23e60 <rsrv_mem_init+0x30>
   23e59:	b8 01 00 00 00       	mov    $0x1,%eax
   23e5e:	eb 67                	jmp    23ec7 <rsrv_mem_init+0x97>
   23e60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23e64:	25 ff 0f 00 00       	and    $0xfff,%eax
   23e69:	48 85 c0             	test   %rax,%rax
   23e6c:	74 07                	je     23e75 <rsrv_mem_init+0x45>
   23e6e:	b8 01 00 00 00       	mov    $0x1,%eax
   23e73:	eb 52                	jmp    23ec7 <rsrv_mem_init+0x97>
   23e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23e79:	25 ff 0f 00 00       	and    $0xfff,%eax
   23e7e:	48 85 c0             	test   %rax,%rax
   23e81:	74 07                	je     23e8a <rsrv_mem_init+0x5a>
   23e83:	b8 01 00 00 00       	mov    $0x1,%eax
   23e88:	eb 3d                	jmp    23ec7 <rsrv_mem_init+0x97>
   23e8a:	48 8b 05 a7 5f 01 00 	mov    0x15fa7(%rip),%rax        # 39e38 <rsrv_mem_base>
   23e91:	48 f7 d0             	not    %rax
   23e94:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   23e98:	76 07                	jbe    23ea1 <rsrv_mem_init+0x71>
   23e9a:	b8 01 00 00 00       	mov    $0x1,%eax
   23e9f:	eb 26                	jmp    23ec7 <rsrv_mem_init+0x97>
   23ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ea5:	48 89 05 8c 5f 01 00 	mov    %rax,0x15f8c(%rip)        # 39e38 <rsrv_mem_base>
   23eac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23eb0:	48 89 05 89 5f 01 00 	mov    %rax,0x15f89(%rip)        # 39e40 <rsrv_mem_size>
   23eb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ebb:	48 89 05 86 5f 01 00 	mov    %rax,0x15f86(%rip)        # 39e48 <rsrv_mem_min_size>
   23ec2:	b8 00 00 00 00       	mov    $0x0,%eax
   23ec7:	5d                   	pop    %rbp
   23ec8:	c3                   	ret    

0000000000023ec9 <__errno>:
   23ec9:	f3 0f 1e fa          	endbr64 
   23ecd:	55                   	push   %rbp
   23ece:	48 89 e5             	mov    %rsp,%rbp
   23ed1:	e8 38 da fe ff       	call   1190e <get_errno_addr>
   23ed6:	5d                   	pop    %rbp
   23ed7:	c3                   	ret    

0000000000023ed8 <__sprint>:
   23ed8:	f3 0f 1e fa          	endbr64 
   23edc:	55                   	push   %rbp
   23edd:	48 89 e5             	mov    %rsp,%rbp
   23ee0:	48 83 ec 20          	sub    $0x20,%rsp
   23ee4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23ee8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23eec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23ef0:	8b 40 0c             	mov    0xc(%rax),%eax
   23ef3:	85 c0                	test   %eax,%eax
   23ef5:	75 12                	jne    23f09 <__sprint+0x31>
   23ef7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23efb:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   23f02:	b8 00 00 00 00       	mov    $0x0,%eax
   23f07:	eb 2f                	jmp    23f38 <__sprint+0x60>
   23f09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f11:	48 89 d6             	mov    %rdx,%rsi
   23f14:	48 89 c7             	mov    %rax,%rdi
   23f17:	e8 fa a3 00 00       	call   2e316 <__sfvwrite>
   23f1c:	89 45 fc             	mov    %eax,-0x4(%rbp)
   23f1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23f23:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   23f2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23f2e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   23f35:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23f38:	c9                   	leave  
   23f39:	c3                   	ret    

0000000000023f3a <__wcsconv>:
   23f3a:	f3 0f 1e fa          	endbr64 
   23f3e:	55                   	push   %rbp
   23f3f:	48 89 e5             	mov    %rsp,%rbp
   23f42:	48 83 ec 50          	sub    $0x50,%rsp
   23f46:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   23f4a:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   23f4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23f54:	00 00 
   23f56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23f5a:	31 c0                	xor    %eax,%eax
   23f5c:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   23f60:	79 5f                	jns    23fc1 <__wcsconv+0x87>
   23f62:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   23f66:	ba 08 00 00 00       	mov    $0x8,%edx
   23f6b:	be 00 00 00 00       	mov    $0x0,%esi
   23f70:	48 89 c7             	mov    %rax,%rdi
   23f73:	e8 0b f7 ff ff       	call   23683 <memset>
   23f78:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23f7c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   23f80:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   23f84:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   23f88:	48 89 d1             	mov    %rdx,%rcx
   23f8b:	ba 00 00 00 00       	mov    $0x0,%edx
   23f90:	48 89 c6             	mov    %rax,%rsi
   23f93:	bf 00 00 00 00       	mov    $0x0,%edi
   23f98:	e8 cd a1 00 00       	call   2e16a <wcsrtombs>
   23f9d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   23fa1:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   23fa6:	0f 85 bc 00 00 00    	jne    24068 <__wcsconv+0x12e>
   23fac:	e8 18 ff ff ff       	call   23ec9 <__errno>
   23fb1:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   23fb7:	b8 00 00 00 00       	mov    $0x0,%eax
   23fbc:	e9 3a 01 00 00       	jmp    240fb <__wcsconv+0x1c1>
   23fc1:	83 7d b4 7f          	cmpl   $0x7f,-0x4c(%rbp)
   23fc5:	7f 0e                	jg     23fd5 <__wcsconv+0x9b>
   23fc7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   23fca:	48 98                	cltq   
   23fcc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   23fd0:	e9 93 00 00 00       	jmp    24068 <__wcsconv+0x12e>
   23fd5:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   23fdc:	00 
   23fdd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23fe1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   23fe5:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   23fe9:	ba 08 00 00 00       	mov    $0x8,%edx
   23fee:	be 00 00 00 00       	mov    $0x0,%esi
   23ff3:	48 89 c7             	mov    %rax,%rdi
   23ff6:	e8 88 f6 ff ff       	call   23683 <memset>
   23ffb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23fff:	48 8d 50 04          	lea    0x4(%rax),%rdx
   24003:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   24007:	8b 08                	mov    (%rax),%ecx
   24009:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   2400d:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
   24011:	89 ce                	mov    %ecx,%esi
   24013:	48 89 c7             	mov    %rax,%rdi
   24016:	e8 ed a0 00 00       	call   2e108 <wcrtomb>
   2401b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2401f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   24024:	74 26                	je     2404c <__wcsconv+0x112>
   24026:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   2402b:	74 1f                	je     2404c <__wcsconv+0x112>
   2402d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   24031:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24035:	48 01 c2             	add    %rax,%rdx
   24038:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2403b:	48 98                	cltq   
   2403d:	48 39 c2             	cmp    %rax,%rdx
   24040:	77 0a                	ja     2404c <__wcsconv+0x112>
   24042:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24046:	48 01 45 d0          	add    %rax,-0x30(%rbp)
   2404a:	eb af                	jmp    23ffb <__wcsconv+0xc1>
   2404c:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   24051:	75 15                	jne    24068 <__wcsconv+0x12e>
   24053:	e8 71 fe ff ff       	call   23ec9 <__errno>
   24058:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2405e:	b8 00 00 00 00       	mov    $0x0,%eax
   24063:	e9 93 00 00 00       	jmp    240fb <__wcsconv+0x1c1>
   24068:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2406c:	48 83 c0 01          	add    $0x1,%rax
   24070:	48 89 c7             	mov    %rax,%rdi
   24073:	e8 af b9 ff ff       	call   1fa27 <dlmalloc>
   24078:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2407c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   24081:	75 07                	jne    2408a <__wcsconv+0x150>
   24083:	b8 00 00 00 00       	mov    $0x0,%eax
   24088:	eb 71                	jmp    240fb <__wcsconv+0x1c1>
   2408a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2408e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   24092:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   24096:	ba 08 00 00 00       	mov    $0x8,%edx
   2409b:	be 00 00 00 00       	mov    $0x0,%esi
   240a0:	48 89 c7             	mov    %rax,%rdi
   240a3:	e8 db f5 ff ff       	call   23683 <memset>
   240a8:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
   240ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   240b0:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   240b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   240b8:	48 89 c7             	mov    %rax,%rdi
   240bb:	e8 aa a0 00 00       	call   2e16a <wcsrtombs>
   240c0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   240c4:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   240c9:	75 1e                	jne    240e9 <__wcsconv+0x1af>
   240cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   240cf:	48 89 c7             	mov    %rax,%rdi
   240d2:	e8 4b c4 ff ff       	call   20522 <dlfree>
   240d7:	e8 ed fd ff ff       	call   23ec9 <__errno>
   240dc:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   240e2:	b8 00 00 00 00       	mov    $0x0,%eax
   240e7:	eb 12                	jmp    240fb <__wcsconv+0x1c1>
   240e9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   240ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   240f1:	48 01 d0             	add    %rdx,%rax
   240f4:	c6 00 00             	movb   $0x0,(%rax)
   240f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   240fb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   240ff:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24106:	00 00 
   24108:	74 05                	je     2410f <__wcsconv+0x1d5>
   2410a:	e8 e8 f6 ff ff       	call   237f7 <__stack_chk_fail>
   2410f:	c9                   	leave  
   24110:	c3                   	ret    

0000000000024111 <__vfprintf>:
   24111:	f3 0f 1e fa          	endbr64 
   24115:	55                   	push   %rbp
   24116:	48 89 e5             	mov    %rsp,%rbp
   24119:	48 81 ec d0 02 00 00 	sub    $0x2d0,%rsp
   24120:	48 89 bd 48 fd ff ff 	mov    %rdi,-0x2b8(%rbp)
   24127:	48 89 b5 40 fd ff ff 	mov    %rsi,-0x2c0(%rbp)
   2412e:	48 89 95 38 fd ff ff 	mov    %rdx,-0x2c8(%rbp)
   24135:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2413c:	00 00 
   2413e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   24142:	31 c0                	xor    %eax,%eax
   24144:	48 8d 05 63 f7 00 00 	lea    0xf763(%rip),%rax        # 338ae <__func__.2555+0x5>
   2414b:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
   24152:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
   24159:	00 00 00 00 
   2415d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24164:	48 8b 40 30          	mov    0x30(%rax),%rax
   24168:	48 85 c0             	test   %rax,%rax
   2416b:	74 11                	je     2417e <__vfprintf+0x6d>
   2416d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24174:	48 8b 40 30          	mov    0x30(%rax),%rax
   24178:	48 83 c0 10          	add    $0x10,%rax
   2417c:	eb 05                	jmp    24183 <__vfprintf+0x72>
   2417e:	b8 00 00 00 00       	mov    $0x0,%eax
   24183:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
   2418a:	48 83 bd 00 fe ff ff 	cmpq   $0x0,-0x200(%rbp)
   24191:	00 
   24192:	74 1c                	je     241b0 <__vfprintf+0x9f>
   24194:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   2419b:	8b 40 20             	mov    0x20(%rax),%eax
   2419e:	85 c0                	test   %eax,%eax
   241a0:	75 0e                	jne    241b0 <__vfprintf+0x9f>
   241a2:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   241a9:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
   241b0:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   241b7:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   241bb:	98                   	cwtl   
   241bc:	83 e0 1a             	and    $0x1a,%eax
   241bf:	83 f8 0a             	cmp    $0xa,%eax
   241c2:	75 25                	jne    241e9 <__vfprintf+0xd8>
   241c4:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   241cb:	0f b7 40 12          	movzwl 0x12(%rax),%eax
   241cf:	66 85 c0             	test   %ax,%ax
   241d2:	78 15                	js     241e9 <__vfprintf+0xd8>
   241d4:	e8 f0 fc ff ff       	call   23ec9 <__errno>
   241d9:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   241df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   241e4:	e9 87 43 00 00       	jmp    28570 <__vfprintf+0x445f>
   241e9:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   241f0:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   241f7:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   241fe:	00 00 00 00 
   24202:	c7 85 9c fd ff ff 01 	movl   $0x1,-0x264(%rbp)
   24209:	00 00 00 
   2420c:	48 8d 8d 68 fe ff ff 	lea    -0x198(%rbp),%rcx
   24213:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
   2421a:	48 8b 06             	mov    (%rsi),%rax
   2421d:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   24221:	48 89 01             	mov    %rax,(%rcx)
   24224:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   24228:	48 8b 46 10          	mov    0x10(%rsi),%rax
   2422c:	48 89 41 10          	mov    %rax,0x10(%rcx)
   24230:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24237:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2423e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24245:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
   2424c:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%rbp)
   24253:	00 00 00 
   24256:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   2425d:	00 00 00 
   24260:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
   24267:	00 00 00 
   2426a:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   24271:	00 00 00 00 
   24275:	48 8d 85 58 fe ff ff 	lea    -0x1a8(%rbp),%rax
   2427c:	ba 08 00 00 00       	mov    $0x8,%edx
   24281:	be 00 00 00 00       	mov    $0x0,%esi
   24286:	48 89 c7             	mov    %rax,%rdi
   24289:	e8 f5 f3 ff ff       	call   23683 <memset>
   2428e:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24295:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2429c:	eb 24                	jmp    242c2 <__vfprintf+0x1b1>
   2429e:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   242a4:	48 98                	cltq   
   242a6:	48 01 85 c0 fd ff ff 	add    %rax,-0x240(%rbp)
   242ad:	8b 85 58 fd ff ff    	mov    -0x2a8(%rbp),%eax
   242b3:	83 f8 25             	cmp    $0x25,%eax
   242b6:	75 0a                	jne    242c2 <__vfprintf+0x1b1>
   242b8:	48 83 ad c0 fd ff ff 	subq   $0x1,-0x240(%rbp)
   242bf:	01 
   242c0:	eb 34                	jmp    242f6 <__vfprintf+0x1e5>
   242c2:	48 8d 95 58 fe ff ff 	lea    -0x1a8(%rbp),%rdx
   242c9:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
   242d0:	48 8d 85 58 fd ff ff 	lea    -0x2a8(%rbp),%rax
   242d7:	48 89 d1             	mov    %rdx,%rcx
   242da:	ba 01 00 00 00       	mov    $0x1,%edx
   242df:	48 89 c7             	mov    %rax,%rdi
   242e2:	e8 c1 9c 00 00       	call   2dfa8 <mbrtowc>
   242e7:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   242ed:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   242f4:	7f a8                	jg     2429e <__vfprintf+0x18d>
   242f6:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   242fd:	48 3b 85 c8 fd ff ff 	cmp    -0x238(%rbp),%rax
   24304:	0f 84 d3 00 00 00    	je     243dd <__vfprintf+0x2cc>
   2430a:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24311:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   24318:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   2431f:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
   24326:	00 
   24327:	0f 88 98 41 00 00    	js     284c5 <__vfprintf+0x43b4>
   2432d:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   24332:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   24338:	48 98                	cltq   
   2433a:	48 39 85 08 fe ff ff 	cmp    %rax,-0x1f8(%rbp)
   24341:	0f 8f 7e 41 00 00    	jg     284c5 <__vfprintf+0x43b4>
   24347:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2434e:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   24355:	48 89 10             	mov    %rdx,(%rax)
   24358:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
   2435f:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24366:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2436a:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   24370:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
   24377:	01 d0                	add    %edx,%eax
   24379:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2437f:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24386:	10 
   24387:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2438d:	83 c0 01             	add    $0x1,%eax
   24390:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24396:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2439c:	83 f8 07             	cmp    $0x7,%eax
   2439f:	7e 2f                	jle    243d0 <__vfprintf+0x2bf>
   243a1:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   243a8:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   243af:	48 89 d6             	mov    %rdx,%rsi
   243b2:	48 89 c7             	mov    %rax,%rdi
   243b5:	e8 1e fb ff ff       	call   23ed8 <__sprint>
   243ba:	85 c0                	test   %eax,%eax
   243bc:	0f 85 89 40 00 00    	jne    2844b <__vfprintf+0x433a>
   243c2:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   243c9:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   243d0:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
   243d7:	01 85 74 fd ff ff    	add    %eax,-0x28c(%rbp)
   243dd:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   243e4:	0f 8e 1c 40 00 00    	jle    28406 <__vfprintf+0x42f5>
   243ea:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   243f1:	01 
   243f2:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
   243f9:	00 00 00 
   243fc:	c7 85 90 fd ff ff 00 	movl   $0x0,-0x270(%rbp)
   24403:	00 00 00 
   24406:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
   2440d:	00 00 00 
   24410:	c7 85 7c fd ff ff ff 	movl   $0xffffffff,-0x284(%rbp)
   24417:	ff ff ff 
   2441a:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   24421:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   24425:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   2442c:	48 8d 50 01          	lea    0x1(%rax),%rdx
   24430:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   24437:	0f b6 00             	movzbl (%rax),%eax
   2443a:	0f be c0             	movsbl %al,%eax
   2443d:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   24443:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   24449:	83 e8 20             	sub    $0x20,%eax
   2444c:	83 f8 5a             	cmp    $0x5a,%eax
   2444f:	0f 87 aa 2c 00 00    	ja     270ff <__vfprintf+0x2fee>
   24455:	89 c0                	mov    %eax,%eax
   24457:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2445e:	00 
   2445f:	48 8d 05 7e f4 00 00 	lea    0xf47e(%rip),%rax        # 338e4 <__func__.2555+0x3b>
   24466:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   24469:	48 98                	cltq   
   2446b:	48 8d 15 72 f4 00 00 	lea    0xf472(%rip),%rdx        # 338e4 <__func__.2555+0x3b>
   24472:	48 01 d0             	add    %rdx,%rax
   24475:	3e ff e0             	notrack jmp *%rax
   24478:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   2447f:	84 c0                	test   %al,%al
   24481:	75 a2                	jne    24425 <__vfprintf+0x314>
   24483:	c6 85 56 fd ff ff 20 	movb   $0x20,-0x2aa(%rbp)
   2448a:	eb 99                	jmp    24425 <__vfprintf+0x314>
   2448c:	83 8d 70 fd ff ff 01 	orl    $0x1,-0x290(%rbp)
   24493:	eb 90                	jmp    24425 <__vfprintf+0x314>
   24495:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   2449c:	00 00 00 
   2449f:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   244a6:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   244ad:	eb 72                	jmp    24521 <__vfprintf+0x410>
   244af:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   244b6:	cc cc 0c 
   244b9:	0f 8f 09 40 00 00    	jg     284c8 <__vfprintf+0x43b7>
   244bf:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   244c5:	89 d0                	mov    %edx,%eax
   244c7:	c1 e0 02             	shl    $0x2,%eax
   244ca:	01 d0                	add    %edx,%eax
   244cc:	01 c0                	add    %eax,%eax
   244ce:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   244d4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   244db:	0f b6 00             	movzbl (%rax),%eax
   244de:	0f be c0             	movsbl %al,%eax
   244e1:	ba 30 00 00 00       	mov    $0x30,%edx
   244e6:	29 c2                	sub    %eax,%edx
   244e8:	89 d0                	mov    %edx,%eax
   244ea:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   244ef:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   244f5:	0f 8f d0 3f 00 00    	jg     284cb <__vfprintf+0x43ba>
   244fb:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24502:	0f b6 00             	movzbl (%rax),%eax
   24505:	0f be d0             	movsbl %al,%edx
   24508:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   2450e:	01 d0                	add    %edx,%eax
   24510:	83 e8 30             	sub    $0x30,%eax
   24513:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   24519:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   24520:	01 
   24521:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24528:	0f b6 00             	movzbl (%rax),%eax
   2452b:	0f be c0             	movsbl %al,%eax
   2452e:	83 e8 30             	sub    $0x30,%eax
   24531:	83 f8 09             	cmp    $0x9,%eax
   24534:	0f 86 75 ff ff ff    	jbe    244af <__vfprintf+0x39e>
   2453a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24541:	0f b6 00             	movzbl (%rax),%eax
   24544:	3c 24                	cmp    $0x24,%al
   24546:	0f 85 13 01 00 00    	jne    2465f <__vfprintf+0x54e>
   2454c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24552:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
   24558:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2455f:	48 85 c0             	test   %rax,%rax
   24562:	75 32                	jne    24596 <__vfprintf+0x485>
   24564:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   2456b:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   24572:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   24579:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   24580:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   24587:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   2458e:	48 89 c7             	mov    %rax,%rdi
   24591:	e8 f0 3f 00 00       	call   28586 <__find_arguments>
   24596:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   2459c:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   245a2:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   245a9:	48 85 c0             	test   %rax,%rax
   245ac:	74 23                	je     245d1 <__vfprintf+0x4c0>
   245ae:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   245b5:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   245bb:	8d 50 01             	lea    0x1(%rax),%edx
   245be:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   245c4:	48 98                	cltq   
   245c6:	48 c1 e0 04          	shl    $0x4,%rax
   245ca:	48 01 c8             	add    %rcx,%rax
   245cd:	8b 00                	mov    (%rax),%eax
   245cf:	eb 61                	jmp    24632 <__vfprintf+0x521>
   245d1:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   245d8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245df:	8b 00                	mov    (%rax),%eax
   245e1:	83 f8 2f             	cmp    $0x2f,%eax
   245e4:	77 30                	ja     24616 <__vfprintf+0x505>
   245e6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245ed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   245f1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245f8:	8b 00                	mov    (%rax),%eax
   245fa:	89 c0                	mov    %eax,%eax
   245fc:	48 01 d0             	add    %rdx,%rax
   245ff:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24606:	8b 12                	mov    (%rdx),%edx
   24608:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2460b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24612:	89 0a                	mov    %ecx,(%rdx)
   24614:	eb 1a                	jmp    24630 <__vfprintf+0x51f>
   24616:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2461d:	48 8b 40 08          	mov    0x8(%rax),%rax
   24621:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24625:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2462c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24630:	8b 00                	mov    (%rax),%eax
   24632:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   24638:	8b 85 a4 fd ff ff    	mov    -0x25c(%rbp),%eax
   2463e:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   24644:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   2464b:	01 
   2464c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24653:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   2465a:	e9 96 00 00 00       	jmp    246f5 <__vfprintf+0x5e4>
   2465f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24666:	48 85 c0             	test   %rax,%rax
   24669:	74 23                	je     2468e <__vfprintf+0x57d>
   2466b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24672:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24678:	8d 50 01             	lea    0x1(%rax),%edx
   2467b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24681:	48 98                	cltq   
   24683:	48 c1 e0 04          	shl    $0x4,%rax
   24687:	48 01 c8             	add    %rcx,%rax
   2468a:	8b 00                	mov    (%rax),%eax
   2468c:	eb 61                	jmp    246ef <__vfprintf+0x5de>
   2468e:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24695:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2469c:	8b 00                	mov    (%rax),%eax
   2469e:	83 f8 2f             	cmp    $0x2f,%eax
   246a1:	77 30                	ja     246d3 <__vfprintf+0x5c2>
   246a3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   246aa:	48 8b 50 10          	mov    0x10(%rax),%rdx
   246ae:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   246b5:	8b 00                	mov    (%rax),%eax
   246b7:	89 c0                	mov    %eax,%eax
   246b9:	48 01 d0             	add    %rdx,%rax
   246bc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   246c3:	8b 12                	mov    (%rdx),%edx
   246c5:	8d 4a 08             	lea    0x8(%rdx),%ecx
   246c8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   246cf:	89 0a                	mov    %ecx,(%rdx)
   246d1:	eb 1a                	jmp    246ed <__vfprintf+0x5dc>
   246d3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   246da:	48 8b 40 08          	mov    0x8(%rax),%rax
   246de:	48 8d 48 08          	lea    0x8(%rax),%rcx
   246e2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   246e9:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   246ed:	8b 00                	mov    (%rax),%eax
   246ef:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   246f5:	83 bd 78 fd ff ff 00 	cmpl   $0x0,-0x288(%rbp)
   246fc:	78 05                	js     24703 <__vfprintf+0x5f2>
   246fe:	e9 22 fd ff ff       	jmp    24425 <__vfprintf+0x314>
   24703:	81 bd 78 fd ff ff 00 	cmpl   $0x80000000,-0x288(%rbp)
   2470a:	00 00 80 
   2470d:	0f 84 bb 3d 00 00    	je     284ce <__vfprintf+0x43bd>
   24713:	f7 9d 78 fd ff ff    	negl   -0x288(%rbp)
   24719:	83 8d 70 fd ff ff 04 	orl    $0x4,-0x290(%rbp)
   24720:	e9 00 fd ff ff       	jmp    24425 <__vfprintf+0x314>
   24725:	c6 85 56 fd ff ff 2b 	movb   $0x2b,-0x2aa(%rbp)
   2472c:	e9 f4 fc ff ff       	jmp    24425 <__vfprintf+0x314>
   24731:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24738:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2473c:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   24743:	0f b6 00             	movzbl (%rax),%eax
   24746:	0f be c0             	movsbl %al,%eax
   24749:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   2474f:	83 bd 64 fd ff ff 2a 	cmpl   $0x2a,-0x29c(%rbp)
   24756:	0f 85 7e 02 00 00    	jne    249da <__vfprintf+0x8c9>
   2475c:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   24763:	00 00 00 
   24766:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   2476d:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   24774:	eb 72                	jmp    247e8 <__vfprintf+0x6d7>
   24776:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   2477d:	cc cc 0c 
   24780:	0f 8f 4b 3d 00 00    	jg     284d1 <__vfprintf+0x43c0>
   24786:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   2478c:	89 d0                	mov    %edx,%eax
   2478e:	c1 e0 02             	shl    $0x2,%eax
   24791:	01 d0                	add    %edx,%eax
   24793:	01 c0                	add    %eax,%eax
   24795:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   2479b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   247a2:	0f b6 00             	movzbl (%rax),%eax
   247a5:	0f be c0             	movsbl %al,%eax
   247a8:	ba 30 00 00 00       	mov    $0x30,%edx
   247ad:	29 c2                	sub    %eax,%edx
   247af:	89 d0                	mov    %edx,%eax
   247b1:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   247b6:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   247bc:	0f 8f 12 3d 00 00    	jg     284d4 <__vfprintf+0x43c3>
   247c2:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   247c9:	0f b6 00             	movzbl (%rax),%eax
   247cc:	0f be d0             	movsbl %al,%edx
   247cf:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   247d5:	01 d0                	add    %edx,%eax
   247d7:	83 e8 30             	sub    $0x30,%eax
   247da:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   247e0:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   247e7:	01 
   247e8:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   247ef:	0f b6 00             	movzbl (%rax),%eax
   247f2:	0f be c0             	movsbl %al,%eax
   247f5:	83 e8 30             	sub    $0x30,%eax
   247f8:	83 f8 09             	cmp    $0x9,%eax
   247fb:	0f 86 75 ff ff ff    	jbe    24776 <__vfprintf+0x665>
   24801:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24808:	0f b6 00             	movzbl (%rax),%eax
   2480b:	3c 24                	cmp    $0x24,%al
   2480d:	0f 85 13 01 00 00    	jne    24926 <__vfprintf+0x815>
   24813:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24819:	89 85 a0 fd ff ff    	mov    %eax,-0x260(%rbp)
   2481f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24826:	48 85 c0             	test   %rax,%rax
   24829:	75 32                	jne    2485d <__vfprintf+0x74c>
   2482b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   24832:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   24839:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   24840:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   24847:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   2484e:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   24855:	48 89 c7             	mov    %rax,%rdi
   24858:	e8 29 3d 00 00       	call   28586 <__find_arguments>
   2485d:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   24863:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   24869:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24870:	48 85 c0             	test   %rax,%rax
   24873:	74 23                	je     24898 <__vfprintf+0x787>
   24875:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2487c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24882:	8d 50 01             	lea    0x1(%rax),%edx
   24885:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2488b:	48 98                	cltq   
   2488d:	48 c1 e0 04          	shl    $0x4,%rax
   24891:	48 01 c8             	add    %rcx,%rax
   24894:	8b 00                	mov    (%rax),%eax
   24896:	eb 61                	jmp    248f9 <__vfprintf+0x7e8>
   24898:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2489f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   248a6:	8b 00                	mov    (%rax),%eax
   248a8:	83 f8 2f             	cmp    $0x2f,%eax
   248ab:	77 30                	ja     248dd <__vfprintf+0x7cc>
   248ad:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   248b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   248b8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   248bf:	8b 00                	mov    (%rax),%eax
   248c1:	89 c0                	mov    %eax,%eax
   248c3:	48 01 d0             	add    %rdx,%rax
   248c6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   248cd:	8b 12                	mov    (%rdx),%edx
   248cf:	8d 4a 08             	lea    0x8(%rdx),%ecx
   248d2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   248d9:	89 0a                	mov    %ecx,(%rdx)
   248db:	eb 1a                	jmp    248f7 <__vfprintf+0x7e6>
   248dd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   248e4:	48 8b 40 08          	mov    0x8(%rax),%rax
   248e8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   248ec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   248f3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   248f7:	8b 00                	mov    (%rax),%eax
   248f9:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   248ff:	8b 85 a0 fd ff ff    	mov    -0x260(%rbp),%eax
   24905:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   2490b:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   24912:	01 
   24913:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2491a:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   24921:	e9 96 00 00 00       	jmp    249bc <__vfprintf+0x8ab>
   24926:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2492d:	48 85 c0             	test   %rax,%rax
   24930:	74 23                	je     24955 <__vfprintf+0x844>
   24932:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24939:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2493f:	8d 50 01             	lea    0x1(%rax),%edx
   24942:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24948:	48 98                	cltq   
   2494a:	48 c1 e0 04          	shl    $0x4,%rax
   2494e:	48 01 c8             	add    %rcx,%rax
   24951:	8b 00                	mov    (%rax),%eax
   24953:	eb 61                	jmp    249b6 <__vfprintf+0x8a5>
   24955:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2495c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24963:	8b 00                	mov    (%rax),%eax
   24965:	83 f8 2f             	cmp    $0x2f,%eax
   24968:	77 30                	ja     2499a <__vfprintf+0x889>
   2496a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24971:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24975:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2497c:	8b 00                	mov    (%rax),%eax
   2497e:	89 c0                	mov    %eax,%eax
   24980:	48 01 d0             	add    %rdx,%rax
   24983:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2498a:	8b 12                	mov    (%rdx),%edx
   2498c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2498f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24996:	89 0a                	mov    %ecx,(%rdx)
   24998:	eb 1a                	jmp    249b4 <__vfprintf+0x8a3>
   2499a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   249a1:	48 8b 40 08          	mov    0x8(%rax),%rax
   249a5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   249a9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   249b0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   249b4:	8b 00                	mov    (%rax),%eax
   249b6:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   249bc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   249c1:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   249c8:	0f 49 85 68 fd ff ff 	cmovns -0x298(%rbp),%eax
   249cf:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   249d5:	e9 4b fa ff ff       	jmp    24425 <__vfprintf+0x314>
   249da:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   249e1:	00 00 00 
   249e4:	eb 76                	jmp    24a5c <__vfprintf+0x94b>
   249e6:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   249ed:	cc cc 0c 
   249f0:	0f 8f e1 3a 00 00    	jg     284d7 <__vfprintf+0x43c6>
   249f6:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   249fc:	89 d0                	mov    %edx,%eax
   249fe:	c1 e0 02             	shl    $0x2,%eax
   24a01:	01 d0                	add    %edx,%eax
   24a03:	01 c0                	add    %eax,%eax
   24a05:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24a0b:	b8 30 00 00 00       	mov    $0x30,%eax
   24a10:	2b 85 64 fd ff ff    	sub    -0x29c(%rbp),%eax
   24a16:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   24a1b:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   24a21:	0f 8f b3 3a 00 00    	jg     284da <__vfprintf+0x43c9>
   24a27:	8b 95 64 fd ff ff    	mov    -0x29c(%rbp),%edx
   24a2d:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24a33:	01 d0                	add    %edx,%eax
   24a35:	83 e8 30             	sub    $0x30,%eax
   24a38:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24a3e:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24a45:	48 8d 50 01          	lea    0x1(%rax),%rdx
   24a49:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   24a50:	0f b6 00             	movzbl (%rax),%eax
   24a53:	0f be c0             	movsbl %al,%eax
   24a56:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   24a5c:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   24a62:	83 e8 30             	sub    $0x30,%eax
   24a65:	83 f8 09             	cmp    $0x9,%eax
   24a68:	0f 86 78 ff ff ff    	jbe    249e6 <__vfprintf+0x8d5>
   24a6e:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   24a75:	75 53                	jne    24aca <__vfprintf+0x9b9>
   24a77:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24a7d:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   24a83:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24a8a:	48 85 c0             	test   %rax,%rax
   24a8d:	0f 85 92 f9 ff ff    	jne    24425 <__vfprintf+0x314>
   24a93:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   24a9a:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   24aa1:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   24aa8:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   24aaf:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   24ab6:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   24abd:	48 89 c7             	mov    %rax,%rdi
   24ac0:	e8 c1 3a 00 00       	call   28586 <__find_arguments>
   24ac5:	e9 5b f9 ff ff       	jmp    24425 <__vfprintf+0x314>
   24aca:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24ad0:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   24ad6:	e9 68 f9 ff ff       	jmp    24443 <__vfprintf+0x332>
   24adb:	81 8d 70 fd ff ff 80 	orl    $0x80,-0x290(%rbp)
   24ae2:	00 00 00 
   24ae5:	e9 3b f9 ff ff       	jmp    24425 <__vfprintf+0x314>
   24aea:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   24af1:	00 00 00 
   24af4:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   24afb:	cc cc 0c 
   24afe:	0f 8f d9 39 00 00    	jg     284dd <__vfprintf+0x43cc>
   24b04:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   24b0a:	89 d0                	mov    %edx,%eax
   24b0c:	c1 e0 02             	shl    $0x2,%eax
   24b0f:	01 d0                	add    %edx,%eax
   24b11:	01 c0                	add    %eax,%eax
   24b13:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24b19:	b8 30 00 00 00       	mov    $0x30,%eax
   24b1e:	2b 85 64 fd ff ff    	sub    -0x29c(%rbp),%eax
   24b24:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   24b29:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   24b2f:	0f 8f ab 39 00 00    	jg     284e0 <__vfprintf+0x43cf>
   24b35:	8b 95 64 fd ff ff    	mov    -0x29c(%rbp),%edx
   24b3b:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24b41:	01 d0                	add    %edx,%eax
   24b43:	83 e8 30             	sub    $0x30,%eax
   24b46:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24b4c:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24b53:	48 8d 50 01          	lea    0x1(%rax),%rdx
   24b57:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   24b5e:	0f b6 00             	movzbl (%rax),%eax
   24b61:	0f be c0             	movsbl %al,%eax
   24b64:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   24b6a:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   24b70:	83 e8 30             	sub    $0x30,%eax
   24b73:	83 f8 09             	cmp    $0x9,%eax
   24b76:	0f 86 78 ff ff ff    	jbe    24af4 <__vfprintf+0x9e3>
   24b7c:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   24b83:	75 53                	jne    24bd8 <__vfprintf+0xac7>
   24b85:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24b8b:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   24b91:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24b98:	48 85 c0             	test   %rax,%rax
   24b9b:	0f 85 84 f8 ff ff    	jne    24425 <__vfprintf+0x314>
   24ba1:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   24ba8:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   24baf:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   24bb6:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   24bbd:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   24bc4:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   24bcb:	48 89 c7             	mov    %rax,%rdi
   24bce:	e8 b3 39 00 00       	call   28586 <__find_arguments>
   24bd3:	e9 4d f8 ff ff       	jmp    24425 <__vfprintf+0x314>
   24bd8:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24bde:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   24be4:	e9 5a f8 ff ff       	jmp    24443 <__vfprintf+0x332>
   24be9:	83 8d 70 fd ff ff 08 	orl    $0x8,-0x290(%rbp)
   24bf0:	e9 30 f8 ff ff       	jmp    24425 <__vfprintf+0x314>
   24bf5:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24bfc:	0f b6 00             	movzbl (%rax),%eax
   24bff:	3c 68                	cmp    $0x68,%al
   24c01:	75 17                	jne    24c1a <__vfprintf+0xb09>
   24c03:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   24c0a:	01 
   24c0b:	81 8d 70 fd ff ff 00 	orl    $0x800,-0x290(%rbp)
   24c12:	08 00 00 
   24c15:	e9 0b f8 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c1a:	83 8d 70 fd ff ff 40 	orl    $0x40,-0x290(%rbp)
   24c21:	e9 ff f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c26:	81 8d 70 fd ff ff 00 	orl    $0x1000,-0x290(%rbp)
   24c2d:	10 00 00 
   24c30:	e9 f0 f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c35:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   24c3c:	0f b6 00             	movzbl (%rax),%eax
   24c3f:	3c 6c                	cmp    $0x6c,%al
   24c41:	75 14                	jne    24c57 <__vfprintf+0xb46>
   24c43:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   24c4a:	01 
   24c4b:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   24c52:	e9 ce f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c57:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   24c5e:	e9 c2 f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c63:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   24c6a:	e9 b6 f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c6f:	81 8d 70 fd ff ff 00 	orl    $0x200,-0x290(%rbp)
   24c76:	02 00 00 
   24c79:	e9 a7 f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c7e:	81 8d 70 fd ff ff 00 	orl    $0x400,-0x290(%rbp)
   24c85:	04 00 00 
   24c88:	e9 98 f7 ff ff       	jmp    24425 <__vfprintf+0x314>
   24c8d:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24c93:	83 e0 10             	and    $0x10,%eax
   24c96:	85 c0                	test   %eax,%eax
   24c98:	0f 84 1b 01 00 00    	je     24db9 <__vfprintf+0xca8>
   24c9e:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   24ca5:	ba 08 00 00 00       	mov    $0x8,%edx
   24caa:	be 00 00 00 00       	mov    $0x0,%esi
   24caf:	48 89 c7             	mov    %rax,%rdi
   24cb2:	e8 cc e9 ff ff       	call   23683 <memset>
   24cb7:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24cbe:	48 85 c0             	test   %rax,%rax
   24cc1:	74 25                	je     24ce8 <__vfprintf+0xbd7>
   24cc3:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24cca:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24cd0:	8d 50 01             	lea    0x1(%rax),%edx
   24cd3:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24cd9:	48 98                	cltq   
   24cdb:	48 c1 e0 04          	shl    $0x4,%rax
   24cdf:	48 01 c8             	add    %rcx,%rax
   24ce2:	8b 00                	mov    (%rax),%eax
   24ce4:	89 c1                	mov    %eax,%ecx
   24ce6:	eb 63                	jmp    24d4b <__vfprintf+0xc3a>
   24ce8:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24cef:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24cf6:	8b 00                	mov    (%rax),%eax
   24cf8:	83 f8 2f             	cmp    $0x2f,%eax
   24cfb:	77 30                	ja     24d2d <__vfprintf+0xc1c>
   24cfd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24d04:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24d08:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24d0f:	8b 00                	mov    (%rax),%eax
   24d11:	89 c0                	mov    %eax,%eax
   24d13:	48 01 d0             	add    %rdx,%rax
   24d16:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24d1d:	8b 12                	mov    (%rdx),%edx
   24d1f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24d22:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24d29:	89 0a                	mov    %ecx,(%rdx)
   24d2b:	eb 1a                	jmp    24d47 <__vfprintf+0xc36>
   24d2d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24d34:	48 8b 40 08          	mov    0x8(%rax),%rax
   24d38:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24d3c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24d43:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24d47:	8b 00                	mov    (%rax),%eax
   24d49:	89 c1                	mov    %eax,%ecx
   24d4b:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
   24d52:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24d56:	89 ce                	mov    %ecx,%esi
   24d58:	48 89 c7             	mov    %rax,%rdi
   24d5b:	e8 a8 93 00 00       	call   2e108 <wcrtomb>
   24d60:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
   24d67:	48 83 bd 28 fe ff ff 	cmpq   $0xffffffffffffffff,-0x1d8(%rbp)
   24d6e:	ff 
   24d6f:	75 2b                	jne    24d9c <__vfprintf+0xc8b>
   24d71:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24d78:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   24d7c:	83 c8 40             	or     $0x40,%eax
   24d7f:	89 c2                	mov    %eax,%edx
   24d81:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24d88:	66 89 50 10          	mov    %dx,0x10(%rax)
   24d8c:	e8 38 f1 ff ff       	call   23ec9 <__errno>
   24d91:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   24d97:	e9 0a 37 00 00       	jmp    284a6 <__vfprintf+0x4395>
   24d9c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24da0:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   24da7:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   24dae:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   24db4:	e9 b2 00 00 00       	jmp    24e6b <__vfprintf+0xd5a>
   24db9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24dc0:	48 85 c0             	test   %rax,%rax
   24dc3:	74 25                	je     24dea <__vfprintf+0xcd9>
   24dc5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24dcc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24dd2:	8d 50 01             	lea    0x1(%rax),%edx
   24dd5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24ddb:	48 98                	cltq   
   24ddd:	48 c1 e0 04          	shl    $0x4,%rax
   24de1:	48 01 c8             	add    %rcx,%rax
   24de4:	8b 00                	mov    (%rax),%eax
   24de6:	89 c2                	mov    %eax,%edx
   24de8:	eb 63                	jmp    24e4d <__vfprintf+0xd3c>
   24dea:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24df1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24df8:	8b 00                	mov    (%rax),%eax
   24dfa:	83 f8 2f             	cmp    $0x2f,%eax
   24dfd:	77 30                	ja     24e2f <__vfprintf+0xd1e>
   24dff:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24e06:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24e0a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24e11:	8b 00                	mov    (%rax),%eax
   24e13:	89 c0                	mov    %eax,%eax
   24e15:	48 01 d0             	add    %rdx,%rax
   24e18:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24e1f:	8b 12                	mov    (%rdx),%edx
   24e21:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24e24:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24e2b:	89 0a                	mov    %ecx,(%rdx)
   24e2d:	eb 1a                	jmp    24e49 <__vfprintf+0xd38>
   24e2f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24e36:	48 8b 40 08          	mov    0x8(%rax),%rax
   24e3a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24e3e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24e45:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24e49:	8b 00                	mov    (%rax),%eax
   24e4b:	89 c2                	mov    %eax,%edx
   24e4d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24e51:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   24e58:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24e5f:	88 10                	mov    %dl,(%rax)
   24e61:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   24e68:	00 00 00 
   24e6b:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   24e72:	e9 c5 22 00 00       	jmp    2713c <__vfprintf+0x302b>
   24e77:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   24e7e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24e84:	25 00 10 00 00       	and    $0x1000,%eax
   24e89:	85 c0                	test   %eax,%eax
   24e8b:	0f 84 9a 00 00 00    	je     24f2b <__vfprintf+0xe1a>
   24e91:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24e98:	48 85 c0             	test   %rax,%rax
   24e9b:	74 27                	je     24ec4 <__vfprintf+0xdb3>
   24e9d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24ea4:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24eaa:	8d 50 01             	lea    0x1(%rax),%edx
   24ead:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24eb3:	48 98                	cltq   
   24eb5:	48 c1 e0 04          	shl    $0x4,%rax
   24eb9:	48 01 c8             	add    %rcx,%rax
   24ebc:	48 8b 00             	mov    (%rax),%rax
   24ebf:	e9 0f 05 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   24ec4:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24ecb:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24ed2:	8b 00                	mov    (%rax),%eax
   24ed4:	83 f8 2f             	cmp    $0x2f,%eax
   24ed7:	77 30                	ja     24f09 <__vfprintf+0xdf8>
   24ed9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24ee0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24ee4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24eeb:	8b 00                	mov    (%rax),%eax
   24eed:	89 c0                	mov    %eax,%eax
   24eef:	48 01 d0             	add    %rdx,%rax
   24ef2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24ef9:	8b 12                	mov    (%rdx),%edx
   24efb:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24efe:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24f05:	89 0a                	mov    %ecx,(%rdx)
   24f07:	eb 1a                	jmp    24f23 <__vfprintf+0xe12>
   24f09:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24f10:	48 8b 40 08          	mov    0x8(%rax),%rax
   24f14:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24f18:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24f1f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24f23:	48 8b 00             	mov    (%rax),%rax
   24f26:	e9 a8 04 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   24f2b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24f31:	83 e0 20             	and    $0x20,%eax
   24f34:	85 c0                	test   %eax,%eax
   24f36:	0f 84 9a 00 00 00    	je     24fd6 <__vfprintf+0xec5>
   24f3c:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24f43:	48 85 c0             	test   %rax,%rax
   24f46:	74 27                	je     24f6f <__vfprintf+0xe5e>
   24f48:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24f4f:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24f55:	8d 50 01             	lea    0x1(%rax),%edx
   24f58:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24f5e:	48 98                	cltq   
   24f60:	48 c1 e0 04          	shl    $0x4,%rax
   24f64:	48 01 c8             	add    %rcx,%rax
   24f67:	48 8b 00             	mov    (%rax),%rax
   24f6a:	e9 64 04 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   24f6f:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24f76:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24f7d:	8b 00                	mov    (%rax),%eax
   24f7f:	83 f8 2f             	cmp    $0x2f,%eax
   24f82:	77 30                	ja     24fb4 <__vfprintf+0xea3>
   24f84:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24f8b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24f8f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24f96:	8b 00                	mov    (%rax),%eax
   24f98:	89 c0                	mov    %eax,%eax
   24f9a:	48 01 d0             	add    %rdx,%rax
   24f9d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24fa4:	8b 12                	mov    (%rdx),%edx
   24fa6:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24fa9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24fb0:	89 0a                	mov    %ecx,(%rdx)
   24fb2:	eb 1a                	jmp    24fce <__vfprintf+0xebd>
   24fb4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24fbb:	48 8b 40 08          	mov    0x8(%rax),%rax
   24fbf:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24fc3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24fca:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24fce:	48 8b 00             	mov    (%rax),%rax
   24fd1:	e9 fd 03 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   24fd6:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24fdc:	83 e0 10             	and    $0x10,%eax
   24fdf:	85 c0                	test   %eax,%eax
   24fe1:	0f 84 9a 00 00 00    	je     25081 <__vfprintf+0xf70>
   24fe7:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24fee:	48 85 c0             	test   %rax,%rax
   24ff1:	74 27                	je     2501a <__vfprintf+0xf09>
   24ff3:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24ffa:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25000:	8d 50 01             	lea    0x1(%rax),%edx
   25003:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25009:	48 98                	cltq   
   2500b:	48 c1 e0 04          	shl    $0x4,%rax
   2500f:	48 01 c8             	add    %rcx,%rax
   25012:	48 8b 00             	mov    (%rax),%rax
   25015:	e9 b9 03 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   2501a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25021:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25028:	8b 00                	mov    (%rax),%eax
   2502a:	83 f8 2f             	cmp    $0x2f,%eax
   2502d:	77 30                	ja     2505f <__vfprintf+0xf4e>
   2502f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25036:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2503a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25041:	8b 00                	mov    (%rax),%eax
   25043:	89 c0                	mov    %eax,%eax
   25045:	48 01 d0             	add    %rdx,%rax
   25048:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2504f:	8b 12                	mov    (%rdx),%edx
   25051:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25054:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2505b:	89 0a                	mov    %ecx,(%rdx)
   2505d:	eb 1a                	jmp    25079 <__vfprintf+0xf68>
   2505f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25066:	48 8b 40 08          	mov    0x8(%rax),%rax
   2506a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2506e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25075:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25079:	48 8b 00             	mov    (%rax),%rax
   2507c:	e9 52 03 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   25081:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25087:	25 00 02 00 00       	and    $0x200,%eax
   2508c:	85 c0                	test   %eax,%eax
   2508e:	0f 84 9a 00 00 00    	je     2512e <__vfprintf+0x101d>
   25094:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2509b:	48 85 c0             	test   %rax,%rax
   2509e:	74 27                	je     250c7 <__vfprintf+0xfb6>
   250a0:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   250a7:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   250ad:	8d 50 01             	lea    0x1(%rax),%edx
   250b0:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   250b6:	48 98                	cltq   
   250b8:	48 c1 e0 04          	shl    $0x4,%rax
   250bc:	48 01 c8             	add    %rcx,%rax
   250bf:	48 8b 00             	mov    (%rax),%rax
   250c2:	e9 0c 03 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   250c7:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   250ce:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   250d5:	8b 00                	mov    (%rax),%eax
   250d7:	83 f8 2f             	cmp    $0x2f,%eax
   250da:	77 30                	ja     2510c <__vfprintf+0xffb>
   250dc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   250e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   250e7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   250ee:	8b 00                	mov    (%rax),%eax
   250f0:	89 c0                	mov    %eax,%eax
   250f2:	48 01 d0             	add    %rdx,%rax
   250f5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   250fc:	8b 12                	mov    (%rdx),%edx
   250fe:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25101:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25108:	89 0a                	mov    %ecx,(%rdx)
   2510a:	eb 1a                	jmp    25126 <__vfprintf+0x1015>
   2510c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25113:	48 8b 40 08          	mov    0x8(%rax),%rax
   25117:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2511b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25122:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25126:	48 8b 00             	mov    (%rax),%rax
   25129:	e9 a5 02 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   2512e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25134:	25 00 04 00 00       	and    $0x400,%eax
   25139:	85 c0                	test   %eax,%eax
   2513b:	0f 84 9a 00 00 00    	je     251db <__vfprintf+0x10ca>
   25141:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25148:	48 85 c0             	test   %rax,%rax
   2514b:	74 27                	je     25174 <__vfprintf+0x1063>
   2514d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25154:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2515a:	8d 50 01             	lea    0x1(%rax),%edx
   2515d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25163:	48 98                	cltq   
   25165:	48 c1 e0 04          	shl    $0x4,%rax
   25169:	48 01 c8             	add    %rcx,%rax
   2516c:	48 8b 00             	mov    (%rax),%rax
   2516f:	e9 5f 02 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   25174:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2517b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25182:	8b 00                	mov    (%rax),%eax
   25184:	83 f8 2f             	cmp    $0x2f,%eax
   25187:	77 30                	ja     251b9 <__vfprintf+0x10a8>
   25189:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25190:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25194:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2519b:	8b 00                	mov    (%rax),%eax
   2519d:	89 c0                	mov    %eax,%eax
   2519f:	48 01 d0             	add    %rdx,%rax
   251a2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   251a9:	8b 12                	mov    (%rdx),%edx
   251ab:	8d 4a 08             	lea    0x8(%rdx),%ecx
   251ae:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   251b5:	89 0a                	mov    %ecx,(%rdx)
   251b7:	eb 1a                	jmp    251d3 <__vfprintf+0x10c2>
   251b9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   251c0:	48 8b 40 08          	mov    0x8(%rax),%rax
   251c4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   251c8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   251cf:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   251d3:	48 8b 00             	mov    (%rax),%rax
   251d6:	e9 f8 01 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   251db:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   251e1:	83 e0 40             	and    $0x40,%eax
   251e4:	85 c0                	test   %eax,%eax
   251e6:	0f 84 a0 00 00 00    	je     2528c <__vfprintf+0x117b>
   251ec:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   251f3:	48 85 c0             	test   %rax,%rax
   251f6:	74 2a                	je     25222 <__vfprintf+0x1111>
   251f8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   251ff:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25205:	8d 50 01             	lea    0x1(%rax),%edx
   25208:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2520e:	48 98                	cltq   
   25210:	48 c1 e0 04          	shl    $0x4,%rax
   25214:	48 01 c8             	add    %rcx,%rax
   25217:	8b 00                	mov    (%rax),%eax
   25219:	48 0f bf c0          	movswq %ax,%rax
   2521d:	e9 b1 01 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   25222:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25229:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25230:	8b 00                	mov    (%rax),%eax
   25232:	83 f8 2f             	cmp    $0x2f,%eax
   25235:	77 30                	ja     25267 <__vfprintf+0x1156>
   25237:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2523e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25242:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25249:	8b 00                	mov    (%rax),%eax
   2524b:	89 c0                	mov    %eax,%eax
   2524d:	48 01 d0             	add    %rdx,%rax
   25250:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25257:	8b 12                	mov    (%rdx),%edx
   25259:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2525c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25263:	89 0a                	mov    %ecx,(%rdx)
   25265:	eb 1a                	jmp    25281 <__vfprintf+0x1170>
   25267:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2526e:	48 8b 40 08          	mov    0x8(%rax),%rax
   25272:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25276:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2527d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25281:	8b 00                	mov    (%rax),%eax
   25283:	48 0f bf c0          	movswq %ax,%rax
   25287:	e9 47 01 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   2528c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25292:	25 00 08 00 00       	and    $0x800,%eax
   25297:	85 c0                	test   %eax,%eax
   25299:	0f 84 a0 00 00 00    	je     2533f <__vfprintf+0x122e>
   2529f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   252a6:	48 85 c0             	test   %rax,%rax
   252a9:	74 2a                	je     252d5 <__vfprintf+0x11c4>
   252ab:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   252b2:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   252b8:	8d 50 01             	lea    0x1(%rax),%edx
   252bb:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   252c1:	48 98                	cltq   
   252c3:	48 c1 e0 04          	shl    $0x4,%rax
   252c7:	48 01 c8             	add    %rcx,%rax
   252ca:	8b 00                	mov    (%rax),%eax
   252cc:	48 0f be c0          	movsbq %al,%rax
   252d0:	e9 fe 00 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   252d5:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   252dc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   252e3:	8b 00                	mov    (%rax),%eax
   252e5:	83 f8 2f             	cmp    $0x2f,%eax
   252e8:	77 30                	ja     2531a <__vfprintf+0x1209>
   252ea:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   252f1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   252f5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   252fc:	8b 00                	mov    (%rax),%eax
   252fe:	89 c0                	mov    %eax,%eax
   25300:	48 01 d0             	add    %rdx,%rax
   25303:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2530a:	8b 12                	mov    (%rdx),%edx
   2530c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2530f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25316:	89 0a                	mov    %ecx,(%rdx)
   25318:	eb 1a                	jmp    25334 <__vfprintf+0x1223>
   2531a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25321:	48 8b 40 08          	mov    0x8(%rax),%rax
   25325:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25329:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25330:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25334:	8b 00                	mov    (%rax),%eax
   25336:	48 0f be c0          	movsbq %al,%rax
   2533a:	e9 94 00 00 00       	jmp    253d3 <__vfprintf+0x12c2>
   2533f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25346:	48 85 c0             	test   %rax,%rax
   25349:	74 25                	je     25370 <__vfprintf+0x125f>
   2534b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25352:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25358:	8d 50 01             	lea    0x1(%rax),%edx
   2535b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25361:	48 98                	cltq   
   25363:	48 c1 e0 04          	shl    $0x4,%rax
   25367:	48 01 c8             	add    %rcx,%rax
   2536a:	8b 00                	mov    (%rax),%eax
   2536c:	48 98                	cltq   
   2536e:	eb 63                	jmp    253d3 <__vfprintf+0x12c2>
   25370:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25377:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2537e:	8b 00                	mov    (%rax),%eax
   25380:	83 f8 2f             	cmp    $0x2f,%eax
   25383:	77 30                	ja     253b5 <__vfprintf+0x12a4>
   25385:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2538c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25390:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25397:	8b 00                	mov    (%rax),%eax
   25399:	89 c0                	mov    %eax,%eax
   2539b:	48 01 d0             	add    %rdx,%rax
   2539e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   253a5:	8b 12                	mov    (%rdx),%edx
   253a7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   253aa:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   253b1:	89 0a                	mov    %ecx,(%rdx)
   253b3:	eb 1a                	jmp    253cf <__vfprintf+0x12be>
   253b5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   253bc:	48 8b 40 08          	mov    0x8(%rax),%rax
   253c0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   253c4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   253cb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   253cf:	8b 00                	mov    (%rax),%eax
   253d1:	48 98                	cltq   
   253d3:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   253da:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   253e1:	48 85 c0             	test   %rax,%rax
   253e4:	79 0e                	jns    253f4 <__vfprintf+0x12e3>
   253e6:	48 f7 9d e0 fd ff ff 	negq   -0x220(%rbp)
   253ed:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   253f4:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   253fb:	00 00 00 
   253fe:	e9 f5 1a 00 00       	jmp    26ef8 <__vfprintf+0x2de7>
   25403:	83 bd 64 fd ff ff 61 	cmpl   $0x61,-0x29c(%rbp)
   2540a:	75 1b                	jne    25427 <__vfprintf+0x1316>
   2540c:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   25410:	48 8d 05 19 e8 00 00 	lea    0xe819(%rip),%rax        # 33c30 <xdigs_lower.3343>
   25417:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   2541e:	c6 85 57 fd ff ff 70 	movb   $0x70,-0x2a9(%rbp)
   25425:	eb 19                	jmp    25440 <__vfprintf+0x132f>
   25427:	c6 45 87 58          	movb   $0x58,-0x79(%rbp)
   2542b:	48 8d 05 0e e8 00 00 	lea    0xe80e(%rip),%rax        # 33c40 <xdigs_upper.3344>
   25432:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   25439:	c6 85 57 fd ff ff 50 	movb   $0x50,-0x2a9(%rbp)
   25440:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25447:	78 07                	js     25450 <__vfprintf+0x133f>
   25449:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   25450:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   25457:	00 
   25458:	74 0f                	je     25469 <__vfprintf+0x1358>
   2545a:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   25461:	48 89 c7             	mov    %rax,%rdi
   25464:	e8 7b 54 00 00       	call   2a8e4 <__freedtoa>
   25469:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2546f:	83 e0 08             	and    $0x8,%eax
   25472:	85 c0                	test   %eax,%eax
   25474:	0f 84 d2 00 00 00    	je     2554c <__vfprintf+0x143b>
   2547a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25481:	48 85 c0             	test   %rax,%rax
   25484:	74 23                	je     254a9 <__vfprintf+0x1398>
   25486:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2548d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25493:	8d 50 01             	lea    0x1(%rax),%edx
   25496:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2549c:	48 98                	cltq   
   2549e:	48 c1 e0 04          	shl    $0x4,%rax
   254a2:	48 01 c8             	add    %rcx,%rax
   254a5:	db 28                	fldt   (%rax)
   254a7:	eb 2b                	jmp    254d4 <__vfprintf+0x13c3>
   254a9:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   254b0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   254b7:	48 8b 40 08          	mov    0x8(%rax),%rax
   254bb:	48 83 c0 0f          	add    $0xf,%rax
   254bf:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   254c3:	48 8d 48 10          	lea    0x10(%rax),%rcx
   254c7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   254ce:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   254d2:	db 28                	fldt   (%rax)
   254d4:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   254da:	db ad 30 fe ff ff    	fldt   -0x1d0(%rbp)
   254e0:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   254e7:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   254ee:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   254f5:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   254fb:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   25502:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   25507:	db 3c 24             	fstpt  (%rsp)
   2550a:	49 89 f8             	mov    %rdi,%r8
   2550d:	48 89 c7             	mov    %rax,%rdi
   25510:	e8 25 72 00 00       	call   2c73a <__hldtoa>
   25515:	48 83 c4 10          	add    $0x10,%rsp
   25519:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   25520:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   25527:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   2552e:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   25535:	00 
   25536:	0f 85 14 01 00 00    	jne    25650 <__vfprintf+0x153f>
   2553c:	e8 88 e9 ff ff       	call   23ec9 <__errno>
   25541:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   25547:	e9 5a 2f 00 00       	jmp    284a6 <__vfprintf+0x4395>
   2554c:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25553:	48 85 c0             	test   %rax,%rax
   25556:	74 25                	je     2557d <__vfprintf+0x146c>
   25558:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2555f:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25565:	8d 50 01             	lea    0x1(%rax),%edx
   25568:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2556e:	48 98                	cltq   
   25570:	48 c1 e0 04          	shl    $0x4,%rax
   25574:	48 01 c8             	add    %rcx,%rax
   25577:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2557b:	eb 69                	jmp    255e6 <__vfprintf+0x14d5>
   2557d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25584:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2558b:	8b 40 04             	mov    0x4(%rax),%eax
   2558e:	3d af 00 00 00       	cmp    $0xaf,%eax
   25593:	77 33                	ja     255c8 <__vfprintf+0x14b7>
   25595:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2559c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   255a0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   255a7:	8b 40 04             	mov    0x4(%rax),%eax
   255aa:	89 c0                	mov    %eax,%eax
   255ac:	48 01 d0             	add    %rdx,%rax
   255af:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   255b6:	8b 52 04             	mov    0x4(%rdx),%edx
   255b9:	8d 4a 10             	lea    0x10(%rdx),%ecx
   255bc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   255c3:	89 4a 04             	mov    %ecx,0x4(%rdx)
   255c6:	eb 1a                	jmp    255e2 <__vfprintf+0x14d1>
   255c8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   255cf:	48 8b 40 08          	mov    0x8(%rax),%rax
   255d3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   255d7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   255de:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   255e2:	f2 0f 10 00          	movsd  (%rax),%xmm0
   255e6:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   255ed:	ff 
   255ee:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   255f5:	4c 8d 85 a8 fd ff ff 	lea    -0x258(%rbp),%r8
   255fc:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   25603:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   2560a:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   25610:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   25617:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2561c:	e8 c7 6d 00 00       	call   2c3e8 <__hdtoa>
   25621:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   25628:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2562f:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   25636:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   2563d:	00 
   2563e:	75 10                	jne    25650 <__vfprintf+0x153f>
   25640:	e8 84 e8 ff ff       	call   23ec9 <__errno>
   25645:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2564b:	e9 56 2e 00 00       	jmp    284a6 <__vfprintf+0x4395>
   25650:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25657:	79 14                	jns    2566d <__vfprintf+0x155c>
   25659:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   25660:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   25667:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   2566d:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25673:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   25678:	0f 85 ae 02 00 00    	jne    2592c <__vfprintf+0x181b>
   2567e:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   25682:	e9 a5 02 00 00       	jmp    2592c <__vfprintf+0x181b>
   25687:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   2568d:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   25693:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   2569a:	79 0c                	jns    256a8 <__vfprintf+0x1597>
   2569c:	c7 85 7c fd ff ff 07 	movl   $0x7,-0x284(%rbp)
   256a3:	00 00 00 
   256a6:	eb 37                	jmp    256df <__vfprintf+0x15ce>
   256a8:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   256af:	eb 2e                	jmp    256df <__vfprintf+0x15ce>
   256b1:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   256b8:	eb 25                	jmp    256df <__vfprintf+0x15ce>
   256ba:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   256c0:	83 e8 02             	sub    $0x2,%eax
   256c3:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   256c9:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   256d0:	75 0c                	jne    256de <__vfprintf+0x15cd>
   256d2:	c7 85 7c fd ff ff 01 	movl   $0x1,-0x284(%rbp)
   256d9:	00 00 00 
   256dc:	eb 01                	jmp    256df <__vfprintf+0x15ce>
   256de:	90                   	nop
   256df:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   256e6:	79 0a                	jns    256f2 <__vfprintf+0x15e1>
   256e8:	c7 85 7c fd ff ff 06 	movl   $0x6,-0x284(%rbp)
   256ef:	00 00 00 
   256f2:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   256f9:	00 
   256fa:	74 0f                	je     2570b <__vfprintf+0x15fa>
   256fc:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   25703:	48 89 c7             	mov    %rax,%rdi
   25706:	e8 d9 51 00 00       	call   2a8e4 <__freedtoa>
   2570b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25711:	83 e0 08             	and    $0x8,%eax
   25714:	85 c0                	test   %eax,%eax
   25716:	0f 84 dd 00 00 00    	je     257f9 <__vfprintf+0x16e8>
   2571c:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25723:	48 85 c0             	test   %rax,%rax
   25726:	74 23                	je     2574b <__vfprintf+0x163a>
   25728:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2572f:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25735:	8d 50 01             	lea    0x1(%rax),%edx
   25738:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2573e:	48 98                	cltq   
   25740:	48 c1 e0 04          	shl    $0x4,%rax
   25744:	48 01 c8             	add    %rcx,%rax
   25747:	db 28                	fldt   (%rax)
   25749:	eb 2b                	jmp    25776 <__vfprintf+0x1665>
   2574b:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25752:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25759:	48 8b 40 08          	mov    0x8(%rax),%rax
   2575d:	48 83 c0 0f          	add    $0xf,%rax
   25761:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   25765:	48 8d 48 10          	lea    0x10(%rax),%rcx
   25769:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25770:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25774:	db 28                	fldt   (%rax)
   25776:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   2577c:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   25783:	74 08                	je     2578d <__vfprintf+0x167c>
   25785:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   2578b:	eb 06                	jmp    25793 <__vfprintf+0x1682>
   2578d:	41 ba 03 00 00 00    	mov    $0x3,%r10d
   25793:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   2579a:	48 8d b5 5c fd ff ff 	lea    -0x2a4(%rbp),%rsi
   257a1:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
   257a8:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   257ae:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
   257b5:	49 89 f9             	mov    %rdi,%r9
   257b8:	49 89 f0             	mov    %rsi,%r8
   257bb:	44 89 d6             	mov    %r10d,%esi
   257be:	48 89 c7             	mov    %rax,%rdi
   257c1:	e8 90 72 00 00       	call   2ca56 <__ldtoa>
   257c6:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   257cd:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   257d4:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   257db:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   257e2:	00 
   257e3:	0f 85 47 01 00 00    	jne    25930 <__vfprintf+0x181f>
   257e9:	e8 db e6 ff ff       	call   23ec9 <__errno>
   257ee:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   257f4:	e9 ad 2c 00 00       	jmp    284a6 <__vfprintf+0x4395>
   257f9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25800:	48 85 c0             	test   %rax,%rax
   25803:	74 25                	je     2582a <__vfprintf+0x1719>
   25805:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2580c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25812:	8d 50 01             	lea    0x1(%rax),%edx
   25815:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2581b:	48 98                	cltq   
   2581d:	48 c1 e0 04          	shl    $0x4,%rax
   25821:	48 01 c8             	add    %rcx,%rax
   25824:	f2 0f 10 00          	movsd  (%rax),%xmm0
   25828:	eb 69                	jmp    25893 <__vfprintf+0x1782>
   2582a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25831:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25838:	8b 40 04             	mov    0x4(%rax),%eax
   2583b:	3d af 00 00 00       	cmp    $0xaf,%eax
   25840:	77 33                	ja     25875 <__vfprintf+0x1764>
   25842:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25849:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2584d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25854:	8b 40 04             	mov    0x4(%rax),%eax
   25857:	89 c0                	mov    %eax,%eax
   25859:	48 01 d0             	add    %rdx,%rax
   2585c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25863:	8b 52 04             	mov    0x4(%rdx),%edx
   25866:	8d 4a 10             	lea    0x10(%rdx),%ecx
   25869:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25870:	89 4a 04             	mov    %ecx,0x4(%rdx)
   25873:	eb 1a                	jmp    2588f <__vfprintf+0x177e>
   25875:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2587c:	48 8b 40 08          	mov    0x8(%rax),%rax
   25880:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25884:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2588b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2588f:	f2 0f 10 00          	movsd  (%rax),%xmm0
   25893:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   2589a:	ff 
   2589b:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   258a2:	74 08                	je     258ac <__vfprintf+0x179b>
   258a4:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   258aa:	eb 06                	jmp    258b2 <__vfprintf+0x17a1>
   258ac:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   258b2:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   258b9:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   258c0:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   258c7:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   258ce:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   258d4:	49 89 f8             	mov    %rdi,%r8
   258d7:	44 89 cf             	mov    %r9d,%edi
   258da:	66 48 0f 6e c0       	movq   %rax,%xmm0
   258df:	e8 50 53 00 00       	call   2ac34 <__dtoa>
   258e4:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   258eb:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   258f2:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   258f9:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   25900:	00 
   25901:	75 10                	jne    25913 <__vfprintf+0x1802>
   25903:	e8 c1 e5 ff ff       	call   23ec9 <__errno>
   25908:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2590e:	e9 93 2b 00 00       	jmp    284a6 <__vfprintf+0x4395>
   25913:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25919:	3d 0f 27 00 00       	cmp    $0x270f,%eax
   2591e:	75 0f                	jne    2592f <__vfprintf+0x181e>
   25920:	c7 85 60 fd ff ff ff 	movl   $0x7fffffff,-0x2a0(%rbp)
   25927:	ff ff 7f 
   2592a:	eb 04                	jmp    25930 <__vfprintf+0x181f>
   2592c:	90                   	nop
   2592d:	eb 01                	jmp    25930 <__vfprintf+0x181f>
   2592f:	90                   	nop
   25930:	8b 85 5c fd ff ff    	mov    -0x2a4(%rbp),%eax
   25936:	85 c0                	test   %eax,%eax
   25938:	74 07                	je     25941 <__vfprintf+0x1830>
   2593a:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   25941:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25947:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   2594c:	75 70                	jne    259be <__vfprintf+0x18ad>
   2594e:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   25955:	0f b6 00             	movzbl (%rax),%eax
   25958:	3c 4e                	cmp    $0x4e,%al
   2595a:	75 29                	jne    25985 <__vfprintf+0x1874>
   2595c:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   25963:	7e 09                	jle    2596e <__vfprintf+0x185d>
   25965:	48 8d 05 44 df 00 00 	lea    0xdf44(%rip),%rax        # 338b0 <__func__.2555+0x7>
   2596c:	eb 07                	jmp    25975 <__vfprintf+0x1864>
   2596e:	48 8d 05 3f df 00 00 	lea    0xdf3f(%rip),%rax        # 338b4 <__func__.2555+0xb>
   25975:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2597c:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   25983:	eb 20                	jmp    259a5 <__vfprintf+0x1894>
   25985:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   2598c:	7e 09                	jle    25997 <__vfprintf+0x1886>
   2598e:	48 8d 05 23 df 00 00 	lea    0xdf23(%rip),%rax        # 338b8 <__func__.2555+0xf>
   25995:	eb 07                	jmp    2599e <__vfprintf+0x188d>
   25997:	48 8d 05 1e df 00 00 	lea    0xdf1e(%rip),%rax        # 338bc <__func__.2555+0x13>
   2599e:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   259a5:	c7 85 98 fd ff ff 03 	movl   $0x3,-0x268(%rbp)
   259ac:	00 00 00 
   259af:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   259b6:	ff ff ff 
   259b9:	e9 7e 17 00 00       	jmp    2713c <__vfprintf+0x302b>
   259be:	81 8d 70 fd ff ff 00 	orl    $0x100,-0x290(%rbp)
   259c5:	01 00 00 
   259c8:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   259cf:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   259d6:	89 85 88 fd ff ff    	mov    %eax,-0x278(%rbp)
   259dc:	83 bd 64 fd ff ff 67 	cmpl   $0x67,-0x29c(%rbp)
   259e3:	74 09                	je     259ee <__vfprintf+0x18dd>
   259e5:	83 bd 64 fd ff ff 47 	cmpl   $0x47,-0x29c(%rbp)
   259ec:	75 7f                	jne    25a6d <__vfprintf+0x195c>
   259ee:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   259f4:	83 f8 fd             	cmp    $0xfffffffd,%eax
   259f7:	7c 5b                	jl     25a54 <__vfprintf+0x1943>
   259f9:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   259ff:	39 85 7c fd ff ff    	cmp    %eax,-0x284(%rbp)
   25a05:	7c 4d                	jl     25a54 <__vfprintf+0x1943>
   25a07:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   25a0e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25a14:	83 e0 01             	and    $0x1,%eax
   25a17:	85 c0                	test   %eax,%eax
   25a19:	74 0e                	je     25a29 <__vfprintf+0x1918>
   25a1b:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25a21:	29 85 7c fd ff ff    	sub    %eax,-0x284(%rbp)
   25a27:	eb 16                	jmp    25a3f <__vfprintf+0x192e>
   25a29:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25a2f:	8b 95 88 fd ff ff    	mov    -0x278(%rbp),%edx
   25a35:	29 c2                	sub    %eax,%edx
   25a37:	89 d0                	mov    %edx,%eax
   25a39:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   25a3f:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25a46:	79 25                	jns    25a6d <__vfprintf+0x195c>
   25a48:	c7 85 7c fd ff ff 00 	movl   $0x0,-0x284(%rbp)
   25a4f:	00 00 00 
   25a52:	eb 19                	jmp    25a6d <__vfprintf+0x195c>
   25a54:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25a5a:	83 e0 01             	and    $0x1,%eax
   25a5d:	85 c0                	test   %eax,%eax
   25a5f:	75 0c                	jne    25a6d <__vfprintf+0x195c>
   25a61:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   25a67:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   25a6d:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   25a74:	74 5e                	je     25ad4 <__vfprintf+0x19c3>
   25a76:	0f be 95 57 fd ff ff 	movsbl -0x2a9(%rbp),%edx
   25a7d:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25a83:	8d 48 ff             	lea    -0x1(%rax),%ecx
   25a86:	48 8d 45 88          	lea    -0x78(%rbp),%rax
   25a8a:	89 ce                	mov    %ecx,%esi
   25a8c:	48 89 c7             	mov    %rax,%rdi
   25a8f:	e8 00 49 00 00       	call   2a394 <exponent>
   25a94:	89 85 80 fd ff ff    	mov    %eax,-0x280(%rbp)
   25a9a:	8b 95 80 fd ff ff    	mov    -0x280(%rbp),%edx
   25aa0:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   25aa6:	01 d0                	add    %edx,%eax
   25aa8:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   25aae:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   25ab5:	7f 11                	jg     25ac8 <__vfprintf+0x19b7>
   25ab7:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25abd:	83 e0 01             	and    $0x1,%eax
   25ac0:	85 c0                	test   %eax,%eax
   25ac2:	0f 84 73 16 00 00    	je     2713b <__vfprintf+0x302a>
   25ac8:	83 85 98 fd ff ff 01 	addl   $0x1,-0x268(%rbp)
   25acf:	e9 67 16 00 00       	jmp    2713b <__vfprintf+0x302a>
   25ad4:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25ada:	85 c0                	test   %eax,%eax
   25adc:	7e 0e                	jle    25aec <__vfprintf+0x19db>
   25ade:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25ae4:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   25aea:	eb 0a                	jmp    25af6 <__vfprintf+0x19e5>
   25aec:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   25af3:	00 00 00 
   25af6:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25afd:	75 0d                	jne    25b0c <__vfprintf+0x19fb>
   25aff:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25b05:	83 e0 01             	and    $0x1,%eax
   25b08:	85 c0                	test   %eax,%eax
   25b0a:	74 17                	je     25b23 <__vfprintf+0x1a12>
   25b0c:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   25b12:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   25b18:	01 d0                	add    %edx,%eax
   25b1a:	83 c0 01             	add    $0x1,%eax
   25b1d:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   25b23:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25b29:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
   25b2f:	e9 07 16 00 00       	jmp    2713b <__vfprintf+0x302a>
   25b34:	e8 62 bf 00 00       	call   31a9b <abort>
   25b39:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   25b40:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25b46:	25 00 10 00 00       	and    $0x1000,%eax
   25b4b:	85 c0                	test   %eax,%eax
   25b4d:	0f 84 9a 00 00 00    	je     25bed <__vfprintf+0x1adc>
   25b53:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25b5a:	48 85 c0             	test   %rax,%rax
   25b5d:	74 27                	je     25b86 <__vfprintf+0x1a75>
   25b5f:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25b66:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25b6c:	8d 50 01             	lea    0x1(%rax),%edx
   25b6f:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25b75:	48 98                	cltq   
   25b77:	48 c1 e0 04          	shl    $0x4,%rax
   25b7b:	48 01 c8             	add    %rcx,%rax
   25b7e:	48 8b 00             	mov    (%rax),%rax
   25b81:	e9 0b 05 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25b86:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25b8d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25b94:	8b 00                	mov    (%rax),%eax
   25b96:	83 f8 2f             	cmp    $0x2f,%eax
   25b99:	77 30                	ja     25bcb <__vfprintf+0x1aba>
   25b9b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25ba2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25ba6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25bad:	8b 00                	mov    (%rax),%eax
   25baf:	89 c0                	mov    %eax,%eax
   25bb1:	48 01 d0             	add    %rdx,%rax
   25bb4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25bbb:	8b 12                	mov    (%rdx),%edx
   25bbd:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25bc0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25bc7:	89 0a                	mov    %ecx,(%rdx)
   25bc9:	eb 1a                	jmp    25be5 <__vfprintf+0x1ad4>
   25bcb:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25bd2:	48 8b 40 08          	mov    0x8(%rax),%rax
   25bd6:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25bda:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25be1:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25be5:	48 8b 00             	mov    (%rax),%rax
   25be8:	e9 a4 04 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25bed:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25bf3:	83 e0 20             	and    $0x20,%eax
   25bf6:	85 c0                	test   %eax,%eax
   25bf8:	0f 84 9a 00 00 00    	je     25c98 <__vfprintf+0x1b87>
   25bfe:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25c05:	48 85 c0             	test   %rax,%rax
   25c08:	74 27                	je     25c31 <__vfprintf+0x1b20>
   25c0a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25c11:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25c17:	8d 50 01             	lea    0x1(%rax),%edx
   25c1a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25c20:	48 98                	cltq   
   25c22:	48 c1 e0 04          	shl    $0x4,%rax
   25c26:	48 01 c8             	add    %rcx,%rax
   25c29:	48 8b 00             	mov    (%rax),%rax
   25c2c:	e9 60 04 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25c31:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25c38:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25c3f:	8b 00                	mov    (%rax),%eax
   25c41:	83 f8 2f             	cmp    $0x2f,%eax
   25c44:	77 30                	ja     25c76 <__vfprintf+0x1b65>
   25c46:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25c4d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25c51:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25c58:	8b 00                	mov    (%rax),%eax
   25c5a:	89 c0                	mov    %eax,%eax
   25c5c:	48 01 d0             	add    %rdx,%rax
   25c5f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25c66:	8b 12                	mov    (%rdx),%edx
   25c68:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25c6b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25c72:	89 0a                	mov    %ecx,(%rdx)
   25c74:	eb 1a                	jmp    25c90 <__vfprintf+0x1b7f>
   25c76:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25c7d:	48 8b 40 08          	mov    0x8(%rax),%rax
   25c81:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25c85:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25c8c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25c90:	48 8b 00             	mov    (%rax),%rax
   25c93:	e9 f9 03 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25c98:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25c9e:	83 e0 10             	and    $0x10,%eax
   25ca1:	85 c0                	test   %eax,%eax
   25ca3:	0f 84 9a 00 00 00    	je     25d43 <__vfprintf+0x1c32>
   25ca9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25cb0:	48 85 c0             	test   %rax,%rax
   25cb3:	74 27                	je     25cdc <__vfprintf+0x1bcb>
   25cb5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25cbc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25cc2:	8d 50 01             	lea    0x1(%rax),%edx
   25cc5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25ccb:	48 98                	cltq   
   25ccd:	48 c1 e0 04          	shl    $0x4,%rax
   25cd1:	48 01 c8             	add    %rcx,%rax
   25cd4:	48 8b 00             	mov    (%rax),%rax
   25cd7:	e9 b5 03 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25cdc:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25ce3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25cea:	8b 00                	mov    (%rax),%eax
   25cec:	83 f8 2f             	cmp    $0x2f,%eax
   25cef:	77 30                	ja     25d21 <__vfprintf+0x1c10>
   25cf1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25cf8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25cfc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25d03:	8b 00                	mov    (%rax),%eax
   25d05:	89 c0                	mov    %eax,%eax
   25d07:	48 01 d0             	add    %rdx,%rax
   25d0a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25d11:	8b 12                	mov    (%rdx),%edx
   25d13:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25d16:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25d1d:	89 0a                	mov    %ecx,(%rdx)
   25d1f:	eb 1a                	jmp    25d3b <__vfprintf+0x1c2a>
   25d21:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25d28:	48 8b 40 08          	mov    0x8(%rax),%rax
   25d2c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25d30:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25d37:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25d3b:	48 8b 00             	mov    (%rax),%rax
   25d3e:	e9 4e 03 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25d43:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25d49:	25 00 02 00 00       	and    $0x200,%eax
   25d4e:	85 c0                	test   %eax,%eax
   25d50:	0f 84 9a 00 00 00    	je     25df0 <__vfprintf+0x1cdf>
   25d56:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25d5d:	48 85 c0             	test   %rax,%rax
   25d60:	74 27                	je     25d89 <__vfprintf+0x1c78>
   25d62:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25d69:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25d6f:	8d 50 01             	lea    0x1(%rax),%edx
   25d72:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25d78:	48 98                	cltq   
   25d7a:	48 c1 e0 04          	shl    $0x4,%rax
   25d7e:	48 01 c8             	add    %rcx,%rax
   25d81:	48 8b 00             	mov    (%rax),%rax
   25d84:	e9 08 03 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25d89:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25d90:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25d97:	8b 00                	mov    (%rax),%eax
   25d99:	83 f8 2f             	cmp    $0x2f,%eax
   25d9c:	77 30                	ja     25dce <__vfprintf+0x1cbd>
   25d9e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25da5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25da9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25db0:	8b 00                	mov    (%rax),%eax
   25db2:	89 c0                	mov    %eax,%eax
   25db4:	48 01 d0             	add    %rdx,%rax
   25db7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25dbe:	8b 12                	mov    (%rdx),%edx
   25dc0:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25dc3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25dca:	89 0a                	mov    %ecx,(%rdx)
   25dcc:	eb 1a                	jmp    25de8 <__vfprintf+0x1cd7>
   25dce:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25dd5:	48 8b 40 08          	mov    0x8(%rax),%rax
   25dd9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25ddd:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25de4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25de8:	48 8b 00             	mov    (%rax),%rax
   25deb:	e9 a1 02 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25df0:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25df6:	25 00 04 00 00       	and    $0x400,%eax
   25dfb:	85 c0                	test   %eax,%eax
   25dfd:	0f 84 9a 00 00 00    	je     25e9d <__vfprintf+0x1d8c>
   25e03:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25e0a:	48 85 c0             	test   %rax,%rax
   25e0d:	74 27                	je     25e36 <__vfprintf+0x1d25>
   25e0f:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25e16:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25e1c:	8d 50 01             	lea    0x1(%rax),%edx
   25e1f:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25e25:	48 98                	cltq   
   25e27:	48 c1 e0 04          	shl    $0x4,%rax
   25e2b:	48 01 c8             	add    %rcx,%rax
   25e2e:	48 8b 00             	mov    (%rax),%rax
   25e31:	e9 5b 02 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25e36:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25e3d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25e44:	8b 00                	mov    (%rax),%eax
   25e46:	83 f8 2f             	cmp    $0x2f,%eax
   25e49:	77 30                	ja     25e7b <__vfprintf+0x1d6a>
   25e4b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25e52:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25e56:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25e5d:	8b 00                	mov    (%rax),%eax
   25e5f:	89 c0                	mov    %eax,%eax
   25e61:	48 01 d0             	add    %rdx,%rax
   25e64:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25e6b:	8b 12                	mov    (%rdx),%edx
   25e6d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25e70:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25e77:	89 0a                	mov    %ecx,(%rdx)
   25e79:	eb 1a                	jmp    25e95 <__vfprintf+0x1d84>
   25e7b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25e82:	48 8b 40 08          	mov    0x8(%rax),%rax
   25e86:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25e8a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25e91:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25e95:	48 8b 00             	mov    (%rax),%rax
   25e98:	e9 f4 01 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25e9d:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25ea3:	83 e0 40             	and    $0x40,%eax
   25ea6:	85 c0                	test   %eax,%eax
   25ea8:	0f 84 9e 00 00 00    	je     25f4c <__vfprintf+0x1e3b>
   25eae:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25eb5:	48 85 c0             	test   %rax,%rax
   25eb8:	74 29                	je     25ee3 <__vfprintf+0x1dd2>
   25eba:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25ec1:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25ec7:	8d 50 01             	lea    0x1(%rax),%edx
   25eca:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25ed0:	48 98                	cltq   
   25ed2:	48 c1 e0 04          	shl    $0x4,%rax
   25ed6:	48 01 c8             	add    %rcx,%rax
   25ed9:	8b 00                	mov    (%rax),%eax
   25edb:	0f b7 c0             	movzwl %ax,%eax
   25ede:	e9 ae 01 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25ee3:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25eea:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25ef1:	8b 00                	mov    (%rax),%eax
   25ef3:	83 f8 2f             	cmp    $0x2f,%eax
   25ef6:	77 30                	ja     25f28 <__vfprintf+0x1e17>
   25ef8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25eff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25f03:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25f0a:	8b 00                	mov    (%rax),%eax
   25f0c:	89 c0                	mov    %eax,%eax
   25f0e:	48 01 d0             	add    %rdx,%rax
   25f11:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25f18:	8b 12                	mov    (%rdx),%edx
   25f1a:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25f1d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25f24:	89 0a                	mov    %ecx,(%rdx)
   25f26:	eb 1a                	jmp    25f42 <__vfprintf+0x1e31>
   25f28:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25f2f:	48 8b 40 08          	mov    0x8(%rax),%rax
   25f33:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25f37:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25f3e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25f42:	8b 00                	mov    (%rax),%eax
   25f44:	0f b7 c0             	movzwl %ax,%eax
   25f47:	e9 45 01 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25f4c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25f52:	25 00 08 00 00       	and    $0x800,%eax
   25f57:	85 c0                	test   %eax,%eax
   25f59:	0f 84 9e 00 00 00    	je     25ffd <__vfprintf+0x1eec>
   25f5f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25f66:	48 85 c0             	test   %rax,%rax
   25f69:	74 29                	je     25f94 <__vfprintf+0x1e83>
   25f6b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   25f72:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   25f78:	8d 50 01             	lea    0x1(%rax),%edx
   25f7b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   25f81:	48 98                	cltq   
   25f83:	48 c1 e0 04          	shl    $0x4,%rax
   25f87:	48 01 c8             	add    %rcx,%rax
   25f8a:	8b 00                	mov    (%rax),%eax
   25f8c:	0f b6 c0             	movzbl %al,%eax
   25f8f:	e9 fd 00 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25f94:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   25f9b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25fa2:	8b 00                	mov    (%rax),%eax
   25fa4:	83 f8 2f             	cmp    $0x2f,%eax
   25fa7:	77 30                	ja     25fd9 <__vfprintf+0x1ec8>
   25fa9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25fb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   25fb4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25fbb:	8b 00                	mov    (%rax),%eax
   25fbd:	89 c0                	mov    %eax,%eax
   25fbf:	48 01 d0             	add    %rdx,%rax
   25fc2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25fc9:	8b 12                	mov    (%rdx),%edx
   25fcb:	8d 4a 08             	lea    0x8(%rdx),%ecx
   25fce:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25fd5:	89 0a                	mov    %ecx,(%rdx)
   25fd7:	eb 1a                	jmp    25ff3 <__vfprintf+0x1ee2>
   25fd9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   25fe0:	48 8b 40 08          	mov    0x8(%rax),%rax
   25fe4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   25fe8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   25fef:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   25ff3:	8b 00                	mov    (%rax),%eax
   25ff5:	0f b6 c0             	movzbl %al,%eax
   25ff8:	e9 94 00 00 00       	jmp    26091 <__vfprintf+0x1f80>
   25ffd:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26004:	48 85 c0             	test   %rax,%rax
   26007:	74 25                	je     2602e <__vfprintf+0x1f1d>
   26009:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26010:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26016:	8d 50 01             	lea    0x1(%rax),%edx
   26019:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2601f:	48 98                	cltq   
   26021:	48 c1 e0 04          	shl    $0x4,%rax
   26025:	48 01 c8             	add    %rcx,%rax
   26028:	8b 00                	mov    (%rax),%eax
   2602a:	89 c0                	mov    %eax,%eax
   2602c:	eb 63                	jmp    26091 <__vfprintf+0x1f80>
   2602e:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26035:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2603c:	8b 00                	mov    (%rax),%eax
   2603e:	83 f8 2f             	cmp    $0x2f,%eax
   26041:	77 30                	ja     26073 <__vfprintf+0x1f62>
   26043:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2604a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2604e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26055:	8b 00                	mov    (%rax),%eax
   26057:	89 c0                	mov    %eax,%eax
   26059:	48 01 d0             	add    %rdx,%rax
   2605c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26063:	8b 12                	mov    (%rdx),%edx
   26065:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26068:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2606f:	89 0a                	mov    %ecx,(%rdx)
   26071:	eb 1a                	jmp    2608d <__vfprintf+0x1f7c>
   26073:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2607a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2607e:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26082:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26089:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2608d:	8b 00                	mov    (%rax),%eax
   2608f:	89 c0                	mov    %eax,%eax
   26091:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   26098:	c7 85 8c fd ff ff 00 	movl   $0x0,-0x274(%rbp)
   2609f:	00 00 00 
   260a2:	e9 4a 0e 00 00       	jmp    26ef1 <__vfprintf+0x2de0>
   260a7:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   260ae:	48 85 c0             	test   %rax,%rax
   260b1:	74 24                	je     260d7 <__vfprintf+0x1fc6>
   260b3:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   260ba:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   260c0:	8d 50 01             	lea    0x1(%rax),%edx
   260c3:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   260c9:	48 98                	cltq   
   260cb:	48 c1 e0 04          	shl    $0x4,%rax
   260cf:	48 01 c8             	add    %rcx,%rax
   260d2:	48 8b 00             	mov    (%rax),%rax
   260d5:	eb 62                	jmp    26139 <__vfprintf+0x2028>
   260d7:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   260de:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   260e5:	8b 00                	mov    (%rax),%eax
   260e7:	83 f8 2f             	cmp    $0x2f,%eax
   260ea:	77 30                	ja     2611c <__vfprintf+0x200b>
   260ec:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   260f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   260f7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   260fe:	8b 00                	mov    (%rax),%eax
   26100:	89 c0                	mov    %eax,%eax
   26102:	48 01 d0             	add    %rdx,%rax
   26105:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2610c:	8b 12                	mov    (%rdx),%edx
   2610e:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26111:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26118:	89 0a                	mov    %ecx,(%rdx)
   2611a:	eb 1a                	jmp    26136 <__vfprintf+0x2025>
   2611c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26123:	48 8b 40 08          	mov    0x8(%rax),%rax
   26127:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2612b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26132:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26136:	48 8b 00             	mov    (%rax),%rax
   26139:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   26140:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   26147:	00 00 00 
   2614a:	48 8d 05 df da 00 00 	lea    0xdadf(%rip),%rax        # 33c30 <xdigs_lower.3343>
   26151:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   26158:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   2615c:	e9 90 0d 00 00       	jmp    26ef1 <__vfprintf+0x2de0>
   26161:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26167:	83 e0 10             	and    $0x10,%eax
   2616a:	85 c0                	test   %eax,%eax
   2616c:	0f 84 27 01 00 00    	je     26299 <__vfprintf+0x2188>
   26172:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   26179:	00 
   2617a:	74 1a                	je     26196 <__vfprintf+0x2085>
   2617c:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   26183:	48 89 c7             	mov    %rax,%rdi
   26186:	e8 97 a3 ff ff       	call   20522 <dlfree>
   2618b:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   26192:	00 00 00 00 
   26196:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2619d:	48 85 c0             	test   %rax,%rax
   261a0:	74 24                	je     261c6 <__vfprintf+0x20b5>
   261a2:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   261a9:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   261af:	8d 50 01             	lea    0x1(%rax),%edx
   261b2:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   261b8:	48 98                	cltq   
   261ba:	48 c1 e0 04          	shl    $0x4,%rax
   261be:	48 01 c8             	add    %rcx,%rax
   261c1:	48 8b 00             	mov    (%rax),%rax
   261c4:	eb 62                	jmp    26228 <__vfprintf+0x2117>
   261c6:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   261cd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   261d4:	8b 00                	mov    (%rax),%eax
   261d6:	83 f8 2f             	cmp    $0x2f,%eax
   261d9:	77 30                	ja     2620b <__vfprintf+0x20fa>
   261db:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   261e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   261e6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   261ed:	8b 00                	mov    (%rax),%eax
   261ef:	89 c0                	mov    %eax,%eax
   261f1:	48 01 d0             	add    %rdx,%rax
   261f4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   261fb:	8b 12                	mov    (%rdx),%edx
   261fd:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26200:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26207:	89 0a                	mov    %ecx,(%rdx)
   26209:	eb 1a                	jmp    26225 <__vfprintf+0x2114>
   2620b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26212:	48 8b 40 08          	mov    0x8(%rax),%rax
   26216:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2621a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26221:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26225:	48 8b 00             	mov    (%rax),%rax
   26228:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
   2622f:	48 83 bd 10 fe ff ff 	cmpq   $0x0,-0x1f0(%rbp)
   26236:	00 
   26237:	75 13                	jne    2624c <__vfprintf+0x213b>
   26239:	48 8d 05 80 d6 00 00 	lea    0xd680(%rip),%rax        # 338c0 <__func__.2555+0x17>
   26240:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   26247:	e9 fe 00 00 00       	jmp    2634a <__vfprintf+0x2239>
   2624c:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   26252:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
   26259:	89 d6                	mov    %edx,%esi
   2625b:	48 89 c7             	mov    %rax,%rdi
   2625e:	e8 d7 dc ff ff       	call   23f3a <__wcsconv>
   26263:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
   2626a:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   26271:	00 
   26272:	75 12                	jne    26286 <__vfprintf+0x2175>
   26274:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2627b:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   26281:	e9 20 22 00 00       	jmp    284a6 <__vfprintf+0x4395>
   26286:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   2628d:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   26294:	e9 b1 00 00 00       	jmp    2634a <__vfprintf+0x2239>
   26299:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   262a0:	48 85 c0             	test   %rax,%rax
   262a3:	74 24                	je     262c9 <__vfprintf+0x21b8>
   262a5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   262ac:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   262b2:	8d 50 01             	lea    0x1(%rax),%edx
   262b5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   262bb:	48 98                	cltq   
   262bd:	48 c1 e0 04          	shl    $0x4,%rax
   262c1:	48 01 c8             	add    %rcx,%rax
   262c4:	48 8b 00             	mov    (%rax),%rax
   262c7:	eb 62                	jmp    2632b <__vfprintf+0x221a>
   262c9:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   262d0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   262d7:	8b 00                	mov    (%rax),%eax
   262d9:	83 f8 2f             	cmp    $0x2f,%eax
   262dc:	77 30                	ja     2630e <__vfprintf+0x21fd>
   262de:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   262e5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   262e9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   262f0:	8b 00                	mov    (%rax),%eax
   262f2:	89 c0                	mov    %eax,%eax
   262f4:	48 01 d0             	add    %rdx,%rax
   262f7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   262fe:	8b 12                	mov    (%rdx),%edx
   26300:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26303:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2630a:	89 0a                	mov    %ecx,(%rdx)
   2630c:	eb 1a                	jmp    26328 <__vfprintf+0x2217>
   2630e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26315:	48 8b 40 08          	mov    0x8(%rax),%rax
   26319:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2631d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26324:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26328:	48 8b 00             	mov    (%rax),%rax
   2632b:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   26332:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   26339:	00 
   2633a:	75 0e                	jne    2634a <__vfprintf+0x2239>
   2633c:	48 8d 05 7d d5 00 00 	lea    0xd57d(%rip),%rax        # 338c0 <__func__.2555+0x17>
   26343:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2634a:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   26351:	78 4c                	js     2639f <__vfprintf+0x228e>
   26353:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   26359:	48 63 d0             	movslq %eax,%rdx
   2635c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   26363:	be 00 00 00 00       	mov    $0x0,%esi
   26368:	48 89 c7             	mov    %rax,%rdi
   2636b:	e8 8f 42 00 00       	call   2a5ff <memchr>
   26370:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
   26377:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
   2637e:	00 
   2637f:	74 10                	je     26391 <__vfprintf+0x2280>
   26381:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   26388:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   2638f:	eb 06                	jmp    26397 <__vfprintf+0x2286>
   26391:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   26397:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   2639d:	eb 35                	jmp    263d4 <__vfprintf+0x22c3>
   2639f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   263a6:	48 89 c7             	mov    %rax,%rdi
   263a9:	e8 2b d4 ff ff       	call   237d9 <strlen>
   263ae:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
   263b5:	b8 00 00 00 80       	mov    $0x80000000,%eax
   263ba:	48 39 85 18 fe ff ff 	cmp    %rax,-0x1e8(%rbp)
   263c1:	0f 83 1c 21 00 00    	jae    284e3 <__vfprintf+0x43d2>
   263c7:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
   263ce:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   263d4:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   263db:	e9 5c 0d 00 00       	jmp    2713c <__vfprintf+0x302b>
   263e0:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   263e7:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   263ed:	25 00 10 00 00       	and    $0x1000,%eax
   263f2:	85 c0                	test   %eax,%eax
   263f4:	0f 84 9a 00 00 00    	je     26494 <__vfprintf+0x2383>
   263fa:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26401:	48 85 c0             	test   %rax,%rax
   26404:	74 27                	je     2642d <__vfprintf+0x231c>
   26406:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2640d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26413:	8d 50 01             	lea    0x1(%rax),%edx
   26416:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2641c:	48 98                	cltq   
   2641e:	48 c1 e0 04          	shl    $0x4,%rax
   26422:	48 01 c8             	add    %rcx,%rax
   26425:	48 8b 00             	mov    (%rax),%rax
   26428:	e9 0b 05 00 00       	jmp    26938 <__vfprintf+0x2827>
   2642d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26434:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2643b:	8b 00                	mov    (%rax),%eax
   2643d:	83 f8 2f             	cmp    $0x2f,%eax
   26440:	77 30                	ja     26472 <__vfprintf+0x2361>
   26442:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26449:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2644d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26454:	8b 00                	mov    (%rax),%eax
   26456:	89 c0                	mov    %eax,%eax
   26458:	48 01 d0             	add    %rdx,%rax
   2645b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26462:	8b 12                	mov    (%rdx),%edx
   26464:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26467:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2646e:	89 0a                	mov    %ecx,(%rdx)
   26470:	eb 1a                	jmp    2648c <__vfprintf+0x237b>
   26472:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26479:	48 8b 40 08          	mov    0x8(%rax),%rax
   2647d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26481:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26488:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2648c:	48 8b 00             	mov    (%rax),%rax
   2648f:	e9 a4 04 00 00       	jmp    26938 <__vfprintf+0x2827>
   26494:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2649a:	83 e0 20             	and    $0x20,%eax
   2649d:	85 c0                	test   %eax,%eax
   2649f:	0f 84 9a 00 00 00    	je     2653f <__vfprintf+0x242e>
   264a5:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   264ac:	48 85 c0             	test   %rax,%rax
   264af:	74 27                	je     264d8 <__vfprintf+0x23c7>
   264b1:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   264b8:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   264be:	8d 50 01             	lea    0x1(%rax),%edx
   264c1:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   264c7:	48 98                	cltq   
   264c9:	48 c1 e0 04          	shl    $0x4,%rax
   264cd:	48 01 c8             	add    %rcx,%rax
   264d0:	48 8b 00             	mov    (%rax),%rax
   264d3:	e9 60 04 00 00       	jmp    26938 <__vfprintf+0x2827>
   264d8:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   264df:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   264e6:	8b 00                	mov    (%rax),%eax
   264e8:	83 f8 2f             	cmp    $0x2f,%eax
   264eb:	77 30                	ja     2651d <__vfprintf+0x240c>
   264ed:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   264f4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   264f8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   264ff:	8b 00                	mov    (%rax),%eax
   26501:	89 c0                	mov    %eax,%eax
   26503:	48 01 d0             	add    %rdx,%rax
   26506:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2650d:	8b 12                	mov    (%rdx),%edx
   2650f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26512:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26519:	89 0a                	mov    %ecx,(%rdx)
   2651b:	eb 1a                	jmp    26537 <__vfprintf+0x2426>
   2651d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26524:	48 8b 40 08          	mov    0x8(%rax),%rax
   26528:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2652c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26533:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26537:	48 8b 00             	mov    (%rax),%rax
   2653a:	e9 f9 03 00 00       	jmp    26938 <__vfprintf+0x2827>
   2653f:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26545:	83 e0 10             	and    $0x10,%eax
   26548:	85 c0                	test   %eax,%eax
   2654a:	0f 84 9a 00 00 00    	je     265ea <__vfprintf+0x24d9>
   26550:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26557:	48 85 c0             	test   %rax,%rax
   2655a:	74 27                	je     26583 <__vfprintf+0x2472>
   2655c:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26563:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26569:	8d 50 01             	lea    0x1(%rax),%edx
   2656c:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26572:	48 98                	cltq   
   26574:	48 c1 e0 04          	shl    $0x4,%rax
   26578:	48 01 c8             	add    %rcx,%rax
   2657b:	48 8b 00             	mov    (%rax),%rax
   2657e:	e9 b5 03 00 00       	jmp    26938 <__vfprintf+0x2827>
   26583:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2658a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26591:	8b 00                	mov    (%rax),%eax
   26593:	83 f8 2f             	cmp    $0x2f,%eax
   26596:	77 30                	ja     265c8 <__vfprintf+0x24b7>
   26598:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2659f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   265a3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   265aa:	8b 00                	mov    (%rax),%eax
   265ac:	89 c0                	mov    %eax,%eax
   265ae:	48 01 d0             	add    %rdx,%rax
   265b1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   265b8:	8b 12                	mov    (%rdx),%edx
   265ba:	8d 4a 08             	lea    0x8(%rdx),%ecx
   265bd:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   265c4:	89 0a                	mov    %ecx,(%rdx)
   265c6:	eb 1a                	jmp    265e2 <__vfprintf+0x24d1>
   265c8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   265cf:	48 8b 40 08          	mov    0x8(%rax),%rax
   265d3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   265d7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   265de:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   265e2:	48 8b 00             	mov    (%rax),%rax
   265e5:	e9 4e 03 00 00       	jmp    26938 <__vfprintf+0x2827>
   265ea:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   265f0:	25 00 02 00 00       	and    $0x200,%eax
   265f5:	85 c0                	test   %eax,%eax
   265f7:	0f 84 9a 00 00 00    	je     26697 <__vfprintf+0x2586>
   265fd:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26604:	48 85 c0             	test   %rax,%rax
   26607:	74 27                	je     26630 <__vfprintf+0x251f>
   26609:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26610:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26616:	8d 50 01             	lea    0x1(%rax),%edx
   26619:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2661f:	48 98                	cltq   
   26621:	48 c1 e0 04          	shl    $0x4,%rax
   26625:	48 01 c8             	add    %rcx,%rax
   26628:	48 8b 00             	mov    (%rax),%rax
   2662b:	e9 08 03 00 00       	jmp    26938 <__vfprintf+0x2827>
   26630:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26637:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2663e:	8b 00                	mov    (%rax),%eax
   26640:	83 f8 2f             	cmp    $0x2f,%eax
   26643:	77 30                	ja     26675 <__vfprintf+0x2564>
   26645:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2664c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26650:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26657:	8b 00                	mov    (%rax),%eax
   26659:	89 c0                	mov    %eax,%eax
   2665b:	48 01 d0             	add    %rdx,%rax
   2665e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26665:	8b 12                	mov    (%rdx),%edx
   26667:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2666a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26671:	89 0a                	mov    %ecx,(%rdx)
   26673:	eb 1a                	jmp    2668f <__vfprintf+0x257e>
   26675:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2667c:	48 8b 40 08          	mov    0x8(%rax),%rax
   26680:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26684:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2668b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2668f:	48 8b 00             	mov    (%rax),%rax
   26692:	e9 a1 02 00 00       	jmp    26938 <__vfprintf+0x2827>
   26697:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2669d:	25 00 04 00 00       	and    $0x400,%eax
   266a2:	85 c0                	test   %eax,%eax
   266a4:	0f 84 9a 00 00 00    	je     26744 <__vfprintf+0x2633>
   266aa:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   266b1:	48 85 c0             	test   %rax,%rax
   266b4:	74 27                	je     266dd <__vfprintf+0x25cc>
   266b6:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   266bd:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   266c3:	8d 50 01             	lea    0x1(%rax),%edx
   266c6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   266cc:	48 98                	cltq   
   266ce:	48 c1 e0 04          	shl    $0x4,%rax
   266d2:	48 01 c8             	add    %rcx,%rax
   266d5:	48 8b 00             	mov    (%rax),%rax
   266d8:	e9 5b 02 00 00       	jmp    26938 <__vfprintf+0x2827>
   266dd:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   266e4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   266eb:	8b 00                	mov    (%rax),%eax
   266ed:	83 f8 2f             	cmp    $0x2f,%eax
   266f0:	77 30                	ja     26722 <__vfprintf+0x2611>
   266f2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   266f9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   266fd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26704:	8b 00                	mov    (%rax),%eax
   26706:	89 c0                	mov    %eax,%eax
   26708:	48 01 d0             	add    %rdx,%rax
   2670b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26712:	8b 12                	mov    (%rdx),%edx
   26714:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26717:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2671e:	89 0a                	mov    %ecx,(%rdx)
   26720:	eb 1a                	jmp    2673c <__vfprintf+0x262b>
   26722:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26729:	48 8b 40 08          	mov    0x8(%rax),%rax
   2672d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26731:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26738:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2673c:	48 8b 00             	mov    (%rax),%rax
   2673f:	e9 f4 01 00 00       	jmp    26938 <__vfprintf+0x2827>
   26744:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2674a:	83 e0 40             	and    $0x40,%eax
   2674d:	85 c0                	test   %eax,%eax
   2674f:	0f 84 9e 00 00 00    	je     267f3 <__vfprintf+0x26e2>
   26755:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2675c:	48 85 c0             	test   %rax,%rax
   2675f:	74 29                	je     2678a <__vfprintf+0x2679>
   26761:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26768:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2676e:	8d 50 01             	lea    0x1(%rax),%edx
   26771:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26777:	48 98                	cltq   
   26779:	48 c1 e0 04          	shl    $0x4,%rax
   2677d:	48 01 c8             	add    %rcx,%rax
   26780:	8b 00                	mov    (%rax),%eax
   26782:	0f b7 c0             	movzwl %ax,%eax
   26785:	e9 ae 01 00 00       	jmp    26938 <__vfprintf+0x2827>
   2678a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26791:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26798:	8b 00                	mov    (%rax),%eax
   2679a:	83 f8 2f             	cmp    $0x2f,%eax
   2679d:	77 30                	ja     267cf <__vfprintf+0x26be>
   2679f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   267a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   267aa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   267b1:	8b 00                	mov    (%rax),%eax
   267b3:	89 c0                	mov    %eax,%eax
   267b5:	48 01 d0             	add    %rdx,%rax
   267b8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   267bf:	8b 12                	mov    (%rdx),%edx
   267c1:	8d 4a 08             	lea    0x8(%rdx),%ecx
   267c4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   267cb:	89 0a                	mov    %ecx,(%rdx)
   267cd:	eb 1a                	jmp    267e9 <__vfprintf+0x26d8>
   267cf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   267d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   267da:	48 8d 48 08          	lea    0x8(%rax),%rcx
   267de:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   267e5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   267e9:	8b 00                	mov    (%rax),%eax
   267eb:	0f b7 c0             	movzwl %ax,%eax
   267ee:	e9 45 01 00 00       	jmp    26938 <__vfprintf+0x2827>
   267f3:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   267f9:	25 00 08 00 00       	and    $0x800,%eax
   267fe:	85 c0                	test   %eax,%eax
   26800:	0f 84 9e 00 00 00    	je     268a4 <__vfprintf+0x2793>
   26806:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2680d:	48 85 c0             	test   %rax,%rax
   26810:	74 29                	je     2683b <__vfprintf+0x272a>
   26812:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26819:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2681f:	8d 50 01             	lea    0x1(%rax),%edx
   26822:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26828:	48 98                	cltq   
   2682a:	48 c1 e0 04          	shl    $0x4,%rax
   2682e:	48 01 c8             	add    %rcx,%rax
   26831:	8b 00                	mov    (%rax),%eax
   26833:	0f b6 c0             	movzbl %al,%eax
   26836:	e9 fd 00 00 00       	jmp    26938 <__vfprintf+0x2827>
   2683b:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26842:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26849:	8b 00                	mov    (%rax),%eax
   2684b:	83 f8 2f             	cmp    $0x2f,%eax
   2684e:	77 30                	ja     26880 <__vfprintf+0x276f>
   26850:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26857:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2685b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26862:	8b 00                	mov    (%rax),%eax
   26864:	89 c0                	mov    %eax,%eax
   26866:	48 01 d0             	add    %rdx,%rax
   26869:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26870:	8b 12                	mov    (%rdx),%edx
   26872:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26875:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2687c:	89 0a                	mov    %ecx,(%rdx)
   2687e:	eb 1a                	jmp    2689a <__vfprintf+0x2789>
   26880:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26887:	48 8b 40 08          	mov    0x8(%rax),%rax
   2688b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2688f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26896:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2689a:	8b 00                	mov    (%rax),%eax
   2689c:	0f b6 c0             	movzbl %al,%eax
   2689f:	e9 94 00 00 00       	jmp    26938 <__vfprintf+0x2827>
   268a4:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   268ab:	48 85 c0             	test   %rax,%rax
   268ae:	74 25                	je     268d5 <__vfprintf+0x27c4>
   268b0:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   268b7:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   268bd:	8d 50 01             	lea    0x1(%rax),%edx
   268c0:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   268c6:	48 98                	cltq   
   268c8:	48 c1 e0 04          	shl    $0x4,%rax
   268cc:	48 01 c8             	add    %rcx,%rax
   268cf:	8b 00                	mov    (%rax),%eax
   268d1:	89 c0                	mov    %eax,%eax
   268d3:	eb 63                	jmp    26938 <__vfprintf+0x2827>
   268d5:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   268dc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   268e3:	8b 00                	mov    (%rax),%eax
   268e5:	83 f8 2f             	cmp    $0x2f,%eax
   268e8:	77 30                	ja     2691a <__vfprintf+0x2809>
   268ea:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   268f1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   268f5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   268fc:	8b 00                	mov    (%rax),%eax
   268fe:	89 c0                	mov    %eax,%eax
   26900:	48 01 d0             	add    %rdx,%rax
   26903:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2690a:	8b 12                	mov    (%rdx),%edx
   2690c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2690f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26916:	89 0a                	mov    %ecx,(%rdx)
   26918:	eb 1a                	jmp    26934 <__vfprintf+0x2823>
   2691a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26921:	48 8b 40 08          	mov    0x8(%rax),%rax
   26925:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26929:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26930:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26934:	8b 00                	mov    (%rax),%eax
   26936:	89 c0                	mov    %eax,%eax
   26938:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   2693f:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   26946:	00 00 00 
   26949:	e9 a3 05 00 00       	jmp    26ef1 <__vfprintf+0x2de0>
   2694e:	48 8d 05 eb d2 00 00 	lea    0xd2eb(%rip),%rax        # 33c40 <xdigs_upper.3344>
   26955:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   2695c:	eb 0e                	jmp    2696c <__vfprintf+0x285b>
   2695e:	48 8d 05 cb d2 00 00 	lea    0xd2cb(%rip),%rax        # 33c30 <xdigs_lower.3343>
   26965:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   2696c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26972:	25 00 10 00 00       	and    $0x1000,%eax
   26977:	85 c0                	test   %eax,%eax
   26979:	0f 84 9a 00 00 00    	je     26a19 <__vfprintf+0x2908>
   2697f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26986:	48 85 c0             	test   %rax,%rax
   26989:	74 27                	je     269b2 <__vfprintf+0x28a1>
   2698b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26992:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26998:	8d 50 01             	lea    0x1(%rax),%edx
   2699b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   269a1:	48 98                	cltq   
   269a3:	48 c1 e0 04          	shl    $0x4,%rax
   269a7:	48 01 c8             	add    %rcx,%rax
   269aa:	48 8b 00             	mov    (%rax),%rax
   269ad:	e9 0b 05 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   269b2:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   269b9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   269c0:	8b 00                	mov    (%rax),%eax
   269c2:	83 f8 2f             	cmp    $0x2f,%eax
   269c5:	77 30                	ja     269f7 <__vfprintf+0x28e6>
   269c7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   269ce:	48 8b 50 10          	mov    0x10(%rax),%rdx
   269d2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   269d9:	8b 00                	mov    (%rax),%eax
   269db:	89 c0                	mov    %eax,%eax
   269dd:	48 01 d0             	add    %rdx,%rax
   269e0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   269e7:	8b 12                	mov    (%rdx),%edx
   269e9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   269ec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   269f3:	89 0a                	mov    %ecx,(%rdx)
   269f5:	eb 1a                	jmp    26a11 <__vfprintf+0x2900>
   269f7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   269fe:	48 8b 40 08          	mov    0x8(%rax),%rax
   26a02:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26a06:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26a0d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26a11:	48 8b 00             	mov    (%rax),%rax
   26a14:	e9 a4 04 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26a19:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26a1f:	83 e0 20             	and    $0x20,%eax
   26a22:	85 c0                	test   %eax,%eax
   26a24:	0f 84 9a 00 00 00    	je     26ac4 <__vfprintf+0x29b3>
   26a2a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26a31:	48 85 c0             	test   %rax,%rax
   26a34:	74 27                	je     26a5d <__vfprintf+0x294c>
   26a36:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26a3d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26a43:	8d 50 01             	lea    0x1(%rax),%edx
   26a46:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26a4c:	48 98                	cltq   
   26a4e:	48 c1 e0 04          	shl    $0x4,%rax
   26a52:	48 01 c8             	add    %rcx,%rax
   26a55:	48 8b 00             	mov    (%rax),%rax
   26a58:	e9 60 04 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26a5d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26a64:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26a6b:	8b 00                	mov    (%rax),%eax
   26a6d:	83 f8 2f             	cmp    $0x2f,%eax
   26a70:	77 30                	ja     26aa2 <__vfprintf+0x2991>
   26a72:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26a79:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26a7d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26a84:	8b 00                	mov    (%rax),%eax
   26a86:	89 c0                	mov    %eax,%eax
   26a88:	48 01 d0             	add    %rdx,%rax
   26a8b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26a92:	8b 12                	mov    (%rdx),%edx
   26a94:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26a97:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26a9e:	89 0a                	mov    %ecx,(%rdx)
   26aa0:	eb 1a                	jmp    26abc <__vfprintf+0x29ab>
   26aa2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26aa9:	48 8b 40 08          	mov    0x8(%rax),%rax
   26aad:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26ab1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26ab8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26abc:	48 8b 00             	mov    (%rax),%rax
   26abf:	e9 f9 03 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26ac4:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26aca:	83 e0 10             	and    $0x10,%eax
   26acd:	85 c0                	test   %eax,%eax
   26acf:	0f 84 9a 00 00 00    	je     26b6f <__vfprintf+0x2a5e>
   26ad5:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26adc:	48 85 c0             	test   %rax,%rax
   26adf:	74 27                	je     26b08 <__vfprintf+0x29f7>
   26ae1:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26ae8:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26aee:	8d 50 01             	lea    0x1(%rax),%edx
   26af1:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26af7:	48 98                	cltq   
   26af9:	48 c1 e0 04          	shl    $0x4,%rax
   26afd:	48 01 c8             	add    %rcx,%rax
   26b00:	48 8b 00             	mov    (%rax),%rax
   26b03:	e9 b5 03 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26b08:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26b0f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26b16:	8b 00                	mov    (%rax),%eax
   26b18:	83 f8 2f             	cmp    $0x2f,%eax
   26b1b:	77 30                	ja     26b4d <__vfprintf+0x2a3c>
   26b1d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26b24:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26b28:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26b2f:	8b 00                	mov    (%rax),%eax
   26b31:	89 c0                	mov    %eax,%eax
   26b33:	48 01 d0             	add    %rdx,%rax
   26b36:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26b3d:	8b 12                	mov    (%rdx),%edx
   26b3f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26b42:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26b49:	89 0a                	mov    %ecx,(%rdx)
   26b4b:	eb 1a                	jmp    26b67 <__vfprintf+0x2a56>
   26b4d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26b54:	48 8b 40 08          	mov    0x8(%rax),%rax
   26b58:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26b5c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26b63:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26b67:	48 8b 00             	mov    (%rax),%rax
   26b6a:	e9 4e 03 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26b6f:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26b75:	25 00 02 00 00       	and    $0x200,%eax
   26b7a:	85 c0                	test   %eax,%eax
   26b7c:	0f 84 9a 00 00 00    	je     26c1c <__vfprintf+0x2b0b>
   26b82:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26b89:	48 85 c0             	test   %rax,%rax
   26b8c:	74 27                	je     26bb5 <__vfprintf+0x2aa4>
   26b8e:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26b95:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26b9b:	8d 50 01             	lea    0x1(%rax),%edx
   26b9e:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26ba4:	48 98                	cltq   
   26ba6:	48 c1 e0 04          	shl    $0x4,%rax
   26baa:	48 01 c8             	add    %rcx,%rax
   26bad:	48 8b 00             	mov    (%rax),%rax
   26bb0:	e9 08 03 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26bb5:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26bbc:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26bc3:	8b 00                	mov    (%rax),%eax
   26bc5:	83 f8 2f             	cmp    $0x2f,%eax
   26bc8:	77 30                	ja     26bfa <__vfprintf+0x2ae9>
   26bca:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26bd1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26bd5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26bdc:	8b 00                	mov    (%rax),%eax
   26bde:	89 c0                	mov    %eax,%eax
   26be0:	48 01 d0             	add    %rdx,%rax
   26be3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26bea:	8b 12                	mov    (%rdx),%edx
   26bec:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26bef:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26bf6:	89 0a                	mov    %ecx,(%rdx)
   26bf8:	eb 1a                	jmp    26c14 <__vfprintf+0x2b03>
   26bfa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26c01:	48 8b 40 08          	mov    0x8(%rax),%rax
   26c05:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26c09:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26c10:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26c14:	48 8b 00             	mov    (%rax),%rax
   26c17:	e9 a1 02 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26c1c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26c22:	25 00 04 00 00       	and    $0x400,%eax
   26c27:	85 c0                	test   %eax,%eax
   26c29:	0f 84 9a 00 00 00    	je     26cc9 <__vfprintf+0x2bb8>
   26c2f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26c36:	48 85 c0             	test   %rax,%rax
   26c39:	74 27                	je     26c62 <__vfprintf+0x2b51>
   26c3b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26c42:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26c48:	8d 50 01             	lea    0x1(%rax),%edx
   26c4b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26c51:	48 98                	cltq   
   26c53:	48 c1 e0 04          	shl    $0x4,%rax
   26c57:	48 01 c8             	add    %rcx,%rax
   26c5a:	48 8b 00             	mov    (%rax),%rax
   26c5d:	e9 5b 02 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26c62:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26c69:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26c70:	8b 00                	mov    (%rax),%eax
   26c72:	83 f8 2f             	cmp    $0x2f,%eax
   26c75:	77 30                	ja     26ca7 <__vfprintf+0x2b96>
   26c77:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26c7e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26c82:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26c89:	8b 00                	mov    (%rax),%eax
   26c8b:	89 c0                	mov    %eax,%eax
   26c8d:	48 01 d0             	add    %rdx,%rax
   26c90:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26c97:	8b 12                	mov    (%rdx),%edx
   26c99:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26c9c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26ca3:	89 0a                	mov    %ecx,(%rdx)
   26ca5:	eb 1a                	jmp    26cc1 <__vfprintf+0x2bb0>
   26ca7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26cae:	48 8b 40 08          	mov    0x8(%rax),%rax
   26cb2:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26cb6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26cbd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26cc1:	48 8b 00             	mov    (%rax),%rax
   26cc4:	e9 f4 01 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26cc9:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26ccf:	83 e0 40             	and    $0x40,%eax
   26cd2:	85 c0                	test   %eax,%eax
   26cd4:	0f 84 9e 00 00 00    	je     26d78 <__vfprintf+0x2c67>
   26cda:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26ce1:	48 85 c0             	test   %rax,%rax
   26ce4:	74 29                	je     26d0f <__vfprintf+0x2bfe>
   26ce6:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26ced:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26cf3:	8d 50 01             	lea    0x1(%rax),%edx
   26cf6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26cfc:	48 98                	cltq   
   26cfe:	48 c1 e0 04          	shl    $0x4,%rax
   26d02:	48 01 c8             	add    %rcx,%rax
   26d05:	8b 00                	mov    (%rax),%eax
   26d07:	0f b7 c0             	movzwl %ax,%eax
   26d0a:	e9 ae 01 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26d0f:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26d16:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26d1d:	8b 00                	mov    (%rax),%eax
   26d1f:	83 f8 2f             	cmp    $0x2f,%eax
   26d22:	77 30                	ja     26d54 <__vfprintf+0x2c43>
   26d24:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26d2b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26d2f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26d36:	8b 00                	mov    (%rax),%eax
   26d38:	89 c0                	mov    %eax,%eax
   26d3a:	48 01 d0             	add    %rdx,%rax
   26d3d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26d44:	8b 12                	mov    (%rdx),%edx
   26d46:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26d49:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26d50:	89 0a                	mov    %ecx,(%rdx)
   26d52:	eb 1a                	jmp    26d6e <__vfprintf+0x2c5d>
   26d54:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26d5b:	48 8b 40 08          	mov    0x8(%rax),%rax
   26d5f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26d63:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26d6a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26d6e:	8b 00                	mov    (%rax),%eax
   26d70:	0f b7 c0             	movzwl %ax,%eax
   26d73:	e9 45 01 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26d78:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26d7e:	25 00 08 00 00       	and    $0x800,%eax
   26d83:	85 c0                	test   %eax,%eax
   26d85:	0f 84 9e 00 00 00    	je     26e29 <__vfprintf+0x2d18>
   26d8b:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26d92:	48 85 c0             	test   %rax,%rax
   26d95:	74 29                	je     26dc0 <__vfprintf+0x2caf>
   26d97:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26d9e:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26da4:	8d 50 01             	lea    0x1(%rax),%edx
   26da7:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26dad:	48 98                	cltq   
   26daf:	48 c1 e0 04          	shl    $0x4,%rax
   26db3:	48 01 c8             	add    %rcx,%rax
   26db6:	8b 00                	mov    (%rax),%eax
   26db8:	0f b6 c0             	movzbl %al,%eax
   26dbb:	e9 fd 00 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26dc0:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26dc7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26dce:	8b 00                	mov    (%rax),%eax
   26dd0:	83 f8 2f             	cmp    $0x2f,%eax
   26dd3:	77 30                	ja     26e05 <__vfprintf+0x2cf4>
   26dd5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26ddc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26de0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26de7:	8b 00                	mov    (%rax),%eax
   26de9:	89 c0                	mov    %eax,%eax
   26deb:	48 01 d0             	add    %rdx,%rax
   26dee:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26df5:	8b 12                	mov    (%rdx),%edx
   26df7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26dfa:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26e01:	89 0a                	mov    %ecx,(%rdx)
   26e03:	eb 1a                	jmp    26e1f <__vfprintf+0x2d0e>
   26e05:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26e0c:	48 8b 40 08          	mov    0x8(%rax),%rax
   26e10:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26e14:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26e1b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26e1f:	8b 00                	mov    (%rax),%eax
   26e21:	0f b6 c0             	movzbl %al,%eax
   26e24:	e9 94 00 00 00       	jmp    26ebd <__vfprintf+0x2dac>
   26e29:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   26e30:	48 85 c0             	test   %rax,%rax
   26e33:	74 25                	je     26e5a <__vfprintf+0x2d49>
   26e35:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   26e3c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   26e42:	8d 50 01             	lea    0x1(%rax),%edx
   26e45:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   26e4b:	48 98                	cltq   
   26e4d:	48 c1 e0 04          	shl    $0x4,%rax
   26e51:	48 01 c8             	add    %rcx,%rax
   26e54:	8b 00                	mov    (%rax),%eax
   26e56:	89 c0                	mov    %eax,%eax
   26e58:	eb 63                	jmp    26ebd <__vfprintf+0x2dac>
   26e5a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   26e61:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26e68:	8b 00                	mov    (%rax),%eax
   26e6a:	83 f8 2f             	cmp    $0x2f,%eax
   26e6d:	77 30                	ja     26e9f <__vfprintf+0x2d8e>
   26e6f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26e76:	48 8b 50 10          	mov    0x10(%rax),%rdx
   26e7a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26e81:	8b 00                	mov    (%rax),%eax
   26e83:	89 c0                	mov    %eax,%eax
   26e85:	48 01 d0             	add    %rdx,%rax
   26e88:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26e8f:	8b 12                	mov    (%rdx),%edx
   26e91:	8d 4a 08             	lea    0x8(%rdx),%ecx
   26e94:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26e9b:	89 0a                	mov    %ecx,(%rdx)
   26e9d:	eb 1a                	jmp    26eb9 <__vfprintf+0x2da8>
   26e9f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   26ea6:	48 8b 40 08          	mov    0x8(%rax),%rax
   26eaa:	48 8d 48 08          	lea    0x8(%rax),%rcx
   26eae:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   26eb5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   26eb9:	8b 00                	mov    (%rax),%eax
   26ebb:	89 c0                	mov    %eax,%eax
   26ebd:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   26ec4:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   26ecb:	00 00 00 
   26ece:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26ed4:	83 e0 01             	and    $0x1,%eax
   26ed7:	85 c0                	test   %eax,%eax
   26ed9:	74 15                	je     26ef0 <__vfprintf+0x2ddf>
   26edb:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   26ee2:	00 
   26ee3:	74 0b                	je     26ef0 <__vfprintf+0x2ddf>
   26ee5:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   26eeb:	88 45 87             	mov    %al,-0x79(%rbp)
   26eee:	eb 01                	jmp    26ef1 <__vfprintf+0x2de0>
   26ef0:	90                   	nop
   26ef1:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   26ef8:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   26efe:	89 85 90 fd ff ff    	mov    %eax,-0x270(%rbp)
   26f04:	83 bd 90 fd ff ff 00 	cmpl   $0x0,-0x270(%rbp)
   26f0b:	78 0a                	js     26f17 <__vfprintf+0x2e06>
   26f0d:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   26f14:	ff ff ff 
   26f17:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   26f1b:	48 83 c0 64          	add    $0x64,%rax
   26f1f:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   26f26:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   26f2d:	00 
   26f2e:	75 0d                	jne    26f3d <__vfprintf+0x2e2c>
   26f30:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   26f37:	0f 84 98 01 00 00    	je     270d5 <__vfprintf+0x2fc4>
   26f3d:	83 bd 8c fd ff ff 02 	cmpl   $0x2,-0x274(%rbp)
   26f44:	0f 84 27 01 00 00    	je     27071 <__vfprintf+0x2f60>
   26f4a:	83 bd 8c fd ff ff 02 	cmpl   $0x2,-0x274(%rbp)
   26f51:	0f 87 59 01 00 00    	ja     270b0 <__vfprintf+0x2f9f>
   26f57:	83 bd 8c fd ff ff 00 	cmpl   $0x0,-0x274(%rbp)
   26f5e:	74 13                	je     26f73 <__vfprintf+0x2e62>
   26f60:	83 bd 8c fd ff ff 01 	cmpl   $0x1,-0x274(%rbp)
   26f67:	0f 84 da 00 00 00    	je     27047 <__vfprintf+0x2f36>
   26f6d:	e9 3e 01 00 00       	jmp    270b0 <__vfprintf+0x2f9f>
   26f72:	90                   	nop
   26f73:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   26f7a:	83 e0 07             	and    $0x7,%eax
   26f7d:	83 c0 30             	add    $0x30,%eax
   26f80:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   26f87:	01 
   26f88:	89 c2                	mov    %eax,%edx
   26f8a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   26f91:	88 10                	mov    %dl,(%rax)
   26f93:	48 c1 ad e0 fd ff ff 	shrq   $0x3,-0x220(%rbp)
   26f9a:	03 
   26f9b:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   26fa2:	00 
   26fa3:	75 cd                	jne    26f72 <__vfprintf+0x2e61>
   26fa5:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   26fab:	83 e0 01             	and    $0x1,%eax
   26fae:	85 c0                	test   %eax,%eax
   26fb0:	0f 84 22 01 00 00    	je     270d8 <__vfprintf+0x2fc7>
   26fb6:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   26fbd:	0f b6 00             	movzbl (%rax),%eax
   26fc0:	3c 30                	cmp    $0x30,%al
   26fc2:	0f 84 10 01 00 00    	je     270d8 <__vfprintf+0x2fc7>
   26fc8:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   26fcf:	01 
   26fd0:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   26fd7:	c6 00 30             	movb   $0x30,(%rax)
   26fda:	e9 f9 00 00 00       	jmp    270d8 <__vfprintf+0x2fc7>
   26fdf:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
   26fe6:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   26fed:	cc cc cc 
   26ff0:	48 89 c8             	mov    %rcx,%rax
   26ff3:	48 f7 e2             	mul    %rdx
   26ff6:	48 c1 ea 03          	shr    $0x3,%rdx
   26ffa:	48 89 d0             	mov    %rdx,%rax
   26ffd:	48 c1 e0 02          	shl    $0x2,%rax
   27001:	48 01 d0             	add    %rdx,%rax
   27004:	48 01 c0             	add    %rax,%rax
   27007:	48 29 c1             	sub    %rax,%rcx
   2700a:	48 89 ca             	mov    %rcx,%rdx
   2700d:	89 d0                	mov    %edx,%eax
   2700f:	83 c0 30             	add    $0x30,%eax
   27012:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   27019:	01 
   2701a:	89 c2                	mov    %eax,%edx
   2701c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   27023:	88 10                	mov    %dl,(%rax)
   27025:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   2702c:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   27033:	cc cc cc 
   27036:	48 f7 e2             	mul    %rdx
   27039:	48 89 d0             	mov    %rdx,%rax
   2703c:	48 c1 e8 03          	shr    $0x3,%rax
   27040:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   27047:	48 83 bd e0 fd ff ff 	cmpq   $0x9,-0x220(%rbp)
   2704e:	09 
   2704f:	77 8e                	ja     26fdf <__vfprintf+0x2ece>
   27051:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   27058:	83 c0 30             	add    $0x30,%eax
   2705b:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   27062:	01 
   27063:	89 c2                	mov    %eax,%edx
   27065:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2706c:	88 10                	mov    %dl,(%rax)
   2706e:	eb 69                	jmp    270d9 <__vfprintf+0x2fc8>
   27070:	90                   	nop
   27071:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   27078:	83 e0 0f             	and    $0xf,%eax
   2707b:	48 89 c2             	mov    %rax,%rdx
   2707e:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   27085:	48 01 d0             	add    %rdx,%rax
   27088:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   2708f:	01 
   27090:	0f b6 10             	movzbl (%rax),%edx
   27093:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2709a:	88 10                	mov    %dl,(%rax)
   2709c:	48 c1 ad e0 fd ff ff 	shrq   $0x4,-0x220(%rbp)
   270a3:	04 
   270a4:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   270ab:	00 
   270ac:	75 c2                	jne    27070 <__vfprintf+0x2f5f>
   270ae:	eb 29                	jmp    270d9 <__vfprintf+0x2fc8>
   270b0:	48 8d 05 10 c8 00 00 	lea    0xc810(%rip),%rax        # 338c7 <__func__.2555+0x1e>
   270b7:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   270be:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   270c5:	48 89 c7             	mov    %rax,%rdi
   270c8:	e8 0c c7 ff ff       	call   237d9 <strlen>
   270cd:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   270d3:	eb 28                	jmp    270fd <__vfprintf+0x2fec>
   270d5:	90                   	nop
   270d6:	eb 01                	jmp    270d9 <__vfprintf+0x2fc8>
   270d8:	90                   	nop
   270d9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   270dd:	48 83 c0 64          	add    $0x64,%rax
   270e1:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   270e8:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   270ee:	83 bd 98 fd ff ff 64 	cmpl   $0x64,-0x268(%rbp)
   270f5:	7e 05                	jle    270fc <__vfprintf+0x2feb>
   270f7:	e8 9f a9 00 00       	call   31a9b <abort>
   270fc:	90                   	nop
   270fd:	eb 3d                	jmp    2713c <__vfprintf+0x302b>
   270ff:	83 bd 64 fd ff ff 00 	cmpl   $0x0,-0x29c(%rbp)
   27106:	0f 84 fd 12 00 00    	je     28409 <__vfprintf+0x42f8>
   2710c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   27110:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   27117:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   2711d:	89 c2                	mov    %eax,%edx
   2711f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   27126:	88 10                	mov    %dl,(%rax)
   27128:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   2712f:	00 00 00 
   27132:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   27139:	eb 01                	jmp    2713c <__vfprintf+0x302b>
   2713b:	90                   	nop
   2713c:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   27142:	39 85 98 fd ff ff    	cmp    %eax,-0x268(%rbp)
   27148:	0f 4d 85 98 fd ff ff 	cmovge -0x268(%rbp),%eax
   2714f:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
   27155:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   2715c:	84 c0                	test   %al,%al
   2715e:	74 07                	je     27167 <__vfprintf+0x3056>
   27160:	83 85 94 fd ff ff 01 	addl   $0x1,-0x26c(%rbp)
   27167:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   2716b:	84 c0                	test   %al,%al
   2716d:	74 07                	je     27176 <__vfprintf+0x3065>
   2716f:	83 85 94 fd ff ff 02 	addl   $0x2,-0x26c(%rbp)
   27176:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2717c:	25 84 00 00 00       	and    $0x84,%eax
   27181:	85 c0                	test   %eax,%eax
   27183:	0f 85 42 01 00 00    	jne    272cb <__vfprintf+0x31ba>
   27189:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   2718f:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   27195:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2719b:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   271a2:	0f 8e 23 01 00 00    	jle    272cb <__vfprintf+0x31ba>
   271a8:	e9 87 00 00 00       	jmp    27234 <__vfprintf+0x3123>
   271ad:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   271b4:	48 8d 15 75 3f 01 00 	lea    0x13f75(%rip),%rdx        # 3b130 <blanks.3341>
   271bb:	48 89 10             	mov    %rdx,(%rax)
   271be:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   271c5:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   271cc:	00 
   271cd:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   271d3:	83 c0 10             	add    $0x10,%eax
   271d6:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   271dc:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   271e3:	10 
   271e4:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   271ea:	83 c0 01             	add    $0x1,%eax
   271ed:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   271f3:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   271f9:	83 f8 07             	cmp    $0x7,%eax
   271fc:	7e 2f                	jle    2722d <__vfprintf+0x311c>
   271fe:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27205:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2720c:	48 89 d6             	mov    %rdx,%rsi
   2720f:	48 89 c7             	mov    %rax,%rdi
   27212:	e8 c1 cc ff ff       	call   23ed8 <__sprint>
   27217:	85 c0                	test   %eax,%eax
   27219:	0f 85 2f 12 00 00    	jne    2844e <__vfprintf+0x433d>
   2721f:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27226:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2722d:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   27234:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   2723b:	0f 8f 6c ff ff ff    	jg     271ad <__vfprintf+0x309c>
   27241:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27248:	48 8d 15 e1 3e 01 00 	lea    0x13ee1(%rip),%rdx        # 3b130 <blanks.3341>
   2724f:	48 89 10             	mov    %rdx,(%rax)
   27252:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27258:	48 63 d0             	movslq %eax,%rdx
   2725b:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27262:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27266:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   2726c:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27272:	01 d0                	add    %edx,%eax
   27274:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2727a:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27281:	10 
   27282:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27288:	83 c0 01             	add    $0x1,%eax
   2728b:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27291:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27297:	83 f8 07             	cmp    $0x7,%eax
   2729a:	7e 2f                	jle    272cb <__vfprintf+0x31ba>
   2729c:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   272a3:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   272aa:	48 89 d6             	mov    %rdx,%rsi
   272ad:	48 89 c7             	mov    %rax,%rdi
   272b0:	e8 23 cc ff ff       	call   23ed8 <__sprint>
   272b5:	85 c0                	test   %eax,%eax
   272b7:	0f 85 94 11 00 00    	jne    28451 <__vfprintf+0x4340>
   272bd:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   272c4:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   272cb:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   272d2:	84 c0                	test   %al,%al
   272d4:	0f 84 80 00 00 00    	je     2735a <__vfprintf+0x3249>
   272da:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   272e1:	48 8d 95 56 fd ff ff 	lea    -0x2aa(%rbp),%rdx
   272e8:	48 89 10             	mov    %rdx,(%rax)
   272eb:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   272f2:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   272f9:	00 
   272fa:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27300:	83 c0 01             	add    $0x1,%eax
   27303:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27309:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27310:	10 
   27311:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27317:	83 c0 01             	add    $0x1,%eax
   2731a:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27320:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27326:	83 f8 07             	cmp    $0x7,%eax
   27329:	7e 2f                	jle    2735a <__vfprintf+0x3249>
   2732b:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27332:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27339:	48 89 d6             	mov    %rdx,%rsi
   2733c:	48 89 c7             	mov    %rax,%rdi
   2733f:	e8 94 cb ff ff       	call   23ed8 <__sprint>
   27344:	85 c0                	test   %eax,%eax
   27346:	0f 85 08 11 00 00    	jne    28454 <__vfprintf+0x4343>
   2734c:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27353:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2735a:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   2735e:	84 c0                	test   %al,%al
   27360:	0f 84 81 00 00 00    	je     273e7 <__vfprintf+0x32d6>
   27366:	c6 45 86 30          	movb   $0x30,-0x7a(%rbp)
   2736a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27371:	48 8d 55 86          	lea    -0x7a(%rbp),%rdx
   27375:	48 89 10             	mov    %rdx,(%rax)
   27378:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2737f:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   27386:	00 
   27387:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   2738d:	83 c0 02             	add    $0x2,%eax
   27390:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27396:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   2739d:	10 
   2739e:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   273a4:	83 c0 01             	add    $0x1,%eax
   273a7:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   273ad:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   273b3:	83 f8 07             	cmp    $0x7,%eax
   273b6:	7e 2f                	jle    273e7 <__vfprintf+0x32d6>
   273b8:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   273bf:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   273c6:	48 89 d6             	mov    %rdx,%rsi
   273c9:	48 89 c7             	mov    %rax,%rdi
   273cc:	e8 07 cb ff ff       	call   23ed8 <__sprint>
   273d1:	85 c0                	test   %eax,%eax
   273d3:	0f 85 7e 10 00 00    	jne    28457 <__vfprintf+0x4346>
   273d9:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   273e0:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   273e7:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   273ed:	25 84 00 00 00       	and    $0x84,%eax
   273f2:	3d 80 00 00 00       	cmp    $0x80,%eax
   273f7:	0f 85 42 01 00 00    	jne    2753f <__vfprintf+0x342e>
   273fd:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   27403:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   27409:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2740f:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27416:	0f 8e 23 01 00 00    	jle    2753f <__vfprintf+0x342e>
   2741c:	e9 87 00 00 00       	jmp    274a8 <__vfprintf+0x3397>
   27421:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27428:	48 8d 15 11 3d 01 00 	lea    0x13d11(%rip),%rdx        # 3b140 <zeroes.3342>
   2742f:	48 89 10             	mov    %rdx,(%rax)
   27432:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27439:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   27440:	00 
   27441:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27447:	83 c0 10             	add    $0x10,%eax
   2744a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27450:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27457:	10 
   27458:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2745e:	83 c0 01             	add    $0x1,%eax
   27461:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27467:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2746d:	83 f8 07             	cmp    $0x7,%eax
   27470:	7e 2f                	jle    274a1 <__vfprintf+0x3390>
   27472:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27479:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27480:	48 89 d6             	mov    %rdx,%rsi
   27483:	48 89 c7             	mov    %rax,%rdi
   27486:	e8 4d ca ff ff       	call   23ed8 <__sprint>
   2748b:	85 c0                	test   %eax,%eax
   2748d:	0f 85 c7 0f 00 00    	jne    2845a <__vfprintf+0x4349>
   27493:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2749a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   274a1:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   274a8:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   274af:	0f 8f 6c ff ff ff    	jg     27421 <__vfprintf+0x3310>
   274b5:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   274bc:	48 8d 15 7d 3c 01 00 	lea    0x13c7d(%rip),%rdx        # 3b140 <zeroes.3342>
   274c3:	48 89 10             	mov    %rdx,(%rax)
   274c6:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   274cc:	48 63 d0             	movslq %eax,%rdx
   274cf:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   274d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   274da:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   274e0:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   274e6:	01 d0                	add    %edx,%eax
   274e8:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   274ee:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   274f5:	10 
   274f6:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   274fc:	83 c0 01             	add    $0x1,%eax
   274ff:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27505:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2750b:	83 f8 07             	cmp    $0x7,%eax
   2750e:	7e 2f                	jle    2753f <__vfprintf+0x342e>
   27510:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27517:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2751e:	48 89 d6             	mov    %rdx,%rsi
   27521:	48 89 c7             	mov    %rax,%rdi
   27524:	e8 af c9 ff ff       	call   23ed8 <__sprint>
   27529:	85 c0                	test   %eax,%eax
   2752b:	0f 85 2c 0f 00 00    	jne    2845d <__vfprintf+0x434c>
   27531:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27538:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2753f:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   27545:	2b 85 98 fd ff ff    	sub    -0x268(%rbp),%eax
   2754b:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   27551:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27558:	0f 8e 23 01 00 00    	jle    27681 <__vfprintf+0x3570>
   2755e:	e9 87 00 00 00       	jmp    275ea <__vfprintf+0x34d9>
   27563:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2756a:	48 8d 15 cf 3b 01 00 	lea    0x13bcf(%rip),%rdx        # 3b140 <zeroes.3342>
   27571:	48 89 10             	mov    %rdx,(%rax)
   27574:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2757b:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   27582:	00 
   27583:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27589:	83 c0 10             	add    $0x10,%eax
   2758c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27592:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27599:	10 
   2759a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   275a0:	83 c0 01             	add    $0x1,%eax
   275a3:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   275a9:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   275af:	83 f8 07             	cmp    $0x7,%eax
   275b2:	7e 2f                	jle    275e3 <__vfprintf+0x34d2>
   275b4:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   275bb:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   275c2:	48 89 d6             	mov    %rdx,%rsi
   275c5:	48 89 c7             	mov    %rax,%rdi
   275c8:	e8 0b c9 ff ff       	call   23ed8 <__sprint>
   275cd:	85 c0                	test   %eax,%eax
   275cf:	0f 85 8b 0e 00 00    	jne    28460 <__vfprintf+0x434f>
   275d5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   275dc:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   275e3:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   275ea:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   275f1:	0f 8f 6c ff ff ff    	jg     27563 <__vfprintf+0x3452>
   275f7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   275fe:	48 8d 15 3b 3b 01 00 	lea    0x13b3b(%rip),%rdx        # 3b140 <zeroes.3342>
   27605:	48 89 10             	mov    %rdx,(%rax)
   27608:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2760e:	48 63 d0             	movslq %eax,%rdx
   27611:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27618:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2761c:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27622:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27628:	01 d0                	add    %edx,%eax
   2762a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27630:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27637:	10 
   27638:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2763e:	83 c0 01             	add    $0x1,%eax
   27641:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27647:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2764d:	83 f8 07             	cmp    $0x7,%eax
   27650:	7e 2f                	jle    27681 <__vfprintf+0x3570>
   27652:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27659:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27660:	48 89 d6             	mov    %rdx,%rsi
   27663:	48 89 c7             	mov    %rax,%rdi
   27666:	e8 6d c8 ff ff       	call   23ed8 <__sprint>
   2766b:	85 c0                	test   %eax,%eax
   2766d:	0f 85 f0 0d 00 00    	jne    28463 <__vfprintf+0x4352>
   27673:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2767a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27681:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   27687:	25 00 01 00 00       	and    $0x100,%eax
   2768c:	85 c0                	test   %eax,%eax
   2768e:	0f 85 93 00 00 00    	jne    27727 <__vfprintf+0x3616>
   27694:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2769b:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   276a2:	48 89 10             	mov    %rdx,(%rax)
   276a5:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   276ab:	48 63 d0             	movslq %eax,%rdx
   276ae:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   276b5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   276b9:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   276bf:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   276c5:	01 d0                	add    %edx,%eax
   276c7:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   276cd:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   276d4:	10 
   276d5:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   276db:	83 c0 01             	add    $0x1,%eax
   276de:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   276e4:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   276ea:	83 f8 07             	cmp    $0x7,%eax
   276ed:	0f 8e 3b 0b 00 00    	jle    2822e <__vfprintf+0x411d>
   276f3:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   276fa:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27701:	48 89 d6             	mov    %rdx,%rsi
   27704:	48 89 c7             	mov    %rax,%rdi
   27707:	e8 cc c7 ff ff       	call   23ed8 <__sprint>
   2770c:	85 c0                	test   %eax,%eax
   2770e:	0f 85 52 0d 00 00    	jne    28466 <__vfprintf+0x4355>
   27714:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2771b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27722:	e9 07 0b 00 00       	jmp    2822e <__vfprintf+0x411d>
   27727:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   2772e:	0f 85 59 07 00 00    	jne    27e8d <__vfprintf+0x3d7c>
   27734:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   2773a:	85 c0                	test   %eax,%eax
   2773c:	0f 8f 69 02 00 00    	jg     279ab <__vfprintf+0x389a>
   27742:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27749:	48 8d 15 f0 39 01 00 	lea    0x139f0(%rip),%rdx        # 3b140 <zeroes.3342>
   27750:	48 89 10             	mov    %rdx,(%rax)
   27753:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2775a:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   27761:	00 
   27762:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27768:	83 c0 01             	add    $0x1,%eax
   2776b:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27771:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27778:	10 
   27779:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2777f:	83 c0 01             	add    $0x1,%eax
   27782:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27788:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2778e:	83 f8 07             	cmp    $0x7,%eax
   27791:	7e 2f                	jle    277c2 <__vfprintf+0x36b1>
   27793:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2779a:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   277a1:	48 89 d6             	mov    %rdx,%rsi
   277a4:	48 89 c7             	mov    %rax,%rdi
   277a7:	e8 2c c7 ff ff       	call   23ed8 <__sprint>
   277ac:	85 c0                	test   %eax,%eax
   277ae:	0f 85 b5 0c 00 00    	jne    28469 <__vfprintf+0x4358>
   277b4:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   277bb:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   277c2:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   277c9:	75 11                	jne    277dc <__vfprintf+0x36cb>
   277cb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   277d1:	83 e0 01             	and    $0x1,%eax
   277d4:	85 c0                	test   %eax,%eax
   277d6:	0f 84 80 00 00 00    	je     2785c <__vfprintf+0x374b>
   277dc:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   277e3:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   277ea:	48 89 10             	mov    %rdx,(%rax)
   277ed:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   277f4:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   277fb:	00 
   277fc:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27802:	83 c0 01             	add    $0x1,%eax
   27805:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2780b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27812:	10 
   27813:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27819:	83 c0 01             	add    $0x1,%eax
   2781c:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27822:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27828:	83 f8 07             	cmp    $0x7,%eax
   2782b:	7e 2f                	jle    2785c <__vfprintf+0x374b>
   2782d:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27834:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2783b:	48 89 d6             	mov    %rdx,%rsi
   2783e:	48 89 c7             	mov    %rax,%rdi
   27841:	e8 92 c6 ff ff       	call   23ed8 <__sprint>
   27846:	85 c0                	test   %eax,%eax
   27848:	0f 85 1e 0c 00 00    	jne    2846c <__vfprintf+0x435b>
   2784e:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27855:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2785c:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   27862:	f7 d8                	neg    %eax
   27864:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2786a:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27871:	0f 8e 23 01 00 00    	jle    2799a <__vfprintf+0x3889>
   27877:	e9 87 00 00 00       	jmp    27903 <__vfprintf+0x37f2>
   2787c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27883:	48 8d 15 b6 38 01 00 	lea    0x138b6(%rip),%rdx        # 3b140 <zeroes.3342>
   2788a:	48 89 10             	mov    %rdx,(%rax)
   2788d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27894:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   2789b:	00 
   2789c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   278a2:	83 c0 10             	add    $0x10,%eax
   278a5:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   278ab:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   278b2:	10 
   278b3:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   278b9:	83 c0 01             	add    $0x1,%eax
   278bc:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   278c2:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   278c8:	83 f8 07             	cmp    $0x7,%eax
   278cb:	7e 2f                	jle    278fc <__vfprintf+0x37eb>
   278cd:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   278d4:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   278db:	48 89 d6             	mov    %rdx,%rsi
   278de:	48 89 c7             	mov    %rax,%rdi
   278e1:	e8 f2 c5 ff ff       	call   23ed8 <__sprint>
   278e6:	85 c0                	test   %eax,%eax
   278e8:	0f 85 81 0b 00 00    	jne    2846f <__vfprintf+0x435e>
   278ee:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   278f5:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   278fc:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   27903:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   2790a:	0f 8f 6c ff ff ff    	jg     2787c <__vfprintf+0x376b>
   27910:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27917:	48 8d 15 22 38 01 00 	lea    0x13822(%rip),%rdx        # 3b140 <zeroes.3342>
   2791e:	48 89 10             	mov    %rdx,(%rax)
   27921:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27927:	48 63 d0             	movslq %eax,%rdx
   2792a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27931:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27935:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   2793b:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27941:	01 d0                	add    %edx,%eax
   27943:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27949:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27950:	10 
   27951:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27957:	83 c0 01             	add    $0x1,%eax
   2795a:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27960:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27966:	83 f8 07             	cmp    $0x7,%eax
   27969:	7e 2f                	jle    2799a <__vfprintf+0x3889>
   2796b:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27972:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27979:	48 89 d6             	mov    %rdx,%rsi
   2797c:	48 89 c7             	mov    %rax,%rdi
   2797f:	e8 54 c5 ff ff       	call   23ed8 <__sprint>
   27984:	85 c0                	test   %eax,%eax
   27986:	0f 85 e6 0a 00 00    	jne    28472 <__vfprintf+0x4361>
   2798c:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27993:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2799a:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   279a0:	01 85 7c fd ff ff    	add    %eax,-0x284(%rbp)
   279a6:	e9 c1 02 00 00       	jmp    27c6c <__vfprintf+0x3b5b>
   279ab:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   279b2:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   279b9:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   279bf:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   279c5:	3b 85 84 fd ff ff    	cmp    -0x27c(%rbp),%eax
   279cb:	7e 0c                	jle    279d9 <__vfprintf+0x38c8>
   279cd:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   279d3:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   279d9:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   279e0:	0f 8e 8a 00 00 00    	jle    27a70 <__vfprintf+0x395f>
   279e6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   279ed:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   279f4:	48 89 10             	mov    %rdx,(%rax)
   279f7:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   279fd:	48 63 d0             	movslq %eax,%rdx
   27a00:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27a07:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27a0b:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27a11:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   27a17:	01 d0                	add    %edx,%eax
   27a19:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27a1f:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27a26:	10 
   27a27:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27a2d:	83 c0 01             	add    $0x1,%eax
   27a30:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27a36:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27a3c:	83 f8 07             	cmp    $0x7,%eax
   27a3f:	7e 2f                	jle    27a70 <__vfprintf+0x395f>
   27a41:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27a48:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27a4f:	48 89 d6             	mov    %rdx,%rsi
   27a52:	48 89 c7             	mov    %rax,%rdi
   27a55:	e8 7e c4 ff ff       	call   23ed8 <__sprint>
   27a5a:	85 c0                	test   %eax,%eax
   27a5c:	0f 85 13 0a 00 00    	jne    28475 <__vfprintf+0x4364>
   27a62:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27a69:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27a70:	b8 00 00 00 00       	mov    $0x0,%eax
   27a75:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   27a7c:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   27a83:	8b 95 84 fd ff ff    	mov    -0x27c(%rbp),%edx
   27a89:	29 c2                	sub    %eax,%edx
   27a8b:	89 d0                	mov    %edx,%eax
   27a8d:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   27a93:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27a9a:	0f 8e 23 01 00 00    	jle    27bc3 <__vfprintf+0x3ab2>
   27aa0:	e9 87 00 00 00       	jmp    27b2c <__vfprintf+0x3a1b>
   27aa5:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27aac:	48 8d 15 8d 36 01 00 	lea    0x1368d(%rip),%rdx        # 3b140 <zeroes.3342>
   27ab3:	48 89 10             	mov    %rdx,(%rax)
   27ab6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27abd:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   27ac4:	00 
   27ac5:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27acb:	83 c0 10             	add    $0x10,%eax
   27ace:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27ad4:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27adb:	10 
   27adc:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27ae2:	83 c0 01             	add    $0x1,%eax
   27ae5:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27aeb:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27af1:	83 f8 07             	cmp    $0x7,%eax
   27af4:	7e 2f                	jle    27b25 <__vfprintf+0x3a14>
   27af6:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27afd:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27b04:	48 89 d6             	mov    %rdx,%rsi
   27b07:	48 89 c7             	mov    %rax,%rdi
   27b0a:	e8 c9 c3 ff ff       	call   23ed8 <__sprint>
   27b0f:	85 c0                	test   %eax,%eax
   27b11:	0f 85 61 09 00 00    	jne    28478 <__vfprintf+0x4367>
   27b17:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27b1e:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27b25:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   27b2c:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   27b33:	0f 8f 6c ff ff ff    	jg     27aa5 <__vfprintf+0x3994>
   27b39:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27b40:	48 8d 15 f9 35 01 00 	lea    0x135f9(%rip),%rdx        # 3b140 <zeroes.3342>
   27b47:	48 89 10             	mov    %rdx,(%rax)
   27b4a:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27b50:	48 63 d0             	movslq %eax,%rdx
   27b53:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27b5a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27b5e:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27b64:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27b6a:	01 d0                	add    %edx,%eax
   27b6c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27b72:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27b79:	10 
   27b7a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27b80:	83 c0 01             	add    $0x1,%eax
   27b83:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27b89:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27b8f:	83 f8 07             	cmp    $0x7,%eax
   27b92:	7e 2f                	jle    27bc3 <__vfprintf+0x3ab2>
   27b94:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27b9b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27ba2:	48 89 d6             	mov    %rdx,%rsi
   27ba5:	48 89 c7             	mov    %rax,%rdi
   27ba8:	e8 2b c3 ff ff       	call   23ed8 <__sprint>
   27bad:	85 c0                	test   %eax,%eax
   27baf:	0f 85 c6 08 00 00    	jne    2847b <__vfprintf+0x436a>
   27bb5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27bbc:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27bc3:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   27bc9:	48 98                	cltq   
   27bcb:	48 01 85 c8 fd ff ff 	add    %rax,-0x238(%rbp)
   27bd2:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   27bd9:	75 11                	jne    27bec <__vfprintf+0x3adb>
   27bdb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   27be1:	83 e0 01             	and    $0x1,%eax
   27be4:	85 c0                	test   %eax,%eax
   27be6:	0f 84 80 00 00 00    	je     27c6c <__vfprintf+0x3b5b>
   27bec:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27bf3:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   27bfa:	48 89 10             	mov    %rdx,(%rax)
   27bfd:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27c04:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   27c0b:	00 
   27c0c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27c12:	83 c0 01             	add    $0x1,%eax
   27c15:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27c1b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27c22:	10 
   27c23:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27c29:	83 c0 01             	add    $0x1,%eax
   27c2c:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27c32:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27c38:	83 f8 07             	cmp    $0x7,%eax
   27c3b:	7e 2f                	jle    27c6c <__vfprintf+0x3b5b>
   27c3d:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27c44:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27c4b:	48 89 d6             	mov    %rdx,%rsi
   27c4e:	48 89 c7             	mov    %rax,%rdi
   27c51:	e8 82 c2 ff ff       	call   23ed8 <__sprint>
   27c56:	85 c0                	test   %eax,%eax
   27c58:	0f 85 20 08 00 00    	jne    2847e <__vfprintf+0x436d>
   27c5e:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27c65:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27c6c:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   27c73:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   27c7a:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   27c80:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   27c86:	3b 85 7c fd ff ff    	cmp    -0x284(%rbp),%eax
   27c8c:	7e 0c                	jle    27c9a <__vfprintf+0x3b89>
   27c8e:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   27c94:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   27c9a:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   27ca1:	0f 8e 8a 00 00 00    	jle    27d31 <__vfprintf+0x3c20>
   27ca7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27cae:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   27cb5:	48 89 10             	mov    %rdx,(%rax)
   27cb8:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   27cbe:	48 63 d0             	movslq %eax,%rdx
   27cc1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27cc8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27ccc:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27cd2:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   27cd8:	01 d0                	add    %edx,%eax
   27cda:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27ce0:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27ce7:	10 
   27ce8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27cee:	83 c0 01             	add    $0x1,%eax
   27cf1:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27cf7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27cfd:	83 f8 07             	cmp    $0x7,%eax
   27d00:	7e 2f                	jle    27d31 <__vfprintf+0x3c20>
   27d02:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27d09:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27d10:	48 89 d6             	mov    %rdx,%rsi
   27d13:	48 89 c7             	mov    %rax,%rdi
   27d16:	e8 bd c1 ff ff       	call   23ed8 <__sprint>
   27d1b:	85 c0                	test   %eax,%eax
   27d1d:	0f 85 5e 07 00 00    	jne    28481 <__vfprintf+0x4370>
   27d23:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27d2a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27d31:	b8 00 00 00 00       	mov    $0x0,%eax
   27d36:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   27d3d:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   27d44:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   27d4a:	29 c2                	sub    %eax,%edx
   27d4c:	89 d0                	mov    %edx,%eax
   27d4e:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   27d54:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27d5b:	0f 8e cd 04 00 00    	jle    2822e <__vfprintf+0x411d>
   27d61:	e9 87 00 00 00       	jmp    27ded <__vfprintf+0x3cdc>
   27d66:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27d6d:	48 8d 15 cc 33 01 00 	lea    0x133cc(%rip),%rdx        # 3b140 <zeroes.3342>
   27d74:	48 89 10             	mov    %rdx,(%rax)
   27d77:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27d7e:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   27d85:	00 
   27d86:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27d8c:	83 c0 10             	add    $0x10,%eax
   27d8f:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27d95:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27d9c:	10 
   27d9d:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27da3:	83 c0 01             	add    $0x1,%eax
   27da6:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27dac:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27db2:	83 f8 07             	cmp    $0x7,%eax
   27db5:	7e 2f                	jle    27de6 <__vfprintf+0x3cd5>
   27db7:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27dbe:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27dc5:	48 89 d6             	mov    %rdx,%rsi
   27dc8:	48 89 c7             	mov    %rax,%rdi
   27dcb:	e8 08 c1 ff ff       	call   23ed8 <__sprint>
   27dd0:	85 c0                	test   %eax,%eax
   27dd2:	0f 85 ac 06 00 00    	jne    28484 <__vfprintf+0x4373>
   27dd8:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27ddf:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27de6:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   27ded:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   27df4:	0f 8f 6c ff ff ff    	jg     27d66 <__vfprintf+0x3c55>
   27dfa:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27e01:	48 8d 15 38 33 01 00 	lea    0x13338(%rip),%rdx        # 3b140 <zeroes.3342>
   27e08:	48 89 10             	mov    %rdx,(%rax)
   27e0b:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27e11:	48 63 d0             	movslq %eax,%rdx
   27e14:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27e1b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27e1f:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27e25:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   27e2b:	01 d0                	add    %edx,%eax
   27e2d:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27e33:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27e3a:	10 
   27e3b:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27e41:	83 c0 01             	add    $0x1,%eax
   27e44:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27e4a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27e50:	83 f8 07             	cmp    $0x7,%eax
   27e53:	0f 8e d5 03 00 00    	jle    2822e <__vfprintf+0x411d>
   27e59:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27e60:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27e67:	48 89 d6             	mov    %rdx,%rsi
   27e6a:	48 89 c7             	mov    %rax,%rdi
   27e6d:	e8 66 c0 ff ff       	call   23ed8 <__sprint>
   27e72:	85 c0                	test   %eax,%eax
   27e74:	0f 85 0d 06 00 00    	jne    28487 <__vfprintf+0x4376>
   27e7a:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27e81:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27e88:	e9 a1 03 00 00       	jmp    2822e <__vfprintf+0x411d>
   27e8d:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   27e94:	7f 11                	jg     27ea7 <__vfprintf+0x3d96>
   27e96:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   27e9c:	83 e0 01             	and    $0x1,%eax
   27e9f:	85 c0                	test   %eax,%eax
   27ea1:	0f 84 7d 02 00 00    	je     28124 <__vfprintf+0x4013>
   27ea7:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   27eae:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27eb2:	48 89 95 c8 fd ff ff 	mov    %rdx,-0x238(%rbp)
   27eb9:	0f b6 00             	movzbl (%rax),%eax
   27ebc:	88 45 90             	mov    %al,-0x70(%rbp)
   27ebf:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   27ec6:	0f b6 00             	movzbl (%rax),%eax
   27ec9:	88 45 91             	mov    %al,-0x6f(%rbp)
   27ecc:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27ed3:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   27ed7:	48 89 10             	mov    %rdx,(%rax)
   27eda:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27ee1:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   27ee8:	00 
   27ee9:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   27eef:	83 c0 02             	add    $0x2,%eax
   27ef2:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27ef8:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27eff:	10 
   27f00:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27f06:	83 c0 01             	add    $0x1,%eax
   27f09:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27f0f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27f15:	83 f8 07             	cmp    $0x7,%eax
   27f18:	7e 2f                	jle    27f49 <__vfprintf+0x3e38>
   27f1a:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27f21:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27f28:	48 89 d6             	mov    %rdx,%rsi
   27f2b:	48 89 c7             	mov    %rax,%rdi
   27f2e:	e8 a5 bf ff ff       	call   23ed8 <__sprint>
   27f33:	85 c0                	test   %eax,%eax
   27f35:	0f 85 4f 05 00 00    	jne    2848a <__vfprintf+0x4379>
   27f3b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27f42:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27f49:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27f50:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   27f57:	48 89 10             	mov    %rdx,(%rax)
   27f5a:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   27f60:	83 e8 01             	sub    $0x1,%eax
   27f63:	48 63 d0             	movslq %eax,%rdx
   27f66:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   27f6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   27f71:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   27f77:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   27f7d:	01 d0                	add    %edx,%eax
   27f7f:	83 e8 01             	sub    $0x1,%eax
   27f82:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   27f88:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   27f8f:	10 
   27f90:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27f96:	83 c0 01             	add    $0x1,%eax
   27f99:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   27f9f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   27fa5:	83 f8 07             	cmp    $0x7,%eax
   27fa8:	7e 2f                	jle    27fd9 <__vfprintf+0x3ec8>
   27faa:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   27fb1:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   27fb8:	48 89 d6             	mov    %rdx,%rsi
   27fbb:	48 89 c7             	mov    %rax,%rdi
   27fbe:	e8 15 bf ff ff       	call   23ed8 <__sprint>
   27fc3:	85 c0                	test   %eax,%eax
   27fc5:	0f 85 c2 04 00 00    	jne    2848d <__vfprintf+0x437c>
   27fcb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   27fd2:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   27fd9:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   27fdf:	2b 85 88 fd ff ff    	sub    -0x278(%rbp),%eax
   27fe5:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   27feb:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   27ff2:	0f 8e ae 01 00 00    	jle    281a6 <__vfprintf+0x4095>
   27ff8:	e9 87 00 00 00       	jmp    28084 <__vfprintf+0x3f73>
   27ffd:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   28004:	48 8d 15 35 31 01 00 	lea    0x13135(%rip),%rdx        # 3b140 <zeroes.3342>
   2800b:	48 89 10             	mov    %rdx,(%rax)
   2800e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   28015:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   2801c:	00 
   2801d:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   28023:	83 c0 10             	add    $0x10,%eax
   28026:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2802c:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   28033:	10 
   28034:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2803a:	83 c0 01             	add    $0x1,%eax
   2803d:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   28043:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   28049:	83 f8 07             	cmp    $0x7,%eax
   2804c:	7e 2f                	jle    2807d <__vfprintf+0x3f6c>
   2804e:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   28055:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2805c:	48 89 d6             	mov    %rdx,%rsi
   2805f:	48 89 c7             	mov    %rax,%rdi
   28062:	e8 71 be ff ff       	call   23ed8 <__sprint>
   28067:	85 c0                	test   %eax,%eax
   28069:	0f 85 21 04 00 00    	jne    28490 <__vfprintf+0x437f>
   2806f:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   28076:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2807d:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   28084:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   2808b:	0f 8f 6c ff ff ff    	jg     27ffd <__vfprintf+0x3eec>
   28091:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   28098:	48 8d 15 a1 30 01 00 	lea    0x130a1(%rip),%rdx        # 3b140 <zeroes.3342>
   2809f:	48 89 10             	mov    %rdx,(%rax)
   280a2:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   280a8:	48 63 d0             	movslq %eax,%rdx
   280ab:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   280b2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   280b6:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   280bc:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   280c2:	01 d0                	add    %edx,%eax
   280c4:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   280ca:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   280d1:	10 
   280d2:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   280d8:	83 c0 01             	add    $0x1,%eax
   280db:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   280e1:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   280e7:	83 f8 07             	cmp    $0x7,%eax
   280ea:	0f 8e b6 00 00 00    	jle    281a6 <__vfprintf+0x4095>
   280f0:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   280f7:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   280fe:	48 89 d6             	mov    %rdx,%rsi
   28101:	48 89 c7             	mov    %rax,%rdi
   28104:	e8 cf bd ff ff       	call   23ed8 <__sprint>
   28109:	85 c0                	test   %eax,%eax
   2810b:	0f 85 82 03 00 00    	jne    28493 <__vfprintf+0x4382>
   28111:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   28118:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2811f:	e9 82 00 00 00       	jmp    281a6 <__vfprintf+0x4095>
   28124:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2812b:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   28132:	48 89 10             	mov    %rdx,(%rax)
   28135:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2813c:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   28143:	00 
   28144:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   2814a:	83 c0 01             	add    $0x1,%eax
   2814d:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   28153:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   2815a:	10 
   2815b:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   28161:	83 c0 01             	add    $0x1,%eax
   28164:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   2816a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   28170:	83 f8 07             	cmp    $0x7,%eax
   28173:	7e 32                	jle    281a7 <__vfprintf+0x4096>
   28175:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2817c:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   28183:	48 89 d6             	mov    %rdx,%rsi
   28186:	48 89 c7             	mov    %rax,%rdi
   28189:	e8 4a bd ff ff       	call   23ed8 <__sprint>
   2818e:	85 c0                	test   %eax,%eax
   28190:	0f 85 00 03 00 00    	jne    28496 <__vfprintf+0x4385>
   28196:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2819d:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   281a4:	eb 01                	jmp    281a7 <__vfprintf+0x4096>
   281a6:	90                   	nop
   281a7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   281ae:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   281b2:	48 89 10             	mov    %rdx,(%rax)
   281b5:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   281bb:	48 63 d0             	movslq %eax,%rdx
   281be:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   281c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   281c9:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   281cf:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   281d5:	01 d0                	add    %edx,%eax
   281d7:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   281dd:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   281e4:	10 
   281e5:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   281eb:	83 c0 01             	add    $0x1,%eax
   281ee:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   281f4:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   281fa:	83 f8 07             	cmp    $0x7,%eax
   281fd:	7e 2f                	jle    2822e <__vfprintf+0x411d>
   281ff:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   28206:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2820d:	48 89 d6             	mov    %rdx,%rsi
   28210:	48 89 c7             	mov    %rax,%rdi
   28213:	e8 c0 bc ff ff       	call   23ed8 <__sprint>
   28218:	85 c0                	test   %eax,%eax
   2821a:	0f 85 79 02 00 00    	jne    28499 <__vfprintf+0x4388>
   28220:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   28227:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2822e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   28234:	83 e0 04             	and    $0x4,%eax
   28237:	85 c0                	test   %eax,%eax
   28239:	0f 84 42 01 00 00    	je     28381 <__vfprintf+0x4270>
   2823f:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   28245:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   2824b:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   28251:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   28258:	0f 8e 23 01 00 00    	jle    28381 <__vfprintf+0x4270>
   2825e:	e9 87 00 00 00       	jmp    282ea <__vfprintf+0x41d9>
   28263:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2826a:	48 8d 15 bf 2e 01 00 	lea    0x12ebf(%rip),%rdx        # 3b130 <blanks.3341>
   28271:	48 89 10             	mov    %rdx,(%rax)
   28274:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2827b:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   28282:	00 
   28283:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   28289:	83 c0 10             	add    $0x10,%eax
   2828c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   28292:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   28299:	10 
   2829a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   282a0:	83 c0 01             	add    $0x1,%eax
   282a3:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   282a9:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   282af:	83 f8 07             	cmp    $0x7,%eax
   282b2:	7e 2f                	jle    282e3 <__vfprintf+0x41d2>
   282b4:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   282bb:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   282c2:	48 89 d6             	mov    %rdx,%rsi
   282c5:	48 89 c7             	mov    %rax,%rdi
   282c8:	e8 0b bc ff ff       	call   23ed8 <__sprint>
   282cd:	85 c0                	test   %eax,%eax
   282cf:	0f 85 c7 01 00 00    	jne    2849c <__vfprintf+0x438b>
   282d5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   282dc:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   282e3:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   282ea:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   282f1:	0f 8f 6c ff ff ff    	jg     28263 <__vfprintf+0x4152>
   282f7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   282fe:	48 8d 15 2b 2e 01 00 	lea    0x12e2b(%rip),%rdx        # 3b130 <blanks.3341>
   28305:	48 89 10             	mov    %rdx,(%rax)
   28308:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2830e:	48 63 d0             	movslq %eax,%rdx
   28311:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   28318:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2831c:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   28322:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   28328:	01 d0                	add    %edx,%eax
   2832a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   28330:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   28337:	10 
   28338:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2833e:	83 c0 01             	add    $0x1,%eax
   28341:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   28347:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2834d:	83 f8 07             	cmp    $0x7,%eax
   28350:	7e 2f                	jle    28381 <__vfprintf+0x4270>
   28352:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   28359:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   28360:	48 89 d6             	mov    %rdx,%rsi
   28363:	48 89 c7             	mov    %rax,%rdi
   28366:	e8 6d bb ff ff       	call   23ed8 <__sprint>
   2836b:	85 c0                	test   %eax,%eax
   2836d:	0f 85 2c 01 00 00    	jne    2849f <__vfprintf+0x438e>
   28373:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2837a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   28381:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   28387:	3b 85 94 fd ff ff    	cmp    -0x26c(%rbp),%eax
   2838d:	7d 0c                	jge    2839b <__vfprintf+0x428a>
   2838f:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
   28395:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   2839b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   283a0:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   283a6:	39 85 78 fd ff ff    	cmp    %eax,-0x288(%rbp)
   283ac:	0f 8f 34 01 00 00    	jg     284e6 <__vfprintf+0x43d5>
   283b2:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   283b8:	01 85 74 fd ff ff    	add    %eax,-0x28c(%rbp)
   283be:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   283c4:	85 c0                	test   %eax,%eax
   283c6:	74 21                	je     283e9 <__vfprintf+0x42d8>
   283c8:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   283cf:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   283d6:	48 89 d6             	mov    %rdx,%rsi
   283d9:	48 89 c7             	mov    %rax,%rdi
   283dc:	e8 f7 ba ff ff       	call   23ed8 <__sprint>
   283e1:	85 c0                	test   %eax,%eax
   283e3:	0f 85 b9 00 00 00    	jne    284a2 <__vfprintf+0x4391>
   283e9:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   283f0:	00 00 00 
   283f3:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   283fa:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   28401:	e9 88 be ff ff       	jmp    2428e <__vfprintf+0x17d>
   28406:	90                   	nop
   28407:	eb 01                	jmp    2840a <__vfprintf+0x42f9>
   28409:	90                   	nop
   2840a:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   28410:	85 c0                	test   %eax,%eax
   28412:	74 1d                	je     28431 <__vfprintf+0x4320>
   28414:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2841b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   28422:	48 89 d6             	mov    %rdx,%rsi
   28425:	48 89 c7             	mov    %rax,%rdi
   28428:	e8 ab ba ff ff       	call   23ed8 <__sprint>
   2842d:	85 c0                	test   %eax,%eax
   2842f:	75 74                	jne    284a5 <__vfprintf+0x4394>
   28431:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   28438:	00 00 00 
   2843b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   28442:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   28449:	eb 5b                	jmp    284a6 <__vfprintf+0x4395>
   2844b:	90                   	nop
   2844c:	eb 58                	jmp    284a6 <__vfprintf+0x4395>
   2844e:	90                   	nop
   2844f:	eb 55                	jmp    284a6 <__vfprintf+0x4395>
   28451:	90                   	nop
   28452:	eb 52                	jmp    284a6 <__vfprintf+0x4395>
   28454:	90                   	nop
   28455:	eb 4f                	jmp    284a6 <__vfprintf+0x4395>
   28457:	90                   	nop
   28458:	eb 4c                	jmp    284a6 <__vfprintf+0x4395>
   2845a:	90                   	nop
   2845b:	eb 49                	jmp    284a6 <__vfprintf+0x4395>
   2845d:	90                   	nop
   2845e:	eb 46                	jmp    284a6 <__vfprintf+0x4395>
   28460:	90                   	nop
   28461:	eb 43                	jmp    284a6 <__vfprintf+0x4395>
   28463:	90                   	nop
   28464:	eb 40                	jmp    284a6 <__vfprintf+0x4395>
   28466:	90                   	nop
   28467:	eb 3d                	jmp    284a6 <__vfprintf+0x4395>
   28469:	90                   	nop
   2846a:	eb 3a                	jmp    284a6 <__vfprintf+0x4395>
   2846c:	90                   	nop
   2846d:	eb 37                	jmp    284a6 <__vfprintf+0x4395>
   2846f:	90                   	nop
   28470:	eb 34                	jmp    284a6 <__vfprintf+0x4395>
   28472:	90                   	nop
   28473:	eb 31                	jmp    284a6 <__vfprintf+0x4395>
   28475:	90                   	nop
   28476:	eb 2e                	jmp    284a6 <__vfprintf+0x4395>
   28478:	90                   	nop
   28479:	eb 2b                	jmp    284a6 <__vfprintf+0x4395>
   2847b:	90                   	nop
   2847c:	eb 28                	jmp    284a6 <__vfprintf+0x4395>
   2847e:	90                   	nop
   2847f:	eb 25                	jmp    284a6 <__vfprintf+0x4395>
   28481:	90                   	nop
   28482:	eb 22                	jmp    284a6 <__vfprintf+0x4395>
   28484:	90                   	nop
   28485:	eb 1f                	jmp    284a6 <__vfprintf+0x4395>
   28487:	90                   	nop
   28488:	eb 1c                	jmp    284a6 <__vfprintf+0x4395>
   2848a:	90                   	nop
   2848b:	eb 19                	jmp    284a6 <__vfprintf+0x4395>
   2848d:	90                   	nop
   2848e:	eb 16                	jmp    284a6 <__vfprintf+0x4395>
   28490:	90                   	nop
   28491:	eb 13                	jmp    284a6 <__vfprintf+0x4395>
   28493:	90                   	nop
   28494:	eb 10                	jmp    284a6 <__vfprintf+0x4395>
   28496:	90                   	nop
   28497:	eb 0d                	jmp    284a6 <__vfprintf+0x4395>
   28499:	90                   	nop
   2849a:	eb 0a                	jmp    284a6 <__vfprintf+0x4395>
   2849c:	90                   	nop
   2849d:	eb 07                	jmp    284a6 <__vfprintf+0x4395>
   2849f:	90                   	nop
   284a0:	eb 04                	jmp    284a6 <__vfprintf+0x4395>
   284a2:	90                   	nop
   284a3:	eb 01                	jmp    284a6 <__vfprintf+0x4395>
   284a5:	90                   	nop
   284a6:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   284ad:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   284b1:	98                   	cwtl   
   284b2:	83 e0 40             	and    $0x40,%eax
   284b5:	85 c0                	test   %eax,%eax
   284b7:	74 45                	je     284fe <__vfprintf+0x43ed>
   284b9:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   284c0:	ff ff ff 
   284c3:	eb 39                	jmp    284fe <__vfprintf+0x43ed>
   284c5:	90                   	nop
   284c6:	eb 1f                	jmp    284e7 <__vfprintf+0x43d6>
   284c8:	90                   	nop
   284c9:	eb 1c                	jmp    284e7 <__vfprintf+0x43d6>
   284cb:	90                   	nop
   284cc:	eb 19                	jmp    284e7 <__vfprintf+0x43d6>
   284ce:	90                   	nop
   284cf:	eb 16                	jmp    284e7 <__vfprintf+0x43d6>
   284d1:	90                   	nop
   284d2:	eb 13                	jmp    284e7 <__vfprintf+0x43d6>
   284d4:	90                   	nop
   284d5:	eb 10                	jmp    284e7 <__vfprintf+0x43d6>
   284d7:	90                   	nop
   284d8:	eb 0d                	jmp    284e7 <__vfprintf+0x43d6>
   284da:	90                   	nop
   284db:	eb 0a                	jmp    284e7 <__vfprintf+0x43d6>
   284dd:	90                   	nop
   284de:	eb 07                	jmp    284e7 <__vfprintf+0x43d6>
   284e0:	90                   	nop
   284e1:	eb 04                	jmp    284e7 <__vfprintf+0x43d6>
   284e3:	90                   	nop
   284e4:	eb 01                	jmp    284e7 <__vfprintf+0x43d6>
   284e6:	90                   	nop
   284e7:	e8 dd b9 ff ff       	call   23ec9 <__errno>
   284ec:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   284f2:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   284f9:	ff ff ff 
   284fc:	eb 01                	jmp    284ff <__vfprintf+0x43ee>
   284fe:	90                   	nop
   284ff:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   28506:	00 
   28507:	74 0f                	je     28518 <__vfprintf+0x4407>
   28509:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   28510:	48 89 c7             	mov    %rax,%rdi
   28513:	e8 0a 80 ff ff       	call   20522 <dlfree>
   28518:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   2851f:	00 
   28520:	74 0f                	je     28531 <__vfprintf+0x4420>
   28522:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   28529:	48 89 c7             	mov    %rax,%rdi
   2852c:	e8 b3 23 00 00       	call   2a8e4 <__freedtoa>
   28531:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   28538:	48 85 c0             	test   %rax,%rax
   2853b:	74 2d                	je     2856a <__vfprintf+0x4459>
   2853d:	48 8b 95 b0 fd ff ff 	mov    -0x250(%rbp),%rdx
   28544:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   2854b:	48 39 c2             	cmp    %rax,%rdx
   2854e:	74 1a                	je     2856a <__vfprintf+0x4459>
   28550:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   28557:	48 89 c7             	mov    %rax,%rdi
   2855a:	e8 c3 7f ff ff       	call   20522 <dlfree>
   2855f:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   28566:	00 00 00 00 
   2856a:	8b 85 74 fd ff ff    	mov    -0x28c(%rbp),%eax
   28570:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   28574:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   2857b:	00 00 
   2857d:	74 05                	je     28584 <__vfprintf+0x4473>
   2857f:	e8 73 b2 ff ff       	call   237f7 <__stack_chk_fail>
   28584:	c9                   	leave  
   28585:	c3                   	ret    

0000000000028586 <__find_arguments>:
   28586:	f3 0f 1e fa          	endbr64 
   2858a:	55                   	push   %rbp
   2858b:	48 89 e5             	mov    %rsp,%rbp
   2858e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   28592:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   28596:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2859a:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   2859e:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   285a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   285a9:	00 00 
   285ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   285af:	31 c0                	xor    %eax,%eax
   285b1:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   285b8:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   285bf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   285c3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   285c7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   285cb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   285cf:	c7 45 a0 08 00 00 00 	movl   $0x8,-0x60(%rbp)
   285d6:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   285dd:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
   285e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   285e8:	ba 08 00 00 00       	mov    $0x8,%edx
   285ed:	be 00 00 00 00       	mov    $0x0,%esi
   285f2:	48 89 c7             	mov    %rax,%rdi
   285f5:	e8 89 b0 ff ff       	call   23683 <memset>
   285fa:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   285fe:	ba 08 00 00 00       	mov    $0x8,%edx
   28603:	be 00 00 00 00       	mov    $0x0,%esi
   28608:	48 89 c7             	mov    %rax,%rdi
   2860b:	e8 73 b0 ff ff       	call   23683 <memset>
   28610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28614:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   28618:	eb 18                	jmp    28632 <__find_arguments+0xac>
   2861a:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2861d:	48 98                	cltq   
   2861f:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   28623:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   28626:	83 f8 25             	cmp    $0x25,%eax
   28629:	75 07                	jne    28632 <__find_arguments+0xac>
   2862b:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   28630:	eb 25                	jmp    28657 <__find_arguments+0xd1>
   28632:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   28636:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   2863a:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   2863e:	48 89 d1             	mov    %rdx,%rcx
   28641:	ba 01 00 00 00       	mov    $0x1,%edx
   28646:	48 89 c7             	mov    %rax,%rdi
   28649:	e8 5a 59 00 00       	call   2dfa8 <mbrtowc>
   2864e:	89 45 ac             	mov    %eax,-0x54(%rbp)
   28651:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   28655:	7f c3                	jg     2861a <__find_arguments+0x94>
   28657:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   2865b:	0f 8e be 11 00 00    	jle    2981f <__find_arguments+0x1299>
   28661:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   28666:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   2866d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28671:	48 8d 50 01          	lea    0x1(%rax),%rdx
   28675:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   28679:	0f b6 00             	movzbl (%rax),%eax
   2867c:	0f be c0             	movsbl %al,%eax
   2867f:	89 45 a8             	mov    %eax,-0x58(%rbp)
   28682:	8b 45 a8             	mov    -0x58(%rbp),%eax
   28685:	83 e8 20             	sub    $0x20,%eax
   28688:	83 f8 5a             	cmp    $0x5a,%eax
   2868b:	0f 87 56 11 00 00    	ja     297e7 <__find_arguments+0x1261>
   28691:	89 c0                	mov    %eax,%eax
   28693:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2869a:	00 
   2869b:	48 8d 05 ae b3 00 00 	lea    0xb3ae(%rip),%rax        # 33a50 <__func__.2555+0x1a7>
   286a2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   286a5:	48 98                	cltq   
   286a7:	48 8d 15 a2 b3 00 00 	lea    0xb3a2(%rip),%rdx        # 33a50 <__func__.2555+0x1a7>
   286ae:	48 01 d0             	add    %rdx,%rax
   286b1:	3e ff e0             	notrack jmp *%rax
   286b4:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   286bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   286bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   286c3:	eb 57                	jmp    2871c <__find_arguments+0x196>
   286c5:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   286cc:	0f 8f 09 1b 00 00    	jg     2a1db <__find_arguments+0x1c55>
   286d2:	8b 55 b0             	mov    -0x50(%rbp),%edx
   286d5:	89 d0                	mov    %edx,%eax
   286d7:	c1 e0 02             	shl    $0x2,%eax
   286da:	01 d0                	add    %edx,%eax
   286dc:	01 c0                	add    %eax,%eax
   286de:	89 45 b0             	mov    %eax,-0x50(%rbp)
   286e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   286e5:	0f b6 00             	movzbl (%rax),%eax
   286e8:	0f be c0             	movsbl %al,%eax
   286eb:	ba 30 00 00 00       	mov    $0x30,%edx
   286f0:	29 c2                	sub    %eax,%edx
   286f2:	89 d0                	mov    %edx,%eax
   286f4:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   286f9:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   286fc:	0f 8f dc 1a 00 00    	jg     2a1de <__find_arguments+0x1c58>
   28702:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28706:	0f b6 00             	movzbl (%rax),%eax
   28709:	0f be d0             	movsbl %al,%edx
   2870c:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2870f:	01 d0                	add    %edx,%eax
   28711:	83 e8 30             	sub    $0x30,%eax
   28714:	89 45 b0             	mov    %eax,-0x50(%rbp)
   28717:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2871c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28720:	0f b6 00             	movzbl (%rax),%eax
   28723:	0f be c0             	movsbl %al,%eax
   28726:	83 e8 30             	sub    $0x30,%eax
   28729:	83 f8 09             	cmp    $0x9,%eax
   2872c:	76 97                	jbe    286c5 <__find_arguments+0x13f>
   2872e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28732:	0f b6 00             	movzbl (%rax),%eax
   28735:	3c 24                	cmp    $0x24,%al
   28737:	75 75                	jne    287ae <__find_arguments+0x228>
   28739:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2873c:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2873f:	8b 45 b0             	mov    -0x50(%rbp),%eax
   28742:	89 45 bc             	mov    %eax,-0x44(%rbp)
   28745:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28748:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2874b:	7c 16                	jl     28763 <__find_arguments+0x1dd>
   2874d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28751:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28755:	48 89 d6             	mov    %rdx,%rsi
   28758:	48 89 c7             	mov    %rax,%rdi
   2875b:	e8 0a 1b 00 00       	call   2a26a <__grow_type_table>
   28760:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28763:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28766:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28769:	7e 06                	jle    28771 <__find_arguments+0x1eb>
   2876b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2876e:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28771:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28775:	74 15                	je     2878c <__find_arguments+0x206>
   28777:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2877b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2877e:	8d 50 01             	lea    0x1(%rax),%edx
   28781:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28784:	48 98                	cltq   
   28786:	48 01 c8             	add    %rcx,%rax
   28789:	c6 00 04             	movb   $0x4,(%rax)
   2878c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28790:	0f 84 4b 1a 00 00    	je     2a1e1 <__find_arguments+0x1c5b>
   28796:	8b 45 cc             	mov    -0x34(%rbp),%eax
   28799:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2879c:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   287a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   287a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   287a9:	e9 bf fe ff ff       	jmp    2866d <__find_arguments+0xe7>
   287ae:	8b 45 a0             	mov    -0x60(%rbp),%eax
   287b1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   287b4:	7c 16                	jl     287cc <__find_arguments+0x246>
   287b6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   287ba:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   287be:	48 89 d6             	mov    %rdx,%rsi
   287c1:	48 89 c7             	mov    %rax,%rdi
   287c4:	e8 a1 1a 00 00       	call   2a26a <__grow_type_table>
   287c9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   287cc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   287cf:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   287d2:	7e 06                	jle    287da <__find_arguments+0x254>
   287d4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   287d7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   287da:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   287de:	74 15                	je     287f5 <__find_arguments+0x26f>
   287e0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   287e4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   287e7:	8d 50 01             	lea    0x1(%rax),%edx
   287ea:	89 55 bc             	mov    %edx,-0x44(%rbp)
   287ed:	48 98                	cltq   
   287ef:	48 01 c8             	add    %rcx,%rax
   287f2:	c6 00 04             	movb   $0x4,(%rax)
   287f5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   287f9:	0f 84 e5 19 00 00    	je     2a1e4 <__find_arguments+0x1c5e>
   287ff:	e9 69 fe ff ff       	jmp    2866d <__find_arguments+0xe7>
   28804:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28808:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2880c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   28810:	0f b6 00             	movzbl (%rax),%eax
   28813:	0f be c0             	movsbl %al,%eax
   28816:	89 45 a8             	mov    %eax,-0x58(%rbp)
   28819:	83 7d a8 2a          	cmpl   $0x2a,-0x58(%rbp)
   2881d:	0f 85 65 01 00 00    	jne    28988 <__find_arguments+0x402>
   28823:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   2882a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2882e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   28832:	eb 57                	jmp    2888b <__find_arguments+0x305>
   28834:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   2883b:	0f 8f a6 19 00 00    	jg     2a1e7 <__find_arguments+0x1c61>
   28841:	8b 55 b0             	mov    -0x50(%rbp),%edx
   28844:	89 d0                	mov    %edx,%eax
   28846:	c1 e0 02             	shl    $0x2,%eax
   28849:	01 d0                	add    %edx,%eax
   2884b:	01 c0                	add    %eax,%eax
   2884d:	89 45 b0             	mov    %eax,-0x50(%rbp)
   28850:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28854:	0f b6 00             	movzbl (%rax),%eax
   28857:	0f be c0             	movsbl %al,%eax
   2885a:	ba 30 00 00 00       	mov    $0x30,%edx
   2885f:	29 c2                	sub    %eax,%edx
   28861:	89 d0                	mov    %edx,%eax
   28863:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   28868:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   2886b:	0f 8f 79 19 00 00    	jg     2a1ea <__find_arguments+0x1c64>
   28871:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28875:	0f b6 00             	movzbl (%rax),%eax
   28878:	0f be d0             	movsbl %al,%edx
   2887b:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2887e:	01 d0                	add    %edx,%eax
   28880:	83 e8 30             	sub    $0x30,%eax
   28883:	89 45 b0             	mov    %eax,-0x50(%rbp)
   28886:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2888b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2888f:	0f b6 00             	movzbl (%rax),%eax
   28892:	0f be c0             	movsbl %al,%eax
   28895:	83 e8 30             	sub    $0x30,%eax
   28898:	83 f8 09             	cmp    $0x9,%eax
   2889b:	76 97                	jbe    28834 <__find_arguments+0x2ae>
   2889d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   288a1:	0f b6 00             	movzbl (%rax),%eax
   288a4:	3c 24                	cmp    $0x24,%al
   288a6:	75 75                	jne    2891d <__find_arguments+0x397>
   288a8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   288ab:	89 45 c8             	mov    %eax,-0x38(%rbp)
   288ae:	8b 45 b0             	mov    -0x50(%rbp),%eax
   288b1:	89 45 bc             	mov    %eax,-0x44(%rbp)
   288b4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   288b7:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   288ba:	7c 16                	jl     288d2 <__find_arguments+0x34c>
   288bc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   288c0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   288c4:	48 89 d6             	mov    %rdx,%rsi
   288c7:	48 89 c7             	mov    %rax,%rdi
   288ca:	e8 9b 19 00 00       	call   2a26a <__grow_type_table>
   288cf:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   288d2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   288d5:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   288d8:	7e 06                	jle    288e0 <__find_arguments+0x35a>
   288da:	8b 45 bc             	mov    -0x44(%rbp),%eax
   288dd:	89 45 b8             	mov    %eax,-0x48(%rbp)
   288e0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   288e4:	74 15                	je     288fb <__find_arguments+0x375>
   288e6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   288ea:	8b 45 bc             	mov    -0x44(%rbp),%eax
   288ed:	8d 50 01             	lea    0x1(%rax),%edx
   288f0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   288f3:	48 98                	cltq   
   288f5:	48 01 c8             	add    %rcx,%rax
   288f8:	c6 00 04             	movb   $0x4,(%rax)
   288fb:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   288ff:	0f 84 e8 18 00 00    	je     2a1ed <__find_arguments+0x1c67>
   28905:	8b 45 c8             	mov    -0x38(%rbp),%eax
   28908:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2890b:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   28910:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28914:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   28918:	e9 50 fd ff ff       	jmp    2866d <__find_arguments+0xe7>
   2891d:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28920:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28923:	7c 16                	jl     2893b <__find_arguments+0x3b5>
   28925:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28929:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2892d:	48 89 d6             	mov    %rdx,%rsi
   28930:	48 89 c7             	mov    %rax,%rdi
   28933:	e8 32 19 00 00       	call   2a26a <__grow_type_table>
   28938:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2893b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2893e:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28941:	7e 06                	jle    28949 <__find_arguments+0x3c3>
   28943:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28946:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28949:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2894d:	74 15                	je     28964 <__find_arguments+0x3de>
   2894f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28953:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28956:	8d 50 01             	lea    0x1(%rax),%edx
   28959:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2895c:	48 98                	cltq   
   2895e:	48 01 c8             	add    %rcx,%rax
   28961:	c6 00 04             	movb   $0x4,(%rax)
   28964:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28968:	0f 84 82 18 00 00    	je     2a1f0 <__find_arguments+0x1c6a>
   2896e:	e9 fa fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28973:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28977:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2897b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2897f:	0f b6 00             	movzbl (%rax),%eax
   28982:	0f be c0             	movsbl %al,%eax
   28985:	89 45 a8             	mov    %eax,-0x58(%rbp)
   28988:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2898b:	83 e8 30             	sub    $0x30,%eax
   2898e:	83 f8 09             	cmp    $0x9,%eax
   28991:	76 e0                	jbe    28973 <__find_arguments+0x3ed>
   28993:	e9 ea fc ff ff       	jmp    28682 <__find_arguments+0xfc>
   28998:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
   2899f:	81 7d ac cc cc cc 0c 	cmpl   $0xccccccc,-0x54(%rbp)
   289a6:	0f 8f 47 18 00 00    	jg     2a1f3 <__find_arguments+0x1c6d>
   289ac:	8b 55 ac             	mov    -0x54(%rbp),%edx
   289af:	89 d0                	mov    %edx,%eax
   289b1:	c1 e0 02             	shl    $0x2,%eax
   289b4:	01 d0                	add    %edx,%eax
   289b6:	01 c0                	add    %eax,%eax
   289b8:	89 45 ac             	mov    %eax,-0x54(%rbp)
   289bb:	b8 30 00 00 00       	mov    $0x30,%eax
   289c0:	2b 45 a8             	sub    -0x58(%rbp),%eax
   289c3:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   289c8:	39 45 ac             	cmp    %eax,-0x54(%rbp)
   289cb:	0f 8f 25 18 00 00    	jg     2a1f6 <__find_arguments+0x1c70>
   289d1:	8b 55 a8             	mov    -0x58(%rbp),%edx
   289d4:	8b 45 ac             	mov    -0x54(%rbp),%eax
   289d7:	01 d0                	add    %edx,%eax
   289d9:	83 e8 30             	sub    $0x30,%eax
   289dc:	89 45 ac             	mov    %eax,-0x54(%rbp)
   289df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   289e3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   289e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   289eb:	0f b6 00             	movzbl (%rax),%eax
   289ee:	0f be c0             	movsbl %al,%eax
   289f1:	89 45 a8             	mov    %eax,-0x58(%rbp)
   289f4:	8b 45 a8             	mov    -0x58(%rbp),%eax
   289f7:	83 e8 30             	sub    $0x30,%eax
   289fa:	83 f8 09             	cmp    $0x9,%eax
   289fd:	76 a0                	jbe    2899f <__find_arguments+0x419>
   289ff:	83 7d a8 24          	cmpl   $0x24,-0x58(%rbp)
   28a03:	0f 85 79 fc ff ff    	jne    28682 <__find_arguments+0xfc>
   28a09:	8b 45 ac             	mov    -0x54(%rbp),%eax
   28a0c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   28a0f:	e9 59 fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a14:	83 4d b4 08          	orl    $0x8,-0x4c(%rbp)
   28a18:	e9 50 fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28a21:	0f b6 00             	movzbl (%rax),%eax
   28a24:	3c 68                	cmp    $0x68,%al
   28a26:	75 11                	jne    28a39 <__find_arguments+0x4b3>
   28a28:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   28a2d:	81 4d b4 00 08 00 00 	orl    $0x800,-0x4c(%rbp)
   28a34:	e9 34 fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a39:	83 4d b4 40          	orl    $0x40,-0x4c(%rbp)
   28a3d:	e9 2b fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a42:	81 4d b4 00 10 00 00 	orl    $0x1000,-0x4c(%rbp)
   28a49:	e9 1f fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28a52:	0f b6 00             	movzbl (%rax),%eax
   28a55:	3c 6c                	cmp    $0x6c,%al
   28a57:	75 0e                	jne    28a67 <__find_arguments+0x4e1>
   28a59:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   28a5e:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   28a62:	e9 06 fc ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a67:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   28a6b:	e9 fd fb ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a70:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   28a74:	e9 f4 fb ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a79:	81 4d b4 00 02 00 00 	orl    $0x200,-0x4c(%rbp)
   28a80:	e9 e8 fb ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a85:	81 4d b4 00 04 00 00 	orl    $0x400,-0x4c(%rbp)
   28a8c:	e9 dc fb ff ff       	jmp    2866d <__find_arguments+0xe7>
   28a91:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28a94:	83 e0 10             	and    $0x10,%eax
   28a97:	85 c0                	test   %eax,%eax
   28a99:	74 47                	je     28ae2 <__find_arguments+0x55c>
   28a9b:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28a9e:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28aa1:	7c 16                	jl     28ab9 <__find_arguments+0x533>
   28aa3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28aa7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28aab:	48 89 d6             	mov    %rdx,%rsi
   28aae:	48 89 c7             	mov    %rax,%rdi
   28ab1:	e8 b4 17 00 00       	call   2a26a <__grow_type_table>
   28ab6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28ab9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28abc:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28abf:	7e 06                	jle    28ac7 <__find_arguments+0x541>
   28ac1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ac4:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28ac7:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28acb:	74 15                	je     28ae2 <__find_arguments+0x55c>
   28acd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28ad1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ad4:	8d 50 01             	lea    0x1(%rax),%edx
   28ad7:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28ada:	48 98                	cltq   
   28adc:	48 01 c8             	add    %rcx,%rax
   28adf:	c6 00 1b             	movb   $0x1b,(%rax)
   28ae2:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28ae6:	0f 84 0d 17 00 00    	je     2a1f9 <__find_arguments+0x1c73>
   28aec:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28aef:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28af2:	7c 16                	jl     28b0a <__find_arguments+0x584>
   28af4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28af8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28afc:	48 89 d6             	mov    %rdx,%rsi
   28aff:	48 89 c7             	mov    %rax,%rdi
   28b02:	e8 63 17 00 00       	call   2a26a <__grow_type_table>
   28b07:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28b0a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b0d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28b10:	7e 06                	jle    28b18 <__find_arguments+0x592>
   28b12:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b15:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28b18:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28b1c:	74 15                	je     28b33 <__find_arguments+0x5ad>
   28b1e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28b22:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b25:	8d 50 01             	lea    0x1(%rax),%edx
   28b28:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28b2b:	48 98                	cltq   
   28b2d:	48 01 c8             	add    %rcx,%rax
   28b30:	c6 00 04             	movb   $0x4,(%rax)
   28b33:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28b37:	0f 85 b2 0c 00 00    	jne    297ef <__find_arguments+0x1269>
   28b3d:	e9 d3 16 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   28b42:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   28b46:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28b49:	25 00 10 00 00       	and    $0x1000,%eax
   28b4e:	85 c0                	test   %eax,%eax
   28b50:	74 50                	je     28ba2 <__find_arguments+0x61c>
   28b52:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28b55:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28b58:	7c 16                	jl     28b70 <__find_arguments+0x5ea>
   28b5a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28b5e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28b62:	48 89 d6             	mov    %rdx,%rsi
   28b65:	48 89 c7             	mov    %rax,%rdi
   28b68:	e8 fd 16 00 00       	call   2a26a <__grow_type_table>
   28b6d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28b70:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b73:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28b76:	7e 06                	jle    28b7e <__find_arguments+0x5f8>
   28b78:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b7b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28b7e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28b82:	0f 84 7c 02 00 00    	je     28e04 <__find_arguments+0x87e>
   28b88:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28b8c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28b8f:	8d 50 01             	lea    0x1(%rax),%edx
   28b92:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28b95:	48 98                	cltq   
   28b97:	48 01 c8             	add    %rcx,%rax
   28b9a:	c6 00 16             	movb   $0x16,(%rax)
   28b9d:	e9 62 02 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28ba2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28ba5:	25 00 02 00 00       	and    $0x200,%eax
   28baa:	85 c0                	test   %eax,%eax
   28bac:	74 50                	je     28bfe <__find_arguments+0x678>
   28bae:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28bb1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28bb4:	7c 16                	jl     28bcc <__find_arguments+0x646>
   28bb6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28bba:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28bbe:	48 89 d6             	mov    %rdx,%rsi
   28bc1:	48 89 c7             	mov    %rax,%rdi
   28bc4:	e8 a1 16 00 00       	call   2a26a <__grow_type_table>
   28bc9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28bcc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28bcf:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28bd2:	7e 06                	jle    28bda <__find_arguments+0x654>
   28bd4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28bd7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28bda:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28bde:	0f 84 20 02 00 00    	je     28e04 <__find_arguments+0x87e>
   28be4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28be8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28beb:	8d 50 01             	lea    0x1(%rax),%edx
   28bee:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28bf1:	48 98                	cltq   
   28bf3:	48 01 c8             	add    %rcx,%rax
   28bf6:	c6 00 11             	movb   $0x11,(%rax)
   28bf9:	e9 06 02 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28bfe:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28c01:	25 00 04 00 00       	and    $0x400,%eax
   28c06:	85 c0                	test   %eax,%eax
   28c08:	74 50                	je     28c5a <__find_arguments+0x6d4>
   28c0a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28c0d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28c10:	7c 16                	jl     28c28 <__find_arguments+0x6a2>
   28c12:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28c16:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28c1a:	48 89 d6             	mov    %rdx,%rsi
   28c1d:	48 89 c7             	mov    %rax,%rdi
   28c20:	e8 45 16 00 00       	call   2a26a <__grow_type_table>
   28c25:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28c28:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28c2b:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28c2e:	7e 06                	jle    28c36 <__find_arguments+0x6b0>
   28c30:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28c33:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28c36:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28c3a:	0f 84 c4 01 00 00    	je     28e04 <__find_arguments+0x87e>
   28c40:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28c44:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28c47:	8d 50 01             	lea    0x1(%rax),%edx
   28c4a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28c4d:	48 98                	cltq   
   28c4f:	48 01 c8             	add    %rcx,%rax
   28c52:	c6 00 14             	movb   $0x14,(%rax)
   28c55:	e9 aa 01 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28c5a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28c5d:	83 e0 20             	and    $0x20,%eax
   28c60:	85 c0                	test   %eax,%eax
   28c62:	74 50                	je     28cb4 <__find_arguments+0x72e>
   28c64:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28c67:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28c6a:	7c 16                	jl     28c82 <__find_arguments+0x6fc>
   28c6c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28c70:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28c74:	48 89 d6             	mov    %rdx,%rsi
   28c77:	48 89 c7             	mov    %rax,%rdi
   28c7a:	e8 eb 15 00 00       	call   2a26a <__grow_type_table>
   28c7f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28c82:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28c85:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28c88:	7e 06                	jle    28c90 <__find_arguments+0x70a>
   28c8a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28c8d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28c90:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28c94:	0f 84 6a 01 00 00    	je     28e04 <__find_arguments+0x87e>
   28c9a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28c9e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ca1:	8d 50 01             	lea    0x1(%rax),%edx
   28ca4:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28ca7:	48 98                	cltq   
   28ca9:	48 01 c8             	add    %rcx,%rax
   28cac:	c6 00 0a             	movb   $0xa,(%rax)
   28caf:	e9 50 01 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28cb4:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28cb7:	83 e0 10             	and    $0x10,%eax
   28cba:	85 c0                	test   %eax,%eax
   28cbc:	74 50                	je     28d0e <__find_arguments+0x788>
   28cbe:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28cc1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28cc4:	7c 16                	jl     28cdc <__find_arguments+0x756>
   28cc6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28cca:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28cce:	48 89 d6             	mov    %rdx,%rsi
   28cd1:	48 89 c7             	mov    %rax,%rdi
   28cd4:	e8 91 15 00 00       	call   2a26a <__grow_type_table>
   28cd9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28cdc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28cdf:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28ce2:	7e 06                	jle    28cea <__find_arguments+0x764>
   28ce4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ce7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28cea:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28cee:	0f 84 10 01 00 00    	je     28e04 <__find_arguments+0x87e>
   28cf4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28cf8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28cfb:	8d 50 01             	lea    0x1(%rax),%edx
   28cfe:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28d01:	48 98                	cltq   
   28d03:	48 01 c8             	add    %rcx,%rax
   28d06:	c6 00 07             	movb   $0x7,(%rax)
   28d09:	e9 f6 00 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28d0e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28d11:	83 e0 40             	and    $0x40,%eax
   28d14:	85 c0                	test   %eax,%eax
   28d16:	74 50                	je     28d68 <__find_arguments+0x7e2>
   28d18:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28d1b:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28d1e:	7c 16                	jl     28d36 <__find_arguments+0x7b0>
   28d20:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28d24:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28d28:	48 89 d6             	mov    %rdx,%rsi
   28d2b:	48 89 c7             	mov    %rax,%rdi
   28d2e:	e8 37 15 00 00       	call   2a26a <__grow_type_table>
   28d33:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28d36:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28d39:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28d3c:	7e 06                	jle    28d44 <__find_arguments+0x7be>
   28d3e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28d41:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28d44:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28d48:	0f 84 b6 00 00 00    	je     28e04 <__find_arguments+0x87e>
   28d4e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28d52:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28d55:	8d 50 01             	lea    0x1(%rax),%edx
   28d58:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28d5b:	48 98                	cltq   
   28d5d:	48 01 c8             	add    %rcx,%rax
   28d60:	c6 00 01             	movb   $0x1,(%rax)
   28d63:	e9 9c 00 00 00       	jmp    28e04 <__find_arguments+0x87e>
   28d68:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28d6b:	25 00 08 00 00       	and    $0x800,%eax
   28d70:	85 c0                	test   %eax,%eax
   28d72:	74 49                	je     28dbd <__find_arguments+0x837>
   28d74:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28d77:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28d7a:	7c 16                	jl     28d92 <__find_arguments+0x80c>
   28d7c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28d80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28d84:	48 89 d6             	mov    %rdx,%rsi
   28d87:	48 89 c7             	mov    %rax,%rdi
   28d8a:	e8 db 14 00 00       	call   2a26a <__grow_type_table>
   28d8f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28d92:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28d95:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28d98:	7e 06                	jle    28da0 <__find_arguments+0x81a>
   28d9a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28d9d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28da0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28da4:	74 5e                	je     28e04 <__find_arguments+0x87e>
   28da6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28daa:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28dad:	8d 50 01             	lea    0x1(%rax),%edx
   28db0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28db3:	48 98                	cltq   
   28db5:	48 01 c8             	add    %rcx,%rax
   28db8:	c6 00 19             	movb   $0x19,(%rax)
   28dbb:	eb 47                	jmp    28e04 <__find_arguments+0x87e>
   28dbd:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28dc0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28dc3:	7c 16                	jl     28ddb <__find_arguments+0x855>
   28dc5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28dc9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28dcd:	48 89 d6             	mov    %rdx,%rsi
   28dd0:	48 89 c7             	mov    %rax,%rdi
   28dd3:	e8 92 14 00 00       	call   2a26a <__grow_type_table>
   28dd8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28ddb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28dde:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28de1:	7e 06                	jle    28de9 <__find_arguments+0x863>
   28de3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28de6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28de9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28ded:	74 15                	je     28e04 <__find_arguments+0x87e>
   28def:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28df3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28df6:	8d 50 01             	lea    0x1(%rax),%edx
   28df9:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28dfc:	48 98                	cltq   
   28dfe:	48 01 c8             	add    %rcx,%rax
   28e01:	c6 00 04             	movb   $0x4,(%rax)
   28e04:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28e08:	0f 85 e7 09 00 00    	jne    297f5 <__find_arguments+0x126f>
   28e0e:	e9 02 14 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   28e13:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28e16:	83 e0 08             	and    $0x8,%eax
   28e19:	85 c0                	test   %eax,%eax
   28e1b:	74 47                	je     28e64 <__find_arguments+0x8de>
   28e1d:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28e20:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28e23:	7c 16                	jl     28e3b <__find_arguments+0x8b5>
   28e25:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28e29:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28e2d:	48 89 d6             	mov    %rdx,%rsi
   28e30:	48 89 c7             	mov    %rax,%rdi
   28e33:	e8 32 14 00 00       	call   2a26a <__grow_type_table>
   28e38:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28e3b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28e3e:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28e41:	7e 06                	jle    28e49 <__find_arguments+0x8c3>
   28e43:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28e46:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28e49:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28e4d:	74 15                	je     28e64 <__find_arguments+0x8de>
   28e4f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28e53:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28e56:	8d 50 01             	lea    0x1(%rax),%edx
   28e59:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28e5c:	48 98                	cltq   
   28e5e:	48 01 c8             	add    %rcx,%rax
   28e61:	c6 00 0e             	movb   $0xe,(%rax)
   28e64:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28e68:	0f 84 8e 13 00 00    	je     2a1fc <__find_arguments+0x1c76>
   28e6e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28e71:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28e74:	7c 16                	jl     28e8c <__find_arguments+0x906>
   28e76:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28e7a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28e7e:	48 89 d6             	mov    %rdx,%rsi
   28e81:	48 89 c7             	mov    %rax,%rdi
   28e84:	e8 e1 13 00 00       	call   2a26a <__grow_type_table>
   28e89:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28e8c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28e8f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28e92:	7e 06                	jle    28e9a <__find_arguments+0x914>
   28e94:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28e97:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28e9a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28e9e:	74 15                	je     28eb5 <__find_arguments+0x92f>
   28ea0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28ea4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ea7:	8d 50 01             	lea    0x1(%rax),%edx
   28eaa:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28ead:	48 98                	cltq   
   28eaf:	48 01 c8             	add    %rcx,%rax
   28eb2:	c6 00 0d             	movb   $0xd,(%rax)
   28eb5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28eb9:	0f 85 3c 09 00 00    	jne    297fb <__find_arguments+0x1275>
   28ebf:	e9 51 13 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   28ec4:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28ec7:	83 e0 20             	and    $0x20,%eax
   28eca:	85 c0                	test   %eax,%eax
   28ecc:	74 47                	je     28f15 <__find_arguments+0x98f>
   28ece:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28ed1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28ed4:	7c 16                	jl     28eec <__find_arguments+0x966>
   28ed6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28eda:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28ede:	48 89 d6             	mov    %rdx,%rsi
   28ee1:	48 89 c7             	mov    %rax,%rdi
   28ee4:	e8 81 13 00 00       	call   2a26a <__grow_type_table>
   28ee9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28eec:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28eef:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28ef2:	7e 06                	jle    28efa <__find_arguments+0x974>
   28ef4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28ef7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28efa:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28efe:	74 15                	je     28f15 <__find_arguments+0x98f>
   28f00:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28f04:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28f07:	8d 50 01             	lea    0x1(%rax),%edx
   28f0a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28f0d:	48 98                	cltq   
   28f0f:	48 01 c8             	add    %rcx,%rax
   28f12:	c6 00 0c             	movb   $0xc,(%rax)
   28f15:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28f19:	0f 84 e0 12 00 00    	je     2a1ff <__find_arguments+0x1c79>
   28f1f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28f22:	83 e0 10             	and    $0x10,%eax
   28f25:	85 c0                	test   %eax,%eax
   28f27:	74 47                	je     28f70 <__find_arguments+0x9ea>
   28f29:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28f2c:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28f2f:	7c 16                	jl     28f47 <__find_arguments+0x9c1>
   28f31:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28f35:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28f39:	48 89 d6             	mov    %rdx,%rsi
   28f3c:	48 89 c7             	mov    %rax,%rdi
   28f3f:	e8 26 13 00 00       	call   2a26a <__grow_type_table>
   28f44:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28f47:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28f4a:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28f4d:	7e 06                	jle    28f55 <__find_arguments+0x9cf>
   28f4f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28f52:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28f55:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28f59:	74 15                	je     28f70 <__find_arguments+0x9ea>
   28f5b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28f5f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28f62:	8d 50 01             	lea    0x1(%rax),%edx
   28f65:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28f68:	48 98                	cltq   
   28f6a:	48 01 c8             	add    %rcx,%rax
   28f6d:	c6 00 09             	movb   $0x9,(%rax)
   28f70:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28f74:	0f 84 88 12 00 00    	je     2a202 <__find_arguments+0x1c7c>
   28f7a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28f7d:	83 e0 40             	and    $0x40,%eax
   28f80:	85 c0                	test   %eax,%eax
   28f82:	74 47                	je     28fcb <__find_arguments+0xa45>
   28f84:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28f87:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28f8a:	7c 16                	jl     28fa2 <__find_arguments+0xa1c>
   28f8c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28f90:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28f94:	48 89 d6             	mov    %rdx,%rsi
   28f97:	48 89 c7             	mov    %rax,%rdi
   28f9a:	e8 cb 12 00 00       	call   2a26a <__grow_type_table>
   28f9f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28fa2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28fa5:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   28fa8:	7e 06                	jle    28fb0 <__find_arguments+0xa2a>
   28faa:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28fad:	89 45 b8             	mov    %eax,-0x48(%rbp)
   28fb0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28fb4:	74 15                	je     28fcb <__find_arguments+0xa45>
   28fb6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   28fba:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28fbd:	8d 50 01             	lea    0x1(%rax),%edx
   28fc0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   28fc3:	48 98                	cltq   
   28fc5:	48 01 c8             	add    %rcx,%rax
   28fc8:	c6 00 03             	movb   $0x3,(%rax)
   28fcb:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   28fcf:	0f 84 30 12 00 00    	je     2a205 <__find_arguments+0x1c7f>
   28fd5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   28fd8:	25 00 02 00 00       	and    $0x200,%eax
   28fdd:	85 c0                	test   %eax,%eax
   28fdf:	74 47                	je     29028 <__find_arguments+0xaa2>
   28fe1:	8b 45 a0             	mov    -0x60(%rbp),%eax
   28fe4:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   28fe7:	7c 16                	jl     28fff <__find_arguments+0xa79>
   28fe9:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   28fed:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   28ff1:	48 89 d6             	mov    %rdx,%rsi
   28ff4:	48 89 c7             	mov    %rax,%rdi
   28ff7:	e8 6e 12 00 00       	call   2a26a <__grow_type_table>
   28ffc:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28fff:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29002:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29005:	7e 06                	jle    2900d <__find_arguments+0xa87>
   29007:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2900a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2900d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29011:	74 15                	je     29028 <__find_arguments+0xaa2>
   29013:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29017:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2901a:	8d 50 01             	lea    0x1(%rax),%edx
   2901d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29020:	48 98                	cltq   
   29022:	48 01 c8             	add    %rcx,%rax
   29025:	c6 00 12             	movb   $0x12,(%rax)
   29028:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2902c:	0f 84 d6 11 00 00    	je     2a208 <__find_arguments+0x1c82>
   29032:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29035:	25 00 04 00 00       	and    $0x400,%eax
   2903a:	85 c0                	test   %eax,%eax
   2903c:	74 47                	je     29085 <__find_arguments+0xaff>
   2903e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29041:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29044:	7c 16                	jl     2905c <__find_arguments+0xad6>
   29046:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2904a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2904e:	48 89 d6             	mov    %rdx,%rsi
   29051:	48 89 c7             	mov    %rax,%rdi
   29054:	e8 11 12 00 00       	call   2a26a <__grow_type_table>
   29059:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2905c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2905f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29062:	7e 06                	jle    2906a <__find_arguments+0xae4>
   29064:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29067:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2906a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2906e:	74 15                	je     29085 <__find_arguments+0xaff>
   29070:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29074:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29077:	8d 50 01             	lea    0x1(%rax),%edx
   2907a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2907d:	48 98                	cltq   
   2907f:	48 01 c8             	add    %rcx,%rax
   29082:	c6 00 15             	movb   $0x15,(%rax)
   29085:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29089:	0f 84 7c 11 00 00    	je     2a20b <__find_arguments+0x1c85>
   2908f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29092:	25 00 10 00 00       	and    $0x1000,%eax
   29097:	85 c0                	test   %eax,%eax
   29099:	74 47                	je     290e2 <__find_arguments+0xb5c>
   2909b:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2909e:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   290a1:	7c 16                	jl     290b9 <__find_arguments+0xb33>
   290a3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   290a7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   290ab:	48 89 d6             	mov    %rdx,%rsi
   290ae:	48 89 c7             	mov    %rax,%rdi
   290b1:	e8 b4 11 00 00       	call   2a26a <__grow_type_table>
   290b6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   290b9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   290bc:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   290bf:	7e 06                	jle    290c7 <__find_arguments+0xb41>
   290c1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   290c4:	89 45 b8             	mov    %eax,-0x48(%rbp)
   290c7:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   290cb:	74 15                	je     290e2 <__find_arguments+0xb5c>
   290cd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   290d1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   290d4:	8d 50 01             	lea    0x1(%rax),%edx
   290d7:	89 55 bc             	mov    %edx,-0x44(%rbp)
   290da:	48 98                	cltq   
   290dc:	48 01 c8             	add    %rcx,%rax
   290df:	c6 00 18             	movb   $0x18,(%rax)
   290e2:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   290e6:	0f 84 22 11 00 00    	je     2a20e <__find_arguments+0x1c88>
   290ec:	8b 45 a0             	mov    -0x60(%rbp),%eax
   290ef:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   290f2:	7c 16                	jl     2910a <__find_arguments+0xb84>
   290f4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   290f8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   290fc:	48 89 d6             	mov    %rdx,%rsi
   290ff:	48 89 c7             	mov    %rax,%rdi
   29102:	e8 63 11 00 00       	call   2a26a <__grow_type_table>
   29107:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2910a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2910d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29110:	7e 06                	jle    29118 <__find_arguments+0xb92>
   29112:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29115:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29118:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2911c:	74 15                	je     29133 <__find_arguments+0xbad>
   2911e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29122:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29125:	8d 50 01             	lea    0x1(%rax),%edx
   29128:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2912b:	48 98                	cltq   
   2912d:	48 01 c8             	add    %rcx,%rax
   29130:	c6 00 06             	movb   $0x6,(%rax)
   29133:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29137:	0f 85 c4 06 00 00    	jne    29801 <__find_arguments+0x127b>
   2913d:	e9 d3 10 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   29142:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   29146:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29149:	25 00 10 00 00       	and    $0x1000,%eax
   2914e:	85 c0                	test   %eax,%eax
   29150:	74 50                	je     291a2 <__find_arguments+0xc1c>
   29152:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29155:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29158:	7c 16                	jl     29170 <__find_arguments+0xbea>
   2915a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2915e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29162:	48 89 d6             	mov    %rdx,%rsi
   29165:	48 89 c7             	mov    %rax,%rdi
   29168:	e8 fd 10 00 00       	call   2a26a <__grow_type_table>
   2916d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29170:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29173:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29176:	7e 06                	jle    2917e <__find_arguments+0xbf8>
   29178:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2917b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2917e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29182:	0f 84 7c 02 00 00    	je     29404 <__find_arguments+0xe7e>
   29188:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2918c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2918f:	8d 50 01             	lea    0x1(%rax),%edx
   29192:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29195:	48 98                	cltq   
   29197:	48 01 c8             	add    %rcx,%rax
   2919a:	c6 00 17             	movb   $0x17,(%rax)
   2919d:	e9 62 02 00 00       	jmp    29404 <__find_arguments+0xe7e>
   291a2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   291a5:	25 00 02 00 00       	and    $0x200,%eax
   291aa:	85 c0                	test   %eax,%eax
   291ac:	74 50                	je     291fe <__find_arguments+0xc78>
   291ae:	8b 45 a0             	mov    -0x60(%rbp),%eax
   291b1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   291b4:	7c 16                	jl     291cc <__find_arguments+0xc46>
   291b6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   291ba:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   291be:	48 89 d6             	mov    %rdx,%rsi
   291c1:	48 89 c7             	mov    %rax,%rdi
   291c4:	e8 a1 10 00 00       	call   2a26a <__grow_type_table>
   291c9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   291cc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   291cf:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   291d2:	7e 06                	jle    291da <__find_arguments+0xc54>
   291d4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   291d7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   291da:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   291de:	0f 84 20 02 00 00    	je     29404 <__find_arguments+0xe7e>
   291e4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   291e8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   291eb:	8d 50 01             	lea    0x1(%rax),%edx
   291ee:	89 55 bc             	mov    %edx,-0x44(%rbp)
   291f1:	48 98                	cltq   
   291f3:	48 01 c8             	add    %rcx,%rax
   291f6:	c6 00 11             	movb   $0x11,(%rax)
   291f9:	e9 06 02 00 00       	jmp    29404 <__find_arguments+0xe7e>
   291fe:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29201:	25 00 04 00 00       	and    $0x400,%eax
   29206:	85 c0                	test   %eax,%eax
   29208:	74 50                	je     2925a <__find_arguments+0xcd4>
   2920a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2920d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29210:	7c 16                	jl     29228 <__find_arguments+0xca2>
   29212:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29216:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2921a:	48 89 d6             	mov    %rdx,%rsi
   2921d:	48 89 c7             	mov    %rax,%rdi
   29220:	e8 45 10 00 00       	call   2a26a <__grow_type_table>
   29225:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29228:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2922b:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2922e:	7e 06                	jle    29236 <__find_arguments+0xcb0>
   29230:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29233:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29236:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2923a:	0f 84 c4 01 00 00    	je     29404 <__find_arguments+0xe7e>
   29240:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29244:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29247:	8d 50 01             	lea    0x1(%rax),%edx
   2924a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2924d:	48 98                	cltq   
   2924f:	48 01 c8             	add    %rcx,%rax
   29252:	c6 00 13             	movb   $0x13,(%rax)
   29255:	e9 aa 01 00 00       	jmp    29404 <__find_arguments+0xe7e>
   2925a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2925d:	83 e0 20             	and    $0x20,%eax
   29260:	85 c0                	test   %eax,%eax
   29262:	74 50                	je     292b4 <__find_arguments+0xd2e>
   29264:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29267:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2926a:	7c 16                	jl     29282 <__find_arguments+0xcfc>
   2926c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29270:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29274:	48 89 d6             	mov    %rdx,%rsi
   29277:	48 89 c7             	mov    %rax,%rdi
   2927a:	e8 eb 0f 00 00       	call   2a26a <__grow_type_table>
   2927f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29282:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29285:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29288:	7e 06                	jle    29290 <__find_arguments+0xd0a>
   2928a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2928d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29290:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29294:	0f 84 6a 01 00 00    	je     29404 <__find_arguments+0xe7e>
   2929a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2929e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   292a1:	8d 50 01             	lea    0x1(%rax),%edx
   292a4:	89 55 bc             	mov    %edx,-0x44(%rbp)
   292a7:	48 98                	cltq   
   292a9:	48 01 c8             	add    %rcx,%rax
   292ac:	c6 00 0b             	movb   $0xb,(%rax)
   292af:	e9 50 01 00 00       	jmp    29404 <__find_arguments+0xe7e>
   292b4:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   292b7:	83 e0 10             	and    $0x10,%eax
   292ba:	85 c0                	test   %eax,%eax
   292bc:	74 50                	je     2930e <__find_arguments+0xd88>
   292be:	8b 45 a0             	mov    -0x60(%rbp),%eax
   292c1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   292c4:	7c 16                	jl     292dc <__find_arguments+0xd56>
   292c6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   292ca:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   292ce:	48 89 d6             	mov    %rdx,%rsi
   292d1:	48 89 c7             	mov    %rax,%rdi
   292d4:	e8 91 0f 00 00       	call   2a26a <__grow_type_table>
   292d9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   292dc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   292df:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   292e2:	7e 06                	jle    292ea <__find_arguments+0xd64>
   292e4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   292e7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   292ea:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   292ee:	0f 84 10 01 00 00    	je     29404 <__find_arguments+0xe7e>
   292f4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   292f8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   292fb:	8d 50 01             	lea    0x1(%rax),%edx
   292fe:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29301:	48 98                	cltq   
   29303:	48 01 c8             	add    %rcx,%rax
   29306:	c6 00 08             	movb   $0x8,(%rax)
   29309:	e9 f6 00 00 00       	jmp    29404 <__find_arguments+0xe7e>
   2930e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29311:	83 e0 40             	and    $0x40,%eax
   29314:	85 c0                	test   %eax,%eax
   29316:	74 50                	je     29368 <__find_arguments+0xde2>
   29318:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2931b:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2931e:	7c 16                	jl     29336 <__find_arguments+0xdb0>
   29320:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29324:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29328:	48 89 d6             	mov    %rdx,%rsi
   2932b:	48 89 c7             	mov    %rax,%rdi
   2932e:	e8 37 0f 00 00       	call   2a26a <__grow_type_table>
   29333:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29336:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29339:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2933c:	7e 06                	jle    29344 <__find_arguments+0xdbe>
   2933e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29341:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29344:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29348:	0f 84 b6 00 00 00    	je     29404 <__find_arguments+0xe7e>
   2934e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29352:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29355:	8d 50 01             	lea    0x1(%rax),%edx
   29358:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2935b:	48 98                	cltq   
   2935d:	48 01 c8             	add    %rcx,%rax
   29360:	c6 00 02             	movb   $0x2,(%rax)
   29363:	e9 9c 00 00 00       	jmp    29404 <__find_arguments+0xe7e>
   29368:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2936b:	25 00 08 00 00       	and    $0x800,%eax
   29370:	85 c0                	test   %eax,%eax
   29372:	74 49                	je     293bd <__find_arguments+0xe37>
   29374:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29377:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2937a:	7c 16                	jl     29392 <__find_arguments+0xe0c>
   2937c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29380:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29384:	48 89 d6             	mov    %rdx,%rsi
   29387:	48 89 c7             	mov    %rax,%rdi
   2938a:	e8 db 0e 00 00       	call   2a26a <__grow_type_table>
   2938f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29392:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29395:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29398:	7e 06                	jle    293a0 <__find_arguments+0xe1a>
   2939a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2939d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   293a0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   293a4:	74 5e                	je     29404 <__find_arguments+0xe7e>
   293a6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   293aa:	8b 45 bc             	mov    -0x44(%rbp),%eax
   293ad:	8d 50 01             	lea    0x1(%rax),%edx
   293b0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   293b3:	48 98                	cltq   
   293b5:	48 01 c8             	add    %rcx,%rax
   293b8:	c6 00 1a             	movb   $0x1a,(%rax)
   293bb:	eb 47                	jmp    29404 <__find_arguments+0xe7e>
   293bd:	8b 45 a0             	mov    -0x60(%rbp),%eax
   293c0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   293c3:	7c 16                	jl     293db <__find_arguments+0xe55>
   293c5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   293c9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   293cd:	48 89 d6             	mov    %rdx,%rsi
   293d0:	48 89 c7             	mov    %rax,%rdi
   293d3:	e8 92 0e 00 00       	call   2a26a <__grow_type_table>
   293d8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   293db:	8b 45 bc             	mov    -0x44(%rbp),%eax
   293de:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   293e1:	7e 06                	jle    293e9 <__find_arguments+0xe63>
   293e3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   293e6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   293e9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   293ed:	74 15                	je     29404 <__find_arguments+0xe7e>
   293ef:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   293f3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   293f6:	8d 50 01             	lea    0x1(%rax),%edx
   293f9:	89 55 bc             	mov    %edx,-0x44(%rbp)
   293fc:	48 98                	cltq   
   293fe:	48 01 c8             	add    %rcx,%rax
   29401:	c6 00 05             	movb   $0x5,(%rax)
   29404:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29408:	0f 85 f9 03 00 00    	jne    29807 <__find_arguments+0x1281>
   2940e:	e9 02 0e 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   29413:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29416:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29419:	7c 16                	jl     29431 <__find_arguments+0xeab>
   2941b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2941f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29423:	48 89 d6             	mov    %rdx,%rsi
   29426:	48 89 c7             	mov    %rax,%rdi
   29429:	e8 3c 0e 00 00       	call   2a26a <__grow_type_table>
   2942e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29431:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29434:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29437:	7e 06                	jle    2943f <__find_arguments+0xeb9>
   29439:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2943c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2943f:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29443:	74 15                	je     2945a <__find_arguments+0xed4>
   29445:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29449:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2944c:	8d 50 01             	lea    0x1(%rax),%edx
   2944f:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29452:	48 98                	cltq   
   29454:	48 01 c8             	add    %rcx,%rax
   29457:	c6 00 10             	movb   $0x10,(%rax)
   2945a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2945e:	0f 85 a9 03 00 00    	jne    2980d <__find_arguments+0x1287>
   29464:	e9 ac 0d 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   29469:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2946c:	83 e0 10             	and    $0x10,%eax
   2946f:	85 c0                	test   %eax,%eax
   29471:	74 47                	je     294ba <__find_arguments+0xf34>
   29473:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29476:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29479:	7c 16                	jl     29491 <__find_arguments+0xf0b>
   2947b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2947f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29483:	48 89 d6             	mov    %rdx,%rsi
   29486:	48 89 c7             	mov    %rax,%rdi
   29489:	e8 dc 0d 00 00       	call   2a26a <__grow_type_table>
   2948e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29491:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29494:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29497:	7e 06                	jle    2949f <__find_arguments+0xf19>
   29499:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2949c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2949f:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   294a3:	74 15                	je     294ba <__find_arguments+0xf34>
   294a5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   294a9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   294ac:	8d 50 01             	lea    0x1(%rax),%edx
   294af:	89 55 bc             	mov    %edx,-0x44(%rbp)
   294b2:	48 98                	cltq   
   294b4:	48 01 c8             	add    %rcx,%rax
   294b7:	c6 00 1c             	movb   $0x1c,(%rax)
   294ba:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   294be:	0f 84 4d 0d 00 00    	je     2a211 <__find_arguments+0x1c8b>
   294c4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   294c7:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   294ca:	7c 16                	jl     294e2 <__find_arguments+0xf5c>
   294cc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   294d0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   294d4:	48 89 d6             	mov    %rdx,%rsi
   294d7:	48 89 c7             	mov    %rax,%rdi
   294da:	e8 8b 0d 00 00       	call   2a26a <__grow_type_table>
   294df:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   294e2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   294e5:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   294e8:	7e 06                	jle    294f0 <__find_arguments+0xf6a>
   294ea:	8b 45 bc             	mov    -0x44(%rbp),%eax
   294ed:	89 45 b8             	mov    %eax,-0x48(%rbp)
   294f0:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   294f4:	74 15                	je     2950b <__find_arguments+0xf85>
   294f6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   294fa:	8b 45 bc             	mov    -0x44(%rbp),%eax
   294fd:	8d 50 01             	lea    0x1(%rax),%edx
   29500:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29503:	48 98                	cltq   
   29505:	48 01 c8             	add    %rcx,%rax
   29508:	c6 00 0f             	movb   $0xf,(%rax)
   2950b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2950f:	0f 85 fe 02 00 00    	jne    29813 <__find_arguments+0x128d>
   29515:	e9 fb 0c 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   2951a:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   2951e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29521:	25 00 10 00 00       	and    $0x1000,%eax
   29526:	85 c0                	test   %eax,%eax
   29528:	74 50                	je     2957a <__find_arguments+0xff4>
   2952a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2952d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29530:	7c 16                	jl     29548 <__find_arguments+0xfc2>
   29532:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29536:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2953a:	48 89 d6             	mov    %rdx,%rsi
   2953d:	48 89 c7             	mov    %rax,%rdi
   29540:	e8 25 0d 00 00       	call   2a26a <__grow_type_table>
   29545:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29548:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2954b:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2954e:	7e 06                	jle    29556 <__find_arguments+0xfd0>
   29550:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29553:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29556:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2955a:	0f 84 7c 02 00 00    	je     297dc <__find_arguments+0x1256>
   29560:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29564:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29567:	8d 50 01             	lea    0x1(%rax),%edx
   2956a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2956d:	48 98                	cltq   
   2956f:	48 01 c8             	add    %rcx,%rax
   29572:	c6 00 17             	movb   $0x17,(%rax)
   29575:	e9 62 02 00 00       	jmp    297dc <__find_arguments+0x1256>
   2957a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2957d:	25 00 02 00 00       	and    $0x200,%eax
   29582:	85 c0                	test   %eax,%eax
   29584:	74 50                	je     295d6 <__find_arguments+0x1050>
   29586:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29589:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2958c:	7c 16                	jl     295a4 <__find_arguments+0x101e>
   2958e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29592:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29596:	48 89 d6             	mov    %rdx,%rsi
   29599:	48 89 c7             	mov    %rax,%rdi
   2959c:	e8 c9 0c 00 00       	call   2a26a <__grow_type_table>
   295a1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   295a4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   295a7:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   295aa:	7e 06                	jle    295b2 <__find_arguments+0x102c>
   295ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
   295af:	89 45 b8             	mov    %eax,-0x48(%rbp)
   295b2:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   295b6:	0f 84 20 02 00 00    	je     297dc <__find_arguments+0x1256>
   295bc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   295c0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   295c3:	8d 50 01             	lea    0x1(%rax),%edx
   295c6:	89 55 bc             	mov    %edx,-0x44(%rbp)
   295c9:	48 98                	cltq   
   295cb:	48 01 c8             	add    %rcx,%rax
   295ce:	c6 00 11             	movb   $0x11,(%rax)
   295d1:	e9 06 02 00 00       	jmp    297dc <__find_arguments+0x1256>
   295d6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   295d9:	25 00 04 00 00       	and    $0x400,%eax
   295de:	85 c0                	test   %eax,%eax
   295e0:	74 50                	je     29632 <__find_arguments+0x10ac>
   295e2:	8b 45 a0             	mov    -0x60(%rbp),%eax
   295e5:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   295e8:	7c 16                	jl     29600 <__find_arguments+0x107a>
   295ea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   295ee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   295f2:	48 89 d6             	mov    %rdx,%rsi
   295f5:	48 89 c7             	mov    %rax,%rdi
   295f8:	e8 6d 0c 00 00       	call   2a26a <__grow_type_table>
   295fd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   29600:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29603:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29606:	7e 06                	jle    2960e <__find_arguments+0x1088>
   29608:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2960b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2960e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29612:	0f 84 c4 01 00 00    	je     297dc <__find_arguments+0x1256>
   29618:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2961c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2961f:	8d 50 01             	lea    0x1(%rax),%edx
   29622:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29625:	48 98                	cltq   
   29627:	48 01 c8             	add    %rcx,%rax
   2962a:	c6 00 13             	movb   $0x13,(%rax)
   2962d:	e9 aa 01 00 00       	jmp    297dc <__find_arguments+0x1256>
   29632:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29635:	83 e0 20             	and    $0x20,%eax
   29638:	85 c0                	test   %eax,%eax
   2963a:	74 50                	je     2968c <__find_arguments+0x1106>
   2963c:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2963f:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29642:	7c 16                	jl     2965a <__find_arguments+0x10d4>
   29644:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29648:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2964c:	48 89 d6             	mov    %rdx,%rsi
   2964f:	48 89 c7             	mov    %rax,%rdi
   29652:	e8 13 0c 00 00       	call   2a26a <__grow_type_table>
   29657:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2965a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2965d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29660:	7e 06                	jle    29668 <__find_arguments+0x10e2>
   29662:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29665:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29668:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2966c:	0f 84 6a 01 00 00    	je     297dc <__find_arguments+0x1256>
   29672:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29676:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29679:	8d 50 01             	lea    0x1(%rax),%edx
   2967c:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2967f:	48 98                	cltq   
   29681:	48 01 c8             	add    %rcx,%rax
   29684:	c6 00 0b             	movb   $0xb,(%rax)
   29687:	e9 50 01 00 00       	jmp    297dc <__find_arguments+0x1256>
   2968c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2968f:	83 e0 10             	and    $0x10,%eax
   29692:	85 c0                	test   %eax,%eax
   29694:	74 50                	je     296e6 <__find_arguments+0x1160>
   29696:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29699:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2969c:	7c 16                	jl     296b4 <__find_arguments+0x112e>
   2969e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   296a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   296a6:	48 89 d6             	mov    %rdx,%rsi
   296a9:	48 89 c7             	mov    %rax,%rdi
   296ac:	e8 b9 0b 00 00       	call   2a26a <__grow_type_table>
   296b1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   296b4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   296b7:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   296ba:	7e 06                	jle    296c2 <__find_arguments+0x113c>
   296bc:	8b 45 bc             	mov    -0x44(%rbp),%eax
   296bf:	89 45 b8             	mov    %eax,-0x48(%rbp)
   296c2:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   296c6:	0f 84 10 01 00 00    	je     297dc <__find_arguments+0x1256>
   296cc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   296d0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   296d3:	8d 50 01             	lea    0x1(%rax),%edx
   296d6:	89 55 bc             	mov    %edx,-0x44(%rbp)
   296d9:	48 98                	cltq   
   296db:	48 01 c8             	add    %rcx,%rax
   296de:	c6 00 08             	movb   $0x8,(%rax)
   296e1:	e9 f6 00 00 00       	jmp    297dc <__find_arguments+0x1256>
   296e6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   296e9:	83 e0 40             	and    $0x40,%eax
   296ec:	85 c0                	test   %eax,%eax
   296ee:	74 50                	je     29740 <__find_arguments+0x11ba>
   296f0:	8b 45 a0             	mov    -0x60(%rbp),%eax
   296f3:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   296f6:	7c 16                	jl     2970e <__find_arguments+0x1188>
   296f8:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   296fc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   29700:	48 89 d6             	mov    %rdx,%rsi
   29703:	48 89 c7             	mov    %rax,%rdi
   29706:	e8 5f 0b 00 00       	call   2a26a <__grow_type_table>
   2970b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2970e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29711:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29714:	7e 06                	jle    2971c <__find_arguments+0x1196>
   29716:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29719:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2971c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   29720:	0f 84 b6 00 00 00    	je     297dc <__find_arguments+0x1256>
   29726:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2972a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2972d:	8d 50 01             	lea    0x1(%rax),%edx
   29730:	89 55 bc             	mov    %edx,-0x44(%rbp)
   29733:	48 98                	cltq   
   29735:	48 01 c8             	add    %rcx,%rax
   29738:	c6 00 02             	movb   $0x2,(%rax)
   2973b:	e9 9c 00 00 00       	jmp    297dc <__find_arguments+0x1256>
   29740:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   29743:	25 00 08 00 00       	and    $0x800,%eax
   29748:	85 c0                	test   %eax,%eax
   2974a:	74 49                	je     29795 <__find_arguments+0x120f>
   2974c:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2974f:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   29752:	7c 16                	jl     2976a <__find_arguments+0x11e4>
   29754:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   29758:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2975c:	48 89 d6             	mov    %rdx,%rsi
   2975f:	48 89 c7             	mov    %rax,%rdi
   29762:	e8 03 0b 00 00       	call   2a26a <__grow_type_table>
   29767:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2976a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2976d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   29770:	7e 06                	jle    29778 <__find_arguments+0x11f2>
   29772:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29775:	89 45 b8             	mov    %eax,-0x48(%rbp)
   29778:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2977c:	74 5e                	je     297dc <__find_arguments+0x1256>
   2977e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   29782:	8b 45 bc             	mov    -0x44(%rbp),%eax
   29785:	8d 50 01             	lea    0x1(%rax),%edx
   29788:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2978b:	48 98                	cltq   
   2978d:	48 01 c8             	add    %rcx,%rax
   29790:	c6 00 1a             	movb   $0x1a,(%rax)
   29793:	eb 47                	jmp    297dc <__find_arguments+0x1256>
   29795:	8b 45 a0             	mov    -0x60(%rbp),%eax
   29798:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2979b:	7c 16                	jl     297b3 <__find_arguments+0x122d>
   2979d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   297a1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   297a5:	48 89 d6             	mov    %rdx,%rsi
   297a8:	48 89 c7             	mov    %rax,%rdi
   297ab:	e8 ba 0a 00 00       	call   2a26a <__grow_type_table>
   297b0:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   297b3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   297b6:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   297b9:	7e 06                	jle    297c1 <__find_arguments+0x123b>
   297bb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   297be:	89 45 b8             	mov    %eax,-0x48(%rbp)
   297c1:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   297c5:	74 15                	je     297dc <__find_arguments+0x1256>
   297c7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   297cb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   297ce:	8d 50 01             	lea    0x1(%rax),%edx
   297d1:	89 55 bc             	mov    %edx,-0x44(%rbp)
   297d4:	48 98                	cltq   
   297d6:	48 01 c8             	add    %rcx,%rax
   297d9:	c6 00 05             	movb   $0x5,(%rax)
   297dc:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   297e0:	75 37                	jne    29819 <__find_arguments+0x1293>
   297e2:	e9 2e 0a 00 00       	jmp    2a215 <__find_arguments+0x1c8f>
   297e7:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
   297eb:	74 35                	je     29822 <__find_arguments+0x129c>
   297ed:	eb 2b                	jmp    2981a <__find_arguments+0x1294>
   297ef:	90                   	nop
   297f0:	e9 1b ee ff ff       	jmp    28610 <__find_arguments+0x8a>
   297f5:	90                   	nop
   297f6:	e9 15 ee ff ff       	jmp    28610 <__find_arguments+0x8a>
   297fb:	90                   	nop
   297fc:	e9 0f ee ff ff       	jmp    28610 <__find_arguments+0x8a>
   29801:	90                   	nop
   29802:	e9 09 ee ff ff       	jmp    28610 <__find_arguments+0x8a>
   29807:	90                   	nop
   29808:	e9 03 ee ff ff       	jmp    28610 <__find_arguments+0x8a>
   2980d:	90                   	nop
   2980e:	e9 fd ed ff ff       	jmp    28610 <__find_arguments+0x8a>
   29813:	90                   	nop
   29814:	e9 f7 ed ff ff       	jmp    28610 <__find_arguments+0x8a>
   29819:	90                   	nop
   2981a:	e9 f1 ed ff ff       	jmp    28610 <__find_arguments+0x8a>
   2981f:	90                   	nop
   29820:	eb 01                	jmp    29823 <__find_arguments+0x129d>
   29822:	90                   	nop
   29823:	83 7d b8 07          	cmpl   $0x7,-0x48(%rbp)
   29827:	7e 3c                	jle    29865 <__find_arguments+0x12df>
   29829:	8b 45 b8             	mov    -0x48(%rbp),%eax
   2982c:	83 c0 01             	add    $0x1,%eax
   2982f:	48 98                	cltq   
   29831:	48 c1 e0 04          	shl    $0x4,%rax
   29835:	48 89 c2             	mov    %rax,%rdx
   29838:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2983c:	48 89 10             	mov    %rdx,(%rax)
   2983f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   29843:	48 8b 00             	mov    (%rax),%rax
   29846:	48 89 c7             	mov    %rax,%rdi
   29849:	e8 d9 61 ff ff       	call   1fa27 <dlmalloc>
   2984e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   29852:	48 89 02             	mov    %rax,(%rdx)
   29855:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29859:	48 8b 00             	mov    (%rax),%rax
   2985c:	48 85 c0             	test   %rax,%rax
   2985f:	0f 84 af 09 00 00    	je     2a214 <__find_arguments+0x1c8e>
   29865:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%rbp)
   2986c:	e9 5c 09 00 00       	jmp    2a1cd <__find_arguments+0x1c47>
   29871:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   29875:	8b 45 ac             	mov    -0x54(%rbp),%eax
   29878:	48 98                	cltq   
   2987a:	48 01 d0             	add    %rdx,%rax
   2987d:	0f b6 00             	movzbl (%rax),%eax
   29880:	0f b6 c0             	movzbl %al,%eax
   29883:	83 f8 1c             	cmp    $0x1c,%eax
   29886:	0f 87 3d 09 00 00    	ja     2a1c9 <__find_arguments+0x1c43>
   2988c:	89 c0                	mov    %eax,%eax
   2988e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   29895:	00 
   29896:	48 8d 05 1f a3 00 00 	lea    0xa31f(%rip),%rax        # 33bbc <__func__.2555+0x313>
   2989d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   298a0:	48 98                	cltq   
   298a2:	48 8d 15 13 a3 00 00 	lea    0xa313(%rip),%rdx        # 33bbc <__func__.2555+0x313>
   298a9:	48 01 d0             	add    %rdx,%rax
   298ac:	3e ff e0             	notrack jmp *%rax
   298af:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   298b3:	48 8b 00             	mov    (%rax),%rax
   298b6:	8b 55 ac             	mov    -0x54(%rbp),%edx
   298b9:	48 63 d2             	movslq %edx,%rdx
   298bc:	48 c1 e2 04          	shl    $0x4,%rdx
   298c0:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   298c4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   298c8:	8b 00                	mov    (%rax),%eax
   298ca:	83 f8 2f             	cmp    $0x2f,%eax
   298cd:	77 24                	ja     298f3 <__find_arguments+0x136d>
   298cf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   298d3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   298d7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   298db:	8b 00                	mov    (%rax),%eax
   298dd:	89 c0                	mov    %eax,%eax
   298df:	48 01 d0             	add    %rdx,%rax
   298e2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   298e6:	8b 12                	mov    (%rdx),%edx
   298e8:	8d 4a 08             	lea    0x8(%rdx),%ecx
   298eb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   298ef:	89 0a                	mov    %ecx,(%rdx)
   298f1:	eb 14                	jmp    29907 <__find_arguments+0x1381>
   298f3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   298f7:	48 8b 40 08          	mov    0x8(%rax),%rax
   298fb:	48 8d 48 08          	lea    0x8(%rax),%rcx
   298ff:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29903:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29907:	8b 00                	mov    (%rax),%eax
   29909:	89 06                	mov    %eax,(%rsi)
   2990b:	e9 b9 08 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29910:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29914:	48 8b 00             	mov    (%rax),%rax
   29917:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2991a:	48 63 d2             	movslq %edx,%rdx
   2991d:	48 c1 e2 04          	shl    $0x4,%rdx
   29921:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29925:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29929:	8b 00                	mov    (%rax),%eax
   2992b:	83 f8 2f             	cmp    $0x2f,%eax
   2992e:	77 24                	ja     29954 <__find_arguments+0x13ce>
   29930:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29934:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29938:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2993c:	8b 00                	mov    (%rax),%eax
   2993e:	89 c0                	mov    %eax,%eax
   29940:	48 01 d0             	add    %rdx,%rax
   29943:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29947:	8b 12                	mov    (%rdx),%edx
   29949:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2994c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29950:	89 0a                	mov    %ecx,(%rdx)
   29952:	eb 14                	jmp    29968 <__find_arguments+0x13e2>
   29954:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29958:	48 8b 40 08          	mov    0x8(%rax),%rax
   2995c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29960:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29964:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29968:	48 8b 00             	mov    (%rax),%rax
   2996b:	48 89 06             	mov    %rax,(%rsi)
   2996e:	e9 56 08 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29973:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29977:	48 8b 00             	mov    (%rax),%rax
   2997a:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2997d:	48 63 d2             	movslq %edx,%rdx
   29980:	48 c1 e2 04          	shl    $0x4,%rdx
   29984:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29988:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2998c:	8b 00                	mov    (%rax),%eax
   2998e:	83 f8 2f             	cmp    $0x2f,%eax
   29991:	77 24                	ja     299b7 <__find_arguments+0x1431>
   29993:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29997:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2999b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2999f:	8b 00                	mov    (%rax),%eax
   299a1:	89 c0                	mov    %eax,%eax
   299a3:	48 01 d0             	add    %rdx,%rax
   299a6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   299aa:	8b 12                	mov    (%rdx),%edx
   299ac:	8d 4a 08             	lea    0x8(%rdx),%ecx
   299af:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   299b3:	89 0a                	mov    %ecx,(%rdx)
   299b5:	eb 14                	jmp    299cb <__find_arguments+0x1445>
   299b7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   299bb:	48 8b 40 08          	mov    0x8(%rax),%rax
   299bf:	48 8d 48 08          	lea    0x8(%rax),%rcx
   299c3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   299c7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   299cb:	8b 00                	mov    (%rax),%eax
   299cd:	89 06                	mov    %eax,(%rsi)
   299cf:	e9 f5 07 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   299d4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   299d8:	48 8b 00             	mov    (%rax),%rax
   299db:	8b 55 ac             	mov    -0x54(%rbp),%edx
   299de:	48 63 d2             	movslq %edx,%rdx
   299e1:	48 c1 e2 04          	shl    $0x4,%rdx
   299e5:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   299e9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   299ed:	8b 00                	mov    (%rax),%eax
   299ef:	83 f8 2f             	cmp    $0x2f,%eax
   299f2:	77 24                	ja     29a18 <__find_arguments+0x1492>
   299f4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   299f8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   299fc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a00:	8b 00                	mov    (%rax),%eax
   29a02:	89 c0                	mov    %eax,%eax
   29a04:	48 01 d0             	add    %rdx,%rax
   29a07:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a0b:	8b 12                	mov    (%rdx),%edx
   29a0d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29a10:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a14:	89 0a                	mov    %ecx,(%rdx)
   29a16:	eb 14                	jmp    29a2c <__find_arguments+0x14a6>
   29a18:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a1c:	48 8b 40 08          	mov    0x8(%rax),%rax
   29a20:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29a24:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a28:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29a2c:	48 8b 00             	mov    (%rax),%rax
   29a2f:	48 89 06             	mov    %rax,(%rsi)
   29a32:	e9 92 07 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29a37:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29a3b:	48 8b 00             	mov    (%rax),%rax
   29a3e:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29a41:	48 63 d2             	movslq %edx,%rdx
   29a44:	48 c1 e2 04          	shl    $0x4,%rdx
   29a48:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29a4c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a50:	8b 00                	mov    (%rax),%eax
   29a52:	83 f8 2f             	cmp    $0x2f,%eax
   29a55:	77 24                	ja     29a7b <__find_arguments+0x14f5>
   29a57:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a5b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29a5f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a63:	8b 00                	mov    (%rax),%eax
   29a65:	89 c0                	mov    %eax,%eax
   29a67:	48 01 d0             	add    %rdx,%rax
   29a6a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a6e:	8b 12                	mov    (%rdx),%edx
   29a70:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29a73:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a77:	89 0a                	mov    %ecx,(%rdx)
   29a79:	eb 14                	jmp    29a8f <__find_arguments+0x1509>
   29a7b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29a7f:	48 8b 40 08          	mov    0x8(%rax),%rax
   29a83:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29a87:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29a8b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29a8f:	48 8b 00             	mov    (%rax),%rax
   29a92:	48 89 06             	mov    %rax,(%rsi)
   29a95:	e9 2f 07 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29a9a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29a9e:	48 8b 00             	mov    (%rax),%rax
   29aa1:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29aa4:	48 63 d2             	movslq %edx,%rdx
   29aa7:	48 c1 e2 04          	shl    $0x4,%rdx
   29aab:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29aaf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ab3:	8b 00                	mov    (%rax),%eax
   29ab5:	83 f8 2f             	cmp    $0x2f,%eax
   29ab8:	77 24                	ja     29ade <__find_arguments+0x1558>
   29aba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29abe:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29ac2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ac6:	8b 00                	mov    (%rax),%eax
   29ac8:	89 c0                	mov    %eax,%eax
   29aca:	48 01 d0             	add    %rdx,%rax
   29acd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29ad1:	8b 12                	mov    (%rdx),%edx
   29ad3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29ad6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29ada:	89 0a                	mov    %ecx,(%rdx)
   29adc:	eb 14                	jmp    29af2 <__find_arguments+0x156c>
   29ade:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ae2:	48 8b 40 08          	mov    0x8(%rax),%rax
   29ae6:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29aea:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29aee:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29af2:	48 8b 00             	mov    (%rax),%rax
   29af5:	48 89 06             	mov    %rax,(%rsi)
   29af8:	e9 cc 06 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29afd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29b01:	48 8b 00             	mov    (%rax),%rax
   29b04:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29b07:	48 63 d2             	movslq %edx,%rdx
   29b0a:	48 c1 e2 04          	shl    $0x4,%rdx
   29b0e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29b12:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b16:	8b 00                	mov    (%rax),%eax
   29b18:	83 f8 2f             	cmp    $0x2f,%eax
   29b1b:	77 24                	ja     29b41 <__find_arguments+0x15bb>
   29b1d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b21:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29b25:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b29:	8b 00                	mov    (%rax),%eax
   29b2b:	89 c0                	mov    %eax,%eax
   29b2d:	48 01 d0             	add    %rdx,%rax
   29b30:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29b34:	8b 12                	mov    (%rdx),%edx
   29b36:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29b39:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29b3d:	89 0a                	mov    %ecx,(%rdx)
   29b3f:	eb 14                	jmp    29b55 <__find_arguments+0x15cf>
   29b41:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b45:	48 8b 40 08          	mov    0x8(%rax),%rax
   29b49:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29b4d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29b51:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29b55:	48 8b 00             	mov    (%rax),%rax
   29b58:	48 89 06             	mov    %rax,(%rsi)
   29b5b:	e9 69 06 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29b60:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29b64:	48 8b 00             	mov    (%rax),%rax
   29b67:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29b6a:	48 63 d2             	movslq %edx,%rdx
   29b6d:	48 c1 e2 04          	shl    $0x4,%rdx
   29b71:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29b75:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b79:	8b 00                	mov    (%rax),%eax
   29b7b:	83 f8 2f             	cmp    $0x2f,%eax
   29b7e:	77 24                	ja     29ba4 <__find_arguments+0x161e>
   29b80:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b84:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29b88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29b8c:	8b 00                	mov    (%rax),%eax
   29b8e:	89 c0                	mov    %eax,%eax
   29b90:	48 01 d0             	add    %rdx,%rax
   29b93:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29b97:	8b 12                	mov    (%rdx),%edx
   29b99:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29b9c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29ba0:	89 0a                	mov    %ecx,(%rdx)
   29ba2:	eb 14                	jmp    29bb8 <__find_arguments+0x1632>
   29ba4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ba8:	48 8b 40 08          	mov    0x8(%rax),%rax
   29bac:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29bb0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29bb4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29bb8:	48 8b 00             	mov    (%rax),%rax
   29bbb:	48 89 06             	mov    %rax,(%rsi)
   29bbe:	e9 06 06 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29bc3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29bc7:	48 8b 00             	mov    (%rax),%rax
   29bca:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29bcd:	48 63 d2             	movslq %edx,%rdx
   29bd0:	48 c1 e2 04          	shl    $0x4,%rdx
   29bd4:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29bd8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29bdc:	8b 00                	mov    (%rax),%eax
   29bde:	83 f8 2f             	cmp    $0x2f,%eax
   29be1:	77 24                	ja     29c07 <__find_arguments+0x1681>
   29be3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29be7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29beb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29bef:	8b 00                	mov    (%rax),%eax
   29bf1:	89 c0                	mov    %eax,%eax
   29bf3:	48 01 d0             	add    %rdx,%rax
   29bf6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29bfa:	8b 12                	mov    (%rdx),%edx
   29bfc:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29bff:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29c03:	89 0a                	mov    %ecx,(%rdx)
   29c05:	eb 14                	jmp    29c1b <__find_arguments+0x1695>
   29c07:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29c0b:	48 8b 40 08          	mov    0x8(%rax),%rax
   29c0f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29c13:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29c17:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29c1b:	48 8b 00             	mov    (%rax),%rax
   29c1e:	48 89 06             	mov    %rax,(%rsi)
   29c21:	e9 a3 05 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29c26:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29c2a:	48 8b 00             	mov    (%rax),%rax
   29c2d:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29c30:	48 63 d2             	movslq %edx,%rdx
   29c33:	48 c1 e2 04          	shl    $0x4,%rdx
   29c37:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29c3b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29c3f:	8b 00                	mov    (%rax),%eax
   29c41:	83 f8 2f             	cmp    $0x2f,%eax
   29c44:	77 24                	ja     29c6a <__find_arguments+0x16e4>
   29c46:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29c4a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29c4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29c52:	8b 00                	mov    (%rax),%eax
   29c54:	89 c0                	mov    %eax,%eax
   29c56:	48 01 d0             	add    %rdx,%rax
   29c59:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29c5d:	8b 12                	mov    (%rdx),%edx
   29c5f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29c62:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29c66:	89 0a                	mov    %ecx,(%rdx)
   29c68:	eb 14                	jmp    29c7e <__find_arguments+0x16f8>
   29c6a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29c6e:	48 8b 40 08          	mov    0x8(%rax),%rax
   29c72:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29c76:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29c7a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29c7e:	48 8b 00             	mov    (%rax),%rax
   29c81:	48 89 06             	mov    %rax,(%rsi)
   29c84:	e9 40 05 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29c89:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29c8d:	48 8b 00             	mov    (%rax),%rax
   29c90:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29c93:	48 63 d2             	movslq %edx,%rdx
   29c96:	48 c1 e2 04          	shl    $0x4,%rdx
   29c9a:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29c9e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ca2:	8b 40 04             	mov    0x4(%rax),%eax
   29ca5:	3d af 00 00 00       	cmp    $0xaf,%eax
   29caa:	77 27                	ja     29cd3 <__find_arguments+0x174d>
   29cac:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29cb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29cb4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29cb8:	8b 40 04             	mov    0x4(%rax),%eax
   29cbb:	89 c0                	mov    %eax,%eax
   29cbd:	48 01 d0             	add    %rdx,%rax
   29cc0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29cc4:	8b 52 04             	mov    0x4(%rdx),%edx
   29cc7:	8d 4a 10             	lea    0x10(%rdx),%ecx
   29cca:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29cce:	89 4a 04             	mov    %ecx,0x4(%rdx)
   29cd1:	eb 14                	jmp    29ce7 <__find_arguments+0x1761>
   29cd3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29cd7:	48 8b 40 08          	mov    0x8(%rax),%rax
   29cdb:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29cdf:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29ce3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29ce7:	f2 0f 10 00          	movsd  (%rax),%xmm0
   29ceb:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
   29cef:	e9 d5 04 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29cf4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29cf8:	48 8b 00             	mov    (%rax),%rax
   29cfb:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29cfe:	48 63 d2             	movslq %edx,%rdx
   29d01:	48 c1 e2 04          	shl    $0x4,%rdx
   29d05:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29d09:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29d0d:	48 8b 40 08          	mov    0x8(%rax),%rax
   29d11:	48 83 c0 0f          	add    $0xf,%rax
   29d15:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   29d19:	48 8d 48 10          	lea    0x10(%rax),%rcx
   29d1d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29d21:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29d25:	db 28                	fldt   (%rax)
   29d27:	db 3e                	fstpt  (%rsi)
   29d29:	e9 9b 04 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29d2e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29d32:	48 8b 00             	mov    (%rax),%rax
   29d35:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29d38:	48 63 d2             	movslq %edx,%rdx
   29d3b:	48 c1 e2 04          	shl    $0x4,%rdx
   29d3f:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29d43:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29d47:	8b 00                	mov    (%rax),%eax
   29d49:	83 f8 2f             	cmp    $0x2f,%eax
   29d4c:	77 24                	ja     29d72 <__find_arguments+0x17ec>
   29d4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29d52:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29d56:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29d5a:	8b 00                	mov    (%rax),%eax
   29d5c:	89 c0                	mov    %eax,%eax
   29d5e:	48 01 d0             	add    %rdx,%rax
   29d61:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29d65:	8b 12                	mov    (%rdx),%edx
   29d67:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29d6a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29d6e:	89 0a                	mov    %ecx,(%rdx)
   29d70:	eb 14                	jmp    29d86 <__find_arguments+0x1800>
   29d72:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29d76:	48 8b 40 08          	mov    0x8(%rax),%rax
   29d7a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29d7e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29d82:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29d86:	48 8b 00             	mov    (%rax),%rax
   29d89:	48 89 06             	mov    %rax,(%rsi)
   29d8c:	e9 38 04 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29d91:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29d95:	48 8b 00             	mov    (%rax),%rax
   29d98:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29d9b:	48 63 d2             	movslq %edx,%rdx
   29d9e:	48 c1 e2 04          	shl    $0x4,%rdx
   29da2:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29da6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29daa:	8b 00                	mov    (%rax),%eax
   29dac:	83 f8 2f             	cmp    $0x2f,%eax
   29daf:	77 24                	ja     29dd5 <__find_arguments+0x184f>
   29db1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29db5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29db9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29dbd:	8b 00                	mov    (%rax),%eax
   29dbf:	89 c0                	mov    %eax,%eax
   29dc1:	48 01 d0             	add    %rdx,%rax
   29dc4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29dc8:	8b 12                	mov    (%rdx),%edx
   29dca:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29dcd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29dd1:	89 0a                	mov    %ecx,(%rdx)
   29dd3:	eb 14                	jmp    29de9 <__find_arguments+0x1863>
   29dd5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29dd9:	48 8b 40 08          	mov    0x8(%rax),%rax
   29ddd:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29de1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29de5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29de9:	48 8b 00             	mov    (%rax),%rax
   29dec:	48 89 06             	mov    %rax,(%rsi)
   29def:	e9 d5 03 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29df4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29df8:	48 8b 00             	mov    (%rax),%rax
   29dfb:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29dfe:	48 63 d2             	movslq %edx,%rdx
   29e01:	48 c1 e2 04          	shl    $0x4,%rdx
   29e05:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29e09:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e0d:	8b 00                	mov    (%rax),%eax
   29e0f:	83 f8 2f             	cmp    $0x2f,%eax
   29e12:	77 24                	ja     29e38 <__find_arguments+0x18b2>
   29e14:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e18:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29e1c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e20:	8b 00                	mov    (%rax),%eax
   29e22:	89 c0                	mov    %eax,%eax
   29e24:	48 01 d0             	add    %rdx,%rax
   29e27:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29e2b:	8b 12                	mov    (%rdx),%edx
   29e2d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29e30:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29e34:	89 0a                	mov    %ecx,(%rdx)
   29e36:	eb 14                	jmp    29e4c <__find_arguments+0x18c6>
   29e38:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e3c:	48 8b 40 08          	mov    0x8(%rax),%rax
   29e40:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29e44:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29e48:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29e4c:	48 8b 00             	mov    (%rax),%rax
   29e4f:	48 89 06             	mov    %rax,(%rsi)
   29e52:	e9 72 03 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29e57:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29e5b:	48 8b 00             	mov    (%rax),%rax
   29e5e:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29e61:	48 63 d2             	movslq %edx,%rdx
   29e64:	48 c1 e2 04          	shl    $0x4,%rdx
   29e68:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29e6c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e70:	8b 00                	mov    (%rax),%eax
   29e72:	83 f8 2f             	cmp    $0x2f,%eax
   29e75:	77 24                	ja     29e9b <__find_arguments+0x1915>
   29e77:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e7b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29e7f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e83:	8b 00                	mov    (%rax),%eax
   29e85:	89 c0                	mov    %eax,%eax
   29e87:	48 01 d0             	add    %rdx,%rax
   29e8a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29e8e:	8b 12                	mov    (%rdx),%edx
   29e90:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29e93:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29e97:	89 0a                	mov    %ecx,(%rdx)
   29e99:	eb 14                	jmp    29eaf <__find_arguments+0x1929>
   29e9b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29e9f:	48 8b 40 08          	mov    0x8(%rax),%rax
   29ea3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29ea7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29eab:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29eaf:	48 8b 00             	mov    (%rax),%rax
   29eb2:	48 89 06             	mov    %rax,(%rsi)
   29eb5:	e9 0f 03 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29eba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29ebe:	48 8b 00             	mov    (%rax),%rax
   29ec1:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29ec4:	48 63 d2             	movslq %edx,%rdx
   29ec7:	48 c1 e2 04          	shl    $0x4,%rdx
   29ecb:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29ecf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ed3:	8b 00                	mov    (%rax),%eax
   29ed5:	83 f8 2f             	cmp    $0x2f,%eax
   29ed8:	77 24                	ja     29efe <__find_arguments+0x1978>
   29eda:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ede:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29ee2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ee6:	8b 00                	mov    (%rax),%eax
   29ee8:	89 c0                	mov    %eax,%eax
   29eea:	48 01 d0             	add    %rdx,%rax
   29eed:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29ef1:	8b 12                	mov    (%rdx),%edx
   29ef3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29ef6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29efa:	89 0a                	mov    %ecx,(%rdx)
   29efc:	eb 14                	jmp    29f12 <__find_arguments+0x198c>
   29efe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f02:	48 8b 40 08          	mov    0x8(%rax),%rax
   29f06:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29f0a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29f0e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29f12:	48 8b 00             	mov    (%rax),%rax
   29f15:	48 89 06             	mov    %rax,(%rsi)
   29f18:	e9 ac 02 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29f1d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29f21:	48 8b 00             	mov    (%rax),%rax
   29f24:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29f27:	48 63 d2             	movslq %edx,%rdx
   29f2a:	48 c1 e2 04          	shl    $0x4,%rdx
   29f2e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29f32:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f36:	8b 00                	mov    (%rax),%eax
   29f38:	83 f8 2f             	cmp    $0x2f,%eax
   29f3b:	77 24                	ja     29f61 <__find_arguments+0x19db>
   29f3d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f41:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29f45:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f49:	8b 00                	mov    (%rax),%eax
   29f4b:	89 c0                	mov    %eax,%eax
   29f4d:	48 01 d0             	add    %rdx,%rax
   29f50:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29f54:	8b 12                	mov    (%rdx),%edx
   29f56:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29f59:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29f5d:	89 0a                	mov    %ecx,(%rdx)
   29f5f:	eb 14                	jmp    29f75 <__find_arguments+0x19ef>
   29f61:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f65:	48 8b 40 08          	mov    0x8(%rax),%rax
   29f69:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29f6d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29f71:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29f75:	48 8b 00             	mov    (%rax),%rax
   29f78:	48 89 06             	mov    %rax,(%rsi)
   29f7b:	e9 49 02 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29f80:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29f84:	48 8b 00             	mov    (%rax),%rax
   29f87:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29f8a:	48 63 d2             	movslq %edx,%rdx
   29f8d:	48 c1 e2 04          	shl    $0x4,%rdx
   29f91:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29f95:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29f99:	8b 00                	mov    (%rax),%eax
   29f9b:	83 f8 2f             	cmp    $0x2f,%eax
   29f9e:	77 24                	ja     29fc4 <__find_arguments+0x1a3e>
   29fa0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29fa4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   29fa8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29fac:	8b 00                	mov    (%rax),%eax
   29fae:	89 c0                	mov    %eax,%eax
   29fb0:	48 01 d0             	add    %rdx,%rax
   29fb3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29fb7:	8b 12                	mov    (%rdx),%edx
   29fb9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   29fbc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29fc0:	89 0a                	mov    %ecx,(%rdx)
   29fc2:	eb 14                	jmp    29fd8 <__find_arguments+0x1a52>
   29fc4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29fc8:	48 8b 40 08          	mov    0x8(%rax),%rax
   29fcc:	48 8d 48 08          	lea    0x8(%rax),%rcx
   29fd0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   29fd4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   29fd8:	48 8b 00             	mov    (%rax),%rax
   29fdb:	48 89 06             	mov    %rax,(%rsi)
   29fde:	e9 e6 01 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   29fe3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   29fe7:	48 8b 00             	mov    (%rax),%rax
   29fea:	8b 55 ac             	mov    -0x54(%rbp),%edx
   29fed:	48 63 d2             	movslq %edx,%rdx
   29ff0:	48 c1 e2 04          	shl    $0x4,%rdx
   29ff4:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   29ff8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   29ffc:	8b 00                	mov    (%rax),%eax
   29ffe:	83 f8 2f             	cmp    $0x2f,%eax
   2a001:	77 24                	ja     2a027 <__find_arguments+0x1aa1>
   2a003:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a007:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2a00b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a00f:	8b 00                	mov    (%rax),%eax
   2a011:	89 c0                	mov    %eax,%eax
   2a013:	48 01 d0             	add    %rdx,%rax
   2a016:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a01a:	8b 12                	mov    (%rdx),%edx
   2a01c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2a01f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a023:	89 0a                	mov    %ecx,(%rdx)
   2a025:	eb 14                	jmp    2a03b <__find_arguments+0x1ab5>
   2a027:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a02b:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a02f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2a033:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a037:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2a03b:	48 8b 00             	mov    (%rax),%rax
   2a03e:	48 89 06             	mov    %rax,(%rsi)
   2a041:	e9 83 01 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   2a046:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2a04a:	48 8b 00             	mov    (%rax),%rax
   2a04d:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2a050:	48 63 d2             	movslq %edx,%rdx
   2a053:	48 c1 e2 04          	shl    $0x4,%rdx
   2a057:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2a05b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a05f:	8b 00                	mov    (%rax),%eax
   2a061:	83 f8 2f             	cmp    $0x2f,%eax
   2a064:	77 24                	ja     2a08a <__find_arguments+0x1b04>
   2a066:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a06a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2a06e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a072:	8b 00                	mov    (%rax),%eax
   2a074:	89 c0                	mov    %eax,%eax
   2a076:	48 01 d0             	add    %rdx,%rax
   2a079:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a07d:	8b 12                	mov    (%rdx),%edx
   2a07f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2a082:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a086:	89 0a                	mov    %ecx,(%rdx)
   2a088:	eb 14                	jmp    2a09e <__find_arguments+0x1b18>
   2a08a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a08e:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a092:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2a096:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a09a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2a09e:	48 8b 00             	mov    (%rax),%rax
   2a0a1:	48 89 06             	mov    %rax,(%rsi)
   2a0a4:	e9 20 01 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   2a0a9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2a0ad:	48 8b 00             	mov    (%rax),%rax
   2a0b0:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2a0b3:	48 63 d2             	movslq %edx,%rdx
   2a0b6:	48 c1 e2 04          	shl    $0x4,%rdx
   2a0ba:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2a0be:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a0c2:	8b 00                	mov    (%rax),%eax
   2a0c4:	83 f8 2f             	cmp    $0x2f,%eax
   2a0c7:	77 24                	ja     2a0ed <__find_arguments+0x1b67>
   2a0c9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a0cd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2a0d1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a0d5:	8b 00                	mov    (%rax),%eax
   2a0d7:	89 c0                	mov    %eax,%eax
   2a0d9:	48 01 d0             	add    %rdx,%rax
   2a0dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a0e0:	8b 12                	mov    (%rdx),%edx
   2a0e2:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2a0e5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a0e9:	89 0a                	mov    %ecx,(%rdx)
   2a0eb:	eb 14                	jmp    2a101 <__find_arguments+0x1b7b>
   2a0ed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a0f1:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a0f5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2a0f9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a0fd:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2a101:	48 8b 00             	mov    (%rax),%rax
   2a104:	48 89 06             	mov    %rax,(%rsi)
   2a107:	e9 bd 00 00 00       	jmp    2a1c9 <__find_arguments+0x1c43>
   2a10c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2a110:	48 8b 00             	mov    (%rax),%rax
   2a113:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2a116:	48 63 d2             	movslq %edx,%rdx
   2a119:	48 c1 e2 04          	shl    $0x4,%rdx
   2a11d:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2a121:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a125:	8b 00                	mov    (%rax),%eax
   2a127:	83 f8 2f             	cmp    $0x2f,%eax
   2a12a:	77 24                	ja     2a150 <__find_arguments+0x1bca>
   2a12c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a130:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2a134:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a138:	8b 00                	mov    (%rax),%eax
   2a13a:	89 c0                	mov    %eax,%eax
   2a13c:	48 01 d0             	add    %rdx,%rax
   2a13f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a143:	8b 12                	mov    (%rdx),%edx
   2a145:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2a148:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a14c:	89 0a                	mov    %ecx,(%rdx)
   2a14e:	eb 14                	jmp    2a164 <__find_arguments+0x1bde>
   2a150:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a154:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a158:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2a15c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a160:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2a164:	8b 00                	mov    (%rax),%eax
   2a166:	89 06                	mov    %eax,(%rsi)
   2a168:	eb 5f                	jmp    2a1c9 <__find_arguments+0x1c43>
   2a16a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2a16e:	48 8b 00             	mov    (%rax),%rax
   2a171:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2a174:	48 63 d2             	movslq %edx,%rdx
   2a177:	48 c1 e2 04          	shl    $0x4,%rdx
   2a17b:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2a17f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a183:	8b 00                	mov    (%rax),%eax
   2a185:	83 f8 2f             	cmp    $0x2f,%eax
   2a188:	77 24                	ja     2a1ae <__find_arguments+0x1c28>
   2a18a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a18e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2a192:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a196:	8b 00                	mov    (%rax),%eax
   2a198:	89 c0                	mov    %eax,%eax
   2a19a:	48 01 d0             	add    %rdx,%rax
   2a19d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a1a1:	8b 12                	mov    (%rdx),%edx
   2a1a3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2a1a6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a1aa:	89 0a                	mov    %ecx,(%rdx)
   2a1ac:	eb 14                	jmp    2a1c2 <__find_arguments+0x1c3c>
   2a1ae:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a1b2:	48 8b 40 08          	mov    0x8(%rax),%rax
   2a1b6:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2a1ba:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2a1be:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2a1c2:	48 8b 00             	mov    (%rax),%rax
   2a1c5:	48 89 06             	mov    %rax,(%rsi)
   2a1c8:	90                   	nop
   2a1c9:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
   2a1cd:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2a1d0:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2a1d3:	0f 8e 98 f6 ff ff    	jle    29871 <__find_arguments+0x12eb>
   2a1d9:	eb 4c                	jmp    2a227 <__find_arguments+0x1ca1>
   2a1db:	90                   	nop
   2a1dc:	eb 37                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1de:	90                   	nop
   2a1df:	eb 34                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1e1:	90                   	nop
   2a1e2:	eb 31                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1e4:	90                   	nop
   2a1e5:	eb 2e                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1e7:	90                   	nop
   2a1e8:	eb 2b                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1ea:	90                   	nop
   2a1eb:	eb 28                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1ed:	90                   	nop
   2a1ee:	eb 25                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1f0:	90                   	nop
   2a1f1:	eb 22                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1f3:	90                   	nop
   2a1f4:	eb 1f                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1f6:	90                   	nop
   2a1f7:	eb 1c                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1f9:	90                   	nop
   2a1fa:	eb 19                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1fc:	90                   	nop
   2a1fd:	eb 16                	jmp    2a215 <__find_arguments+0x1c8f>
   2a1ff:	90                   	nop
   2a200:	eb 13                	jmp    2a215 <__find_arguments+0x1c8f>
   2a202:	90                   	nop
   2a203:	eb 10                	jmp    2a215 <__find_arguments+0x1c8f>
   2a205:	90                   	nop
   2a206:	eb 0d                	jmp    2a215 <__find_arguments+0x1c8f>
   2a208:	90                   	nop
   2a209:	eb 0a                	jmp    2a215 <__find_arguments+0x1c8f>
   2a20b:	90                   	nop
   2a20c:	eb 07                	jmp    2a215 <__find_arguments+0x1c8f>
   2a20e:	90                   	nop
   2a20f:	eb 04                	jmp    2a215 <__find_arguments+0x1c8f>
   2a211:	90                   	nop
   2a212:	eb 01                	jmp    2a215 <__find_arguments+0x1c8f>
   2a214:	90                   	nop
   2a215:	e8 af 9c ff ff       	call   23ec9 <__errno>
   2a21a:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2a220:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%rbp)
   2a227:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a22b:	48 85 c0             	test   %rax,%rax
   2a22e:	74 21                	je     2a251 <__find_arguments+0x1ccb>
   2a230:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2a234:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2a238:	48 39 c2             	cmp    %rax,%rdx
   2a23b:	74 14                	je     2a251 <__find_arguments+0x1ccb>
   2a23d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a241:	48 89 c7             	mov    %rax,%rdi
   2a244:	e8 d9 62 ff ff       	call   20522 <dlfree>
   2a249:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   2a250:	00 
   2a251:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2a254:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   2a258:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   2a25f:	00 00 
   2a261:	74 05                	je     2a268 <__find_arguments+0x1ce2>
   2a263:	e8 8f 95 ff ff       	call   237f7 <__stack_chk_fail>
   2a268:	c9                   	leave  
   2a269:	c3                   	ret    

000000000002a26a <__grow_type_table>:
   2a26a:	f3 0f 1e fa          	endbr64 
   2a26e:	55                   	push   %rbp
   2a26f:	48 89 e5             	mov    %rsp,%rbp
   2a272:	48 83 ec 30          	sub    $0x30,%rsp
   2a276:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a27a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2a27e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a282:	48 8b 00             	mov    (%rax),%rax
   2a285:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a289:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a28d:	8b 00                	mov    (%rax),%eax
   2a28f:	01 c0                	add    %eax,%eax
   2a291:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a294:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)
   2a29b:	7f 07                	jg     2a2a4 <__grow_type_table+0x3a>
   2a29d:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)
   2a2a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a2a8:	8b 00                	mov    (%rax),%eax
   2a2aa:	83 f8 08             	cmp    $0x8,%eax
   2a2ad:	75 4b                	jne    2a2fa <__grow_type_table+0x90>
   2a2af:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a2b2:	48 98                	cltq   
   2a2b4:	48 89 c7             	mov    %rax,%rdi
   2a2b7:	e8 6b 57 ff ff       	call   1fa27 <dlmalloc>
   2a2bc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a2c0:	48 89 02             	mov    %rax,(%rdx)
   2a2c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a2c7:	48 8b 00             	mov    (%rax),%rax
   2a2ca:	48 85 c0             	test   %rax,%rax
   2a2cd:	75 0a                	jne    2a2d9 <__grow_type_table+0x6f>
   2a2cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2a2d4:	e9 b9 00 00 00       	jmp    2a392 <__grow_type_table+0x128>
   2a2d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a2dd:	8b 00                	mov    (%rax),%eax
   2a2df:	48 63 d0             	movslq %eax,%rdx
   2a2e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a2e6:	48 8b 00             	mov    (%rax),%rax
   2a2e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2a2ed:	48 89 ce             	mov    %rcx,%rsi
   2a2f0:	48 89 c7             	mov    %rax,%rdi
   2a2f3:	e8 35 03 00 00       	call   2a62d <memmove>
   2a2f8:	eb 58                	jmp    2a352 <__grow_type_table+0xe8>
   2a2fa:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a2fd:	48 98                	cltq   
   2a2ff:	48 89 c7             	mov    %rax,%rdi
   2a302:	e8 20 57 ff ff       	call   1fa27 <dlmalloc>
   2a307:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a30b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a310:	75 07                	jne    2a319 <__grow_type_table+0xaf>
   2a312:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2a317:	eb 79                	jmp    2a392 <__grow_type_table+0x128>
   2a319:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a31d:	8b 00                	mov    (%rax),%eax
   2a31f:	48 63 d0             	movslq %eax,%rdx
   2a322:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a326:	48 8b 08             	mov    (%rax),%rcx
   2a329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a32d:	48 89 ce             	mov    %rcx,%rsi
   2a330:	48 89 c7             	mov    %rax,%rdi
   2a333:	e8 f5 02 00 00       	call   2a62d <memmove>
   2a338:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a33c:	48 8b 00             	mov    (%rax),%rax
   2a33f:	48 89 c7             	mov    %rax,%rdi
   2a342:	e8 db 61 ff ff       	call   20522 <dlfree>
   2a347:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a34b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2a34f:	48 89 10             	mov    %rdx,(%rax)
   2a352:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a356:	8b 00                	mov    (%rax),%eax
   2a358:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2a35b:	29 c2                	sub    %eax,%edx
   2a35d:	89 d0                	mov    %edx,%eax
   2a35f:	48 98                	cltq   
   2a361:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2a365:	48 8b 0a             	mov    (%rdx),%rcx
   2a368:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2a36c:	8b 12                	mov    (%rdx),%edx
   2a36e:	48 63 d2             	movslq %edx,%rdx
   2a371:	48 01 d1             	add    %rdx,%rcx
   2a374:	48 89 c2             	mov    %rax,%rdx
   2a377:	be 00 00 00 00       	mov    $0x0,%esi
   2a37c:	48 89 cf             	mov    %rcx,%rdi
   2a37f:	e8 ff 92 ff ff       	call   23683 <memset>
   2a384:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a388:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2a38b:	89 10                	mov    %edx,(%rax)
   2a38d:	b8 00 00 00 00       	mov    $0x0,%eax
   2a392:	c9                   	leave  
   2a393:	c3                   	ret    

000000000002a394 <exponent>:
   2a394:	f3 0f 1e fa          	endbr64 
   2a398:	55                   	push   %rbp
   2a399:	48 89 e5             	mov    %rsp,%rbp
   2a39c:	48 83 ec 30          	sub    $0x30,%rsp
   2a3a0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a3a4:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2a3a7:	89 55 d0             	mov    %edx,-0x30(%rbp)
   2a3aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a3b1:	00 00 
   2a3b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a3b7:	31 c0                	xor    %eax,%eax
   2a3b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a3bd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2a3c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a3c5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a3c9:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2a3cd:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2a3d0:	88 10                	mov    %dl,(%rax)
   2a3d2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a3d6:	79 14                	jns    2a3ec <exponent+0x58>
   2a3d8:	f7 5d d4             	negl   -0x2c(%rbp)
   2a3db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a3df:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a3e3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2a3e7:	c6 00 2d             	movb   $0x2d,(%rax)
   2a3ea:	eb 0f                	jmp    2a3fb <exponent+0x67>
   2a3ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a3f0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a3f4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2a3f8:	c6 00 2b             	movb   $0x2b,(%rax)
   2a3fb:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   2a3ff:	48 83 c0 06          	add    $0x6,%rax
   2a403:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a407:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   2a40b:	0f 8e 9e 00 00 00    	jle    2a4af <exponent+0x11b>
   2a411:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   2a414:	48 63 c1             	movslq %ecx,%rax
   2a417:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   2a41e:	48 c1 e8 20          	shr    $0x20,%rax
   2a422:	89 c2                	mov    %eax,%edx
   2a424:	c1 fa 02             	sar    $0x2,%edx
   2a427:	89 c8                	mov    %ecx,%eax
   2a429:	c1 f8 1f             	sar    $0x1f,%eax
   2a42c:	29 c2                	sub    %eax,%edx
   2a42e:	89 d0                	mov    %edx,%eax
   2a430:	c1 e0 02             	shl    $0x2,%eax
   2a433:	01 d0                	add    %edx,%eax
   2a435:	01 c0                	add    %eax,%eax
   2a437:	29 c1                	sub    %eax,%ecx
   2a439:	89 ca                	mov    %ecx,%edx
   2a43b:	89 d0                	mov    %edx,%eax
   2a43d:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a442:	8d 50 30             	lea    0x30(%rax),%edx
   2a445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a449:	88 10                	mov    %dl,(%rax)
   2a44b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a44e:	48 63 d0             	movslq %eax,%rdx
   2a451:	48 69 d2 67 66 66 66 	imul   $0x66666667,%rdx,%rdx
   2a458:	48 c1 ea 20          	shr    $0x20,%rdx
   2a45c:	c1 fa 02             	sar    $0x2,%edx
   2a45f:	c1 f8 1f             	sar    $0x1f,%eax
   2a462:	29 c2                	sub    %eax,%edx
   2a464:	89 d0                	mov    %edx,%eax
   2a466:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a469:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   2a46d:	7f a2                	jg     2a411 <exponent+0x7d>
   2a46f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a472:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a477:	8d 50 30             	lea    0x30(%rax),%edx
   2a47a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a47e:	88 10                	mov    %dl,(%rax)
   2a480:	eb 1d                	jmp    2a49f <exponent+0x10b>
   2a482:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a486:	48 8d 42 01          	lea    0x1(%rdx),%rax
   2a48a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a48e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a492:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2a496:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2a49a:	0f b6 12             	movzbl (%rdx),%edx
   2a49d:	88 10                	mov    %dl,(%rax)
   2a49f:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   2a4a3:	48 83 c0 06          	add    $0x6,%rax
   2a4a7:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2a4ab:	72 d5                	jb     2a482 <exponent+0xee>
   2a4ad:	eb 31                	jmp    2a4e0 <exponent+0x14c>
   2a4af:	83 7d d0 65          	cmpl   $0x65,-0x30(%rbp)
   2a4b3:	74 06                	je     2a4bb <exponent+0x127>
   2a4b5:	83 7d d0 45          	cmpl   $0x45,-0x30(%rbp)
   2a4b9:	75 0f                	jne    2a4ca <exponent+0x136>
   2a4bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a4bf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a4c3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2a4c7:	c6 00 30             	movb   $0x30,(%rax)
   2a4ca:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a4cd:	89 c1                	mov    %eax,%ecx
   2a4cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a4d3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a4d7:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2a4db:	8d 51 30             	lea    0x30(%rcx),%edx
   2a4de:	88 10                	mov    %dl,(%rax)
   2a4e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a4e4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   2a4e8:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2a4ec:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2a4f3:	00 00 
   2a4f5:	74 05                	je     2a4fc <exponent+0x168>
   2a4f7:	e8 fb 92 ff ff       	call   237f7 <__stack_chk_fail>
   2a4fc:	c9                   	leave  
   2a4fd:	c3                   	ret    
   2a4fe:	66 90                	xchg   %ax,%ax

000000000002a500 <__memcpy_verw>:
   2a500:	8a 06                	mov    (%rsi),%al
   2a502:	48 83 ec 08          	sub    $0x8,%rsp
   2a506:	8c 1c 24             	mov    %ds,(%rsp)
   2a509:	0f 00 2c 24          	verw   (%rsp)
   2a50d:	88 07                	mov    %al,(%rdi)
   2a50f:	0f ae f0             	mfence 
   2a512:	0f ae e8             	lfence 
   2a515:	48 83 c4 08          	add    $0x8,%rsp
   2a519:	48 89 f8             	mov    %rdi,%rax
   2a51c:	c3                   	ret    
   2a51d:	cc                   	int3   
   2a51e:	cc                   	int3   
   2a51f:	cc                   	int3   

000000000002a520 <__memcpy_8a>:
   2a520:	48 8b 06             	mov    (%rsi),%rax
   2a523:	48 89 07             	mov    %rax,(%rdi)
   2a526:	48 89 f8             	mov    %rdi,%rax
   2a529:	c3                   	ret    
   2a52a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002a530 <__memset>:
   2a530:	48 89 f0             	mov    %rsi,%rax
   2a533:	48 25 ff 00 00 00    	and    $0xff,%rax
   2a539:	48 89 d1             	mov    %rdx,%rcx
   2a53c:	49 89 fb             	mov    %rdi,%r11
   2a53f:	fc                   	cld    
   2a540:	48 83 f9 0f          	cmp    $0xf,%rcx
   2a544:	7e 38                	jle    2a57e <L1>
   2a546:	88 c4                	mov    %al,%ah
   2a548:	89 c2                	mov    %eax,%edx
   2a54a:	c1 e0 10             	shl    $0x10,%eax
   2a54d:	09 d0                	or     %edx,%eax
   2a54f:	89 c2                	mov    %eax,%edx
   2a551:	48 c1 e0 20          	shl    $0x20,%rax
   2a555:	48 09 d0             	or     %rdx,%rax
   2a558:	48 89 fa             	mov    %rdi,%rdx
   2a55b:	48 f7 da             	neg    %rdx
   2a55e:	48 83 e2 07          	and    $0x7,%rdx
   2a562:	49 89 c8             	mov    %rcx,%r8
   2a565:	49 29 d0             	sub    %rdx,%r8
   2a568:	48 89 d1             	mov    %rdx,%rcx
   2a56b:	f3 aa                	rep stos %al,%es:(%rdi)
   2a56d:	4c 89 c1             	mov    %r8,%rcx
   2a570:	48 c1 e9 03          	shr    $0x3,%rcx
   2a574:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   2a577:	4c 89 c1             	mov    %r8,%rcx
   2a57a:	48 83 e1 07          	and    $0x7,%rcx

000000000002a57e <L1>:
   2a57e:	f3 aa                	rep stos %al,%es:(%rdi)
   2a580:	4c 89 d8             	mov    %r11,%rax
   2a583:	c3                   	ret    
   2a584:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2a58b:	00 00 00 
   2a58e:	66 90                	xchg   %ax,%ax

000000000002a590 <_libc__strlen>:
   2a590:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   2a597:	01 01 01 
   2a59a:	40 f6 c7 07          	test   $0x7,%dil
   2a59e:	48 89 f8             	mov    %rdi,%rax
   2a5a1:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   2a5a8:	80 80 80 
   2a5ab:	75 33                	jne    2a5e0 <_libc__strlen+0x50>
   2a5ad:	0f 1f 00             	nopl   (%rax)
   2a5b0:	48 8b 10             	mov    (%rax),%rdx
   2a5b3:	48 83 c0 08          	add    $0x8,%rax
   2a5b7:	48 89 d1             	mov    %rdx,%rcx
   2a5ba:	4c 29 c2             	sub    %r8,%rdx
   2a5bd:	48 f7 d1             	not    %rcx
   2a5c0:	4c 21 ca             	and    %r9,%rdx
   2a5c3:	74 eb                	je     2a5b0 <_libc__strlen+0x20>
   2a5c5:	48 21 ca             	and    %rcx,%rdx
   2a5c8:	74 e6                	je     2a5b0 <_libc__strlen+0x20>
   2a5ca:	48 29 f8             	sub    %rdi,%rax
   2a5cd:	48 0f bc d2          	bsf    %rdx,%rdx
   2a5d1:	48 c1 ea 03          	shr    $0x3,%rdx
   2a5d5:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   2a5da:	c3                   	ret    
   2a5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2a5e0:	88 c1                	mov    %al,%cl
   2a5e2:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   2a5e9:	80 e1 07             	and    $0x7,%cl
   2a5ec:	24 f8                	and    $0xf8,%al
   2a5ee:	c0 e1 03             	shl    $0x3,%cl
   2a5f1:	48 8b 10             	mov    (%rax),%rdx
   2a5f4:	48 d3 e6             	shl    %cl,%rsi
   2a5f7:	48 ff ce             	dec    %rsi
   2a5fa:	48 09 f2             	or     %rsi,%rdx
   2a5fd:	eb b4                	jmp    2a5b3 <_libc__strlen+0x23>

000000000002a5ff <memchr>:
   2a5ff:	f3 0f 1e fa          	endbr64 
   2a603:	55                   	push   %rbp
   2a604:	48 89 e5             	mov    %rsp,%rbp
   2a607:	48 83 ec 20          	sub    $0x20,%rsp
   2a60b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2a60f:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2a612:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2a616:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a61a:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   2a61d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a621:	89 ce                	mov    %ecx,%esi
   2a623:	48 89 c7             	mov    %rax,%rdi
   2a626:	e8 55 41 00 00       	call   2e780 <_libc__memchr>
   2a62b:	c9                   	leave  
   2a62c:	c3                   	ret    

000000000002a62d <memmove>:
   2a62d:	f3 0f 1e fa          	endbr64 
   2a631:	55                   	push   %rbp
   2a632:	48 89 e5             	mov    %rsp,%rbp
   2a635:	48 83 ec 20          	sub    $0x20,%rsp
   2a639:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2a63d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2a641:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2a645:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a649:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2a64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a651:	48 89 ce             	mov    %rcx,%rsi
   2a654:	48 89 c7             	mov    %rax,%rdi
   2a657:	e8 54 41 00 00       	call   2e7b0 <__memmove>
   2a65c:	c9                   	leave  
   2a65d:	c3                   	ret    

000000000002a65e <memmove_verw>:
   2a65e:	f3 0f 1e fa          	endbr64 
   2a662:	55                   	push   %rbp
   2a663:	48 89 e5             	mov    %rsp,%rbp
   2a666:	48 83 ec 50          	sub    $0x50,%rsp
   2a66a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2a66e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2a672:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2a676:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2a67b:	74 0a                	je     2a687 <memmove_verw+0x29>
   2a67d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a681:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2a685:	75 09                	jne    2a690 <memmove_verw+0x32>
   2a687:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a68b:	e9 72 01 00 00       	jmp    2a802 <memmove_verw+0x1a4>
   2a690:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a694:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2a698:	0f 83 a3 00 00 00    	jae    2a741 <memmove_verw+0xe3>
   2a69e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a6a2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2a6a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a6aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a6ae:	eb 52                	jmp    2a702 <memmove_verw+0xa4>
   2a6b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a6b4:	83 e0 07             	and    $0x7,%eax
   2a6b7:	48 85 c0             	test   %rax,%rax
   2a6ba:	75 24                	jne    2a6e0 <memmove_verw+0x82>
   2a6bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a6c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a6c4:	48 89 d6             	mov    %rdx,%rsi
   2a6c7:	48 89 c7             	mov    %rax,%rdi
   2a6ca:	e8 51 fe ff ff       	call   2a520 <__memcpy_8a>
   2a6cf:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   2a6d4:	48 83 45 e0 08       	addq   $0x8,-0x20(%rbp)
   2a6d9:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   2a6de:	eb 22                	jmp    2a702 <memmove_verw+0xa4>
   2a6e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a6e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a6e8:	48 89 d6             	mov    %rdx,%rsi
   2a6eb:	48 89 c7             	mov    %rax,%rdi
   2a6ee:	e8 0d fe ff ff       	call   2a500 <__memcpy_verw>
   2a6f3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2a6f8:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2a6fd:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2a702:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   2a707:	77 a7                	ja     2a6b0 <memmove_verw+0x52>
   2a709:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   2a710:	eb 21                	jmp    2a733 <memmove_verw+0xd5>
   2a712:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a716:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a71a:	48 89 d6             	mov    %rdx,%rsi
   2a71d:	48 89 c7             	mov    %rax,%rdi
   2a720:	e8 db fd ff ff       	call   2a500 <__memcpy_verw>
   2a725:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2a72a:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2a72f:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
   2a733:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2a736:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   2a73a:	77 d6                	ja     2a712 <memmove_verw+0xb4>
   2a73c:	e9 bd 00 00 00       	jmp    2a7fe <memmove_verw+0x1a0>
   2a741:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a745:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a749:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a74d:	48 01 d0             	add    %rdx,%rax
   2a750:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a754:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a758:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a75c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a760:	48 01 d0             	add    %rdx,%rax
   2a763:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a767:	eb 5b                	jmp    2a7c4 <memmove_verw+0x166>
   2a769:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a76d:	83 e0 07             	and    $0x7,%eax
   2a770:	48 83 f8 07          	cmp    $0x7,%rax
   2a774:	75 2c                	jne    2a7a2 <memmove_verw+0x144>
   2a776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a77a:	48 8d 50 f9          	lea    -0x7(%rax),%rdx
   2a77e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a782:	48 83 e8 07          	sub    $0x7,%rax
   2a786:	48 89 d6             	mov    %rdx,%rsi
   2a789:	48 89 c7             	mov    %rax,%rdi
   2a78c:	e8 8f fd ff ff       	call   2a520 <__memcpy_8a>
   2a791:	48 83 6d f8 08       	subq   $0x8,-0x8(%rbp)
   2a796:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
   2a79b:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   2a7a0:	eb 22                	jmp    2a7c4 <memmove_verw+0x166>
   2a7a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2a7a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a7aa:	48 89 d6             	mov    %rdx,%rsi
   2a7ad:	48 89 c7             	mov    %rax,%rdi
   2a7b0:	e8 4b fd ff ff       	call   2a500 <__memcpy_verw>
   2a7b5:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2a7ba:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   2a7bf:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2a7c4:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   2a7c9:	77 9e                	ja     2a769 <memmove_verw+0x10b>
   2a7cb:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   2a7d2:	eb 21                	jmp    2a7f5 <memmove_verw+0x197>
   2a7d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2a7d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a7dc:	48 89 d6             	mov    %rdx,%rsi
   2a7df:	48 89 c7             	mov    %rax,%rdi
   2a7e2:	e8 19 fd ff ff       	call   2a500 <__memcpy_verw>
   2a7e7:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2a7ec:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   2a7f1:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   2a7f5:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2a7f8:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   2a7fc:	77 d6                	ja     2a7d4 <memmove_verw+0x176>
   2a7fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a802:	c9                   	leave  
   2a803:	c3                   	ret    

000000000002a804 <__rv_alloc_D2A>:
   2a804:	f3 0f 1e fa          	endbr64 
   2a808:	55                   	push   %rbp
   2a809:	48 89 e5             	mov    %rsp,%rbp
   2a80c:	48 83 ec 20          	sub    $0x20,%rsp
   2a810:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2a813:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
   2a81a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   2a821:	eb 07                	jmp    2a82a <__rv_alloc_D2A+0x26>
   2a823:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   2a827:	d1 65 f0             	shll   -0x10(%rbp)
   2a82a:	8b 45 f0             	mov    -0x10(%rbp),%eax
   2a82d:	48 98                	cltq   
   2a82f:	48 8d 50 18          	lea    0x18(%rax),%rdx
   2a833:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a836:	48 98                	cltq   
   2a838:	48 39 c2             	cmp    %rax,%rdx
   2a83b:	76 e6                	jbe    2a823 <__rv_alloc_D2A+0x1f>
   2a83d:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2a840:	89 c7                	mov    %eax,%edi
   2a842:	e8 a8 23 00 00       	call   2cbef <__Balloc_D2A>
   2a847:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a84b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a850:	75 07                	jne    2a859 <__rv_alloc_D2A+0x55>
   2a852:	b8 00 00 00 00       	mov    $0x0,%eax
   2a857:	eb 11                	jmp    2a86a <__rv_alloc_D2A+0x66>
   2a859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a85d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   2a860:	89 10                	mov    %edx,(%rax)
   2a862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a866:	48 83 c0 04          	add    $0x4,%rax
   2a86a:	c9                   	leave  
   2a86b:	c3                   	ret    

000000000002a86c <__nrv_alloc_D2A>:
   2a86c:	f3 0f 1e fa          	endbr64 
   2a870:	55                   	push   %rbp
   2a871:	48 89 e5             	mov    %rsp,%rbp
   2a874:	48 83 ec 30          	sub    $0x30,%rsp
   2a878:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a87c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2a880:	89 55 dc             	mov    %edx,-0x24(%rbp)
   2a883:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2a886:	89 c7                	mov    %eax,%edi
   2a888:	e8 77 ff ff ff       	call   2a804 <__rv_alloc_D2A>
   2a88d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a895:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a899:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2a89e:	75 0c                	jne    2a8ac <__nrv_alloc_D2A+0x40>
   2a8a0:	b8 00 00 00 00       	mov    $0x0,%eax
   2a8a5:	eb 3b                	jmp    2a8e2 <__nrv_alloc_D2A+0x76>
   2a8a7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2a8ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a8b0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a8b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2a8b8:	0f b6 10             	movzbl (%rax),%edx
   2a8bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a8bf:	88 10                	mov    %dl,(%rax)
   2a8c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a8c5:	0f b6 00             	movzbl (%rax),%eax
   2a8c8:	84 c0                	test   %al,%al
   2a8ca:	75 db                	jne    2a8a7 <__nrv_alloc_D2A+0x3b>
   2a8cc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2a8d1:	74 0b                	je     2a8de <__nrv_alloc_D2A+0x72>
   2a8d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a8d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2a8db:	48 89 10             	mov    %rdx,(%rax)
   2a8de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a8e2:	c9                   	leave  
   2a8e3:	c3                   	ret    

000000000002a8e4 <__freedtoa>:
   2a8e4:	f3 0f 1e fa          	endbr64 
   2a8e8:	55                   	push   %rbp
   2a8e9:	48 89 e5             	mov    %rsp,%rbp
   2a8ec:	48 83 ec 20          	sub    $0x20,%rsp
   2a8f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a8f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a8f8:	48 83 e8 04          	sub    $0x4,%rax
   2a8fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a904:	8b 10                	mov    (%rax),%edx
   2a906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a90a:	89 50 08             	mov    %edx,0x8(%rax)
   2a90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a911:	8b 40 08             	mov    0x8(%rax),%eax
   2a914:	ba 01 00 00 00       	mov    $0x1,%edx
   2a919:	89 c1                	mov    %eax,%ecx
   2a91b:	d3 e2                	shl    %cl,%edx
   2a91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a921:	89 50 0c             	mov    %edx,0xc(%rax)
   2a924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a928:	48 89 c7             	mov    %rax,%rdi
   2a92b:	e8 05 24 00 00       	call   2cd35 <__Bfree_D2A>
   2a930:	90                   	nop
   2a931:	c9                   	leave  
   2a932:	c3                   	ret    

000000000002a933 <__quorem_D2A>:
   2a933:	f3 0f 1e fa          	endbr64 
   2a937:	55                   	push   %rbp
   2a938:	48 89 e5             	mov    %rsp,%rbp
   2a93b:	48 83 ec 60          	sub    $0x60,%rsp
   2a93f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2a943:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2a947:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2a94b:	8b 40 14             	mov    0x14(%rax),%eax
   2a94e:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2a951:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2a955:	8b 40 14             	mov    0x14(%rax),%eax
   2a958:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2a95b:	7e 0a                	jle    2a967 <__quorem_D2A+0x34>
   2a95d:	b8 00 00 00 00       	mov    $0x0,%eax
   2a962:	e9 cb 02 00 00       	jmp    2ac32 <__quorem_D2A+0x2ff>
   2a967:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2a96b:	48 83 c0 18          	add    $0x18,%rax
   2a96f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a973:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2a977:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2a97a:	48 98                	cltq   
   2a97c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2a983:	00 
   2a984:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a988:	48 01 d0             	add    %rdx,%rax
   2a98b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a98f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2a993:	48 83 c0 18          	add    $0x18,%rax
   2a997:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2a99b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2a99e:	48 98                	cltq   
   2a9a0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2a9a7:	00 
   2a9a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2a9ac:	48 01 d0             	add    %rdx,%rax
   2a9af:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a9b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a9b7:	8b 00                	mov    (%rax),%eax
   2a9b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2a9bd:	8b 12                	mov    (%rdx),%edx
   2a9bf:	8d 4a 01             	lea    0x1(%rdx),%ecx
   2a9c2:	ba 00 00 00 00       	mov    $0x0,%edx
   2a9c7:	f7 f1                	div    %ecx
   2a9c9:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2a9cc:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   2a9d0:	0f 84 09 01 00 00    	je     2aadf <__quorem_D2A+0x1ac>
   2a9d6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2a9dd:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   2a9e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a9e8:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2a9ec:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   2a9f0:	8b 00                	mov    (%rax),%eax
   2a9f2:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2a9f5:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2a9f8:	0f b7 c0             	movzwl %ax,%eax
   2a9fb:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   2a9ff:	89 c2                	mov    %eax,%edx
   2aa01:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2aa04:	01 d0                	add    %edx,%eax
   2aa06:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2aa09:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2aa0c:	c1 e8 10             	shr    $0x10,%eax
   2aa0f:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   2aa13:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2aa16:	c1 ea 10             	shr    $0x10,%edx
   2aa19:	01 d0                	add    %edx,%eax
   2aa1b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2aa1e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2aa21:	c1 e8 10             	shr    $0x10,%eax
   2aa24:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2aa27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2aa2b:	8b 00                	mov    (%rax),%eax
   2aa2d:	0f b7 d0             	movzwl %ax,%edx
   2aa30:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2aa33:	0f b7 c0             	movzwl %ax,%eax
   2aa36:	29 c2                	sub    %eax,%edx
   2aa38:	89 d0                	mov    %edx,%eax
   2aa3a:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   2aa3d:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2aa40:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2aa43:	c1 e8 10             	shr    $0x10,%eax
   2aa46:	83 e0 01             	and    $0x1,%eax
   2aa49:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2aa4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2aa50:	8b 00                	mov    (%rax),%eax
   2aa52:	c1 e8 10             	shr    $0x10,%eax
   2aa55:	89 c2                	mov    %eax,%edx
   2aa57:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2aa5a:	0f b7 c0             	movzwl %ax,%eax
   2aa5d:	29 c2                	sub    %eax,%edx
   2aa5f:	89 d0                	mov    %edx,%eax
   2aa61:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   2aa64:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2aa67:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2aa6a:	c1 e8 10             	shr    $0x10,%eax
   2aa6d:	83 e0 01             	and    $0x1,%eax
   2aa70:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2aa73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2aa77:	48 83 c0 02          	add    $0x2,%rax
   2aa7b:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2aa7e:	66 89 10             	mov    %dx,(%rax)
   2aa81:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2aa84:	89 c2                	mov    %eax,%edx
   2aa86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2aa8a:	66 89 10             	mov    %dx,(%rax)
   2aa8d:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2aa92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2aa96:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2aa9a:	0f 86 44 ff ff ff    	jbe    2a9e4 <__quorem_D2A+0xb1>
   2aaa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2aaa4:	8b 00                	mov    (%rax),%eax
   2aaa6:	85 c0                	test   %eax,%eax
   2aaa8:	75 35                	jne    2aadf <__quorem_D2A+0x1ac>
   2aaaa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2aaae:	48 83 c0 18          	add    $0x18,%rax
   2aab2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2aab6:	eb 04                	jmp    2aabc <__quorem_D2A+0x189>
   2aab8:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2aabc:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   2aac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2aac5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2aac9:	76 0a                	jbe    2aad5 <__quorem_D2A+0x1a2>
   2aacb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2aacf:	8b 00                	mov    (%rax),%eax
   2aad1:	85 c0                	test   %eax,%eax
   2aad3:	74 e3                	je     2aab8 <__quorem_D2A+0x185>
   2aad5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2aad9:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2aadc:	89 50 14             	mov    %edx,0x14(%rax)
   2aadf:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2aae3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2aae7:	48 89 d6             	mov    %rdx,%rsi
   2aaea:	48 89 c7             	mov    %rax,%rdi
   2aaed:	e8 4b 2c 00 00       	call   2d73d <__cmp_D2A>
   2aaf2:	85 c0                	test   %eax,%eax
   2aaf4:	0f 88 35 01 00 00    	js     2ac2f <__quorem_D2A+0x2fc>
   2aafa:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
   2aafe:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2ab05:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   2ab0c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ab10:	48 83 c0 18          	add    $0x18,%rax
   2ab14:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2ab18:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ab1c:	48 83 c0 18          	add    $0x18,%rax
   2ab20:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2ab24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ab28:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2ab2c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   2ab30:	8b 00                	mov    (%rax),%eax
   2ab32:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2ab35:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2ab38:	0f b7 d0             	movzwl %ax,%edx
   2ab3b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2ab3e:	01 d0                	add    %edx,%eax
   2ab40:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2ab43:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2ab46:	c1 e8 10             	shr    $0x10,%eax
   2ab49:	89 c2                	mov    %eax,%edx
   2ab4b:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2ab4e:	c1 e8 10             	shr    $0x10,%eax
   2ab51:	01 d0                	add    %edx,%eax
   2ab53:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2ab56:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2ab59:	c1 e8 10             	shr    $0x10,%eax
   2ab5c:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2ab5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ab63:	8b 00                	mov    (%rax),%eax
   2ab65:	0f b7 d0             	movzwl %ax,%edx
   2ab68:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2ab6b:	0f b7 c0             	movzwl %ax,%eax
   2ab6e:	29 c2                	sub    %eax,%edx
   2ab70:	89 d0                	mov    %edx,%eax
   2ab72:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   2ab75:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2ab78:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2ab7b:	c1 e8 10             	shr    $0x10,%eax
   2ab7e:	83 e0 01             	and    $0x1,%eax
   2ab81:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2ab84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ab88:	8b 00                	mov    (%rax),%eax
   2ab8a:	c1 e8 10             	shr    $0x10,%eax
   2ab8d:	89 c2                	mov    %eax,%edx
   2ab8f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2ab92:	0f b7 c0             	movzwl %ax,%eax
   2ab95:	29 c2                	sub    %eax,%edx
   2ab97:	89 d0                	mov    %edx,%eax
   2ab99:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   2ab9c:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2ab9f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2aba2:	c1 e8 10             	shr    $0x10,%eax
   2aba5:	83 e0 01             	and    $0x1,%eax
   2aba8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2abab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2abaf:	48 83 c0 02          	add    $0x2,%rax
   2abb3:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2abb6:	66 89 10             	mov    %dx,(%rax)
   2abb9:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2abbc:	89 c2                	mov    %eax,%edx
   2abbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2abc2:	66 89 10             	mov    %dx,(%rax)
   2abc5:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2abca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2abce:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2abd2:	0f 86 4c ff ff ff    	jbe    2ab24 <__quorem_D2A+0x1f1>
   2abd8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2abdc:	48 83 c0 18          	add    $0x18,%rax
   2abe0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2abe4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2abe7:	48 98                	cltq   
   2abe9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2abf0:	00 
   2abf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2abf5:	48 01 d0             	add    %rdx,%rax
   2abf8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2abfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ac00:	8b 00                	mov    (%rax),%eax
   2ac02:	85 c0                	test   %eax,%eax
   2ac04:	75 29                	jne    2ac2f <__quorem_D2A+0x2fc>
   2ac06:	eb 04                	jmp    2ac0c <__quorem_D2A+0x2d9>
   2ac08:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2ac0c:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   2ac11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ac15:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2ac19:	76 0a                	jbe    2ac25 <__quorem_D2A+0x2f2>
   2ac1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ac1f:	8b 00                	mov    (%rax),%eax
   2ac21:	85 c0                	test   %eax,%eax
   2ac23:	74 e3                	je     2ac08 <__quorem_D2A+0x2d5>
   2ac25:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ac29:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2ac2c:	89 50 14             	mov    %edx,0x14(%rax)
   2ac2f:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2ac32:	c9                   	leave  
   2ac33:	c3                   	ret    

000000000002ac34 <__dtoa>:
   2ac34:	f3 0f 1e fa          	endbr64 
   2ac38:	55                   	push   %rbp
   2ac39:	48 89 e5             	mov    %rsp,%rbp
   2ac3c:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   2ac43:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
   2ac4a:	ff 
   2ac4b:	89 bd 24 ff ff ff    	mov    %edi,-0xdc(%rbp)
   2ac51:	89 b5 20 ff ff ff    	mov    %esi,-0xe0(%rbp)
   2ac57:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   2ac5e:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   2ac65:	4c 89 85 08 ff ff ff 	mov    %r8,-0xf8(%rbp)
   2ac6c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ac73:	00 00 
   2ac75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ac79:	31 c0                	xor    %eax,%eax
   2ac7b:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
   2ac82:	ff 
   2ac83:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2ac88:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2ac8b:	85 c0                	test   %eax,%eax
   2ac8d:	79 1a                	jns    2aca9 <__dtoa+0x75>
   2ac8f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   2ac96:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2ac9c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2ac9f:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   2aca4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2aca7:	eb 0d                	jmp    2acb6 <__dtoa+0x82>
   2aca9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   2acb0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2acb6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2acb9:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   2acbe:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   2acc3:	75 60                	jne    2ad25 <__dtoa+0xf1>
   2acc5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2accc:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   2acd2:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2acd5:	85 c0                	test   %eax,%eax
   2acd7:	75 2c                	jne    2ad05 <__dtoa+0xd1>
   2acd9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2acdc:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2ace1:	85 c0                	test   %eax,%eax
   2ace3:	75 20                	jne    2ad05 <__dtoa+0xd1>
   2ace5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2acec:	ba 08 00 00 00       	mov    $0x8,%edx
   2acf1:	48 89 c6             	mov    %rax,%rsi
   2acf4:	48 8d 3d 55 8f 00 00 	lea    0x8f55(%rip),%rdi        # 33c50 <xdigs_upper.3344+0x10>
   2acfb:	e8 6c fb ff ff       	call   2a86c <__nrv_alloc_D2A>
   2ad00:	e9 cf 15 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ad05:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2ad0c:	ba 03 00 00 00       	mov    $0x3,%edx
   2ad11:	48 89 c6             	mov    %rax,%rsi
   2ad14:	48 8d 3d 3e 8f 00 00 	lea    0x8f3e(%rip),%rdi        # 33c59 <xdigs_upper.3344+0x19>
   2ad1b:	e8 4c fb ff ff       	call   2a86c <__nrv_alloc_D2A>
   2ad20:	e9 af 15 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ad25:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2ad2a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2ad2e:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2ad32:	7a 37                	jp     2ad6b <__dtoa+0x137>
   2ad34:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2ad38:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2ad3c:	75 2d                	jne    2ad6b <__dtoa+0x137>
   2ad3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2ad45:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2ad4b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2ad52:	ba 01 00 00 00       	mov    $0x1,%edx
   2ad57:	48 89 c6             	mov    %rax,%rsi
   2ad5a:	48 8d 3d fc 8e 00 00 	lea    0x8efc(%rip),%rdi        # 33c5d <xdigs_upper.3344+0x1d>
   2ad61:	e8 06 fb ff ff       	call   2a86c <__nrv_alloc_D2A>
   2ad66:	e9 69 15 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ad6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ad6f:	48 8d 8d 34 ff ff ff 	lea    -0xcc(%rbp),%rcx
   2ad76:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
   2ad7d:	48 89 ce             	mov    %rcx,%rsi
   2ad80:	48 89 d7             	mov    %rdx,%rdi
   2ad83:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2ad88:	e8 76 2e 00 00       	call   2dc03 <__d2b_D2A>
   2ad8d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2ad91:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2ad96:	75 0a                	jne    2ada2 <__dtoa+0x16e>
   2ad98:	b8 00 00 00 00       	mov    $0x0,%eax
   2ad9d:	e9 32 15 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ada2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2ada5:	c1 e8 14             	shr    $0x14,%eax
   2ada8:	25 ff 07 00 00       	and    $0x7ff,%eax
   2adad:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2adb3:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2adba:	74 39                	je     2adf5 <__dtoa+0x1c1>
   2adbc:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2adc1:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2adc6:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2adc9:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2adce:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2add1:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2add4:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2add9:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2addc:	81 ad 48 ff ff ff ff 	subl   $0x3ff,-0xb8(%rbp)
   2ade3:	03 00 00 
   2ade6:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   2aded:	00 00 00 
   2adf0:	e9 ab 00 00 00       	jmp    2aea0 <__dtoa+0x26c>
   2adf5:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2adfb:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   2ae01:	01 d0                	add    %edx,%eax
   2ae03:	05 32 04 00 00       	add    $0x432,%eax
   2ae08:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2ae0e:	83 bd 48 ff ff ff 20 	cmpl   $0x20,-0xb8(%rbp)
   2ae15:	7e 2a                	jle    2ae41 <__dtoa+0x20d>
   2ae17:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   2ae1a:	b8 40 00 00 00       	mov    $0x40,%eax
   2ae1f:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   2ae25:	89 d6                	mov    %edx,%esi
   2ae27:	89 c1                	mov    %eax,%ecx
   2ae29:	d3 e6                	shl    %cl,%esi
   2ae2b:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2ae2e:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2ae34:	83 e8 20             	sub    $0x20,%eax
   2ae37:	89 c1                	mov    %eax,%ecx
   2ae39:	d3 ea                	shr    %cl,%edx
   2ae3b:	89 d0                	mov    %edx,%eax
   2ae3d:	09 f0                	or     %esi,%eax
   2ae3f:	eb 14                	jmp    2ae55 <__dtoa+0x221>
   2ae41:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2ae44:	b8 20 00 00 00       	mov    $0x20,%eax
   2ae49:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   2ae4f:	89 c1                	mov    %eax,%ecx
   2ae51:	d3 e2                	shl    %cl,%edx
   2ae53:	89 d0                	mov    %edx,%eax
   2ae55:	89 45 80             	mov    %eax,-0x80(%rbp)
   2ae58:	8b 45 80             	mov    -0x80(%rbp),%eax
   2ae5b:	48 85 c0             	test   %rax,%rax
   2ae5e:	78 07                	js     2ae67 <__dtoa+0x233>
   2ae60:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   2ae65:	eb 15                	jmp    2ae7c <__dtoa+0x248>
   2ae67:	48 89 c2             	mov    %rax,%rdx
   2ae6a:	48 d1 ea             	shr    %rdx
   2ae6d:	83 e0 01             	and    $0x1,%eax
   2ae70:	48 09 c2             	or     %rax,%rdx
   2ae73:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
   2ae78:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   2ae7c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2ae81:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ae84:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   2ae89:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2ae8c:	81 ad 48 ff ff ff 33 	subl   $0x433,-0xb8(%rbp)
   2ae93:	04 00 00 
   2ae96:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
   2ae9d:	00 00 00 
   2aea0:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2aea5:	f2 0f 10 0d b3 8d 00 	movsd  0x8db3(%rip),%xmm1        # 33c60 <xdigs_upper.3344+0x20>
   2aeac:	00 
   2aead:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2aeb1:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2aeb5:	f2 0f 10 05 ab 8d 00 	movsd  0x8dab(%rip),%xmm0        # 33c68 <xdigs_upper.3344+0x28>
   2aebc:	00 
   2aebd:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2aec1:	f2 0f 10 05 a7 8d 00 	movsd  0x8da7(%rip),%xmm0        # 33c70 <xdigs_upper.3344+0x30>
   2aec8:	00 
   2aec9:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2aecd:	f2 0f 2a 95 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm2
   2aed4:	ff 
   2aed5:	f2 0f 10 05 9b 8d 00 	movsd  0x8d9b(%rip),%xmm0        # 33c78 <xdigs_upper.3344+0x38>
   2aedc:	00 
   2aedd:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2aee1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2aee5:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2aeea:	f2 0f 10 45 b8       	movsd  -0x48(%rbp),%xmm0
   2aeef:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2aef3:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2aef9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2aefd:	66 0f 2f 45 b8       	comisd -0x48(%rbp),%xmm0
   2af02:	76 1d                	jbe    2af21 <__dtoa+0x2ed>
   2af04:	f2 0f 2a 85 5c ff ff 	cvtsi2sdl -0xa4(%rbp),%xmm0
   2af0b:	ff 
   2af0c:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   2af11:	7a 07                	jp     2af1a <__dtoa+0x2e6>
   2af13:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   2af18:	74 07                	je     2af21 <__dtoa+0x2ed>
   2af1a:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   2af21:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
   2af28:	00 00 00 
   2af2b:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   2af32:	78 41                	js     2af75 <__dtoa+0x341>
   2af34:	83 bd 5c ff ff ff 16 	cmpl   $0x16,-0xa4(%rbp)
   2af3b:	7f 38                	jg     2af75 <__dtoa+0x341>
   2af3d:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2af42:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2af48:	48 98                	cltq   
   2af4a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2af51:	00 
   2af52:	48 8d 05 87 8e 00 00 	lea    0x8e87(%rip),%rax        # 33de0 <__tens_D2A>
   2af59:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2af5e:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2af62:	76 07                	jbe    2af6b <__dtoa+0x337>
   2af64:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   2af6b:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
   2af72:	00 00 00 
   2af75:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2af7b:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   2af81:	83 e8 01             	sub    $0x1,%eax
   2af84:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2af8a:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2af91:	78 18                	js     2afab <__dtoa+0x377>
   2af93:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   2af9a:	00 00 00 
   2af9d:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2afa3:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   2afa9:	eb 18                	jmp    2afc3 <__dtoa+0x38f>
   2afab:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2afb1:	f7 d8                	neg    %eax
   2afb3:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2afb9:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   2afc0:	00 00 00 
   2afc3:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   2afca:	78 24                	js     2aff0 <__dtoa+0x3bc>
   2afcc:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
   2afd3:	00 00 00 
   2afd6:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2afdc:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   2afe2:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2afe8:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   2afee:	eb 24                	jmp    2b014 <__dtoa+0x3e0>
   2aff0:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2aff6:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   2affc:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b002:	f7 d8                	neg    %eax
   2b004:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   2b00a:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   2b011:	00 00 00 
   2b014:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
   2b01b:	78 09                	js     2b026 <__dtoa+0x3f2>
   2b01d:	83 bd 24 ff ff ff 09 	cmpl   $0x9,-0xdc(%rbp)
   2b024:	7e 0a                	jle    2b030 <__dtoa+0x3fc>
   2b026:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
   2b02d:	00 00 00 
   2b030:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
   2b037:	00 00 00 
   2b03a:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   2b041:	7e 11                	jle    2b054 <__dtoa+0x420>
   2b043:	83 ad 24 ff ff ff 04 	subl   $0x4,-0xdc(%rbp)
   2b04a:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
   2b051:	00 00 00 
   2b054:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   2b05b:	00 00 00 
   2b05e:	c7 85 54 ff ff ff ff 	movl   $0xffffffff,-0xac(%rbp)
   2b065:	ff ff ff 
   2b068:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2b06e:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b074:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   2b07b:	0f 87 d2 00 00 00    	ja     2b153 <__dtoa+0x51f>
   2b081:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   2b087:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b08e:	00 
   2b08f:	48 8d 05 22 8c 00 00 	lea    0x8c22(%rip),%rax        # 33cb8 <xdigs_upper.3344+0x78>
   2b096:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2b099:	48 98                	cltq   
   2b09b:	48 8d 15 16 8c 00 00 	lea    0x8c16(%rip),%rdx        # 33cb8 <xdigs_upper.3344+0x78>
   2b0a2:	48 01 d0             	add    %rdx,%rax
   2b0a5:	3e ff e0             	notrack jmp *%rax
   2b0a8:	c7 85 48 ff ff ff 12 	movl   $0x12,-0xb8(%rbp)
   2b0af:	00 00 00 
   2b0b2:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
   2b0b9:	00 00 00 
   2b0bc:	e9 92 00 00 00       	jmp    2b153 <__dtoa+0x51f>
   2b0c1:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   2b0c8:	00 00 00 
   2b0cb:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   2b0d2:	7f 0a                	jg     2b0de <__dtoa+0x4aa>
   2b0d4:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
   2b0db:	00 00 00 
   2b0de:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   2b0e4:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2b0ea:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b0f0:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   2b0f6:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2b0fc:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b102:	eb 4f                	jmp    2b153 <__dtoa+0x51f>
   2b104:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   2b10b:	00 00 00 
   2b10e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
   2b114:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b11a:	01 d0                	add    %edx,%eax
   2b11c:	83 c0 01             	add    $0x1,%eax
   2b11f:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2b125:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b12b:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b131:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b137:	83 e8 01             	sub    $0x1,%eax
   2b13a:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   2b140:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2b147:	7f 0a                	jg     2b153 <__dtoa+0x51f>
   2b149:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   2b150:	00 00 00 
   2b153:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b159:	89 c7                	mov    %eax,%edi
   2b15b:	e8 a4 f6 ff ff       	call   2a804 <__rv_alloc_D2A>
   2b160:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2b164:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b168:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2b16c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   2b171:	75 0a                	jne    2b17d <__dtoa+0x549>
   2b173:	b8 00 00 00 00       	mov    $0x0,%eax
   2b178:	e9 57 11 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2b17d:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2b184:	0f 88 05 05 00 00    	js     2b68f <__dtoa+0xa5b>
   2b18a:	83 bd 50 ff ff ff 0e 	cmpl   $0xe,-0xb0(%rbp)
   2b191:	0f 8f f8 04 00 00    	jg     2b68f <__dtoa+0xa5b>
   2b197:	83 bd 78 ff ff ff 00 	cmpl   $0x0,-0x88(%rbp)
   2b19e:	0f 84 eb 04 00 00    	je     2b68f <__dtoa+0xa5b>
   2b1a4:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   2b1ab:	00 00 00 
   2b1ae:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b1b3:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2b1b8:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b1be:	89 45 84             	mov    %eax,-0x7c(%rbp)
   2b1c1:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   2b1c7:	89 45 88             	mov    %eax,-0x78(%rbp)
   2b1ca:	c7 85 4c ff ff ff 02 	movl   $0x2,-0xb4(%rbp)
   2b1d1:	00 00 00 
   2b1d4:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   2b1db:	0f 8e ce 00 00 00    	jle    2b2af <__dtoa+0x67b>
   2b1e1:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b1e7:	83 e0 0f             	and    $0xf,%eax
   2b1ea:	48 98                	cltq   
   2b1ec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b1f3:	00 
   2b1f4:	48 8d 05 e5 8b 00 00 	lea    0x8be5(%rip),%rax        # 33de0 <__tens_D2A>
   2b1fb:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b200:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2b205:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b20b:	c1 f8 04             	sar    $0x4,%eax
   2b20e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2b214:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2b21a:	83 e0 10             	and    $0x10,%eax
   2b21d:	85 c0                	test   %eax,%eax
   2b21f:	74 71                	je     2b292 <__dtoa+0x65e>
   2b221:	83 a5 58 ff ff ff 0f 	andl   $0xf,-0xa8(%rbp)
   2b228:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b22d:	f2 0f 10 0d 4b 8b 00 	movsd  0x8b4b(%rip),%xmm1        # 33d80 <__bigtens_D2A+0x20>
   2b234:	00 
   2b235:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2b239:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b23e:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2b245:	eb 4b                	jmp    2b292 <__dtoa+0x65e>
   2b247:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2b24d:	83 e0 01             	and    $0x1,%eax
   2b250:	85 c0                	test   %eax,%eax
   2b252:	74 31                	je     2b285 <__dtoa+0x651>
   2b254:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2b25b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b261:	48 98                	cltq   
   2b263:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b26a:	00 
   2b26b:	48 8d 05 ee 8a 00 00 	lea    0x8aee(%rip),%rax        # 33d60 <__bigtens_D2A>
   2b272:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b277:	f2 0f 10 4d b8       	movsd  -0x48(%rbp),%xmm1
   2b27c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b280:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2b285:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   2b28b:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2b292:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2b299:	75 ac                	jne    2b247 <__dtoa+0x613>
   2b29b:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b2a0:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   2b2a5:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b2aa:	e9 a1 00 00 00       	jmp    2b350 <__dtoa+0x71c>
   2b2af:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b2b5:	f7 d8                	neg    %eax
   2b2b7:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2b2ba:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2b2be:	0f 84 8c 00 00 00    	je     2b350 <__dtoa+0x71c>
   2b2c4:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b2c9:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2b2cc:	83 e0 0f             	and    $0xf,%eax
   2b2cf:	48 98                	cltq   
   2b2d1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b2d8:	00 
   2b2d9:	48 8d 05 00 8b 00 00 	lea    0x8b00(%rip),%rax        # 33de0 <__tens_D2A>
   2b2e0:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b2e5:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b2e9:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b2ee:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2b2f1:	c1 f8 04             	sar    $0x4,%eax
   2b2f4:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2b2fa:	eb 4b                	jmp    2b347 <__dtoa+0x713>
   2b2fc:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2b302:	83 e0 01             	and    $0x1,%eax
   2b305:	85 c0                	test   %eax,%eax
   2b307:	74 31                	je     2b33a <__dtoa+0x706>
   2b309:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2b310:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b315:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b31b:	48 98                	cltq   
   2b31d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b324:	00 
   2b325:	48 8d 05 34 8a 00 00 	lea    0x8a34(%rip),%rax        # 33d60 <__bigtens_D2A>
   2b32c:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b331:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b335:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b33a:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   2b340:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2b347:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2b34e:	75 ac                	jne    2b2fc <__dtoa+0x6c8>
   2b350:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2b357:	74 59                	je     2b3b2 <__dtoa+0x77e>
   2b359:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b35e:	f2 0f 10 05 1a 89 00 	movsd  0x891a(%rip),%xmm0        # 33c80 <xdigs_upper.3344+0x40>
   2b365:	00 
   2b366:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b36a:	76 46                	jbe    2b3b2 <__dtoa+0x77e>
   2b36c:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2b373:	7e 3d                	jle    2b3b2 <__dtoa+0x77e>
   2b375:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2b37c:	0f 8e e5 02 00 00    	jle    2b667 <__dtoa+0xa33>
   2b382:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2b388:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b38e:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   2b395:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b39a:	f2 0f 10 05 e6 88 00 	movsd  0x88e6(%rip),%xmm0        # 33c88 <xdigs_upper.3344+0x48>
   2b3a1:	00 
   2b3a2:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b3a6:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b3ab:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2b3b2:	f2 0f 2a 8d 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm1
   2b3b9:	ff 
   2b3ba:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b3bf:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2b3c3:	f2 0f 10 05 c5 88 00 	movsd  0x88c5(%rip),%xmm0        # 33c90 <xdigs_upper.3344+0x50>
   2b3ca:	00 
   2b3cb:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2b3cf:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2b3d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2b3d7:	2d 00 00 40 03       	sub    $0x3400000,%eax
   2b3dc:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2b3df:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2b3e6:	75 5f                	jne    2b447 <__dtoa+0x813>
   2b3e8:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   2b3ef:	00 
   2b3f0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b3f4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2b3f8:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b3fd:	f2 0f 10 0d 93 88 00 	movsd  0x8893(%rip),%xmm1        # 33c98 <xdigs_upper.3344+0x58>
   2b404:	00 
   2b405:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b409:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b40e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b413:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2b418:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b41c:	0f 87 f1 08 00 00    	ja     2bd13 <__dtoa+0x10df>
   2b422:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b427:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2b42c:	f3 0f 7e 15 6c 88 00 	movq   0x886c(%rip),%xmm2        # 33ca0 <xdigs_upper.3344+0x60>
   2b433:	00 
   2b434:	66 0f 57 c2          	xorpd  %xmm2,%xmm0
   2b438:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b43c:	0f 87 b7 08 00 00    	ja     2bcf9 <__dtoa+0x10c5>
   2b442:	e9 24 02 00 00       	jmp    2b66b <__dtoa+0xa37>
   2b447:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2b44e:	0f 84 fa 00 00 00    	je     2b54e <__dtoa+0x91a>
   2b454:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   2b45a:	83 e8 01             	sub    $0x1,%eax
   2b45d:	48 98                	cltq   
   2b45f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b466:	00 
   2b467:	48 8d 05 72 89 00 00 	lea    0x8972(%rip),%rax        # 33de0 <__tens_D2A>
   2b46e:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   2b473:	f2 0f 10 05 35 88 00 	movsd  0x8835(%rip),%xmm0        # 33cb0 <xdigs_upper.3344+0x70>
   2b47a:	00 
   2b47b:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2b47f:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2b484:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b488:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2b48d:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   2b494:	00 00 00 
   2b497:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b49c:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2b4a0:	89 45 90             	mov    %eax,-0x70(%rbp)
   2b4a3:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b4a8:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   2b4ad:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b4b1:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b4b6:	8b 45 90             	mov    -0x70(%rbp),%eax
   2b4b9:	89 c1                	mov    %eax,%ecx
   2b4bb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b4bf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2b4c3:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2b4c7:	8d 51 30             	lea    0x30(%rcx),%edx
   2b4ca:	88 10                	mov    %dl,(%rax)
   2b4cc:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b4d1:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2b4d6:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b4da:	0f 87 af 0d 00 00    	ja     2c28f <__dtoa+0x165b>
   2b4e0:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b4e5:	f2 0f 10 05 93 87 00 	movsd  0x8793(%rip),%xmm0        # 33c80 <xdigs_upper.3344+0x40>
   2b4ec:	00 
   2b4ed:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b4f1:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2b4f5:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2b4fa:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b4fe:	0f 87 d5 02 00 00    	ja     2b7d9 <__dtoa+0xba5>
   2b504:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2b50b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b511:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2b517:	0f 8d 4d 01 00 00    	jge    2b66a <__dtoa+0xa36>
   2b51d:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2b522:	f2 0f 10 05 5e 87 00 	movsd  0x875e(%rip),%xmm0        # 33c88 <xdigs_upper.3344+0x48>
   2b529:	00 
   2b52a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b52e:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2b533:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b538:	f2 0f 10 05 48 87 00 	movsd  0x8748(%rip),%xmm0        # 33c88 <xdigs_upper.3344+0x48>
   2b53f:	00 
   2b540:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b544:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b549:	e9 49 ff ff ff       	jmp    2b497 <__dtoa+0x863>
   2b54e:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2b553:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   2b559:	83 e8 01             	sub    $0x1,%eax
   2b55c:	48 98                	cltq   
   2b55e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b565:	00 
   2b566:	48 8d 05 73 88 00 00 	lea    0x8873(%rip),%rax        # 33de0 <__tens_D2A>
   2b56d:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b572:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b576:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2b57b:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   2b582:	00 00 00 
   2b585:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b58a:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2b58e:	89 45 90             	mov    %eax,-0x70(%rbp)
   2b591:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b596:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   2b59b:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b59f:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b5a4:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b5a9:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b5ad:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2b5b1:	7a 16                	jp     2b5c9 <__dtoa+0x995>
   2b5b3:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b5b7:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2b5bb:	75 0c                	jne    2b5c9 <__dtoa+0x995>
   2b5bd:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b5c3:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b5c9:	8b 45 90             	mov    -0x70(%rbp),%eax
   2b5cc:	89 c1                	mov    %eax,%ecx
   2b5ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b5d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2b5d6:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2b5da:	8d 51 30             	lea    0x30(%rcx),%edx
   2b5dd:	88 10                	mov    %dl,(%rax)
   2b5df:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b5e5:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2b5eb:	75 58                	jne    2b645 <__dtoa+0xa11>
   2b5ed:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b5f2:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   2b5f7:	f2 0f 10 0d b1 86 00 	movsd  0x86b1(%rip),%xmm1        # 33cb0 <xdigs_upper.3344+0x70>
   2b5fe:	00 
   2b5ff:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   2b603:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b607:	0f 87 cf 01 00 00    	ja     2b7dc <__dtoa+0xba8>
   2b60d:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b612:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   2b617:	f2 0f 10 05 91 86 00 	movsd  0x8691(%rip),%xmm0        # 33cb0 <xdigs_upper.3344+0x70>
   2b61e:	00 
   2b61f:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   2b623:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b627:	77 02                	ja     2b62b <__dtoa+0x9f7>
   2b629:	eb 40                	jmp    2b66b <__dtoa+0xa37>
   2b62b:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   2b630:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b634:	0f b6 00             	movzbl (%rax),%eax
   2b637:	3c 30                	cmp    $0x30,%al
   2b639:	74 f0                	je     2b62b <__dtoa+0x9f7>
   2b63b:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   2b640:	e9 4e 0c 00 00       	jmp    2c293 <__dtoa+0x165f>
   2b645:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2b64c:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b651:	f2 0f 10 05 2f 86 00 	movsd  0x862f(%rip),%xmm0        # 33c88 <xdigs_upper.3344+0x48>
   2b658:	00 
   2b659:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b65d:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b662:	e9 1e ff ff ff       	jmp    2b585 <__dtoa+0x951>
   2b667:	90                   	nop
   2b668:	eb 01                	jmp    2b66b <__dtoa+0xa37>
   2b66a:	90                   	nop
   2b66b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b66f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2b673:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2b678:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b67d:	8b 45 84             	mov    -0x7c(%rbp),%eax
   2b680:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2b686:	8b 45 88             	mov    -0x78(%rbp),%eax
   2b689:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2b68f:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   2b695:	85 c0                	test   %eax,%eax
   2b697:	0f 88 b7 01 00 00    	js     2b854 <__dtoa+0xc20>
   2b69d:	83 bd 5c ff ff ff 0e 	cmpl   $0xe,-0xa4(%rbp)
   2b6a4:	0f 8f aa 01 00 00    	jg     2b854 <__dtoa+0xc20>
   2b6aa:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2b6b0:	48 98                	cltq   
   2b6b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2b6b9:	00 
   2b6ba:	48 8d 05 1f 87 00 00 	lea    0x871f(%rip),%rax        # 33de0 <__tens_D2A>
   2b6c1:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2b6c6:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2b6cb:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   2b6d2:	79 4b                	jns    2b71f <__dtoa+0xaeb>
   2b6d4:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2b6db:	7f 42                	jg     2b71f <__dtoa+0xaeb>
   2b6dd:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   2b6e4:	00 
   2b6e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b6e9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2b6ed:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2b6f4:	0f 88 02 06 00 00    	js     2bcfc <__dtoa+0x10c8>
   2b6fa:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b6ff:	f2 0f 10 55 b8       	movsd  -0x48(%rbp),%xmm2
   2b704:	f2 0f 10 05 8c 85 00 	movsd  0x858c(%rip),%xmm0        # 33c98 <xdigs_upper.3344+0x58>
   2b70b:	00 
   2b70c:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2b710:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b714:	0f 83 e2 05 00 00    	jae    2bcfc <__dtoa+0x10c8>
   2b71a:	e9 f8 05 00 00       	jmp    2bd17 <__dtoa+0x10e3>
   2b71f:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   2b726:	00 00 00 
   2b729:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b72e:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   2b733:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2b737:	89 45 90             	mov    %eax,-0x70(%rbp)
   2b73a:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b73f:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   2b744:	f2 0f 59 4d b8       	mulsd  -0x48(%rbp),%xmm1
   2b749:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b74d:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b752:	8b 45 90             	mov    -0x70(%rbp),%eax
   2b755:	89 c1                	mov    %eax,%ecx
   2b757:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b75b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2b75f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2b763:	8d 51 30             	lea    0x30(%rcx),%edx
   2b766:	88 10                	mov    %dl,(%rax)
   2b768:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b76d:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b771:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2b775:	7a 0e                	jp     2b785 <__dtoa+0xb51>
   2b777:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b77b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2b77f:	0f 84 c3 00 00 00    	je     2b848 <__dtoa+0xc14>
   2b785:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b78b:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2b791:	0f 85 8f 00 00 00    	jne    2b826 <__dtoa+0xbf2>
   2b797:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b79c:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   2b7a0:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b7a5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b7aa:	66 0f 2f 45 b8       	comisd -0x48(%rbp),%xmm0
   2b7af:	77 2e                	ja     2b7df <__dtoa+0xbab>
   2b7b1:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2b7b6:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   2b7bb:	0f 8a 8d 00 00 00    	jp     2b84e <__dtoa+0xc1a>
   2b7c1:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   2b7c6:	74 05                	je     2b7cd <__dtoa+0xb99>
   2b7c8:	e9 81 00 00 00       	jmp    2b84e <__dtoa+0xc1a>
   2b7cd:	8b 45 90             	mov    -0x70(%rbp),%eax
   2b7d0:	83 e0 01             	and    $0x1,%eax
   2b7d3:	85 c0                	test   %eax,%eax
   2b7d5:	74 77                	je     2b84e <__dtoa+0xc1a>
   2b7d7:	eb 06                	jmp    2b7df <__dtoa+0xbab>
   2b7d9:	90                   	nop
   2b7da:	eb 24                	jmp    2b800 <__dtoa+0xbcc>
   2b7dc:	90                   	nop
   2b7dd:	eb 21                	jmp    2b800 <__dtoa+0xbcc>
   2b7df:	90                   	nop
   2b7e0:	f3 0f 1e fa          	endbr64 
   2b7e4:	eb 1a                	jmp    2b800 <__dtoa+0xbcc>
   2b7e6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b7ea:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2b7ee:	75 10                	jne    2b800 <__dtoa+0xbcc>
   2b7f0:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   2b7f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b7fb:	c6 00 30             	movb   $0x30,(%rax)
   2b7fe:	eb 10                	jmp    2b810 <__dtoa+0xbdc>
   2b800:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   2b805:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b809:	0f b6 00             	movzbl (%rax),%eax
   2b80c:	3c 39                	cmp    $0x39,%al
   2b80e:	74 d6                	je     2b7e6 <__dtoa+0xbb2>
   2b810:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b814:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2b818:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2b81c:	0f b6 10             	movzbl (%rax),%edx
   2b81f:	83 c2 01             	add    $0x1,%edx
   2b822:	88 10                	mov    %dl,(%rax)
   2b824:	eb 28                	jmp    2b84e <__dtoa+0xc1a>
   2b826:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2b82d:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2b832:	f2 0f 10 05 4e 84 00 	movsd  0x844e(%rip),%xmm0        # 33c88 <xdigs_upper.3344+0x48>
   2b839:	00 
   2b83a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2b83e:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b843:	e9 e1 fe ff ff       	jmp    2b729 <__dtoa+0xaf5>
   2b848:	90                   	nop
   2b849:	e9 45 0a 00 00       	jmp    2c293 <__dtoa+0x165f>
   2b84e:	90                   	nop
   2b84f:	e9 3f 0a 00 00       	jmp    2c293 <__dtoa+0x165f>
   2b854:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2b85a:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   2b860:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2b866:	89 45 94             	mov    %eax,-0x6c(%rbp)
   2b869:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2b870:	00 
   2b871:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b875:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2b879:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2b880:	74 62                	je     2b8e4 <__dtoa+0xcb0>
   2b882:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
   2b889:	74 0d                	je     2b898 <__dtoa+0xc64>
   2b88b:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   2b891:	05 33 04 00 00       	add    $0x433,%eax
   2b896:	eb 0f                	jmp    2b8a7 <__dtoa+0xc73>
   2b898:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2b89e:	ba 36 00 00 00       	mov    $0x36,%edx
   2b8a3:	29 c2                	sub    %eax,%edx
   2b8a5:	89 d0                	mov    %edx,%eax
   2b8a7:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2b8ad:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b8b3:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   2b8b9:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b8bf:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   2b8c5:	bf 01 00 00 00       	mov    $0x1,%edi
   2b8ca:	e8 ad 17 00 00       	call   2d07c <__i2b_D2A>
   2b8cf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2b8d3:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2b8d8:	75 0a                	jne    2b8e4 <__dtoa+0xcb0>
   2b8da:	b8 00 00 00 00       	mov    $0x0,%eax
   2b8df:	e9 f0 09 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2b8e4:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2b8eb:	7e 46                	jle    2b933 <__dtoa+0xcff>
   2b8ed:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   2b8f4:	7e 3d                	jle    2b933 <__dtoa+0xcff>
   2b8f6:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   2b8fc:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
   2b902:	0f 4e 85 6c ff ff ff 	cmovle -0x94(%rbp),%eax
   2b909:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2b90f:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b915:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   2b91b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b921:	29 85 68 ff ff ff    	sub    %eax,-0x98(%rbp)
   2b927:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2b92d:	29 85 6c ff ff ff    	sub    %eax,-0x94(%rbp)
   2b933:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   2b93a:	0f 8e df 00 00 00    	jle    2ba1f <__dtoa+0xdeb>
   2b940:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2b947:	0f 84 a9 00 00 00    	je     2b9f6 <__dtoa+0xdc2>
   2b94d:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
   2b951:	7e 62                	jle    2b9b5 <__dtoa+0xd81>
   2b953:	8b 55 94             	mov    -0x6c(%rbp),%edx
   2b956:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b95a:	89 d6                	mov    %edx,%esi
   2b95c:	48 89 c7             	mov    %rax,%rdi
   2b95f:	e8 80 1a 00 00       	call   2d3e4 <__pow5mult_D2A>
   2b964:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2b968:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2b96d:	75 0a                	jne    2b979 <__dtoa+0xd45>
   2b96f:	b8 00 00 00 00       	mov    $0x0,%eax
   2b974:	e9 5b 09 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2b979:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2b97d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b981:	48 89 d6             	mov    %rdx,%rsi
   2b984:	48 89 c7             	mov    %rax,%rdi
   2b987:	e8 36 17 00 00       	call   2d0c2 <__mult_D2A>
   2b98c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2b990:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2b995:	75 0a                	jne    2b9a1 <__dtoa+0xd6d>
   2b997:	b8 00 00 00 00       	mov    $0x0,%eax
   2b99c:	e9 33 09 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2b9a1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2b9a5:	48 89 c7             	mov    %rax,%rdi
   2b9a8:	e8 88 13 00 00       	call   2cd35 <__Bfree_D2A>
   2b9ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b9b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2b9b5:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2b9bb:	2b 45 94             	sub    -0x6c(%rbp),%eax
   2b9be:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2b9c4:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2b9cb:	74 52                	je     2ba1f <__dtoa+0xdeb>
   2b9cd:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   2b9d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2b9d7:	89 d6                	mov    %edx,%esi
   2b9d9:	48 89 c7             	mov    %rax,%rdi
   2b9dc:	e8 03 1a 00 00       	call   2d3e4 <__pow5mult_D2A>
   2b9e1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2b9e5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2b9ea:	75 33                	jne    2ba1f <__dtoa+0xdeb>
   2b9ec:	b8 00 00 00 00       	mov    $0x0,%eax
   2b9f1:	e9 de 08 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2b9f6:	8b 95 40 ff ff ff    	mov    -0xc0(%rbp),%edx
   2b9fc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ba00:	89 d6                	mov    %edx,%esi
   2ba02:	48 89 c7             	mov    %rax,%rdi
   2ba05:	e8 da 19 00 00       	call   2d3e4 <__pow5mult_D2A>
   2ba0a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2ba0e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2ba13:	75 0a                	jne    2ba1f <__dtoa+0xdeb>
   2ba15:	b8 00 00 00 00       	mov    $0x0,%eax
   2ba1a:	e9 b5 08 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ba1f:	bf 01 00 00 00       	mov    $0x1,%edi
   2ba24:	e8 53 16 00 00       	call   2d07c <__i2b_D2A>
   2ba29:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2ba2d:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2ba32:	75 0a                	jne    2ba3e <__dtoa+0xe0a>
   2ba34:	b8 00 00 00 00       	mov    $0x0,%eax
   2ba39:	e9 96 08 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ba3e:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   2ba45:	7e 29                	jle    2ba70 <__dtoa+0xe3c>
   2ba47:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
   2ba4d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2ba51:	89 d6                	mov    %edx,%esi
   2ba53:	48 89 c7             	mov    %rax,%rdi
   2ba56:	e8 89 19 00 00       	call   2d3e4 <__pow5mult_D2A>
   2ba5b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2ba5f:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2ba64:	75 0a                	jne    2ba70 <__dtoa+0xe3c>
   2ba66:	b8 00 00 00 00       	mov    $0x0,%eax
   2ba6b:	e9 64 08 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2ba70:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
   2ba77:	00 00 00 
   2ba7a:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   2ba81:	7e 09                	jle    2ba8c <__dtoa+0xe58>
   2ba83:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2ba8a:	74 37                	je     2bac3 <__dtoa+0xe8f>
   2ba8c:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2ba8f:	85 c0                	test   %eax,%eax
   2ba91:	75 30                	jne    2bac3 <__dtoa+0xe8f>
   2ba93:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2ba96:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2ba9b:	85 c0                	test   %eax,%eax
   2ba9d:	75 24                	jne    2bac3 <__dtoa+0xe8f>
   2ba9f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2baa2:	25 00 00 e0 7f       	and    $0x7fe00000,%eax
   2baa7:	85 c0                	test   %eax,%eax
   2baa9:	74 18                	je     2bac3 <__dtoa+0xe8f>
   2baab:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
   2bab2:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
   2bab9:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%rbp)
   2bac0:	00 00 00 
   2bac3:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   2baca:	74 29                	je     2baf5 <__dtoa+0xec1>
   2bacc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2bad0:	8b 40 14             	mov    0x14(%rax),%eax
   2bad3:	8d 50 ff             	lea    -0x1(%rax),%edx
   2bad6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2bada:	48 63 d2             	movslq %edx,%rdx
   2badd:	48 83 c2 04          	add    $0x4,%rdx
   2bae1:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   2bae5:	89 c7                	mov    %eax,%edi
   2bae7:	e8 09 15 00 00       	call   2cff5 <__hi0bits_D2A>
   2baec:	ba 20 00 00 00       	mov    $0x20,%edx
   2baf1:	29 c2                	sub    %eax,%edx
   2baf3:	eb 05                	jmp    2bafa <__dtoa+0xec6>
   2baf5:	ba 01 00 00 00       	mov    $0x1,%edx
   2bafa:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   2bb00:	01 d0                	add    %edx,%eax
   2bb02:	83 e0 1f             	and    $0x1f,%eax
   2bb05:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2bb0b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2bb12:	74 11                	je     2bb25 <__dtoa+0xef1>
   2bb14:	b8 20 00 00 00       	mov    $0x20,%eax
   2bb19:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   2bb1f:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2bb25:	83 bd 48 ff ff ff 04 	cmpl   $0x4,-0xb8(%rbp)
   2bb2c:	7e 2d                	jle    2bb5b <__dtoa+0xf27>
   2bb2e:	83 ad 48 ff ff ff 04 	subl   $0x4,-0xb8(%rbp)
   2bb35:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb3b:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   2bb41:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb47:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   2bb4d:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb53:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   2bb59:	eb 34                	jmp    2bb8f <__dtoa+0xf5b>
   2bb5b:	83 bd 48 ff ff ff 03 	cmpl   $0x3,-0xb8(%rbp)
   2bb62:	7f 2b                	jg     2bb8f <__dtoa+0xf5b>
   2bb64:	83 85 48 ff ff ff 1c 	addl   $0x1c,-0xb8(%rbp)
   2bb6b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb71:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   2bb77:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb7d:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   2bb83:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2bb89:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   2bb8f:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2bb96:	7e 29                	jle    2bbc1 <__dtoa+0xf8d>
   2bb98:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   2bb9e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bba2:	89 d6                	mov    %edx,%esi
   2bba4:	48 89 c7             	mov    %rax,%rdi
   2bba7:	e8 04 1a 00 00       	call   2d5b0 <__lshift_D2A>
   2bbac:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2bbb0:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2bbb5:	75 0a                	jne    2bbc1 <__dtoa+0xf8d>
   2bbb7:	b8 00 00 00 00       	mov    $0x0,%eax
   2bbbc:	e9 13 07 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bbc1:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   2bbc8:	7e 29                	jle    2bbf3 <__dtoa+0xfbf>
   2bbca:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   2bbd0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2bbd4:	89 d6                	mov    %edx,%esi
   2bbd6:	48 89 c7             	mov    %rax,%rdi
   2bbd9:	e8 d2 19 00 00       	call   2d5b0 <__lshift_D2A>
   2bbde:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2bbe2:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2bbe7:	75 0a                	jne    2bbf3 <__dtoa+0xfbf>
   2bbe9:	b8 00 00 00 00       	mov    $0x0,%eax
   2bbee:	e9 e1 06 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bbf3:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2bbfa:	0f 84 89 00 00 00    	je     2bc89 <__dtoa+0x1055>
   2bc00:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2bc04:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bc08:	48 89 d6             	mov    %rdx,%rsi
   2bc0b:	48 89 c7             	mov    %rax,%rdi
   2bc0e:	e8 2a 1b 00 00       	call   2d73d <__cmp_D2A>
   2bc13:	85 c0                	test   %eax,%eax
   2bc15:	79 72                	jns    2bc89 <__dtoa+0x1055>
   2bc17:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   2bc1e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bc22:	ba 00 00 00 00       	mov    $0x0,%edx
   2bc27:	be 0a 00 00 00       	mov    $0xa,%esi
   2bc2c:	48 89 c7             	mov    %rax,%rdi
   2bc2f:	e8 77 12 00 00       	call   2ceab <__multadd_D2A>
   2bc34:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2bc38:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2bc3d:	75 0a                	jne    2bc49 <__dtoa+0x1015>
   2bc3f:	b8 00 00 00 00       	mov    $0x0,%eax
   2bc44:	e9 8b 06 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bc49:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2bc50:	74 2b                	je     2bc7d <__dtoa+0x1049>
   2bc52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bc56:	ba 00 00 00 00       	mov    $0x0,%edx
   2bc5b:	be 0a 00 00 00       	mov    $0xa,%esi
   2bc60:	48 89 c7             	mov    %rax,%rdi
   2bc63:	e8 43 12 00 00       	call   2ceab <__multadd_D2A>
   2bc68:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2bc6c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2bc71:	75 0a                	jne    2bc7d <__dtoa+0x1049>
   2bc73:	b8 00 00 00 00       	mov    $0x0,%eax
   2bc78:	e9 57 06 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bc7d:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   2bc83:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2bc89:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2bc90:	0f 8f 9c 00 00 00    	jg     2bd32 <__dtoa+0x10fe>
   2bc96:	83 bd 24 ff ff ff 03 	cmpl   $0x3,-0xdc(%rbp)
   2bc9d:	74 0d                	je     2bcac <__dtoa+0x1078>
   2bc9f:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   2bca6:	0f 85 86 00 00 00    	jne    2bd32 <__dtoa+0x10fe>
   2bcac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2bcb0:	ba 00 00 00 00       	mov    $0x0,%edx
   2bcb5:	be 05 00 00 00       	mov    $0x5,%esi
   2bcba:	48 89 c7             	mov    %rax,%rdi
   2bcbd:	e8 e9 11 00 00       	call   2ceab <__multadd_D2A>
   2bcc2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2bcc6:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2bccb:	75 0a                	jne    2bcd7 <__dtoa+0x10a3>
   2bccd:	b8 00 00 00 00       	mov    $0x0,%eax
   2bcd2:	e9 fd 05 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bcd7:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2bcde:	78 1f                	js     2bcff <__dtoa+0x10cb>
   2bce0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2bce4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bce8:	48 89 d6             	mov    %rdx,%rsi
   2bceb:	48 89 c7             	mov    %rax,%rdi
   2bcee:	e8 4a 1a 00 00       	call   2d73d <__cmp_D2A>
   2bcf3:	85 c0                	test   %eax,%eax
   2bcf5:	7f 1f                	jg     2bd16 <__dtoa+0x10e2>
   2bcf7:	eb 06                	jmp    2bcff <__dtoa+0x10cb>
   2bcf9:	90                   	nop
   2bcfa:	eb 04                	jmp    2bd00 <__dtoa+0x10cc>
   2bcfc:	90                   	nop
   2bcfd:	eb 01                	jmp    2bd00 <__dtoa+0x10cc>
   2bcff:	90                   	nop
   2bd00:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   2bd06:	f7 d0                	not    %eax
   2bd08:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2bd0e:	e9 3e 05 00 00       	jmp    2c251 <__dtoa+0x161d>
   2bd13:	90                   	nop
   2bd14:	eb 01                	jmp    2bd17 <__dtoa+0x10e3>
   2bd16:	90                   	nop
   2bd17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2bd1b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2bd1f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2bd23:	c6 00 31             	movb   $0x31,(%rax)
   2bd26:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   2bd2d:	e9 1f 05 00 00       	jmp    2c251 <__dtoa+0x161d>
   2bd32:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2bd39:	0f 84 b3 03 00 00    	je     2c0f2 <__dtoa+0x14be>
   2bd3f:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2bd46:	7e 29                	jle    2bd71 <__dtoa+0x113d>
   2bd48:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   2bd4e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bd52:	89 d6                	mov    %edx,%esi
   2bd54:	48 89 c7             	mov    %rax,%rdi
   2bd57:	e8 54 18 00 00       	call   2d5b0 <__lshift_D2A>
   2bd5c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2bd60:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2bd65:	75 0a                	jne    2bd71 <__dtoa+0x113d>
   2bd67:	b8 00 00 00 00       	mov    $0x0,%eax
   2bd6c:	e9 63 05 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bd71:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bd75:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2bd79:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   2bd80:	74 79                	je     2bdfb <__dtoa+0x11c7>
   2bd82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bd86:	8b 40 08             	mov    0x8(%rax),%eax
   2bd89:	89 c7                	mov    %eax,%edi
   2bd8b:	e8 5f 0e 00 00       	call   2cbef <__Balloc_D2A>
   2bd90:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2bd94:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2bd99:	75 0a                	jne    2bda5 <__dtoa+0x1171>
   2bd9b:	b8 00 00 00 00       	mov    $0x0,%eax
   2bda0:	e9 2f 05 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bda5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2bda9:	8b 40 14             	mov    0x14(%rax),%eax
   2bdac:	48 98                	cltq   
   2bdae:	48 83 c0 02          	add    $0x2,%rax
   2bdb2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2bdb9:	00 
   2bdba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2bdbe:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2bdc2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bdc6:	48 83 c0 10          	add    $0x10,%rax
   2bdca:	48 89 ce             	mov    %rcx,%rsi
   2bdcd:	48 89 c7             	mov    %rax,%rdi
   2bdd0:	e8 1a 76 ff ff       	call   233ef <memcpy>
   2bdd5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bdd9:	be 01 00 00 00       	mov    $0x1,%esi
   2bdde:	48 89 c7             	mov    %rax,%rdi
   2bde1:	e8 ca 17 00 00       	call   2d5b0 <__lshift_D2A>
   2bde6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2bdea:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2bdef:	75 0a                	jne    2bdfb <__dtoa+0x11c7>
   2bdf1:	b8 00 00 00 00       	mov    $0x0,%eax
   2bdf6:	e9 d9 04 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bdfb:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   2be02:	00 00 00 
   2be05:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2be09:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2be0d:	48 89 d6             	mov    %rdx,%rsi
   2be10:	48 89 c7             	mov    %rax,%rdi
   2be13:	e8 1b eb ff ff       	call   2a933 <__quorem_D2A>
   2be18:	83 c0 30             	add    $0x30,%eax
   2be1b:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   2be21:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2be25:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2be29:	48 89 d6             	mov    %rdx,%rsi
   2be2c:	48 89 c7             	mov    %rax,%rdi
   2be2f:	e8 09 19 00 00       	call   2d73d <__cmp_D2A>
   2be34:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2be3a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2be3e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2be42:	48 89 d6             	mov    %rdx,%rsi
   2be45:	48 89 c7             	mov    %rax,%rdi
   2be48:	e8 c4 19 00 00       	call   2d811 <__diff_D2A>
   2be4d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2be51:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2be56:	75 0a                	jne    2be62 <__dtoa+0x122e>
   2be58:	b8 00 00 00 00       	mov    $0x0,%eax
   2be5d:	e9 72 04 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2be62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2be66:	8b 40 10             	mov    0x10(%rax),%eax
   2be69:	85 c0                	test   %eax,%eax
   2be6b:	75 15                	jne    2be82 <__dtoa+0x124e>
   2be6d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2be71:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2be75:	48 89 d6             	mov    %rdx,%rsi
   2be78:	48 89 c7             	mov    %rax,%rdi
   2be7b:	e8 bd 18 00 00       	call   2d73d <__cmp_D2A>
   2be80:	eb 05                	jmp    2be87 <__dtoa+0x1253>
   2be82:	b8 01 00 00 00       	mov    $0x1,%eax
   2be87:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2be8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2be8e:	48 89 c7             	mov    %rax,%rdi
   2be91:	e8 9f 0e 00 00       	call   2cd35 <__Bfree_D2A>
   2be96:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2be9a:	75 49                	jne    2bee5 <__dtoa+0x12b1>
   2be9c:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   2bea3:	74 40                	je     2bee5 <__dtoa+0x12b1>
   2bea5:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2bea8:	83 e0 01             	and    $0x1,%eax
   2beab:	85 c0                	test   %eax,%eax
   2bead:	75 36                	jne    2bee5 <__dtoa+0x12b1>
   2beaf:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   2beb6:	0f 84 10 01 00 00    	je     2bfcc <__dtoa+0x1398>
   2bebc:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2bec3:	7e 07                	jle    2becc <__dtoa+0x1298>
   2bec5:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
   2becc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2bed0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2bed4:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2bed8:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   2bede:	88 10                	mov    %dl,(%rax)
   2bee0:	e9 6c 03 00 00       	jmp    2c251 <__dtoa+0x161d>
   2bee5:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2beec:	78 28                	js     2bf16 <__dtoa+0x12e2>
   2beee:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2bef5:	0f 85 c0 00 00 00    	jne    2bfbb <__dtoa+0x1387>
   2befb:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   2bf02:	0f 84 b3 00 00 00    	je     2bfbb <__dtoa+0x1387>
   2bf08:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2bf0b:	83 e0 01             	and    $0x1,%eax
   2bf0e:	85 c0                	test   %eax,%eax
   2bf10:	0f 85 a5 00 00 00    	jne    2bfbb <__dtoa+0x1387>
   2bf16:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bf1a:	8b 40 18             	mov    0x18(%rax),%eax
   2bf1d:	85 c0                	test   %eax,%eax
   2bf1f:	75 0c                	jne    2bf2d <__dtoa+0x12f9>
   2bf21:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bf25:	8b 40 14             	mov    0x14(%rax),%eax
   2bf28:	83 f8 01             	cmp    $0x1,%eax
   2bf2b:	7e 71                	jle    2bf9e <__dtoa+0x136a>
   2bf2d:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2bf31:	7e 6e                	jle    2bfa1 <__dtoa+0x136d>
   2bf33:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bf37:	be 01 00 00 00       	mov    $0x1,%esi
   2bf3c:	48 89 c7             	mov    %rax,%rdi
   2bf3f:	e8 6c 16 00 00       	call   2d5b0 <__lshift_D2A>
   2bf44:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2bf48:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2bf4d:	75 0a                	jne    2bf59 <__dtoa+0x1325>
   2bf4f:	b8 00 00 00 00       	mov    $0x0,%eax
   2bf54:	e9 7b 03 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2bf59:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2bf5d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2bf61:	48 89 d6             	mov    %rdx,%rsi
   2bf64:	48 89 c7             	mov    %rax,%rdi
   2bf67:	e8 d1 17 00 00       	call   2d73d <__cmp_D2A>
   2bf6c:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2bf6f:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2bf73:	7f 13                	jg     2bf88 <__dtoa+0x1354>
   2bf75:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2bf79:	75 26                	jne    2bfa1 <__dtoa+0x136d>
   2bf7b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2bf81:	83 e0 01             	and    $0x1,%eax
   2bf84:	85 c0                	test   %eax,%eax
   2bf86:	74 19                	je     2bfa1 <__dtoa+0x136d>
   2bf88:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2bf8e:	8d 50 01             	lea    0x1(%rax),%edx
   2bf91:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%rbp)
   2bf97:	83 f8 39             	cmp    $0x39,%eax
   2bf9a:	74 33                	je     2bfcf <__dtoa+0x139b>
   2bf9c:	eb 03                	jmp    2bfa1 <__dtoa+0x136d>
   2bf9e:	90                   	nop
   2bf9f:	eb 01                	jmp    2bfa2 <__dtoa+0x136e>
   2bfa1:	90                   	nop
   2bfa2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2bfa6:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2bfaa:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2bfae:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   2bfb4:	88 10                	mov    %dl,(%rax)
   2bfb6:	e9 96 02 00 00       	jmp    2c251 <__dtoa+0x161d>
   2bfbb:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2bfbf:	7e 41                	jle    2c002 <__dtoa+0x13ce>
   2bfc1:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   2bfc8:	75 1a                	jne    2bfe4 <__dtoa+0x13b0>
   2bfca:	eb 04                	jmp    2bfd0 <__dtoa+0x139c>
   2bfcc:	90                   	nop
   2bfcd:	eb 01                	jmp    2bfd0 <__dtoa+0x139c>
   2bfcf:	90                   	nop
   2bfd0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2bfd4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2bfd8:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2bfdc:	c6 00 39             	movb   $0x39,(%rax)
   2bfdf:	e9 0b 02 00 00       	jmp    2c1ef <__dtoa+0x15bb>
   2bfe4:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2bfea:	89 c1                	mov    %eax,%ecx
   2bfec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2bff0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2bff4:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2bff8:	8d 51 01             	lea    0x1(%rcx),%edx
   2bffb:	88 10                	mov    %dl,(%rax)
   2bffd:	e9 4f 02 00 00       	jmp    2c251 <__dtoa+0x161d>
   2c002:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c006:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2c00a:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2c00e:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   2c014:	88 10                	mov    %dl,(%rax)
   2c016:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2c01c:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2c022:	0f 84 64 01 00 00    	je     2c18c <__dtoa+0x1558>
   2c028:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c02c:	ba 00 00 00 00       	mov    $0x0,%edx
   2c031:	be 0a 00 00 00       	mov    $0xa,%esi
   2c036:	48 89 c7             	mov    %rax,%rdi
   2c039:	e8 6d 0e 00 00       	call   2ceab <__multadd_D2A>
   2c03e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2c042:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2c047:	75 0a                	jne    2c053 <__dtoa+0x141f>
   2c049:	b8 00 00 00 00       	mov    $0x0,%eax
   2c04e:	e9 81 02 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c053:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c057:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   2c05b:	75 33                	jne    2c090 <__dtoa+0x145c>
   2c05d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c061:	ba 00 00 00 00       	mov    $0x0,%edx
   2c066:	be 0a 00 00 00       	mov    $0xa,%esi
   2c06b:	48 89 c7             	mov    %rax,%rdi
   2c06e:	e8 38 0e 00 00       	call   2ceab <__multadd_D2A>
   2c073:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2c077:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c07b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2c07f:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2c084:	75 60                	jne    2c0e6 <__dtoa+0x14b2>
   2c086:	b8 00 00 00 00       	mov    $0x0,%eax
   2c08b:	e9 44 02 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c090:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c094:	ba 00 00 00 00       	mov    $0x0,%edx
   2c099:	be 0a 00 00 00       	mov    $0xa,%esi
   2c09e:	48 89 c7             	mov    %rax,%rdi
   2c0a1:	e8 05 0e 00 00       	call   2ceab <__multadd_D2A>
   2c0a6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2c0aa:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2c0af:	75 0a                	jne    2c0bb <__dtoa+0x1487>
   2c0b1:	b8 00 00 00 00       	mov    $0x0,%eax
   2c0b6:	e9 19 02 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c0bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c0bf:	ba 00 00 00 00       	mov    $0x0,%edx
   2c0c4:	be 0a 00 00 00       	mov    $0xa,%esi
   2c0c9:	48 89 c7             	mov    %rax,%rdi
   2c0cc:	e8 da 0d 00 00       	call   2ceab <__multadd_D2A>
   2c0d1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2c0d5:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2c0da:	75 0a                	jne    2c0e6 <__dtoa+0x14b2>
   2c0dc:	b8 00 00 00 00       	mov    $0x0,%eax
   2c0e1:	e9 ee 01 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c0e6:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2c0ed:	e9 13 fd ff ff       	jmp    2be05 <__dtoa+0x11d1>
   2c0f2:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   2c0f9:	00 00 00 
   2c0fc:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2c100:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c104:	48 89 d6             	mov    %rdx,%rsi
   2c107:	48 89 c7             	mov    %rax,%rdi
   2c10a:	e8 24 e8 ff ff       	call   2a933 <__quorem_D2A>
   2c10f:	83 c0 30             	add    $0x30,%eax
   2c112:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   2c118:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c11c:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2c120:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2c124:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   2c12a:	88 10                	mov    %dl,(%rax)
   2c12c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c130:	8b 40 18             	mov    0x18(%rax),%eax
   2c133:	85 c0                	test   %eax,%eax
   2c135:	75 10                	jne    2c147 <__dtoa+0x1513>
   2c137:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c13b:	8b 40 14             	mov    0x14(%rax),%eax
   2c13e:	83 f8 01             	cmp    $0x1,%eax
   2c141:	0f 8e 09 01 00 00    	jle    2c250 <__dtoa+0x161c>
   2c147:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2c14d:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2c153:	7d 3a                	jge    2c18f <__dtoa+0x155b>
   2c155:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c159:	ba 00 00 00 00       	mov    $0x0,%edx
   2c15e:	be 0a 00 00 00       	mov    $0xa,%esi
   2c163:	48 89 c7             	mov    %rax,%rdi
   2c166:	e8 40 0d 00 00       	call   2ceab <__multadd_D2A>
   2c16b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2c16f:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2c174:	75 0a                	jne    2c180 <__dtoa+0x154c>
   2c176:	b8 00 00 00 00       	mov    $0x0,%eax
   2c17b:	e9 54 01 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c180:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   2c187:	e9 70 ff ff ff       	jmp    2c0fc <__dtoa+0x14c8>
   2c18c:	90                   	nop
   2c18d:	eb 01                	jmp    2c190 <__dtoa+0x155c>
   2c18f:	90                   	nop
   2c190:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c194:	be 01 00 00 00       	mov    $0x1,%esi
   2c199:	48 89 c7             	mov    %rax,%rdi
   2c19c:	e8 0f 14 00 00       	call   2d5b0 <__lshift_D2A>
   2c1a1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2c1a5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2c1aa:	75 0a                	jne    2c1b6 <__dtoa+0x1582>
   2c1ac:	b8 00 00 00 00       	mov    $0x0,%eax
   2c1b1:	e9 1e 01 00 00       	jmp    2c2d4 <__dtoa+0x16a0>
   2c1b6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   2c1ba:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c1be:	48 89 d6             	mov    %rdx,%rsi
   2c1c1:	48 89 c7             	mov    %rax,%rdi
   2c1c4:	e8 74 15 00 00       	call   2d73d <__cmp_D2A>
   2c1c9:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2c1cf:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2c1d6:	7f 16                	jg     2c1ee <__dtoa+0x15ba>
   2c1d8:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2c1df:	75 58                	jne    2c239 <__dtoa+0x1605>
   2c1e1:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   2c1e7:	83 e0 01             	and    $0x1,%eax
   2c1ea:	85 c0                	test   %eax,%eax
   2c1ec:	74 4b                	je     2c239 <__dtoa+0x1605>
   2c1ee:	90                   	nop
   2c1ef:	eb 22                	jmp    2c213 <__dtoa+0x15df>
   2c1f1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c1f5:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2c1f9:	75 18                	jne    2c213 <__dtoa+0x15df>
   2c1fb:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   2c202:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c206:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2c20a:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2c20e:	c6 00 31             	movb   $0x31,(%rax)
   2c211:	eb 3e                	jmp    2c251 <__dtoa+0x161d>
   2c213:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   2c218:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c21c:	0f b6 00             	movzbl (%rax),%eax
   2c21f:	3c 39                	cmp    $0x39,%al
   2c221:	74 ce                	je     2c1f1 <__dtoa+0x15bd>
   2c223:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c227:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2c22b:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2c22f:	0f b6 10             	movzbl (%rax),%edx
   2c232:	83 c2 01             	add    $0x1,%edx
   2c235:	88 10                	mov    %dl,(%rax)
   2c237:	eb 18                	jmp    2c251 <__dtoa+0x161d>
   2c239:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   2c23e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c242:	0f b6 00             	movzbl (%rax),%eax
   2c245:	3c 30                	cmp    $0x30,%al
   2c247:	74 f0                	je     2c239 <__dtoa+0x1605>
   2c249:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   2c24e:	eb 01                	jmp    2c251 <__dtoa+0x161d>
   2c250:	90                   	nop
   2c251:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2c255:	48 89 c7             	mov    %rax,%rdi
   2c258:	e8 d8 0a 00 00       	call   2cd35 <__Bfree_D2A>
   2c25d:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2c262:	74 2e                	je     2c292 <__dtoa+0x165e>
   2c264:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2c269:	74 16                	je     2c281 <__dtoa+0x164d>
   2c26b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c26f:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   2c273:	74 0c                	je     2c281 <__dtoa+0x164d>
   2c275:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c279:	48 89 c7             	mov    %rax,%rdi
   2c27c:	e8 b4 0a 00 00       	call   2cd35 <__Bfree_D2A>
   2c281:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c285:	48 89 c7             	mov    %rax,%rdi
   2c288:	e8 a8 0a 00 00       	call   2cd35 <__Bfree_D2A>
   2c28d:	eb 04                	jmp    2c293 <__dtoa+0x165f>
   2c28f:	90                   	nop
   2c290:	eb 01                	jmp    2c293 <__dtoa+0x165f>
   2c292:	90                   	nop
   2c293:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2c297:	48 89 c7             	mov    %rax,%rdi
   2c29a:	e8 96 0a 00 00       	call   2cd35 <__Bfree_D2A>
   2c29f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c2a3:	c6 00 00             	movb   $0x0,(%rax)
   2c2a6:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2c2ac:	8d 50 01             	lea    0x1(%rax),%edx
   2c2af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2c2b6:	89 10                	mov    %edx,(%rax)
   2c2b8:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)
   2c2bf:	00 
   2c2c0:	74 0e                	je     2c2d0 <__dtoa+0x169c>
   2c2c2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2c2c9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2c2cd:	48 89 10             	mov    %rdx,(%rax)
   2c2d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c2d4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2c2d8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2c2df:	00 00 
   2c2e1:	74 05                	je     2c2e8 <__dtoa+0x16b4>
   2c2e3:	e8 0f 75 ff ff       	call   237f7 <__stack_chk_fail>
   2c2e8:	c9                   	leave  
   2c2e9:	c3                   	ret    

000000000002c2ea <roundup>:
   2c2ea:	f3 0f 1e fa          	endbr64 
   2c2ee:	55                   	push   %rbp
   2c2ef:	48 89 e5             	mov    %rsp,%rbp
   2c2f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2c2f6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2c2f9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c2fc:	48 98                	cltq   
   2c2fe:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c302:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c306:	48 01 d0             	add    %rdx,%rax
   2c309:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c30d:	eb 24                	jmp    2c333 <roundup+0x49>
   2c30f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c313:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2c317:	75 0e                	jne    2c327 <roundup+0x3d>
   2c319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c31d:	c6 00 01             	movb   $0x1,(%rax)
   2c320:	b8 01 00 00 00       	mov    $0x1,%eax
   2c325:	eb 2c                	jmp    2c353 <roundup+0x69>
   2c327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c32b:	c6 00 00             	movb   $0x0,(%rax)
   2c32e:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2c333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c337:	0f b6 00             	movzbl (%rax),%eax
   2c33a:	3c 0f                	cmp    $0xf,%al
   2c33c:	74 d1                	je     2c30f <roundup+0x25>
   2c33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c342:	0f b6 00             	movzbl (%rax),%eax
   2c345:	8d 50 01             	lea    0x1(%rax),%edx
   2c348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c34c:	88 10                	mov    %dl,(%rax)
   2c34e:	b8 00 00 00 00       	mov    $0x0,%eax
   2c353:	5d                   	pop    %rbp
   2c354:	c3                   	ret    

000000000002c355 <dorounding>:
   2c355:	f3 0f 1e fa          	endbr64 
   2c359:	55                   	push   %rbp
   2c35a:	48 89 e5             	mov    %rsp,%rbp
   2c35d:	48 83 ec 28          	sub    $0x28,%rsp
   2c361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2c365:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   2c368:	89 55 e0             	mov    %edx,-0x20(%rbp)
   2c36b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
   2c36f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   2c376:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c379:	48 63 d0             	movslq %eax,%rdx
   2c37c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c380:	48 01 d0             	add    %rdx,%rax
   2c383:	0f b6 00             	movzbl (%rax),%eax
   2c386:	3c 08                	cmp    $0x8,%al
   2c388:	7f 31                	jg     2c3bb <dorounding+0x66>
   2c38a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c38d:	48 63 d0             	movslq %eax,%rdx
   2c390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c394:	48 01 d0             	add    %rdx,%rax
   2c397:	0f b6 00             	movzbl (%rax),%eax
   2c39a:	3c 08                	cmp    $0x8,%al
   2c39c:	75 31                	jne    2c3cf <dorounding+0x7a>
   2c39e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c3a1:	83 c0 01             	add    $0x1,%eax
   2c3a4:	48 63 d0             	movslq %eax,%rdx
   2c3a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c3ab:	48 01 d0             	add    %rdx,%rax
   2c3ae:	0f b6 00             	movzbl (%rax),%eax
   2c3b1:	0f be c0             	movsbl %al,%eax
   2c3b4:	83 e0 01             	and    $0x1,%eax
   2c3b7:	85 c0                	test   %eax,%eax
   2c3b9:	74 14                	je     2c3cf <dorounding+0x7a>
   2c3bb:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   2c3be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c3c2:	89 d6                	mov    %edx,%esi
   2c3c4:	48 89 c7             	mov    %rax,%rdi
   2c3c7:	e8 1e ff ff ff       	call   2c2ea <roundup>
   2c3cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2c3cf:	90                   	nop
   2c3d0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2c3d4:	74 0f                	je     2c3e5 <dorounding+0x90>
   2c3d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c3da:	8b 00                	mov    (%rax),%eax
   2c3dc:	8d 50 04             	lea    0x4(%rax),%edx
   2c3df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c3e3:	89 10                	mov    %edx,(%rax)
   2c3e5:	90                   	nop
   2c3e6:	c9                   	leave  
   2c3e7:	c3                   	ret    

000000000002c3e8 <__hdtoa>:
   2c3e8:	f3 0f 1e fa          	endbr64 
   2c3ec:	55                   	push   %rbp
   2c3ed:	48 89 e5             	mov    %rsp,%rbp
   2c3f0:	48 83 ec 50          	sub    $0x50,%rsp
   2c3f4:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   2c3f9:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   2c3fd:	89 75 cc             	mov    %esi,-0x34(%rbp)
   2c400:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2c404:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   2c408:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
   2c40c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   2c410:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2c414:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c418:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   2c41c:	c0 e8 07             	shr    $0x7,%al
   2c41f:	0f b6 d0             	movzbl %al,%edx
   2c422:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c426:	89 10                	mov    %edx,(%rax)
   2c428:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c42c:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2c431:	e8 a5 19 00 00       	call   2dddb <__fpclassify>
   2c436:	83 f8 04             	cmp    $0x4,%eax
   2c439:	0f 87 f3 00 00 00    	ja     2c532 <__hdtoa+0x14a>
   2c43f:	89 c0                	mov    %eax,%eax
   2c441:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2c448:	00 
   2c449:	48 8d 05 b0 78 00 00 	lea    0x78b0(%rip),%rax        # 33d00 <xdigs_upper.3344+0xc0>
   2c450:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2c453:	48 98                	cltq   
   2c455:	48 8d 15 a4 78 00 00 	lea    0x78a4(%rip),%rdx        # 33d00 <xdigs_upper.3344+0xc0>
   2c45c:	48 01 d0             	add    %rdx,%rax
   2c45f:	3e ff e0             	notrack jmp *%rax
   2c462:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c466:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2c46a:	66 c1 e8 04          	shr    $0x4,%ax
   2c46e:	66 25 ff 07          	and    $0x7ff,%ax
   2c472:	0f b7 c0             	movzwl %ax,%eax
   2c475:	8d 90 02 fc ff ff    	lea    -0x3fe(%rax),%edx
   2c47b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c47f:	89 10                	mov    %edx,(%rax)
   2c481:	e9 b1 00 00 00       	jmp    2c537 <__hdtoa+0x14f>
   2c486:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c48a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2c490:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2c494:	ba 01 00 00 00       	mov    $0x1,%edx
   2c499:	48 89 c6             	mov    %rax,%rsi
   2c49c:	48 8d 3d 2d 78 00 00 	lea    0x782d(%rip),%rdi        # 33cd0 <xdigs_upper.3344+0x90>
   2c4a3:	e8 c4 e3 ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c4a8:	e9 8b 02 00 00       	jmp    2c738 <__hdtoa+0x350>
   2c4ad:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
   2c4b2:	f2 0f 10 05 26 78 00 	movsd  0x7826(%rip),%xmm0        # 33ce0 <xdigs_upper.3344+0xa0>
   2c4b9:	00 
   2c4ba:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2c4be:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   2c4c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c4c7:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2c4cb:	66 c1 e8 04          	shr    $0x4,%ax
   2c4cf:	66 25 ff 07          	and    $0x7ff,%ax
   2c4d3:	0f b7 c0             	movzwl %ax,%eax
   2c4d6:	8d 90 00 fa ff ff    	lea    -0x600(%rax),%edx
   2c4dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c4e0:	89 10                	mov    %edx,(%rax)
   2c4e2:	eb 53                	jmp    2c537 <__hdtoa+0x14f>
   2c4e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c4e8:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2c4ee:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2c4f2:	ba 08 00 00 00       	mov    $0x8,%edx
   2c4f7:	48 89 c6             	mov    %rax,%rsi
   2c4fa:	48 8d 3d d1 77 00 00 	lea    0x77d1(%rip),%rdi        # 33cd2 <xdigs_upper.3344+0x92>
   2c501:	e8 66 e3 ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c506:	e9 2d 02 00 00       	jmp    2c738 <__hdtoa+0x350>
   2c50b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c50f:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2c515:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2c519:	ba 03 00 00 00       	mov    $0x3,%edx
   2c51e:	48 89 c6             	mov    %rax,%rsi
   2c521:	48 8d 3d b3 77 00 00 	lea    0x77b3(%rip),%rdi        # 33cdb <xdigs_upper.3344+0x9b>
   2c528:	e8 3f e3 ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c52d:	e9 06 02 00 00       	jmp    2c738 <__hdtoa+0x350>
   2c532:	e8 64 55 00 00       	call   31a9b <abort>
   2c537:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2c53b:	75 07                	jne    2c544 <__hdtoa+0x15c>
   2c53d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
   2c544:	8b 05 de 77 00 00    	mov    0x77de(%rip),%eax        # 33d28 <sigfigs.2602>
   2c54a:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   2c54d:	0f 4d 45 cc          	cmovge -0x34(%rbp),%eax
   2c551:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2c554:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c557:	89 c7                	mov    %eax,%edi
   2c559:	e8 a6 e2 ff ff       	call   2a804 <__rv_alloc_D2A>
   2c55e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c562:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2c567:	75 0a                	jne    2c573 <__hdtoa+0x18b>
   2c569:	b8 00 00 00 00       	mov    $0x0,%eax
   2c56e:	e9 c5 01 00 00       	jmp    2c738 <__hdtoa+0x350>
   2c573:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c576:	48 98                	cltq   
   2c578:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c580:	48 01 d0             	add    %rdx,%rax
   2c583:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c587:	eb 0c                	jmp    2c595 <__hdtoa+0x1ad>
   2c589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c58d:	c6 00 00             	movb   $0x0,(%rax)
   2c590:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c595:	8b 05 8d 77 00 00    	mov    0x778d(%rip),%eax        # 33d28 <sigfigs.2602>
   2c59b:	48 98                	cltq   
   2c59d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c5a5:	48 01 d0             	add    %rdx,%rax
   2c5a8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2c5ac:	77 db                	ja     2c589 <__hdtoa+0x1a1>
   2c5ae:	eb 27                	jmp    2c5d7 <__hdtoa+0x1ef>
   2c5b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c5b4:	8b 00                	mov    (%rax),%eax
   2c5b6:	83 e0 0f             	and    $0xf,%eax
   2c5b9:	89 c2                	mov    %eax,%edx
   2c5bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c5bf:	88 10                	mov    %dl,(%rax)
   2c5c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c5c5:	8b 00                	mov    (%rax),%eax
   2c5c7:	c1 e8 04             	shr    $0x4,%eax
   2c5ca:	89 c2                	mov    %eax,%edx
   2c5cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c5d0:	89 10                	mov    %edx,(%rax)
   2c5d2:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c5d7:	8b 05 4b 77 00 00    	mov    0x774b(%rip),%eax        # 33d28 <sigfigs.2602>
   2c5dd:	48 98                	cltq   
   2c5df:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   2c5e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c5e7:	48 01 d0             	add    %rdx,%rax
   2c5ea:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2c5ee:	76 58                	jbe    2c648 <__hdtoa+0x260>
   2c5f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c5f4:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2c5f8:	77 b6                	ja     2c5b0 <__hdtoa+0x1c8>
   2c5fa:	eb 4c                	jmp    2c648 <__hdtoa+0x260>
   2c5fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c600:	8b 40 04             	mov    0x4(%rax),%eax
   2c603:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2c608:	83 e0 0f             	and    $0xf,%eax
   2c60b:	89 c2                	mov    %eax,%edx
   2c60d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c611:	88 10                	mov    %dl,(%rax)
   2c613:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c617:	8b 40 04             	mov    0x4(%rax),%eax
   2c61a:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2c61f:	c1 f8 04             	sar    $0x4,%eax
   2c622:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2c627:	89 c2                	mov    %eax,%edx
   2c629:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c62d:	89 d1                	mov    %edx,%ecx
   2c62f:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   2c635:	8b 50 04             	mov    0x4(%rax),%edx
   2c638:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
   2c63e:	09 ca                	or     %ecx,%edx
   2c640:	89 50 04             	mov    %edx,0x4(%rax)
   2c643:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c64c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2c650:	77 aa                	ja     2c5fc <__hdtoa+0x214>
   2c652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c656:	8b 40 04             	mov    0x4(%rax),%eax
   2c659:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2c65e:	83 c8 01             	or     $0x1,%eax
   2c661:	89 c2                	mov    %eax,%edx
   2c663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c667:	88 10                	mov    %dl,(%rax)
   2c669:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2c66d:	79 26                	jns    2c695 <__hdtoa+0x2ad>
   2c66f:	8b 05 b3 76 00 00    	mov    0x76b3(%rip),%eax        # 33d28 <sigfigs.2602>
   2c675:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2c678:	eb 04                	jmp    2c67e <__hdtoa+0x296>
   2c67a:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
   2c67e:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c681:	83 e8 01             	sub    $0x1,%eax
   2c684:	48 63 d0             	movslq %eax,%rdx
   2c687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c68b:	48 01 d0             	add    %rdx,%rax
   2c68e:	0f b6 00             	movzbl (%rax),%eax
   2c691:	84 c0                	test   %al,%al
   2c693:	74 e5                	je     2c67a <__hdtoa+0x292>
   2c695:	8b 05 8d 76 00 00    	mov    0x768d(%rip),%eax        # 33d28 <sigfigs.2602>
   2c69b:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   2c69e:	7d 35                	jge    2c6d5 <__hdtoa+0x2ed>
   2c6a0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c6a3:	48 63 d0             	movslq %eax,%rdx
   2c6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c6aa:	48 01 d0             	add    %rdx,%rax
   2c6ad:	0f b6 00             	movzbl (%rax),%eax
   2c6b0:	84 c0                	test   %al,%al
   2c6b2:	74 21                	je     2c6d5 <__hdtoa+0x2ed>
   2c6b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c6b8:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   2c6bc:	c0 e8 07             	shr    $0x7,%al
   2c6bf:	0f b6 d0             	movzbl %al,%edx
   2c6c2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   2c6c6:	8b 75 cc             	mov    -0x34(%rbp),%esi
   2c6c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c6cd:	48 89 c7             	mov    %rax,%rdi
   2c6d0:	e8 80 fc ff ff       	call   2c355 <dorounding>
   2c6d5:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c6d8:	48 63 d0             	movslq %eax,%rdx
   2c6db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c6df:	48 01 d0             	add    %rdx,%rax
   2c6e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c6e6:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2c6eb:	74 0b                	je     2c6f8 <__hdtoa+0x310>
   2c6ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2c6f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2c6f5:	48 89 10             	mov    %rdx,(%rax)
   2c6f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c6fc:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c700:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2c704:	c6 00 00             	movb   $0x0,(%rax)
   2c707:	eb 21                	jmp    2c72a <__hdtoa+0x342>
   2c709:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c70d:	0f b6 00             	movzbl (%rax),%eax
   2c710:	0f be c0             	movsbl %al,%eax
   2c713:	89 c2                	mov    %eax,%edx
   2c715:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2c719:	48 01 d0             	add    %rdx,%rax
   2c71c:	0f b6 10             	movzbl (%rax),%edx
   2c71f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c723:	88 10                	mov    %dl,(%rax)
   2c725:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c72a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c72e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2c732:	73 d5                	jae    2c709 <__hdtoa+0x321>
   2c734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c738:	c9                   	leave  
   2c739:	c3                   	ret    

000000000002c73a <__hldtoa>:
   2c73a:	f3 0f 1e fa          	endbr64 
   2c73e:	55                   	push   %rbp
   2c73f:	48 89 e5             	mov    %rsp,%rbp
   2c742:	48 83 ec 50          	sub    $0x50,%rsp
   2c746:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2c74a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2c74d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2c751:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2c755:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2c759:	48 8d 45 10          	lea    0x10(%rbp),%rax
   2c75d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2c761:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c765:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2c769:	c0 e8 07             	shr    $0x7,%al
   2c76c:	0f b6 d0             	movzbl %al,%edx
   2c76f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c773:	89 10                	mov    %edx,(%rax)
   2c775:	db 6d 10             	fldt   0x10(%rbp)
   2c778:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   2c77d:	db 3c 24             	fstpt  (%rsp)
   2c780:	e8 5e 17 00 00       	call   2dee3 <__fpclassifyl>
   2c785:	48 83 c4 10          	add    $0x10,%rsp
   2c789:	83 f8 04             	cmp    $0x4,%eax
   2c78c:	0f 87 e3 00 00 00    	ja     2c875 <__hldtoa+0x13b>
   2c792:	89 c0                	mov    %eax,%eax
   2c794:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2c79b:	00 
   2c79c:	48 8d 05 71 75 00 00 	lea    0x7571(%rip),%rax        # 33d14 <xdigs_upper.3344+0xd4>
   2c7a3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2c7a6:	48 98                	cltq   
   2c7a8:	48 8d 15 65 75 00 00 	lea    0x7565(%rip),%rdx        # 33d14 <xdigs_upper.3344+0xd4>
   2c7af:	48 01 d0             	add    %rdx,%rax
   2c7b2:	3e ff e0             	notrack jmp *%rax
   2c7b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c7b9:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2c7bd:	66 25 ff 7f          	and    $0x7fff,%ax
   2c7c1:	0f b7 c0             	movzwl %ax,%eax
   2c7c4:	8d 90 ff bf ff ff    	lea    -0x4001(%rax),%edx
   2c7ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c7ce:	89 10                	mov    %edx,(%rax)
   2c7d0:	e9 a5 00 00 00       	jmp    2c87a <__hldtoa+0x140>
   2c7d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c7d9:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2c7df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c7e3:	ba 01 00 00 00       	mov    $0x1,%edx
   2c7e8:	48 89 c6             	mov    %rax,%rsi
   2c7eb:	48 8d 3d de 74 00 00 	lea    0x74de(%rip),%rdi        # 33cd0 <xdigs_upper.3344+0x90>
   2c7f2:	e8 75 e0 ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c7f7:	e9 58 02 00 00       	jmp    2ca54 <__hldtoa+0x31a>
   2c7fc:	db 6d 10             	fldt   0x10(%rbp)
   2c7ff:	db 2d eb 74 00 00    	fldt   0x74eb(%rip)        # 33cf0 <xdigs_upper.3344+0xb0>
   2c805:	de c9                	fmulp  %st,%st(1)
   2c807:	db 7d 10             	fstpt  0x10(%rbp)
   2c80a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c80e:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2c812:	66 25 ff 7f          	and    $0x7fff,%ax
   2c816:	0f b7 c0             	movzwl %ax,%eax
   2c819:	8d 90 fd bd ff ff    	lea    -0x4203(%rax),%edx
   2c81f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c823:	89 10                	mov    %edx,(%rax)
   2c825:	eb 53                	jmp    2c87a <__hldtoa+0x140>
   2c827:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c82b:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2c831:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c835:	ba 08 00 00 00       	mov    $0x8,%edx
   2c83a:	48 89 c6             	mov    %rax,%rsi
   2c83d:	48 8d 3d 8e 74 00 00 	lea    0x748e(%rip),%rdi        # 33cd2 <xdigs_upper.3344+0x92>
   2c844:	e8 23 e0 ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c849:	e9 06 02 00 00       	jmp    2ca54 <__hldtoa+0x31a>
   2c84e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2c852:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2c858:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c85c:	ba 03 00 00 00       	mov    $0x3,%edx
   2c861:	48 89 c6             	mov    %rax,%rsi
   2c864:	48 8d 3d 70 74 00 00 	lea    0x7470(%rip),%rdi        # 33cdb <xdigs_upper.3344+0x9b>
   2c86b:	e8 fc df ff ff       	call   2a86c <__nrv_alloc_D2A>
   2c870:	e9 df 01 00 00       	jmp    2ca54 <__hldtoa+0x31a>
   2c875:	e8 21 52 00 00       	call   31a9b <abort>
   2c87a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2c87e:	75 07                	jne    2c887 <__hldtoa+0x14d>
   2c880:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
   2c887:	8b 05 9f 74 00 00    	mov    0x749f(%rip),%eax        # 33d2c <sigfigs.2637>
   2c88d:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   2c890:	0f 4d 45 d4          	cmovge -0x2c(%rbp),%eax
   2c894:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2c897:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c89a:	89 c7                	mov    %eax,%edi
   2c89c:	e8 63 df ff ff       	call   2a804 <__rv_alloc_D2A>
   2c8a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c8a5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2c8aa:	75 0a                	jne    2c8b6 <__hldtoa+0x17c>
   2c8ac:	b8 00 00 00 00       	mov    $0x0,%eax
   2c8b1:	e9 9e 01 00 00       	jmp    2ca54 <__hldtoa+0x31a>
   2c8b6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2c8b9:	48 98                	cltq   
   2c8bb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c8c3:	48 01 d0             	add    %rdx,%rax
   2c8c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c8ca:	eb 0c                	jmp    2c8d8 <__hldtoa+0x19e>
   2c8cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c8d0:	c6 00 00             	movb   $0x0,(%rax)
   2c8d3:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c8d8:	8b 05 4e 74 00 00    	mov    0x744e(%rip),%eax        # 33d2c <sigfigs.2637>
   2c8de:	48 98                	cltq   
   2c8e0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2c8e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c8e8:	48 01 d0             	add    %rdx,%rax
   2c8eb:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2c8ef:	77 db                	ja     2c8cc <__hldtoa+0x192>
   2c8f1:	eb 27                	jmp    2c91a <__hldtoa+0x1e0>
   2c8f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c8f7:	8b 00                	mov    (%rax),%eax
   2c8f9:	83 e0 0f             	and    $0xf,%eax
   2c8fc:	89 c2                	mov    %eax,%edx
   2c8fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c902:	88 10                	mov    %dl,(%rax)
   2c904:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c908:	8b 00                	mov    (%rax),%eax
   2c90a:	c1 e8 04             	shr    $0x4,%eax
   2c90d:	89 c2                	mov    %eax,%edx
   2c90f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c913:	89 10                	mov    %edx,(%rax)
   2c915:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c91a:	8b 05 0c 74 00 00    	mov    0x740c(%rip),%eax        # 33d2c <sigfigs.2637>
   2c920:	48 98                	cltq   
   2c922:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   2c926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c92a:	48 01 d0             	add    %rdx,%rax
   2c92d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2c931:	76 36                	jbe    2c969 <__hldtoa+0x22f>
   2c933:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c937:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2c93b:	77 b6                	ja     2c8f3 <__hldtoa+0x1b9>
   2c93d:	eb 2a                	jmp    2c969 <__hldtoa+0x22f>
   2c93f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c943:	8b 40 04             	mov    0x4(%rax),%eax
   2c946:	83 e0 0f             	and    $0xf,%eax
   2c949:	89 c2                	mov    %eax,%edx
   2c94b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c94f:	88 10                	mov    %dl,(%rax)
   2c951:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c955:	8b 40 04             	mov    0x4(%rax),%eax
   2c958:	c1 e8 04             	shr    $0x4,%eax
   2c95b:	89 c2                	mov    %eax,%edx
   2c95d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c961:	89 50 04             	mov    %edx,0x4(%rax)
   2c964:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2c969:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c96d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2c971:	77 cc                	ja     2c93f <__hldtoa+0x205>
   2c973:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c977:	8b 40 04             	mov    0x4(%rax),%eax
   2c97a:	83 c8 08             	or     $0x8,%eax
   2c97d:	89 c2                	mov    %eax,%edx
   2c97f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c983:	88 10                	mov    %dl,(%rax)
   2c985:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2c989:	79 26                	jns    2c9b1 <__hldtoa+0x277>
   2c98b:	8b 05 9b 73 00 00    	mov    0x739b(%rip),%eax        # 33d2c <sigfigs.2637>
   2c991:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2c994:	eb 04                	jmp    2c99a <__hldtoa+0x260>
   2c996:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
   2c99a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2c99d:	83 e8 01             	sub    $0x1,%eax
   2c9a0:	48 63 d0             	movslq %eax,%rdx
   2c9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c9a7:	48 01 d0             	add    %rdx,%rax
   2c9aa:	0f b6 00             	movzbl (%rax),%eax
   2c9ad:	84 c0                	test   %al,%al
   2c9af:	74 e5                	je     2c996 <__hldtoa+0x25c>
   2c9b1:	8b 05 75 73 00 00    	mov    0x7375(%rip),%eax        # 33d2c <sigfigs.2637>
   2c9b7:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   2c9ba:	7d 35                	jge    2c9f1 <__hldtoa+0x2b7>
   2c9bc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2c9bf:	48 63 d0             	movslq %eax,%rdx
   2c9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c9c6:	48 01 d0             	add    %rdx,%rax
   2c9c9:	0f b6 00             	movzbl (%rax),%eax
   2c9cc:	84 c0                	test   %al,%al
   2c9ce:	74 21                	je     2c9f1 <__hldtoa+0x2b7>
   2c9d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2c9d4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2c9d8:	c0 e8 07             	shr    $0x7,%al
   2c9db:	0f b6 d0             	movzbl %al,%edx
   2c9de:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   2c9e2:	8b 75 d4             	mov    -0x2c(%rbp),%esi
   2c9e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c9e9:	48 89 c7             	mov    %rax,%rdi
   2c9ec:	e8 64 f9 ff ff       	call   2c355 <dorounding>
   2c9f1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2c9f4:	48 63 d0             	movslq %eax,%rdx
   2c9f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c9fb:	48 01 d0             	add    %rdx,%rax
   2c9fe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2ca02:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2ca07:	74 0b                	je     2ca14 <__hldtoa+0x2da>
   2ca09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ca0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2ca11:	48 89 10             	mov    %rdx,(%rax)
   2ca14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ca18:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2ca1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2ca20:	c6 00 00             	movb   $0x0,(%rax)
   2ca23:	eb 21                	jmp    2ca46 <__hldtoa+0x30c>
   2ca25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ca29:	0f b6 00             	movzbl (%rax),%eax
   2ca2c:	0f be c0             	movsbl %al,%eax
   2ca2f:	89 c2                	mov    %eax,%edx
   2ca31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2ca35:	48 01 d0             	add    %rdx,%rax
   2ca38:	0f b6 10             	movzbl (%rax),%edx
   2ca3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ca3f:	88 10                	mov    %dl,(%rax)
   2ca41:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2ca46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ca4a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2ca4e:	73 d5                	jae    2ca25 <__hldtoa+0x2eb>
   2ca50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ca54:	c9                   	leave  
   2ca55:	c3                   	ret    

000000000002ca56 <__ldtoa>:
   2ca56:	f3 0f 1e fa          	endbr64 
   2ca5a:	55                   	push   %rbp
   2ca5b:	48 89 e5             	mov    %rsp,%rbp
   2ca5e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   2ca62:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2ca66:	89 75 a4             	mov    %esi,-0x5c(%rbp)
   2ca69:	89 55 a0             	mov    %edx,-0x60(%rbp)
   2ca6c:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   2ca70:	4c 89 45 90          	mov    %r8,-0x70(%rbp)
   2ca74:	4c 89 4d 88          	mov    %r9,-0x78(%rbp)
   2ca78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ca7f:	00 00 
   2ca81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ca85:	31 c0                	xor    %eax,%eax
   2ca87:	c7 45 d0 40 00 00 00 	movl   $0x40,-0x30(%rbp)
   2ca8e:	c7 45 d4 c3 bf ff ff 	movl   $0xffffbfc3,-0x2c(%rbp)
   2ca95:	c7 45 d8 c0 3f 00 00 	movl   $0x3fc0,-0x28(%rbp)
   2ca9c:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
   2caa3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   2caaa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2caae:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2cab2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2cab6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2caba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cabe:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2cac2:	c0 e8 07             	shr    $0x7,%al
   2cac5:	0f b6 d0             	movzbl %al,%edx
   2cac8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2cacc:	89 10                	mov    %edx,(%rax)
   2cace:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2cad1:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2cad4:	d1 f8                	sar    %eax
   2cad6:	89 c1                	mov    %eax,%ecx
   2cad8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cadc:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2cae0:	c0 e8 07             	shr    $0x7,%al
   2cae3:	0f b6 c0             	movzbl %al,%eax
   2cae6:	21 c8                	and    %ecx,%eax
   2cae8:	31 d0                	xor    %edx,%eax
   2caea:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2caed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2caf1:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2caf5:	66 25 ff 7f          	and    $0x7fff,%ax
   2caf9:	0f b7 c0             	movzwl %ax,%eax
   2cafc:	2d 3e 40 00 00       	sub    $0x403e,%eax
   2cb01:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2cb04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cb08:	8b 00                	mov    (%rax),%eax
   2cb0a:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2cb0d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cb11:	8b 40 04             	mov    0x4(%rax),%eax
   2cb14:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2cb17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2cb1b:	db 28                	fldt   (%rax)
   2cb1d:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   2cb22:	db 3c 24             	fstpt  (%rsp)
   2cb25:	e8 b9 13 00 00       	call   2dee3 <__fpclassifyl>
   2cb2a:	48 83 c4 10          	add    $0x10,%rsp
   2cb2e:	83 f8 04             	cmp    $0x4,%eax
   2cb31:	77 54                	ja     2cb87 <__ldtoa+0x131>
   2cb33:	89 c0                	mov    %eax,%eax
   2cb35:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2cb3c:	00 
   2cb3d:	48 8d 05 ec 71 00 00 	lea    0x71ec(%rip),%rax        # 33d30 <sigfigs.2637+0x4>
   2cb44:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2cb47:	48 98                	cltq   
   2cb49:	48 8d 15 e0 71 00 00 	lea    0x71e0(%rip),%rdx        # 33d30 <sigfigs.2637+0x4>
   2cb50:	48 01 d0             	add    %rdx,%rax
   2cb53:	3e ff e0             	notrack jmp *%rax
   2cb56:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
   2cb5d:	eb 2d                	jmp    2cb8c <__ldtoa+0x136>
   2cb5f:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   2cb66:	eb 24                	jmp    2cb8c <__ldtoa+0x136>
   2cb68:	c7 45 b0 02 00 00 00 	movl   $0x2,-0x50(%rbp)
   2cb6f:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
   2cb73:	eb 17                	jmp    2cb8c <__ldtoa+0x136>
   2cb75:	c7 45 b0 03 00 00 00 	movl   $0x3,-0x50(%rbp)
   2cb7c:	eb 0e                	jmp    2cb8c <__ldtoa+0x136>
   2cb7e:	c7 45 b0 04 00 00 00 	movl   $0x4,-0x50(%rbp)
   2cb85:	eb 05                	jmp    2cb8c <__ldtoa+0x136>
   2cb87:	e8 0f 4f 00 00       	call   31a9b <abort>
   2cb8c:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
   2cb90:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   2cb93:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   2cb97:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2cb9b:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   2cb9e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2cba2:	ff 75 88             	push   -0x78(%rbp)
   2cba5:	ff 75 98             	push   -0x68(%rbp)
   2cba8:	45 89 c1             	mov    %r8d,%r9d
   2cbab:	41 89 f8             	mov    %edi,%r8d
   2cbae:	48 89 c7             	mov    %rax,%rdi
   2cbb1:	e8 c8 1d 00 00       	call   2e97e <__gdtoa>
   2cbb6:	48 83 c4 10          	add    $0x10,%rsp
   2cbba:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2cbbe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2cbc2:	8b 00                	mov    (%rax),%eax
   2cbc4:	3d 00 80 ff ff       	cmp    $0xffff8000,%eax
   2cbc9:	75 0a                	jne    2cbd5 <__ldtoa+0x17f>
   2cbcb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2cbcf:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2cbd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cbd9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2cbdd:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2cbe4:	00 00 
   2cbe6:	74 05                	je     2cbed <__ldtoa+0x197>
   2cbe8:	e8 0a 6c ff ff       	call   237f7 <__stack_chk_fail>
   2cbed:	c9                   	leave  
   2cbee:	c3                   	ret    

000000000002cbef <__Balloc_D2A>:
   2cbef:	f3 0f 1e fa          	endbr64 
   2cbf3:	55                   	push   %rbp
   2cbf4:	48 89 e5             	mov    %rsp,%rbp
   2cbf7:	48 83 ec 20          	sub    $0x20,%rsp
   2cbfb:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2cbfe:	48 8d 3d 43 60 03 00 	lea    0x36043(%rip),%rdi        # 62c48 <__dtoa_locks>
   2cc05:	e8 92 ca fe ff       	call   1969c <sgx_spin_lock>
   2cc0a:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   2cc0e:	7f 48                	jg     2cc58 <__Balloc_D2A+0x69>
   2cc10:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2cc13:	48 98                	cltq   
   2cc15:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cc1c:	00 
   2cc1d:	48 8d 05 bc 56 03 00 	lea    0x356bc(%rip),%rax        # 622e0 <freelist>
   2cc24:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   2cc28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2cc2c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2cc31:	74 25                	je     2cc58 <__Balloc_D2A+0x69>
   2cc33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cc37:	48 8b 00             	mov    (%rax),%rax
   2cc3a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2cc3d:	48 63 d2             	movslq %edx,%rdx
   2cc40:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   2cc47:	00 
   2cc48:	48 8d 15 91 56 03 00 	lea    0x35691(%rip),%rdx        # 622e0 <freelist>
   2cc4f:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   2cc53:	e9 b2 00 00 00       	jmp    2cd0a <__Balloc_D2A+0x11b>
   2cc58:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2cc5b:	ba 01 00 00 00       	mov    $0x1,%edx
   2cc60:	89 c1                	mov    %eax,%ecx
   2cc62:	d3 e2                	shl    %cl,%edx
   2cc64:	89 d0                	mov    %edx,%eax
   2cc66:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2cc69:	8b 45 f0             	mov    -0x10(%rbp),%eax
   2cc6c:	83 e8 01             	sub    $0x1,%eax
   2cc6f:	48 98                	cltq   
   2cc71:	48 83 c0 0a          	add    $0xa,%rax
   2cc75:	48 c1 e0 02          	shl    $0x2,%rax
   2cc79:	48 83 e8 01          	sub    $0x1,%rax
   2cc7d:	48 c1 e8 03          	shr    $0x3,%rax
   2cc81:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2cc84:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   2cc88:	7f 4b                	jg     2ccd5 <__Balloc_D2A+0xe6>
   2cc8a:	48 8b 05 bf e4 00 00 	mov    0xe4bf(%rip),%rax        # 3b150 <pmem_next>
   2cc91:	48 8d 15 a8 56 03 00 	lea    0x356a8(%rip),%rdx        # 62340 <private_mem>
   2cc98:	48 29 d0             	sub    %rdx,%rax
   2cc9b:	48 c1 f8 03          	sar    $0x3,%rax
   2cc9f:	48 89 c2             	mov    %rax,%rdx
   2cca2:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2cca5:	48 01 d0             	add    %rdx,%rax
   2cca8:	48 3d 20 01 00 00    	cmp    $0x120,%rax
   2ccae:	77 25                	ja     2ccd5 <__Balloc_D2A+0xe6>
   2ccb0:	48 8b 05 99 e4 00 00 	mov    0xe499(%rip),%rax        # 3b150 <pmem_next>
   2ccb7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ccbb:	48 8b 05 8e e4 00 00 	mov    0xe48e(%rip),%rax        # 3b150 <pmem_next>
   2ccc2:	8b 55 f4             	mov    -0xc(%rbp),%edx
   2ccc5:	48 c1 e2 03          	shl    $0x3,%rdx
   2ccc9:	48 01 d0             	add    %rdx,%rax
   2cccc:	48 89 05 7d e4 00 00 	mov    %rax,0xe47d(%rip)        # 3b150 <pmem_next>
   2ccd3:	eb 21                	jmp    2ccf6 <__Balloc_D2A+0x107>
   2ccd5:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2ccd8:	48 c1 e0 03          	shl    $0x3,%rax
   2ccdc:	48 89 c7             	mov    %rax,%rdi
   2ccdf:	e8 43 2d ff ff       	call   1fa27 <dlmalloc>
   2cce4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2cce8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2cced:	75 07                	jne    2ccf6 <__Balloc_D2A+0x107>
   2ccef:	b8 00 00 00 00       	mov    $0x0,%eax
   2ccf4:	eb 3d                	jmp    2cd33 <__Balloc_D2A+0x144>
   2ccf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ccfa:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2ccfd:	89 50 08             	mov    %edx,0x8(%rax)
   2cd00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd04:	8b 55 f0             	mov    -0x10(%rbp),%edx
   2cd07:	89 50 0c             	mov    %edx,0xc(%rax)
   2cd0a:	48 8d 3d 37 5f 03 00 	lea    0x35f37(%rip),%rdi        # 62c48 <__dtoa_locks>
   2cd11:	e8 21 ca fe ff       	call   19737 <sgx_spin_unlock>
   2cd16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd1a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   2cd21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd25:	8b 50 14             	mov    0x14(%rax),%edx
   2cd28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd2c:	89 50 10             	mov    %edx,0x10(%rax)
   2cd2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd33:	c9                   	leave  
   2cd34:	c3                   	ret    

000000000002cd35 <__Bfree_D2A>:
   2cd35:	f3 0f 1e fa          	endbr64 
   2cd39:	55                   	push   %rbp
   2cd3a:	48 89 e5             	mov    %rsp,%rbp
   2cd3d:	48 83 ec 10          	sub    $0x10,%rsp
   2cd41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2cd45:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2cd4a:	74 75                	je     2cdc1 <__Bfree_D2A+0x8c>
   2cd4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd50:	8b 40 08             	mov    0x8(%rax),%eax
   2cd53:	83 f8 09             	cmp    $0x9,%eax
   2cd56:	7e 0e                	jle    2cd66 <__Bfree_D2A+0x31>
   2cd58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd5c:	48 89 c7             	mov    %rax,%rdi
   2cd5f:	e8 be 37 ff ff       	call   20522 <dlfree>
   2cd64:	eb 5b                	jmp    2cdc1 <__Bfree_D2A+0x8c>
   2cd66:	48 8d 3d db 5e 03 00 	lea    0x35edb(%rip),%rdi        # 62c48 <__dtoa_locks>
   2cd6d:	e8 2a c9 fe ff       	call   1969c <sgx_spin_lock>
   2cd72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd76:	8b 40 08             	mov    0x8(%rax),%eax
   2cd79:	48 98                	cltq   
   2cd7b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cd82:	00 
   2cd83:	48 8d 05 56 55 03 00 	lea    0x35556(%rip),%rax        # 622e0 <freelist>
   2cd8a:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
   2cd8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd92:	48 89 10             	mov    %rdx,(%rax)
   2cd95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cd99:	8b 40 08             	mov    0x8(%rax),%eax
   2cd9c:	48 98                	cltq   
   2cd9e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   2cda5:	00 
   2cda6:	48 8d 15 33 55 03 00 	lea    0x35533(%rip),%rdx        # 622e0 <freelist>
   2cdad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cdb1:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   2cdb5:	48 8d 3d 8c 5e 03 00 	lea    0x35e8c(%rip),%rdi        # 62c48 <__dtoa_locks>
   2cdbc:	e8 76 c9 fe ff       	call   19737 <sgx_spin_unlock>
   2cdc1:	90                   	nop
   2cdc2:	c9                   	leave  
   2cdc3:	c3                   	ret    

000000000002cdc4 <__lo0bits_D2A>:
   2cdc4:	f3 0f 1e fa          	endbr64 
   2cdc8:	55                   	push   %rbp
   2cdc9:	48 89 e5             	mov    %rsp,%rbp
   2cdcc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2cdd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2cdd4:	8b 00                	mov    (%rax),%eax
   2cdd6:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2cdd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2cddc:	83 e0 07             	and    $0x7,%eax
   2cddf:	85 c0                	test   %eax,%eax
   2cde1:	74 4a                	je     2ce2d <__lo0bits_D2A+0x69>
   2cde3:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2cde6:	83 e0 01             	and    $0x1,%eax
   2cde9:	85 c0                	test   %eax,%eax
   2cdeb:	74 0a                	je     2cdf7 <__lo0bits_D2A+0x33>
   2cded:	b8 00 00 00 00       	mov    $0x0,%eax
   2cdf2:	e9 b2 00 00 00       	jmp    2cea9 <__lo0bits_D2A+0xe5>
   2cdf7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2cdfa:	83 e0 02             	and    $0x2,%eax
   2cdfd:	85 c0                	test   %eax,%eax
   2cdff:	74 17                	je     2ce18 <__lo0bits_D2A+0x54>
   2ce01:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce04:	d1 e8                	shr    %eax
   2ce06:	89 c2                	mov    %eax,%edx
   2ce08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ce0c:	89 10                	mov    %edx,(%rax)
   2ce0e:	b8 01 00 00 00       	mov    $0x1,%eax
   2ce13:	e9 91 00 00 00       	jmp    2cea9 <__lo0bits_D2A+0xe5>
   2ce18:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce1b:	c1 e8 02             	shr    $0x2,%eax
   2ce1e:	89 c2                	mov    %eax,%edx
   2ce20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ce24:	89 10                	mov    %edx,(%rax)
   2ce26:	b8 02 00 00 00       	mov    $0x2,%eax
   2ce2b:	eb 7c                	jmp    2cea9 <__lo0bits_D2A+0xe5>
   2ce2d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   2ce34:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce37:	0f b7 c0             	movzwl %ax,%eax
   2ce3a:	85 c0                	test   %eax,%eax
   2ce3c:	75 0b                	jne    2ce49 <__lo0bits_D2A+0x85>
   2ce3e:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
   2ce45:	c1 6d fc 10          	shrl   $0x10,-0x4(%rbp)
   2ce49:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce4c:	0f b6 c0             	movzbl %al,%eax
   2ce4f:	85 c0                	test   %eax,%eax
   2ce51:	75 08                	jne    2ce5b <__lo0bits_D2A+0x97>
   2ce53:	83 45 f8 08          	addl   $0x8,-0x8(%rbp)
   2ce57:	c1 6d fc 08          	shrl   $0x8,-0x4(%rbp)
   2ce5b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce5e:	83 e0 0f             	and    $0xf,%eax
   2ce61:	85 c0                	test   %eax,%eax
   2ce63:	75 08                	jne    2ce6d <__lo0bits_D2A+0xa9>
   2ce65:	83 45 f8 04          	addl   $0x4,-0x8(%rbp)
   2ce69:	c1 6d fc 04          	shrl   $0x4,-0x4(%rbp)
   2ce6d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce70:	83 e0 03             	and    $0x3,%eax
   2ce73:	85 c0                	test   %eax,%eax
   2ce75:	75 08                	jne    2ce7f <__lo0bits_D2A+0xbb>
   2ce77:	83 45 f8 02          	addl   $0x2,-0x8(%rbp)
   2ce7b:	c1 6d fc 02          	shrl   $0x2,-0x4(%rbp)
   2ce7f:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ce82:	83 e0 01             	and    $0x1,%eax
   2ce85:	85 c0                	test   %eax,%eax
   2ce87:	75 14                	jne    2ce9d <__lo0bits_D2A+0xd9>
   2ce89:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
   2ce8d:	d1 6d fc             	shrl   -0x4(%rbp)
   2ce90:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2ce94:	75 07                	jne    2ce9d <__lo0bits_D2A+0xd9>
   2ce96:	b8 20 00 00 00       	mov    $0x20,%eax
   2ce9b:	eb 0c                	jmp    2cea9 <__lo0bits_D2A+0xe5>
   2ce9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2cea1:	8b 55 fc             	mov    -0x4(%rbp),%edx
   2cea4:	89 10                	mov    %edx,(%rax)
   2cea6:	8b 45 f8             	mov    -0x8(%rbp),%eax
   2cea9:	5d                   	pop    %rbp
   2ceaa:	c3                   	ret    

000000000002ceab <__multadd_D2A>:
   2ceab:	f3 0f 1e fa          	endbr64 
   2ceaf:	55                   	push   %rbp
   2ceb0:	48 89 e5             	mov    %rsp,%rbp
   2ceb3:	48 83 ec 40          	sub    $0x40,%rsp
   2ceb7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2cebb:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   2cebe:	89 55 c0             	mov    %edx,-0x40(%rbp)
   2cec1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cec5:	8b 40 14             	mov    0x14(%rax),%eax
   2cec8:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2cecb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cecf:	48 83 c0 18          	add    $0x18,%rax
   2ced3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2ced7:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   2cede:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2cee1:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2cee4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2cee8:	8b 00                	mov    (%rax),%eax
   2ceea:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2ceed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2cef0:	0f b7 d0             	movzwl %ax,%edx
   2cef3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2cef6:	0f af d0             	imul   %eax,%edx
   2cef9:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2cefc:	01 d0                	add    %edx,%eax
   2cefe:	89 45 e8             	mov    %eax,-0x18(%rbp)
   2cf01:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2cf04:	c1 e8 10             	shr    $0x10,%eax
   2cf07:	89 c2                	mov    %eax,%edx
   2cf09:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2cf0c:	0f af c2             	imul   %edx,%eax
   2cf0f:	8b 55 e8             	mov    -0x18(%rbp),%edx
   2cf12:	c1 ea 10             	shr    $0x10,%edx
   2cf15:	01 d0                	add    %edx,%eax
   2cf17:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2cf1a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2cf1d:	c1 e8 10             	shr    $0x10,%eax
   2cf20:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2cf23:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2cf26:	c1 e0 10             	shl    $0x10,%eax
   2cf29:	89 c6                	mov    %eax,%esi
   2cf2b:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2cf2e:	0f b7 c8             	movzwl %ax,%ecx
   2cf31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2cf35:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2cf39:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   2cf3d:	8d 14 0e             	lea    (%rsi,%rcx,1),%edx
   2cf40:	89 10                	mov    %edx,(%rax)
   2cf42:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
   2cf46:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2cf49:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   2cf4c:	7c 96                	jl     2cee4 <__multadd_D2A+0x39>
   2cf4e:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   2cf52:	0f 84 97 00 00 00    	je     2cfef <__multadd_D2A+0x144>
   2cf58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cf5c:	8b 40 0c             	mov    0xc(%rax),%eax
   2cf5f:	39 45 e0             	cmp    %eax,-0x20(%rbp)
   2cf62:	7c 67                	jl     2cfcb <__multadd_D2A+0x120>
   2cf64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cf68:	8b 40 08             	mov    0x8(%rax),%eax
   2cf6b:	83 c0 01             	add    $0x1,%eax
   2cf6e:	89 c7                	mov    %eax,%edi
   2cf70:	e8 7a fc ff ff       	call   2cbef <__Balloc_D2A>
   2cf75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2cf79:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2cf7e:	75 07                	jne    2cf87 <__multadd_D2A+0xdc>
   2cf80:	b8 00 00 00 00       	mov    $0x0,%eax
   2cf85:	eb 6c                	jmp    2cff3 <__multadd_D2A+0x148>
   2cf87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cf8b:	8b 40 14             	mov    0x14(%rax),%eax
   2cf8e:	48 98                	cltq   
   2cf90:	48 83 c0 02          	add    $0x2,%rax
   2cf94:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2cf9b:	00 
   2cf9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cfa0:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2cfa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cfa8:	48 83 c0 10          	add    $0x10,%rax
   2cfac:	48 89 ce             	mov    %rcx,%rsi
   2cfaf:	48 89 c7             	mov    %rax,%rdi
   2cfb2:	e8 38 64 ff ff       	call   233ef <memcpy>
   2cfb7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cfbb:	48 89 c7             	mov    %rax,%rdi
   2cfbe:	e8 72 fd ff ff       	call   2cd35 <__Bfree_D2A>
   2cfc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2cfc7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2cfcb:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2cfce:	8d 50 01             	lea    0x1(%rax),%edx
   2cfd1:	89 55 e0             	mov    %edx,-0x20(%rbp)
   2cfd4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2cfd8:	48 98                	cltq   
   2cfda:	48 8d 48 04          	lea    0x4(%rax),%rcx
   2cfde:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2cfe1:	89 44 8a 08          	mov    %eax,0x8(%rdx,%rcx,4)
   2cfe5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cfe9:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2cfec:	89 50 14             	mov    %edx,0x14(%rax)
   2cfef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2cff3:	c9                   	leave  
   2cff4:	c3                   	ret    

000000000002cff5 <__hi0bits_D2A>:
   2cff5:	f3 0f 1e fa          	endbr64 
   2cff9:	55                   	push   %rbp
   2cffa:	48 89 e5             	mov    %rsp,%rbp
   2cffd:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2d000:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   2d007:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d00a:	66 b8 00 00          	mov    $0x0,%ax
   2d00e:	85 c0                	test   %eax,%eax
   2d010:	75 0b                	jne    2d01d <__hi0bits_D2A+0x28>
   2d012:	c7 45 fc 10 00 00 00 	movl   $0x10,-0x4(%rbp)
   2d019:	c1 65 ec 10          	shll   $0x10,-0x14(%rbp)
   2d01d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d020:	25 00 00 00 ff       	and    $0xff000000,%eax
   2d025:	85 c0                	test   %eax,%eax
   2d027:	75 08                	jne    2d031 <__hi0bits_D2A+0x3c>
   2d029:	83 45 fc 08          	addl   $0x8,-0x4(%rbp)
   2d02d:	c1 65 ec 08          	shll   $0x8,-0x14(%rbp)
   2d031:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d034:	25 00 00 00 f0       	and    $0xf0000000,%eax
   2d039:	85 c0                	test   %eax,%eax
   2d03b:	75 08                	jne    2d045 <__hi0bits_D2A+0x50>
   2d03d:	83 45 fc 04          	addl   $0x4,-0x4(%rbp)
   2d041:	c1 65 ec 04          	shll   $0x4,-0x14(%rbp)
   2d045:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d048:	25 00 00 00 c0       	and    $0xc0000000,%eax
   2d04d:	85 c0                	test   %eax,%eax
   2d04f:	75 08                	jne    2d059 <__hi0bits_D2A+0x64>
   2d051:	83 45 fc 02          	addl   $0x2,-0x4(%rbp)
   2d055:	c1 65 ec 02          	shll   $0x2,-0x14(%rbp)
   2d059:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d05c:	85 c0                	test   %eax,%eax
   2d05e:	78 17                	js     2d077 <__hi0bits_D2A+0x82>
   2d060:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   2d064:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2d067:	25 00 00 00 40       	and    $0x40000000,%eax
   2d06c:	85 c0                	test   %eax,%eax
   2d06e:	75 07                	jne    2d077 <__hi0bits_D2A+0x82>
   2d070:	b8 20 00 00 00       	mov    $0x20,%eax
   2d075:	eb 03                	jmp    2d07a <__hi0bits_D2A+0x85>
   2d077:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2d07a:	5d                   	pop    %rbp
   2d07b:	c3                   	ret    

000000000002d07c <__i2b_D2A>:
   2d07c:	f3 0f 1e fa          	endbr64 
   2d080:	55                   	push   %rbp
   2d081:	48 89 e5             	mov    %rsp,%rbp
   2d084:	48 83 ec 20          	sub    $0x20,%rsp
   2d088:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2d08b:	bf 01 00 00 00       	mov    $0x1,%edi
   2d090:	e8 5a fb ff ff       	call   2cbef <__Balloc_D2A>
   2d095:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d099:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2d09e:	75 07                	jne    2d0a7 <__i2b_D2A+0x2b>
   2d0a0:	b8 00 00 00 00       	mov    $0x0,%eax
   2d0a5:	eb 19                	jmp    2d0c0 <__i2b_D2A+0x44>
   2d0a7:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2d0aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d0ae:	89 50 18             	mov    %edx,0x18(%rax)
   2d0b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d0b5:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2d0bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d0c0:	c9                   	leave  
   2d0c1:	c3                   	ret    

000000000002d0c2 <__mult_D2A>:
   2d0c2:	f3 0f 1e fa          	endbr64 
   2d0c6:	55                   	push   %rbp
   2d0c7:	48 89 e5             	mov    %rsp,%rbp
   2d0ca:	48 83 ec 70          	sub    $0x70,%rsp
   2d0ce:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   2d0d2:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2d0d6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d0da:	8b 50 14             	mov    0x14(%rax),%edx
   2d0dd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d0e1:	8b 40 14             	mov    0x14(%rax),%eax
   2d0e4:	39 c2                	cmp    %eax,%edx
   2d0e6:	7d 18                	jge    2d100 <__mult_D2A+0x3e>
   2d0e8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d0ec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d0f0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d0f4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2d0f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d0fc:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d100:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d104:	8b 40 08             	mov    0x8(%rax),%eax
   2d107:	89 45 a0             	mov    %eax,-0x60(%rbp)
   2d10a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d10e:	8b 40 14             	mov    0x14(%rax),%eax
   2d111:	89 45 b0             	mov    %eax,-0x50(%rbp)
   2d114:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d118:	8b 40 14             	mov    0x14(%rax),%eax
   2d11b:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2d11e:	8b 55 b0             	mov    -0x50(%rbp),%edx
   2d121:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2d124:	01 d0                	add    %edx,%eax
   2d126:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   2d129:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d12d:	8b 40 0c             	mov    0xc(%rax),%eax
   2d130:	39 45 a4             	cmp    %eax,-0x5c(%rbp)
   2d133:	7e 04                	jle    2d139 <__mult_D2A+0x77>
   2d135:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
   2d139:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2d13c:	89 c7                	mov    %eax,%edi
   2d13e:	e8 ac fa ff ff       	call   2cbef <__Balloc_D2A>
   2d143:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d147:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2d14c:	75 0a                	jne    2d158 <__mult_D2A+0x96>
   2d14e:	b8 00 00 00 00       	mov    $0x0,%eax
   2d153:	e9 8a 02 00 00       	jmp    2d3e2 <__mult_D2A+0x320>
   2d158:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d15c:	48 83 c0 18          	add    $0x18,%rax
   2d160:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d164:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   2d167:	48 98                	cltq   
   2d169:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d170:	00 
   2d171:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d175:	48 01 d0             	add    %rdx,%rax
   2d178:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d17c:	eb 0f                	jmp    2d18d <__mult_D2A+0xcb>
   2d17e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d182:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2d188:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
   2d18d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d191:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2d195:	72 e7                	jb     2d17e <__mult_D2A+0xbc>
   2d197:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d19b:	48 83 c0 18          	add    $0x18,%rax
   2d19f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d1a3:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2d1a6:	48 98                	cltq   
   2d1a8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d1af:	00 
   2d1b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d1b4:	48 01 d0             	add    %rdx,%rax
   2d1b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d1bb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d1bf:	48 83 c0 18          	add    $0x18,%rax
   2d1c3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2d1c7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2d1ca:	48 98                	cltq   
   2d1cc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d1d3:	00 
   2d1d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d1d8:	48 01 d0             	add    %rdx,%rax
   2d1db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d1df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d1e3:	48 83 c0 18          	add    $0x18,%rax
   2d1e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d1eb:	e9 97 01 00 00       	jmp    2d387 <__mult_D2A+0x2c5>
   2d1f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d1f4:	8b 00                	mov    (%rax),%eax
   2d1f6:	25 ff ff 00 00       	and    $0xffff,%eax
   2d1fb:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2d1fe:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2d202:	0f 84 ab 00 00 00    	je     2d2b3 <__mult_D2A+0x1f1>
   2d208:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d20c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d210:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d214:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d218:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   2d21f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d223:	8b 00                	mov    (%rax),%eax
   2d225:	0f b7 c0             	movzwl %ax,%eax
   2d228:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2d22c:	89 c2                	mov    %eax,%edx
   2d22e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d232:	8b 00                	mov    (%rax),%eax
   2d234:	0f b7 c0             	movzwl %ax,%eax
   2d237:	01 c2                	add    %eax,%edx
   2d239:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2d23c:	01 d0                	add    %edx,%eax
   2d23e:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2d241:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2d244:	c1 e8 10             	shr    $0x10,%eax
   2d247:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2d24a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d24e:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d252:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2d256:	8b 00                	mov    (%rax),%eax
   2d258:	c1 e8 10             	shr    $0x10,%eax
   2d25b:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2d25f:	89 c2                	mov    %eax,%edx
   2d261:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d265:	8b 00                	mov    (%rax),%eax
   2d267:	c1 e8 10             	shr    $0x10,%eax
   2d26a:	01 c2                	add    %eax,%edx
   2d26c:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2d26f:	01 d0                	add    %edx,%eax
   2d271:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2d274:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2d277:	c1 e8 10             	shr    $0x10,%eax
   2d27a:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2d27d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d281:	48 83 c0 02          	add    $0x2,%rax
   2d285:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2d288:	66 89 10             	mov    %dx,(%rax)
   2d28b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2d28e:	89 c2                	mov    %eax,%edx
   2d290:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d294:	66 89 10             	mov    %dx,(%rax)
   2d297:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   2d29c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d2a0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2d2a4:	0f 82 75 ff ff ff    	jb     2d21f <__mult_D2A+0x15d>
   2d2aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d2ae:	8b 55 a8             	mov    -0x58(%rbp),%edx
   2d2b1:	89 10                	mov    %edx,(%rax)
   2d2b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d2b7:	8b 00                	mov    (%rax),%eax
   2d2b9:	c1 e8 10             	shr    $0x10,%eax
   2d2bc:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2d2bf:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2d2c3:	0f 84 b4 00 00 00    	je     2d37d <__mult_D2A+0x2bb>
   2d2c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d2cd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2d2d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d2d5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d2d9:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   2d2e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d2e4:	8b 00                	mov    (%rax),%eax
   2d2e6:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2d2e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d2ed:	8b 00                	mov    (%rax),%eax
   2d2ef:	0f b7 c0             	movzwl %ax,%eax
   2d2f2:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2d2f6:	89 c2                	mov    %eax,%edx
   2d2f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d2fc:	8b 00                	mov    (%rax),%eax
   2d2fe:	c1 e8 10             	shr    $0x10,%eax
   2d301:	01 c2                	add    %eax,%edx
   2d303:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2d306:	01 d0                	add    %edx,%eax
   2d308:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2d30b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2d30e:	c1 e8 10             	shr    $0x10,%eax
   2d311:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2d314:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d318:	48 83 c0 02          	add    $0x2,%rax
   2d31c:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2d31f:	66 89 10             	mov    %dx,(%rax)
   2d322:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2d325:	89 c2                	mov    %eax,%edx
   2d327:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d32b:	66 89 10             	mov    %dx,(%rax)
   2d32e:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   2d333:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d337:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d33b:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2d33f:	8b 00                	mov    (%rax),%eax
   2d341:	c1 e8 10             	shr    $0x10,%eax
   2d344:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2d348:	89 c2                	mov    %eax,%edx
   2d34a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d34e:	8b 00                	mov    (%rax),%eax
   2d350:	0f b7 c0             	movzwl %ax,%eax
   2d353:	01 c2                	add    %eax,%edx
   2d355:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2d358:	01 d0                	add    %edx,%eax
   2d35a:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2d35d:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2d360:	c1 e8 10             	shr    $0x10,%eax
   2d363:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2d366:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d36a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2d36e:	0f 82 75 ff ff ff    	jb     2d2e9 <__mult_D2A+0x227>
   2d374:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d378:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2d37b:	89 10                	mov    %edx,(%rax)
   2d37d:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
   2d382:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
   2d387:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d38b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2d38f:	0f 82 5b fe ff ff    	jb     2d1f0 <__mult_D2A+0x12e>
   2d395:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d399:	48 83 c0 18          	add    $0x18,%rax
   2d39d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d3a1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   2d3a4:	48 98                	cltq   
   2d3a6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d3ad:	00 
   2d3ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d3b2:	48 01 d0             	add    %rdx,%rax
   2d3b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d3b9:	eb 04                	jmp    2d3bf <__mult_D2A+0x2fd>
   2d3bb:	83 6d a4 01          	subl   $0x1,-0x5c(%rbp)
   2d3bf:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   2d3c3:	7e 0f                	jle    2d3d4 <__mult_D2A+0x312>
   2d3c5:	48 83 6d d0 04       	subq   $0x4,-0x30(%rbp)
   2d3ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d3ce:	8b 00                	mov    (%rax),%eax
   2d3d0:	85 c0                	test   %eax,%eax
   2d3d2:	74 e7                	je     2d3bb <__mult_D2A+0x2f9>
   2d3d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d3d8:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   2d3db:	89 50 14             	mov    %edx,0x14(%rax)
   2d3de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d3e2:	c9                   	leave  
   2d3e3:	c3                   	ret    

000000000002d3e4 <__pow5mult_D2A>:
   2d3e4:	f3 0f 1e fa          	endbr64 
   2d3e8:	55                   	push   %rbp
   2d3e9:	48 89 e5             	mov    %rsp,%rbp
   2d3ec:	48 83 ec 30          	sub    $0x30,%rsp
   2d3f0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2d3f4:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2d3f7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2d3fa:	83 e0 03             	and    $0x3,%eax
   2d3fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2d400:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2d404:	74 42                	je     2d448 <__pow5mult_D2A+0x64>
   2d406:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2d409:	83 e8 01             	sub    $0x1,%eax
   2d40c:	48 98                	cltq   
   2d40e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d415:	00 
   2d416:	48 8d 05 3b dd 00 00 	lea    0xdd3b(%rip),%rax        # 3b158 <p05.2603>
   2d41d:	8b 0c 02             	mov    (%rdx,%rax,1),%ecx
   2d420:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d424:	ba 00 00 00 00       	mov    $0x0,%edx
   2d429:	89 ce                	mov    %ecx,%esi
   2d42b:	48 89 c7             	mov    %rax,%rdi
   2d42e:	e8 78 fa ff ff       	call   2ceab <__multadd_D2A>
   2d433:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d437:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2d43c:	75 0a                	jne    2d448 <__pow5mult_D2A+0x64>
   2d43e:	b8 00 00 00 00       	mov    $0x0,%eax
   2d443:	e9 66 01 00 00       	jmp    2d5ae <__pow5mult_D2A+0x1ca>
   2d448:	c1 7d d4 02          	sarl   $0x2,-0x2c(%rbp)
   2d44c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2d450:	75 09                	jne    2d45b <__pow5mult_D2A+0x77>
   2d452:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d456:	e9 53 01 00 00       	jmp    2d5ae <__pow5mult_D2A+0x1ca>
   2d45b:	48 8b 05 de 57 03 00 	mov    0x357de(%rip),%rax        # 62c40 <p5s>
   2d462:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d466:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2d46b:	75 62                	jne    2d4cf <__pow5mult_D2A+0xeb>
   2d46d:	48 8d 3d d8 57 03 00 	lea    0x357d8(%rip),%rdi        # 62c4c <__dtoa_locks+0x4>
   2d474:	e8 23 c2 fe ff       	call   1969c <sgx_spin_lock>
   2d479:	48 8b 05 c0 57 03 00 	mov    0x357c0(%rip),%rax        # 62c40 <p5s>
   2d480:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d484:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2d489:	75 38                	jne    2d4c3 <__pow5mult_D2A+0xdf>
   2d48b:	bf 71 02 00 00       	mov    $0x271,%edi
   2d490:	e8 e7 fb ff ff       	call   2d07c <__i2b_D2A>
   2d495:	48 89 05 a4 57 03 00 	mov    %rax,0x357a4(%rip)        # 62c40 <p5s>
   2d49c:	48 8b 05 9d 57 03 00 	mov    0x3579d(%rip),%rax        # 62c40 <p5s>
   2d4a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d4a7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2d4ac:	75 0a                	jne    2d4b8 <__pow5mult_D2A+0xd4>
   2d4ae:	b8 00 00 00 00       	mov    $0x0,%eax
   2d4b3:	e9 f6 00 00 00       	jmp    2d5ae <__pow5mult_D2A+0x1ca>
   2d4b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d4bc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2d4c3:	48 8d 3d 82 57 03 00 	lea    0x35782(%rip),%rdi        # 62c4c <__dtoa_locks+0x4>
   2d4ca:	e8 68 c2 fe ff       	call   19737 <sgx_spin_unlock>
   2d4cf:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2d4d2:	83 e0 01             	and    $0x1,%eax
   2d4d5:	85 c0                	test   %eax,%eax
   2d4d7:	74 3c                	je     2d515 <__pow5mult_D2A+0x131>
   2d4d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2d4dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d4e1:	48 89 d6             	mov    %rdx,%rsi
   2d4e4:	48 89 c7             	mov    %rax,%rdi
   2d4e7:	e8 d6 fb ff ff       	call   2d0c2 <__mult_D2A>
   2d4ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d4f0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2d4f5:	75 0a                	jne    2d501 <__pow5mult_D2A+0x11d>
   2d4f7:	b8 00 00 00 00       	mov    $0x0,%eax
   2d4fc:	e9 ad 00 00 00       	jmp    2d5ae <__pow5mult_D2A+0x1ca>
   2d501:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d505:	48 89 c7             	mov    %rax,%rdi
   2d508:	e8 28 f8 ff ff       	call   2cd35 <__Bfree_D2A>
   2d50d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d511:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d515:	d1 7d d4             	sarl   -0x2c(%rbp)
   2d518:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2d51c:	0f 84 87 00 00 00    	je     2d5a9 <__pow5mult_D2A+0x1c5>
   2d522:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d526:	48 8b 00             	mov    (%rax),%rax
   2d529:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d52d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2d532:	75 68                	jne    2d59c <__pow5mult_D2A+0x1b8>
   2d534:	48 8d 3d 11 57 03 00 	lea    0x35711(%rip),%rdi        # 62c4c <__dtoa_locks+0x4>
   2d53b:	e8 5c c1 fe ff       	call   1969c <sgx_spin_lock>
   2d540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d544:	48 8b 00             	mov    (%rax),%rax
   2d547:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d54b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2d550:	75 3e                	jne    2d590 <__pow5mult_D2A+0x1ac>
   2d552:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2d556:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d55a:	48 89 d6             	mov    %rdx,%rsi
   2d55d:	48 89 c7             	mov    %rax,%rdi
   2d560:	e8 5d fb ff ff       	call   2d0c2 <__mult_D2A>
   2d565:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2d569:	48 89 02             	mov    %rax,(%rdx)
   2d56c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d570:	48 8b 00             	mov    (%rax),%rax
   2d573:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d577:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2d57c:	75 07                	jne    2d585 <__pow5mult_D2A+0x1a1>
   2d57e:	b8 00 00 00 00       	mov    $0x0,%eax
   2d583:	eb 29                	jmp    2d5ae <__pow5mult_D2A+0x1ca>
   2d585:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d589:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2d590:	48 8d 3d b5 56 03 00 	lea    0x356b5(%rip),%rdi        # 62c4c <__dtoa_locks+0x4>
   2d597:	e8 9b c1 fe ff       	call   19737 <sgx_spin_unlock>
   2d59c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d5a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d5a4:	e9 26 ff ff ff       	jmp    2d4cf <__pow5mult_D2A+0xeb>
   2d5a9:	90                   	nop
   2d5aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d5ae:	c9                   	leave  
   2d5af:	c3                   	ret    

000000000002d5b0 <__lshift_D2A>:
   2d5b0:	f3 0f 1e fa          	endbr64 
   2d5b4:	55                   	push   %rbp
   2d5b5:	48 89 e5             	mov    %rsp,%rbp
   2d5b8:	48 83 ec 50          	sub    $0x50,%rsp
   2d5bc:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   2d5c0:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   2d5c3:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2d5c6:	c1 f8 05             	sar    $0x5,%eax
   2d5c9:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2d5cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d5d0:	8b 40 08             	mov    0x8(%rax),%eax
   2d5d3:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2d5d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d5da:	8b 50 14             	mov    0x14(%rax),%edx
   2d5dd:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2d5e0:	01 d0                	add    %edx,%eax
   2d5e2:	83 c0 01             	add    $0x1,%eax
   2d5e5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2d5e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d5ec:	8b 40 0c             	mov    0xc(%rax),%eax
   2d5ef:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2d5f2:	eb 07                	jmp    2d5fb <__lshift_D2A+0x4b>
   2d5f4:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   2d5f8:	d1 65 cc             	shll   -0x34(%rbp)
   2d5fb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2d5fe:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   2d601:	7f f1                	jg     2d5f4 <__lshift_D2A+0x44>
   2d603:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2d606:	89 c7                	mov    %eax,%edi
   2d608:	e8 e2 f5 ff ff       	call   2cbef <__Balloc_D2A>
   2d60d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d611:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2d616:	75 0a                	jne    2d622 <__lshift_D2A+0x72>
   2d618:	b8 00 00 00 00       	mov    $0x0,%eax
   2d61d:	e9 19 01 00 00       	jmp    2d73b <__lshift_D2A+0x18b>
   2d622:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d626:	48 83 c0 18          	add    $0x18,%rax
   2d62a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d62e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   2d635:	eb 16                	jmp    2d64d <__lshift_D2A+0x9d>
   2d637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d63b:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d63f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d643:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2d649:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   2d64d:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2d650:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   2d653:	7c e2                	jl     2d637 <__lshift_D2A+0x87>
   2d655:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d659:	48 83 c0 18          	add    $0x18,%rax
   2d65d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d661:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d665:	8b 40 14             	mov    0x14(%rax),%eax
   2d668:	48 98                	cltq   
   2d66a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d671:	00 
   2d672:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d676:	48 01 d0             	add    %rdx,%rax
   2d679:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d67d:	83 65 b4 1f          	andl   $0x1f,-0x4c(%rbp)
   2d681:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2d685:	74 71                	je     2d6f8 <__lshift_D2A+0x148>
   2d687:	b8 20 00 00 00       	mov    $0x20,%eax
   2d68c:	2b 45 b4             	sub    -0x4c(%rbp),%eax
   2d68f:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2d692:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   2d699:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d69d:	8b 10                	mov    (%rax),%edx
   2d69f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2d6a2:	89 c1                	mov    %eax,%ecx
   2d6a4:	d3 e2                	shl    %cl,%edx
   2d6a6:	89 d1                	mov    %edx,%ecx
   2d6a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d6ac:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d6b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2d6b4:	0b 4d d8             	or     -0x28(%rbp),%ecx
   2d6b7:	89 ca                	mov    %ecx,%edx
   2d6b9:	89 10                	mov    %edx,(%rax)
   2d6bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d6bf:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d6c3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2d6c7:	8b 10                	mov    (%rax),%edx
   2d6c9:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2d6cc:	89 c1                	mov    %eax,%ecx
   2d6ce:	d3 ea                	shr    %cl,%edx
   2d6d0:	89 d0                	mov    %edx,%eax
   2d6d2:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2d6d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d6d9:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2d6dd:	72 ba                	jb     2d699 <__lshift_D2A+0xe9>
   2d6df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d6e3:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2d6e6:	89 10                	mov    %edx,(%rax)
   2d6e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d6ec:	8b 00                	mov    (%rax),%eax
   2d6ee:	85 c0                	test   %eax,%eax
   2d6f0:	74 2c                	je     2d71e <__lshift_D2A+0x16e>
   2d6f2:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   2d6f6:	eb 26                	jmp    2d71e <__lshift_D2A+0x16e>
   2d6f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2d6fc:	48 8d 42 04          	lea    0x4(%rdx),%rax
   2d700:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d708:	48 8d 48 04          	lea    0x4(%rax),%rcx
   2d70c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   2d710:	8b 12                	mov    (%rdx),%edx
   2d712:	89 10                	mov    %edx,(%rax)
   2d714:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d718:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2d71c:	72 da                	jb     2d6f8 <__lshift_D2A+0x148>
   2d71e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2d721:	8d 50 ff             	lea    -0x1(%rax),%edx
   2d724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d728:	89 50 14             	mov    %edx,0x14(%rax)
   2d72b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d72f:	48 89 c7             	mov    %rax,%rdi
   2d732:	e8 fe f5 ff ff       	call   2cd35 <__Bfree_D2A>
   2d737:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d73b:	c9                   	leave  
   2d73c:	c3                   	ret    

000000000002d73d <__cmp_D2A>:
   2d73d:	f3 0f 1e fa          	endbr64 
   2d741:	55                   	push   %rbp
   2d742:	48 89 e5             	mov    %rsp,%rbp
   2d745:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2d749:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2d74d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d751:	8b 40 14             	mov    0x14(%rax),%eax
   2d754:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2d757:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d75b:	8b 40 14             	mov    0x14(%rax),%eax
   2d75e:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2d761:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
   2d765:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
   2d769:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2d76c:	29 45 d8             	sub    %eax,-0x28(%rbp)
   2d76f:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   2d773:	74 08                	je     2d77d <__cmp_D2A+0x40>
   2d775:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2d778:	e9 92 00 00 00       	jmp    2d80f <__cmp_D2A+0xd2>
   2d77d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2d781:	48 83 c0 18          	add    $0x18,%rax
   2d785:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d789:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2d78c:	48 98                	cltq   
   2d78e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d795:	00 
   2d796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2d79a:	48 01 d0             	add    %rdx,%rax
   2d79d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d7a1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2d7a5:	48 83 c0 18          	add    $0x18,%rax
   2d7a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d7ad:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2d7b0:	48 98                	cltq   
   2d7b2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d7b9:	00 
   2d7ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2d7be:	48 01 d0             	add    %rdx,%rax
   2d7c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d7c5:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2d7ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d7ce:	8b 10                	mov    (%rax),%edx
   2d7d0:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   2d7d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d7d9:	8b 00                	mov    (%rax),%eax
   2d7db:	39 c2                	cmp    %eax,%edx
   2d7dd:	74 1e                	je     2d7fd <__cmp_D2A+0xc0>
   2d7df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d7e3:	8b 10                	mov    (%rax),%edx
   2d7e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d7e9:	8b 00                	mov    (%rax),%eax
   2d7eb:	39 c2                	cmp    %eax,%edx
   2d7ed:	73 07                	jae    2d7f6 <__cmp_D2A+0xb9>
   2d7ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d7f4:	eb 19                	jmp    2d80f <__cmp_D2A+0xd2>
   2d7f6:	b8 01 00 00 00       	mov    $0x1,%eax
   2d7fb:	eb 12                	jmp    2d80f <__cmp_D2A+0xd2>
   2d7fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d801:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2d805:	76 02                	jbe    2d809 <__cmp_D2A+0xcc>
   2d807:	eb bc                	jmp    2d7c5 <__cmp_D2A+0x88>
   2d809:	90                   	nop
   2d80a:	b8 00 00 00 00       	mov    $0x0,%eax
   2d80f:	5d                   	pop    %rbp
   2d810:	c3                   	ret    

000000000002d811 <__diff_D2A>:
   2d811:	f3 0f 1e fa          	endbr64 
   2d815:	55                   	push   %rbp
   2d816:	48 89 e5             	mov    %rsp,%rbp
   2d819:	48 83 ec 60          	sub    $0x60,%rsp
   2d81d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2d821:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2d825:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2d829:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d82d:	48 89 d6             	mov    %rdx,%rsi
   2d830:	48 89 c7             	mov    %rax,%rdi
   2d833:	e8 05 ff ff ff       	call   2d73d <__cmp_D2A>
   2d838:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2d83b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2d83f:	75 3e                	jne    2d87f <__diff_D2A+0x6e>
   2d841:	bf 00 00 00 00       	mov    $0x0,%edi
   2d846:	e8 a4 f3 ff ff       	call   2cbef <__Balloc_D2A>
   2d84b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d84f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2d854:	75 0a                	jne    2d860 <__diff_D2A+0x4f>
   2d856:	b8 00 00 00 00       	mov    $0x0,%eax
   2d85b:	e9 04 02 00 00       	jmp    2da64 <__diff_D2A+0x253>
   2d860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d864:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2d86b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d86f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   2d876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d87a:	e9 e5 01 00 00       	jmp    2da64 <__diff_D2A+0x253>
   2d87f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2d883:	79 21                	jns    2d8a6 <__diff_D2A+0x95>
   2d885:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d889:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d88d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d891:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d899:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d89d:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   2d8a4:	eb 07                	jmp    2d8ad <__diff_D2A+0x9c>
   2d8a6:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   2d8ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d8b1:	8b 40 08             	mov    0x8(%rax),%eax
   2d8b4:	89 c7                	mov    %eax,%edi
   2d8b6:	e8 34 f3 ff ff       	call   2cbef <__Balloc_D2A>
   2d8bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2d8bf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2d8c4:	75 0a                	jne    2d8d0 <__diff_D2A+0xbf>
   2d8c6:	b8 00 00 00 00       	mov    $0x0,%eax
   2d8cb:	e9 94 01 00 00       	jmp    2da64 <__diff_D2A+0x253>
   2d8d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d8d4:	8b 55 b8             	mov    -0x48(%rbp),%edx
   2d8d7:	89 50 10             	mov    %edx,0x10(%rax)
   2d8da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d8de:	8b 40 14             	mov    0x14(%rax),%eax
   2d8e1:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2d8e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d8e8:	48 83 c0 18          	add    $0x18,%rax
   2d8ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d8f0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2d8f3:	48 98                	cltq   
   2d8f5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d8fc:	00 
   2d8fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d901:	48 01 d0             	add    %rdx,%rax
   2d904:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2d908:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d90c:	8b 40 14             	mov    0x14(%rax),%eax
   2d90f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2d912:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d916:	48 83 c0 18          	add    $0x18,%rax
   2d91a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d91e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2d921:	48 98                	cltq   
   2d923:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d92a:	00 
   2d92b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d92f:	48 01 d0             	add    %rdx,%rax
   2d932:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2d936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2d93a:	48 83 c0 18          	add    $0x18,%rax
   2d93e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2d942:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2d949:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d94d:	8b 00                	mov    (%rax),%eax
   2d94f:	0f b7 d0             	movzwl %ax,%edx
   2d952:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d956:	8b 00                	mov    (%rax),%eax
   2d958:	0f b7 c0             	movzwl %ax,%eax
   2d95b:	29 c2                	sub    %eax,%edx
   2d95d:	89 d0                	mov    %edx,%eax
   2d95f:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2d962:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2d965:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2d968:	c1 e8 10             	shr    $0x10,%eax
   2d96b:	83 e0 01             	and    $0x1,%eax
   2d96e:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2d971:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d975:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d979:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2d97d:	8b 00                	mov    (%rax),%eax
   2d97f:	c1 e8 10             	shr    $0x10,%eax
   2d982:	89 c1                	mov    %eax,%ecx
   2d984:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d988:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d98c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2d990:	8b 00                	mov    (%rax),%eax
   2d992:	c1 e8 10             	shr    $0x10,%eax
   2d995:	29 c1                	sub    %eax,%ecx
   2d997:	89 c8                	mov    %ecx,%eax
   2d999:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2d99c:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2d99f:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2d9a2:	c1 e8 10             	shr    $0x10,%eax
   2d9a5:	83 e0 01             	and    $0x1,%eax
   2d9a8:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2d9ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d9af:	48 83 c0 02          	add    $0x2,%rax
   2d9b3:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2d9b6:	66 89 10             	mov    %dx,(%rax)
   2d9b9:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2d9bc:	89 c2                	mov    %eax,%edx
   2d9be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2d9c2:	66 89 10             	mov    %dx,(%rax)
   2d9c5:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2d9ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d9ce:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2d9d2:	0f 82 71 ff ff ff    	jb     2d949 <__diff_D2A+0x138>
   2d9d8:	eb 5d                	jmp    2da37 <__diff_D2A+0x226>
   2d9da:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d9de:	8b 00                	mov    (%rax),%eax
   2d9e0:	0f b7 c0             	movzwl %ax,%eax
   2d9e3:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2d9e6:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2d9e9:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2d9ec:	c1 e8 10             	shr    $0x10,%eax
   2d9ef:	83 e0 01             	and    $0x1,%eax
   2d9f2:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2d9f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d9f9:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2d9fd:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2da01:	8b 00                	mov    (%rax),%eax
   2da03:	c1 e8 10             	shr    $0x10,%eax
   2da06:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2da09:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2da0c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2da0f:	c1 e8 10             	shr    $0x10,%eax
   2da12:	83 e0 01             	and    $0x1,%eax
   2da15:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2da18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2da1c:	48 83 c0 02          	add    $0x2,%rax
   2da20:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2da23:	66 89 10             	mov    %dx,(%rax)
   2da26:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2da29:	89 c2                	mov    %eax,%edx
   2da2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2da2f:	66 89 10             	mov    %dx,(%rax)
   2da32:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2da37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2da3b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2da3f:	72 99                	jb     2d9da <__diff_D2A+0x1c9>
   2da41:	eb 04                	jmp    2da47 <__diff_D2A+0x236>
   2da43:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2da47:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2da4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2da50:	8b 00                	mov    (%rax),%eax
   2da52:	85 c0                	test   %eax,%eax
   2da54:	74 ed                	je     2da43 <__diff_D2A+0x232>
   2da56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2da5a:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2da5d:	89 50 14             	mov    %edx,0x14(%rax)
   2da60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2da64:	c9                   	leave  
   2da65:	c3                   	ret    

000000000002da66 <__b2d_D2A>:
   2da66:	f3 0f 1e fa          	endbr64 
   2da6a:	55                   	push   %rbp
   2da6b:	48 89 e5             	mov    %rsp,%rbp
   2da6e:	48 83 ec 40          	sub    $0x40,%rsp
   2da72:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2da76:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2da7a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2da81:	00 00 
   2da83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2da87:	31 c0                	xor    %eax,%eax
   2da89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2da8d:	48 83 c0 18          	add    $0x18,%rax
   2da91:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2da95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2da99:	8b 40 14             	mov    0x14(%rax),%eax
   2da9c:	48 98                	cltq   
   2da9e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2daa5:	00 
   2daa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2daaa:	48 01 d0             	add    %rdx,%rax
   2daad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2dab1:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2dab6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2daba:	8b 00                	mov    (%rax),%eax
   2dabc:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2dabf:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2dac2:	89 c7                	mov    %eax,%edi
   2dac4:	e8 2c f5 ff ff       	call   2cff5 <__hi0bits_D2A>
   2dac9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2dacc:	b8 20 00 00 00       	mov    $0x20,%eax
   2dad1:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2dad4:	89 c2                	mov    %eax,%edx
   2dad6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2dada:	89 10                	mov    %edx,(%rax)
   2dadc:	83 7d d4 0a          	cmpl   $0xa,-0x2c(%rbp)
   2dae0:	7f 62                	jg     2db44 <__b2d_D2A+0xde>
   2dae2:	b8 0b 00 00 00       	mov    $0xb,%eax
   2dae7:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2daea:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2daed:	89 c1                	mov    %eax,%ecx
   2daef:	d3 ea                	shr    %cl,%edx
   2daf1:	89 d0                	mov    %edx,%eax
   2daf3:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2daf8:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2dafb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2daff:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2db03:	76 0d                	jbe    2db12 <__b2d_D2A+0xac>
   2db05:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2db0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2db0e:	8b 00                	mov    (%rax),%eax
   2db10:	eb 05                	jmp    2db17 <__b2d_D2A+0xb1>
   2db12:	b8 00 00 00 00       	mov    $0x0,%eax
   2db17:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2db1a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2db1d:	83 c0 15             	add    $0x15,%eax
   2db20:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2db23:	89 d6                	mov    %edx,%esi
   2db25:	89 c1                	mov    %eax,%ecx
   2db27:	d3 e6                	shl    %cl,%esi
   2db29:	b8 0b 00 00 00       	mov    $0xb,%eax
   2db2e:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2db31:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2db34:	89 c1                	mov    %eax,%ecx
   2db36:	d3 ea                	shr    %cl,%edx
   2db38:	89 d0                	mov    %edx,%eax
   2db3a:	09 f0                	or     %esi,%eax
   2db3c:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2db3f:	e9 a4 00 00 00       	jmp    2dbe8 <__b2d_D2A+0x182>
   2db44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2db48:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2db4c:	76 0d                	jbe    2db5b <__b2d_D2A+0xf5>
   2db4e:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2db53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2db57:	8b 00                	mov    (%rax),%eax
   2db59:	eb 05                	jmp    2db60 <__b2d_D2A+0xfa>
   2db5b:	b8 00 00 00 00       	mov    $0x0,%eax
   2db60:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2db63:	83 6d d4 0b          	subl   $0xb,-0x2c(%rbp)
   2db67:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2db6b:	74 6a                	je     2dbd7 <__b2d_D2A+0x171>
   2db6d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2db70:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2db73:	89 d6                	mov    %edx,%esi
   2db75:	89 c1                	mov    %eax,%ecx
   2db77:	d3 e6                	shl    %cl,%esi
   2db79:	b8 20 00 00 00       	mov    $0x20,%eax
   2db7e:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2db81:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2db84:	89 c1                	mov    %eax,%ecx
   2db86:	d3 ea                	shr    %cl,%edx
   2db88:	89 d0                	mov    %edx,%eax
   2db8a:	09 f0                	or     %esi,%eax
   2db8c:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2db91:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2db94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2db98:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2db9c:	76 0d                	jbe    2dbab <__b2d_D2A+0x145>
   2db9e:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2dba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2dba7:	8b 00                	mov    (%rax),%eax
   2dba9:	eb 05                	jmp    2dbb0 <__b2d_D2A+0x14a>
   2dbab:	b8 00 00 00 00       	mov    $0x0,%eax
   2dbb0:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2dbb3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2dbb6:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2dbb9:	89 d6                	mov    %edx,%esi
   2dbbb:	89 c1                	mov    %eax,%ecx
   2dbbd:	d3 e6                	shl    %cl,%esi
   2dbbf:	b8 20 00 00 00       	mov    $0x20,%eax
   2dbc4:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2dbc7:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2dbca:	89 c1                	mov    %eax,%ecx
   2dbcc:	d3 ea                	shr    %cl,%edx
   2dbce:	89 d0                	mov    %edx,%eax
   2dbd0:	09 f0                	or     %esi,%eax
   2dbd2:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2dbd5:	eb 11                	jmp    2dbe8 <__b2d_D2A+0x182>
   2dbd7:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2dbda:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2dbdf:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2dbe2:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2dbe5:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2dbe8:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2dbed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2dbf1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2dbf8:	00 00 
   2dbfa:	74 05                	je     2dc01 <__b2d_D2A+0x19b>
   2dbfc:	e8 f6 5b ff ff       	call   237f7 <__stack_chk_fail>
   2dc01:	c9                   	leave  
   2dc02:	c3                   	ret    

000000000002dc03 <__d2b_D2A>:
   2dc03:	f3 0f 1e fa          	endbr64 
   2dc07:	55                   	push   %rbp
   2dc08:	48 89 e5             	mov    %rsp,%rbp
   2dc0b:	53                   	push   %rbx
   2dc0c:	48 83 ec 68          	sub    $0x68,%rsp
   2dc10:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
   2dc15:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
   2dc19:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
   2dc1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2dc24:	00 00 
   2dc26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2dc2a:	31 c0                	xor    %eax,%eax
   2dc2c:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
   2dc31:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2dc36:	bf 01 00 00 00       	mov    $0x1,%edi
   2dc3b:	e8 af ef ff ff       	call   2cbef <__Balloc_D2A>
   2dc40:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2dc44:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2dc49:	75 0a                	jne    2dc55 <__d2b_D2A+0x52>
   2dc4b:	b8 00 00 00 00       	mov    $0x0,%eax
   2dc50:	e9 6b 01 00 00       	jmp    2ddc0 <__d2b_D2A+0x1bd>
   2dc55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dc59:	48 83 c0 18          	add    $0x18,%rax
   2dc5d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2dc61:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2dc64:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2dc69:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2dc6c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2dc6f:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   2dc74:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2dc77:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2dc7a:	c1 e8 14             	shr    $0x14,%eax
   2dc7d:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2dc80:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2dc84:	74 0b                	je     2dc91 <__d2b_D2A+0x8e>
   2dc86:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2dc89:	0d 00 00 10 00       	or     $0x100000,%eax
   2dc8e:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2dc91:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2dc94:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2dc97:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2dc9a:	85 c0                	test   %eax,%eax
   2dc9c:	74 7b                	je     2dd19 <__d2b_D2A+0x116>
   2dc9e:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
   2dca2:	48 89 c7             	mov    %rax,%rdi
   2dca5:	e8 1a f1 ff ff       	call   2cdc4 <__lo0bits_D2A>
   2dcaa:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2dcad:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   2dcb1:	74 2b                	je     2dcde <__d2b_D2A+0xdb>
   2dcb3:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2dcb6:	b8 20 00 00 00       	mov    $0x20,%eax
   2dcbb:	2b 45 c8             	sub    -0x38(%rbp),%eax
   2dcbe:	89 c1                	mov    %eax,%ecx
   2dcc0:	d3 e2                	shl    %cl,%edx
   2dcc2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2dcc5:	09 c2                	or     %eax,%edx
   2dcc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dccb:	89 10                	mov    %edx,(%rax)
   2dccd:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2dcd0:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2dcd3:	89 c1                	mov    %eax,%ecx
   2dcd5:	d3 ea                	shr    %cl,%edx
   2dcd7:	89 d0                	mov    %edx,%eax
   2dcd9:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2dcdc:	eb 09                	jmp    2dce7 <__d2b_D2A+0xe4>
   2dcde:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2dce1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dce5:	89 10                	mov    %edx,(%rax)
   2dce7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dceb:	48 83 c0 04          	add    $0x4,%rax
   2dcef:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2dcf2:	89 10                	mov    %edx,(%rax)
   2dcf4:	8b 00                	mov    (%rax),%eax
   2dcf6:	85 c0                	test   %eax,%eax
   2dcf8:	74 07                	je     2dd01 <__d2b_D2A+0xfe>
   2dcfa:	ba 02 00 00 00       	mov    $0x2,%edx
   2dcff:	eb 05                	jmp    2dd06 <__d2b_D2A+0x103>
   2dd01:	ba 01 00 00 00       	mov    $0x1,%edx
   2dd06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dd0a:	89 50 14             	mov    %edx,0x14(%rax)
   2dd0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dd11:	8b 40 14             	mov    0x14(%rax),%eax
   2dd14:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2dd17:	eb 31                	jmp    2dd4a <__d2b_D2A+0x147>
   2dd19:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   2dd1d:	48 89 c7             	mov    %rax,%rdi
   2dd20:	e8 9f f0 ff ff       	call   2cdc4 <__lo0bits_D2A>
   2dd25:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2dd28:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2dd2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dd2f:	89 10                	mov    %edx,(%rax)
   2dd31:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dd35:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2dd3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2dd40:	8b 40 14             	mov    0x14(%rax),%eax
   2dd43:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2dd46:	83 45 c8 20          	addl   $0x20,-0x38(%rbp)
   2dd4a:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2dd4e:	74 26                	je     2dd76 <__d2b_D2A+0x173>
   2dd50:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2dd53:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2dd56:	01 d0                	add    %edx,%eax
   2dd58:	8d 90 cd fb ff ff    	lea    -0x433(%rax),%edx
   2dd5e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2dd62:	89 10                	mov    %edx,(%rax)
   2dd64:	b8 35 00 00 00       	mov    $0x35,%eax
   2dd69:	2b 45 c8             	sub    -0x38(%rbp),%eax
   2dd6c:	89 c2                	mov    %eax,%edx
   2dd6e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2dd72:	89 10                	mov    %edx,(%rax)
   2dd74:	eb 46                	jmp    2ddbc <__d2b_D2A+0x1b9>
   2dd76:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2dd79:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2dd7c:	01 d0                	add    %edx,%eax
   2dd7e:	8d 90 ce fb ff ff    	lea    -0x432(%rax),%edx
   2dd84:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2dd88:	89 10                	mov    %edx,(%rax)
   2dd8a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2dd8d:	c1 e0 05             	shl    $0x5,%eax
   2dd90:	89 c3                	mov    %eax,%ebx
   2dd92:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2dd95:	83 e8 01             	sub    $0x1,%eax
   2dd98:	48 98                	cltq   
   2dd9a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2dda1:	00 
   2dda2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2dda6:	48 01 d0             	add    %rdx,%rax
   2dda9:	8b 00                	mov    (%rax),%eax
   2ddab:	89 c7                	mov    %eax,%edi
   2ddad:	e8 43 f2 ff ff       	call   2cff5 <__hi0bits_D2A>
   2ddb2:	29 c3                	sub    %eax,%ebx
   2ddb4:	89 da                	mov    %ebx,%edx
   2ddb6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ddba:	89 10                	mov    %edx,(%rax)
   2ddbc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ddc0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2ddc4:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2ddcb:	00 00 
   2ddcd:	74 05                	je     2ddd4 <__d2b_D2A+0x1d1>
   2ddcf:	e8 23 5a ff ff       	call   237f7 <__stack_chk_fail>
   2ddd4:	48 83 c4 68          	add    $0x68,%rsp
   2ddd8:	5b                   	pop    %rbx
   2ddd9:	5d                   	pop    %rbp
   2ddda:	c3                   	ret    

000000000002dddb <__fpclassify>:
   2dddb:	f3 0f 1e fa          	endbr64 
   2dddf:	55                   	push   %rbp
   2dde0:	48 89 e5             	mov    %rsp,%rbp
   2dde3:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2dde8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2ddec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ddf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ddf4:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2ddf8:	66 25 f0 7f          	and    $0x7ff0,%ax
   2ddfc:	66 85 c0             	test   %ax,%ax
   2ddff:	75 28                	jne    2de29 <__fpclassify+0x4e>
   2de01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de05:	8b 40 04             	mov    0x4(%rax),%eax
   2de08:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2de0d:	85 c0                	test   %eax,%eax
   2de0f:	75 11                	jne    2de22 <__fpclassify+0x47>
   2de11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de15:	8b 00                	mov    (%rax),%eax
   2de17:	85 c0                	test   %eax,%eax
   2de19:	75 07                	jne    2de22 <__fpclassify+0x47>
   2de1b:	b8 02 00 00 00       	mov    $0x2,%eax
   2de20:	eb 46                	jmp    2de68 <__fpclassify+0x8d>
   2de22:	b8 03 00 00 00       	mov    $0x3,%eax
   2de27:	eb 3f                	jmp    2de68 <__fpclassify+0x8d>
   2de29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de2d:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2de31:	66 25 f0 7f          	and    $0x7ff0,%ax
   2de35:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   2de39:	75 28                	jne    2de63 <__fpclassify+0x88>
   2de3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de3f:	8b 40 04             	mov    0x4(%rax),%eax
   2de42:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2de47:	85 c0                	test   %eax,%eax
   2de49:	75 11                	jne    2de5c <__fpclassify+0x81>
   2de4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de4f:	8b 00                	mov    (%rax),%eax
   2de51:	85 c0                	test   %eax,%eax
   2de53:	75 07                	jne    2de5c <__fpclassify+0x81>
   2de55:	b8 01 00 00 00       	mov    $0x1,%eax
   2de5a:	eb 0c                	jmp    2de68 <__fpclassify+0x8d>
   2de5c:	b8 00 00 00 00       	mov    $0x0,%eax
   2de61:	eb 05                	jmp    2de68 <__fpclassify+0x8d>
   2de63:	b8 04 00 00 00       	mov    $0x4,%eax
   2de68:	5d                   	pop    %rbp
   2de69:	c3                   	ret    

000000000002de6a <__fpclassifyf>:
   2de6a:	f3 0f 1e fa          	endbr64 
   2de6e:	55                   	push   %rbp
   2de6f:	48 89 e5             	mov    %rsp,%rbp
   2de72:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
   2de77:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   2de7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2de7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de83:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   2de87:	66 25 80 7f          	and    $0x7f80,%ax
   2de8b:	66 85 c0             	test   %ax,%ax
   2de8e:	75 1d                	jne    2dead <__fpclassifyf+0x43>
   2de90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2de94:	8b 00                	mov    (%rax),%eax
   2de96:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   2de9b:	85 c0                	test   %eax,%eax
   2de9d:	75 07                	jne    2dea6 <__fpclassifyf+0x3c>
   2de9f:	b8 02 00 00 00       	mov    $0x2,%eax
   2dea4:	eb 3b                	jmp    2dee1 <__fpclassifyf+0x77>
   2dea6:	b8 03 00 00 00       	mov    $0x3,%eax
   2deab:	eb 34                	jmp    2dee1 <__fpclassifyf+0x77>
   2dead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2deb1:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   2deb5:	66 25 80 7f          	and    $0x7f80,%ax
   2deb9:	66 3d 80 7f          	cmp    $0x7f80,%ax
   2debd:	75 1d                	jne    2dedc <__fpclassifyf+0x72>
   2debf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2dec3:	8b 00                	mov    (%rax),%eax
   2dec5:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   2deca:	85 c0                	test   %eax,%eax
   2decc:	75 07                	jne    2ded5 <__fpclassifyf+0x6b>
   2dece:	b8 01 00 00 00       	mov    $0x1,%eax
   2ded3:	eb 0c                	jmp    2dee1 <__fpclassifyf+0x77>
   2ded5:	b8 00 00 00 00       	mov    $0x0,%eax
   2deda:	eb 05                	jmp    2dee1 <__fpclassifyf+0x77>
   2dedc:	b8 04 00 00 00       	mov    $0x4,%eax
   2dee1:	5d                   	pop    %rbp
   2dee2:	c3                   	ret    

000000000002dee3 <__fpclassifyl>:
   2dee3:	f3 0f 1e fa          	endbr64 
   2dee7:	55                   	push   %rbp
   2dee8:	48 89 e5             	mov    %rsp,%rbp
   2deeb:	48 8d 45 10          	lea    0x10(%rbp),%rax
   2deef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2def3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2def7:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2defb:	66 25 ff 7f          	and    $0x7fff,%ax
   2deff:	66 85 c0             	test   %ax,%ax
   2df02:	75 23                	jne    2df27 <__fpclassifyl+0x44>
   2df04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df08:	8b 40 04             	mov    0x4(%rax),%eax
   2df0b:	85 c0                	test   %eax,%eax
   2df0d:	75 11                	jne    2df20 <__fpclassifyl+0x3d>
   2df0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df13:	8b 00                	mov    (%rax),%eax
   2df15:	85 c0                	test   %eax,%eax
   2df17:	75 07                	jne    2df20 <__fpclassifyl+0x3d>
   2df19:	b8 02 00 00 00       	mov    $0x2,%eax
   2df1e:	eb 56                	jmp    2df76 <__fpclassifyl+0x93>
   2df20:	b8 03 00 00 00       	mov    $0x3,%eax
   2df25:	eb 4f                	jmp    2df76 <__fpclassifyl+0x93>
   2df27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df2b:	8b 40 04             	mov    0x4(%rax),%eax
   2df2e:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   2df33:	89 c2                	mov    %eax,%edx
   2df35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df39:	89 50 04             	mov    %edx,0x4(%rax)
   2df3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df40:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2df44:	66 25 ff 7f          	and    $0x7fff,%ax
   2df48:	66 3d ff 7f          	cmp    $0x7fff,%ax
   2df4c:	75 23                	jne    2df71 <__fpclassifyl+0x8e>
   2df4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df52:	8b 40 04             	mov    0x4(%rax),%eax
   2df55:	85 c0                	test   %eax,%eax
   2df57:	75 11                	jne    2df6a <__fpclassifyl+0x87>
   2df59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2df5d:	8b 00                	mov    (%rax),%eax
   2df5f:	85 c0                	test   %eax,%eax
   2df61:	75 07                	jne    2df6a <__fpclassifyl+0x87>
   2df63:	b8 01 00 00 00       	mov    $0x1,%eax
   2df68:	eb 0c                	jmp    2df76 <__fpclassifyl+0x93>
   2df6a:	b8 00 00 00 00       	mov    $0x0,%eax
   2df6f:	eb 05                	jmp    2df76 <__fpclassifyl+0x93>
   2df71:	b8 04 00 00 00       	mov    $0x4,%eax
   2df76:	5d                   	pop    %rbp
   2df77:	c3                   	ret    

000000000002df78 <wrapv>:
   2df78:	55                   	push   %rbp
   2df79:	48 89 e5             	mov    %rsp,%rbp
   2df7c:	89 f8                	mov    %edi,%eax
   2df7e:	88 45 fc             	mov    %al,-0x4(%rbp)
   2df81:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2df85:	84 c0                	test   %al,%al
   2df87:	79 06                	jns    2df8f <wrapv+0x17>
   2df89:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2df8d:	eb 04                	jmp    2df93 <wrapv+0x1b>
   2df8f:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2df93:	5d                   	pop    %rbp
   2df94:	c3                   	ret    

000000000002df95 <mbsinit>:
   2df95:	f3 0f 1e fa          	endbr64 
   2df99:	55                   	push   %rbp
   2df9a:	48 89 e5             	mov    %rsp,%rbp
   2df9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2dfa1:	b8 01 00 00 00       	mov    $0x1,%eax
   2dfa6:	5d                   	pop    %rbp
   2dfa7:	c3                   	ret    

000000000002dfa8 <mbrtowc>:
   2dfa8:	f3 0f 1e fa          	endbr64 
   2dfac:	55                   	push   %rbp
   2dfad:	48 89 e5             	mov    %rsp,%rbp
   2dfb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2dfb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2dfb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2dfbc:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2dfc0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2dfc5:	75 07                	jne    2dfce <mbrtowc+0x26>
   2dfc7:	b8 00 00 00 00       	mov    $0x0,%eax
   2dfcc:	eb 36                	jmp    2e004 <mbrtowc+0x5c>
   2dfce:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2dfd3:	75 09                	jne    2dfde <mbrtowc+0x36>
   2dfd5:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   2dfdc:	eb 26                	jmp    2e004 <mbrtowc+0x5c>
   2dfde:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2dfe3:	74 10                	je     2dff5 <mbrtowc+0x4d>
   2dfe5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2dfe9:	0f b6 00             	movzbl (%rax),%eax
   2dfec:	0f b6 d0             	movzbl %al,%edx
   2dfef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2dff3:	89 10                	mov    %edx,(%rax)
   2dff5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2dff9:	0f b6 00             	movzbl (%rax),%eax
   2dffc:	84 c0                	test   %al,%al
   2dffe:	0f 95 c0             	setne  %al
   2e001:	0f b6 c0             	movzbl %al,%eax
   2e004:	5d                   	pop    %rbp
   2e005:	c3                   	ret    

000000000002e006 <mbsrtowcs>:
   2e006:	f3 0f 1e fa          	endbr64 
   2e00a:	55                   	push   %rbp
   2e00b:	48 89 e5             	mov    %rsp,%rbp
   2e00e:	48 83 ec 20          	sub    $0x20,%rsp
   2e012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2e016:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2e01a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2e01e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2e022:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2e026:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e02a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2e02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e032:	49 89 c8             	mov    %rcx,%r8
   2e035:	48 89 d1             	mov    %rdx,%rcx
   2e038:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2e03f:	48 89 c7             	mov    %rax,%rdi
   2e042:	e8 02 00 00 00       	call   2e049 <mbsnrtowcs>
   2e047:	c9                   	leave  
   2e048:	c3                   	ret    

000000000002e049 <mbsnrtowcs>:
   2e049:	f3 0f 1e fa          	endbr64 
   2e04d:	55                   	push   %rbp
   2e04e:	48 89 e5             	mov    %rsp,%rbp
   2e051:	48 83 ec 40          	sub    $0x40,%rsp
   2e055:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2e059:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2e05d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2e061:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2e065:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2e069:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2e06e:	75 18                	jne    2e088 <mbsnrtowcs+0x3f>
   2e070:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e074:	48 8b 00             	mov    (%rax),%rax
   2e077:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2e07b:	48 89 d6             	mov    %rdx,%rsi
   2e07e:	48 89 c7             	mov    %rax,%rdi
   2e081:	e8 7b 07 00 00       	call   2e801 <strnlen>
   2e086:	eb 7e                	jmp    2e106 <mbsnrtowcs+0xbd>
   2e088:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   2e08f:	00 
   2e090:	eb 47                	jmp    2e0d9 <mbsnrtowcs+0x90>
   2e092:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e096:	48 8b 10             	mov    (%rax),%rdx
   2e099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e09d:	48 01 d0             	add    %rdx,%rax
   2e0a0:	0f b6 00             	movzbl (%rax),%eax
   2e0a3:	89 c1                	mov    %eax,%ecx
   2e0a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e0a9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2e0b0:	00 
   2e0b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e0b5:	48 01 d0             	add    %rdx,%rax
   2e0b8:	0f b6 d1             	movzbl %cl,%edx
   2e0bb:	89 10                	mov    %edx,(%rax)
   2e0bd:	8b 00                	mov    (%rax),%eax
   2e0bf:	85 c0                	test   %eax,%eax
   2e0c1:	75 11                	jne    2e0d4 <mbsnrtowcs+0x8b>
   2e0c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e0c7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2e0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e0d2:	eb 32                	jmp    2e106 <mbsnrtowcs+0xbd>
   2e0d4:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   2e0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e0dd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   2e0e1:	73 0a                	jae    2e0ed <mbsnrtowcs+0xa4>
   2e0e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e0e7:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   2e0eb:	72 a5                	jb     2e092 <mbsnrtowcs+0x49>
   2e0ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e0f1:	48 8b 10             	mov    (%rax),%rdx
   2e0f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e0f8:	48 01 c2             	add    %rax,%rdx
   2e0fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e0ff:	48 89 10             	mov    %rdx,(%rax)
   2e102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e106:	c9                   	leave  
   2e107:	c3                   	ret    

000000000002e108 <wcrtomb>:
   2e108:	f3 0f 1e fa          	endbr64 
   2e10c:	55                   	push   %rbp
   2e10d:	48 89 e5             	mov    %rsp,%rbp
   2e110:	48 83 ec 20          	sub    $0x20,%rsp
   2e114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2e118:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2e11b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2e11f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2e124:	75 07                	jne    2e12d <wcrtomb+0x25>
   2e126:	b8 01 00 00 00       	mov    $0x1,%eax
   2e12b:	eb 3b                	jmp    2e168 <wcrtomb+0x60>
   2e12d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2e131:	78 09                	js     2e13c <wcrtomb+0x34>
   2e133:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
   2e13a:	7e 14                	jle    2e150 <wcrtomb+0x48>
   2e13c:	e8 88 5d ff ff       	call   23ec9 <__errno>
   2e141:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2e147:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2e14e:	eb 18                	jmp    2e168 <wcrtomb+0x60>
   2e150:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2e153:	0f b6 c0             	movzbl %al,%eax
   2e156:	89 c7                	mov    %eax,%edi
   2e158:	e8 1b fe ff ff       	call   2df78 <wrapv>
   2e15d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2e161:	88 02                	mov    %al,(%rdx)
   2e163:	b8 01 00 00 00       	mov    $0x1,%eax
   2e168:	c9                   	leave  
   2e169:	c3                   	ret    

000000000002e16a <wcsrtombs>:
   2e16a:	f3 0f 1e fa          	endbr64 
   2e16e:	55                   	push   %rbp
   2e16f:	48 89 e5             	mov    %rsp,%rbp
   2e172:	48 83 ec 20          	sub    $0x20,%rsp
   2e176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2e17a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2e17e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2e182:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2e186:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2e18a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e18e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2e192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e196:	49 89 c8             	mov    %rcx,%r8
   2e199:	48 89 d1             	mov    %rdx,%rcx
   2e19c:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2e1a3:	48 89 c7             	mov    %rax,%rdi
   2e1a6:	e8 02 00 00 00       	call   2e1ad <wcsnrtombs>
   2e1ab:	c9                   	leave  
   2e1ac:	c3                   	ret    

000000000002e1ad <wcsnrtombs>:
   2e1ad:	f3 0f 1e fa          	endbr64 
   2e1b1:	55                   	push   %rbp
   2e1b2:	48 89 e5             	mov    %rsp,%rbp
   2e1b5:	53                   	push   %rbx
   2e1b6:	48 83 ec 48          	sub    $0x48,%rsp
   2e1ba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2e1be:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2e1c2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2e1c6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2e1ca:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2e1ce:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2e1d3:	75 6e                	jne    2e243 <wcsnrtombs+0x96>
   2e1d5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2e1dc:	00 
   2e1dd:	eb 51                	jmp    2e230 <wcsnrtombs+0x83>
   2e1df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e1e3:	48 8b 00             	mov    (%rax),%rax
   2e1e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e1ea:	48 c1 e2 02          	shl    $0x2,%rdx
   2e1ee:	48 01 d0             	add    %rdx,%rax
   2e1f1:	8b 00                	mov    (%rax),%eax
   2e1f3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2e1f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2e1fa:	78 09                	js     2e205 <wcsnrtombs+0x58>
   2e1fc:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
   2e203:	7e 17                	jle    2e21c <wcsnrtombs+0x6f>
   2e205:	e8 bf 5c ff ff       	call   23ec9 <__errno>
   2e20a:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2e210:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2e217:	e9 f3 00 00 00       	jmp    2e30f <wcsnrtombs+0x162>
   2e21c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2e220:	75 09                	jne    2e22b <wcsnrtombs+0x7e>
   2e222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e226:	e9 e4 00 00 00       	jmp    2e30f <wcsnrtombs+0x162>
   2e22b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2e230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e234:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2e238:	72 a5                	jb     2e1df <wcsnrtombs+0x32>
   2e23a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e23e:	e9 cc 00 00 00       	jmp    2e30f <wcsnrtombs+0x162>
   2e243:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2e24a:	00 
   2e24b:	e9 8a 00 00 00       	jmp    2e2da <wcsnrtombs+0x12d>
   2e250:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e254:	48 8b 00             	mov    (%rax),%rax
   2e257:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e25b:	48 c1 e2 02          	shl    $0x2,%rdx
   2e25f:	48 01 d0             	add    %rdx,%rax
   2e262:	8b 00                	mov    (%rax),%eax
   2e264:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2e267:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   2e26b:	78 09                	js     2e276 <wcsnrtombs+0xc9>
   2e26d:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
   2e274:	7e 2d                	jle    2e2a3 <wcsnrtombs+0xf6>
   2e276:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e27a:	48 8b 00             	mov    (%rax),%rax
   2e27d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e281:	48 c1 e2 02          	shl    $0x2,%rdx
   2e285:	48 01 c2             	add    %rax,%rdx
   2e288:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e28c:	48 89 10             	mov    %rdx,(%rax)
   2e28f:	e8 35 5c ff ff       	call   23ec9 <__errno>
   2e294:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2e29a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2e2a1:	eb 6c                	jmp    2e30f <wcsnrtombs+0x162>
   2e2a3:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2e2a6:	0f b6 c0             	movzbl %al,%eax
   2e2a9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e2ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e2b1:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
   2e2b5:	89 c7                	mov    %eax,%edi
   2e2b7:	e8 bc fc ff ff       	call   2df78 <wrapv>
   2e2bc:	88 03                	mov    %al,(%rbx)
   2e2be:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   2e2c2:	75 11                	jne    2e2d5 <wcsnrtombs+0x128>
   2e2c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e2c8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2e2cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e2d3:	eb 3a                	jmp    2e30f <wcsnrtombs+0x162>
   2e2d5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2e2da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e2de:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2e2e2:	73 0e                	jae    2e2f2 <wcsnrtombs+0x145>
   2e2e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e2e8:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2e2ec:	0f 82 5e ff ff ff    	jb     2e250 <wcsnrtombs+0xa3>
   2e2f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e2f6:	48 8b 00             	mov    (%rax),%rax
   2e2f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e2fd:	48 c1 e2 02          	shl    $0x2,%rdx
   2e301:	48 01 c2             	add    %rax,%rdx
   2e304:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e308:	48 89 10             	mov    %rdx,(%rax)
   2e30b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e30f:	48 83 c4 48          	add    $0x48,%rsp
   2e313:	5b                   	pop    %rbx
   2e314:	5d                   	pop    %rbp
   2e315:	c3                   	ret    

000000000002e316 <__sfvwrite>:
   2e316:	f3 0f 1e fa          	endbr64 
   2e31a:	55                   	push   %rbp
   2e31b:	48 89 e5             	mov    %rsp,%rbp
   2e31e:	48 83 ec 60          	sub    $0x60,%rsp
   2e322:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2e326:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2e32a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e32e:	8b 40 0c             	mov    0xc(%rax),%eax
   2e331:	48 98                	cltq   
   2e333:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e337:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2e33c:	75 0a                	jne    2e348 <__sfvwrite+0x32>
   2e33e:	b8 00 00 00 00       	mov    $0x0,%eax
   2e343:	e9 2c 04 00 00       	jmp    2e774 <__sfvwrite+0x45e>
   2e348:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e34c:	48 8b 00             	mov    (%rax),%rax
   2e34f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2e353:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e357:	48 8b 00             	mov    (%rax),%rax
   2e35a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e35e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e362:	48 8b 40 08          	mov    0x8(%rax),%rax
   2e366:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e36a:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2e36f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e373:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2e377:	98                   	cwtl   
   2e378:	83 e0 02             	and    $0x2,%eax
   2e37b:	85 c0                	test   %eax,%eax
   2e37d:	0f 85 c4 03 00 00    	jne    2e747 <__sfvwrite+0x431>
   2e383:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e387:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2e38b:	98                   	cwtl   
   2e38c:	83 e0 01             	and    $0x1,%eax
   2e38f:	85 c0                	test   %eax,%eax
   2e391:	0f 85 45 02 00 00    	jne    2e5dc <__sfvwrite+0x2c6>
   2e397:	eb 1c                	jmp    2e3b5 <__sfvwrite+0x9f>
   2e399:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e39d:	48 8b 00             	mov    (%rax),%rax
   2e3a0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e3a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e3a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   2e3ac:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e3b0:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2e3b5:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2e3ba:	74 dd                	je     2e399 <__sfvwrite+0x83>
   2e3bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e3c0:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2e3c4:	98                   	cwtl   
   2e3c5:	25 00 42 00 00       	and    $0x4200,%eax
   2e3ca:	3d 00 42 00 00       	cmp    $0x4200,%eax
   2e3cf:	0f 85 c7 00 00 00    	jne    2e49c <__sfvwrite+0x186>
   2e3d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e3d9:	8b 40 0c             	mov    0xc(%rax),%eax
   2e3dc:	48 98                	cltq   
   2e3de:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2e3e2:	0f 86 b4 00 00 00    	jbe    2e49c <__sfvwrite+0x186>
   2e3e8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e3ec:	48 8b 10             	mov    (%rax),%rdx
   2e3ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e3f3:	48 8b 40 18          	mov    0x18(%rax),%rax
   2e3f7:	48 29 c2             	sub    %rax,%rdx
   2e3fa:	48 89 d0             	mov    %rdx,%rax
   2e3fd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2e401:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e405:	8b 40 20             	mov    0x20(%rax),%eax
   2e408:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2e40b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e40e:	01 c0                	add    %eax,%eax
   2e410:	83 c0 01             	add    $0x1,%eax
   2e413:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2e416:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e419:	48 98                	cltq   
   2e41b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2e41f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2e423:	48 01 ca             	add    %rcx,%rdx
   2e426:	48 39 d0             	cmp    %rdx,%rax
   2e429:	72 e0                	jb     2e40b <__sfvwrite+0xf5>
   2e42b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e42e:	83 c0 01             	add    $0x1,%eax
   2e431:	48 63 d0             	movslq %eax,%rdx
   2e434:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e438:	48 8b 40 18          	mov    0x18(%rax),%rax
   2e43c:	48 89 d6             	mov    %rdx,%rsi
   2e43f:	48 89 c7             	mov    %rax,%rdi
   2e442:	e8 c8 48 ff ff       	call   22d0f <dlrealloc>
   2e447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e44b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2e450:	0f 84 f4 02 00 00    	je     2e74a <__sfvwrite+0x434>
   2e456:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e45a:	8b 50 0c             	mov    0xc(%rax),%edx
   2e45d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e461:	8b 40 20             	mov    0x20(%rax),%eax
   2e464:	8b 4d c8             	mov    -0x38(%rbp),%ecx
   2e467:	29 c1                	sub    %eax,%ecx
   2e469:	89 c8                	mov    %ecx,%eax
   2e46b:	01 c2                	add    %eax,%edx
   2e46d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e471:	89 50 0c             	mov    %edx,0xc(%rax)
   2e474:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e478:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2e47c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2e480:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e484:	8b 55 c8             	mov    -0x38(%rbp),%edx
   2e487:	89 50 20             	mov    %edx,0x20(%rax)
   2e48a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2e48e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e492:	48 01 c2             	add    %rax,%rdx
   2e495:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e499:	48 89 10             	mov    %rdx,(%rax)
   2e49c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4a0:	8b 40 0c             	mov    0xc(%rax),%eax
   2e4a3:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e4a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4aa:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2e4ae:	98                   	cwtl   
   2e4af:	25 00 02 00 00       	and    $0x200,%eax
   2e4b4:	85 c0                	test   %eax,%eax
   2e4b6:	74 63                	je     2e51b <__sfvwrite+0x205>
   2e4b8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e4bb:	48 98                	cltq   
   2e4bd:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2e4c1:	73 07                	jae    2e4ca <__sfvwrite+0x1b4>
   2e4c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e4c7:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e4ca:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e4cd:	48 63 d0             	movslq %eax,%rdx
   2e4d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4d4:	48 8b 00             	mov    (%rax),%rax
   2e4d7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e4db:	48 89 ce             	mov    %rcx,%rsi
   2e4de:	48 89 c7             	mov    %rax,%rdi
   2e4e1:	e8 09 4f ff ff       	call   233ef <memcpy>
   2e4e6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4ea:	8b 40 0c             	mov    0xc(%rax),%eax
   2e4ed:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2e4f0:	89 c2                	mov    %eax,%edx
   2e4f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4f6:	89 50 0c             	mov    %edx,0xc(%rax)
   2e4f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e4fd:	48 8b 10             	mov    (%rax),%rdx
   2e500:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e503:	48 98                	cltq   
   2e505:	48 01 c2             	add    %rax,%rdx
   2e508:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e50c:	48 89 10             	mov    %rdx,(%rax)
   2e50f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e513:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e516:	e9 88 00 00 00       	jmp    2e5a3 <__sfvwrite+0x28d>
   2e51b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e51f:	48 8b 10             	mov    (%rax),%rdx
   2e522:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e526:	48 8b 40 18          	mov    0x18(%rax),%rax
   2e52a:	48 39 c2             	cmp    %rax,%rdx
   2e52d:	76 0f                	jbe    2e53e <__sfvwrite+0x228>
   2e52f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e532:	48 98                	cltq   
   2e534:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2e538:	0f 87 0f 02 00 00    	ja     2e74d <__sfvwrite+0x437>
   2e53e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e542:	8b 40 20             	mov    0x20(%rax),%eax
   2e545:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e548:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e54b:	48 98                	cltq   
   2e54d:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2e551:	0f 83 f9 01 00 00    	jae    2e750 <__sfvwrite+0x43a>
   2e557:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e55b:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e55e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e561:	48 63 d0             	movslq %eax,%rdx
   2e564:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e568:	48 8b 00             	mov    (%rax),%rax
   2e56b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e56f:	48 89 ce             	mov    %rcx,%rsi
   2e572:	48 89 c7             	mov    %rax,%rdi
   2e575:	e8 75 4e ff ff       	call   233ef <memcpy>
   2e57a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e57e:	8b 40 0c             	mov    0xc(%rax),%eax
   2e581:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2e584:	89 c2                	mov    %eax,%edx
   2e586:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e58a:	89 50 0c             	mov    %edx,0xc(%rax)
   2e58d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e591:	48 8b 10             	mov    (%rax),%rdx
   2e594:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e597:	48 98                	cltq   
   2e599:	48 01 c2             	add    %rax,%rdx
   2e59c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e5a0:	48 89 10             	mov    %rdx,(%rax)
   2e5a3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e5a6:	48 98                	cltq   
   2e5a8:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   2e5ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e5af:	48 98                	cltq   
   2e5b1:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   2e5b5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e5b9:	8b 40 0c             	mov    0xc(%rax),%eax
   2e5bc:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2e5bf:	89 c2                	mov    %eax,%edx
   2e5c1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e5c5:	89 50 0c             	mov    %edx,0xc(%rax)
   2e5c8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e5cc:	8b 40 0c             	mov    0xc(%rax),%eax
   2e5cf:	85 c0                	test   %eax,%eax
   2e5d1:	0f 85 de fd ff ff    	jne    2e3b5 <__sfvwrite+0x9f>
   2e5d7:	e9 64 01 00 00       	jmp    2e740 <__sfvwrite+0x42a>
   2e5dc:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2e5e3:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2e5ea:	eb 23                	jmp    2e60f <__sfvwrite+0x2f9>
   2e5ec:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2e5f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e5f7:	48 8b 00             	mov    (%rax),%rax
   2e5fa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e5fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e602:	48 8b 40 08          	mov    0x8(%rax),%rax
   2e606:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e60a:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2e60f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2e614:	74 d6                	je     2e5ec <__sfvwrite+0x2d6>
   2e616:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   2e61a:	75 3f                	jne    2e65b <__sfvwrite+0x345>
   2e61c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2e620:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e624:	be 0a 00 00 00       	mov    $0xa,%esi
   2e629:	48 89 c7             	mov    %rax,%rdi
   2e62c:	e8 ce bf ff ff       	call   2a5ff <memchr>
   2e631:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2e635:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2e63a:	74 0e                	je     2e64a <__sfvwrite+0x334>
   2e63c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e640:	48 83 c0 01          	add    $0x1,%rax
   2e644:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   2e648:	eb 07                	jmp    2e651 <__sfvwrite+0x33b>
   2e64a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e64e:	83 c0 01             	add    $0x1,%eax
   2e651:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2e654:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   2e65b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2e65e:	48 98                	cltq   
   2e660:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2e664:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
   2e669:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2e66c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e670:	8b 50 0c             	mov    0xc(%rax),%edx
   2e673:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e677:	8b 40 20             	mov    0x20(%rax),%eax
   2e67a:	01 d0                	add    %edx,%eax
   2e67c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e67f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e683:	48 8b 10             	mov    (%rax),%rdx
   2e686:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e68a:	48 8b 40 18          	mov    0x18(%rax),%rax
   2e68e:	48 39 c2             	cmp    %rax,%rdx
   2e691:	76 0c                	jbe    2e69f <__sfvwrite+0x389>
   2e693:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2e696:	3b 45 bc             	cmp    -0x44(%rbp),%eax
   2e699:	0f 8f b4 00 00 00    	jg     2e753 <__sfvwrite+0x43d>
   2e69f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6a3:	8b 40 20             	mov    0x20(%rax),%eax
   2e6a6:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e6a9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e6ac:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   2e6af:	0f 8e a1 00 00 00    	jle    2e756 <__sfvwrite+0x440>
   2e6b5:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2e6b8:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e6bb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e6be:	48 63 d0             	movslq %eax,%rdx
   2e6c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6c5:	48 8b 00             	mov    (%rax),%rax
   2e6c8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e6cc:	48 89 ce             	mov    %rcx,%rsi
   2e6cf:	48 89 c7             	mov    %rax,%rdi
   2e6d2:	e8 18 4d ff ff       	call   233ef <memcpy>
   2e6d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6db:	8b 40 0c             	mov    0xc(%rax),%eax
   2e6de:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2e6e1:	89 c2                	mov    %eax,%edx
   2e6e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6e7:	89 50 0c             	mov    %edx,0xc(%rax)
   2e6ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6ee:	48 8b 10             	mov    (%rax),%rdx
   2e6f1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e6f4:	48 98                	cltq   
   2e6f6:	48 01 c2             	add    %rax,%rdx
   2e6f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e6fd:	48 89 10             	mov    %rdx,(%rax)
   2e700:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e703:	29 45 c4             	sub    %eax,-0x3c(%rbp)
   2e706:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   2e70a:	74 4d                	je     2e759 <__sfvwrite+0x443>
   2e70c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e70f:	48 98                	cltq   
   2e711:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   2e715:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2e718:	48 98                	cltq   
   2e71a:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   2e71e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e722:	8b 40 0c             	mov    0xc(%rax),%eax
   2e725:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2e728:	89 c2                	mov    %eax,%edx
   2e72a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e72e:	89 50 0c             	mov    %edx,0xc(%rax)
   2e731:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e735:	8b 40 0c             	mov    0xc(%rax),%eax
   2e738:	85 c0                	test   %eax,%eax
   2e73a:	0f 85 cf fe ff ff    	jne    2e60f <__sfvwrite+0x2f9>
   2e740:	b8 00 00 00 00       	mov    $0x0,%eax
   2e745:	eb 2d                	jmp    2e774 <__sfvwrite+0x45e>
   2e747:	90                   	nop
   2e748:	eb 10                	jmp    2e75a <__sfvwrite+0x444>
   2e74a:	90                   	nop
   2e74b:	eb 0d                	jmp    2e75a <__sfvwrite+0x444>
   2e74d:	90                   	nop
   2e74e:	eb 0a                	jmp    2e75a <__sfvwrite+0x444>
   2e750:	90                   	nop
   2e751:	eb 07                	jmp    2e75a <__sfvwrite+0x444>
   2e753:	90                   	nop
   2e754:	eb 04                	jmp    2e75a <__sfvwrite+0x444>
   2e756:	90                   	nop
   2e757:	eb 01                	jmp    2e75a <__sfvwrite+0x444>
   2e759:	90                   	nop
   2e75a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e75e:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2e762:	83 c8 40             	or     $0x40,%eax
   2e765:	89 c2                	mov    %eax,%edx
   2e767:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e76b:	66 89 50 10          	mov    %dx,0x10(%rax)
   2e76f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e774:	c9                   	leave  
   2e775:	c3                   	ret    
   2e776:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2e77d:	00 00 00 

000000000002e780 <_libc__memchr>:
   2e780:	40 88 f0             	mov    %sil,%al
   2e783:	48 89 d1             	mov    %rdx,%rcx
   2e786:	48 85 c9             	test   %rcx,%rcx
   2e789:	74 0b                	je     2e796 <L1>
   2e78b:	fc                   	cld    
   2e78c:	f2 ae                	repnz scas %es:(%rdi),%al
   2e78e:	75 06                	jne    2e796 <L1>
   2e790:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   2e794:	eb 03                	jmp    2e799 <L2>

000000000002e796 <L1>:
   2e796:	48 31 c0             	xor    %rax,%rax

000000000002e799 <L2>:
   2e799:	c3                   	ret    
   2e79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002e7a0 <_bcopy>:
   2e7a0:	48 87 fe             	xchg   %rdi,%rsi
   2e7a3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   2e7aa:	00 00 00 00 
   2e7ae:	66 90                	xchg   %ax,%ax

000000000002e7b0 <__memmove>:
   2e7b0:	49 89 fb             	mov    %rdi,%r11
   2e7b3:	48 89 d1             	mov    %rdx,%rcx
   2e7b6:	48 89 f8             	mov    %rdi,%rax
   2e7b9:	48 29 f0             	sub    %rsi,%rax
   2e7bc:	48 39 c8             	cmp    %rcx,%rax
   2e7bf:	72 16                	jb     2e7d7 <__memmove+0x27>
   2e7c1:	fc                   	cld    
   2e7c2:	48 c1 e9 03          	shr    $0x3,%rcx
   2e7c6:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   2e7c9:	48 89 d1             	mov    %rdx,%rcx
   2e7cc:	48 83 e1 07          	and    $0x7,%rcx
   2e7d0:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2e7d2:	4c 89 d8             	mov    %r11,%rax
   2e7d5:	eb 29                	jmp    2e800 <__memmove+0x50>
   2e7d7:	48 01 cf             	add    %rcx,%rdi
   2e7da:	48 01 ce             	add    %rcx,%rsi
   2e7dd:	fd                   	std    
   2e7de:	48 83 e1 07          	and    $0x7,%rcx
   2e7e2:	48 ff cf             	dec    %rdi
   2e7e5:	48 ff ce             	dec    %rsi
   2e7e8:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2e7ea:	48 89 d1             	mov    %rdx,%rcx
   2e7ed:	48 c1 e9 03          	shr    $0x3,%rcx
   2e7f1:	48 83 ee 07          	sub    $0x7,%rsi
   2e7f5:	48 83 ef 07          	sub    $0x7,%rdi
   2e7f9:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   2e7fc:	4c 89 d8             	mov    %r11,%rax
   2e7ff:	fc                   	cld    
   2e800:	c3                   	ret    

000000000002e801 <strnlen>:
   2e801:	f3 0f 1e fa          	endbr64 
   2e805:	55                   	push   %rbp
   2e806:	48 89 e5             	mov    %rsp,%rbp
   2e809:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2e80d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2e811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e815:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e819:	eb 0a                	jmp    2e825 <strnlen+0x24>
   2e81b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   2e820:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   2e825:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2e82a:	74 0b                	je     2e837 <strnlen+0x36>
   2e82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e830:	0f b6 00             	movzbl (%rax),%eax
   2e833:	84 c0                	test   %al,%al
   2e835:	75 e4                	jne    2e81b <strnlen+0x1a>
   2e837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e83b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2e83f:	5d                   	pop    %rbp
   2e840:	c3                   	ret    

000000000002e841 <bitstob>:
   2e841:	f3 0f 1e fa          	endbr64 
   2e845:	55                   	push   %rbp
   2e846:	48 89 e5             	mov    %rsp,%rbp
   2e849:	53                   	push   %rbx
   2e84a:	48 83 ec 58          	sub    $0x58,%rsp
   2e84e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   2e852:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   2e855:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   2e859:	c7 45 c8 20 00 00 00 	movl   $0x20,-0x38(%rbp)
   2e860:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   2e867:	eb 07                	jmp    2e870 <bitstob+0x2f>
   2e869:	d1 65 c8             	shll   -0x38(%rbp)
   2e86c:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   2e870:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e873:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
   2e876:	7c f1                	jl     2e869 <bitstob+0x28>
   2e878:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2e87b:	89 c7                	mov    %eax,%edi
   2e87d:	e8 6d e3 ff ff       	call   2cbef <__Balloc_D2A>
   2e882:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e886:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2e88b:	75 0a                	jne    2e897 <bitstob+0x56>
   2e88d:	b8 00 00 00 00       	mov    $0x0,%eax
   2e892:	e9 e0 00 00 00       	jmp    2e977 <bitstob+0x136>
   2e897:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2e89a:	83 e8 01             	sub    $0x1,%eax
   2e89d:	c1 f8 05             	sar    $0x5,%eax
   2e8a0:	48 98                	cltq   
   2e8a2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2e8a9:	00 
   2e8aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2e8ae:	48 01 d0             	add    %rdx,%rax
   2e8b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2e8b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e8b9:	48 83 c0 18          	add    $0x18,%rax
   2e8bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2e8c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e8c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e8c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e8cd:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2e8d1:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2e8d5:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   2e8d9:	8b 12                	mov    (%rdx),%edx
   2e8db:	89 10                	mov    %edx,(%rax)
   2e8dd:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
   2e8e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2e8e6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2e8ea:	76 dd                	jbe    2e8c9 <bitstob+0x88>
   2e8ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e8f0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2e8f4:	48 c1 f8 02          	sar    $0x2,%rax
   2e8f8:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2e8fb:	eb 1d                	jmp    2e91a <bitstob+0xd9>
   2e8fd:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   2e901:	75 17                	jne    2e91a <bitstob+0xd9>
   2e903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e907:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   2e90e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e912:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2e918:	eb 59                	jmp    2e973 <bitstob+0x132>
   2e91a:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
   2e91e:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e921:	48 98                	cltq   
   2e923:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2e92a:	00 
   2e92b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e92f:	48 01 d0             	add    %rdx,%rax
   2e932:	8b 00                	mov    (%rax),%eax
   2e934:	85 c0                	test   %eax,%eax
   2e936:	74 c5                	je     2e8fd <bitstob+0xbc>
   2e938:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e93b:	8d 50 01             	lea    0x1(%rax),%edx
   2e93e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e942:	89 50 14             	mov    %edx,0x14(%rax)
   2e945:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2e948:	83 c0 01             	add    $0x1,%eax
   2e94b:	c1 e0 05             	shl    $0x5,%eax
   2e94e:	89 c3                	mov    %eax,%ebx
   2e950:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e954:	8b 55 c8             	mov    -0x38(%rbp),%edx
   2e957:	48 63 d2             	movslq %edx,%rdx
   2e95a:	48 83 c2 04          	add    $0x4,%rdx
   2e95e:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   2e962:	89 c7                	mov    %eax,%edi
   2e964:	e8 8c e6 ff ff       	call   2cff5 <__hi0bits_D2A>
   2e969:	29 c3                	sub    %eax,%ebx
   2e96b:	89 da                	mov    %ebx,%edx
   2e96d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2e971:	89 10                	mov    %edx,(%rax)
   2e973:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e977:	48 83 c4 58          	add    $0x58,%rsp
   2e97b:	5b                   	pop    %rbx
   2e97c:	5d                   	pop    %rbp
   2e97d:	c3                   	ret    

000000000002e97e <__gdtoa>:
   2e97e:	f3 0f 1e fa          	endbr64 
   2e982:	55                   	push   %rbp
   2e983:	48 89 e5             	mov    %rsp,%rbp
   2e986:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   2e98d:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   2e994:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
   2e99a:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   2e9a1:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
   2e9a8:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
   2e9af:	44 89 8d fc fe ff ff 	mov    %r9d,-0x104(%rbp)
   2e9b6:	48 8b 45 10          	mov    0x10(%rbp),%rax
   2e9ba:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   2e9c1:	48 8b 45 18          	mov    0x18(%rbp),%rax
   2e9c5:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   2e9cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e9d3:	00 00 
   2e9d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e9d9:	31 c0                	xor    %eax,%eax
   2e9db:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
   2e9e2:	00 00 00 
   2e9e5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2e9ec:	8b 00                	mov    (%rax),%eax
   2e9ee:	83 e0 cf             	and    $0xffffffcf,%eax
   2e9f1:	89 c2                	mov    %eax,%edx
   2e9f3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2e9fa:	89 10                	mov    %edx,(%rax)
   2e9fc:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2ea03:	8b 00                	mov    (%rax),%eax
   2ea05:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   2ea0b:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   2ea11:	83 e0 0f             	and    $0xf,%eax
   2ea14:	83 f8 04             	cmp    $0x4,%eax
   2ea17:	0f 84 9b 00 00 00    	je     2eab8 <__gdtoa+0x13a>
   2ea1d:	83 f8 04             	cmp    $0x4,%eax
   2ea20:	0f 8f bf 00 00 00    	jg     2eae5 <__gdtoa+0x167>
   2ea26:	83 f8 03             	cmp    $0x3,%eax
   2ea29:	74 60                	je     2ea8b <__gdtoa+0x10d>
   2ea2b:	83 f8 03             	cmp    $0x3,%eax
   2ea2e:	0f 8f b1 00 00 00    	jg     2eae5 <__gdtoa+0x167>
   2ea34:	85 c0                	test   %eax,%eax
   2ea36:	0f 84 34 01 00 00    	je     2eb70 <__gdtoa+0x1f2>
   2ea3c:	85 c0                	test   %eax,%eax
   2ea3e:	0f 88 a1 00 00 00    	js     2eae5 <__gdtoa+0x167>
   2ea44:	83 e8 01             	sub    $0x1,%eax
   2ea47:	83 f8 01             	cmp    $0x1,%eax
   2ea4a:	0f 87 95 00 00 00    	ja     2eae5 <__gdtoa+0x167>
   2ea50:	90                   	nop
   2ea51:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2ea58:	8b 00                	mov    (%rax),%eax
   2ea5a:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
   2ea60:	48 8d 95 24 ff ff ff 	lea    -0xdc(%rbp),%rdx
   2ea67:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
   2ea6d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2ea74:	89 ce                	mov    %ecx,%esi
   2ea76:	48 89 c7             	mov    %rax,%rdi
   2ea79:	e8 c3 fd ff ff       	call   2e841 <bitstob>
   2ea7e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2ea82:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2ea87:	75 70                	jne    2eaf9 <__gdtoa+0x17b>
   2ea89:	eb 64                	jmp    2eaef <__gdtoa+0x171>
   2ea8b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2ea92:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   2ea98:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2ea9f:	ba 08 00 00 00       	mov    $0x8,%edx
   2eaa4:	48 89 c6             	mov    %rax,%rsi
   2eaa7:	48 8d 3d f2 53 00 00 	lea    0x53f2(%rip),%rdi        # 33ea0 <__tens_D2A+0xc0>
   2eaae:	e8 b9 bd ff ff       	call   2a86c <__nrv_alloc_D2A>
   2eab3:	e9 dc 19 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2eab8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2eabf:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   2eac5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2eacc:	ba 03 00 00 00       	mov    $0x3,%edx
   2ead1:	48 89 c6             	mov    %rax,%rsi
   2ead4:	48 8d 3d ce 53 00 00 	lea    0x53ce(%rip),%rdi        # 33ea9 <__tens_D2A+0xc9>
   2eadb:	e8 8c bd ff ff       	call   2a86c <__nrv_alloc_D2A>
   2eae0:	e9 af 19 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2eae5:	b8 00 00 00 00       	mov    $0x0,%eax
   2eaea:	e9 a5 19 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2eaef:	b8 00 00 00 00       	mov    $0x0,%eax
   2eaf4:	e9 9b 19 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2eaf9:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   2eaff:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   2eb05:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2eb09:	48 89 c7             	mov    %rax,%rdi
   2eb0c:	e8 ee 1a 00 00       	call   305ff <__trailz_D2A>
   2eb11:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2eb17:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2eb1d:	85 c0                	test   %eax,%eax
   2eb1f:	74 36                	je     2eb57 <__gdtoa+0x1d9>
   2eb21:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   2eb27:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2eb2b:	89 d6                	mov    %edx,%esi
   2eb2d:	48 89 c7             	mov    %rax,%rdi
   2eb30:	e8 75 19 00 00       	call   304aa <__rshift_D2A>
   2eb35:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2eb3b:	01 85 14 ff ff ff    	add    %eax,-0xec(%rbp)
   2eb41:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2eb47:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2eb4d:	29 c2                	sub    %eax,%edx
   2eb4f:	89 d0                	mov    %edx,%eax
   2eb51:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   2eb57:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2eb5b:	8b 40 14             	mov    0x14(%rax),%eax
   2eb5e:	85 c0                	test   %eax,%eax
   2eb60:	75 3c                	jne    2eb9e <__gdtoa+0x220>
   2eb62:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2eb66:	48 89 c7             	mov    %rax,%rdi
   2eb69:	e8 c7 e1 ff ff       	call   2cd35 <__Bfree_D2A>
   2eb6e:	eb 01                	jmp    2eb71 <__gdtoa+0x1f3>
   2eb70:	90                   	nop
   2eb71:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2eb78:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2eb7e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2eb85:	ba 01 00 00 00       	mov    $0x1,%edx
   2eb8a:	48 89 c6             	mov    %rax,%rsi
   2eb8d:	48 8d 3d 19 53 00 00 	lea    0x5319(%rip),%rdi        # 33ead <__tens_D2A+0xcd>
   2eb94:	e8 d3 bc ff ff       	call   2a86c <__nrv_alloc_D2A>
   2eb99:	e9 f6 18 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2eb9e:	48 8d 95 28 ff ff ff 	lea    -0xd8(%rbp),%rdx
   2eba5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2eba9:	48 89 d6             	mov    %rdx,%rsi
   2ebac:	48 89 c7             	mov    %rax,%rdi
   2ebaf:	e8 b2 ee ff ff       	call   2da66 <__b2d_D2A>
   2ebb4:	66 48 0f 7e c0       	movq   %xmm0,%rax
   2ebb9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2ebbd:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2ebc3:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   2ebc9:	01 d0                	add    %edx,%eax
   2ebcb:	83 e8 01             	sub    $0x1,%eax
   2ebce:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2ebd4:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ebd7:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2ebdc:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2ebdf:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ebe2:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2ebe7:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2ebea:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2ebef:	f2 0f 10 0d b9 52 00 	movsd  0x52b9(%rip),%xmm1        # 33eb0 <__tens_D2A+0xd0>
   2ebf6:	00 
   2ebf7:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2ebfb:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2ebff:	f2 0f 10 05 b1 52 00 	movsd  0x52b1(%rip),%xmm0        # 33eb8 <__tens_D2A+0xd8>
   2ec06:	00 
   2ec07:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2ec0b:	f2 0f 10 05 ad 52 00 	movsd  0x52ad(%rip),%xmm0        # 33ec0 <__tens_D2A+0xe0>
   2ec12:	00 
   2ec13:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2ec17:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ec1d:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   2ec21:	f2 0f 10 05 9f 52 00 	movsd  0x529f(%rip),%xmm0        # 33ec8 <__tens_D2A+0xe8>
   2ec28:	00 
   2ec29:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2ec2d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2ec31:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2ec36:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ec3c:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2ec42:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2ec49:	79 06                	jns    2ec51 <__gdtoa+0x2d3>
   2ec4b:	f7 9d 48 ff ff ff    	negl   -0xb8(%rbp)
   2ec51:	81 ad 48 ff ff ff 35 	subl   $0x435,-0xb8(%rbp)
   2ec58:	04 00 00 
   2ec5b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2ec62:	7e 22                	jle    2ec86 <__gdtoa+0x308>
   2ec64:	f2 0f 2a 8d 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm1
   2ec6b:	ff 
   2ec6c:	f2 0f 10 05 5c 52 00 	movsd  0x525c(%rip),%xmm0        # 33ed0 <__tens_D2A+0xf0>
   2ec73:	00 
   2ec74:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2ec78:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2ec7d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2ec81:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2ec86:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2ec8b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2ec8f:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2ec95:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2ec99:	66 0f 2f 45 b0       	comisd -0x50(%rbp),%xmm0
   2ec9e:	76 1d                	jbe    2ecbd <__gdtoa+0x33f>
   2eca0:	f2 0f 2a 85 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm0
   2eca7:	ff 
   2eca8:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2ecad:	7a 07                	jp     2ecb6 <__gdtoa+0x338>
   2ecaf:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2ecb4:	74 07                	je     2ecbd <__gdtoa+0x33f>
   2ecb6:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2ecbd:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   2ecc4:	00 00 00 
   2ecc7:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2ecca:	8b 8d 24 ff ff ff    	mov    -0xdc(%rbp),%ecx
   2ecd0:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2ecd6:	01 ca                	add    %ecx,%edx
   2ecd8:	83 ea 01             	sub    $0x1,%edx
   2ecdb:	c1 e2 14             	shl    $0x14,%edx
   2ecde:	01 d0                	add    %edx,%eax
   2ece0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2ece3:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2ecea:	78 41                	js     2ed2d <__gdtoa+0x3af>
   2ecec:	83 bd 4c ff ff ff 16 	cmpl   $0x16,-0xb4(%rbp)
   2ecf3:	7f 38                	jg     2ed2d <__gdtoa+0x3af>
   2ecf5:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2ecfa:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2ed00:	48 98                	cltq   
   2ed02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2ed09:	00 
   2ed0a:	48 8d 05 cf 50 00 00 	lea    0x50cf(%rip),%rax        # 33de0 <__tens_D2A>
   2ed11:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2ed16:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2ed1a:	76 07                	jbe    2ed23 <__gdtoa+0x3a5>
   2ed1c:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2ed23:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
   2ed2a:	00 00 00 
   2ed2d:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2ed33:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ed39:	29 c2                	sub    %eax,%edx
   2ed3b:	89 d0                	mov    %edx,%eax
   2ed3d:	83 e8 01             	sub    $0x1,%eax
   2ed40:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2ed46:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2ed4d:	78 18                	js     2ed67 <__gdtoa+0x3e9>
   2ed4f:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
   2ed56:	00 00 00 
   2ed59:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2ed5f:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
   2ed65:	eb 18                	jmp    2ed7f <__gdtoa+0x401>
   2ed67:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2ed6d:	f7 d8                	neg    %eax
   2ed6f:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   2ed75:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   2ed7c:	00 00 00 
   2ed7f:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2ed86:	78 24                	js     2edac <__gdtoa+0x42e>
   2ed88:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
   2ed8f:	00 00 00 
   2ed92:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2ed98:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   2ed9e:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2eda4:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2edaa:	eb 24                	jmp    2edd0 <__gdtoa+0x452>
   2edac:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2edb2:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   2edb8:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2edbe:	f7 d8                	neg    %eax
   2edc0:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   2edc6:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
   2edcd:	00 00 00 
   2edd0:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2edd7:	78 09                	js     2ede2 <__gdtoa+0x464>
   2edd9:	83 bd 10 ff ff ff 09 	cmpl   $0x9,-0xf0(%rbp)
   2ede0:	7e 0a                	jle    2edec <__gdtoa+0x46e>
   2ede2:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   2ede9:	00 00 00 
   2edec:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%rbp)
   2edf3:	00 00 00 
   2edf6:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2edfd:	7e 13                	jle    2ee12 <__gdtoa+0x494>
   2edff:	83 ad 10 ff ff ff 04 	subl   $0x4,-0xf0(%rbp)
   2ee06:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   2ee0d:	00 00 00 
   2ee10:	eb 24                	jmp    2ee36 <__gdtoa+0x4b8>
   2ee12:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ee18:	3d f9 03 00 00       	cmp    $0x3f9,%eax
   2ee1d:	7f 0d                	jg     2ee2c <__gdtoa+0x4ae>
   2ee1f:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ee25:	3d 02 fc ff ff       	cmp    $0xfffffc02,%eax
   2ee2a:	7d 0a                	jge    2ee36 <__gdtoa+0x4b8>
   2ee2c:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   2ee33:	00 00 00 
   2ee36:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
   2ee3d:	00 00 00 
   2ee40:	c7 85 40 ff ff ff ff 	movl   $0xffffffff,-0xc0(%rbp)
   2ee47:	ff ff ff 
   2ee4a:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2ee50:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2ee56:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2ee5d:	0f 87 ea 00 00 00    	ja     2ef4d <__gdtoa+0x5cf>
   2ee63:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   2ee69:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2ee70:	00 
   2ee71:	48 8d 05 a0 50 00 00 	lea    0x50a0(%rip),%rax        # 33f18 <__tens_D2A+0x138>
   2ee78:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2ee7b:	48 98                	cltq   
   2ee7d:	48 8d 15 94 50 00 00 	lea    0x5094(%rip),%rdx        # 33f18 <__tens_D2A+0x138>
   2ee84:	48 01 d0             	add    %rdx,%rax
   2ee87:	3e ff e0             	notrack jmp *%rax
   2ee8a:	f2 0f 2a 8d 78 ff ff 	cvtsi2sdl -0x88(%rbp),%xmm1
   2ee91:	ff 
   2ee92:	f2 0f 10 05 3e 50 00 	movsd  0x503e(%rip),%xmm0        # 33ed8 <__tens_D2A+0xf8>
   2ee99:	00 
   2ee9a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2ee9e:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2eea2:	83 c0 03             	add    $0x3,%eax
   2eea5:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2eeab:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%rbp)
   2eeb2:	00 00 00 
   2eeb5:	e9 93 00 00 00       	jmp    2ef4d <__gdtoa+0x5cf>
   2eeba:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   2eec1:	00 00 00 
   2eec4:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   2eecb:	7f 0a                	jg     2eed7 <__gdtoa+0x559>
   2eecd:	c7 85 fc fe ff ff 01 	movl   $0x1,-0x104(%rbp)
   2eed4:	00 00 00 
   2eed7:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   2eedd:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2eee3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2eee9:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   2eeef:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2eef5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2eefb:	eb 50                	jmp    2ef4d <__gdtoa+0x5cf>
   2eefd:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   2ef04:	00 00 00 
   2ef07:	8b 95 fc fe ff ff    	mov    -0x104(%rbp),%edx
   2ef0d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2ef13:	01 d0                	add    %edx,%eax
   2ef15:	83 c0 01             	add    $0x1,%eax
   2ef18:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2ef1e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ef24:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2ef2a:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ef30:	83 e8 01             	sub    $0x1,%eax
   2ef33:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   2ef39:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ef3f:	85 c0                	test   %eax,%eax
   2ef41:	7f 0a                	jg     2ef4d <__gdtoa+0x5cf>
   2ef43:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2ef4a:	00 00 00 
   2ef4d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ef53:	89 c7                	mov    %eax,%edi
   2ef55:	e8 aa b8 ff ff       	call   2a804 <__rv_alloc_D2A>
   2ef5a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2ef5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ef62:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2ef66:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2ef6b:	75 0a                	jne    2ef77 <__gdtoa+0x5f9>
   2ef6d:	b8 00 00 00 00       	mov    $0x0,%eax
   2ef72:	e9 1d 15 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2ef77:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2ef7e:	8b 40 0c             	mov    0xc(%rax),%eax
   2ef81:	83 e8 01             	sub    $0x1,%eax
   2ef84:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2ef8a:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ef91:	74 33                	je     2efc6 <__gdtoa+0x648>
   2ef93:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ef9a:	79 0a                	jns    2efa6 <__gdtoa+0x628>
   2ef9c:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
   2efa3:	00 00 00 
   2efa6:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   2efac:	25 00 01 00 00       	and    $0x100,%eax
   2efb1:	85 c0                	test   %eax,%eax
   2efb3:	74 11                	je     2efc6 <__gdtoa+0x648>
   2efb5:	b8 03 00 00 00       	mov    $0x3,%eax
   2efba:	2b 85 60 ff ff ff    	sub    -0xa0(%rbp),%eax
   2efc0:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2efc6:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2efcd:	0f 88 80 05 00 00    	js     2f553 <__gdtoa+0xbd5>
   2efd3:	83 bd 3c ff ff ff 0e 	cmpl   $0xe,-0xc4(%rbp)
   2efda:	0f 8f 73 05 00 00    	jg     2f553 <__gdtoa+0xbd5>
   2efe0:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   2efe7:	0f 84 66 05 00 00    	je     2f553 <__gdtoa+0xbd5>
   2efed:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2eff4:	0f 85 59 05 00 00    	jne    2f553 <__gdtoa+0xbd5>
   2effa:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2f001:	0f 85 4c 05 00 00    	jne    2f553 <__gdtoa+0xbd5>
   2f007:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2f00e:	00 00 00 
   2f011:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f016:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
   2f01b:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2f021:	89 45 80             	mov    %eax,-0x80(%rbp)
   2f024:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2f02a:	89 45 84             	mov    %eax,-0x7c(%rbp)
   2f02d:	c7 85 38 ff ff ff 02 	movl   $0x2,-0xc8(%rbp)
   2f034:	00 00 00 
   2f037:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2f03e:	0f 8e c7 00 00 00    	jle    2f10b <__gdtoa+0x78d>
   2f044:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2f04a:	83 e0 0f             	and    $0xf,%eax
   2f04d:	48 98                	cltq   
   2f04f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f056:	00 
   2f057:	48 8d 05 82 4d 00 00 	lea    0x4d82(%rip),%rax        # 33de0 <__tens_D2A>
   2f05e:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f063:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2f068:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2f06e:	c1 f8 04             	sar    $0x4,%eax
   2f071:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2f077:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f07d:	83 e0 10             	and    $0x10,%eax
   2f080:	85 c0                	test   %eax,%eax
   2f082:	74 79                	je     2f0fd <__gdtoa+0x77f>
   2f084:	83 a5 48 ff ff ff 0f 	andl   $0xf,-0xb8(%rbp)
   2f08b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f090:	f2 0f 10 0d e8 4c 00 	movsd  0x4ce8(%rip),%xmm1        # 33d80 <__bigtens_D2A+0x20>
   2f097:	00 
   2f098:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2f09c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f0a1:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2f0a8:	eb 53                	jmp    2f0fd <__gdtoa+0x77f>
   2f0aa:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f0b0:	83 e0 01             	and    $0x1,%eax
   2f0b3:	85 c0                	test   %eax,%eax
   2f0b5:	74 31                	je     2f0e8 <__gdtoa+0x76a>
   2f0b7:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2f0be:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f0c4:	48 98                	cltq   
   2f0c6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f0cd:	00 
   2f0ce:	48 8d 05 8b 4c 00 00 	lea    0x4c8b(%rip),%rax        # 33d60 <__bigtens_D2A>
   2f0d5:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f0da:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2f0df:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f0e3:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2f0e8:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   2f0ee:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f0f4:	83 c0 01             	add    $0x1,%eax
   2f0f7:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f0fd:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2f104:	75 a4                	jne    2f0aa <__gdtoa+0x72c>
   2f106:	e9 b6 00 00 00       	jmp    2f1c1 <__gdtoa+0x843>
   2f10b:	f2 0f 10 05 cd 4d 00 	movsd  0x4dcd(%rip),%xmm0        # 33ee0 <__tens_D2A+0x100>
   2f112:	00 
   2f113:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2f118:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2f11e:	f7 d8                	neg    %eax
   2f120:	89 45 88             	mov    %eax,-0x78(%rbp)
   2f123:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2f127:	0f 84 94 00 00 00    	je     2f1c1 <__gdtoa+0x843>
   2f12d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f132:	8b 45 88             	mov    -0x78(%rbp),%eax
   2f135:	83 e0 0f             	and    $0xf,%eax
   2f138:	48 98                	cltq   
   2f13a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f141:	00 
   2f142:	48 8d 05 97 4c 00 00 	lea    0x4c97(%rip),%rax        # 33de0 <__tens_D2A>
   2f149:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f14e:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f152:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f157:	8b 45 88             	mov    -0x78(%rbp),%eax
   2f15a:	c1 f8 04             	sar    $0x4,%eax
   2f15d:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2f163:	eb 53                	jmp    2f1b8 <__gdtoa+0x83a>
   2f165:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f16b:	83 e0 01             	and    $0x1,%eax
   2f16e:	85 c0                	test   %eax,%eax
   2f170:	74 31                	je     2f1a3 <__gdtoa+0x825>
   2f172:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2f179:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f17e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f184:	48 98                	cltq   
   2f186:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f18d:	00 
   2f18e:	48 8d 05 cb 4b 00 00 	lea    0x4bcb(%rip),%rax        # 33d60 <__bigtens_D2A>
   2f195:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f19a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f19e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f1a3:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   2f1a9:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f1af:	83 c0 01             	add    $0x1,%eax
   2f1b2:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f1b8:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2f1bf:	75 a4                	jne    2f165 <__gdtoa+0x7e7>
   2f1c1:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2f1c8:	74 59                	je     2f223 <__gdtoa+0x8a5>
   2f1ca:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f1cf:	f2 0f 10 05 09 4d 00 	movsd  0x4d09(%rip),%xmm0        # 33ee0 <__tens_D2A+0x100>
   2f1d6:	00 
   2f1d7:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f1db:	76 46                	jbe    2f223 <__gdtoa+0x8a5>
   2f1dd:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2f1e4:	7e 3d                	jle    2f223 <__gdtoa+0x8a5>
   2f1e6:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   2f1ed:	0f 8e 38 03 00 00    	jle    2f52b <__gdtoa+0xbad>
   2f1f3:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2f1f9:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2f1ff:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2f206:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f20b:	f2 0f 10 05 d5 4c 00 	movsd  0x4cd5(%rip),%xmm0        # 33ee8 <__tens_D2A+0x108>
   2f212:	00 
   2f213:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f217:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f21c:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2f223:	f2 0f 2a 8d 38 ff ff 	cvtsi2sdl -0xc8(%rbp),%xmm1
   2f22a:	ff 
   2f22b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f230:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2f234:	f2 0f 10 05 b4 4c 00 	movsd  0x4cb4(%rip),%xmm0        # 33ef0 <__tens_D2A+0x110>
   2f23b:	00 
   2f23c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2f240:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2f245:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2f248:	2d 00 00 40 03       	sub    $0x3400000,%eax
   2f24d:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2f250:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2f257:	75 5f                	jne    2f2b8 <__gdtoa+0x93a>
   2f259:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2f260:	00 
   2f261:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2f265:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2f269:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f26e:	f2 0f 10 0d 82 4c 00 	movsd  0x4c82(%rip),%xmm1        # 33ef8 <__tens_D2A+0x118>
   2f275:	00 
   2f276:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f27a:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f27f:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f284:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2f289:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f28d:	0f 87 2d 0a 00 00    	ja     2fcc0 <__gdtoa+0x1342>
   2f293:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f298:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2f29d:	f3 0f 7e 15 5b 4c 00 	movq   0x4c5b(%rip),%xmm2        # 33f00 <__tens_D2A+0x120>
   2f2a4:	00 
   2f2a5:	66 0f 57 c2          	xorpd  %xmm2,%xmm0
   2f2a9:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f2ad:	0f 87 e9 09 00 00    	ja     2fc9c <__gdtoa+0x131e>
   2f2b3:	e9 77 02 00 00       	jmp    2f52f <__gdtoa+0xbb1>
   2f2b8:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2f2bf:	0f 84 3b 01 00 00    	je     2f400 <__gdtoa+0xa82>
   2f2c5:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2f2ca:	f2 0f 10 05 3e 4c 00 	movsd  0x4c3e(%rip),%xmm0        # 33f10 <__tens_D2A+0x130>
   2f2d1:	00 
   2f2d2:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f2d6:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2f2dc:	83 e8 01             	sub    $0x1,%eax
   2f2df:	48 98                	cltq   
   2f2e1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f2e8:	00 
   2f2e9:	48 8d 05 f0 4a 00 00 	lea    0x4af0(%rip),%rax        # 33de0 <__tens_D2A>
   2f2f0:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   2f2f5:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2f2f9:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2f2fe:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f302:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2f307:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2f30e:	00 00 00 
   2f311:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f316:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2f31b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2f31f:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2f322:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f327:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2f32c:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2f331:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f335:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f33a:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2f33d:	89 c1                	mov    %eax,%ecx
   2f33f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f343:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2f347:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2f34b:	8d 51 30             	lea    0x30(%rcx),%edx
   2f34e:	88 10                	mov    %dl,(%rax)
   2f350:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f355:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2f35a:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f35e:	76 2d                	jbe    2f38d <__gdtoa+0xa0f>
   2f360:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f365:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f369:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f36d:	7a 0f                	jp     2f37e <__gdtoa+0xa00>
   2f36f:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f373:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f377:	75 05                	jne    2f37e <__gdtoa+0xa00>
   2f379:	e9 bb 10 00 00       	jmp    30439 <__gdtoa+0x1abb>
   2f37e:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2f385:	00 00 00 
   2f388:	e9 ac 10 00 00       	jmp    30439 <__gdtoa+0x1abb>
   2f38d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f392:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2f397:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f39b:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2f39f:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2f3a4:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f3a8:	0f 87 06 03 00 00    	ja     2f6b4 <__gdtoa+0xd36>
   2f3ae:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f3b4:	83 c0 01             	add    $0x1,%eax
   2f3b7:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f3bd:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f3c3:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2f3c9:	0f 8e 5f 01 00 00    	jle    2f52e <__gdtoa+0xbb0>
   2f3cf:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2f3d4:	f2 0f 10 05 0c 4b 00 	movsd  0x4b0c(%rip),%xmm0        # 33ee8 <__tens_D2A+0x108>
   2f3db:	00 
   2f3dc:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f3e0:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2f3e5:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f3ea:	f2 0f 10 05 f6 4a 00 	movsd  0x4af6(%rip),%xmm0        # 33ee8 <__tens_D2A+0x108>
   2f3f1:	00 
   2f3f2:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f3f6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f3fb:	e9 11 ff ff ff       	jmp    2f311 <__gdtoa+0x993>
   2f400:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2f405:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2f40b:	83 e8 01             	sub    $0x1,%eax
   2f40e:	48 98                	cltq   
   2f410:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f417:	00 
   2f418:	48 8d 05 c1 49 00 00 	lea    0x49c1(%rip),%rax        # 33de0 <__tens_D2A>
   2f41f:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f424:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f428:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2f42d:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2f434:	00 00 00 
   2f437:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f43c:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2f441:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2f445:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2f448:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2f44c:	74 18                	je     2f466 <__gdtoa+0xae8>
   2f44e:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f453:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2f458:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2f45d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f461:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f466:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2f469:	89 c1                	mov    %eax,%ecx
   2f46b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f46f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2f473:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2f477:	8d 51 30             	lea    0x30(%rcx),%edx
   2f47a:	88 10                	mov    %dl,(%rax)
   2f47c:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f482:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2f488:	75 77                	jne    2f501 <__gdtoa+0xb83>
   2f48a:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2f48f:	f2 0f 10 05 79 4a 00 	movsd  0x4a79(%rip),%xmm0        # 33f10 <__tens_D2A+0x130>
   2f496:	00 
   2f497:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f49b:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2f4a0:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f4a5:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2f4aa:	f2 0f 58 4d b0       	addsd  -0x50(%rbp),%xmm1
   2f4af:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f4b3:	0f 87 fe 01 00 00    	ja     2f6b7 <__gdtoa+0xd39>
   2f4b9:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f4be:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   2f4c3:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2f4c8:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   2f4cc:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f4d0:	77 02                	ja     2f4d4 <__gdtoa+0xb56>
   2f4d2:	eb 5b                	jmp    2f52f <__gdtoa+0xbb1>
   2f4d4:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f4d9:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f4dd:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f4e1:	7a 0f                	jp     2f4f2 <__gdtoa+0xb74>
   2f4e3:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f4e7:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f4eb:	75 05                	jne    2f4f2 <__gdtoa+0xb74>
   2f4ed:	e9 22 02 00 00       	jmp    2f714 <__gdtoa+0xd96>
   2f4f2:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2f4f9:	00 00 00 
   2f4fc:	e9 13 02 00 00       	jmp    2f714 <__gdtoa+0xd96>
   2f501:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f507:	83 c0 01             	add    $0x1,%eax
   2f50a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f510:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f515:	f2 0f 10 05 cb 49 00 	movsd  0x49cb(%rip),%xmm0        # 33ee8 <__tens_D2A+0x108>
   2f51c:	00 
   2f51d:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f521:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f526:	e9 0c ff ff ff       	jmp    2f437 <__gdtoa+0xab9>
   2f52b:	90                   	nop
   2f52c:	eb 01                	jmp    2f52f <__gdtoa+0xbb1>
   2f52e:	90                   	nop
   2f52f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2f533:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2f537:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
   2f53c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f541:	8b 45 80             	mov    -0x80(%rbp),%eax
   2f544:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2f54a:	8b 45 84             	mov    -0x7c(%rbp),%eax
   2f54d:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2f553:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
   2f55a:	0f 88 fb 01 00 00    	js     2f75b <__gdtoa+0xddd>
   2f560:	83 bd 4c ff ff ff 0e 	cmpl   $0xe,-0xb4(%rbp)
   2f567:	0f 8f ee 01 00 00    	jg     2f75b <__gdtoa+0xddd>
   2f56d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2f573:	48 98                	cltq   
   2f575:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2f57c:	00 
   2f57d:	48 8d 05 5c 48 00 00 	lea    0x485c(%rip),%rax        # 33de0 <__tens_D2A>
   2f584:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2f589:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2f58e:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   2f595:	79 4b                	jns    2f5e2 <__gdtoa+0xc64>
   2f597:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2f59e:	7f 42                	jg     2f5e2 <__gdtoa+0xc64>
   2f5a0:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2f5a7:	00 
   2f5a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2f5ac:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2f5b0:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2f5b7:	0f 88 e2 06 00 00    	js     2fc9f <__gdtoa+0x1321>
   2f5bd:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f5c2:	f2 0f 10 55 b0       	movsd  -0x50(%rbp),%xmm2
   2f5c7:	f2 0f 10 05 29 49 00 	movsd  0x4929(%rip),%xmm0        # 33ef8 <__tens_D2A+0x118>
   2f5ce:	00 
   2f5cf:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2f5d3:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2f5d7:	0f 83 c2 06 00 00    	jae    2fc9f <__gdtoa+0x1321>
   2f5dd:	e9 e2 06 00 00       	jmp    2fcc4 <__gdtoa+0x1346>
   2f5e2:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2f5e9:	00 00 00 
   2f5ec:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f5f1:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2f5f6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2f5fa:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2f5fd:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f602:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2f607:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2f60c:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2f610:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f615:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2f618:	89 c1                	mov    %eax,%ecx
   2f61a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f61e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2f622:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2f626:	8d 51 30             	lea    0x30(%rcx),%edx
   2f629:	88 10                	mov    %dl,(%rax)
   2f62b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f630:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f634:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f638:	7a 0e                	jp     2f648 <__gdtoa+0xcca>
   2f63a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2f63e:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2f642:	0f 84 0d 01 00 00    	je     2f755 <__gdtoa+0xdd7>
   2f648:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f64e:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2f654:	0f 85 d1 00 00 00    	jne    2f72b <__gdtoa+0xdad>
   2f65a:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2f661:	74 18                	je     2f67b <__gdtoa+0xcfd>
   2f663:	83 bd 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%rbp)
   2f66a:	74 4e                	je     2f6ba <__gdtoa+0xd3c>
   2f66c:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2f673:	00 00 00 
   2f676:	e9 be 0d 00 00       	jmp    30439 <__gdtoa+0x1abb>
   2f67b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f680:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   2f684:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f689:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f68e:	66 0f 2f 45 b0       	comisd -0x50(%rbp),%xmm0
   2f693:	77 28                	ja     2f6bd <__gdtoa+0xd3f>
   2f695:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2f69a:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2f69f:	7a 69                	jp     2f70a <__gdtoa+0xd8c>
   2f6a1:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2f6a6:	75 62                	jne    2f70a <__gdtoa+0xd8c>
   2f6a8:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2f6ab:	83 e0 01             	and    $0x1,%eax
   2f6ae:	85 c0                	test   %eax,%eax
   2f6b0:	74 58                	je     2f70a <__gdtoa+0xd8c>
   2f6b2:	eb 09                	jmp    2f6bd <__gdtoa+0xd3f>
   2f6b4:	90                   	nop
   2f6b5:	eb 07                	jmp    2f6be <__gdtoa+0xd40>
   2f6b7:	90                   	nop
   2f6b8:	eb 04                	jmp    2f6be <__gdtoa+0xd40>
   2f6ba:	90                   	nop
   2f6bb:	eb 01                	jmp    2f6be <__gdtoa+0xd40>
   2f6bd:	90                   	nop
   2f6be:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2f6c5:	00 00 00 
   2f6c8:	eb 1a                	jmp    2f6e4 <__gdtoa+0xd66>
   2f6ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f6ce:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2f6d2:	75 10                	jne    2f6e4 <__gdtoa+0xd66>
   2f6d4:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2f6db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f6df:	c6 00 30             	movb   $0x30,(%rax)
   2f6e2:	eb 10                	jmp    2f6f4 <__gdtoa+0xd76>
   2f6e4:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2f6e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f6ed:	0f b6 00             	movzbl (%rax),%eax
   2f6f0:	3c 39                	cmp    $0x39,%al
   2f6f2:	74 d6                	je     2f6ca <__gdtoa+0xd4c>
   2f6f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f6f8:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2f6fc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2f700:	0f b6 10             	movzbl (%rax),%edx
   2f703:	83 c2 01             	add    $0x1,%edx
   2f706:	88 10                	mov    %dl,(%rax)
   2f708:	eb 4c                	jmp    2f756 <__gdtoa+0xdd8>
   2f70a:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2f711:	00 00 00 
   2f714:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2f719:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2f71d:	0f b6 00             	movzbl (%rax),%eax
   2f720:	3c 30                	cmp    $0x30,%al
   2f722:	74 f0                	je     2f714 <__gdtoa+0xd96>
   2f724:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   2f729:	eb 2b                	jmp    2f756 <__gdtoa+0xdd8>
   2f72b:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f731:	83 c0 01             	add    $0x1,%eax
   2f734:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f73a:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2f73f:	f2 0f 10 05 a1 47 00 	movsd  0x47a1(%rip),%xmm0        # 33ee8 <__tens_D2A+0x108>
   2f746:	00 
   2f747:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2f74b:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2f750:	e9 97 fe ff ff       	jmp    2f5ec <__gdtoa+0xc6e>
   2f755:	90                   	nop
   2f756:	e9 de 0c 00 00       	jmp    30439 <__gdtoa+0x1abb>
   2f75b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   2f761:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2f767:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   2f76d:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2f773:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   2f77a:	00 
   2f77b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2f77f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2f783:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2f78a:	0f 84 65 01 00 00    	je     2f8f5 <__gdtoa+0xf77>
   2f790:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   2f796:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
   2f79c:	29 c2                	sub    %eax,%edx
   2f79e:	89 d0                	mov    %edx,%eax
   2f7a0:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f7a6:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f7ac:	8d 50 01             	lea    0x1(%rax),%edx
   2f7af:	89 95 28 ff ff ff    	mov    %edx,-0xd8(%rbp)
   2f7b5:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2f7bb:	29 c2                	sub    %eax,%edx
   2f7bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2f7c4:	8b 40 04             	mov    0x4(%rax),%eax
   2f7c7:	39 c2                	cmp    %eax,%edx
   2f7c9:	7d 5d                	jge    2f828 <__gdtoa+0xeaa>
   2f7cb:	83 bd 10 ff ff ff 03 	cmpl   $0x3,-0xf0(%rbp)
   2f7d2:	74 54                	je     2f828 <__gdtoa+0xeaa>
   2f7d4:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2f7db:	74 4b                	je     2f828 <__gdtoa+0xeaa>
   2f7dd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2f7e4:	8b 40 04             	mov    0x4(%rax),%eax
   2f7e7:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2f7ed:	29 c2                	sub    %eax,%edx
   2f7ef:	89 d0                	mov    %edx,%eax
   2f7f1:	83 c0 01             	add    $0x1,%eax
   2f7f4:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f7fa:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2f801:	0f 8e b6 00 00 00    	jle    2f8bd <__gdtoa+0xf3f>
   2f807:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2f80e:	0f 8e a9 00 00 00    	jle    2f8bd <__gdtoa+0xf3f>
   2f814:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f81a:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2f820:	0f 8d 97 00 00 00    	jge    2f8bd <__gdtoa+0xf3f>
   2f826:	eb 0e                	jmp    2f836 <__gdtoa+0xeb8>
   2f828:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2f82f:	0f 8e 89 00 00 00    	jle    2f8be <__gdtoa+0xf40>
   2f835:	90                   	nop
   2f836:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2f83c:	83 e8 01             	sub    $0x1,%eax
   2f83f:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2f845:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2f84b:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
   2f851:	7c 0e                	jl     2f861 <__gdtoa+0xee3>
   2f853:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f859:	29 85 5c ff ff ff    	sub    %eax,-0xa4(%rbp)
   2f85f:	eb 2e                	jmp    2f88f <__gdtoa+0xf11>
   2f861:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2f867:	29 85 48 ff ff ff    	sub    %eax,-0xb8(%rbp)
   2f86d:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f873:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   2f879:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2f87f:	01 85 30 ff ff ff    	add    %eax,-0xd0(%rbp)
   2f885:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   2f88c:	00 00 00 
   2f88f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2f895:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f89b:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f8a1:	85 c0                	test   %eax,%eax
   2f8a3:	79 19                	jns    2f8be <__gdtoa+0xf40>
   2f8a5:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f8ab:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   2f8b1:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2f8b8:	00 00 00 
   2f8bb:	eb 01                	jmp    2f8be <__gdtoa+0xf40>
   2f8bd:	90                   	nop
   2f8be:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f8c4:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   2f8ca:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f8d0:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2f8d6:	bf 01 00 00 00       	mov    $0x1,%edi
   2f8db:	e8 9c d7 ff ff       	call   2d07c <__i2b_D2A>
   2f8e0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2f8e4:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2f8e9:	75 0a                	jne    2f8f5 <__gdtoa+0xf77>
   2f8eb:	b8 00 00 00 00       	mov    $0x0,%eax
   2f8f0:	e9 9f 0b 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2f8f5:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2f8fc:	7e 46                	jle    2f944 <__gdtoa+0xfc6>
   2f8fe:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2f905:	7e 3d                	jle    2f944 <__gdtoa+0xfc6>
   2f907:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2f90d:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%rbp)
   2f913:	0f 4e 85 64 ff ff ff 	cmovle -0x9c(%rbp),%eax
   2f91a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2f920:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f926:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   2f92c:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f932:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   2f938:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2f93e:	29 85 64 ff ff ff    	sub    %eax,-0x9c(%rbp)
   2f944:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   2f94b:	0f 8e e8 00 00 00    	jle    2fa39 <__gdtoa+0x10bb>
   2f951:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2f958:	0f 84 b2 00 00 00    	je     2fa10 <__gdtoa+0x1092>
   2f95e:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   2f965:	7e 65                	jle    2f9cc <__gdtoa+0x104e>
   2f967:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   2f96d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2f971:	89 d6                	mov    %edx,%esi
   2f973:	48 89 c7             	mov    %rax,%rdi
   2f976:	e8 69 da ff ff       	call   2d3e4 <__pow5mult_D2A>
   2f97b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2f97f:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2f984:	75 0a                	jne    2f990 <__gdtoa+0x1012>
   2f986:	b8 00 00 00 00       	mov    $0x0,%eax
   2f98b:	e9 04 0b 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2f990:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2f994:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2f998:	48 89 d6             	mov    %rdx,%rsi
   2f99b:	48 89 c7             	mov    %rax,%rdi
   2f99e:	e8 1f d7 ff ff       	call   2d0c2 <__mult_D2A>
   2f9a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2f9a7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2f9ac:	75 0a                	jne    2f9b8 <__gdtoa+0x103a>
   2f9ae:	b8 00 00 00 00       	mov    $0x0,%eax
   2f9b3:	e9 dc 0a 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2f9b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2f9bc:	48 89 c7             	mov    %rax,%rdi
   2f9bf:	e8 71 d3 ff ff       	call   2cd35 <__Bfree_D2A>
   2f9c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2f9c8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2f9cc:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   2f9d2:	2b 85 5c ff ff ff    	sub    -0xa4(%rbp),%eax
   2f9d8:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2f9de:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2f9e5:	74 52                	je     2fa39 <__gdtoa+0x10bb>
   2f9e7:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
   2f9ed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2f9f1:	89 d6                	mov    %edx,%esi
   2f9f3:	48 89 c7             	mov    %rax,%rdi
   2f9f6:	e8 e9 d9 ff ff       	call   2d3e4 <__pow5mult_D2A>
   2f9fb:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2f9ff:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2fa04:	75 33                	jne    2fa39 <__gdtoa+0x10bb>
   2fa06:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa0b:	e9 84 0a 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fa10:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   2fa16:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fa1a:	89 d6                	mov    %edx,%esi
   2fa1c:	48 89 c7             	mov    %rax,%rdi
   2fa1f:	e8 c0 d9 ff ff       	call   2d3e4 <__pow5mult_D2A>
   2fa24:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2fa28:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2fa2d:	75 0a                	jne    2fa39 <__gdtoa+0x10bb>
   2fa2f:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa34:	e9 5b 0a 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fa39:	bf 01 00 00 00       	mov    $0x1,%edi
   2fa3e:	e8 39 d6 ff ff       	call   2d07c <__i2b_D2A>
   2fa43:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2fa47:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2fa4c:	75 0a                	jne    2fa58 <__gdtoa+0x10da>
   2fa4e:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa53:	e9 3c 0a 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fa58:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2fa5f:	7e 29                	jle    2fa8a <__gdtoa+0x110c>
   2fa61:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   2fa67:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2fa6b:	89 d6                	mov    %edx,%esi
   2fa6d:	48 89 c7             	mov    %rax,%rdi
   2fa70:	e8 6f d9 ff ff       	call   2d3e4 <__pow5mult_D2A>
   2fa75:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2fa79:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2fa7e:	75 0a                	jne    2fa8a <__gdtoa+0x110c>
   2fa80:	b8 00 00 00 00       	mov    $0x0,%eax
   2fa85:	e9 0a 0a 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fa8a:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   2fa91:	00 00 00 
   2fa94:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2fa9b:	7f 38                	jg     2fad5 <__gdtoa+0x1157>
   2fa9d:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   2faa3:	83 f8 01             	cmp    $0x1,%eax
   2faa6:	75 2d                	jne    2fad5 <__gdtoa+0x1157>
   2faa8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2faaf:	8b 40 04             	mov    0x4(%rax),%eax
   2fab2:	83 c0 01             	add    $0x1,%eax
   2fab5:	39 85 7c ff ff ff    	cmp    %eax,-0x84(%rbp)
   2fabb:	7e 18                	jle    2fad5 <__gdtoa+0x1157>
   2fabd:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
   2fac4:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
   2facb:	c7 85 6c ff ff ff 01 	movl   $0x1,-0x94(%rbp)
   2fad2:	00 00 00 
   2fad5:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2fadc:	74 22                	je     2fb00 <__gdtoa+0x1182>
   2fade:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2fae2:	8b 40 14             	mov    0x14(%rax),%eax
   2fae5:	8d 50 ff             	lea    -0x1(%rax),%edx
   2fae8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2faec:	48 63 d2             	movslq %edx,%rdx
   2faef:	48 83 c2 04          	add    $0x4,%rdx
   2faf3:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   2faf7:	89 c7                	mov    %eax,%edi
   2faf9:	e8 f7 d4 ff ff       	call   2cff5 <__hi0bits_D2A>
   2fafe:	eb 05                	jmp    2fb05 <__gdtoa+0x1187>
   2fb00:	b8 1f 00 00 00       	mov    $0x1f,%eax
   2fb05:	2b 85 64 ff ff ff    	sub    -0x9c(%rbp),%eax
   2fb0b:	83 e8 04             	sub    $0x4,%eax
   2fb0e:	83 e0 1f             	and    $0x1f,%eax
   2fb11:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2fb17:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2fb1d:	01 85 58 ff ff ff    	add    %eax,-0xa8(%rbp)
   2fb23:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2fb29:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   2fb2f:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
   2fb36:	7e 29                	jle    2fb61 <__gdtoa+0x11e3>
   2fb38:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   2fb3e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fb42:	89 d6                	mov    %edx,%esi
   2fb44:	48 89 c7             	mov    %rax,%rdi
   2fb47:	e8 64 da ff ff       	call   2d5b0 <__lshift_D2A>
   2fb4c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2fb50:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2fb55:	75 0a                	jne    2fb61 <__gdtoa+0x11e3>
   2fb57:	b8 00 00 00 00       	mov    $0x0,%eax
   2fb5c:	e9 33 09 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fb61:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2fb67:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2fb6d:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2fb74:	7e 29                	jle    2fb9f <__gdtoa+0x1221>
   2fb76:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
   2fb7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2fb80:	89 d6                	mov    %edx,%esi
   2fb82:	48 89 c7             	mov    %rax,%rdi
   2fb85:	e8 26 da ff ff       	call   2d5b0 <__lshift_D2A>
   2fb8a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2fb8e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2fb93:	75 0a                	jne    2fb9f <__gdtoa+0x1221>
   2fb95:	b8 00 00 00 00       	mov    $0x0,%eax
   2fb9a:	e9 f5 08 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fb9f:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2fba6:	0f 84 89 00 00 00    	je     2fc35 <__gdtoa+0x12b7>
   2fbac:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2fbb0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fbb4:	48 89 d6             	mov    %rdx,%rsi
   2fbb7:	48 89 c7             	mov    %rax,%rdi
   2fbba:	e8 7e db ff ff       	call   2d73d <__cmp_D2A>
   2fbbf:	85 c0                	test   %eax,%eax
   2fbc1:	79 72                	jns    2fc35 <__gdtoa+0x12b7>
   2fbc3:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2fbca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fbce:	ba 00 00 00 00       	mov    $0x0,%edx
   2fbd3:	be 0a 00 00 00       	mov    $0xa,%esi
   2fbd8:	48 89 c7             	mov    %rax,%rdi
   2fbdb:	e8 cb d2 ff ff       	call   2ceab <__multadd_D2A>
   2fbe0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2fbe4:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2fbe9:	75 0a                	jne    2fbf5 <__gdtoa+0x1277>
   2fbeb:	b8 00 00 00 00       	mov    $0x0,%eax
   2fbf0:	e9 9f 08 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fbf5:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2fbfc:	74 2b                	je     2fc29 <__gdtoa+0x12ab>
   2fbfe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fc02:	ba 00 00 00 00       	mov    $0x0,%edx
   2fc07:	be 0a 00 00 00       	mov    $0xa,%esi
   2fc0c:	48 89 c7             	mov    %rax,%rdi
   2fc0f:	e8 97 d2 ff ff       	call   2ceab <__multadd_D2A>
   2fc14:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2fc18:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2fc1d:	75 0a                	jne    2fc29 <__gdtoa+0x12ab>
   2fc1f:	b8 00 00 00 00       	mov    $0x0,%eax
   2fc24:	e9 6b 08 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fc29:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2fc2f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2fc35:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2fc3c:	0f 8f a7 00 00 00    	jg     2fce9 <__gdtoa+0x136b>
   2fc42:	83 bd 10 ff ff ff 02 	cmpl   $0x2,-0xf0(%rbp)
   2fc49:	0f 8e 9a 00 00 00    	jle    2fce9 <__gdtoa+0x136b>
   2fc4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2fc53:	ba 00 00 00 00       	mov    $0x0,%edx
   2fc58:	be 05 00 00 00       	mov    $0x5,%esi
   2fc5d:	48 89 c7             	mov    %rax,%rdi
   2fc60:	e8 46 d2 ff ff       	call   2ceab <__multadd_D2A>
   2fc65:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2fc69:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2fc6e:	75 0a                	jne    2fc7a <__gdtoa+0x12fc>
   2fc70:	b8 00 00 00 00       	mov    $0x0,%eax
   2fc75:	e9 1a 08 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fc7a:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2fc81:	78 1f                	js     2fca2 <__gdtoa+0x1324>
   2fc83:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2fc87:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fc8b:	48 89 d6             	mov    %rdx,%rsi
   2fc8e:	48 89 c7             	mov    %rax,%rdi
   2fc91:	e8 a7 da ff ff       	call   2d73d <__cmp_D2A>
   2fc96:	85 c0                	test   %eax,%eax
   2fc98:	7f 29                	jg     2fcc3 <__gdtoa+0x1345>
   2fc9a:	eb 06                	jmp    2fca2 <__gdtoa+0x1324>
   2fc9c:	90                   	nop
   2fc9d:	eb 04                	jmp    2fca3 <__gdtoa+0x1325>
   2fc9f:	90                   	nop
   2fca0:	eb 01                	jmp    2fca3 <__gdtoa+0x1325>
   2fca2:	90                   	nop
   2fca3:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   2fca9:	f7 d0                	not    %eax
   2fcab:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2fcb1:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2fcb8:	00 00 00 
   2fcbb:	e9 3a 07 00 00       	jmp    303fa <__gdtoa+0x1a7c>
   2fcc0:	90                   	nop
   2fcc1:	eb 01                	jmp    2fcc4 <__gdtoa+0x1346>
   2fcc3:	90                   	nop
   2fcc4:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2fccb:	00 00 00 
   2fcce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2fcd2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2fcd6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2fcda:	c6 00 31             	movb   $0x31,(%rax)
   2fcdd:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2fce4:	e9 11 07 00 00       	jmp    303fa <__gdtoa+0x1a7c>
   2fce9:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2fcf0:	0f 84 58 05 00 00    	je     3024e <__gdtoa+0x18d0>
   2fcf6:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2fcfd:	7e 29                	jle    2fd28 <__gdtoa+0x13aa>
   2fcff:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   2fd05:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fd09:	89 d6                	mov    %edx,%esi
   2fd0b:	48 89 c7             	mov    %rax,%rdi
   2fd0e:	e8 9d d8 ff ff       	call   2d5b0 <__lshift_D2A>
   2fd13:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2fd17:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2fd1c:	75 0a                	jne    2fd28 <__gdtoa+0x13aa>
   2fd1e:	b8 00 00 00 00       	mov    $0x0,%eax
   2fd23:	e9 6c 07 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fd28:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fd2c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2fd30:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   2fd37:	74 79                	je     2fdb2 <__gdtoa+0x1434>
   2fd39:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fd3d:	8b 40 08             	mov    0x8(%rax),%eax
   2fd40:	89 c7                	mov    %eax,%edi
   2fd42:	e8 a8 ce ff ff       	call   2cbef <__Balloc_D2A>
   2fd47:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2fd4b:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2fd50:	75 0a                	jne    2fd5c <__gdtoa+0x13de>
   2fd52:	b8 00 00 00 00       	mov    $0x0,%eax
   2fd57:	e9 38 07 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fd5c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2fd60:	8b 40 14             	mov    0x14(%rax),%eax
   2fd63:	48 98                	cltq   
   2fd65:	48 83 c0 02          	add    $0x2,%rax
   2fd69:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2fd70:	00 
   2fd71:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2fd75:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2fd79:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fd7d:	48 83 c0 10          	add    $0x10,%rax
   2fd81:	48 89 ce             	mov    %rcx,%rsi
   2fd84:	48 89 c7             	mov    %rax,%rdi
   2fd87:	e8 63 36 ff ff       	call   233ef <memcpy>
   2fd8c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2fd90:	be 01 00 00 00       	mov    $0x1,%esi
   2fd95:	48 89 c7             	mov    %rax,%rdi
   2fd98:	e8 13 d8 ff ff       	call   2d5b0 <__lshift_D2A>
   2fd9d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2fda1:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2fda6:	75 0a                	jne    2fdb2 <__gdtoa+0x1434>
   2fda8:	b8 00 00 00 00       	mov    $0x0,%eax
   2fdad:	e9 e2 06 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fdb2:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2fdb9:	00 00 00 
   2fdbc:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2fdc0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fdc4:	48 89 d6             	mov    %rdx,%rsi
   2fdc7:	48 89 c7             	mov    %rax,%rdi
   2fdca:	e8 64 ab ff ff       	call   2a933 <__quorem_D2A>
   2fdcf:	83 c0 30             	add    $0x30,%eax
   2fdd2:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   2fdd8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2fddc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fde0:	48 89 d6             	mov    %rdx,%rsi
   2fde3:	48 89 c7             	mov    %rax,%rdi
   2fde6:	e8 52 d9 ff ff       	call   2d73d <__cmp_D2A>
   2fdeb:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2fdf1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2fdf5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2fdf9:	48 89 d6             	mov    %rdx,%rsi
   2fdfc:	48 89 c7             	mov    %rax,%rdi
   2fdff:	e8 0d da ff ff       	call   2d811 <__diff_D2A>
   2fe04:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2fe08:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2fe0d:	75 0a                	jne    2fe19 <__gdtoa+0x149b>
   2fe0f:	b8 00 00 00 00       	mov    $0x0,%eax
   2fe14:	e9 7b 06 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2fe19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2fe1d:	8b 40 10             	mov    0x10(%rax),%eax
   2fe20:	85 c0                	test   %eax,%eax
   2fe22:	75 15                	jne    2fe39 <__gdtoa+0x14bb>
   2fe24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2fe28:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fe2c:	48 89 d6             	mov    %rdx,%rsi
   2fe2f:	48 89 c7             	mov    %rax,%rdi
   2fe32:	e8 06 d9 ff ff       	call   2d73d <__cmp_D2A>
   2fe37:	eb 05                	jmp    2fe3e <__gdtoa+0x14c0>
   2fe39:	b8 01 00 00 00       	mov    $0x1,%eax
   2fe3e:	89 45 88             	mov    %eax,-0x78(%rbp)
   2fe41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2fe45:	48 89 c7             	mov    %rax,%rdi
   2fe48:	e8 e8 ce ff ff       	call   2cd35 <__Bfree_D2A>
   2fe4d:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2fe51:	0f 85 85 00 00 00    	jne    2fedc <__gdtoa+0x155e>
   2fe57:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2fe5e:	75 7c                	jne    2fedc <__gdtoa+0x155e>
   2fe60:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2fe67:	8b 00                	mov    (%rax),%eax
   2fe69:	83 e0 01             	and    $0x1,%eax
   2fe6c:	85 c0                	test   %eax,%eax
   2fe6e:	75 6c                	jne    2fedc <__gdtoa+0x155e>
   2fe70:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2fe77:	75 63                	jne    2fedc <__gdtoa+0x155e>
   2fe79:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   2fe80:	0f 84 83 02 00 00    	je     30109 <__gdtoa+0x178b>
   2fe86:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2fe8d:	7f 23                	jg     2feb2 <__gdtoa+0x1534>
   2fe8f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fe93:	8b 40 14             	mov    0x14(%rax),%eax
   2fe96:	83 f8 01             	cmp    $0x1,%eax
   2fe99:	7f 0b                	jg     2fea6 <__gdtoa+0x1528>
   2fe9b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2fe9f:	8b 40 18             	mov    0x18(%rax),%eax
   2fea2:	85 c0                	test   %eax,%eax
   2fea4:	74 1d                	je     2fec3 <__gdtoa+0x1545>
   2fea6:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2fead:	00 00 00 
   2feb0:	eb 11                	jmp    2fec3 <__gdtoa+0x1545>
   2feb2:	83 85 34 ff ff ff 01 	addl   $0x1,-0xcc(%rbp)
   2feb9:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2fec0:	00 00 00 
   2fec3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2fec7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2fecb:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2fecf:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2fed5:	88 10                	mov    %dl,(%rax)
   2fed7:	e9 1e 05 00 00       	jmp    303fa <__gdtoa+0x1a7c>
   2fedc:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2fee3:	78 2e                	js     2ff13 <__gdtoa+0x1595>
   2fee5:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2feec:	0f 85 fd 01 00 00    	jne    300ef <__gdtoa+0x1771>
   2fef2:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2fef9:	0f 85 f0 01 00 00    	jne    300ef <__gdtoa+0x1771>
   2feff:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2ff06:	8b 00                	mov    (%rax),%eax
   2ff08:	83 e0 01             	and    $0x1,%eax
   2ff0b:	85 c0                	test   %eax,%eax
   2ff0d:	0f 85 dc 01 00 00    	jne    300ef <__gdtoa+0x1771>
   2ff13:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ff1a:	0f 84 19 01 00 00    	je     30039 <__gdtoa+0x16bb>
   2ff20:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ff24:	8b 40 14             	mov    0x14(%rax),%eax
   2ff27:	83 f8 01             	cmp    $0x1,%eax
   2ff2a:	7f 0f                	jg     2ff3b <__gdtoa+0x15bd>
   2ff2c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ff30:	8b 40 18             	mov    0x18(%rax),%eax
   2ff33:	85 c0                	test   %eax,%eax
   2ff35:	0f 84 fe 00 00 00    	je     30039 <__gdtoa+0x16bb>
   2ff3b:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   2ff42:	0f 85 af 00 00 00    	jne    2fff7 <__gdtoa+0x1679>
   2ff48:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2ff4f:	00 00 00 
   2ff52:	e9 7f 01 00 00       	jmp    300d6 <__gdtoa+0x1758>
   2ff57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ff5b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2ff5f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2ff63:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2ff69:	88 10                	mov    %dl,(%rax)
   2ff6b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ff6f:	ba 00 00 00 00       	mov    $0x0,%edx
   2ff74:	be 0a 00 00 00       	mov    $0xa,%esi
   2ff79:	48 89 c7             	mov    %rax,%rdi
   2ff7c:	e8 2a cf ff ff       	call   2ceab <__multadd_D2A>
   2ff81:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2ff85:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2ff8a:	75 0a                	jne    2ff96 <__gdtoa+0x1618>
   2ff8c:	b8 00 00 00 00       	mov    $0x0,%eax
   2ff91:	e9 fe 04 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2ff96:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ff9a:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2ff9e:	75 08                	jne    2ffa8 <__gdtoa+0x162a>
   2ffa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ffa4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2ffa8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ffac:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2ffb0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ffb4:	ba 00 00 00 00       	mov    $0x0,%edx
   2ffb9:	be 0a 00 00 00       	mov    $0xa,%esi
   2ffbe:	48 89 c7             	mov    %rax,%rdi
   2ffc1:	e8 e5 ce ff ff       	call   2ceab <__multadd_D2A>
   2ffc6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2ffca:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2ffcf:	75 0a                	jne    2ffdb <__gdtoa+0x165d>
   2ffd1:	b8 00 00 00 00       	mov    $0x0,%eax
   2ffd6:	e9 b9 04 00 00       	jmp    30494 <__gdtoa+0x1b16>
   2ffdb:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2ffdf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ffe3:	48 89 d6             	mov    %rdx,%rsi
   2ffe6:	48 89 c7             	mov    %rax,%rdi
   2ffe9:	e8 45 a9 ff ff       	call   2a933 <__quorem_D2A>
   2ffee:	83 c0 30             	add    $0x30,%eax
   2fff1:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   2fff7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2fffb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2ffff:	48 89 d6             	mov    %rdx,%rsi
   30002:	48 89 c7             	mov    %rax,%rdi
   30005:	e8 33 d7 ff ff       	call   2d73d <__cmp_D2A>
   3000a:	85 c0                	test   %eax,%eax
   3000c:	0f 8f 45 ff ff ff    	jg     2ff57 <__gdtoa+0x15d9>
   30012:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   30018:	8d 50 01             	lea    0x1(%rax),%edx
   3001b:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   30021:	83 f8 39             	cmp    $0x39,%eax
   30024:	0f 84 e2 00 00 00    	je     3010c <__gdtoa+0x178e>
   3002a:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   30031:	00 00 00 
   30034:	e9 9d 00 00 00       	jmp    300d6 <__gdtoa+0x1758>
   30039:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   3003d:	7e 73                	jle    300b2 <__gdtoa+0x1734>
   3003f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   30043:	be 01 00 00 00       	mov    $0x1,%esi
   30048:	48 89 c7             	mov    %rax,%rdi
   3004b:	e8 60 d5 ff ff       	call   2d5b0 <__lshift_D2A>
   30050:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   30054:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   30059:	75 0a                	jne    30065 <__gdtoa+0x16e7>
   3005b:	b8 00 00 00 00       	mov    $0x0,%eax
   30060:	e9 2f 04 00 00       	jmp    30494 <__gdtoa+0x1b16>
   30065:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   30069:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   3006d:	48 89 d6             	mov    %rdx,%rsi
   30070:	48 89 c7             	mov    %rax,%rdi
   30073:	e8 c5 d6 ff ff       	call   2d73d <__cmp_D2A>
   30078:	89 45 88             	mov    %eax,-0x78(%rbp)
   3007b:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   3007f:	7f 13                	jg     30094 <__gdtoa+0x1716>
   30081:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   30085:	75 21                	jne    300a8 <__gdtoa+0x172a>
   30087:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   3008d:	83 e0 01             	and    $0x1,%eax
   30090:	85 c0                	test   %eax,%eax
   30092:	74 14                	je     300a8 <__gdtoa+0x172a>
   30094:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   3009a:	8d 50 01             	lea    0x1(%rax),%edx
   3009d:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   300a3:	83 f8 39             	cmp    $0x39,%eax
   300a6:	74 67                	je     3010f <__gdtoa+0x1791>
   300a8:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   300af:	00 00 00 
   300b2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   300b6:	8b 40 14             	mov    0x14(%rax),%eax
   300b9:	83 f8 01             	cmp    $0x1,%eax
   300bc:	7f 0b                	jg     300c9 <__gdtoa+0x174b>
   300be:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   300c2:	8b 40 18             	mov    0x18(%rax),%eax
   300c5:	85 c0                	test   %eax,%eax
   300c7:	74 0c                	je     300d5 <__gdtoa+0x1757>
   300c9:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   300d0:	00 00 00 
   300d3:	eb 01                	jmp    300d6 <__gdtoa+0x1758>
   300d5:	90                   	nop
   300d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   300da:	48 8d 50 01          	lea    0x1(%rax),%rdx
   300de:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   300e2:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   300e8:	88 10                	mov    %dl,(%rax)
   300ea:	e9 0b 03 00 00       	jmp    303fa <__gdtoa+0x1a7c>
   300ef:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   300f3:	7e 61                	jle    30156 <__gdtoa+0x17d8>
   300f5:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   300fc:	74 58                	je     30156 <__gdtoa+0x17d8>
   300fe:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   30105:	75 27                	jne    3012e <__gdtoa+0x17b0>
   30107:	eb 07                	jmp    30110 <__gdtoa+0x1792>
   30109:	90                   	nop
   3010a:	eb 04                	jmp    30110 <__gdtoa+0x1792>
   3010c:	90                   	nop
   3010d:	eb 01                	jmp    30110 <__gdtoa+0x1792>
   3010f:	90                   	nop
   30110:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   30114:	48 8d 50 01          	lea    0x1(%rax),%rdx
   30118:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   3011c:	c6 00 39             	movb   $0x39,(%rax)
   3011f:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   30126:	00 00 00 
   30129:	e9 3e 02 00 00       	jmp    3036c <__gdtoa+0x19ee>
   3012e:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   30135:	00 00 00 
   30138:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   3013e:	89 c1                	mov    %eax,%ecx
   30140:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   30144:	48 8d 50 01          	lea    0x1(%rax),%rdx
   30148:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   3014c:	8d 51 01             	lea    0x1(%rcx),%edx
   3014f:	88 10                	mov    %dl,(%rax)
   30151:	e9 a4 02 00 00       	jmp    303fa <__gdtoa+0x1a7c>
   30156:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   3015a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   3015e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   30162:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   30168:	88 10                	mov    %dl,(%rax)
   3016a:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   30170:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   30176:	0f 84 56 01 00 00    	je     302d2 <__gdtoa+0x1954>
   3017c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   30180:	ba 00 00 00 00       	mov    $0x0,%edx
   30185:	be 0a 00 00 00       	mov    $0xa,%esi
   3018a:	48 89 c7             	mov    %rax,%rdi
   3018d:	e8 19 cd ff ff       	call   2ceab <__multadd_D2A>
   30192:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   30196:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   3019b:	75 0a                	jne    301a7 <__gdtoa+0x1829>
   3019d:	b8 00 00 00 00       	mov    $0x0,%eax
   301a2:	e9 ed 02 00 00       	jmp    30494 <__gdtoa+0x1b16>
   301a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   301ab:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   301af:	75 33                	jne    301e4 <__gdtoa+0x1866>
   301b1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   301b5:	ba 00 00 00 00       	mov    $0x0,%edx
   301ba:	be 0a 00 00 00       	mov    $0xa,%esi
   301bf:	48 89 c7             	mov    %rax,%rdi
   301c2:	e8 e4 cc ff ff       	call   2ceab <__multadd_D2A>
   301c7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   301cb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   301cf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   301d3:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   301d8:	75 60                	jne    3023a <__gdtoa+0x18bc>
   301da:	b8 00 00 00 00       	mov    $0x0,%eax
   301df:	e9 b0 02 00 00       	jmp    30494 <__gdtoa+0x1b16>
   301e4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   301e8:	ba 00 00 00 00       	mov    $0x0,%edx
   301ed:	be 0a 00 00 00       	mov    $0xa,%esi
   301f2:	48 89 c7             	mov    %rax,%rdi
   301f5:	e8 b1 cc ff ff       	call   2ceab <__multadd_D2A>
   301fa:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   301fe:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   30203:	75 0a                	jne    3020f <__gdtoa+0x1891>
   30205:	b8 00 00 00 00       	mov    $0x0,%eax
   3020a:	e9 85 02 00 00       	jmp    30494 <__gdtoa+0x1b16>
   3020f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   30213:	ba 00 00 00 00       	mov    $0x0,%edx
   30218:	be 0a 00 00 00       	mov    $0xa,%esi
   3021d:	48 89 c7             	mov    %rax,%rdi
   30220:	e8 86 cc ff ff       	call   2ceab <__multadd_D2A>
   30225:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   30229:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   3022e:	75 0a                	jne    3023a <__gdtoa+0x18bc>
   30230:	b8 00 00 00 00       	mov    $0x0,%eax
   30235:	e9 5a 02 00 00       	jmp    30494 <__gdtoa+0x1b16>
   3023a:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   30240:	83 c0 01             	add    $0x1,%eax
   30243:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   30249:	e9 6e fb ff ff       	jmp    2fdbc <__gdtoa+0x143e>
   3024e:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   30255:	00 00 00 
   30258:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   3025c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   30260:	48 89 d6             	mov    %rdx,%rsi
   30263:	48 89 c7             	mov    %rax,%rdi
   30266:	e8 c8 a6 ff ff       	call   2a933 <__quorem_D2A>
   3026b:	83 c0 30             	add    $0x30,%eax
   3026e:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   30274:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   30278:	48 8d 50 01          	lea    0x1(%rax),%rdx
   3027c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   30280:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   30286:	88 10                	mov    %dl,(%rax)
   30288:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   3028e:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   30294:	7e 3f                	jle    302d5 <__gdtoa+0x1957>
   30296:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   3029a:	ba 00 00 00 00       	mov    $0x0,%edx
   3029f:	be 0a 00 00 00       	mov    $0xa,%esi
   302a4:	48 89 c7             	mov    %rax,%rdi
   302a7:	e8 ff cb ff ff       	call   2ceab <__multadd_D2A>
   302ac:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   302b0:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   302b5:	75 0a                	jne    302c1 <__gdtoa+0x1943>
   302b7:	b8 00 00 00 00       	mov    $0x0,%eax
   302bc:	e9 d3 01 00 00       	jmp    30494 <__gdtoa+0x1b16>
   302c1:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   302c7:	83 c0 01             	add    $0x1,%eax
   302ca:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   302d0:	eb 86                	jmp    30258 <__gdtoa+0x18da>
   302d2:	90                   	nop
   302d3:	eb 01                	jmp    302d6 <__gdtoa+0x1958>
   302d5:	90                   	nop
   302d6:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   302dd:	74 29                	je     30308 <__gdtoa+0x198a>
   302df:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   302e6:	0f 84 d4 00 00 00    	je     303c0 <__gdtoa+0x1a42>
   302ec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   302f0:	8b 40 14             	mov    0x14(%rax),%eax
   302f3:	83 f8 01             	cmp    $0x1,%eax
   302f6:	7f 70                	jg     30368 <__gdtoa+0x19ea>
   302f8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   302fc:	8b 40 18             	mov    0x18(%rax),%eax
   302ff:	85 c0                	test   %eax,%eax
   30301:	75 65                	jne    30368 <__gdtoa+0x19ea>
   30303:	e9 b8 00 00 00       	jmp    303c0 <__gdtoa+0x1a42>
   30308:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   3030c:	be 01 00 00 00       	mov    $0x1,%esi
   30311:	48 89 c7             	mov    %rax,%rdi
   30314:	e8 97 d2 ff ff       	call   2d5b0 <__lshift_D2A>
   30319:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   3031d:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   30322:	75 0a                	jne    3032e <__gdtoa+0x19b0>
   30324:	b8 00 00 00 00       	mov    $0x0,%eax
   30329:	e9 66 01 00 00       	jmp    30494 <__gdtoa+0x1b16>
   3032e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   30332:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   30336:	48 89 d6             	mov    %rdx,%rsi
   30339:	48 89 c7             	mov    %rax,%rdi
   3033c:	e8 fc d3 ff ff       	call   2d73d <__cmp_D2A>
   30341:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   30347:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   3034e:	7f 1b                	jg     3036b <__gdtoa+0x19ed>
   30350:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   30357:	75 6a                	jne    303c3 <__gdtoa+0x1a45>
   30359:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   3035f:	83 e0 01             	and    $0x1,%eax
   30362:	85 c0                	test   %eax,%eax
   30364:	74 5d                	je     303c3 <__gdtoa+0x1a45>
   30366:	eb 03                	jmp    3036b <__gdtoa+0x19ed>
   30368:	90                   	nop
   30369:	eb 01                	jmp    3036c <__gdtoa+0x19ee>
   3036b:	90                   	nop
   3036c:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   30373:	00 00 00 
   30376:	eb 22                	jmp    3039a <__gdtoa+0x1a1c>
   30378:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   3037c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   30380:	75 18                	jne    3039a <__gdtoa+0x1a1c>
   30382:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   30389:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   3038d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   30391:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   30395:	c6 00 31             	movb   $0x31,(%rax)
   30398:	eb 60                	jmp    303fa <__gdtoa+0x1a7c>
   3039a:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   3039f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   303a3:	0f b6 00             	movzbl (%rax),%eax
   303a6:	3c 39                	cmp    $0x39,%al
   303a8:	74 ce                	je     30378 <__gdtoa+0x19fa>
   303aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   303ae:	48 8d 50 01          	lea    0x1(%rax),%rdx
   303b2:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   303b6:	0f b6 10             	movzbl (%rax),%edx
   303b9:	83 c2 01             	add    $0x1,%edx
   303bc:	88 10                	mov    %dl,(%rax)
   303be:	eb 3a                	jmp    303fa <__gdtoa+0x1a7c>
   303c0:	90                   	nop
   303c1:	eb 01                	jmp    303c4 <__gdtoa+0x1a46>
   303c3:	90                   	nop
   303c4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   303c8:	8b 40 14             	mov    0x14(%rax),%eax
   303cb:	83 f8 01             	cmp    $0x1,%eax
   303ce:	7f 0b                	jg     303db <__gdtoa+0x1a5d>
   303d0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   303d4:	8b 40 18             	mov    0x18(%rax),%eax
   303d7:	85 c0                	test   %eax,%eax
   303d9:	74 0a                	je     303e5 <__gdtoa+0x1a67>
   303db:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   303e2:	00 00 00 
   303e5:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   303ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   303ee:	0f b6 00             	movzbl (%rax),%eax
   303f1:	3c 30                	cmp    $0x30,%al
   303f3:	74 f0                	je     303e5 <__gdtoa+0x1a67>
   303f5:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   303fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   303fe:	48 89 c7             	mov    %rax,%rdi
   30401:	e8 2f c9 ff ff       	call   2cd35 <__Bfree_D2A>
   30406:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   3040b:	74 2b                	je     30438 <__gdtoa+0x1aba>
   3040d:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   30412:	74 16                	je     3042a <__gdtoa+0x1aac>
   30414:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   30418:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   3041c:	74 0c                	je     3042a <__gdtoa+0x1aac>
   3041e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   30422:	48 89 c7             	mov    %rax,%rdi
   30425:	e8 0b c9 ff ff       	call   2cd35 <__Bfree_D2A>
   3042a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   3042e:	48 89 c7             	mov    %rax,%rdi
   30431:	e8 ff c8 ff ff       	call   2cd35 <__Bfree_D2A>
   30436:	eb 01                	jmp    30439 <__gdtoa+0x1abb>
   30438:	90                   	nop
   30439:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   3043d:	48 89 c7             	mov    %rax,%rdi
   30440:	e8 f0 c8 ff ff       	call   2cd35 <__Bfree_D2A>
   30445:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   30449:	c6 00 00             	movb   $0x0,(%rax)
   3044c:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   30452:	8d 50 01             	lea    0x1(%rax),%edx
   30455:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   3045c:	89 10                	mov    %edx,(%rax)
   3045e:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   30465:	00 
   30466:	74 0e                	je     30476 <__gdtoa+0x1af8>
   30468:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   3046f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   30473:	48 89 10             	mov    %rdx,(%rax)
   30476:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   3047d:	8b 00                	mov    (%rax),%eax
   3047f:	0b 85 44 ff ff ff    	or     -0xbc(%rbp),%eax
   30485:	89 c2                	mov    %eax,%edx
   30487:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   3048e:	89 10                	mov    %edx,(%rax)
   30490:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   30494:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   30498:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3049f:	00 00 
   304a1:	74 05                	je     304a8 <__gdtoa+0x1b2a>
   304a3:	e8 4f 33 ff ff       	call   237f7 <__stack_chk_fail>
   304a8:	c9                   	leave  
   304a9:	c3                   	ret    

00000000000304aa <__rshift_D2A>:
   304aa:	f3 0f 1e fa          	endbr64 
   304ae:	55                   	push   %rbp
   304af:	48 89 e5             	mov    %rsp,%rbp
   304b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   304b6:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   304b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   304bd:	48 83 c0 18          	add    $0x18,%rax
   304c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   304c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   304c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   304cd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   304d0:	c1 f8 05             	sar    $0x5,%eax
   304d3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   304d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   304da:	8b 40 14             	mov    0x14(%rax),%eax
   304dd:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
   304e0:	0f 8d e4 00 00 00    	jge    305ca <__rshift_D2A+0x120>
   304e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   304ea:	8b 40 14             	mov    0x14(%rax),%eax
   304ed:	48 98                	cltq   
   304ef:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   304f6:	00 
   304f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   304fb:	48 01 d0             	add    %rdx,%rax
   304fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   30502:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   30505:	48 98                	cltq   
   30507:	48 c1 e0 02          	shl    $0x2,%rax
   3050b:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   3050f:	83 65 d4 1f          	andl   $0x1f,-0x2c(%rbp)
   30513:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   30517:	0f 84 a3 00 00 00    	je     305c0 <__rshift_D2A+0x116>
   3051d:	b8 20 00 00 00       	mov    $0x20,%eax
   30522:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   30525:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   30528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3052c:	48 8d 50 04          	lea    0x4(%rax),%rdx
   30530:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   30534:	8b 10                	mov    (%rax),%edx
   30536:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   30539:	89 c1                	mov    %eax,%ecx
   3053b:	d3 ea                	shr    %cl,%edx
   3053d:	89 d0                	mov    %edx,%eax
   3053f:	89 45 e0             	mov    %eax,-0x20(%rbp)
   30542:	eb 3c                	jmp    30580 <__rshift_D2A+0xd6>
   30544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30548:	8b 10                	mov    (%rax),%edx
   3054a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   3054d:	89 c1                	mov    %eax,%ecx
   3054f:	d3 e2                	shl    %cl,%edx
   30551:	89 d1                	mov    %edx,%ecx
   30553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   30557:	48 8d 50 04          	lea    0x4(%rax),%rdx
   3055b:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   3055f:	0b 4d e0             	or     -0x20(%rbp),%ecx
   30562:	89 ca                	mov    %ecx,%edx
   30564:	89 10                	mov    %edx,(%rax)
   30566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3056a:	48 8d 50 04          	lea    0x4(%rax),%rdx
   3056e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   30572:	8b 10                	mov    (%rax),%edx
   30574:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   30577:	89 c1                	mov    %eax,%ecx
   30579:	d3 ea                	shr    %cl,%edx
   3057b:	89 d0                	mov    %edx,%eax
   3057d:	89 45 e0             	mov    %eax,-0x20(%rbp)
   30580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30584:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   30588:	72 ba                	jb     30544 <__rshift_D2A+0x9a>
   3058a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   3058e:	8b 55 e0             	mov    -0x20(%rbp),%edx
   30591:	89 10                	mov    %edx,(%rax)
   30593:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   30597:	8b 00                	mov    (%rax),%eax
   30599:	85 c0                	test   %eax,%eax
   3059b:	74 2d                	je     305ca <__rshift_D2A+0x120>
   3059d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
   305a2:	eb 26                	jmp    305ca <__rshift_D2A+0x120>
   305a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   305a8:	48 8d 42 04          	lea    0x4(%rdx),%rax
   305ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   305b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   305b4:	48 8d 48 04          	lea    0x4(%rax),%rcx
   305b8:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   305bc:	8b 12                	mov    (%rdx),%edx
   305be:	89 10                	mov    %edx,(%rax)
   305c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   305c4:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   305c8:	72 da                	jb     305a4 <__rshift_D2A+0xfa>
   305ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   305ce:	48 8d 50 18          	lea    0x18(%rax),%rdx
   305d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   305d6:	48 29 d0             	sub    %rdx,%rax
   305d9:	48 c1 f8 02          	sar    $0x2,%rax
   305dd:	89 c2                	mov    %eax,%edx
   305df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   305e3:	89 50 14             	mov    %edx,0x14(%rax)
   305e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   305ea:	8b 40 14             	mov    0x14(%rax),%eax
   305ed:	85 c0                	test   %eax,%eax
   305ef:	75 0b                	jne    305fc <__rshift_D2A+0x152>
   305f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   305f5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   305fc:	90                   	nop
   305fd:	5d                   	pop    %rbp
   305fe:	c3                   	ret    

00000000000305ff <__trailz_D2A>:
   305ff:	f3 0f 1e fa          	endbr64 
   30603:	55                   	push   %rbp
   30604:	48 89 e5             	mov    %rsp,%rbp
   30607:	48 83 ec 30          	sub    $0x30,%rsp
   3060b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   3060f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30616:	00 00 
   30618:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3061c:	31 c0                	xor    %eax,%eax
   3061e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   30625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30629:	48 83 c0 18          	add    $0x18,%rax
   3062d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   30631:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30635:	8b 40 14             	mov    0x14(%rax),%eax
   30638:	48 98                	cltq   
   3063a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   30641:	00 
   30642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30646:	48 01 d0             	add    %rdx,%rax
   30649:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   3064d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   30654:	eb 09                	jmp    3065f <__trailz_D2A+0x60>
   30656:	83 45 e4 20          	addl   $0x20,-0x1c(%rbp)
   3065a:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
   3065f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30663:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   30667:	73 0a                	jae    30673 <__trailz_D2A+0x74>
   30669:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3066d:	8b 00                	mov    (%rax),%eax
   3066f:	85 c0                	test   %eax,%eax
   30671:	74 e3                	je     30656 <__trailz_D2A+0x57>
   30673:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30677:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   3067b:	73 18                	jae    30695 <__trailz_D2A+0x96>
   3067d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30681:	8b 00                	mov    (%rax),%eax
   30683:	89 45 e0             	mov    %eax,-0x20(%rbp)
   30686:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   3068a:	48 89 c7             	mov    %rax,%rdi
   3068d:	e8 32 c7 ff ff       	call   2cdc4 <__lo0bits_D2A>
   30692:	01 45 e4             	add    %eax,-0x1c(%rbp)
   30695:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   30698:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   3069c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   306a3:	00 00 
   306a5:	74 05                	je     306ac <__trailz_D2A+0xad>
   306a7:	e8 4b 31 ff ff       	call   237f7 <__stack_chk_fail>
   306ac:	c9                   	leave  
   306ad:	c3                   	ret    

00000000000306ae <tcrypto_access_version_dummy1>:
   306ae:	f3 0f 1e fa          	endbr64 
   306b2:	55                   	push   %rbp
   306b3:	48 89 e5             	mov    %rsp,%rbp
   306b6:	c6 05 b3 aa 00 00 73 	movb   $0x73,0xaab3(%rip)        # 3b170 <sgx_tcrypto_version>
   306bd:	48 8d 05 ac aa 00 00 	lea    0xaaac(%rip),%rax        # 3b170 <sgx_tcrypto_version>
   306c4:	5d                   	pop    %rbp
   306c5:	c3                   	ret    

00000000000306c6 <sgx_init_crypto_lib>:
   306c6:	f3 0f 1e fa          	endbr64 
   306ca:	55                   	push   %rbp
   306cb:	48 89 e5             	mov    %rsp,%rbp
   306ce:	48 83 ec 10          	sub    $0x10,%rsp
   306d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   306d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   306da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   306de:	48 89 c7             	mov    %rax,%rdi
   306e1:	e8 02 00 00 00       	call   306e8 <init_ipp_cpuid>
   306e6:	c9                   	leave  
   306e7:	c3                   	ret    

00000000000306e8 <init_ipp_cpuid>:
   306e8:	f3 0f 1e fa          	endbr64 
   306ec:	55                   	push   %rbp
   306ed:	48 89 e5             	mov    %rsp,%rbp
   306f0:	48 83 ec 20          	sub    $0x20,%rsp
   306f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   306f8:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   306ff:	48 8b 05 ea 98 00 00 	mov    0x98ea(%rip),%rax        # 39ff0 <ippcpSetCpuFeatures>
   30706:	48 85 c0             	test   %rax,%rax
   30709:	75 0a                	jne    30715 <init_ipp_cpuid+0x2d>
   3070b:	b8 00 00 00 00       	mov    $0x0,%eax
   30710:	e9 81 02 00 00       	jmp    30996 <init_ipp_cpuid+0x2ae>
   30715:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   3071c:	00 
   3071d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30721:	25 00 02 00 00       	and    $0x200,%eax
   30726:	48 85 c0             	test   %rax,%rax
   30729:	0f 84 31 02 00 00    	je     30960 <init_ipp_cpuid+0x278>
   3072f:	48 83 4d f8 5f       	orq    $0x5f,-0x8(%rbp)
   30734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30738:	25 00 08 00 00       	and    $0x800,%eax
   3073d:	48 85 c0             	test   %rax,%rax
   30740:	74 05                	je     30747 <init_ipp_cpuid+0x5f>
   30742:	48 83 4d f8 20       	orq    $0x20,-0x8(%rbp)
   30747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3074b:	25 00 04 00 00       	and    $0x400,%eax
   30750:	48 85 c0             	test   %rax,%rax
   30753:	74 08                	je     3075d <init_ipp_cpuid+0x75>
   30755:	48 81 4d f8 80 00 00 	orq    $0x80,-0x8(%rbp)
   3075c:	00 
   3075d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30761:	25 00 00 01 00       	and    $0x10000,%eax
   30766:	48 85 c0             	test   %rax,%rax
   30769:	74 10                	je     3077b <init_ipp_cpuid+0x93>
   3076b:	48 81 4d f8 00 01 00 	orq    $0x100,-0x8(%rbp)
   30772:	00 
   30773:	48 81 4d f8 00 02 00 	orq    $0x200,-0x8(%rbp)
   3077a:	00 
   3077b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3077f:	25 00 40 00 00       	and    $0x4000,%eax
   30784:	48 85 c0             	test   %rax,%rax
   30787:	74 08                	je     30791 <init_ipp_cpuid+0xa9>
   30789:	48 81 4d f8 00 04 00 	orq    $0x400,-0x8(%rbp)
   30790:	00 
   30791:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30795:	25 00 20 00 00       	and    $0x2000,%eax
   3079a:	48 85 c0             	test   %rax,%rax
   3079d:	74 08                	je     307a7 <init_ipp_cpuid+0xbf>
   3079f:	48 81 4d f8 00 08 00 	orq    $0x800,-0x8(%rbp)
   307a6:	00 
   307a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   307ab:	25 00 00 02 00       	and    $0x20000,%eax
   307b0:	48 85 c0             	test   %rax,%rax
   307b3:	74 08                	je     307bd <init_ipp_cpuid+0xd5>
   307b5:	48 81 4d f8 00 20 00 	orq    $0x2000,-0x8(%rbp)
   307bc:	00 
   307bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   307c1:	25 00 80 00 00       	and    $0x8000,%eax
   307c6:	48 85 c0             	test   %rax,%rax
   307c9:	74 08                	je     307d3 <init_ipp_cpuid+0xeb>
   307cb:	48 81 4d f8 00 40 00 	orq    $0x4000,-0x8(%rbp)
   307d2:	00 
   307d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   307d7:	25 00 00 80 00       	and    $0x800000,%eax
   307dc:	48 85 c0             	test   %rax,%rax
   307df:	74 08                	je     307e9 <init_ipp_cpuid+0x101>
   307e1:	48 81 4d f8 00 80 00 	orq    $0x8000,-0x8(%rbp)
   307e8:	00 
   307e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   307ed:	25 00 00 00 10       	and    $0x10000000,%eax
   307f2:	48 85 c0             	test   %rax,%rax
   307f5:	74 08                	je     307ff <init_ipp_cpuid+0x117>
   307f7:	48 81 4d f8 00 00 01 	orq    $0x10000,-0x8(%rbp)
   307fe:	00 
   307ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30803:	25 00 00 00 20       	and    $0x20000000,%eax
   30808:	48 85 c0             	test   %rax,%rax
   3080b:	74 08                	je     30815 <init_ipp_cpuid+0x12d>
   3080d:	48 81 4d f8 00 00 02 	orq    $0x20000,-0x8(%rbp)
   30814:	00 
   30815:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
   3081c:	00 00 00 
   3081f:	48 23 45 e8          	and    -0x18(%rbp),%rax
   30823:	48 85 c0             	test   %rax,%rax
   30826:	74 08                	je     30830 <init_ipp_cpuid+0x148>
   30828:	48 81 4d f8 00 00 08 	orq    $0x80000,-0x8(%rbp)
   3082f:	00 
   30830:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30834:	25 00 00 00 08       	and    $0x8000000,%eax
   30839:	48 85 c0             	test   %rax,%rax
   3083c:	74 16                	je     30854 <init_ipp_cpuid+0x16c>
   3083e:	48 81 4d f8 00 00 10 	orq    $0x100000,-0x8(%rbp)
   30845:	00 
   30846:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   3084d:	00 00 00 
   30850:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   30854:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   3085b:	00 00 00 
   3085e:	48 23 45 e8          	and    -0x18(%rbp),%rax
   30862:	48 85 c0             	test   %rax,%rax
   30865:	74 08                	je     3086f <init_ipp_cpuid+0x187>
   30867:	48 81 4d f8 00 00 80 	orq    $0x800000,-0x8(%rbp)
   3086e:	00 
   3086f:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   30876:	00 00 00 
   30879:	48 23 45 e8          	and    -0x18(%rbp),%rax
   3087d:	48 85 c0             	test   %rax,%rax
   30880:	74 08                	je     3088a <init_ipp_cpuid+0x1a2>
   30882:	48 81 4d f8 00 00 40 	orq    $0x400000,-0x8(%rbp)
   30889:	00 
   3088a:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   30891:	00 00 00 
   30894:	48 23 45 e8          	and    -0x18(%rbp),%rax
   30898:	48 85 c0             	test   %rax,%rax
   3089b:	74 08                	je     308a5 <init_ipp_cpuid+0x1bd>
   3089d:	48 81 4d f8 00 00 20 	orq    $0x200000,-0x8(%rbp)
   308a4:	00 
   308a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   308a9:	25 00 00 00 01       	and    $0x1000000,%eax
   308ae:	48 85 c0             	test   %rax,%rax
   308b1:	74 08                	je     308bb <init_ipp_cpuid+0x1d3>
   308b3:	48 81 4d f8 00 00 00 	orq    $0x2000000,-0x8(%rbp)
   308ba:	02 
   308bb:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   308c2:	00 00 00 
   308c5:	48 23 45 e8          	and    -0x18(%rbp),%rax
   308c9:	48 85 c0             	test   %rax,%rax
   308cc:	74 08                	je     308d6 <init_ipp_cpuid+0x1ee>
   308ce:	48 81 4d f8 00 00 00 	orq    $0x1000000,-0x8(%rbp)
   308d5:	01 
   308d6:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
   308dd:	00 00 00 
   308e0:	48 23 45 e8          	and    -0x18(%rbp),%rax
   308e4:	48 85 c0             	test   %rax,%rax
   308e7:	74 08                	je     308f1 <init_ipp_cpuid+0x209>
   308e9:	48 81 4d f8 00 00 00 	orq    $0x4000000,-0x8(%rbp)
   308f0:	04 
   308f1:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
   308f8:	00 00 00 
   308fb:	48 23 45 e8          	and    -0x18(%rbp),%rax
   308ff:	48 85 c0             	test   %rax,%rax
   30902:	74 08                	je     3090c <init_ipp_cpuid+0x224>
   30904:	48 81 4d f8 00 00 00 	orq    $0x8000000,-0x8(%rbp)
   3090b:	08 
   3090c:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
   30913:	02 00 00 
   30916:	48 23 45 e8          	and    -0x18(%rbp),%rax
   3091a:	48 85 c0             	test   %rax,%rax
   3091d:	74 08                	je     30927 <init_ipp_cpuid+0x23f>
   3091f:	48 81 4d f8 00 00 00 	orq    $0x40000000,-0x8(%rbp)
   30926:	40 
   30927:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
   3092e:	01 00 00 
   30931:	48 23 45 e8          	and    -0x18(%rbp),%rax
   30935:	48 85 c0             	test   %rax,%rax
   30938:	74 08                	je     30942 <init_ipp_cpuid+0x25a>
   3093a:	48 81 4d f8 00 00 00 	orq    $0x20000000,-0x8(%rbp)
   30941:	20 
   30942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30946:	25 00 00 00 40       	and    $0x40000000,%eax
   3094b:	48 85 c0             	test   %rax,%rax
   3094e:	74 17                	je     30967 <init_ipp_cpuid+0x27f>
   30950:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   30957:	00 00 00 
   3095a:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   3095e:	eb 07                	jmp    30967 <init_ipp_cpuid+0x27f>
   30960:	b8 02 00 00 00       	mov    $0x2,%eax
   30965:	eb 2f                	jmp    30996 <init_ipp_cpuid+0x2ae>
   30967:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   3096e:	00 00 80 
   30971:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   30975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   30979:	48 89 c7             	mov    %rax,%rdi
   3097c:	e8 97 36 fd ff       	call   4018 <ippcpSetCpuFeatures@plt>
   30981:	89 45 f4             	mov    %eax,-0xc(%rbp)
   30984:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   30988:	74 07                	je     30991 <init_ipp_cpuid+0x2a9>
   3098a:	b8 02 00 00 00       	mov    $0x2,%eax
   3098f:	eb 05                	jmp    30996 <init_ipp_cpuid+0x2ae>
   30991:	b8 00 00 00 00       	mov    $0x0,%eax
   30996:	c9                   	leave  
   30997:	c3                   	ret    

0000000000030998 <tservice_access_version_dummy1>:
   30998:	f3 0f 1e fa          	endbr64 
   3099c:	55                   	push   %rbp
   3099d:	48 89 e5             	mov    %rsp,%rbp
   309a0:	c6 05 f9 a7 00 00 73 	movb   $0x73,0xa7f9(%rip)        # 3b1a0 <sgx_tservice_version>
   309a7:	48 8d 05 f2 a7 00 00 	lea    0xa7f2(%rip),%rax        # 3b1a0 <sgx_tservice_version>
   309ae:	5d                   	pop    %rbp
   309af:	c3                   	ret    

00000000000309b0 <sgx_create_report>:
   309b0:	f3 0f 1e fa          	endbr64 
   309b4:	55                   	push   %rbp
   309b5:	48 89 e5             	mov    %rsp,%rbp
   309b8:	53                   	push   %rbx
   309b9:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   309c0:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   309c7:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
   309ce:	00 
   309cf:	48 89 b4 24 60 01 00 	mov    %rsi,0x160(%rsp)
   309d6:	00 
   309d7:	48 89 94 24 58 01 00 	mov    %rdx,0x158(%rsp)
   309de:	00 
   309df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   309e6:	00 00 
   309e8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   309ef:	00 
   309f0:	31 c0                	xor    %eax,%eax
   309f2:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   309f9:	00 
   309fa:	ba 40 00 00 00       	mov    $0x40,%edx
   309ff:	be 00 00 00 00       	mov    $0x0,%esi
   30a04:	48 89 c7             	mov    %rax,%rdi
   30a07:	e8 24 9b ff ff       	call   2a530 <__memset>
   30a0c:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   30a13:	00 
   30a14:	ba 00 02 00 00       	mov    $0x200,%edx
   30a19:	be 00 00 00 00       	mov    $0x0,%esi
   30a1e:	48 89 c7             	mov    %rax,%rdi
   30a21:	e8 0a 9b ff ff       	call   2a530 <__memset>
   30a26:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   30a2d:	00 
   30a2e:	ba b0 01 00 00       	mov    $0x1b0,%edx
   30a33:	be 00 00 00 00       	mov    $0x0,%esi
   30a38:	48 89 c7             	mov    %rax,%rdi
   30a3b:	e8 f0 9a ff ff       	call   2a530 <__memset>
   30a40:	48 83 bc 24 68 01 00 	cmpq   $0x0,0x168(%rsp)
   30a47:	00 00 
   30a49:	74 49                	je     30a94 <sgx_create_report+0xe4>
   30a4b:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   30a52:	00 
   30a53:	be 00 02 00 00       	mov    $0x200,%esi
   30a58:	48 89 c7             	mov    %rax,%rdi
   30a5b:	e8 ba ec fd ff       	call   f71a <sgx_is_within_enclave>
   30a60:	85 c0                	test   %eax,%eax
   30a62:	0f 94 c0             	sete   %al
   30a65:	84 c0                	test   %al,%al
   30a67:	74 0a                	je     30a73 <sgx_create_report+0xc3>
   30a69:	b8 02 00 00 00       	mov    $0x2,%eax
   30a6e:	e9 a6 01 00 00       	jmp    30c19 <sgx_create_report+0x269>
   30a73:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   30a7a:	00 
   30a7b:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   30a82:	00 
   30a83:	48 89 d6             	mov    %rdx,%rsi
   30a86:	ba 40 00 00 00       	mov    $0x40,%edx
   30a8b:	48 89 c7             	mov    %rax,%rdi
   30a8e:	48 89 d1             	mov    %rdx,%rcx
   30a91:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   30a94:	48 83 bc 24 60 01 00 	cmpq   $0x0,0x160(%rsp)
   30a9b:	00 00 
   30a9d:	0f 84 8f 00 00 00    	je     30b32 <sgx_create_report+0x182>
   30aa3:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   30aaa:	00 
   30aab:	be 40 00 00 00       	mov    $0x40,%esi
   30ab0:	48 89 c7             	mov    %rax,%rdi
   30ab3:	e8 62 ec fd ff       	call   f71a <sgx_is_within_enclave>
   30ab8:	85 c0                	test   %eax,%eax
   30aba:	0f 94 c0             	sete   %al
   30abd:	84 c0                	test   %al,%al
   30abf:	74 0a                	je     30acb <sgx_create_report+0x11b>
   30ac1:	b8 02 00 00 00       	mov    $0x2,%eax
   30ac6:	e9 4e 01 00 00       	jmp    30c19 <sgx_create_report+0x269>
   30acb:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   30ad2:	00 
   30ad3:	48 8b 08             	mov    (%rax),%rcx
   30ad6:	48 8b 58 08          	mov    0x8(%rax),%rbx
   30ada:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   30ae1:	00 
   30ae2:	48 89 9c 24 88 01 00 	mov    %rbx,0x188(%rsp)
   30ae9:	00 
   30aea:	48 8b 48 10          	mov    0x10(%rax),%rcx
   30aee:	48 8b 58 18          	mov    0x18(%rax),%rbx
   30af2:	48 89 8c 24 90 01 00 	mov    %rcx,0x190(%rsp)
   30af9:	00 
   30afa:	48 89 9c 24 98 01 00 	mov    %rbx,0x198(%rsp)
   30b01:	00 
   30b02:	48 8b 48 20          	mov    0x20(%rax),%rcx
   30b06:	48 8b 58 28          	mov    0x28(%rax),%rbx
   30b0a:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   30b11:	00 
   30b12:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
   30b19:	00 
   30b1a:	48 8b 50 38          	mov    0x38(%rax),%rdx
   30b1e:	48 8b 40 30          	mov    0x30(%rax),%rax
   30b22:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
   30b29:	00 
   30b2a:	48 89 94 24 b8 01 00 	mov    %rdx,0x1b8(%rsp)
   30b31:	00 
   30b32:	48 83 bc 24 58 01 00 	cmpq   $0x0,0x158(%rsp)
   30b39:	00 00 
   30b3b:	74 19                	je     30b56 <sgx_create_report+0x1a6>
   30b3d:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   30b44:	00 
   30b45:	be b0 01 00 00       	mov    $0x1b0,%esi
   30b4a:	48 89 c7             	mov    %rax,%rdi
   30b4d:	e8 c8 eb fd ff       	call   f71a <sgx_is_within_enclave>
   30b52:	85 c0                	test   %eax,%eax
   30b54:	75 07                	jne    30b5d <sgx_create_report+0x1ad>
   30b56:	b8 01 00 00 00       	mov    $0x1,%eax
   30b5b:	eb 05                	jmp    30b62 <sgx_create_report+0x1b2>
   30b5d:	b8 00 00 00 00       	mov    $0x0,%eax
   30b62:	84 c0                	test   %al,%al
   30b64:	74 0a                	je     30b70 <sgx_create_report+0x1c0>
   30b66:	b8 02 00 00 00       	mov    $0x2,%eax
   30b6b:	e9 a9 00 00 00       	jmp    30c19 <sgx_create_report+0x269>
   30b70:	48 8d 94 24 00 02 00 	lea    0x200(%rsp),%rdx
   30b77:	00 
   30b78:	48 8d 8c 24 80 01 00 	lea    0x180(%rsp),%rcx
   30b7f:	00 
   30b80:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   30b87:	00 
   30b88:	48 89 ce             	mov    %rcx,%rsi
   30b8b:	48 89 c7             	mov    %rax,%rdi
   30b8e:	e8 51 0e 00 00       	call   319e4 <do_ereport>
   30b93:	89 84 24 74 01 00 00 	mov    %eax,0x174(%rsp)
   30b9a:	83 bc 24 74 01 00 00 	cmpl   $0x0,0x174(%rsp)
   30ba1:	00 
   30ba2:	75 5e                	jne    30c02 <sgx_create_report+0x252>
   30ba4:	48 c7 84 24 78 01 00 	movq   $0x0,0x178(%rsp)
   30bab:	00 00 00 00 00 
   30bb0:	48 83 bc 24 78 01 00 	cmpq   $0x35,0x178(%rsp)
   30bb7:	00 35 
   30bb9:	77 47                	ja     30c02 <sgx_create_report+0x252>
   30bbb:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   30bc2:	00 
   30bc3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   30bca:	00 
   30bcb:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   30bd2:	00 
   30bd3:	48 01 d0             	add    %rdx,%rax
   30bd6:	48 8b 94 24 78 01 00 	mov    0x178(%rsp),%rdx
   30bdd:	00 
   30bde:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   30be5:	00 
   30be6:	48 8b 94 24 58 01 00 	mov    0x158(%rsp),%rdx
   30bed:	00 
   30bee:	48 01 ca             	add    %rcx,%rdx
   30bf1:	48 8b 00             	mov    (%rax),%rax
   30bf4:	48 89 02             	mov    %rax,(%rdx)
   30bf7:	48 83 84 24 78 01 00 	addq   $0x1,0x178(%rsp)
   30bfe:	00 01 
   30c00:	eb ae                	jmp    30bb0 <sgx_create_report+0x200>
   30c02:	83 bc 24 74 01 00 00 	cmpl   $0x0,0x174(%rsp)
   30c09:	00 
   30c0a:	74 07                	je     30c13 <sgx_create_report+0x263>
   30c0c:	b8 01 00 00 00       	mov    $0x1,%eax
   30c11:	eb 05                	jmp    30c18 <sgx_create_report+0x268>
   30c13:	b8 00 00 00 00       	mov    $0x0,%eax
   30c18:	90                   	nop
   30c19:	48 8b 9c 24 f8 07 00 	mov    0x7f8(%rsp),%rbx
   30c20:	00 
   30c21:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   30c28:	00 00 
   30c2a:	74 05                	je     30c31 <sgx_create_report+0x281>
   30c2c:	e8 c6 2b ff ff       	call   237f7 <__stack_chk_fail>
   30c31:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   30c35:	c9                   	leave  
   30c36:	c3                   	ret    

0000000000030c37 <sgx_self_report>:
   30c37:	f3 0f 1e fa          	endbr64 
   30c3b:	55                   	push   %rbp
   30c3c:	48 89 e5             	mov    %rsp,%rbp
   30c3f:	48 8b 05 4a 20 03 00 	mov    0x3204a(%rip),%rax        # 62c90 <_ZZ15sgx_self_reportE7_report+0x30>
   30c46:	48 85 c0             	test   %rax,%rax
   30c49:	75 3a                	jne    30c85 <sgx_self_report+0x4e>
   30c4b:	48 8d 3d be 21 03 00 	lea    0x321be(%rip),%rdi        # 62e10 <_ZZ15sgx_self_reportE11report_lock>
   30c52:	e8 45 8a fe ff       	call   1969c <sgx_spin_lock>
   30c57:	48 8b 05 32 20 03 00 	mov    0x32032(%rip),%rax        # 62c90 <_ZZ15sgx_self_reportE7_report+0x30>
   30c5e:	48 85 c0             	test   %rax,%rax
   30c61:	75 16                	jne    30c79 <sgx_self_report+0x42>
   30c63:	48 8d 15 f6 1f 03 00 	lea    0x31ff6(%rip),%rdx        # 62c60 <_ZZ15sgx_self_reportE7_report>
   30c6a:	be 00 00 00 00       	mov    $0x0,%esi
   30c6f:	bf 00 00 00 00       	mov    $0x0,%edi
   30c74:	e8 37 fd ff ff       	call   309b0 <sgx_create_report>
   30c79:	48 8d 3d 90 21 03 00 	lea    0x32190(%rip),%rdi        # 62e10 <_ZZ15sgx_self_reportE11report_lock>
   30c80:	e8 b2 8a fe ff       	call   19737 <sgx_spin_unlock>
   30c85:	48 8d 05 d4 1f 03 00 	lea    0x31fd4(%rip),%rax        # 62c60 <_ZZ15sgx_self_reportE7_report>
   30c8c:	5d                   	pop    %rbp
   30c8d:	c3                   	ret    

Disassembly of section .nipx:

0000000000030c8e <do_init_enclave>:
   30c8e:	f3 0f 1e fa          	endbr64 
   30c92:	55                   	push   %rbp
   30c93:	48 89 e5             	mov    %rsp,%rbp
   30c96:	48 83 ec 60          	sub    $0x60,%rsp
   30c9a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   30c9e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   30ca2:	e8 04 0a 00 00       	call   316ab <get_enclave_base>
   30ca7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   30cab:	e8 26 0a 00 00       	call   316d6 <lock_enclave>
   30cb0:	85 c0                	test   %eax,%eax
   30cb2:	0f 95 c0             	setne  %al
   30cb5:	84 c0                	test   %al,%al
   30cb7:	74 0a                	je     30cc3 <do_init_enclave+0x35>
   30cb9:	b8 01 00 00 00       	mov    $0x1,%eax
   30cbe:	e9 67 02 00 00       	jmp    30f2a <do_init_enclave+0x29c>
   30cc3:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   30cc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30ccb:	48 89 d6             	mov    %rdx,%rsi
   30cce:	48 89 c7             	mov    %rax,%rdi
   30cd1:	e8 56 02 00 00       	call   30f2c <init_enclave>
   30cd6:	85 c0                	test   %eax,%eax
   30cd8:	0f 95 c0             	setne  %al
   30cdb:	84 c0                	test   %al,%al
   30cdd:	74 0a                	je     30ce9 <do_init_enclave+0x5b>
   30cdf:	b8 01 00 00 00       	mov    $0x1,%eax
   30ce4:	e9 41 02 00 00       	jmp    30f2a <do_init_enclave+0x29c>
   30ce9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   30ced:	be 01 00 00 00       	mov    $0x1,%esi
   30cf2:	48 89 c7             	mov    %rax,%rdi
   30cf5:	e8 3e fe fd ff       	call   10b38 <do_init_thread>
   30cfa:	85 c0                	test   %eax,%eax
   30cfc:	0f 95 c0             	setne  %al
   30cff:	84 c0                	test   %al,%al
   30d01:	74 0a                	je     30d0d <do_init_enclave+0x7f>
   30d03:	b8 01 00 00 00       	mov    $0x1,%eax
   30d08:	e9 1d 02 00 00       	jmp    30f2a <do_init_enclave+0x29c>
   30d0d:	8b 05 dd 90 00 00    	mov    0x90dd(%rip),%eax        # 39df0 <EDMM_supported>
   30d13:	85 c0                	test   %eax,%eax
   30d15:	74 71                	je     30d88 <do_init_enclave+0xfa>
   30d17:	e8 0c 0a fe ff       	call   11728 <get_heap_min_size>
   30d1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   30d20:	48 8d 05 19 32 00 00 	lea    0x3219(%rip),%rax        # 33f40 <g_global_data>
   30d27:	48 8b 50 10          	mov    0x10(%rax),%rdx
   30d2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30d2f:	48 01 d0             	add    %rdx,%rax
   30d32:	48 89 c7             	mov    %rax,%rdi
   30d35:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   30d39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   30d3d:	48 89 d1             	mov    %rdx,%rcx
   30d40:	ba 00 00 00 00       	mov    $0x0,%edx
   30d45:	48 89 c6             	mov    %rax,%rsi
   30d48:	e8 64 29 ff ff       	call   236b1 <memset_s>
   30d4d:	48 8d 05 f4 90 00 00 	lea    0x90f4(%rip),%rax        # 39e48 <rsrv_mem_min_size>
   30d54:	48 8b 10             	mov    (%rax),%rdx
   30d57:	48 8d 05 ea 90 00 00 	lea    0x90ea(%rip),%rax        # 39e48 <rsrv_mem_min_size>
   30d5e:	48 8b 00             	mov    (%rax),%rax
   30d61:	48 8d 0d d8 31 00 00 	lea    0x31d8(%rip),%rcx        # 33f40 <g_global_data>
   30d68:	48 8b 71 20          	mov    0x20(%rcx),%rsi
   30d6c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   30d70:	48 01 f1             	add    %rsi,%rcx
   30d73:	48 89 cf             	mov    %rcx,%rdi
   30d76:	48 89 d1             	mov    %rdx,%rcx
   30d79:	ba 00 00 00 00       	mov    $0x0,%edx
   30d7e:	48 89 c6             	mov    %rax,%rsi
   30d81:	e8 2b 29 ff ff       	call   236b1 <memset_s>
   30d86:	eb 76                	jmp    30dfe <do_init_enclave+0x170>
   30d88:	48 8d 05 b1 31 00 00 	lea    0x31b1(%rip),%rax        # 33f40 <g_global_data>
   30d8f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   30d93:	48 8d 05 a6 31 00 00 	lea    0x31a6(%rip),%rax        # 33f40 <g_global_data>
   30d9a:	48 8b 40 18          	mov    0x18(%rax),%rax
   30d9e:	48 8d 0d 9b 31 00 00 	lea    0x319b(%rip),%rcx        # 33f40 <g_global_data>
   30da5:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   30da9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   30dad:	48 01 f1             	add    %rsi,%rcx
   30db0:	48 89 cf             	mov    %rcx,%rdi
   30db3:	48 89 d1             	mov    %rdx,%rcx
   30db6:	ba 00 00 00 00       	mov    $0x0,%edx
   30dbb:	48 89 c6             	mov    %rax,%rsi
   30dbe:	e8 ee 28 ff ff       	call   236b1 <memset_s>
   30dc3:	48 8d 05 76 31 00 00 	lea    0x3176(%rip),%rax        # 33f40 <g_global_data>
   30dca:	48 8b 50 28          	mov    0x28(%rax),%rdx
   30dce:	48 8d 05 6b 31 00 00 	lea    0x316b(%rip),%rax        # 33f40 <g_global_data>
   30dd5:	48 8b 40 28          	mov    0x28(%rax),%rax
   30dd9:	48 8d 0d 60 31 00 00 	lea    0x3160(%rip),%rcx        # 33f40 <g_global_data>
   30de0:	48 8b 71 20          	mov    0x20(%rcx),%rsi
   30de4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   30de8:	48 01 f1             	add    %rsi,%rcx
   30deb:	48 89 cf             	mov    %rcx,%rdi
   30dee:	48 89 d1             	mov    %rdx,%rcx
   30df1:	ba 00 00 00 00       	mov    $0x0,%edx
   30df6:	48 89 c6             	mov    %rax,%rsi
   30df9:	e8 b3 28 ff ff       	call   236b1 <memset_s>
   30dfe:	bf 02 00 00 00       	mov    $0x2,%edi
   30e03:	e8 c0 08 00 00       	call   316c8 <set_enclave_state>
   30e08:	8b 05 e2 8f 00 00    	mov    0x8fe2(%rip),%eax        # 39df0 <EDMM_supported>
   30e0e:	85 c0                	test   %eax,%eax
   30e10:	0f 84 0f 01 00 00    	je     30f25 <do_init_enclave+0x297>
   30e16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30e1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   30e1e:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   30e25:	00 
   30e26:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   30e2d:	00 
   30e2e:	48 8d 05 0b 31 00 00 	lea    0x310b(%rip),%rax        # 33f40 <g_global_data>
   30e35:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
   30e3c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   30e40:	48 8d 05 f9 30 00 00 	lea    0x30f9(%rip),%rax        # 33f40 <g_global_data>
   30e47:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   30e4d:	89 c0                	mov    %eax,%eax
   30e4f:	48 c1 e0 05          	shl    $0x5,%rax
   30e53:	48 89 c2             	mov    %rax,%rdx
   30e56:	48 8d 05 e3 30 00 00 	lea    0x30e3(%rip),%rax        # 33f40 <g_global_data>
   30e5d:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
   30e64:	48 01 d0             	add    %rdx,%rax
   30e67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   30e6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   30e6f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   30e73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   30e77:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   30e7b:	73 15                	jae    30e92 <do_init_enclave+0x204>
   30e7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   30e81:	0f b7 00             	movzwl (%rax),%eax
   30e84:	66 83 f8 17          	cmp    $0x17,%ax
   30e88:	74 07                	je     30e91 <do_init_enclave+0x203>
   30e8a:	48 83 45 d0 20       	addq   $0x20,-0x30(%rbp)
   30e8f:	eb e2                	jmp    30e73 <do_init_enclave+0x1e5>
   30e91:	90                   	nop
   30e92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   30e96:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   30e9a:	74 3f                	je     30edb <do_init_enclave+0x24d>
   30e9c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   30ea0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   30ea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30ea8:	48 01 d0             	add    %rdx,%rax
   30eab:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   30eaf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   30eb3:	8b 40 04             	mov    0x4(%rax),%eax
   30eb6:	89 c0                	mov    %eax,%eax
   30eb8:	48 c1 e0 0c          	shl    $0xc,%rax
   30ebc:	48 89 c2             	mov    %rax,%rdx
   30ebf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   30ec3:	48 01 d0             	add    %rdx,%rax
   30ec6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   30eca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   30ece:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   30ed2:	76 07                	jbe    30edb <do_init_enclave+0x24d>
   30ed4:	b8 01 00 00 00       	mov    $0x1,%eax
   30ed9:	eb 4f                	jmp    30f2a <do_init_enclave+0x29c>
   30edb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   30edf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   30ee3:	48 89 d6             	mov    %rdx,%rsi
   30ee6:	48 89 c7             	mov    %rax,%rdi
   30ee9:	e8 cf 82 fe ff       	call   191bd <sgx_mm_init>
   30eee:	85 c0                	test   %eax,%eax
   30ef0:	0f 95 c0             	setne  %al
   30ef3:	84 c0                	test   %al,%al
   30ef5:	74 07                	je     30efe <do_init_enclave+0x270>
   30ef7:	b8 01 00 00 00       	mov    $0x1,%eax
   30efc:	eb 2c                	jmp    30f2a <do_init_enclave+0x29c>
   30efe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   30f02:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   30f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30f0a:	48 89 ce             	mov    %rcx,%rsi
   30f0d:	48 89 c7             	mov    %rax,%rdi
   30f10:	e8 54 e2 fd ff       	call   f169 <init_rts_emas>
   30f15:	89 45 bc             	mov    %eax,-0x44(%rbp)
   30f18:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   30f1c:	74 07                	je     30f25 <do_init_enclave+0x297>
   30f1e:	b8 01 00 00 00       	mov    $0x1,%eax
   30f23:	eb 05                	jmp    30f2a <do_init_enclave+0x29c>
   30f25:	b8 00 00 00 00       	mov    $0x0,%eax
   30f2a:	c9                   	leave  
   30f2b:	c3                   	ret    

0000000000030f2c <init_enclave>:
   30f2c:	f3 0f 1e fa          	endbr64 
   30f30:	55                   	push   %rbp
   30f31:	48 89 e5             	mov    %rsp,%rbp
   30f34:	41 55                	push   %r13
   30f36:	41 54                	push   %r12
   30f38:	53                   	push   %rbx
   30f39:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   30f40:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
   30f47:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
   30f4e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30f55:	00 00 
   30f57:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   30f5b:	31 c0                	xor    %eax,%eax
   30f5d:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   30f64:	00 
   30f65:	74 0a                	je     30f71 <init_enclave+0x45>
   30f67:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   30f6e:	00 
   30f6f:	75 0a                	jne    30f7b <init_enclave+0x4f>
   30f71:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30f76:	e9 4c 04 00 00       	jmp    313c7 <init_enclave+0x49b>
   30f7b:	48 8b 05 66 90 00 00 	mov    0x9066(%rip),%rax        # 39fe8 <_Z9pcl_entryPvS_>
   30f82:	48 85 c0             	test   %rax,%rax
   30f85:	74 35                	je     30fbc <init_enclave+0x90>
   30f87:	0f ae e8             	lfence 
   30f8a:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   30f91:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   30f98:	48 89 d6             	mov    %rdx,%rsi
   30f9b:	48 89 c7             	mov    %rax,%rdi
   30f9e:	e8 6d 30 fd ff       	call   4010 <_Z9pcl_entryPvS_@plt>
   30fa3:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
   30fa9:	83 bd f4 fe ff ff 00 	cmpl   $0x0,-0x10c(%rbp)
   30fb0:	74 0a                	je     30fbc <init_enclave+0x90>
   30fb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30fb7:	e9 0b 04 00 00       	jmp    313c7 <init_enclave+0x49b>
   30fbc:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   30fc3:	48 89 c7             	mov    %rax,%rdi
   30fc6:	e8 36 1a fe ff       	call   12a01 <relocate_enclave>
   30fcb:	85 c0                	test   %eax,%eax
   30fcd:	0f 95 c0             	setne  %al
   30fd0:	84 c0                	test   %al,%al
   30fd2:	74 0a                	je     30fde <init_enclave+0xb2>
   30fd4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30fd9:	e9 e9 03 00 00       	jmp    313c7 <init_enclave+0x49b>
   30fde:	e8 c8 06 00 00       	call   316ab <get_enclave_base>
   30fe3:	48 89 05 0e 8e 00 00 	mov    %rax,0x8e0e(%rip)        # 39df8 <g_enclave_base>
   30fea:	48 8d 05 4f 2f 00 00 	lea    0x2f4f(%rip),%rax        # 33f40 <g_global_data>
   30ff1:	48 8b 80 b0 06 00 00 	mov    0x6b0(%rax),%rax
   30ff8:	48 89 05 01 8e 00 00 	mov    %rax,0x8e01(%rip)        # 39e00 <g_enclave_size>
   30fff:	48 8d 05 3a 2f 00 00 	lea    0x2f3a(%rip),%rax        # 33f40 <g_global_data>
   31006:	48 8b 80 a0 06 00 00 	mov    0x6a0(%rax),%rax
   3100d:	48 85 c0             	test   %rax,%rax
   31010:	0f 95 c0             	setne  %al
   31013:	84 c0                	test   %al,%al
   31015:	74 39                	je     31050 <init_enclave+0x124>
   31017:	48 8d 05 22 2f 00 00 	lea    0x2f22(%rip),%rax        # 33f40 <g_global_data>
   3101e:	48 8b 90 a0 06 00 00 	mov    0x6a0(%rax),%rdx
   31025:	48 8b 05 cc 8d 00 00 	mov    0x8dcc(%rip),%rax        # 39df8 <g_enclave_base>
   3102c:	48 39 c2             	cmp    %rax,%rdx
   3102f:	0f 95 c0             	setne  %al
   31032:	84 c0                	test   %al,%al
   31034:	74 05                	je     3103b <init_enclave+0x10f>
   31036:	e8 60 0a 00 00       	call   31a9b <abort>
   3103b:	48 8d 05 fe 2e 00 00 	lea    0x2efe(%rip),%rax        # 33f40 <g_global_data>
   31042:	48 8b 80 a8 06 00 00 	mov    0x6a8(%rax),%rax
   31049:	48 89 05 a8 8d 00 00 	mov    %rax,0x8da8(%rip)        # 39df8 <g_enclave_base>
   31050:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   31057:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   3105e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   31065:	be b0 00 00 00       	mov    $0xb0,%esi
   3106a:	48 89 c7             	mov    %rax,%rdi
   3106d:	e8 3f e7 fd ff       	call   f7b1 <sgx_is_outside_enclave>
   31072:	85 c0                	test   %eax,%eax
   31074:	0f 94 c0             	sete   %al
   31077:	84 c0                	test   %al,%al
   31079:	74 0a                	je     31085 <init_enclave+0x159>
   3107b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31080:	e9 42 03 00 00       	jmp    313c7 <init_enclave+0x49b>
   31085:	0f ae e8             	lfence 
   31088:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   3108f:	48 8b 08             	mov    (%rax),%rcx
   31092:	48 8b 58 08          	mov    0x8(%rax),%rbx
   31096:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
   3109d:	48 89 9d 28 ff ff ff 	mov    %rbx,-0xd8(%rbp)
   310a4:	48 8b 48 10          	mov    0x10(%rax),%rcx
   310a8:	48 8b 58 18          	mov    0x18(%rax),%rbx
   310ac:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
   310b3:	48 89 9d 38 ff ff ff 	mov    %rbx,-0xc8(%rbp)
   310ba:	48 8b 48 20          	mov    0x20(%rax),%rcx
   310be:	48 8b 58 28          	mov    0x28(%rax),%rbx
   310c2:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   310c9:	48 89 9d 48 ff ff ff 	mov    %rbx,-0xb8(%rbp)
   310d0:	48 8b 48 30          	mov    0x30(%rax),%rcx
   310d4:	48 8b 58 38          	mov    0x38(%rax),%rbx
   310d8:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   310df:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
   310e6:	48 8b 48 40          	mov    0x40(%rax),%rcx
   310ea:	48 8b 58 48          	mov    0x48(%rax),%rbx
   310ee:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   310f5:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
   310fc:	48 8b 48 50          	mov    0x50(%rax),%rcx
   31100:	48 8b 58 58          	mov    0x58(%rax),%rbx
   31104:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   3110b:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
   31112:	48 8b 48 60          	mov    0x60(%rax),%rcx
   31116:	48 8b 58 68          	mov    0x68(%rax),%rbx
   3111a:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   3111e:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
   31122:	48 8b 48 70          	mov    0x70(%rax),%rcx
   31126:	48 8b 58 78          	mov    0x78(%rax),%rbx
   3112a:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   3112e:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
   31132:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
   31139:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx
   31140:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   31144:	48 89 5d a8          	mov    %rbx,-0x58(%rbp)
   31148:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
   3114f:	48 8b 98 98 00 00 00 	mov    0x98(%rax),%rbx
   31156:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   3115a:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
   3115e:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
   31165:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   3116c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   31170:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   31174:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   3117b:	00 00 00 00 
   3117f:	48 8b 85 2c ff ff ff 	mov    -0xd4(%rbp),%rax
   31186:	48 ba 00 00 00 00 00 	movabs $0x4000000000000000,%rdx
   3118d:	00 00 40 
   31190:	48 21 d0             	and    %rdx,%rax
   31193:	48 85 c0             	test   %rax,%rax
   31196:	74 1c                	je     311b4 <init_enclave+0x288>
   31198:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   3119c:	ba b0 00 00 00       	mov    $0xb0,%edx
   311a1:	48 3d b0 00 00 00    	cmp    $0xb0,%rax
   311a7:	48 0f 47 c2          	cmova  %rdx,%rax
   311ab:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   311b2:	eb 0b                	jmp    311bf <init_enclave+0x293>
   311b4:	48 c7 85 f8 fe ff ff 	movq   $0x9c,-0x108(%rbp)
   311bb:	9c 00 00 00 
   311bf:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
   311c6:	00 00 00 00 
   311ca:	b8 b0 00 00 00       	mov    $0xb0,%eax
   311cf:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   311d6:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   311dd:	73 28                	jae    31207 <init_enclave+0x2db>
   311df:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   311e6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   311ed:	48 01 c2             	add    %rax,%rdx
   311f0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   311f7:	48 01 d0             	add    %rdx,%rax
   311fa:	c6 00 00             	movb   $0x0,(%rax)
   311fd:	48 83 85 00 ff ff ff 	addq   $0x1,-0x100(%rbp)
   31204:	01 
   31205:	eb c3                	jmp    311ca <init_enclave+0x29e>
   31207:	8b 45 cc             	mov    -0x34(%rbp),%eax
   3120a:	89 05 f8 8b 00 00    	mov    %eax,0x8bf8(%rip)        # 39e08 <g_cpu_core_num>
   31210:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   31216:	89 05 d8 8b 00 00    	mov    %eax,0x8bd8(%rip)        # 39df4 <g_sdk_version>
   3121c:	8b 05 d2 8b 00 00    	mov    0x8bd2(%rip),%eax        # 39df4 <g_sdk_version>
   31222:	85 c0                	test   %eax,%eax
   31224:	75 0c                	jne    31232 <init_enclave+0x306>
   31226:	c7 05 c0 8b 00 00 00 	movl   $0x0,0x8bc0(%rip)        # 39df0 <EDMM_supported>
   3122d:	00 00 00 
   31230:	eb 35                	jmp    31267 <init_enclave+0x33b>
   31232:	8b 05 bc 8b 00 00    	mov    0x8bbc(%rip),%eax        # 39df4 <g_sdk_version>
   31238:	83 f8 04             	cmp    $0x4,%eax
   3123b:	7e 20                	jle    3125d <init_enclave+0x331>
   3123d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   31244:	48 83 c0 0c          	add    $0xc,%rax
   31248:	be 00 00 00 00       	mov    $0x0,%esi
   3124d:	48 89 c7             	mov    %rax,%rdi
   31250:	e8 d8 06 fe ff       	call   1192d <feature_supported>
   31255:	89 05 95 8b 00 00    	mov    %eax,0x8b95(%rip)        # 39df0 <EDMM_supported>
   3125b:	eb 0a                	jmp    31267 <init_enclave+0x33b>
   3125d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31262:	e9 60 01 00 00       	jmp    313c7 <init_enclave+0x49b>
   31267:	8b 1d 83 8b 00 00    	mov    0x8b83(%rip),%ebx        # 39df0 <EDMM_supported>
   3126d:	e8 b6 04 fe ff       	call   11728 <get_heap_min_size>
   31272:	49 89 c5             	mov    %rax,%r13
   31275:	e8 18 04 fe ff       	call   11692 <get_heap_size>
   3127a:	49 89 c4             	mov    %rax,%r12
   3127d:	e8 f0 03 fe ff       	call   11672 <get_heap_base>
   31282:	89 d9                	mov    %ebx,%ecx
   31284:	4c 89 ea             	mov    %r13,%rdx
   31287:	4c 89 e6             	mov    %r12,%rsi
   3128a:	48 89 c7             	mov    %rax,%rdi
   3128d:	e8 d7 7f fe ff       	call   19269 <heap_init>
   31292:	85 c0                	test   %eax,%eax
   31294:	0f 95 c0             	setne  %al
   31297:	84 c0                	test   %al,%al
   31299:	74 0a                	je     312a5 <init_enclave+0x379>
   3129b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   312a0:	e9 22 01 00 00       	jmp    313c7 <init_enclave+0x49b>
   312a5:	e8 fb 13 fe ff       	call   126a5 <get_xfeature_state>
   312aa:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   312b1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   312b8:	48 25 ff e7 ff e1    	and    $0xffffffffe1ffe7ff,%rax
   312be:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   312c5:	48 8b 85 2c ff ff ff 	mov    -0xd4(%rbp),%rax
   312cc:	48 ba 00 00 00 00 00 	movabs $0x4000000000000000,%rdx
   312d3:	00 00 40 
   312d6:	48 21 d0             	and    %rdx,%rax
   312d9:	48 85 c0             	test   %rax,%rax
   312dc:	74 0b                	je     312e9 <init_enclave+0x3bd>
   312de:	48 8b 45 c4          	mov    -0x3c(%rbp),%rax
   312e2:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   312e9:	8b 05 05 8b 00 00    	mov    0x8b05(%rip),%eax        # 39df4 <g_sdk_version>
   312ef:	83 f8 01             	cmp    $0x1,%eax
   312f2:	7f 09                	jg     312fd <init_enclave+0x3d1>
   312f4:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   312f8:	48 85 c0             	test   %rax,%rax
   312fb:	74 37                	je     31334 <init_enclave+0x408>
   312fd:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   31304:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   3130b:	48 8d 48 14          	lea    0x14(%rax),%rcx
   3130f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   31316:	48 89 ce             	mov    %rcx,%rsi
   31319:	48 89 c7             	mov    %rax,%rdi
   3131c:	e8 3b e3 fd ff       	call   f65c <init_optimized_libs>
   31321:	85 c0                	test   %eax,%eax
   31323:	0f 95 c0             	setne  %al
   31326:	84 c0                	test   %al,%al
   31328:	74 35                	je     3135f <init_enclave+0x433>
   3132a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3132f:	e9 93 00 00 00       	jmp    313c7 <init_enclave+0x49b>
   31334:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   3133b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   31342:	be 00 00 00 00       	mov    $0x0,%esi
   31347:	48 89 c7             	mov    %rax,%rdi
   3134a:	e8 0d e3 fd ff       	call   f65c <init_optimized_libs>
   3134f:	85 c0                	test   %eax,%eax
   31351:	0f 95 c0             	setne  %al
   31354:	84 c0                	test   %al,%al
   31356:	74 07                	je     3135f <init_enclave+0x433>
   31358:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3135d:	eb 68                	jmp    313c7 <init_enclave+0x49b>
   3135f:	e8 90 04 fe ff       	call   117f4 <get_rsrv_size>
   31364:	48 85 c0             	test   %rax,%rax
   31367:	0f 95 c0             	setne  %al
   3136a:	84 c0                	test   %al,%al
   3136c:	74 33                	je     313a1 <init_enclave+0x475>
   3136e:	e8 17 05 fe ff       	call   1188a <get_rsrv_min_size>
   31373:	49 89 c4             	mov    %rax,%r12
   31376:	e8 79 04 fe ff       	call   117f4 <get_rsrv_size>
   3137b:	48 89 c3             	mov    %rax,%rbx
   3137e:	e8 29 04 fe ff       	call   117ac <get_rsrv_base>
   31383:	4c 89 e2             	mov    %r12,%rdx
   31386:	48 89 de             	mov    %rbx,%rsi
   31389:	48 89 c7             	mov    %rax,%rdi
   3138c:	e8 9f 2a ff ff       	call   23e30 <rsrv_mem_init>
   31391:	85 c0                	test   %eax,%eax
   31393:	0f 95 c0             	setne  %al
   31396:	84 c0                	test   %al,%al
   31398:	74 07                	je     313a1 <init_enclave+0x475>
   3139a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3139f:	eb 26                	jmp    313c7 <init_enclave+0x49b>
   313a1:	be 08 00 00 00       	mov    $0x8,%esi
   313a6:	48 8d 3d 63 8a 00 00 	lea    0x8a63(%rip),%rdi        # 39e10 <__intel_security_cookie>
   313ad:	e8 48 e6 fd ff       	call   f9fa <sgx_read_rand>
   313b2:	85 c0                	test   %eax,%eax
   313b4:	0f 95 c0             	setne  %al
   313b7:	84 c0                	test   %al,%al
   313b9:	74 07                	je     313c2 <init_enclave+0x496>
   313bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   313c0:	eb 05                	jmp    313c7 <init_enclave+0x49b>
   313c2:	b8 00 00 00 00       	mov    $0x0,%eax
   313c7:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   313cb:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   313d2:	00 00 
   313d4:	74 05                	je     313db <init_enclave+0x4af>
   313d6:	e8 1c 24 ff ff       	call   237f7 <__stack_chk_fail>
   313db:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   313e2:	5b                   	pop    %rbx
   313e3:	41 5c                	pop    %r12
   313e5:	41 5d                	pop    %r13
   313e7:	5d                   	pop    %rbp
   313e8:	c3                   	ret    

00000000000313e9 <sgx_is_enclave_crashed>:
   313e9:	f3 0f 1e fa          	endbr64 
   313ed:	55                   	push   %rbp
   313ee:	48 89 e5             	mov    %rsp,%rbp
   313f1:	e8 c1 02 00 00       	call   316b7 <get_enclave_state>
   313f6:	83 f8 03             	cmp    $0x3,%eax
   313f9:	0f 94 c0             	sete   %al
   313fc:	0f b6 c0             	movzbl %al,%eax
   313ff:	5d                   	pop    %rbp
   31400:	c3                   	ret    

0000000000031401 <_ZL16init_stack_guardPv>:
   31401:	f3 0f 1e fa          	endbr64 
   31405:	55                   	push   %rbp
   31406:	48 89 e5             	mov    %rsp,%rbp
   31409:	48 83 ec 20          	sub    $0x20,%rsp
   3140d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   31411:	e8 e0 02 00 00       	call   316f6 <get_thread_data>
   31416:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3141a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   3141f:	74 25                	je     31446 <_ZL16init_stack_guardPv+0x45>
   31421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   31425:	48 8b 50 10          	mov    0x10(%rax),%rdx
   31429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   3142d:	48 8b 40 08          	mov    0x8(%rax),%rax
   31431:	48 39 c2             	cmp    %rax,%rdx
   31434:	75 17                	jne    3144d <_ZL16init_stack_guardPv+0x4c>
   31436:	48 8d 05 03 2b 00 00 	lea    0x2b03(%rip),%rax        # 33f40 <g_global_data>
   3143d:	48 8b 40 38          	mov    0x38(%rax),%rax
   31441:	48 85 c0             	test   %rax,%rax
   31444:	74 07                	je     3144d <_ZL16init_stack_guardPv+0x4c>
   31446:	b8 01 00 00 00       	mov    $0x1,%eax
   3144b:	eb 05                	jmp    31452 <_ZL16init_stack_guardPv+0x51>
   3144d:	b8 00 00 00 00       	mov    $0x0,%eax
   31452:	84 c0                	test   %al,%al
   31454:	74 71                	je     314c7 <_ZL16init_stack_guardPv+0xc6>
   31456:	48 8d 05 e3 2a 00 00 	lea    0x2ae3(%rip),%rax        # 33f40 <g_global_data>
   3145d:	48 8b 50 50          	mov    0x50(%rax),%rdx
   31461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   31465:	48 01 d0             	add    %rdx,%rax
   31468:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3146c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   31471:	75 1f                	jne    31492 <_ZL16init_stack_guardPv+0x91>
   31473:	48 8d 0d eb 1d 00 00 	lea    0x1deb(%rip),%rcx        # 33265 <__func__.2623+0x15>
   3147a:	48 8d 15 f8 1d 00 00 	lea    0x1df8(%rip),%rdx        # 33279 <__func__.2623+0x29>
   31481:	be 3f 00 00 00       	mov    $0x3f,%esi
   31486:	48 8d 3d fd 1d 00 00 	lea    0x1dfd(%rip),%rdi        # 3328a <__func__.2623+0x3a>
   3148d:	e8 b7 7d fe ff       	call   19249 <__assert>
   31492:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   31499:	00 
   3149a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   3149e:	be 08 00 00 00       	mov    $0x8,%esi
   314a3:	48 89 c7             	mov    %rax,%rdi
   314a6:	e8 4f e5 fd ff       	call   f9fa <sgx_read_rand>
   314ab:	85 c0                	test   %eax,%eax
   314ad:	0f 95 c0             	setne  %al
   314b0:	84 c0                	test   %al,%al
   314b2:	74 05                	je     314b9 <_ZL16init_stack_guardPv+0xb8>
   314b4:	e8 e2 05 00 00       	call   31a9b <abort>
   314b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   314bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   314c1:	48 89 50 28          	mov    %rdx,0x28(%rax)
   314c5:	eb 01                	jmp    314c8 <_ZL16init_stack_guardPv+0xc7>
   314c7:	90                   	nop
   314c8:	c9                   	leave  
   314c9:	c3                   	ret    

00000000000314ca <enter_enclave>:
   314ca:	f3 0f 1e fa          	endbr64 
   314ce:	55                   	push   %rbp
   314cf:	48 89 e5             	mov    %rsp,%rbp
   314d2:	48 83 ec 30          	sub    $0x30,%rsp
   314d6:	89 7d ec             	mov    %edi,-0x14(%rbp)
   314d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   314dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   314e1:	89 4d e8             	mov    %ecx,-0x18(%rbp)
   314e4:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   314eb:	e8 f9 fe ff ff       	call   313e9 <sgx_is_enclave_crashed>
   314f0:	85 c0                	test   %eax,%eax
   314f2:	0f 95 c0             	setne  %al
   314f5:	84 c0                	test   %al,%al
   314f7:	74 0a                	je     31503 <enter_enclave+0x39>
   314f9:	b8 06 10 00 00       	mov    $0x1006,%eax
   314fe:	e9 1e 01 00 00       	jmp    31621 <enter_enclave+0x157>
   31503:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   31507:	74 11                	je     3151a <enter_enclave+0x50>
   31509:	e8 a9 01 00 00       	call   316b7 <get_enclave_state>
   3150e:	83 f8 02             	cmp    $0x2,%eax
   31511:	74 07                	je     3151a <enter_enclave+0x50>
   31513:	b8 01 00 00 00       	mov    $0x1,%eax
   31518:	eb 05                	jmp    3151f <enter_enclave+0x55>
   3151a:	b8 00 00 00 00       	mov    $0x0,%eax
   3151f:	84 c0                	test   %al,%al
   31521:	74 12                	je     31535 <enter_enclave+0x6b>
   31523:	bf 03 00 00 00       	mov    $0x3,%edi
   31528:	e8 9b 01 00 00       	call   316c8 <set_enclave_state>
   3152d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   31530:	e9 ec 00 00 00       	jmp    31621 <enter_enclave+0x157>
   31535:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   31539:	0f 85 98 00 00 00    	jne    315d7 <enter_enclave+0x10d>
   3153f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   31543:	79 06                	jns    3154b <enter_enclave+0x81>
   31545:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
   31549:	75 29                	jne    31574 <enter_enclave+0xaa>
   3154b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   3154f:	48 89 c7             	mov    %rax,%rdi
   31552:	e8 aa fe ff ff       	call   31401 <_ZL16init_stack_guardPv>
   31557:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   3155b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   3155f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   31562:	48 89 ce             	mov    %rcx,%rsi
   31565:	89 c7                	mov    %eax,%edi
   31567:	e8 c9 f8 fd ff       	call   10e35 <do_ecall>
   3156c:	89 45 fc             	mov    %eax,-0x4(%rbp)
   3156f:	e9 9a 00 00 00       	jmp    3160e <enter_enclave+0x144>
   31574:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   31578:	75 18                	jne    31592 <enter_enclave+0xc8>
   3157a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   3157e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   31582:	48 89 d6             	mov    %rdx,%rsi
   31585:	48 89 c7             	mov    %rax,%rdi
   31588:	e8 01 f7 ff ff       	call   30c8e <do_init_enclave>
   3158d:	89 45 fc             	mov    %eax,-0x4(%rbp)
   31590:	eb 7c                	jmp    3160e <enter_enclave+0x144>
   31592:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   31596:	75 11                	jne    315a9 <enter_enclave+0xdf>
   31598:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   3159c:	48 89 c7             	mov    %rax,%rdi
   3159f:	e8 9d ff fd ff       	call   11541 <do_oret>
   315a4:	89 45 fc             	mov    %eax,-0x4(%rbp)
   315a7:	eb 65                	jmp    3160e <enter_enclave+0x144>
   315a9:	83 7d ec fc          	cmpl   $0xfffffffc,-0x14(%rbp)
   315ad:	75 11                	jne    315c0 <enter_enclave+0xf6>
   315af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   315b3:	48 89 c7             	mov    %rax,%rdi
   315b6:	e8 b6 fa fd ff       	call   11071 <do_ecall_add_thread>
   315bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
   315be:	eb 4e                	jmp    3160e <enter_enclave+0x144>
   315c0:	83 7d ec fb          	cmpl   $0xfffffffb,-0x14(%rbp)
   315c4:	75 48                	jne    3160e <enter_enclave+0x144>
   315c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   315ca:	48 89 c7             	mov    %rax,%rdi
   315cd:	e8 6a fb fd ff       	call   1113c <do_uninit_enclave>
   315d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
   315d5:	eb 37                	jmp    3160e <enter_enclave+0x144>
   315d7:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
   315db:	75 31                	jne    3160e <enter_enclave+0x144>
   315dd:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   315e1:	75 2b                	jne    3160e <enter_enclave+0x144>
   315e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   315e7:	48 89 c7             	mov    %rax,%rdi
   315ea:	e8 9d 0a fe ff       	call   1208c <trts_handle_exception>
   315ef:	89 45 fc             	mov    %eax,-0x4(%rbp)
   315f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   315f6:	48 89 c7             	mov    %rax,%rdi
   315f9:	e8 19 e5 fd ff       	call   fb17 <check_static_stack_canary>
   315fe:	85 c0                	test   %eax,%eax
   31600:	0f 95 c0             	setne  %al
   31603:	84 c0                	test   %al,%al
   31605:	74 07                	je     3160e <enter_enclave+0x144>
   31607:	c7 45 fc 09 10 00 00 	movl   $0x1009,-0x4(%rbp)
   3160e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   31612:	75 0a                	jne    3161e <enter_enclave+0x154>
   31614:	bf 03 00 00 00       	mov    $0x3,%edi
   31619:	e8 aa 00 00 00       	call   316c8 <set_enclave_state>
   3161e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   31621:	c9                   	leave  
   31622:	c3                   	ret    

0000000000031623 <restore_xregs>:
   31623:	f3 0f 1e fa          	endbr64 
   31627:	48 89 f9             	mov    %rdi,%rcx
   3162a:	48 8d 05 d3 e9 01 00 	lea    0x1e9d3(%rip),%rax        # 50004 <g_xsave_enabled>
   31631:	8b 00                	mov    (%rax),%eax
   31633:	83 f8 00             	cmp    $0x0,%eax
   31636:	74 16                	je     3164e <restore_xregs+0x2b>
   31638:	48 31 c0             	xor    %rax,%rax
   3163b:	48 31 d2             	xor    %rdx,%rdx
   3163e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31643:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   31648:	48 0f ae 29          	xrstor64 (%rcx)
   3164c:	eb 04                	jmp    31652 <restore_xregs+0x2f>
   3164e:	48 0f ae 09          	fxrstor64 (%rcx)
   31652:	c3                   	ret    

0000000000031653 <save_xregs>:
   31653:	f3 0f 1e fa          	endbr64 
   31657:	48 89 f9             	mov    %rdi,%rcx
   3165a:	48 8d 05 a3 e9 01 00 	lea    0x1e9a3(%rip),%rax        # 50004 <g_xsave_enabled>
   31661:	9b                   	fwait
   31662:	8b 00                	mov    (%rax),%eax
   31664:	83 f8 00             	cmp    $0x0,%eax
   31667:	74 16                	je     3167f <save_xregs+0x2c>
   31669:	48 31 c0             	xor    %rax,%rax
   3166c:	48 31 d2             	xor    %rdx,%rdx
   3166f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31674:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   31679:	48 0f c7 21          	xsavec64 (%rcx)
   3167d:	eb 04                	jmp    31683 <save_xregs+0x30>
   3167f:	48 0f ae 01          	fxsave64 (%rcx)
   31683:	c3                   	ret    

0000000000031684 <__x86_return_thunk>:
   31684:	c3                   	ret    

0000000000031685 <__x86_indirect_thunk_rax>:
   31685:	ff e0                	jmp    *%rax

0000000000031687 <__x86_indirect_thunk_rbx>:
   31687:	ff e3                	jmp    *%rbx

0000000000031689 <__x86_indirect_thunk_rcx>:
   31689:	ff e1                	jmp    *%rcx

000000000003168b <__x86_indirect_thunk_rdx>:
   3168b:	ff e2                	jmp    *%rdx

000000000003168d <__x86_indirect_thunk_rbp>:
   3168d:	ff e5                	jmp    *%rbp

000000000003168f <__x86_indirect_thunk_rsi>:
   3168f:	ff e6                	jmp    *%rsi

0000000000031691 <__x86_indirect_thunk_rdi>:
   31691:	ff e7                	jmp    *%rdi

0000000000031693 <__x86_indirect_thunk_r8>:
   31693:	41 ff e0             	jmp    *%r8

0000000000031696 <__x86_indirect_thunk_r9>:
   31696:	41 ff e1             	jmp    *%r9

0000000000031699 <__x86_indirect_thunk_r10>:
   31699:	41 ff e2             	jmp    *%r10

000000000003169c <__x86_indirect_thunk_r11>:
   3169c:	41 ff e3             	jmp    *%r11

000000000003169f <__x86_indirect_thunk_r12>:
   3169f:	41 ff e4             	jmp    *%r12

00000000000316a2 <__x86_indirect_thunk_r13>:
   316a2:	41 ff e5             	jmp    *%r13

00000000000316a5 <__x86_indirect_thunk_r14>:
   316a5:	41 ff e6             	jmp    *%r14

00000000000316a8 <__x86_indirect_thunk_r15>:
   316a8:	41 ff e7             	jmp    *%r15

00000000000316ab <get_enclave_base>:
   316ab:	f3 0f 1e fa          	endbr64 
   316af:	48 8d 05 4a e9 fc ff 	lea    -0x316b6(%rip),%rax        # 0 <enclave.so>
   316b6:	c3                   	ret    

00000000000316b7 <get_enclave_state>:
   316b7:	f3 0f 1e fa          	endbr64 
   316bb:	48 8d 0d 3e e9 01 00 	lea    0x1e93e(%rip),%rcx        # 50000 <g_enclave_state>
   316c2:	48 31 c0             	xor    %rax,%rax
   316c5:	8b 01                	mov    (%rcx),%eax
   316c7:	c3                   	ret    

00000000000316c8 <set_enclave_state>:
   316c8:	f3 0f 1e fa          	endbr64 
   316cc:	48 8d 05 2d e9 01 00 	lea    0x1e92d(%rip),%rax        # 50000 <g_enclave_state>
   316d3:	89 38                	mov    %edi,(%rax)
   316d5:	c3                   	ret    

00000000000316d6 <lock_enclave>:
   316d6:	f3 0f 1e fa          	endbr64 
   316da:	48 8d 15 1f e9 01 00 	lea    0x1e91f(%rip),%rdx        # 50000 <g_enclave_state>
   316e1:	48 31 c0             	xor    %rax,%rax
   316e4:	b8 00 00 00 00       	mov    $0x0,%eax
   316e9:	48 31 c9             	xor    %rcx,%rcx
   316ec:	b9 01 00 00 00       	mov    $0x1,%ecx
   316f1:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   316f5:	c3                   	ret    

00000000000316f6 <get_thread_data>:
   316f6:	f3 0f 1e fa          	endbr64 
   316fa:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   31701:	00 00 
   31703:	c3                   	ret    

0000000000031704 <get_stack_guard>:
   31704:	f3 0f 1e fa          	endbr64 
   31708:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   3170f:	00 00 
   31711:	c3                   	ret    

0000000000031712 <enclave_entry>:
   31712:	f3 0f 1e fa          	endbr64 
   31716:	48 31 d2             	xor    %rdx,%rdx
   31719:	48 01 d2             	add    %rdx,%rdx
   3171c:	fc                   	cld    
   3171d:	4d 31 c0             	xor    %r8,%r8
   31720:	4d 31 c9             	xor    %r9,%r9
   31723:	4d 31 d2             	xor    %r10,%r10
   31726:	4d 31 db             	xor    %r11,%r11
   31729:	4d 31 e4             	xor    %r12,%r12
   3172c:	4d 31 ed             	xor    %r13,%r13
   3172f:	4d 31 f6             	xor    %r14,%r14
   31732:	4d 31 ff             	xor    %r15,%r15
   31735:	48 83 f8 00          	cmp    $0x0,%rax
   31739:	0f 85 d1 00 00 00    	jne    31810 <enclave_entry+0xfe>
   3173f:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   31746:	00 00 
   31748:	48 83 f8 00          	cmp    $0x0,%rax
   3174c:	75 0f                	jne    3175d <enclave_entry+0x4b>
   3174e:	48 89 d8             	mov    %rbx,%rax
   31751:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   31757:	48 2d 00 04 00 00    	sub    $0x400,%rax
   3175d:	48 94                	xchg   %rax,%rsp
   3175f:	51                   	push   %rcx
   31760:	55                   	push   %rbp
   31761:	48 89 e5             	mov    %rsp,%rbp
   31764:	9c                   	pushf  
   31765:	48 f7 14 24          	notq   (%rsp)
   31769:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   31770:	00 
   31771:	48 f7 14 24          	notq   (%rsp)
   31775:	9d                   	popf   
   31776:	48 83 ec 30          	sub    $0x30,%rsp
   3177a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   3177e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   31782:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   31786:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   3178a:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   3178e:	48 83 ec 20          	sub    $0x20,%rsp
   31792:	48 8d 3d 67 2e 00 00 	lea    0x2e67(%rip),%rdi        # 34600 <SYNTHETIC_STATE>
   31799:	e8 85 fe ff ff       	call   31623 <restore_xregs>
   3179e:	0f ae e8             	lfence 
   317a1:	48 83 c4 20          	add    $0x20,%rsp
   317a5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   317a9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   317ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   317b1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   317b5:	e8 10 fd ff ff       	call   314ca <enter_enclave>
   317ba:	48 89 c3             	mov    %rax,%rbx
   317bd:	48 8d 3d 3c 2e 00 00 	lea    0x2e3c(%rip),%rdi        # 34600 <SYNTHETIC_STATE>
   317c4:	e8 5a fe ff ff       	call   31623 <restore_xregs>
   317c9:	0f ae e8             	lfence 
   317cc:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   317d3:	48 89 de             	mov    %rbx,%rsi
   317d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   317da:	48 89 ec             	mov    %rbp,%rsp
   317dd:	5d                   	pop    %rbp
   317de:	5b                   	pop    %rbx
   317df:	48 89 d4             	mov    %rdx,%rsp
   317e2:	48 31 c9             	xor    %rcx,%rcx
   317e5:	48 31 d2             	xor    %rdx,%rdx
   317e8:	4d 31 c0             	xor    %r8,%r8
   317eb:	4d 31 c9             	xor    %r9,%r9
   317ee:	4d 31 d2             	xor    %r10,%r10
   317f1:	4d 31 db             	xor    %r11,%r11
   317f4:	4d 31 e4             	xor    %r12,%r12
   317f7:	4d 31 ed             	xor    %r13,%r13
   317fa:	4d 31 f6             	xor    %r14,%r14
   317fd:	4d 31 ff             	xor    %r15,%r15
   31800:	48 01 d2             	add    %rdx,%rdx
   31803:	fc                   	cld    
   31804:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   3180b:	0f 01 d7             	enclu  
   3180e:	0f 0b                	ud2    
   31810:	48 89 c2             	mov    %rax,%rdx
   31813:	48 89 d8             	mov    %rbx,%rax
   31816:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   3181c:	e9 3c ff ff ff       	jmp    3175d <enclave_entry+0x4b>
   31821:	0f 0b                	ud2    

0000000000031823 <do_ocall>:
   31823:	f3 0f 1e fa          	endbr64 
   31827:	55                   	push   %rbp
   31828:	48 89 e5             	mov    %rsp,%rbp
   3182b:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   3182f:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   31833:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   3183a:	00 00 
   3183c:	48 29 c4             	sub    %rax,%rsp
   3183f:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   31846:	48 f7 d0             	not    %rax
   31849:	48 21 c4             	and    %rax,%rsp
   3184c:	48 89 e1             	mov    %rsp,%rcx
   3184f:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   31856:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   3185d:	00 
   3185e:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   31863:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   31868:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   3186d:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   31872:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   31877:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   3187c:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   31881:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   31886:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   3188d:	00 
   3188e:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   31895:	00 00 
   31897:	48 89 c1             	mov    %rax,%rcx
   3189a:	48 c1 e9 02          	shr    $0x2,%rcx
   3189e:	48 31 c0             	xor    %rax,%rax
   318a1:	fc                   	cld    
   318a2:	f3 ab                	rep stos %eax,%es:(%rdi)
   318a4:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   318ab:	00 
   318ac:	48 89 3c 24          	mov    %rdi,(%rsp)
   318b0:	e8 9e fd ff ff       	call   31653 <save_xregs>
   318b5:	48 8d 3d 44 2d 00 00 	lea    0x2d44(%rip),%rdi        # 34600 <SYNTHETIC_STATE>
   318bc:	48 89 3c 24          	mov    %rdi,(%rsp)
   318c0:	e8 5e fd ff ff       	call   31623 <restore_xregs>
   318c5:	0f ae e8             	lfence 
   318c8:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   318cd:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   318d2:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   318d9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   318de:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   318e3:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   318ea:	00 00 
   318ec:	48 89 c3             	mov    %rax,%rbx
   318ef:	48 89 e7             	mov    %rsp,%rdi
   318f2:	e8 b3 fb fd ff       	call   114aa <update_ocall_lastsp>
   318f7:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   318fc:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   31901:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   31905:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   3190c:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   31913:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   31917:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   3191e:	48 31 c9             	xor    %rcx,%rcx
   31921:	48 31 d2             	xor    %rdx,%rdx
   31924:	4d 31 c0             	xor    %r8,%r8
   31927:	4d 31 c9             	xor    %r9,%r9
   3192a:	4d 31 d2             	xor    %r10,%r10
   3192d:	4d 31 db             	xor    %r11,%r11
   31930:	4d 31 e4             	xor    %r12,%r12
   31933:	4d 31 ed             	xor    %r13,%r13
   31936:	4d 31 f6             	xor    %r14,%r14
   31939:	4d 31 ff             	xor    %r15,%r15
   3193c:	48 01 d2             	add    %rdx,%rdx
   3193f:	fc                   	cld    
   31940:	0f 01 d7             	enclu  

0000000000031943 <__morestack>:
   31943:	f3 0f 1e fa          	endbr64 
   31947:	55                   	push   %rbp
   31948:	48 89 e5             	mov    %rsp,%rbp
   3194b:	48 83 ec 20          	sub    $0x20,%rsp
   3194f:	e8 cf fe ff ff       	call   31823 <do_ocall>
   31954:	c9                   	leave  
   31955:	c3                   	ret    

0000000000031956 <asm_oret>:
   31956:	f3 0f 1e fa          	endbr64 
   3195a:	48 89 e3             	mov    %rsp,%rbx
   3195d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   31962:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   31967:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   3196b:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   31972:	00 
   31973:	e8 ab fc ff ff       	call   31623 <restore_xregs>
   31978:	0f ae e8             	lfence 
   3197b:	48 31 c0             	xor    %rax,%rax
   3197e:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   31983:	48 29 f9             	sub    %rdi,%rcx
   31986:	48 83 e9 08          	sub    $0x8,%rcx
   3198a:	48 c1 e9 02          	shr    $0x2,%rcx
   3198e:	fc                   	cld    
   3198f:	f3 ab                	rep stos %eax,%es:(%rdi)
   31991:	48 8b 43 10          	mov    0x10(%rbx),%rax
   31995:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   3199a:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   3199f:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   319a4:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   319a9:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   319ae:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   319b3:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   319b8:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   319bd:	48 89 ec             	mov    %rbp,%rsp
   319c0:	5d                   	pop    %rbp
   319c1:	c3                   	ret    
   319c2:	0f 0b                	ud2    

00000000000319c4 <do_egetkey>:
   319c4:	f3 0f 1e fa          	endbr64 
   319c8:	53                   	push   %rbx
   319c9:	51                   	push   %rcx
   319ca:	52                   	push   %rdx
   319cb:	48 89 fb             	mov    %rdi,%rbx
   319ce:	48 89 f1             	mov    %rsi,%rcx
   319d1:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   319d8:	0f 01 d7             	enclu  
   319db:	74 03                	je     319e0 <do_egetkey+0x1c>
   319dd:	48 31 c0             	xor    %rax,%rax
   319e0:	5a                   	pop    %rdx
   319e1:	59                   	pop    %rcx
   319e2:	5b                   	pop    %rbx
   319e3:	c3                   	ret    

00000000000319e4 <do_ereport>:
   319e4:	f3 0f 1e fa          	endbr64 
   319e8:	53                   	push   %rbx
   319e9:	51                   	push   %rcx
   319ea:	52                   	push   %rdx
   319eb:	48 89 fb             	mov    %rdi,%rbx
   319ee:	48 89 f1             	mov    %rsi,%rcx
   319f1:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   319f8:	f8                   	clc    

00000000000319f9 <Lereport_inst>:
   319f9:	0f 01 d7             	enclu  
   319fc:	0f 92 c0             	setb   %al
   319ff:	5a                   	pop    %rdx
   31a00:	59                   	pop    %rcx
   31a01:	5b                   	pop    %rbx
   31a02:	c3                   	ret    

0000000000031a03 <do_everifyreport2>:
   31a03:	f3 0f 1e fa          	endbr64 
   31a07:	53                   	push   %rbx
   31a08:	51                   	push   %rcx
   31a09:	52                   	push   %rdx
   31a0a:	48 89 fb             	mov    %rdi,%rbx
   31a0d:	48 89 f1             	mov    %rsi,%rcx
   31a10:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

0000000000031a17 <Leverifyreport2_inst>:
   31a17:	0f 01 d7             	enclu  
   31a1a:	74 03                	je     31a1f <Leverifyreport2_inst+0x8>
   31a1c:	48 31 c0             	xor    %rax,%rax
   31a1f:	5a                   	pop    %rdx
   31a20:	59                   	pop    %rcx
   31a21:	5b                   	pop    %rbx
   31a22:	c3                   	ret    

0000000000031a23 <do_eaccept>:
   31a23:	f3 0f 1e fa          	endbr64 
   31a27:	53                   	push   %rbx
   31a28:	51                   	push   %rcx
   31a29:	52                   	push   %rdx
   31a2a:	48 89 fb             	mov    %rdi,%rbx
   31a2d:	48 89 f1             	mov    %rsi,%rcx
   31a30:	b8 05 00 00 00       	mov    $0x5,%eax
   31a35:	0f 01 d7             	enclu  
   31a38:	83 f8 00             	cmp    $0x0,%eax
   31a3b:	75 5e                	jne    31a9b <abort>
   31a3d:	5a                   	pop    %rdx
   31a3e:	59                   	pop    %rcx
   31a3f:	5b                   	pop    %rbx
   31a40:	c3                   	ret    

0000000000031a41 <do_eacceptcopy>:
   31a41:	f3 0f 1e fa          	endbr64 
   31a45:	53                   	push   %rbx
   31a46:	51                   	push   %rcx
   31a47:	52                   	push   %rdx
   31a48:	48 89 fb             	mov    %rdi,%rbx
   31a4b:	48 89 f1             	mov    %rsi,%rcx
   31a4e:	b8 07 00 00 00       	mov    $0x7,%eax
   31a53:	0f 01 d7             	enclu  
   31a56:	83 f8 00             	cmp    $0x0,%eax
   31a59:	75 40                	jne    31a9b <abort>
   31a5b:	5a                   	pop    %rdx
   31a5c:	59                   	pop    %rcx
   31a5d:	5b                   	pop    %rbx
   31a5e:	c3                   	ret    

0000000000031a5f <do_emodpe>:
   31a5f:	f3 0f 1e fa          	endbr64 
   31a63:	53                   	push   %rbx
   31a64:	51                   	push   %rcx
   31a65:	52                   	push   %rdx
   31a66:	48 89 fb             	mov    %rdi,%rbx
   31a69:	48 89 f1             	mov    %rsi,%rcx
   31a6c:	b8 06 00 00 00       	mov    $0x6,%eax
   31a71:	0f 01 d7             	enclu  
   31a74:	5a                   	pop    %rdx
   31a75:	59                   	pop    %rcx
   31a76:	5b                   	pop    %rbx
   31a77:	c3                   	ret    

0000000000031a78 <do_rdrand>:
   31a78:	f3 0f 1e fa          	endbr64 
   31a7c:	b9 0a 00 00 00       	mov    $0xa,%ecx
   31a81:	0f c7 f0             	rdrand %eax
   31a84:	72 08                	jb     31a8e <do_rdrand+0x16>
   31a86:	ff c9                	dec    %ecx
   31a88:	75 f7                	jne    31a81 <do_rdrand+0x9>
   31a8a:	48 31 c0             	xor    %rax,%rax
   31a8d:	c3                   	ret    
   31a8e:	48 89 f9             	mov    %rdi,%rcx
   31a91:	89 01                	mov    %eax,(%rcx)
   31a93:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   31a9a:	c3                   	ret    

0000000000031a9b <abort>:
   31a9b:	f3 0f 1e fa          	endbr64 
   31a9f:	48 8d 05 5a e5 01 00 	lea    0x1e55a(%rip),%rax        # 50000 <g_enclave_state>
   31aa6:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   31aac:	0f 0b                	ud2    

0000000000031aae <continue_execution>:
   31aae:	f3 0f 1e fa          	endbr64 
   31ab2:	48 89 f9             	mov    %rdi,%rcx
   31ab5:	48 8b 01             	mov    (%rcx),%rax
   31ab8:	50                   	push   %rax
   31ab9:	48 8b 41 08          	mov    0x8(%rcx),%rax
   31abd:	50                   	push   %rax
   31abe:	48 8b 41 20          	mov    0x20(%rcx),%rax
   31ac2:	48 2d 88 00 00 00    	sub    $0x88,%rax
   31ac8:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   31acc:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   31ad0:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   31ad4:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   31ad8:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   31adc:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   31ae0:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   31ae4:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   31ae8:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   31aec:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   31af0:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   31af4:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   31af8:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   31afc:	ff b1 80 00 00 00    	push   0x80(%rcx)
   31b02:	9d                   	popf   
   31b03:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   31b0a:	48 89 08             	mov    %rcx,(%rax)
   31b0d:	59                   	pop    %rcx
   31b0e:	5c                   	pop    %rsp
   31b0f:	48 94                	xchg   %rax,%rsp
   31b11:	c2 80 00             	ret    $0x80
