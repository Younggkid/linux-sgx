
enclave.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000003000 <.plt>:
    3000:	ff 35 d2 4f 03 00    	push   0x34fd2(%rip)        # 37fd8 <_GLOBAL_OFFSET_TABLE_+0x8>
    3006:	ff 25 d4 4f 03 00    	jmp    *0x34fd4(%rip)        # 37fe0 <_GLOBAL_OFFSET_TABLE_+0x10>
    300c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000003010 <_Z9pcl_entryPvS_@plt>:
    3010:	ff 25 d2 4f 03 00    	jmp    *0x34fd2(%rip)        # 37fe8 <_Z9pcl_entryPvS_>
    3016:	66 90                	xchg   %ax,%ax

0000000000003018 <ippcpSetCpuFeatures@plt>:
    3018:	ff 25 d2 4f 03 00    	jmp    *0x34fd2(%rip)        # 37ff0 <ippcpSetCpuFeatures>
    301e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003020 <sgx_ecall_sgx_cpuid>:
    3020:	f3 0f 1e fa          	endbr64 
    3024:	55                   	push   %rbp
    3025:	48 89 e5             	mov    %rsp,%rbp
    3028:	48 83 ec 50          	sub    $0x50,%rsp
    302c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3030:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    3035:	74 15                	je     304c <sgx_ecall_sgx_cpuid+0x2c>
    3037:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    303b:	be 10 00 00 00       	mov    $0x10,%esi
    3040:	48 89 c7             	mov    %rax,%rdi
    3043:	e8 f6 a1 00 00       	call   d23e <sgx_is_outside_enclave>
    3048:	85 c0                	test   %eax,%eax
    304a:	75 0a                	jne    3056 <sgx_ecall_sgx_cpuid+0x36>
    304c:	b8 02 00 00 00       	mov    $0x2,%eax
    3051:	e9 29 01 00 00       	jmp    317f <sgx_ecall_sgx_cpuid+0x15f>
    3056:	0f ae e8             	lfence 
    3059:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    305d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3061:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3065:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    3069:	b9 10 00 00 00       	mov    $0x10,%ecx
    306e:	be 10 00 00 00       	mov    $0x10,%esi
    3073:	48 89 c7             	mov    %rax,%rdi
    3076:	e8 2d e5 01 00       	call   215a8 <memcpy_s>
    307b:	85 c0                	test   %eax,%eax
    307d:	74 0a                	je     3089 <sgx_ecall_sgx_cpuid+0x69>
    307f:	b8 01 00 00 00       	mov    $0x1,%eax
    3084:	e9 f6 00 00 00       	jmp    317f <sgx_ecall_sgx_cpuid+0x15f>
    3089:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    3090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3094:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3098:	48 c7 45 e8 10 00 00 	movq   $0x10,-0x18(%rbp)
    309f:	00 
    30a0:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    30a7:	00 
    30a8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    30ad:	74 21                	je     30d0 <sgx_ecall_sgx_cpuid+0xb0>
    30af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    30b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    30b7:	48 89 d6             	mov    %rdx,%rsi
    30ba:	48 89 c7             	mov    %rax,%rdi
    30bd:	e8 7c a1 00 00       	call   d23e <sgx_is_outside_enclave>
    30c2:	85 c0                	test   %eax,%eax
    30c4:	75 0a                	jne    30d0 <sgx_ecall_sgx_cpuid+0xb0>
    30c6:	b8 02 00 00 00       	mov    $0x2,%eax
    30cb:	e9 af 00 00 00       	jmp    317f <sgx_ecall_sgx_cpuid+0x15f>
    30d0:	0f ae e8             	lfence 
    30d3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    30d8:	74 51                	je     312b <sgx_ecall_sgx_cpuid+0x10b>
    30da:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    30df:	74 4a                	je     312b <sgx_ecall_sgx_cpuid+0x10b>
    30e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30e5:	83 e0 03             	and    $0x3,%eax
    30e8:	48 85 c0             	test   %rax,%rax
    30eb:	74 09                	je     30f6 <sgx_ecall_sgx_cpuid+0xd6>
    30ed:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    30f4:	eb 73                	jmp    3169 <sgx_ecall_sgx_cpuid+0x149>
    30f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30fa:	48 89 c7             	mov    %rax,%rdi
    30fd:	e8 b5 a3 01 00       	call   1d4b7 <dlmalloc>
    3102:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3106:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    310b:	75 09                	jne    3116 <sgx_ecall_sgx_cpuid+0xf6>
    310d:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    3114:	eb 53                	jmp    3169 <sgx_ecall_sgx_cpuid+0x149>
    3116:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    311a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    311e:	be 00 00 00 00       	mov    $0x0,%esi
    3123:	48 89 c7             	mov    %rax,%rdi
    3126:	e8 e8 df 01 00       	call   21113 <memset>
    312b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    312e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3132:	89 d6                	mov    %edx,%esi
    3134:	48 89 c7             	mov    %rax,%rdi
    3137:	e8 9a 04 00 00       	call   35d6 <ecall_sgx_cpuid>
    313c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3141:	74 25                	je     3168 <sgx_ecall_sgx_cpuid+0x148>
    3143:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3147:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    314b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    314f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3153:	48 89 c7             	mov    %rax,%rdi
    3156:	e8 3d e5 01 00       	call   21698 <memcpy_verw_s>
    315b:	85 c0                	test   %eax,%eax
    315d:	74 09                	je     3168 <sgx_ecall_sgx_cpuid+0x148>
    315f:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    3166:	eb 01                	jmp    3169 <sgx_ecall_sgx_cpuid+0x149>
    3168:	90                   	nop
    3169:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    316e:	74 0c                	je     317c <sgx_ecall_sgx_cpuid+0x15c>
    3170:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3174:	48 89 c7             	mov    %rax,%rdi
    3177:	e8 36 ae 01 00       	call   1dfb2 <dlfree>
    317c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    317f:	c9                   	leave  
    3180:	c3                   	ret    

0000000000003181 <sgx_fibnacci>:
    3181:	f3 0f 1e fa          	endbr64 
    3185:	55                   	push   %rbp
    3186:	48 89 e5             	mov    %rsp,%rbp
    3189:	48 83 ec 20          	sub    $0x20,%rsp
    318d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3191:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3196:	74 15                	je     31ad <sgx_fibnacci+0x2c>
    3198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    319c:	be 04 00 00 00       	mov    $0x4,%esi
    31a1:	48 89 c7             	mov    %rax,%rdi
    31a4:	e8 95 a0 00 00       	call   d23e <sgx_is_outside_enclave>
    31a9:	85 c0                	test   %eax,%eax
    31ab:	75 07                	jne    31b4 <sgx_fibnacci+0x33>
    31ad:	b8 02 00 00 00       	mov    $0x2,%eax
    31b2:	eb 44                	jmp    31f8 <sgx_fibnacci+0x77>
    31b4:	0f ae e8             	lfence 
    31b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    31bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    31c3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    31c7:	b9 04 00 00 00       	mov    $0x4,%ecx
    31cc:	be 04 00 00 00       	mov    $0x4,%esi
    31d1:	48 89 c7             	mov    %rax,%rdi
    31d4:	e8 cf e3 01 00       	call   215a8 <memcpy_s>
    31d9:	85 c0                	test   %eax,%eax
    31db:	74 07                	je     31e4 <sgx_fibnacci+0x63>
    31dd:	b8 01 00 00 00       	mov    $0x1,%eax
    31e2:	eb 14                	jmp    31f8 <sgx_fibnacci+0x77>
    31e4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    31eb:	8b 45 f0             	mov    -0x10(%rbp),%eax
    31ee:	89 c7                	mov    %eax,%edi
    31f0:	e8 0b 04 00 00       	call   3600 <fibnacci>
    31f5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    31f8:	c9                   	leave  
    31f9:	c3                   	ret    

00000000000031fa <sgx_populate>:
    31fa:	f3 0f 1e fa          	endbr64 
    31fe:	55                   	push   %rbp
    31ff:	48 89 e5             	mov    %rsp,%rbp
    3202:	48 83 ec 20          	sub    $0x20,%rsp
    3206:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    320a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3211:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3216:	74 07                	je     321f <sgx_populate+0x25>
    3218:	b8 02 00 00 00       	mov    $0x2,%eax
    321d:	eb 08                	jmp    3227 <sgx_populate+0x2d>
    321f:	e8 c4 01 00 00       	call   33e8 <populate>
    3224:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3227:	c9                   	leave  
    3228:	c3                   	ret    

0000000000003229 <sgx_call_aes>:
    3229:	f3 0f 1e fa          	endbr64 
    322d:	55                   	push   %rbp
    322e:	48 89 e5             	mov    %rsp,%rbp
    3231:	48 83 ec 20          	sub    $0x20,%rsp
    3235:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3239:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3240:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3245:	74 07                	je     324e <sgx_call_aes+0x25>
    3247:	b8 02 00 00 00       	mov    $0x2,%eax
    324c:	eb 08                	jmp    3256 <sgx_call_aes+0x2d>
    324e:	e8 a5 01 00 00       	call   33f8 <call_aes>
    3253:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3256:	c9                   	leave  
    3257:	c3                   	ret    

0000000000003258 <ocall_print_string>:
    3258:	f3 0f 1e fa          	endbr64 
    325c:	55                   	push   %rbp
    325d:	48 89 e5             	mov    %rsp,%rbp
    3260:	48 83 ec 40          	sub    $0x40,%rsp
    3264:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3268:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    326f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3274:	74 12                	je     3288 <ocall_print_string+0x30>
    3276:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    327a:	48 89 c7             	mov    %rax,%rdi
    327d:	e8 e7 df 01 00       	call   21269 <strlen>
    3282:	48 83 c0 01          	add    $0x1,%rax
    3286:	eb 05                	jmp    328d <ocall_print_string+0x35>
    3288:	b8 00 00 00 00       	mov    $0x0,%eax
    328d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3291:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    3298:	00 
    3299:	48 c7 45 f8 08 00 00 	movq   $0x8,-0x8(%rbp)
    32a0:	00 
    32a1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    32a8:	00 
    32a9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    32ae:	74 21                	je     32d1 <ocall_print_string+0x79>
    32b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    32b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    32b8:	48 89 d6             	mov    %rdx,%rsi
    32bb:	48 89 c7             	mov    %rax,%rdi
    32be:	e8 e4 9e 00 00       	call   d1a7 <sgx_is_within_enclave>
    32c3:	85 c0                	test   %eax,%eax
    32c5:	75 0a                	jne    32d1 <ocall_print_string+0x79>
    32c7:	b8 02 00 00 00       	mov    $0x2,%eax
    32cc:	e9 15 01 00 00       	jmp    33e6 <ocall_print_string+0x18e>
    32d1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    32d6:	74 06                	je     32de <ocall_print_string+0x86>
    32d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32dc:	eb 05                	jmp    32e3 <ocall_print_string+0x8b>
    32de:	b8 00 00 00 00       	mov    $0x0,%eax
    32e3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    32e7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    32ec:	74 06                	je     32f4 <ocall_print_string+0x9c>
    32ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32f2:	eb 05                	jmp    32f9 <ocall_print_string+0xa1>
    32f4:	b8 00 00 00 00       	mov    $0x0,%eax
    32f9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    32fd:	73 0a                	jae    3309 <ocall_print_string+0xb1>
    32ff:	b8 02 00 00 00       	mov    $0x2,%eax
    3304:	e9 dd 00 00 00       	jmp    33e6 <ocall_print_string+0x18e>
    3309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    330d:	48 89 c7             	mov    %rax,%rdi
    3310:	e8 c0 9f 00 00       	call   d2d5 <sgx_ocalloc>
    3315:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3319:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    331d:	48 85 c0             	test   %rax,%rax
    3320:	75 0f                	jne    3331 <ocall_print_string+0xd9>
    3322:	e8 c3 a0 00 00       	call   d3ea <sgx_ocfree>
    3327:	b8 01 00 00 00       	mov    $0x1,%eax
    332c:	e9 b5 00 00 00       	jmp    33e6 <ocall_print_string+0x18e>
    3331:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3335:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3339:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    333d:	48 83 c0 08          	add    $0x8,%rax
    3341:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3345:	48 83 6d f8 08       	subq   $0x8,-0x8(%rbp)
    334a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    334f:	74 6e                	je     33bf <ocall_print_string+0x167>
    3351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3355:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    3359:	b9 08 00 00 00       	mov    $0x8,%ecx
    335e:	be 08 00 00 00       	mov    $0x8,%esi
    3363:	48 89 c7             	mov    %rax,%rdi
    3366:	e8 2d e3 01 00       	call   21698 <memcpy_verw_s>
    336b:	85 c0                	test   %eax,%eax
    336d:	74 0c                	je     337b <ocall_print_string+0x123>
    336f:	e8 76 a0 00 00       	call   d3ea <sgx_ocfree>
    3374:	b8 01 00 00 00       	mov    $0x1,%eax
    3379:	eb 6b                	jmp    33e6 <ocall_print_string+0x18e>
    337b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    337f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3383:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3387:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    338b:	48 89 c7             	mov    %rax,%rdi
    338e:	e8 05 e3 01 00       	call   21698 <memcpy_verw_s>
    3393:	85 c0                	test   %eax,%eax
    3395:	74 0c                	je     33a3 <ocall_print_string+0x14b>
    3397:	e8 4e a0 00 00       	call   d3ea <sgx_ocfree>
    339c:	b8 01 00 00 00       	mov    $0x1,%eax
    33a1:	eb 43                	jmp    33e6 <ocall_print_string+0x18e>
    33a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    33a7:	48 89 c2             	mov    %rax,%rdx
    33aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33ae:	48 01 d0             	add    %rdx,%rax
    33b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    33b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33b9:	48 29 45 f8          	sub    %rax,-0x8(%rbp)
    33bd:	eb 0b                	jmp    33ca <ocall_print_string+0x172>
    33bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33c3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    33ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33ce:	48 89 c6             	mov    %rax,%rsi
    33d1:	bf 00 00 00 00       	mov    $0x0,%edi
    33d6:	e8 01 bb 00 00       	call   eedc <sgx_ocall>
    33db:	89 45 dc             	mov    %eax,-0x24(%rbp)
    33de:	e8 07 a0 00 00       	call   d3ea <sgx_ocfree>
    33e3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    33e6:	c9                   	leave  
    33e7:	c3                   	ret    

00000000000033e8 <populate>:
    33e8:	f3 0f 1e fa          	endbr64 
    33ec:	55                   	push   %rbp
    33ed:	48 89 e5             	mov    %rsp,%rbp
    33f0:	e8 ab 0e 00 00       	call   42a0 <populate_aes>
    33f5:	90                   	nop
    33f6:	5d                   	pop    %rbp
    33f7:	c3                   	ret    

00000000000033f8 <call_aes>:
    33f8:	f3 0f 1e fa          	endbr64 
    33fc:	55                   	push   %rbp
    33fd:	48 89 e5             	mov    %rsp,%rbp
    3400:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    3407:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    340e:	00 00 
    3410:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3414:	31 c0                	xor    %eax,%eax
    3416:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
    341d:	00 00 00 00 
    3421:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    3428:	00 00 00 00 
    342c:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    3433:	00 00 00 00 
    3437:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    343e:	00 00 00 00 
    3442:	48 c7 85 40 ff ff ff 	movq   $0x0,-0xc0(%rbp)
    3449:	00 00 00 00 
    344d:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    3454:	00 00 00 00 
    3458:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
    345f:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    3466:	be 80 00 00 00       	mov    $0x80,%esi
    346b:	48 89 c7             	mov    %rax,%rdi
    346e:	e8 3d 02 00 00       	call   36b0 <AES_set_encrypt_key>
    3473:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
    347a:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    3481:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    3488:	48 89 ce             	mov    %rcx,%rsi
    348b:	48 89 c7             	mov    %rax,%rdi
    348e:	e8 7d 0e 00 00       	call   4310 <AES_encrypt>
    3493:	90                   	nop
    3494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3498:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    349f:	00 00 
    34a1:	74 05                	je     34a8 <call_aes+0xb0>
    34a3:	e8 df dd 01 00       	call   21287 <__stack_chk_fail>
    34a8:	c9                   	leave  
    34a9:	c3                   	ret    

00000000000034aa <printf>:
    34aa:	f3 0f 1e fa          	endbr64 
    34ae:	55                   	push   %rbp
    34af:	48 89 e5             	mov    %rsp,%rbp
    34b2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    34b9:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    34be:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    34c5:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    34ca:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    34d1:	48 89 bd 18 df ff ff 	mov    %rdi,-0x20e8(%rbp)
    34d8:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    34df:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    34e6:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    34ed:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    34f4:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    34fb:	84 c0                	test   %al,%al
    34fd:	74 20                	je     351f <printf+0x75>
    34ff:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    3503:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    3507:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    350b:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    350f:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    3513:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    3517:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    351b:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    351f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3526:	00 00 
    3528:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    352f:	31 c0                	xor    %eax,%eax
    3531:	48 c7 85 40 df ff ff 	movq   $0x0,-0x20c0(%rbp)
    3538:	00 00 00 00 
    353c:	48 c7 85 48 df ff ff 	movq   $0x0,-0x20b8(%rbp)
    3543:	00 00 00 00 
    3547:	48 8d 95 50 df ff ff 	lea    -0x20b0(%rbp),%rdx
    354e:	b8 00 00 00 00       	mov    $0x0,%eax
    3553:	b9 fe 03 00 00       	mov    $0x3fe,%ecx
    3558:	48 89 d7             	mov    %rdx,%rdi
    355b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    355e:	c7 85 28 df ff ff 08 	movl   $0x8,-0x20d8(%rbp)
    3565:	00 00 00 
    3568:	c7 85 2c df ff ff 30 	movl   $0x30,-0x20d4(%rbp)
    356f:	00 00 00 
    3572:	48 8d 45 10          	lea    0x10(%rbp),%rax
    3576:	48 89 85 30 df ff ff 	mov    %rax,-0x20d0(%rbp)
    357d:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    3584:	48 89 85 38 df ff ff 	mov    %rax,-0x20c8(%rbp)
    358b:	48 8d 8d 28 df ff ff 	lea    -0x20d8(%rbp),%rcx
    3592:	48 8b 95 18 df ff ff 	mov    -0x20e8(%rbp),%rdx
    3599:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    35a0:	be 00 20 00 00       	mov    $0x2000,%esi
    35a5:	48 89 c7             	mov    %rax,%rdi
    35a8:	e8 37 3c 01 00       	call   171e4 <vsnprintf>
    35ad:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    35b4:	48 89 c7             	mov    %rax,%rdi
    35b7:	e8 9c fc ff ff       	call   3258 <ocall_print_string>
    35bc:	90                   	nop
    35bd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    35c4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    35cb:	00 00 
    35cd:	74 05                	je     35d4 <printf+0x12a>
    35cf:	e8 b3 dc 01 00       	call   21287 <__stack_chk_fail>
    35d4:	c9                   	leave  
    35d5:	c3                   	ret    

00000000000035d6 <ecall_sgx_cpuid>:
    35d6:	f3 0f 1e fa          	endbr64 
    35da:	55                   	push   %rbp
    35db:	48 89 e5             	mov    %rsp,%rbp
    35de:	48 83 ec 20          	sub    $0x20,%rsp
    35e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    35e6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    35e9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    35f0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    35f4:	74 05                	je     35fb <ecall_sgx_cpuid+0x25>
    35f6:	e8 30 bf 02 00       	call   2f52b <abort>
    35fb:	90                   	nop
    35fc:	c9                   	leave  
    35fd:	c3                   	ret    
    35fe:	66 90                	xchg   %ax,%ax

0000000000003600 <fibnacci>:
    3600:	55                   	push   %rbp
    3601:	48 89 e5             	mov    %rsp,%rbp
    3604:	48 83 ec 20          	sub    $0x20,%rsp
    3608:	89 7d fc             	mov    %edi,-0x4(%rbp)
    360b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3612:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3619:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3620:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3627:	83 7d ec 20          	cmpl   $0x20,-0x14(%rbp)
    362b:	0f 8d 20 00 00 00    	jge    3651 <fibnacci+0x51>
    3631:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
    3635:	48 8d 05 c4 79 05 00 	lea    0x579c4(%rip),%rax        # 5b000 <secret>
    363c:	c7 04 88 00 00 00 00 	movl   $0x0,(%rax,%rcx,4)
    3643:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3646:	83 c0 01             	add    $0x1,%eax
    3649:	89 45 ec             	mov    %eax,-0x14(%rbp)
    364c:	e9 d6 ff ff ff       	jmp    3627 <fibnacci+0x27>
    3651:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
    3658:	8b 45 e8             	mov    -0x18(%rbp),%eax
    365b:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    365e:	0f 8f 29 00 00 00    	jg     368d <fibnacci+0x8d>
    3664:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3667:	03 45 f4             	add    -0xc(%rbp),%eax
    366a:	89 05 e8 79 05 00    	mov    %eax,0x579e8(%rip)        # 5b058 <secret+0x58>
    3670:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3673:	89 45 f8             	mov    %eax,-0x8(%rbp)
    3676:	8b 05 dc 79 05 00    	mov    0x579dc(%rip),%eax        # 5b058 <secret+0x58>
    367c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    367f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3682:	83 c0 01             	add    $0x1,%eax
    3685:	89 45 e8             	mov    %eax,-0x18(%rbp)
    3688:	e9 cb ff ff ff       	jmp    3658 <fibnacci+0x58>
    368d:	8b 35 c5 79 05 00    	mov    0x579c5(%rip),%esi        # 5b058 <secret+0x58>
    3693:	48 8d 3d 76 c9 02 00 	lea    0x2c976(%rip),%rdi        # 30010 <g_dyn_entry_table+0x10>
    369a:	b0 00                	mov    $0x0,%al
    369c:	e8 09 fe ff ff       	call   34aa <printf>
    36a1:	48 83 c4 20          	add    $0x20,%rsp
    36a5:	5d                   	pop    %rbp
    36a6:	c3                   	ret    
    36a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    36ae:	00 00 

00000000000036b0 <AES_set_encrypt_key>:
    36b0:	55                   	push   %rbp
    36b1:	48 89 e5             	mov    %rsp,%rbp
    36b4:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    36b8:	89 75 ec             	mov    %esi,-0x14(%rbp)
    36bb:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    36bf:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    36c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    36cb:	0f 84 0b 00 00 00    	je     36dc <AES_set_encrypt_key+0x2c>
    36d1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    36d6:	0f 85 0c 00 00 00    	jne    36e8 <AES_set_encrypt_key+0x38>
    36dc:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    36e3:	e9 93 06 00 00       	jmp    3d7b <AES_set_encrypt_key+0x6cb>
    36e8:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    36ef:	0f 84 26 00 00 00    	je     371b <AES_set_encrypt_key+0x6b>
    36f5:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    36fc:	0f 84 19 00 00 00    	je     371b <AES_set_encrypt_key+0x6b>
    3702:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
    3709:	0f 84 0c 00 00 00    	je     371b <AES_set_encrypt_key+0x6b>
    370f:	c7 45 fc fe ff ff ff 	movl   $0xfffffffe,-0x4(%rbp)
    3716:	e9 60 06 00 00       	jmp    3d7b <AES_set_encrypt_key+0x6cb>
    371b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    371f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3723:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    372a:	0f 85 13 00 00 00    	jne    3743 <AES_set_encrypt_key+0x93>
    3730:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3734:	c7 80 f0 00 00 00 0a 	movl   $0xa,0xf0(%rax)
    373b:	00 00 00 
    373e:	e9 33 00 00 00       	jmp    3776 <AES_set_encrypt_key+0xc6>
    3743:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    374a:	0f 85 13 00 00 00    	jne    3763 <AES_set_encrypt_key+0xb3>
    3750:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3754:	c7 80 f0 00 00 00 0c 	movl   $0xc,0xf0(%rax)
    375b:	00 00 00 
    375e:	e9 0e 00 00 00       	jmp    3771 <AES_set_encrypt_key+0xc1>
    3763:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3767:	c7 80 f0 00 00 00 0e 	movl   $0xe,0xf0(%rax)
    376e:	00 00 00 
    3771:	e9 00 00 00 00       	jmp    3776 <AES_set_encrypt_key+0xc6>
    3776:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    377a:	0f b6 08             	movzbl (%rax),%ecx
    377d:	c1 e1 18             	shl    $0x18,%ecx
    3780:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3784:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    3788:	c1 e0 10             	shl    $0x10,%eax
    378b:	31 c1                	xor    %eax,%ecx
    378d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3791:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    3795:	c1 e0 08             	shl    $0x8,%eax
    3798:	31 c1                	xor    %eax,%ecx
    379a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    379e:	0f b6 40 03          	movzbl 0x3(%rax),%eax
    37a2:	31 c1                	xor    %eax,%ecx
    37a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37a8:	89 08                	mov    %ecx,(%rax)
    37aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37ae:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
    37b2:	c1 e1 18             	shl    $0x18,%ecx
    37b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37b9:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    37bd:	c1 e0 10             	shl    $0x10,%eax
    37c0:	31 c1                	xor    %eax,%ecx
    37c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37c6:	0f b6 40 06          	movzbl 0x6(%rax),%eax
    37ca:	c1 e0 08             	shl    $0x8,%eax
    37cd:	31 c1                	xor    %eax,%ecx
    37cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37d3:	0f b6 40 07          	movzbl 0x7(%rax),%eax
    37d7:	31 c1                	xor    %eax,%ecx
    37d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37dd:	89 48 04             	mov    %ecx,0x4(%rax)
    37e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37e4:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
    37e8:	c1 e1 18             	shl    $0x18,%ecx
    37eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37ef:	0f b6 40 09          	movzbl 0x9(%rax),%eax
    37f3:	c1 e0 10             	shl    $0x10,%eax
    37f6:	31 c1                	xor    %eax,%ecx
    37f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    37fc:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
    3800:	c1 e0 08             	shl    $0x8,%eax
    3803:	31 c1                	xor    %eax,%ecx
    3805:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3809:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
    380d:	31 c1                	xor    %eax,%ecx
    380f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3813:	89 48 08             	mov    %ecx,0x8(%rax)
    3816:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    381a:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
    381e:	c1 e1 18             	shl    $0x18,%ecx
    3821:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3825:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
    3829:	c1 e0 10             	shl    $0x10,%eax
    382c:	31 c1                	xor    %eax,%ecx
    382e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3832:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
    3836:	c1 e0 08             	shl    $0x8,%eax
    3839:	31 c1                	xor    %eax,%ecx
    383b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    383f:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
    3843:	31 c1                	xor    %eax,%ecx
    3845:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3849:	89 48 0c             	mov    %ecx,0xc(%rax)
    384c:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
    3853:	0f 85 10 01 00 00    	jne    3969 <AES_set_encrypt_key+0x2b9>
    3859:	e9 00 00 00 00       	jmp    385e <AES_set_encrypt_key+0x1ae>
    385e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3862:	8b 40 0c             	mov    0xc(%rax),%eax
    3865:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3868:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    386c:	8b 08                	mov    (%rax),%ecx
    386e:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3871:	c1 e8 10             	shr    $0x10,%eax
    3874:	25 ff 00 00 00       	and    $0xff,%eax
    3879:	89 c0                	mov    %eax,%eax
    387b:	89 c2                	mov    %eax,%edx
    387d:	48 8d 05 7c 4f 03 00 	lea    0x34f7c(%rip),%rax        # 38800 <Te2>
    3884:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3887:	25 00 00 00 ff       	and    $0xff000000,%eax
    388c:	31 c1                	xor    %eax,%ecx
    388e:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3891:	c1 e8 08             	shr    $0x8,%eax
    3894:	25 ff 00 00 00       	and    $0xff,%eax
    3899:	89 c0                	mov    %eax,%eax
    389b:	89 c2                	mov    %eax,%edx
    389d:	48 8d 05 5c 53 03 00 	lea    0x3535c(%rip),%rax        # 38c00 <Te3>
    38a4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    38a7:	25 00 00 ff 00       	and    $0xff0000,%eax
    38ac:	31 c1                	xor    %eax,%ecx
    38ae:	8b 45 d0             	mov    -0x30(%rbp),%eax
    38b1:	25 ff 00 00 00       	and    $0xff,%eax
    38b6:	89 c0                	mov    %eax,%eax
    38b8:	89 c2                	mov    %eax,%edx
    38ba:	48 8d 05 3f 47 03 00 	lea    0x3473f(%rip),%rax        # 38000 <Te0>
    38c1:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    38c4:	25 00 ff 00 00       	and    $0xff00,%eax
    38c9:	31 c1                	xor    %eax,%ecx
    38cb:	8b 45 d0             	mov    -0x30(%rbp),%eax
    38ce:	c1 e8 18             	shr    $0x18,%eax
    38d1:	89 c0                	mov    %eax,%eax
    38d3:	89 c2                	mov    %eax,%edx
    38d5:	48 8d 05 24 4b 03 00 	lea    0x34b24(%rip),%rax        # 38400 <Te1>
    38dc:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    38df:	25 ff 00 00 00       	and    $0xff,%eax
    38e4:	31 c1                	xor    %eax,%ecx
    38e6:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    38ea:	48 8d 05 2f c7 02 00 	lea    0x2c72f(%rip),%rax        # 30020 <rcon>
    38f1:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    38f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    38f8:	89 48 10             	mov    %ecx,0x10(%rax)
    38fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    38ff:	8b 48 04             	mov    0x4(%rax),%ecx
    3902:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3906:	33 48 10             	xor    0x10(%rax),%ecx
    3909:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    390d:	89 48 14             	mov    %ecx,0x14(%rax)
    3910:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3914:	8b 48 08             	mov    0x8(%rax),%ecx
    3917:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    391b:	33 48 14             	xor    0x14(%rax),%ecx
    391e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3922:	89 48 18             	mov    %ecx,0x18(%rax)
    3925:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3929:	8b 48 0c             	mov    0xc(%rax),%ecx
    392c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3930:	33 48 18             	xor    0x18(%rax),%ecx
    3933:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3937:	89 48 1c             	mov    %ecx,0x1c(%rax)
    393a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    393d:	83 c0 01             	add    $0x1,%eax
    3940:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3943:	83 f8 0a             	cmp    $0xa,%eax
    3946:	0f 85 0c 00 00 00    	jne    3958 <AES_set_encrypt_key+0x2a8>
    394c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3953:	e9 23 04 00 00       	jmp    3d7b <AES_set_encrypt_key+0x6cb>
    3958:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    395c:	48 83 c0 10          	add    $0x10,%rax
    3960:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3964:	e9 f5 fe ff ff       	jmp    385e <AES_set_encrypt_key+0x1ae>
    3969:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    396d:	0f b6 48 10          	movzbl 0x10(%rax),%ecx
    3971:	c1 e1 18             	shl    $0x18,%ecx
    3974:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3978:	0f b6 40 11          	movzbl 0x11(%rax),%eax
    397c:	c1 e0 10             	shl    $0x10,%eax
    397f:	31 c1                	xor    %eax,%ecx
    3981:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3985:	0f b6 40 12          	movzbl 0x12(%rax),%eax
    3989:	c1 e0 08             	shl    $0x8,%eax
    398c:	31 c1                	xor    %eax,%ecx
    398e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3992:	0f b6 40 13          	movzbl 0x13(%rax),%eax
    3996:	31 c1                	xor    %eax,%ecx
    3998:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    399c:	89 48 10             	mov    %ecx,0x10(%rax)
    399f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39a3:	0f b6 48 14          	movzbl 0x14(%rax),%ecx
    39a7:	c1 e1 18             	shl    $0x18,%ecx
    39aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39ae:	0f b6 40 15          	movzbl 0x15(%rax),%eax
    39b2:	c1 e0 10             	shl    $0x10,%eax
    39b5:	31 c1                	xor    %eax,%ecx
    39b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39bb:	0f b6 40 16          	movzbl 0x16(%rax),%eax
    39bf:	c1 e0 08             	shl    $0x8,%eax
    39c2:	31 c1                	xor    %eax,%ecx
    39c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39c8:	0f b6 40 17          	movzbl 0x17(%rax),%eax
    39cc:	31 c1                	xor    %eax,%ecx
    39ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39d2:	89 48 14             	mov    %ecx,0x14(%rax)
    39d5:	81 7d ec c0 00 00 00 	cmpl   $0xc0,-0x14(%rbp)
    39dc:	0f 85 3a 01 00 00    	jne    3b1c <AES_set_encrypt_key+0x46c>
    39e2:	e9 00 00 00 00       	jmp    39e7 <AES_set_encrypt_key+0x337>
    39e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39eb:	8b 40 14             	mov    0x14(%rax),%eax
    39ee:	89 45 d0             	mov    %eax,-0x30(%rbp)
    39f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39f5:	8b 08                	mov    (%rax),%ecx
    39f7:	8b 45 d0             	mov    -0x30(%rbp),%eax
    39fa:	c1 e8 10             	shr    $0x10,%eax
    39fd:	25 ff 00 00 00       	and    $0xff,%eax
    3a02:	89 c0                	mov    %eax,%eax
    3a04:	89 c2                	mov    %eax,%edx
    3a06:	48 8d 05 f3 4d 03 00 	lea    0x34df3(%rip),%rax        # 38800 <Te2>
    3a0d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3a10:	25 00 00 00 ff       	and    $0xff000000,%eax
    3a15:	31 c1                	xor    %eax,%ecx
    3a17:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3a1a:	c1 e8 08             	shr    $0x8,%eax
    3a1d:	25 ff 00 00 00       	and    $0xff,%eax
    3a22:	89 c0                	mov    %eax,%eax
    3a24:	89 c2                	mov    %eax,%edx
    3a26:	48 8d 05 d3 51 03 00 	lea    0x351d3(%rip),%rax        # 38c00 <Te3>
    3a2d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3a30:	25 00 00 ff 00       	and    $0xff0000,%eax
    3a35:	31 c1                	xor    %eax,%ecx
    3a37:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3a3a:	25 ff 00 00 00       	and    $0xff,%eax
    3a3f:	89 c0                	mov    %eax,%eax
    3a41:	89 c2                	mov    %eax,%edx
    3a43:	48 8d 05 b6 45 03 00 	lea    0x345b6(%rip),%rax        # 38000 <Te0>
    3a4a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3a4d:	25 00 ff 00 00       	and    $0xff00,%eax
    3a52:	31 c1                	xor    %eax,%ecx
    3a54:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3a57:	c1 e8 18             	shr    $0x18,%eax
    3a5a:	89 c0                	mov    %eax,%eax
    3a5c:	89 c2                	mov    %eax,%edx
    3a5e:	48 8d 05 9b 49 03 00 	lea    0x3499b(%rip),%rax        # 38400 <Te1>
    3a65:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3a68:	25 ff 00 00 00       	and    $0xff,%eax
    3a6d:	31 c1                	xor    %eax,%ecx
    3a6f:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    3a73:	48 8d 05 a6 c5 02 00 	lea    0x2c5a6(%rip),%rax        # 30020 <rcon>
    3a7a:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    3a7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a81:	89 48 18             	mov    %ecx,0x18(%rax)
    3a84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a88:	8b 48 04             	mov    0x4(%rax),%ecx
    3a8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a8f:	33 48 18             	xor    0x18(%rax),%ecx
    3a92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a96:	89 48 1c             	mov    %ecx,0x1c(%rax)
    3a99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a9d:	8b 48 08             	mov    0x8(%rax),%ecx
    3aa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aa4:	33 48 1c             	xor    0x1c(%rax),%ecx
    3aa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aab:	89 48 20             	mov    %ecx,0x20(%rax)
    3aae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ab2:	8b 48 0c             	mov    0xc(%rax),%ecx
    3ab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ab9:	33 48 20             	xor    0x20(%rax),%ecx
    3abc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ac0:	89 48 24             	mov    %ecx,0x24(%rax)
    3ac3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3ac6:	83 c0 01             	add    $0x1,%eax
    3ac9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3acc:	83 f8 08             	cmp    $0x8,%eax
    3acf:	0f 85 0c 00 00 00    	jne    3ae1 <AES_set_encrypt_key+0x431>
    3ad5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3adc:	e9 9a 02 00 00       	jmp    3d7b <AES_set_encrypt_key+0x6cb>
    3ae1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ae5:	8b 48 10             	mov    0x10(%rax),%ecx
    3ae8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aec:	33 48 24             	xor    0x24(%rax),%ecx
    3aef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3af3:	89 48 28             	mov    %ecx,0x28(%rax)
    3af6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3afa:	8b 48 14             	mov    0x14(%rax),%ecx
    3afd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b01:	33 48 28             	xor    0x28(%rax),%ecx
    3b04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b08:	89 48 2c             	mov    %ecx,0x2c(%rax)
    3b0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b0f:	48 83 c0 18          	add    $0x18,%rax
    3b13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3b17:	e9 cb fe ff ff       	jmp    39e7 <AES_set_encrypt_key+0x337>
    3b1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b20:	0f b6 48 18          	movzbl 0x18(%rax),%ecx
    3b24:	c1 e1 18             	shl    $0x18,%ecx
    3b27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b2b:	0f b6 40 19          	movzbl 0x19(%rax),%eax
    3b2f:	c1 e0 10             	shl    $0x10,%eax
    3b32:	31 c1                	xor    %eax,%ecx
    3b34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b38:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
    3b3c:	c1 e0 08             	shl    $0x8,%eax
    3b3f:	31 c1                	xor    %eax,%ecx
    3b41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b45:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
    3b49:	31 c1                	xor    %eax,%ecx
    3b4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b4f:	89 48 18             	mov    %ecx,0x18(%rax)
    3b52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b56:	0f b6 48 1c          	movzbl 0x1c(%rax),%ecx
    3b5a:	c1 e1 18             	shl    $0x18,%ecx
    3b5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b61:	0f b6 40 1d          	movzbl 0x1d(%rax),%eax
    3b65:	c1 e0 10             	shl    $0x10,%eax
    3b68:	31 c1                	xor    %eax,%ecx
    3b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b6e:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
    3b72:	c1 e0 08             	shl    $0x8,%eax
    3b75:	31 c1                	xor    %eax,%ecx
    3b77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b7b:	0f b6 40 1f          	movzbl 0x1f(%rax),%eax
    3b7f:	31 c1                	xor    %eax,%ecx
    3b81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b85:	89 48 1c             	mov    %ecx,0x1c(%rax)
    3b88:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
    3b8f:	0f 85 df 01 00 00    	jne    3d74 <AES_set_encrypt_key+0x6c4>
    3b95:	e9 00 00 00 00       	jmp    3b9a <AES_set_encrypt_key+0x4ea>
    3b9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b9e:	8b 40 1c             	mov    0x1c(%rax),%eax
    3ba1:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3ba4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ba8:	8b 08                	mov    (%rax),%ecx
    3baa:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3bad:	c1 e8 10             	shr    $0x10,%eax
    3bb0:	25 ff 00 00 00       	and    $0xff,%eax
    3bb5:	89 c0                	mov    %eax,%eax
    3bb7:	89 c2                	mov    %eax,%edx
    3bb9:	48 8d 05 40 4c 03 00 	lea    0x34c40(%rip),%rax        # 38800 <Te2>
    3bc0:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3bc3:	25 00 00 00 ff       	and    $0xff000000,%eax
    3bc8:	31 c1                	xor    %eax,%ecx
    3bca:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3bcd:	c1 e8 08             	shr    $0x8,%eax
    3bd0:	25 ff 00 00 00       	and    $0xff,%eax
    3bd5:	89 c0                	mov    %eax,%eax
    3bd7:	89 c2                	mov    %eax,%edx
    3bd9:	48 8d 05 20 50 03 00 	lea    0x35020(%rip),%rax        # 38c00 <Te3>
    3be0:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3be3:	25 00 00 ff 00       	and    $0xff0000,%eax
    3be8:	31 c1                	xor    %eax,%ecx
    3bea:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3bed:	25 ff 00 00 00       	and    $0xff,%eax
    3bf2:	89 c0                	mov    %eax,%eax
    3bf4:	89 c2                	mov    %eax,%edx
    3bf6:	48 8d 05 03 44 03 00 	lea    0x34403(%rip),%rax        # 38000 <Te0>
    3bfd:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3c00:	25 00 ff 00 00       	and    $0xff00,%eax
    3c05:	31 c1                	xor    %eax,%ecx
    3c07:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3c0a:	c1 e8 18             	shr    $0x18,%eax
    3c0d:	89 c0                	mov    %eax,%eax
    3c0f:	89 c2                	mov    %eax,%edx
    3c11:	48 8d 05 e8 47 03 00 	lea    0x347e8(%rip),%rax        # 38400 <Te1>
    3c18:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3c1b:	25 ff 00 00 00       	and    $0xff,%eax
    3c20:	31 c1                	xor    %eax,%ecx
    3c22:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
    3c26:	48 8d 05 f3 c3 02 00 	lea    0x2c3f3(%rip),%rax        # 30020 <rcon>
    3c2d:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    3c30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c34:	89 48 20             	mov    %ecx,0x20(%rax)
    3c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c3b:	8b 48 04             	mov    0x4(%rax),%ecx
    3c3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c42:	33 48 20             	xor    0x20(%rax),%ecx
    3c45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c49:	89 48 24             	mov    %ecx,0x24(%rax)
    3c4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c50:	8b 48 08             	mov    0x8(%rax),%ecx
    3c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c57:	33 48 24             	xor    0x24(%rax),%ecx
    3c5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c5e:	89 48 28             	mov    %ecx,0x28(%rax)
    3c61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c65:	8b 48 0c             	mov    0xc(%rax),%ecx
    3c68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c6c:	33 48 28             	xor    0x28(%rax),%ecx
    3c6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c73:	89 48 2c             	mov    %ecx,0x2c(%rax)
    3c76:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3c79:	83 c0 01             	add    $0x1,%eax
    3c7c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3c7f:	83 f8 07             	cmp    $0x7,%eax
    3c82:	0f 85 0c 00 00 00    	jne    3c94 <AES_set_encrypt_key+0x5e4>
    3c88:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c8f:	e9 e7 00 00 00       	jmp    3d7b <AES_set_encrypt_key+0x6cb>
    3c94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c98:	8b 40 2c             	mov    0x2c(%rax),%eax
    3c9b:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3c9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ca2:	8b 48 10             	mov    0x10(%rax),%ecx
    3ca5:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ca8:	c1 e8 18             	shr    $0x18,%eax
    3cab:	89 c0                	mov    %eax,%eax
    3cad:	89 c2                	mov    %eax,%edx
    3caf:	48 8d 05 4a 4b 03 00 	lea    0x34b4a(%rip),%rax        # 38800 <Te2>
    3cb6:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3cb9:	25 00 00 00 ff       	and    $0xff000000,%eax
    3cbe:	31 c1                	xor    %eax,%ecx
    3cc0:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3cc3:	c1 e8 10             	shr    $0x10,%eax
    3cc6:	25 ff 00 00 00       	and    $0xff,%eax
    3ccb:	89 c0                	mov    %eax,%eax
    3ccd:	89 c2                	mov    %eax,%edx
    3ccf:	48 8d 05 2a 4f 03 00 	lea    0x34f2a(%rip),%rax        # 38c00 <Te3>
    3cd6:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3cd9:	25 00 00 ff 00       	and    $0xff0000,%eax
    3cde:	31 c1                	xor    %eax,%ecx
    3ce0:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ce3:	c1 e8 08             	shr    $0x8,%eax
    3ce6:	25 ff 00 00 00       	and    $0xff,%eax
    3ceb:	89 c0                	mov    %eax,%eax
    3ced:	89 c2                	mov    %eax,%edx
    3cef:	48 8d 05 0a 43 03 00 	lea    0x3430a(%rip),%rax        # 38000 <Te0>
    3cf6:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3cf9:	25 00 ff 00 00       	and    $0xff00,%eax
    3cfe:	31 c1                	xor    %eax,%ecx
    3d00:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3d03:	25 ff 00 00 00       	and    $0xff,%eax
    3d08:	89 c0                	mov    %eax,%eax
    3d0a:	89 c2                	mov    %eax,%edx
    3d0c:	48 8d 05 ed 46 03 00 	lea    0x346ed(%rip),%rax        # 38400 <Te1>
    3d13:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3d16:	25 ff 00 00 00       	and    $0xff,%eax
    3d1b:	31 c1                	xor    %eax,%ecx
    3d1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d21:	89 48 30             	mov    %ecx,0x30(%rax)
    3d24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d28:	8b 48 14             	mov    0x14(%rax),%ecx
    3d2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d2f:	33 48 30             	xor    0x30(%rax),%ecx
    3d32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d36:	89 48 34             	mov    %ecx,0x34(%rax)
    3d39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d3d:	8b 48 18             	mov    0x18(%rax),%ecx
    3d40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d44:	33 48 34             	xor    0x34(%rax),%ecx
    3d47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d4b:	89 48 38             	mov    %ecx,0x38(%rax)
    3d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d52:	8b 48 1c             	mov    0x1c(%rax),%ecx
    3d55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d59:	33 48 38             	xor    0x38(%rax),%ecx
    3d5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d60:	89 48 3c             	mov    %ecx,0x3c(%rax)
    3d63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d67:	48 83 c0 20          	add    $0x20,%rax
    3d6b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3d6f:	e9 26 fe ff ff       	jmp    3b9a <AES_set_encrypt_key+0x4ea>
    3d74:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3d7b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3d7e:	5d                   	pop    %rbp
    3d7f:	c3                   	ret    

0000000000003d80 <AES_set_decrypt_key>:
    3d80:	55                   	push   %rbp
    3d81:	48 89 e5             	mov    %rsp,%rbp
    3d84:	48 83 ec 40          	sub    $0x40,%rsp
    3d88:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    3d8c:	89 75 ec             	mov    %esi,-0x14(%rbp)
    3d8f:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    3d93:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    3d97:	8b 75 ec             	mov    -0x14(%rbp),%esi
    3d9a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3d9e:	e8 0d f9 ff ff       	call   36b0 <AES_set_encrypt_key>
    3da3:	89 45 cc             	mov    %eax,-0x34(%rbp)
    3da6:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    3daa:	0f 8d 0b 00 00 00    	jge    3dbb <AES_set_decrypt_key+0x3b>
    3db0:	8b 45 cc             	mov    -0x34(%rbp),%eax
    3db3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3db6:	e9 78 04 00 00       	jmp    4233 <AES_set_decrypt_key+0x4b3>
    3dbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3dbf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3dc3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    3dca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3dce:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax
    3dd4:	c1 e0 02             	shl    $0x2,%eax
    3dd7:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3dda:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3ddd:	3b 45 d0             	cmp    -0x30(%rbp),%eax
    3de0:	0f 8d 1b 01 00 00    	jge    3f01 <AES_set_decrypt_key+0x181>
    3de6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dea:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
    3dee:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3df1:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3df8:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
    3dfc:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    3dff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e03:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
    3e07:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3e0a:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3e0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e11:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
    3e15:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3e18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e1c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3e1f:	83 c1 01             	add    $0x1,%ecx
    3e22:	48 63 c9             	movslq %ecx,%rcx
    3e25:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3e28:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3e2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e2f:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3e32:	83 c1 01             	add    $0x1,%ecx
    3e35:	48 63 c9             	movslq %ecx,%rcx
    3e38:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    3e3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e3f:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3e42:	83 c1 01             	add    $0x1,%ecx
    3e45:	48 63 c9             	movslq %ecx,%rcx
    3e48:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3e4b:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3e4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e52:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3e55:	83 c1 01             	add    $0x1,%ecx
    3e58:	48 63 c9             	movslq %ecx,%rcx
    3e5b:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3e5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e62:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3e65:	83 c1 02             	add    $0x2,%ecx
    3e68:	48 63 c9             	movslq %ecx,%rcx
    3e6b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3e6e:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3e71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e75:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3e78:	83 c1 02             	add    $0x2,%ecx
    3e7b:	48 63 c9             	movslq %ecx,%rcx
    3e7e:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    3e81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e85:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3e88:	83 c1 02             	add    $0x2,%ecx
    3e8b:	48 63 c9             	movslq %ecx,%rcx
    3e8e:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3e91:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3e94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e98:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3e9b:	83 c1 02             	add    $0x2,%ecx
    3e9e:	48 63 c9             	movslq %ecx,%rcx
    3ea1:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3ea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ea8:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3eab:	83 c1 03             	add    $0x3,%ecx
    3eae:	48 63 c9             	movslq %ecx,%rcx
    3eb1:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3eb4:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ebb:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3ebe:	83 c1 03             	add    $0x3,%ecx
    3ec1:	48 63 c9             	movslq %ecx,%rcx
    3ec4:	8b 14 88             	mov    (%rax,%rcx,4),%edx
    3ec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ecb:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    3ece:	83 c1 03             	add    $0x3,%ecx
    3ed1:	48 63 c9             	movslq %ecx,%rcx
    3ed4:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3ed7:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3eda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ede:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3ee1:	83 c1 03             	add    $0x3,%ecx
    3ee4:	48 63 c9             	movslq %ecx,%rcx
    3ee7:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    3eea:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3eed:	83 c0 04             	add    $0x4,%eax
    3ef0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3ef3:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ef6:	83 e8 04             	sub    $0x4,%eax
    3ef9:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3efc:	e9 d9 fe ff ff       	jmp    3dda <AES_set_decrypt_key+0x5a>
    3f01:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    3f08:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f0b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3f0f:	3b 81 f0 00 00 00    	cmp    0xf0(%rcx),%eax
    3f15:	0f 8d 11 03 00 00    	jge    422c <AES_set_decrypt_key+0x4ac>
    3f1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f1f:	48 83 c0 10          	add    $0x10,%rax
    3f23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3f27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f2b:	8b 00                	mov    (%rax),%eax
    3f2d:	c1 e8 18             	shr    $0x18,%eax
    3f30:	89 c0                	mov    %eax,%eax
    3f32:	89 c1                	mov    %eax,%ecx
    3f34:	48 8d 05 c5 44 03 00 	lea    0x344c5(%rip),%rax        # 38400 <Te1>
    3f3b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3f3e:	25 ff 00 00 00       	and    $0xff,%eax
    3f43:	89 c0                	mov    %eax,%eax
    3f45:	89 c1                	mov    %eax,%ecx
    3f47:	48 8d 05 02 c1 02 00 	lea    0x2c102(%rip),%rax        # 30050 <Td0>
    3f4e:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    3f51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f55:	8b 00                	mov    (%rax),%eax
    3f57:	c1 e8 10             	shr    $0x10,%eax
    3f5a:	25 ff 00 00 00       	and    $0xff,%eax
    3f5f:	89 c0                	mov    %eax,%eax
    3f61:	89 c2                	mov    %eax,%edx
    3f63:	48 8d 05 96 44 03 00 	lea    0x34496(%rip),%rax        # 38400 <Te1>
    3f6a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3f6d:	25 ff 00 00 00       	and    $0xff,%eax
    3f72:	89 c0                	mov    %eax,%eax
    3f74:	89 c2                	mov    %eax,%edx
    3f76:	48 8d 05 d3 c4 02 00 	lea    0x2c4d3(%rip),%rax        # 30450 <Td1>
    3f7d:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    3f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f84:	8b 00                	mov    (%rax),%eax
    3f86:	c1 e8 08             	shr    $0x8,%eax
    3f89:	25 ff 00 00 00       	and    $0xff,%eax
    3f8e:	89 c0                	mov    %eax,%eax
    3f90:	89 c2                	mov    %eax,%edx
    3f92:	48 8d 05 67 44 03 00 	lea    0x34467(%rip),%rax        # 38400 <Te1>
    3f99:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3f9c:	25 ff 00 00 00       	and    $0xff,%eax
    3fa1:	89 c0                	mov    %eax,%eax
    3fa3:	89 c2                	mov    %eax,%edx
    3fa5:	48 8d 05 a4 c8 02 00 	lea    0x2c8a4(%rip),%rax        # 30850 <Td2>
    3fac:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    3faf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fb3:	8b 00                	mov    (%rax),%eax
    3fb5:	25 ff 00 00 00       	and    $0xff,%eax
    3fba:	89 c0                	mov    %eax,%eax
    3fbc:	89 c2                	mov    %eax,%edx
    3fbe:	48 8d 05 3b 44 03 00 	lea    0x3443b(%rip),%rax        # 38400 <Te1>
    3fc5:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3fc8:	25 ff 00 00 00       	and    $0xff,%eax
    3fcd:	89 c0                	mov    %eax,%eax
    3fcf:	89 c2                	mov    %eax,%edx
    3fd1:	48 8d 05 78 cc 02 00 	lea    0x2cc78(%rip),%rax        # 30c50 <Td3>
    3fd8:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    3fdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fdf:	89 08                	mov    %ecx,(%rax)
    3fe1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fe5:	8b 40 04             	mov    0x4(%rax),%eax
    3fe8:	c1 e8 18             	shr    $0x18,%eax
    3feb:	89 c0                	mov    %eax,%eax
    3fed:	89 c1                	mov    %eax,%ecx
    3fef:	48 8d 05 0a 44 03 00 	lea    0x3440a(%rip),%rax        # 38400 <Te1>
    3ff6:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    3ff9:	25 ff 00 00 00       	and    $0xff,%eax
    3ffe:	89 c0                	mov    %eax,%eax
    4000:	89 c1                	mov    %eax,%ecx
    4002:	48 8d 05 47 c0 02 00 	lea    0x2c047(%rip),%rax        # 30050 <Td0>
    4009:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    400c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4010:	8b 40 04             	mov    0x4(%rax),%eax
    4013:	c1 e8 10             	shr    $0x10,%eax
    4016:	25 ff 00 00 00       	and    $0xff,%eax
    401b:	89 c0                	mov    %eax,%eax
    401d:	89 c2                	mov    %eax,%edx
    401f:	48 8d 05 da 43 03 00 	lea    0x343da(%rip),%rax        # 38400 <Te1>
    4026:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4029:	25 ff 00 00 00       	and    $0xff,%eax
    402e:	89 c0                	mov    %eax,%eax
    4030:	89 c2                	mov    %eax,%edx
    4032:	48 8d 05 17 c4 02 00 	lea    0x2c417(%rip),%rax        # 30450 <Td1>
    4039:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    403c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4040:	8b 40 04             	mov    0x4(%rax),%eax
    4043:	c1 e8 08             	shr    $0x8,%eax
    4046:	25 ff 00 00 00       	and    $0xff,%eax
    404b:	89 c0                	mov    %eax,%eax
    404d:	89 c2                	mov    %eax,%edx
    404f:	48 8d 05 aa 43 03 00 	lea    0x343aa(%rip),%rax        # 38400 <Te1>
    4056:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4059:	25 ff 00 00 00       	and    $0xff,%eax
    405e:	89 c0                	mov    %eax,%eax
    4060:	89 c2                	mov    %eax,%edx
    4062:	48 8d 05 e7 c7 02 00 	lea    0x2c7e7(%rip),%rax        # 30850 <Td2>
    4069:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    406c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4070:	8b 40 04             	mov    0x4(%rax),%eax
    4073:	25 ff 00 00 00       	and    $0xff,%eax
    4078:	89 c0                	mov    %eax,%eax
    407a:	89 c2                	mov    %eax,%edx
    407c:	48 8d 05 7d 43 03 00 	lea    0x3437d(%rip),%rax        # 38400 <Te1>
    4083:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4086:	25 ff 00 00 00       	and    $0xff,%eax
    408b:	89 c0                	mov    %eax,%eax
    408d:	89 c2                	mov    %eax,%edx
    408f:	48 8d 05 ba cb 02 00 	lea    0x2cbba(%rip),%rax        # 30c50 <Td3>
    4096:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4099:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    409d:	89 48 04             	mov    %ecx,0x4(%rax)
    40a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40a4:	8b 40 08             	mov    0x8(%rax),%eax
    40a7:	c1 e8 18             	shr    $0x18,%eax
    40aa:	89 c0                	mov    %eax,%eax
    40ac:	89 c1                	mov    %eax,%ecx
    40ae:	48 8d 05 4b 43 03 00 	lea    0x3434b(%rip),%rax        # 38400 <Te1>
    40b5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    40b8:	25 ff 00 00 00       	and    $0xff,%eax
    40bd:	89 c0                	mov    %eax,%eax
    40bf:	89 c1                	mov    %eax,%ecx
    40c1:	48 8d 05 88 bf 02 00 	lea    0x2bf88(%rip),%rax        # 30050 <Td0>
    40c8:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    40cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40cf:	8b 40 08             	mov    0x8(%rax),%eax
    40d2:	c1 e8 10             	shr    $0x10,%eax
    40d5:	25 ff 00 00 00       	and    $0xff,%eax
    40da:	89 c0                	mov    %eax,%eax
    40dc:	89 c2                	mov    %eax,%edx
    40de:	48 8d 05 1b 43 03 00 	lea    0x3431b(%rip),%rax        # 38400 <Te1>
    40e5:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    40e8:	25 ff 00 00 00       	and    $0xff,%eax
    40ed:	89 c0                	mov    %eax,%eax
    40ef:	89 c2                	mov    %eax,%edx
    40f1:	48 8d 05 58 c3 02 00 	lea    0x2c358(%rip),%rax        # 30450 <Td1>
    40f8:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    40fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40ff:	8b 40 08             	mov    0x8(%rax),%eax
    4102:	c1 e8 08             	shr    $0x8,%eax
    4105:	25 ff 00 00 00       	and    $0xff,%eax
    410a:	89 c0                	mov    %eax,%eax
    410c:	89 c2                	mov    %eax,%edx
    410e:	48 8d 05 eb 42 03 00 	lea    0x342eb(%rip),%rax        # 38400 <Te1>
    4115:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4118:	25 ff 00 00 00       	and    $0xff,%eax
    411d:	89 c0                	mov    %eax,%eax
    411f:	89 c2                	mov    %eax,%edx
    4121:	48 8d 05 28 c7 02 00 	lea    0x2c728(%rip),%rax        # 30850 <Td2>
    4128:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    412b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    412f:	8b 40 08             	mov    0x8(%rax),%eax
    4132:	25 ff 00 00 00       	and    $0xff,%eax
    4137:	89 c0                	mov    %eax,%eax
    4139:	89 c2                	mov    %eax,%edx
    413b:	48 8d 05 be 42 03 00 	lea    0x342be(%rip),%rax        # 38400 <Te1>
    4142:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4145:	25 ff 00 00 00       	and    $0xff,%eax
    414a:	89 c0                	mov    %eax,%eax
    414c:	89 c2                	mov    %eax,%edx
    414e:	48 8d 05 fb ca 02 00 	lea    0x2cafb(%rip),%rax        # 30c50 <Td3>
    4155:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4158:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    415c:	89 48 08             	mov    %ecx,0x8(%rax)
    415f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4163:	8b 40 0c             	mov    0xc(%rax),%eax
    4166:	c1 e8 18             	shr    $0x18,%eax
    4169:	89 c0                	mov    %eax,%eax
    416b:	89 c1                	mov    %eax,%ecx
    416d:	48 8d 05 8c 42 03 00 	lea    0x3428c(%rip),%rax        # 38400 <Te1>
    4174:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    4177:	25 ff 00 00 00       	and    $0xff,%eax
    417c:	89 c0                	mov    %eax,%eax
    417e:	89 c1                	mov    %eax,%ecx
    4180:	48 8d 05 c9 be 02 00 	lea    0x2bec9(%rip),%rax        # 30050 <Td0>
    4187:	8b 0c 88             	mov    (%rax,%rcx,4),%ecx
    418a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    418e:	8b 40 0c             	mov    0xc(%rax),%eax
    4191:	c1 e8 10             	shr    $0x10,%eax
    4194:	25 ff 00 00 00       	and    $0xff,%eax
    4199:	89 c0                	mov    %eax,%eax
    419b:	89 c2                	mov    %eax,%edx
    419d:	48 8d 05 5c 42 03 00 	lea    0x3425c(%rip),%rax        # 38400 <Te1>
    41a4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    41a7:	25 ff 00 00 00       	and    $0xff,%eax
    41ac:	89 c0                	mov    %eax,%eax
    41ae:	89 c2                	mov    %eax,%edx
    41b0:	48 8d 05 99 c2 02 00 	lea    0x2c299(%rip),%rax        # 30450 <Td1>
    41b7:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    41ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41be:	8b 40 0c             	mov    0xc(%rax),%eax
    41c1:	c1 e8 08             	shr    $0x8,%eax
    41c4:	25 ff 00 00 00       	and    $0xff,%eax
    41c9:	89 c0                	mov    %eax,%eax
    41cb:	89 c2                	mov    %eax,%edx
    41cd:	48 8d 05 2c 42 03 00 	lea    0x3422c(%rip),%rax        # 38400 <Te1>
    41d4:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    41d7:	25 ff 00 00 00       	and    $0xff,%eax
    41dc:	89 c0                	mov    %eax,%eax
    41de:	89 c2                	mov    %eax,%edx
    41e0:	48 8d 05 69 c6 02 00 	lea    0x2c669(%rip),%rax        # 30850 <Td2>
    41e7:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    41ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41ee:	8b 40 0c             	mov    0xc(%rax),%eax
    41f1:	25 ff 00 00 00       	and    $0xff,%eax
    41f6:	89 c0                	mov    %eax,%eax
    41f8:	89 c2                	mov    %eax,%edx
    41fa:	48 8d 05 ff 41 03 00 	lea    0x341ff(%rip),%rax        # 38400 <Te1>
    4201:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4204:	25 ff 00 00 00       	and    $0xff,%eax
    4209:	89 c0                	mov    %eax,%eax
    420b:	89 c2                	mov    %eax,%edx
    420d:	48 8d 05 3c ca 02 00 	lea    0x2ca3c(%rip),%rax        # 30c50 <Td3>
    4214:	33 0c 90             	xor    (%rax,%rdx,4),%ecx
    4217:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    421b:	89 48 0c             	mov    %ecx,0xc(%rax)
    421e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4221:	83 c0 01             	add    $0x1,%eax
    4224:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4227:	e9 dc fc ff ff       	jmp    3f08 <AES_set_decrypt_key+0x188>
    422c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4233:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4236:	48 83 c4 40          	add    $0x40,%rsp
    423a:	5d                   	pop    %rbp
    423b:	c3                   	ret    
    423c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004240 <print_table>:
    4240:	55                   	push   %rbp
    4241:	48 89 e5             	mov    %rsp,%rbp
    4244:	48 8d 3d 05 cf 02 00 	lea    0x2cf05(%rip),%rdi        # 31150 <Td4+0x100>
    424b:	48 8d 35 ae 3d 03 00 	lea    0x33dae(%rip),%rsi        # 38000 <Te0>
    4252:	b0 00                	mov    $0x0,%al
    4254:	e8 51 f2 ff ff       	call   34aa <printf>
    4259:	48 8d 3d 08 cf 02 00 	lea    0x2cf08(%rip),%rdi        # 31168 <Td4+0x118>
    4260:	48 8d 35 99 41 03 00 	lea    0x34199(%rip),%rsi        # 38400 <Te1>
    4267:	b0 00                	mov    $0x0,%al
    4269:	e8 3c f2 ff ff       	call   34aa <printf>
    426e:	48 8d 3d 0b cf 02 00 	lea    0x2cf0b(%rip),%rdi        # 31180 <Td4+0x130>
    4275:	48 8d 35 84 45 03 00 	lea    0x34584(%rip),%rsi        # 38800 <Te2>
    427c:	b0 00                	mov    $0x0,%al
    427e:	e8 27 f2 ff ff       	call   34aa <printf>
    4283:	48 8d 3d 0e cf 02 00 	lea    0x2cf0e(%rip),%rdi        # 31198 <Td4+0x148>
    428a:	48 8d 35 6f 49 03 00 	lea    0x3496f(%rip),%rsi        # 38c00 <Te3>
    4291:	b0 00                	mov    $0x0,%al
    4293:	e8 12 f2 ff ff       	call   34aa <printf>
    4298:	5d                   	pop    %rbp
    4299:	c3                   	ret    
    429a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000042a0 <populate_aes>:
    42a0:	55                   	push   %rbp
    42a1:	48 89 e5             	mov    %rsp,%rbp
    42a4:	48 83 ec 10          	sub    $0x10,%rsp
    42a8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    42af:	81 7d fc 00 04 00 00 	cmpl   $0x400,-0x4(%rbp)
    42b6:	0f 8d 40 00 00 00    	jge    42fc <populate_aes+0x5c>
    42bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    42bf:	b9 04 00 00 00       	mov    $0x4,%ecx
    42c4:	99                   	cltd   
    42c5:	f7 f9                	idiv   %ecx
    42c7:	48 98                	cltq   
    42c9:	48 8d 3d 30 3d 03 00 	lea    0x33d30(%rip),%rdi        # 38000 <Te0>
    42d0:	48 c1 e0 02          	shl    $0x2,%rax
    42d4:	48 01 c7             	add    %rax,%rdi
    42d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    42da:	b9 40 00 00 00       	mov    $0x40,%ecx
    42df:	99                   	cltd   
    42e0:	f7 f9                	idiv   %ecx
    42e2:	89 c2                	mov    %eax,%edx
    42e4:	be 40 00 00 00       	mov    $0x40,%esi
    42e9:	e8 c1 83 00 00       	call   c6af <__mince_populate>
    42ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
    42f1:	83 c0 40             	add    $0x40,%eax
    42f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
    42f7:	e9 b3 ff ff ff       	jmp    42af <populate_aes+0xf>
    42fc:	48 83 c4 10          	add    $0x10,%rsp
    4300:	5d                   	pop    %rbp
    4301:	c3                   	ret    
    4302:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4309:	00 00 00 
    430c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004310 <AES_encrypt>:
    4310:	55                   	push   %rbp
    4311:	48 89 e5             	mov    %rsp,%rbp
    4314:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4318:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    431f:	00 00 00 
    4322:	41 ff d6             	call   *%r14
    4325:	49 89 3e             	mov    %rdi,(%r14)
    4328:	4c 8d 7d f0          	lea    -0x10(%rbp),%r15
    432c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4333:	00 00 00 
    4336:	41 ff d6             	call   *%r14
    4339:	49 89 36             	mov    %rsi,(%r14)
    433c:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    4340:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4347:	00 00 00 
    434a:	41 ff d6             	call   *%r14
    434d:	49 89 16             	mov    %rdx,(%r14)
    4350:	e9 4f 00 00 00       	jmp    43a4 <AES_encrypt.0>
    4355:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    435c:	02 00 00 
    435f:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000004364 <AES_encrypt.dummy.1>:
    4364:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    436b:	02 00 00 
    436e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4375:	02 00 00 
    4378:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    437f:	02 00 00 
    4382:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4389:	02 00 00 
    438c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4393:	02 00 00 
    4396:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    439d:	02 00 00 
    43a0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000043a4 <AES_encrypt.0>:
    43a4:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    43a8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    43af:	00 00 00 
    43b2:	41 ff d6             	call   *%r14
    43b5:	49 8b 06             	mov    (%r14),%rax
    43b8:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    43bc:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    43c3:	00 00 00 
    43c6:	41 ff d6             	call   *%r14
    43c9:	49 89 06             	mov    %rax,(%r14)
    43cc:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    43d0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    43d7:	00 00 00 
    43da:	41 ff d6             	call   *%r14
    43dd:	49 8b 06             	mov    (%r14),%rax
    43e0:	e9 53 00 00 00       	jmp    4438 <AES_encrypt.1>
    43e5:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    43ec:	02 00 00 
    43ef:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    43f6:	00 00 

00000000000043f8 <AES_encrypt.dummy.2>:
    43f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    43ff:	02 00 00 
    4402:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4409:	02 00 00 
    440c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4413:	02 00 00 
    4416:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    441d:	02 00 00 
    4420:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4427:	02 00 00 
    442a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4431:	02 00 00 
    4434:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004438 <AES_encrypt.1>:
    4438:	0f b6 00             	movzbl (%rax),%eax
    443b:	c1 e0 18             	shl    $0x18,%eax
    443e:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4442:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4449:	00 00 00 
    444c:	41 ff d6             	call   *%r14
    444f:	49 8b 0e             	mov    (%r14),%rcx
    4452:	0f b6 49 01          	movzbl 0x1(%rcx),%ecx
    4456:	c1 e1 10             	shl    $0x10,%ecx
    4459:	31 c8                	xor    %ecx,%eax
    445b:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    445f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4466:	00 00 00 
    4469:	41 ff d6             	call   *%r14
    446c:	49 8b 0e             	mov    (%r14),%rcx
    446f:	0f b6 49 02          	movzbl 0x2(%rcx),%ecx
    4473:	e9 40 00 00 00       	jmp    44b8 <AES_encrypt.2>

0000000000004478 <AES_encrypt.dummy.3>:
    4478:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    447f:	02 00 00 
    4482:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4489:	02 00 00 
    448c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4493:	02 00 00 
    4496:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    449d:	02 00 00 
    44a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    44a7:	02 00 00 
    44aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    44b1:	02 00 00 
    44b4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000044b8 <AES_encrypt.2>:
    44b8:	c1 e1 08             	shl    $0x8,%ecx
    44bb:	31 c8                	xor    %ecx,%eax
    44bd:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    44c1:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    44c8:	00 00 00 
    44cb:	41 ff d6             	call   *%r14
    44ce:	49 8b 0e             	mov    (%r14),%rcx
    44d1:	0f b6 49 03          	movzbl 0x3(%rcx),%ecx
    44d5:	31 c8                	xor    %ecx,%eax
    44d7:	83 f0 00             	xor    $0x0,%eax
    44da:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    44de:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    44e5:	00 00 00 
    44e8:	41 ff d6             	call   *%r14
    44eb:	41 89 06             	mov    %eax,(%r14)
    44ee:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    44f2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    44f9:	00 00 00 
    44fc:	41 ff d6             	call   *%r14
    44ff:	49 8b 06             	mov    (%r14),%rax
    4502:	e9 45 00 00 00       	jmp    454c <AES_encrypt.3>
    4507:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000450c <AES_encrypt.dummy.4>:
    450c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4513:	02 00 00 
    4516:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    451d:	02 00 00 
    4520:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4527:	02 00 00 
    452a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4531:	02 00 00 
    4534:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    453b:	02 00 00 
    453e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4545:	02 00 00 
    4548:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000454c <AES_encrypt.3>:
    454c:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    4550:	c1 e0 18             	shl    $0x18,%eax
    4553:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4557:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    455e:	00 00 00 
    4561:	41 ff d6             	call   *%r14
    4564:	49 8b 0e             	mov    (%r14),%rcx
    4567:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    456b:	c1 e1 10             	shl    $0x10,%ecx
    456e:	31 c8                	xor    %ecx,%eax
    4570:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4574:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    457b:	00 00 00 
    457e:	41 ff d6             	call   *%r14
    4581:	49 8b 0e             	mov    (%r14),%rcx
    4584:	e9 43 00 00 00       	jmp    45cc <AES_encrypt.4>
    4589:	0f 1f 00             	nopl   (%rax)

000000000000458c <AES_encrypt.dummy.5>:
    458c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4593:	02 00 00 
    4596:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    459d:	02 00 00 
    45a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    45a7:	02 00 00 
    45aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    45b1:	02 00 00 
    45b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    45bb:	02 00 00 
    45be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    45c5:	02 00 00 
    45c8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000045cc <AES_encrypt.4>:
    45cc:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    45d0:	c1 e1 08             	shl    $0x8,%ecx
    45d3:	31 c8                	xor    %ecx,%eax
    45d5:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    45d9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    45e0:	00 00 00 
    45e3:	41 ff d6             	call   *%r14
    45e6:	49 8b 0e             	mov    (%r14),%rcx
    45e9:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    45ed:	31 c8                	xor    %ecx,%eax
    45ef:	83 f0 00             	xor    $0x0,%eax
    45f2:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    45f6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    45fd:	00 00 00 
    4600:	41 ff d6             	call   *%r14
    4603:	41 89 06             	mov    %eax,(%r14)
    4606:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    460a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4611:	00 00 00 
    4614:	41 ff d6             	call   *%r14
    4617:	49 8b 06             	mov    (%r14),%rax
    461a:	e9 41 00 00 00       	jmp    4660 <AES_encrypt.5>
    461f:	90                   	nop

0000000000004620 <AES_encrypt.dummy.6>:
    4620:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4627:	02 00 00 
    462a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4631:	02 00 00 
    4634:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    463b:	02 00 00 
    463e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4645:	02 00 00 
    4648:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    464f:	02 00 00 
    4652:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4659:	02 00 00 
    465c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004660 <AES_encrypt.5>:
    4660:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    4664:	c1 e0 18             	shl    $0x18,%eax
    4667:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    466b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4672:	00 00 00 
    4675:	41 ff d6             	call   *%r14
    4678:	49 8b 0e             	mov    (%r14),%rcx
    467b:	0f b6 49 09          	movzbl 0x9(%rcx),%ecx
    467f:	c1 e1 10             	shl    $0x10,%ecx
    4682:	31 c8                	xor    %ecx,%eax
    4684:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4688:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    468f:	00 00 00 
    4692:	41 ff d6             	call   *%r14
    4695:	49 8b 0e             	mov    (%r14),%rcx
    4698:	e9 43 00 00 00       	jmp    46e0 <AES_encrypt.6>
    469d:	0f 1f 00             	nopl   (%rax)

00000000000046a0 <AES_encrypt.dummy.7>:
    46a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46a7:	02 00 00 
    46aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46b1:	02 00 00 
    46b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46bb:	02 00 00 
    46be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46c5:	02 00 00 
    46c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46cf:	02 00 00 
    46d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    46d9:	02 00 00 
    46dc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000046e0 <AES_encrypt.6>:
    46e0:	0f b6 49 0a          	movzbl 0xa(%rcx),%ecx
    46e4:	c1 e1 08             	shl    $0x8,%ecx
    46e7:	31 c8                	xor    %ecx,%eax
    46e9:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    46ed:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    46f4:	00 00 00 
    46f7:	41 ff d6             	call   *%r14
    46fa:	49 8b 0e             	mov    (%r14),%rcx
    46fd:	0f b6 49 0b          	movzbl 0xb(%rcx),%ecx
    4701:	31 c8                	xor    %ecx,%eax
    4703:	83 f0 00             	xor    $0x0,%eax
    4706:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    470a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4711:	00 00 00 
    4714:	41 ff d6             	call   *%r14
    4717:	41 89 06             	mov    %eax,(%r14)
    471a:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    471e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4725:	00 00 00 
    4728:	41 ff d6             	call   *%r14
    472b:	49 8b 06             	mov    (%r14),%rax
    472e:	e9 41 00 00 00       	jmp    4774 <AES_encrypt.7>
    4733:	90                   	nop

0000000000004734 <AES_encrypt.dummy.8>:
    4734:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    473b:	02 00 00 
    473e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4745:	02 00 00 
    4748:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    474f:	02 00 00 
    4752:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4759:	02 00 00 
    475c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4763:	02 00 00 
    4766:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    476d:	02 00 00 
    4770:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004774 <AES_encrypt.7>:
    4774:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
    4778:	c1 e0 18             	shl    $0x18,%eax
    477b:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    477f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4786:	00 00 00 
    4789:	41 ff d6             	call   *%r14
    478c:	49 8b 0e             	mov    (%r14),%rcx
    478f:	0f b6 49 0d          	movzbl 0xd(%rcx),%ecx
    4793:	c1 e1 10             	shl    $0x10,%ecx
    4796:	31 c8                	xor    %ecx,%eax
    4798:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    479c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    47a3:	00 00 00 
    47a6:	41 ff d6             	call   *%r14
    47a9:	49 8b 0e             	mov    (%r14),%rcx
    47ac:	e9 43 00 00 00       	jmp    47f4 <AES_encrypt.8>
    47b1:	0f 1f 00             	nopl   (%rax)

00000000000047b4 <AES_encrypt.dummy.9>:
    47b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47bb:	02 00 00 
    47be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47c5:	02 00 00 
    47c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47cf:	02 00 00 
    47d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47d9:	02 00 00 
    47dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47e3:	02 00 00 
    47e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    47ed:	02 00 00 
    47f0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000047f4 <AES_encrypt.8>:
    47f4:	0f b6 49 0e          	movzbl 0xe(%rcx),%ecx
    47f8:	c1 e1 08             	shl    $0x8,%ecx
    47fb:	31 c8                	xor    %ecx,%eax
    47fd:	4c 8d 7d f8          	lea    -0x8(%rbp),%r15
    4801:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4808:	00 00 00 
    480b:	41 ff d6             	call   *%r14
    480e:	49 8b 0e             	mov    (%r14),%rcx
    4811:	0f b6 49 0f          	movzbl 0xf(%rcx),%ecx
    4815:	31 c8                	xor    %ecx,%eax
    4817:	83 f0 00             	xor    $0x0,%eax
    481a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    481e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4825:	00 00 00 
    4828:	41 ff d6             	call   *%r14
    482b:	41 89 06             	mov    %eax,(%r14)
    482e:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    4832:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4839:	00 00 00 
    483c:	41 ff d6             	call   *%r14
    483f:	41 8b 06             	mov    (%r14),%eax
    4842:	e9 41 00 00 00       	jmp    4888 <AES_encrypt.9>
    4847:	90                   	nop

0000000000004848 <AES_encrypt.dummy.10>:
    4848:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    484f:	02 00 00 
    4852:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4859:	02 00 00 
    485c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4863:	02 00 00 
    4866:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    486d:	02 00 00 
    4870:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4877:	02 00 00 
    487a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4881:	02 00 00 
    4884:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004888 <AES_encrypt.9>:
    4888:	c1 e8 18             	shr    $0x18,%eax
    488b:	89 c0                	mov    %eax,%eax
    488d:	89 c1                	mov    %eax,%ecx
    488f:	48 8d 05 6a 37 03 00 	lea    0x3376a(%rip),%rax        # 38000 <Te0>
    4896:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    489a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    48a1:	00 00 00 
    48a4:	41 ff d6             	call   *%r14
    48a7:	41 8b 06             	mov    (%r14),%eax
    48aa:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    48ae:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    48b5:	00 00 00 
    48b8:	41 ff d6             	call   *%r14
    48bb:	41 8b 0e             	mov    (%r14),%ecx
    48be:	c1 e9 10             	shr    $0x10,%ecx
    48c1:	e9 42 00 00 00       	jmp    4908 <AES_encrypt.10>
    48c6:	66 90                	xchg   %ax,%ax

00000000000048c8 <AES_encrypt.dummy.11>:
    48c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48cf:	02 00 00 
    48d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48d9:	02 00 00 
    48dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48e3:	02 00 00 
    48e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48ed:	02 00 00 
    48f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    48f7:	02 00 00 
    48fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4901:	02 00 00 
    4904:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004908 <AES_encrypt.10>:
    4908:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    490e:	89 c9                	mov    %ecx,%ecx
    4910:	89 ca                	mov    %ecx,%edx
    4912:	48 8d 0d e7 3a 03 00 	lea    0x33ae7(%rip),%rcx        # 38400 <Te1>
    4919:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    491c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    4920:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4927:	00 00 00 
    492a:	41 ff d6             	call   *%r14
    492d:	41 8b 0e             	mov    (%r14),%ecx
    4930:	c1 e9 08             	shr    $0x8,%ecx
    4933:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4939:	89 c9                	mov    %ecx,%ecx
    493b:	89 ca                	mov    %ecx,%edx
    493d:	e9 46 00 00 00       	jmp    4988 <AES_encrypt.11>
    4942:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004948 <AES_encrypt.dummy.12>:
    4948:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    494f:	02 00 00 
    4952:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4959:	02 00 00 
    495c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4963:	02 00 00 
    4966:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    496d:	02 00 00 
    4970:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4977:	02 00 00 
    497a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4981:	02 00 00 
    4984:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004988 <AES_encrypt.11>:
    4988:	48 8d 0d 71 3e 03 00 	lea    0x33e71(%rip),%rcx        # 38800 <Te2>
    498f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4992:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    4996:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    499d:	00 00 00 
    49a0:	41 ff d6             	call   *%r14
    49a3:	41 8b 0e             	mov    (%r14),%ecx
    49a6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    49ac:	89 c9                	mov    %ecx,%ecx
    49ae:	89 ca                	mov    %ecx,%edx
    49b0:	48 8d 0d 49 42 03 00 	lea    0x34249(%rip),%rcx        # 38c00 <Te3>
    49b7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    49ba:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    49be:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    49c5:	00 00 00 
    49c8:	41 ff d6             	call   *%r14
    49cb:	49 8b 0e             	mov    (%r14),%rcx
    49ce:	e9 49 00 00 00       	jmp    4a1c <AES_encrypt.12>
    49d3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    49da:	00 00 

00000000000049dc <AES_encrypt.dummy.13>:
    49dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    49e3:	02 00 00 
    49e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    49ed:	02 00 00 
    49f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    49f7:	02 00 00 
    49fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a01:	02 00 00 
    4a04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a0b:	02 00 00 
    4a0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a15:	02 00 00 
    4a18:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004a1c <AES_encrypt.12>:
    4a1c:	33 41 10             	xor    0x10(%rcx),%eax
    4a1f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    4a23:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4a2a:	00 00 00 
    4a2d:	41 ff d6             	call   *%r14
    4a30:	41 89 06             	mov    %eax,(%r14)
    4a33:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    4a37:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4a3e:	00 00 00 
    4a41:	41 ff d6             	call   *%r14
    4a44:	41 8b 06             	mov    (%r14),%eax
    4a47:	c1 e8 18             	shr    $0x18,%eax
    4a4a:	89 c0                	mov    %eax,%eax
    4a4c:	89 c1                	mov    %eax,%ecx
    4a4e:	48 8d 05 ab 35 03 00 	lea    0x335ab(%rip),%rax        # 38000 <Te0>
    4a55:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    4a59:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4a60:	00 00 00 
    4a63:	41 ff d6             	call   *%r14
    4a66:	41 8b 06             	mov    (%r14),%eax
    4a69:	e9 42 00 00 00       	jmp    4ab0 <AES_encrypt.13>
    4a6e:	66 90                	xchg   %ax,%ax

0000000000004a70 <AES_encrypt.dummy.14>:
    4a70:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a77:	02 00 00 
    4a7a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a81:	02 00 00 
    4a84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a8b:	02 00 00 
    4a8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a95:	02 00 00 
    4a98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4a9f:	02 00 00 
    4aa2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4aa9:	02 00 00 
    4aac:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004ab0 <AES_encrypt.13>:
    4ab0:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    4ab4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4abb:	00 00 00 
    4abe:	41 ff d6             	call   *%r14
    4ac1:	41 8b 0e             	mov    (%r14),%ecx
    4ac4:	c1 e9 10             	shr    $0x10,%ecx
    4ac7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4acd:	89 c9                	mov    %ecx,%ecx
    4acf:	89 ca                	mov    %ecx,%edx
    4ad1:	48 8d 0d 28 39 03 00 	lea    0x33928(%rip),%rcx        # 38400 <Te1>
    4ad8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4adb:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    4adf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4ae6:	00 00 00 
    4ae9:	41 ff d6             	call   *%r14
    4aec:	41 8b 0e             	mov    (%r14),%ecx
    4aef:	e9 50 00 00 00       	jmp    4b44 <AES_encrypt.14>
    4af4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4afb:	02 00 00 
    4afe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004b04 <AES_encrypt.dummy.15>:
    4b04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b0b:	02 00 00 
    4b0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b15:	02 00 00 
    4b18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b1f:	02 00 00 
    4b22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b29:	02 00 00 
    4b2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b33:	02 00 00 
    4b36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b3d:	02 00 00 
    4b40:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004b44 <AES_encrypt.14>:
    4b44:	c1 e9 08             	shr    $0x8,%ecx
    4b47:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4b4d:	89 c9                	mov    %ecx,%ecx
    4b4f:	89 ca                	mov    %ecx,%edx
    4b51:	48 8d 0d a8 3c 03 00 	lea    0x33ca8(%rip),%rcx        # 38800 <Te2>
    4b58:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4b5b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    4b5f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4b66:	00 00 00 
    4b69:	41 ff d6             	call   *%r14
    4b6c:	41 8b 0e             	mov    (%r14),%ecx
    4b6f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4b75:	89 c9                	mov    %ecx,%ecx
    4b77:	89 ca                	mov    %ecx,%edx
    4b79:	e9 46 00 00 00       	jmp    4bc4 <AES_encrypt.15>
    4b7e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004b84 <AES_encrypt.dummy.16>:
    4b84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b8b:	02 00 00 
    4b8e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b95:	02 00 00 
    4b98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4b9f:	02 00 00 
    4ba2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ba9:	02 00 00 
    4bac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4bb3:	02 00 00 
    4bb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4bbd:	02 00 00 
    4bc0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004bc4 <AES_encrypt.15>:
    4bc4:	48 8d 0d 35 40 03 00 	lea    0x34035(%rip),%rcx        # 38c00 <Te3>
    4bcb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4bce:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    4bd2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4bd9:	00 00 00 
    4bdc:	41 ff d6             	call   *%r14
    4bdf:	49 8b 0e             	mov    (%r14),%rcx
    4be2:	33 41 14             	xor    0x14(%rcx),%eax
    4be5:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    4be9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4bf0:	00 00 00 
    4bf3:	41 ff d6             	call   *%r14
    4bf6:	41 89 06             	mov    %eax,(%r14)
    4bf9:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    4bfd:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4c04:	00 00 00 
    4c07:	41 ff d6             	call   *%r14
    4c0a:	41 8b 06             	mov    (%r14),%eax
    4c0d:	e9 46 00 00 00       	jmp    4c58 <AES_encrypt.16>
    4c12:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004c18 <AES_encrypt.dummy.17>:
    4c18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c1f:	02 00 00 
    4c22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c29:	02 00 00 
    4c2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c33:	02 00 00 
    4c36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c3d:	02 00 00 
    4c40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c47:	02 00 00 
    4c4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c51:	02 00 00 
    4c54:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004c58 <AES_encrypt.16>:
    4c58:	c1 e8 18             	shr    $0x18,%eax
    4c5b:	89 c0                	mov    %eax,%eax
    4c5d:	89 c1                	mov    %eax,%ecx
    4c5f:	48 8d 05 9a 33 03 00 	lea    0x3339a(%rip),%rax        # 38000 <Te0>
    4c66:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    4c6a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4c71:	00 00 00 
    4c74:	41 ff d6             	call   *%r14
    4c77:	41 8b 06             	mov    (%r14),%eax
    4c7a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    4c7e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4c85:	00 00 00 
    4c88:	41 ff d6             	call   *%r14
    4c8b:	41 8b 0e             	mov    (%r14),%ecx
    4c8e:	c1 e9 10             	shr    $0x10,%ecx
    4c91:	e9 42 00 00 00       	jmp    4cd8 <AES_encrypt.17>
    4c96:	66 90                	xchg   %ax,%ax

0000000000004c98 <AES_encrypt.dummy.18>:
    4c98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4c9f:	02 00 00 
    4ca2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ca9:	02 00 00 
    4cac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4cb3:	02 00 00 
    4cb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4cbd:	02 00 00 
    4cc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4cc7:	02 00 00 
    4cca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4cd1:	02 00 00 
    4cd4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004cd8 <AES_encrypt.17>:
    4cd8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4cde:	89 c9                	mov    %ecx,%ecx
    4ce0:	89 ca                	mov    %ecx,%edx
    4ce2:	48 8d 0d 17 37 03 00 	lea    0x33717(%rip),%rcx        # 38400 <Te1>
    4ce9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4cec:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    4cf0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4cf7:	00 00 00 
    4cfa:	41 ff d6             	call   *%r14
    4cfd:	41 8b 0e             	mov    (%r14),%ecx
    4d00:	c1 e9 08             	shr    $0x8,%ecx
    4d03:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4d09:	89 c9                	mov    %ecx,%ecx
    4d0b:	89 ca                	mov    %ecx,%edx
    4d0d:	e9 46 00 00 00       	jmp    4d58 <AES_encrypt.18>
    4d12:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004d18 <AES_encrypt.dummy.19>:
    4d18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d1f:	02 00 00 
    4d22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d29:	02 00 00 
    4d2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d33:	02 00 00 
    4d36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d3d:	02 00 00 
    4d40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d47:	02 00 00 
    4d4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4d51:	02 00 00 
    4d54:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004d58 <AES_encrypt.18>:
    4d58:	48 8d 0d a1 3a 03 00 	lea    0x33aa1(%rip),%rcx        # 38800 <Te2>
    4d5f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4d62:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    4d66:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4d6d:	00 00 00 
    4d70:	41 ff d6             	call   *%r14
    4d73:	41 8b 0e             	mov    (%r14),%ecx
    4d76:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4d7c:	89 c9                	mov    %ecx,%ecx
    4d7e:	89 ca                	mov    %ecx,%edx
    4d80:	48 8d 0d 79 3e 03 00 	lea    0x33e79(%rip),%rcx        # 38c00 <Te3>
    4d87:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4d8a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    4d8e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4d95:	00 00 00 
    4d98:	41 ff d6             	call   *%r14
    4d9b:	49 8b 0e             	mov    (%r14),%rcx
    4d9e:	e9 49 00 00 00       	jmp    4dec <AES_encrypt.19>
    4da3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    4daa:	00 00 

0000000000004dac <AES_encrypt.dummy.20>:
    4dac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4db3:	02 00 00 
    4db6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4dbd:	02 00 00 
    4dc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4dc7:	02 00 00 
    4dca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4dd1:	02 00 00 
    4dd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ddb:	02 00 00 
    4dde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4de5:	02 00 00 
    4de8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004dec <AES_encrypt.19>:
    4dec:	33 41 18             	xor    0x18(%rcx),%eax
    4def:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    4df3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4dfa:	00 00 00 
    4dfd:	41 ff d6             	call   *%r14
    4e00:	41 89 06             	mov    %eax,(%r14)
    4e03:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    4e07:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4e0e:	00 00 00 
    4e11:	41 ff d6             	call   *%r14
    4e14:	41 8b 06             	mov    (%r14),%eax
    4e17:	c1 e8 18             	shr    $0x18,%eax
    4e1a:	89 c0                	mov    %eax,%eax
    4e1c:	89 c1                	mov    %eax,%ecx
    4e1e:	48 8d 05 db 31 03 00 	lea    0x331db(%rip),%rax        # 38000 <Te0>
    4e25:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    4e29:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4e30:	00 00 00 
    4e33:	41 ff d6             	call   *%r14
    4e36:	41 8b 06             	mov    (%r14),%eax
    4e39:	e9 42 00 00 00       	jmp    4e80 <AES_encrypt.20>
    4e3e:	66 90                	xchg   %ax,%ax

0000000000004e40 <AES_encrypt.dummy.21>:
    4e40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e47:	02 00 00 
    4e4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e51:	02 00 00 
    4e54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e5b:	02 00 00 
    4e5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e65:	02 00 00 
    4e68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e6f:	02 00 00 
    4e72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4e79:	02 00 00 
    4e7c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004e80 <AES_encrypt.20>:
    4e80:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    4e84:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4e8b:	00 00 00 
    4e8e:	41 ff d6             	call   *%r14
    4e91:	41 8b 0e             	mov    (%r14),%ecx
    4e94:	c1 e9 10             	shr    $0x10,%ecx
    4e97:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4e9d:	89 c9                	mov    %ecx,%ecx
    4e9f:	89 ca                	mov    %ecx,%edx
    4ea1:	48 8d 0d 58 35 03 00 	lea    0x33558(%rip),%rcx        # 38400 <Te1>
    4ea8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4eab:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    4eaf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4eb6:	00 00 00 
    4eb9:	41 ff d6             	call   *%r14
    4ebc:	41 8b 0e             	mov    (%r14),%ecx
    4ebf:	e9 50 00 00 00       	jmp    4f14 <AES_encrypt.21>
    4ec4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ecb:	02 00 00 
    4ece:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004ed4 <AES_encrypt.dummy.22>:
    4ed4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4edb:	02 00 00 
    4ede:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ee5:	02 00 00 
    4ee8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4eef:	02 00 00 
    4ef2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ef9:	02 00 00 
    4efc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f03:	02 00 00 
    4f06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f0d:	02 00 00 
    4f10:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004f14 <AES_encrypt.21>:
    4f14:	c1 e9 08             	shr    $0x8,%ecx
    4f17:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4f1d:	89 c9                	mov    %ecx,%ecx
    4f1f:	89 ca                	mov    %ecx,%edx
    4f21:	48 8d 0d d8 38 03 00 	lea    0x338d8(%rip),%rcx        # 38800 <Te2>
    4f28:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4f2b:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    4f2f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4f36:	00 00 00 
    4f39:	41 ff d6             	call   *%r14
    4f3c:	41 8b 0e             	mov    (%r14),%ecx
    4f3f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    4f45:	89 c9                	mov    %ecx,%ecx
    4f47:	89 ca                	mov    %ecx,%edx
    4f49:	e9 46 00 00 00       	jmp    4f94 <AES_encrypt.22>
    4f4e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004f54 <AES_encrypt.dummy.23>:
    4f54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f5b:	02 00 00 
    4f5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f65:	02 00 00 
    4f68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f6f:	02 00 00 
    4f72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f79:	02 00 00 
    4f7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f83:	02 00 00 
    4f86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4f8d:	02 00 00 
    4f90:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000004f94 <AES_encrypt.22>:
    4f94:	48 8d 0d 65 3c 03 00 	lea    0x33c65(%rip),%rcx        # 38c00 <Te3>
    4f9b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    4f9e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    4fa2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4fa9:	00 00 00 
    4fac:	41 ff d6             	call   *%r14
    4faf:	49 8b 0e             	mov    (%r14),%rcx
    4fb2:	33 41 1c             	xor    0x1c(%rcx),%eax
    4fb5:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    4fb9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4fc0:	00 00 00 
    4fc3:	41 ff d6             	call   *%r14
    4fc6:	41 89 06             	mov    %eax,(%r14)
    4fc9:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    4fcd:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    4fd4:	00 00 00 
    4fd7:	41 ff d6             	call   *%r14
    4fda:	41 8b 06             	mov    (%r14),%eax
    4fdd:	e9 46 00 00 00       	jmp    5028 <AES_encrypt.23>
    4fe2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000004fe8 <AES_encrypt.dummy.24>:
    4fe8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4fef:	02 00 00 
    4ff2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    4ff9:	02 00 00 
    4ffc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5003:	02 00 00 
    5006:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    500d:	02 00 00 
    5010:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5017:	02 00 00 
    501a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5021:	02 00 00 
    5024:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005028 <AES_encrypt.23>:
    5028:	c1 e8 18             	shr    $0x18,%eax
    502b:	89 c0                	mov    %eax,%eax
    502d:	89 c1                	mov    %eax,%ecx
    502f:	48 8d 05 ca 2f 03 00 	lea    0x32fca(%rip),%rax        # 38000 <Te0>
    5036:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    503a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5041:	00 00 00 
    5044:	41 ff d6             	call   *%r14
    5047:	41 8b 06             	mov    (%r14),%eax
    504a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    504e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5055:	00 00 00 
    5058:	41 ff d6             	call   *%r14
    505b:	41 8b 0e             	mov    (%r14),%ecx
    505e:	c1 e9 10             	shr    $0x10,%ecx
    5061:	e9 42 00 00 00       	jmp    50a8 <AES_encrypt.24>
    5066:	66 90                	xchg   %ax,%ax

0000000000005068 <AES_encrypt.dummy.25>:
    5068:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    506f:	02 00 00 
    5072:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5079:	02 00 00 
    507c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5083:	02 00 00 
    5086:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    508d:	02 00 00 
    5090:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5097:	02 00 00 
    509a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    50a1:	02 00 00 
    50a4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000050a8 <AES_encrypt.24>:
    50a8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    50ae:	89 c9                	mov    %ecx,%ecx
    50b0:	89 ca                	mov    %ecx,%edx
    50b2:	48 8d 0d 47 33 03 00 	lea    0x33347(%rip),%rcx        # 38400 <Te1>
    50b9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    50bc:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    50c0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    50c7:	00 00 00 
    50ca:	41 ff d6             	call   *%r14
    50cd:	41 8b 0e             	mov    (%r14),%ecx
    50d0:	c1 e9 08             	shr    $0x8,%ecx
    50d3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    50d9:	89 c9                	mov    %ecx,%ecx
    50db:	89 ca                	mov    %ecx,%edx
    50dd:	e9 46 00 00 00       	jmp    5128 <AES_encrypt.25>
    50e2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000050e8 <AES_encrypt.dummy.26>:
    50e8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    50ef:	02 00 00 
    50f2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    50f9:	02 00 00 
    50fc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5103:	02 00 00 
    5106:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    510d:	02 00 00 
    5110:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5117:	02 00 00 
    511a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5121:	02 00 00 
    5124:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005128 <AES_encrypt.25>:
    5128:	48 8d 0d d1 36 03 00 	lea    0x336d1(%rip),%rcx        # 38800 <Te2>
    512f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5132:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    5136:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    513d:	00 00 00 
    5140:	41 ff d6             	call   *%r14
    5143:	41 8b 0e             	mov    (%r14),%ecx
    5146:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    514c:	89 c9                	mov    %ecx,%ecx
    514e:	89 ca                	mov    %ecx,%edx
    5150:	48 8d 0d a9 3a 03 00 	lea    0x33aa9(%rip),%rcx        # 38c00 <Te3>
    5157:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    515a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    515e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5165:	00 00 00 
    5168:	41 ff d6             	call   *%r14
    516b:	49 8b 0e             	mov    (%r14),%rcx
    516e:	e9 49 00 00 00       	jmp    51bc <AES_encrypt.26>
    5173:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    517a:	00 00 

000000000000517c <AES_encrypt.dummy.27>:
    517c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5183:	02 00 00 
    5186:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    518d:	02 00 00 
    5190:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5197:	02 00 00 
    519a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    51a1:	02 00 00 
    51a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    51ab:	02 00 00 
    51ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    51b5:	02 00 00 
    51b8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000051bc <AES_encrypt.26>:
    51bc:	33 41 20             	xor    0x20(%rcx),%eax
    51bf:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    51c3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    51ca:	00 00 00 
    51cd:	41 ff d6             	call   *%r14
    51d0:	41 89 06             	mov    %eax,(%r14)
    51d3:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    51d7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    51de:	00 00 00 
    51e1:	41 ff d6             	call   *%r14
    51e4:	41 8b 06             	mov    (%r14),%eax
    51e7:	c1 e8 18             	shr    $0x18,%eax
    51ea:	89 c0                	mov    %eax,%eax
    51ec:	89 c1                	mov    %eax,%ecx
    51ee:	48 8d 05 0b 2e 03 00 	lea    0x32e0b(%rip),%rax        # 38000 <Te0>
    51f5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    51f9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5200:	00 00 00 
    5203:	41 ff d6             	call   *%r14
    5206:	41 8b 06             	mov    (%r14),%eax
    5209:	e9 42 00 00 00       	jmp    5250 <AES_encrypt.27>
    520e:	66 90                	xchg   %ax,%ax

0000000000005210 <AES_encrypt.dummy.28>:
    5210:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5217:	02 00 00 
    521a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5221:	02 00 00 
    5224:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    522b:	02 00 00 
    522e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5235:	02 00 00 
    5238:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    523f:	02 00 00 
    5242:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5249:	02 00 00 
    524c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005250 <AES_encrypt.27>:
    5250:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    5254:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    525b:	00 00 00 
    525e:	41 ff d6             	call   *%r14
    5261:	41 8b 0e             	mov    (%r14),%ecx
    5264:	c1 e9 10             	shr    $0x10,%ecx
    5267:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    526d:	89 c9                	mov    %ecx,%ecx
    526f:	89 ca                	mov    %ecx,%edx
    5271:	48 8d 0d 88 31 03 00 	lea    0x33188(%rip),%rcx        # 38400 <Te1>
    5278:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    527b:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    527f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5286:	00 00 00 
    5289:	41 ff d6             	call   *%r14
    528c:	41 8b 0e             	mov    (%r14),%ecx
    528f:	e9 50 00 00 00       	jmp    52e4 <AES_encrypt.28>
    5294:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    529b:	02 00 00 
    529e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000052a4 <AES_encrypt.dummy.29>:
    52a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52ab:	02 00 00 
    52ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52b5:	02 00 00 
    52b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52bf:	02 00 00 
    52c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52c9:	02 00 00 
    52cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52d3:	02 00 00 
    52d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    52dd:	02 00 00 
    52e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000052e4 <AES_encrypt.28>:
    52e4:	c1 e9 08             	shr    $0x8,%ecx
    52e7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    52ed:	89 c9                	mov    %ecx,%ecx
    52ef:	89 ca                	mov    %ecx,%edx
    52f1:	48 8d 0d 08 35 03 00 	lea    0x33508(%rip),%rcx        # 38800 <Te2>
    52f8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    52fb:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    52ff:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5306:	00 00 00 
    5309:	41 ff d6             	call   *%r14
    530c:	41 8b 0e             	mov    (%r14),%ecx
    530f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5315:	89 c9                	mov    %ecx,%ecx
    5317:	89 ca                	mov    %ecx,%edx
    5319:	e9 46 00 00 00       	jmp    5364 <AES_encrypt.29>
    531e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005324 <AES_encrypt.dummy.30>:
    5324:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    532b:	02 00 00 
    532e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5335:	02 00 00 
    5338:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    533f:	02 00 00 
    5342:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5349:	02 00 00 
    534c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5353:	02 00 00 
    5356:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    535d:	02 00 00 
    5360:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005364 <AES_encrypt.29>:
    5364:	48 8d 0d 95 38 03 00 	lea    0x33895(%rip),%rcx        # 38c00 <Te3>
    536b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    536e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5372:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5379:	00 00 00 
    537c:	41 ff d6             	call   *%r14
    537f:	49 8b 0e             	mov    (%r14),%rcx
    5382:	33 41 24             	xor    0x24(%rcx),%eax
    5385:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5389:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5390:	00 00 00 
    5393:	41 ff d6             	call   *%r14
    5396:	41 89 06             	mov    %eax,(%r14)
    5399:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    539d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    53a4:	00 00 00 
    53a7:	41 ff d6             	call   *%r14
    53aa:	41 8b 06             	mov    (%r14),%eax
    53ad:	e9 46 00 00 00       	jmp    53f8 <AES_encrypt.30>
    53b2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000053b8 <AES_encrypt.dummy.31>:
    53b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53bf:	02 00 00 
    53c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53c9:	02 00 00 
    53cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53d3:	02 00 00 
    53d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53dd:	02 00 00 
    53e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53e7:	02 00 00 
    53ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    53f1:	02 00 00 
    53f4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000053f8 <AES_encrypt.30>:
    53f8:	c1 e8 18             	shr    $0x18,%eax
    53fb:	89 c0                	mov    %eax,%eax
    53fd:	89 c1                	mov    %eax,%ecx
    53ff:	48 8d 05 fa 2b 03 00 	lea    0x32bfa(%rip),%rax        # 38000 <Te0>
    5406:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    540a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5411:	00 00 00 
    5414:	41 ff d6             	call   *%r14
    5417:	41 8b 06             	mov    (%r14),%eax
    541a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    541e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5425:	00 00 00 
    5428:	41 ff d6             	call   *%r14
    542b:	41 8b 0e             	mov    (%r14),%ecx
    542e:	c1 e9 10             	shr    $0x10,%ecx
    5431:	e9 42 00 00 00       	jmp    5478 <AES_encrypt.31>
    5436:	66 90                	xchg   %ax,%ax

0000000000005438 <AES_encrypt.dummy.32>:
    5438:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    543f:	02 00 00 
    5442:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5449:	02 00 00 
    544c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5453:	02 00 00 
    5456:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    545d:	02 00 00 
    5460:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5467:	02 00 00 
    546a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5471:	02 00 00 
    5474:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005478 <AES_encrypt.31>:
    5478:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    547e:	89 c9                	mov    %ecx,%ecx
    5480:	89 ca                	mov    %ecx,%edx
    5482:	48 8d 0d 77 2f 03 00 	lea    0x32f77(%rip),%rcx        # 38400 <Te1>
    5489:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    548c:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    5490:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5497:	00 00 00 
    549a:	41 ff d6             	call   *%r14
    549d:	41 8b 0e             	mov    (%r14),%ecx
    54a0:	c1 e9 08             	shr    $0x8,%ecx
    54a3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    54a9:	89 c9                	mov    %ecx,%ecx
    54ab:	89 ca                	mov    %ecx,%edx
    54ad:	e9 46 00 00 00       	jmp    54f8 <AES_encrypt.32>
    54b2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000054b8 <AES_encrypt.dummy.33>:
    54b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54bf:	02 00 00 
    54c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54c9:	02 00 00 
    54cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54d3:	02 00 00 
    54d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54dd:	02 00 00 
    54e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54e7:	02 00 00 
    54ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    54f1:	02 00 00 
    54f4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000054f8 <AES_encrypt.32>:
    54f8:	48 8d 0d 01 33 03 00 	lea    0x33301(%rip),%rcx        # 38800 <Te2>
    54ff:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5502:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    5506:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    550d:	00 00 00 
    5510:	41 ff d6             	call   *%r14
    5513:	41 8b 0e             	mov    (%r14),%ecx
    5516:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    551c:	89 c9                	mov    %ecx,%ecx
    551e:	89 ca                	mov    %ecx,%edx
    5520:	48 8d 0d d9 36 03 00 	lea    0x336d9(%rip),%rcx        # 38c00 <Te3>
    5527:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    552a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    552e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5535:	00 00 00 
    5538:	41 ff d6             	call   *%r14
    553b:	49 8b 0e             	mov    (%r14),%rcx
    553e:	e9 49 00 00 00       	jmp    558c <AES_encrypt.33>
    5543:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    554a:	00 00 

000000000000554c <AES_encrypt.dummy.34>:
    554c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5553:	02 00 00 
    5556:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    555d:	02 00 00 
    5560:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5567:	02 00 00 
    556a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5571:	02 00 00 
    5574:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    557b:	02 00 00 
    557e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5585:	02 00 00 
    5588:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000558c <AES_encrypt.33>:
    558c:	33 41 28             	xor    0x28(%rcx),%eax
    558f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5593:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    559a:	00 00 00 
    559d:	41 ff d6             	call   *%r14
    55a0:	41 89 06             	mov    %eax,(%r14)
    55a3:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    55a7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    55ae:	00 00 00 
    55b1:	41 ff d6             	call   *%r14
    55b4:	41 8b 06             	mov    (%r14),%eax
    55b7:	c1 e8 18             	shr    $0x18,%eax
    55ba:	89 c0                	mov    %eax,%eax
    55bc:	89 c1                	mov    %eax,%ecx
    55be:	48 8d 05 3b 2a 03 00 	lea    0x32a3b(%rip),%rax        # 38000 <Te0>
    55c5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    55c9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    55d0:	00 00 00 
    55d3:	41 ff d6             	call   *%r14
    55d6:	41 8b 06             	mov    (%r14),%eax
    55d9:	e9 42 00 00 00       	jmp    5620 <AES_encrypt.34>
    55de:	66 90                	xchg   %ax,%ax

00000000000055e0 <AES_encrypt.dummy.35>:
    55e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    55e7:	02 00 00 
    55ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    55f1:	02 00 00 
    55f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    55fb:	02 00 00 
    55fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5605:	02 00 00 
    5608:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    560f:	02 00 00 
    5612:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5619:	02 00 00 
    561c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005620 <AES_encrypt.34>:
    5620:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    5624:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    562b:	00 00 00 
    562e:	41 ff d6             	call   *%r14
    5631:	41 8b 0e             	mov    (%r14),%ecx
    5634:	c1 e9 10             	shr    $0x10,%ecx
    5637:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    563d:	89 c9                	mov    %ecx,%ecx
    563f:	89 ca                	mov    %ecx,%edx
    5641:	48 8d 0d b8 2d 03 00 	lea    0x32db8(%rip),%rcx        # 38400 <Te1>
    5648:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    564b:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    564f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5656:	00 00 00 
    5659:	41 ff d6             	call   *%r14
    565c:	41 8b 0e             	mov    (%r14),%ecx
    565f:	e9 50 00 00 00       	jmp    56b4 <AES_encrypt.35>
    5664:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    566b:	02 00 00 
    566e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005674 <AES_encrypt.dummy.36>:
    5674:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    567b:	02 00 00 
    567e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5685:	02 00 00 
    5688:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    568f:	02 00 00 
    5692:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5699:	02 00 00 
    569c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56a3:	02 00 00 
    56a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56ad:	02 00 00 
    56b0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000056b4 <AES_encrypt.35>:
    56b4:	c1 e9 08             	shr    $0x8,%ecx
    56b7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    56bd:	89 c9                	mov    %ecx,%ecx
    56bf:	89 ca                	mov    %ecx,%edx
    56c1:	48 8d 0d 38 31 03 00 	lea    0x33138(%rip),%rcx        # 38800 <Te2>
    56c8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    56cb:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    56cf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    56d6:	00 00 00 
    56d9:	41 ff d6             	call   *%r14
    56dc:	41 8b 0e             	mov    (%r14),%ecx
    56df:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    56e5:	89 c9                	mov    %ecx,%ecx
    56e7:	89 ca                	mov    %ecx,%edx
    56e9:	e9 46 00 00 00       	jmp    5734 <AES_encrypt.36>
    56ee:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000056f4 <AES_encrypt.dummy.37>:
    56f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    56fb:	02 00 00 
    56fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5705:	02 00 00 
    5708:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    570f:	02 00 00 
    5712:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5719:	02 00 00 
    571c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5723:	02 00 00 
    5726:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    572d:	02 00 00 
    5730:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005734 <AES_encrypt.36>:
    5734:	48 8d 0d c5 34 03 00 	lea    0x334c5(%rip),%rcx        # 38c00 <Te3>
    573b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    573e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5742:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5749:	00 00 00 
    574c:	41 ff d6             	call   *%r14
    574f:	49 8b 0e             	mov    (%r14),%rcx
    5752:	33 41 2c             	xor    0x2c(%rcx),%eax
    5755:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5759:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5760:	00 00 00 
    5763:	41 ff d6             	call   *%r14
    5766:	41 89 06             	mov    %eax,(%r14)
    5769:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    576d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5774:	00 00 00 
    5777:	41 ff d6             	call   *%r14
    577a:	41 8b 06             	mov    (%r14),%eax
    577d:	e9 46 00 00 00       	jmp    57c8 <AES_encrypt.37>
    5782:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005788 <AES_encrypt.dummy.38>:
    5788:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    578f:	02 00 00 
    5792:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5799:	02 00 00 
    579c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57a3:	02 00 00 
    57a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57ad:	02 00 00 
    57b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57b7:	02 00 00 
    57ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    57c1:	02 00 00 
    57c4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000057c8 <AES_encrypt.37>:
    57c8:	c1 e8 18             	shr    $0x18,%eax
    57cb:	89 c0                	mov    %eax,%eax
    57cd:	89 c1                	mov    %eax,%ecx
    57cf:	48 8d 05 2a 28 03 00 	lea    0x3282a(%rip),%rax        # 38000 <Te0>
    57d6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    57da:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    57e1:	00 00 00 
    57e4:	41 ff d6             	call   *%r14
    57e7:	41 8b 06             	mov    (%r14),%eax
    57ea:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    57ee:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    57f5:	00 00 00 
    57f8:	41 ff d6             	call   *%r14
    57fb:	41 8b 0e             	mov    (%r14),%ecx
    57fe:	c1 e9 10             	shr    $0x10,%ecx
    5801:	e9 42 00 00 00       	jmp    5848 <AES_encrypt.38>
    5806:	66 90                	xchg   %ax,%ax

0000000000005808 <AES_encrypt.dummy.39>:
    5808:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    580f:	02 00 00 
    5812:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5819:	02 00 00 
    581c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5823:	02 00 00 
    5826:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    582d:	02 00 00 
    5830:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5837:	02 00 00 
    583a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5841:	02 00 00 
    5844:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005848 <AES_encrypt.38>:
    5848:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    584e:	89 c9                	mov    %ecx,%ecx
    5850:	89 ca                	mov    %ecx,%edx
    5852:	48 8d 0d a7 2b 03 00 	lea    0x32ba7(%rip),%rcx        # 38400 <Te1>
    5859:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    585c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5860:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5867:	00 00 00 
    586a:	41 ff d6             	call   *%r14
    586d:	41 8b 0e             	mov    (%r14),%ecx
    5870:	c1 e9 08             	shr    $0x8,%ecx
    5873:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5879:	89 c9                	mov    %ecx,%ecx
    587b:	89 ca                	mov    %ecx,%edx
    587d:	e9 46 00 00 00       	jmp    58c8 <AES_encrypt.39>
    5882:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005888 <AES_encrypt.dummy.40>:
    5888:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    588f:	02 00 00 
    5892:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5899:	02 00 00 
    589c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58a3:	02 00 00 
    58a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58ad:	02 00 00 
    58b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58b7:	02 00 00 
    58ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    58c1:	02 00 00 
    58c4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000058c8 <AES_encrypt.39>:
    58c8:	48 8d 0d 31 2f 03 00 	lea    0x32f31(%rip),%rcx        # 38800 <Te2>
    58cf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    58d2:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    58d6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    58dd:	00 00 00 
    58e0:	41 ff d6             	call   *%r14
    58e3:	41 8b 0e             	mov    (%r14),%ecx
    58e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    58ec:	89 c9                	mov    %ecx,%ecx
    58ee:	89 ca                	mov    %ecx,%edx
    58f0:	48 8d 0d 09 33 03 00 	lea    0x33309(%rip),%rcx        # 38c00 <Te3>
    58f7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    58fa:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    58fe:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5905:	00 00 00 
    5908:	41 ff d6             	call   *%r14
    590b:	49 8b 0e             	mov    (%r14),%rcx
    590e:	e9 49 00 00 00       	jmp    595c <AES_encrypt.40>
    5913:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    591a:	00 00 

000000000000591c <AES_encrypt.dummy.41>:
    591c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5923:	02 00 00 
    5926:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    592d:	02 00 00 
    5930:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5937:	02 00 00 
    593a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5941:	02 00 00 
    5944:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    594b:	02 00 00 
    594e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5955:	02 00 00 
    5958:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000595c <AES_encrypt.40>:
    595c:	33 41 30             	xor    0x30(%rcx),%eax
    595f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    5963:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    596a:	00 00 00 
    596d:	41 ff d6             	call   *%r14
    5970:	41 89 06             	mov    %eax,(%r14)
    5973:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5977:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    597e:	00 00 00 
    5981:	41 ff d6             	call   *%r14
    5984:	41 8b 06             	mov    (%r14),%eax
    5987:	c1 e8 18             	shr    $0x18,%eax
    598a:	89 c0                	mov    %eax,%eax
    598c:	89 c1                	mov    %eax,%ecx
    598e:	48 8d 05 6b 26 03 00 	lea    0x3266b(%rip),%rax        # 38000 <Te0>
    5995:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5999:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    59a0:	00 00 00 
    59a3:	41 ff d6             	call   *%r14
    59a6:	41 8b 06             	mov    (%r14),%eax
    59a9:	e9 42 00 00 00       	jmp    59f0 <AES_encrypt.41>
    59ae:	66 90                	xchg   %ax,%ax

00000000000059b0 <AES_encrypt.dummy.42>:
    59b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59b7:	02 00 00 
    59ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59c1:	02 00 00 
    59c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59cb:	02 00 00 
    59ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59d5:	02 00 00 
    59d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59df:	02 00 00 
    59e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    59e9:	02 00 00 
    59ec:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000059f0 <AES_encrypt.41>:
    59f0:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    59f4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    59fb:	00 00 00 
    59fe:	41 ff d6             	call   *%r14
    5a01:	41 8b 0e             	mov    (%r14),%ecx
    5a04:	c1 e9 10             	shr    $0x10,%ecx
    5a07:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5a0d:	89 c9                	mov    %ecx,%ecx
    5a0f:	89 ca                	mov    %ecx,%edx
    5a11:	48 8d 0d e8 29 03 00 	lea    0x329e8(%rip),%rcx        # 38400 <Te1>
    5a18:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5a1b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5a1f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5a26:	00 00 00 
    5a29:	41 ff d6             	call   *%r14
    5a2c:	41 8b 0e             	mov    (%r14),%ecx
    5a2f:	e9 50 00 00 00       	jmp    5a84 <AES_encrypt.42>
    5a34:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a3b:	02 00 00 
    5a3e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005a44 <AES_encrypt.dummy.43>:
    5a44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a4b:	02 00 00 
    5a4e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a55:	02 00 00 
    5a58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a5f:	02 00 00 
    5a62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a69:	02 00 00 
    5a6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a73:	02 00 00 
    5a76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5a7d:	02 00 00 
    5a80:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005a84 <AES_encrypt.42>:
    5a84:	c1 e9 08             	shr    $0x8,%ecx
    5a87:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5a8d:	89 c9                	mov    %ecx,%ecx
    5a8f:	89 ca                	mov    %ecx,%edx
    5a91:	48 8d 0d 68 2d 03 00 	lea    0x32d68(%rip),%rcx        # 38800 <Te2>
    5a98:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5a9b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5a9f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5aa6:	00 00 00 
    5aa9:	41 ff d6             	call   *%r14
    5aac:	41 8b 0e             	mov    (%r14),%ecx
    5aaf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5ab5:	89 c9                	mov    %ecx,%ecx
    5ab7:	89 ca                	mov    %ecx,%edx
    5ab9:	e9 46 00 00 00       	jmp    5b04 <AES_encrypt.43>
    5abe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005ac4 <AES_encrypt.dummy.44>:
    5ac4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5acb:	02 00 00 
    5ace:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ad5:	02 00 00 
    5ad8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5adf:	02 00 00 
    5ae2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ae9:	02 00 00 
    5aec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5af3:	02 00 00 
    5af6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5afd:	02 00 00 
    5b00:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005b04 <AES_encrypt.43>:
    5b04:	48 8d 0d f5 30 03 00 	lea    0x330f5(%rip),%rcx        # 38c00 <Te3>
    5b0b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5b0e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5b12:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5b19:	00 00 00 
    5b1c:	41 ff d6             	call   *%r14
    5b1f:	49 8b 0e             	mov    (%r14),%rcx
    5b22:	33 41 34             	xor    0x34(%rcx),%eax
    5b25:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    5b29:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5b30:	00 00 00 
    5b33:	41 ff d6             	call   *%r14
    5b36:	41 89 06             	mov    %eax,(%r14)
    5b39:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5b3d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5b44:	00 00 00 
    5b47:	41 ff d6             	call   *%r14
    5b4a:	41 8b 06             	mov    (%r14),%eax
    5b4d:	e9 46 00 00 00       	jmp    5b98 <AES_encrypt.44>
    5b52:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005b58 <AES_encrypt.dummy.45>:
    5b58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b5f:	02 00 00 
    5b62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b69:	02 00 00 
    5b6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b73:	02 00 00 
    5b76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b7d:	02 00 00 
    5b80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b87:	02 00 00 
    5b8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5b91:	02 00 00 
    5b94:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005b98 <AES_encrypt.44>:
    5b98:	c1 e8 18             	shr    $0x18,%eax
    5b9b:	89 c0                	mov    %eax,%eax
    5b9d:	89 c1                	mov    %eax,%ecx
    5b9f:	48 8d 05 5a 24 03 00 	lea    0x3245a(%rip),%rax        # 38000 <Te0>
    5ba6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5baa:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5bb1:	00 00 00 
    5bb4:	41 ff d6             	call   *%r14
    5bb7:	41 8b 06             	mov    (%r14),%eax
    5bba:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5bbe:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5bc5:	00 00 00 
    5bc8:	41 ff d6             	call   *%r14
    5bcb:	41 8b 0e             	mov    (%r14),%ecx
    5bce:	c1 e9 10             	shr    $0x10,%ecx
    5bd1:	e9 42 00 00 00       	jmp    5c18 <AES_encrypt.45>
    5bd6:	66 90                	xchg   %ax,%ax

0000000000005bd8 <AES_encrypt.dummy.46>:
    5bd8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5bdf:	02 00 00 
    5be2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5be9:	02 00 00 
    5bec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5bf3:	02 00 00 
    5bf6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5bfd:	02 00 00 
    5c00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c07:	02 00 00 
    5c0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c11:	02 00 00 
    5c14:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005c18 <AES_encrypt.45>:
    5c18:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5c1e:	89 c9                	mov    %ecx,%ecx
    5c20:	89 ca                	mov    %ecx,%edx
    5c22:	48 8d 0d d7 27 03 00 	lea    0x327d7(%rip),%rcx        # 38400 <Te1>
    5c29:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5c2c:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5c30:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5c37:	00 00 00 
    5c3a:	41 ff d6             	call   *%r14
    5c3d:	41 8b 0e             	mov    (%r14),%ecx
    5c40:	c1 e9 08             	shr    $0x8,%ecx
    5c43:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5c49:	89 c9                	mov    %ecx,%ecx
    5c4b:	89 ca                	mov    %ecx,%edx
    5c4d:	e9 46 00 00 00       	jmp    5c98 <AES_encrypt.46>
    5c52:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005c58 <AES_encrypt.dummy.47>:
    5c58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c5f:	02 00 00 
    5c62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c69:	02 00 00 
    5c6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c73:	02 00 00 
    5c76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c7d:	02 00 00 
    5c80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c87:	02 00 00 
    5c8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5c91:	02 00 00 
    5c94:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005c98 <AES_encrypt.46>:
    5c98:	48 8d 0d 61 2b 03 00 	lea    0x32b61(%rip),%rcx        # 38800 <Te2>
    5c9f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5ca2:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5ca6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5cad:	00 00 00 
    5cb0:	41 ff d6             	call   *%r14
    5cb3:	41 8b 0e             	mov    (%r14),%ecx
    5cb6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5cbc:	89 c9                	mov    %ecx,%ecx
    5cbe:	89 ca                	mov    %ecx,%edx
    5cc0:	48 8d 0d 39 2f 03 00 	lea    0x32f39(%rip),%rcx        # 38c00 <Te3>
    5cc7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5cca:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5cce:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5cd5:	00 00 00 
    5cd8:	41 ff d6             	call   *%r14
    5cdb:	49 8b 0e             	mov    (%r14),%rcx
    5cde:	e9 49 00 00 00       	jmp    5d2c <AES_encrypt.47>
    5ce3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    5cea:	00 00 

0000000000005cec <AES_encrypt.dummy.48>:
    5cec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5cf3:	02 00 00 
    5cf6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5cfd:	02 00 00 
    5d00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d07:	02 00 00 
    5d0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d11:	02 00 00 
    5d14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d1b:	02 00 00 
    5d1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d25:	02 00 00 
    5d28:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005d2c <AES_encrypt.47>:
    5d2c:	33 41 38             	xor    0x38(%rcx),%eax
    5d2f:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    5d33:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5d3a:	00 00 00 
    5d3d:	41 ff d6             	call   *%r14
    5d40:	41 89 06             	mov    %eax,(%r14)
    5d43:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    5d47:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5d4e:	00 00 00 
    5d51:	41 ff d6             	call   *%r14
    5d54:	41 8b 06             	mov    (%r14),%eax
    5d57:	c1 e8 18             	shr    $0x18,%eax
    5d5a:	89 c0                	mov    %eax,%eax
    5d5c:	89 c1                	mov    %eax,%ecx
    5d5e:	48 8d 05 9b 22 03 00 	lea    0x3229b(%rip),%rax        # 38000 <Te0>
    5d65:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5d69:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5d70:	00 00 00 
    5d73:	41 ff d6             	call   *%r14
    5d76:	41 8b 06             	mov    (%r14),%eax
    5d79:	e9 42 00 00 00       	jmp    5dc0 <AES_encrypt.48>
    5d7e:	66 90                	xchg   %ax,%ax

0000000000005d80 <AES_encrypt.dummy.49>:
    5d80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d87:	02 00 00 
    5d8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d91:	02 00 00 
    5d94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5d9b:	02 00 00 
    5d9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5da5:	02 00 00 
    5da8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5daf:	02 00 00 
    5db2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5db9:	02 00 00 
    5dbc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005dc0 <AES_encrypt.48>:
    5dc0:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    5dc4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5dcb:	00 00 00 
    5dce:	41 ff d6             	call   *%r14
    5dd1:	41 8b 0e             	mov    (%r14),%ecx
    5dd4:	c1 e9 10             	shr    $0x10,%ecx
    5dd7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5ddd:	89 c9                	mov    %ecx,%ecx
    5ddf:	89 ca                	mov    %ecx,%edx
    5de1:	48 8d 0d 18 26 03 00 	lea    0x32618(%rip),%rcx        # 38400 <Te1>
    5de8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5deb:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    5def:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5df6:	00 00 00 
    5df9:	41 ff d6             	call   *%r14
    5dfc:	41 8b 0e             	mov    (%r14),%ecx
    5dff:	e9 50 00 00 00       	jmp    5e54 <AES_encrypt.49>
    5e04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e0b:	02 00 00 
    5e0e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005e14 <AES_encrypt.dummy.50>:
    5e14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e1b:	02 00 00 
    5e1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e25:	02 00 00 
    5e28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e2f:	02 00 00 
    5e32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e39:	02 00 00 
    5e3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e43:	02 00 00 
    5e46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e4d:	02 00 00 
    5e50:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005e54 <AES_encrypt.49>:
    5e54:	c1 e9 08             	shr    $0x8,%ecx
    5e57:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5e5d:	89 c9                	mov    %ecx,%ecx
    5e5f:	89 ca                	mov    %ecx,%edx
    5e61:	48 8d 0d 98 29 03 00 	lea    0x32998(%rip),%rcx        # 38800 <Te2>
    5e68:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5e6b:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    5e6f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5e76:	00 00 00 
    5e79:	41 ff d6             	call   *%r14
    5e7c:	41 8b 0e             	mov    (%r14),%ecx
    5e7f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5e85:	89 c9                	mov    %ecx,%ecx
    5e87:	89 ca                	mov    %ecx,%edx
    5e89:	e9 46 00 00 00       	jmp    5ed4 <AES_encrypt.50>
    5e8e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005e94 <AES_encrypt.dummy.51>:
    5e94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5e9b:	02 00 00 
    5e9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ea5:	02 00 00 
    5ea8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5eaf:	02 00 00 
    5eb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5eb9:	02 00 00 
    5ebc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ec3:	02 00 00 
    5ec6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5ecd:	02 00 00 
    5ed0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005ed4 <AES_encrypt.50>:
    5ed4:	48 8d 0d 25 2d 03 00 	lea    0x32d25(%rip),%rcx        # 38c00 <Te3>
    5edb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5ede:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    5ee2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5ee9:	00 00 00 
    5eec:	41 ff d6             	call   *%r14
    5eef:	49 8b 0e             	mov    (%r14),%rcx
    5ef2:	33 41 3c             	xor    0x3c(%rcx),%eax
    5ef5:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    5ef9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5f00:	00 00 00 
    5f03:	41 ff d6             	call   *%r14
    5f06:	41 89 06             	mov    %eax,(%r14)
    5f09:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    5f0d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5f14:	00 00 00 
    5f17:	41 ff d6             	call   *%r14
    5f1a:	41 8b 06             	mov    (%r14),%eax
    5f1d:	e9 46 00 00 00       	jmp    5f68 <AES_encrypt.51>
    5f22:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000005f28 <AES_encrypt.dummy.52>:
    5f28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f2f:	02 00 00 
    5f32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f39:	02 00 00 
    5f3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f43:	02 00 00 
    5f46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f4d:	02 00 00 
    5f50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f57:	02 00 00 
    5f5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5f61:	02 00 00 
    5f64:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005f68 <AES_encrypt.51>:
    5f68:	c1 e8 18             	shr    $0x18,%eax
    5f6b:	89 c0                	mov    %eax,%eax
    5f6d:	89 c1                	mov    %eax,%ecx
    5f6f:	48 8d 05 8a 20 03 00 	lea    0x3208a(%rip),%rax        # 38000 <Te0>
    5f76:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    5f7a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5f81:	00 00 00 
    5f84:	41 ff d6             	call   *%r14
    5f87:	41 8b 06             	mov    (%r14),%eax
    5f8a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    5f8e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    5f95:	00 00 00 
    5f98:	41 ff d6             	call   *%r14
    5f9b:	41 8b 0e             	mov    (%r14),%ecx
    5f9e:	c1 e9 10             	shr    $0x10,%ecx
    5fa1:	e9 42 00 00 00       	jmp    5fe8 <AES_encrypt.52>
    5fa6:	66 90                	xchg   %ax,%ax

0000000000005fa8 <AES_encrypt.dummy.53>:
    5fa8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5faf:	02 00 00 
    5fb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fb9:	02 00 00 
    5fbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fc3:	02 00 00 
    5fc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fcd:	02 00 00 
    5fd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fd7:	02 00 00 
    5fda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    5fe1:	02 00 00 
    5fe4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000005fe8 <AES_encrypt.52>:
    5fe8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    5fee:	89 c9                	mov    %ecx,%ecx
    5ff0:	89 ca                	mov    %ecx,%edx
    5ff2:	48 8d 0d 07 24 03 00 	lea    0x32407(%rip),%rcx        # 38400 <Te1>
    5ff9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    5ffc:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6000:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6007:	00 00 00 
    600a:	41 ff d6             	call   *%r14
    600d:	41 8b 0e             	mov    (%r14),%ecx
    6010:	c1 e9 08             	shr    $0x8,%ecx
    6013:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6019:	89 c9                	mov    %ecx,%ecx
    601b:	89 ca                	mov    %ecx,%edx
    601d:	e9 46 00 00 00       	jmp    6068 <AES_encrypt.53>
    6022:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006028 <AES_encrypt.dummy.54>:
    6028:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    602f:	02 00 00 
    6032:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6039:	02 00 00 
    603c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6043:	02 00 00 
    6046:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    604d:	02 00 00 
    6050:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6057:	02 00 00 
    605a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6061:	02 00 00 
    6064:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006068 <AES_encrypt.53>:
    6068:	48 8d 0d 91 27 03 00 	lea    0x32791(%rip),%rcx        # 38800 <Te2>
    606f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6072:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    6076:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    607d:	00 00 00 
    6080:	41 ff d6             	call   *%r14
    6083:	41 8b 0e             	mov    (%r14),%ecx
    6086:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    608c:	89 c9                	mov    %ecx,%ecx
    608e:	89 ca                	mov    %ecx,%edx
    6090:	48 8d 0d 69 2b 03 00 	lea    0x32b69(%rip),%rcx        # 38c00 <Te3>
    6097:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    609a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    609e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    60a5:	00 00 00 
    60a8:	41 ff d6             	call   *%r14
    60ab:	49 8b 0e             	mov    (%r14),%rcx
    60ae:	e9 49 00 00 00       	jmp    60fc <AES_encrypt.54>
    60b3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    60ba:	00 00 

00000000000060bc <AES_encrypt.dummy.55>:
    60bc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60c3:	02 00 00 
    60c6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60cd:	02 00 00 
    60d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60d7:	02 00 00 
    60da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60e1:	02 00 00 
    60e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60eb:	02 00 00 
    60ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    60f5:	02 00 00 
    60f8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000060fc <AES_encrypt.54>:
    60fc:	33 41 40             	xor    0x40(%rcx),%eax
    60ff:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6103:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    610a:	00 00 00 
    610d:	41 ff d6             	call   *%r14
    6110:	41 89 06             	mov    %eax,(%r14)
    6113:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6117:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    611e:	00 00 00 
    6121:	41 ff d6             	call   *%r14
    6124:	41 8b 06             	mov    (%r14),%eax
    6127:	c1 e8 18             	shr    $0x18,%eax
    612a:	89 c0                	mov    %eax,%eax
    612c:	89 c1                	mov    %eax,%ecx
    612e:	48 8d 05 cb 1e 03 00 	lea    0x31ecb(%rip),%rax        # 38000 <Te0>
    6135:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6139:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6140:	00 00 00 
    6143:	41 ff d6             	call   *%r14
    6146:	41 8b 06             	mov    (%r14),%eax
    6149:	e9 42 00 00 00       	jmp    6190 <AES_encrypt.55>
    614e:	66 90                	xchg   %ax,%ax

0000000000006150 <AES_encrypt.dummy.56>:
    6150:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6157:	02 00 00 
    615a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6161:	02 00 00 
    6164:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    616b:	02 00 00 
    616e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6175:	02 00 00 
    6178:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    617f:	02 00 00 
    6182:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6189:	02 00 00 
    618c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006190 <AES_encrypt.55>:
    6190:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6194:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    619b:	00 00 00 
    619e:	41 ff d6             	call   *%r14
    61a1:	41 8b 0e             	mov    (%r14),%ecx
    61a4:	c1 e9 10             	shr    $0x10,%ecx
    61a7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    61ad:	89 c9                	mov    %ecx,%ecx
    61af:	89 ca                	mov    %ecx,%edx
    61b1:	48 8d 0d 48 22 03 00 	lea    0x32248(%rip),%rcx        # 38400 <Te1>
    61b8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    61bb:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    61bf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    61c6:	00 00 00 
    61c9:	41 ff d6             	call   *%r14
    61cc:	41 8b 0e             	mov    (%r14),%ecx
    61cf:	e9 50 00 00 00       	jmp    6224 <AES_encrypt.56>
    61d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61db:	02 00 00 
    61de:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000061e4 <AES_encrypt.dummy.57>:
    61e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61eb:	02 00 00 
    61ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61f5:	02 00 00 
    61f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    61ff:	02 00 00 
    6202:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6209:	02 00 00 
    620c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6213:	02 00 00 
    6216:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    621d:	02 00 00 
    6220:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006224 <AES_encrypt.56>:
    6224:	c1 e9 08             	shr    $0x8,%ecx
    6227:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    622d:	89 c9                	mov    %ecx,%ecx
    622f:	89 ca                	mov    %ecx,%edx
    6231:	48 8d 0d c8 25 03 00 	lea    0x325c8(%rip),%rcx        # 38800 <Te2>
    6238:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    623b:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    623f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6246:	00 00 00 
    6249:	41 ff d6             	call   *%r14
    624c:	41 8b 0e             	mov    (%r14),%ecx
    624f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6255:	89 c9                	mov    %ecx,%ecx
    6257:	89 ca                	mov    %ecx,%edx
    6259:	e9 46 00 00 00       	jmp    62a4 <AES_encrypt.57>
    625e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006264 <AES_encrypt.dummy.58>:
    6264:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    626b:	02 00 00 
    626e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6275:	02 00 00 
    6278:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    627f:	02 00 00 
    6282:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6289:	02 00 00 
    628c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6293:	02 00 00 
    6296:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    629d:	02 00 00 
    62a0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000062a4 <AES_encrypt.57>:
    62a4:	48 8d 0d 55 29 03 00 	lea    0x32955(%rip),%rcx        # 38c00 <Te3>
    62ab:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    62ae:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    62b2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    62b9:	00 00 00 
    62bc:	41 ff d6             	call   *%r14
    62bf:	49 8b 0e             	mov    (%r14),%rcx
    62c2:	33 41 44             	xor    0x44(%rcx),%eax
    62c5:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    62c9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    62d0:	00 00 00 
    62d3:	41 ff d6             	call   *%r14
    62d6:	41 89 06             	mov    %eax,(%r14)
    62d9:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    62dd:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    62e4:	00 00 00 
    62e7:	41 ff d6             	call   *%r14
    62ea:	41 8b 06             	mov    (%r14),%eax
    62ed:	e9 46 00 00 00       	jmp    6338 <AES_encrypt.58>
    62f2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000062f8 <AES_encrypt.dummy.59>:
    62f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    62ff:	02 00 00 
    6302:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6309:	02 00 00 
    630c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6313:	02 00 00 
    6316:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    631d:	02 00 00 
    6320:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6327:	02 00 00 
    632a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6331:	02 00 00 
    6334:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006338 <AES_encrypt.58>:
    6338:	c1 e8 18             	shr    $0x18,%eax
    633b:	89 c0                	mov    %eax,%eax
    633d:	89 c1                	mov    %eax,%ecx
    633f:	48 8d 05 ba 1c 03 00 	lea    0x31cba(%rip),%rax        # 38000 <Te0>
    6346:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    634a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6351:	00 00 00 
    6354:	41 ff d6             	call   *%r14
    6357:	41 8b 06             	mov    (%r14),%eax
    635a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    635e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6365:	00 00 00 
    6368:	41 ff d6             	call   *%r14
    636b:	41 8b 0e             	mov    (%r14),%ecx
    636e:	c1 e9 10             	shr    $0x10,%ecx
    6371:	e9 42 00 00 00       	jmp    63b8 <AES_encrypt.59>
    6376:	66 90                	xchg   %ax,%ax

0000000000006378 <AES_encrypt.dummy.60>:
    6378:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    637f:	02 00 00 
    6382:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6389:	02 00 00 
    638c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6393:	02 00 00 
    6396:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    639d:	02 00 00 
    63a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63a7:	02 00 00 
    63aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63b1:	02 00 00 
    63b4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000063b8 <AES_encrypt.59>:
    63b8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    63be:	89 c9                	mov    %ecx,%ecx
    63c0:	89 ca                	mov    %ecx,%edx
    63c2:	48 8d 0d 37 20 03 00 	lea    0x32037(%rip),%rcx        # 38400 <Te1>
    63c9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    63cc:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    63d0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    63d7:	00 00 00 
    63da:	41 ff d6             	call   *%r14
    63dd:	41 8b 0e             	mov    (%r14),%ecx
    63e0:	c1 e9 08             	shr    $0x8,%ecx
    63e3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    63e9:	89 c9                	mov    %ecx,%ecx
    63eb:	89 ca                	mov    %ecx,%edx
    63ed:	e9 46 00 00 00       	jmp    6438 <AES_encrypt.60>
    63f2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000063f8 <AES_encrypt.dummy.61>:
    63f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    63ff:	02 00 00 
    6402:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6409:	02 00 00 
    640c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6413:	02 00 00 
    6416:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    641d:	02 00 00 
    6420:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6427:	02 00 00 
    642a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6431:	02 00 00 
    6434:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006438 <AES_encrypt.60>:
    6438:	48 8d 0d c1 23 03 00 	lea    0x323c1(%rip),%rcx        # 38800 <Te2>
    643f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6442:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6446:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    644d:	00 00 00 
    6450:	41 ff d6             	call   *%r14
    6453:	41 8b 0e             	mov    (%r14),%ecx
    6456:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    645c:	89 c9                	mov    %ecx,%ecx
    645e:	89 ca                	mov    %ecx,%edx
    6460:	48 8d 0d 99 27 03 00 	lea    0x32799(%rip),%rcx        # 38c00 <Te3>
    6467:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    646a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    646e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6475:	00 00 00 
    6478:	41 ff d6             	call   *%r14
    647b:	49 8b 0e             	mov    (%r14),%rcx
    647e:	e9 49 00 00 00       	jmp    64cc <AES_encrypt.61>
    6483:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    648a:	00 00 

000000000000648c <AES_encrypt.dummy.62>:
    648c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6493:	02 00 00 
    6496:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    649d:	02 00 00 
    64a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64a7:	02 00 00 
    64aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64b1:	02 00 00 
    64b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64bb:	02 00 00 
    64be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    64c5:	02 00 00 
    64c8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000064cc <AES_encrypt.61>:
    64cc:	33 41 48             	xor    0x48(%rcx),%eax
    64cf:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    64d3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    64da:	00 00 00 
    64dd:	41 ff d6             	call   *%r14
    64e0:	41 89 06             	mov    %eax,(%r14)
    64e3:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    64e7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    64ee:	00 00 00 
    64f1:	41 ff d6             	call   *%r14
    64f4:	41 8b 06             	mov    (%r14),%eax
    64f7:	c1 e8 18             	shr    $0x18,%eax
    64fa:	89 c0                	mov    %eax,%eax
    64fc:	89 c1                	mov    %eax,%ecx
    64fe:	48 8d 05 fb 1a 03 00 	lea    0x31afb(%rip),%rax        # 38000 <Te0>
    6505:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6509:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6510:	00 00 00 
    6513:	41 ff d6             	call   *%r14
    6516:	41 8b 06             	mov    (%r14),%eax
    6519:	e9 42 00 00 00       	jmp    6560 <AES_encrypt.62>
    651e:	66 90                	xchg   %ax,%ax

0000000000006520 <AES_encrypt.dummy.63>:
    6520:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6527:	02 00 00 
    652a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6531:	02 00 00 
    6534:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    653b:	02 00 00 
    653e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6545:	02 00 00 
    6548:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    654f:	02 00 00 
    6552:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6559:	02 00 00 
    655c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006560 <AES_encrypt.62>:
    6560:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    6564:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    656b:	00 00 00 
    656e:	41 ff d6             	call   *%r14
    6571:	41 8b 0e             	mov    (%r14),%ecx
    6574:	c1 e9 10             	shr    $0x10,%ecx
    6577:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    657d:	89 c9                	mov    %ecx,%ecx
    657f:	89 ca                	mov    %ecx,%edx
    6581:	48 8d 0d 78 1e 03 00 	lea    0x31e78(%rip),%rcx        # 38400 <Te1>
    6588:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    658b:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    658f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6596:	00 00 00 
    6599:	41 ff d6             	call   *%r14
    659c:	41 8b 0e             	mov    (%r14),%ecx
    659f:	e9 50 00 00 00       	jmp    65f4 <AES_encrypt.63>
    65a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65ab:	02 00 00 
    65ae:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000065b4 <AES_encrypt.dummy.64>:
    65b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65bb:	02 00 00 
    65be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65c5:	02 00 00 
    65c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65cf:	02 00 00 
    65d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65d9:	02 00 00 
    65dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65e3:	02 00 00 
    65e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    65ed:	02 00 00 
    65f0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000065f4 <AES_encrypt.63>:
    65f4:	c1 e9 08             	shr    $0x8,%ecx
    65f7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    65fd:	89 c9                	mov    %ecx,%ecx
    65ff:	89 ca                	mov    %ecx,%edx
    6601:	48 8d 0d f8 21 03 00 	lea    0x321f8(%rip),%rcx        # 38800 <Te2>
    6608:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    660b:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    660f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6616:	00 00 00 
    6619:	41 ff d6             	call   *%r14
    661c:	41 8b 0e             	mov    (%r14),%ecx
    661f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6625:	89 c9                	mov    %ecx,%ecx
    6627:	89 ca                	mov    %ecx,%edx
    6629:	e9 46 00 00 00       	jmp    6674 <AES_encrypt.64>
    662e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006634 <AES_encrypt.dummy.65>:
    6634:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    663b:	02 00 00 
    663e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6645:	02 00 00 
    6648:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    664f:	02 00 00 
    6652:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6659:	02 00 00 
    665c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6663:	02 00 00 
    6666:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    666d:	02 00 00 
    6670:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006674 <AES_encrypt.64>:
    6674:	48 8d 0d 85 25 03 00 	lea    0x32585(%rip),%rcx        # 38c00 <Te3>
    667b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    667e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6682:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6689:	00 00 00 
    668c:	41 ff d6             	call   *%r14
    668f:	49 8b 0e             	mov    (%r14),%rcx
    6692:	33 41 4c             	xor    0x4c(%rcx),%eax
    6695:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6699:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    66a0:	00 00 00 
    66a3:	41 ff d6             	call   *%r14
    66a6:	41 89 06             	mov    %eax,(%r14)
    66a9:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    66ad:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    66b4:	00 00 00 
    66b7:	41 ff d6             	call   *%r14
    66ba:	41 8b 06             	mov    (%r14),%eax
    66bd:	e9 46 00 00 00       	jmp    6708 <AES_encrypt.65>
    66c2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000066c8 <AES_encrypt.dummy.66>:
    66c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66cf:	02 00 00 
    66d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66d9:	02 00 00 
    66dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66e3:	02 00 00 
    66e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66ed:	02 00 00 
    66f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    66f7:	02 00 00 
    66fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6701:	02 00 00 
    6704:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006708 <AES_encrypt.65>:
    6708:	c1 e8 18             	shr    $0x18,%eax
    670b:	89 c0                	mov    %eax,%eax
    670d:	89 c1                	mov    %eax,%ecx
    670f:	48 8d 05 ea 18 03 00 	lea    0x318ea(%rip),%rax        # 38000 <Te0>
    6716:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    671a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6721:	00 00 00 
    6724:	41 ff d6             	call   *%r14
    6727:	41 8b 06             	mov    (%r14),%eax
    672a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    672e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6735:	00 00 00 
    6738:	41 ff d6             	call   *%r14
    673b:	41 8b 0e             	mov    (%r14),%ecx
    673e:	c1 e9 10             	shr    $0x10,%ecx
    6741:	e9 42 00 00 00       	jmp    6788 <AES_encrypt.66>
    6746:	66 90                	xchg   %ax,%ax

0000000000006748 <AES_encrypt.dummy.67>:
    6748:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    674f:	02 00 00 
    6752:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6759:	02 00 00 
    675c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6763:	02 00 00 
    6766:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    676d:	02 00 00 
    6770:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6777:	02 00 00 
    677a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6781:	02 00 00 
    6784:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006788 <AES_encrypt.66>:
    6788:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    678e:	89 c9                	mov    %ecx,%ecx
    6790:	89 ca                	mov    %ecx,%edx
    6792:	48 8d 0d 67 1c 03 00 	lea    0x31c67(%rip),%rcx        # 38400 <Te1>
    6799:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    679c:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    67a0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    67a7:	00 00 00 
    67aa:	41 ff d6             	call   *%r14
    67ad:	41 8b 0e             	mov    (%r14),%ecx
    67b0:	c1 e9 08             	shr    $0x8,%ecx
    67b3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    67b9:	89 c9                	mov    %ecx,%ecx
    67bb:	89 ca                	mov    %ecx,%edx
    67bd:	e9 46 00 00 00       	jmp    6808 <AES_encrypt.67>
    67c2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000067c8 <AES_encrypt.dummy.68>:
    67c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67cf:	02 00 00 
    67d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67d9:	02 00 00 
    67dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67e3:	02 00 00 
    67e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67ed:	02 00 00 
    67f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    67f7:	02 00 00 
    67fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6801:	02 00 00 
    6804:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006808 <AES_encrypt.67>:
    6808:	48 8d 0d f1 1f 03 00 	lea    0x31ff1(%rip),%rcx        # 38800 <Te2>
    680f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6812:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6816:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    681d:	00 00 00 
    6820:	41 ff d6             	call   *%r14
    6823:	41 8b 0e             	mov    (%r14),%ecx
    6826:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    682c:	89 c9                	mov    %ecx,%ecx
    682e:	89 ca                	mov    %ecx,%edx
    6830:	48 8d 0d c9 23 03 00 	lea    0x323c9(%rip),%rcx        # 38c00 <Te3>
    6837:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    683a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    683e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6845:	00 00 00 
    6848:	41 ff d6             	call   *%r14
    684b:	49 8b 0e             	mov    (%r14),%rcx
    684e:	e9 49 00 00 00       	jmp    689c <AES_encrypt.68>
    6853:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    685a:	00 00 

000000000000685c <AES_encrypt.dummy.69>:
    685c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6863:	02 00 00 
    6866:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    686d:	02 00 00 
    6870:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6877:	02 00 00 
    687a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6881:	02 00 00 
    6884:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    688b:	02 00 00 
    688e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6895:	02 00 00 
    6898:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000689c <AES_encrypt.68>:
    689c:	33 41 50             	xor    0x50(%rcx),%eax
    689f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    68a3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    68aa:	00 00 00 
    68ad:	41 ff d6             	call   *%r14
    68b0:	41 89 06             	mov    %eax,(%r14)
    68b3:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    68b7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    68be:	00 00 00 
    68c1:	41 ff d6             	call   *%r14
    68c4:	41 8b 06             	mov    (%r14),%eax
    68c7:	c1 e8 18             	shr    $0x18,%eax
    68ca:	89 c0                	mov    %eax,%eax
    68cc:	89 c1                	mov    %eax,%ecx
    68ce:	48 8d 05 2b 17 03 00 	lea    0x3172b(%rip),%rax        # 38000 <Te0>
    68d5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    68d9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    68e0:	00 00 00 
    68e3:	41 ff d6             	call   *%r14
    68e6:	41 8b 06             	mov    (%r14),%eax
    68e9:	e9 42 00 00 00       	jmp    6930 <AES_encrypt.69>
    68ee:	66 90                	xchg   %ax,%ax

00000000000068f0 <AES_encrypt.dummy.70>:
    68f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    68f7:	02 00 00 
    68fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6901:	02 00 00 
    6904:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    690b:	02 00 00 
    690e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6915:	02 00 00 
    6918:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    691f:	02 00 00 
    6922:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6929:	02 00 00 
    692c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006930 <AES_encrypt.69>:
    6930:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6934:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    693b:	00 00 00 
    693e:	41 ff d6             	call   *%r14
    6941:	41 8b 0e             	mov    (%r14),%ecx
    6944:	c1 e9 10             	shr    $0x10,%ecx
    6947:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    694d:	89 c9                	mov    %ecx,%ecx
    694f:	89 ca                	mov    %ecx,%edx
    6951:	48 8d 0d a8 1a 03 00 	lea    0x31aa8(%rip),%rcx        # 38400 <Te1>
    6958:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    695b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    695f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6966:	00 00 00 
    6969:	41 ff d6             	call   *%r14
    696c:	41 8b 0e             	mov    (%r14),%ecx
    696f:	e9 50 00 00 00       	jmp    69c4 <AES_encrypt.70>
    6974:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    697b:	02 00 00 
    697e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006984 <AES_encrypt.dummy.71>:
    6984:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    698b:	02 00 00 
    698e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6995:	02 00 00 
    6998:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    699f:	02 00 00 
    69a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69a9:	02 00 00 
    69ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69b3:	02 00 00 
    69b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    69bd:	02 00 00 
    69c0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000069c4 <AES_encrypt.70>:
    69c4:	c1 e9 08             	shr    $0x8,%ecx
    69c7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    69cd:	89 c9                	mov    %ecx,%ecx
    69cf:	89 ca                	mov    %ecx,%edx
    69d1:	48 8d 0d 28 1e 03 00 	lea    0x31e28(%rip),%rcx        # 38800 <Te2>
    69d8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    69db:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    69df:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    69e6:	00 00 00 
    69e9:	41 ff d6             	call   *%r14
    69ec:	41 8b 0e             	mov    (%r14),%ecx
    69ef:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    69f5:	89 c9                	mov    %ecx,%ecx
    69f7:	89 ca                	mov    %ecx,%edx
    69f9:	e9 46 00 00 00       	jmp    6a44 <AES_encrypt.71>
    69fe:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006a04 <AES_encrypt.dummy.72>:
    6a04:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a0b:	02 00 00 
    6a0e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a15:	02 00 00 
    6a18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a1f:	02 00 00 
    6a22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a29:	02 00 00 
    6a2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a33:	02 00 00 
    6a36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a3d:	02 00 00 
    6a40:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006a44 <AES_encrypt.71>:
    6a44:	48 8d 0d b5 21 03 00 	lea    0x321b5(%rip),%rcx        # 38c00 <Te3>
    6a4b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6a4e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6a52:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6a59:	00 00 00 
    6a5c:	41 ff d6             	call   *%r14
    6a5f:	49 8b 0e             	mov    (%r14),%rcx
    6a62:	33 41 54             	xor    0x54(%rcx),%eax
    6a65:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6a69:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6a70:	00 00 00 
    6a73:	41 ff d6             	call   *%r14
    6a76:	41 89 06             	mov    %eax,(%r14)
    6a79:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6a7d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6a84:	00 00 00 
    6a87:	41 ff d6             	call   *%r14
    6a8a:	41 8b 06             	mov    (%r14),%eax
    6a8d:	e9 46 00 00 00       	jmp    6ad8 <AES_encrypt.72>
    6a92:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006a98 <AES_encrypt.dummy.73>:
    6a98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6a9f:	02 00 00 
    6aa2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6aa9:	02 00 00 
    6aac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ab3:	02 00 00 
    6ab6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6abd:	02 00 00 
    6ac0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ac7:	02 00 00 
    6aca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ad1:	02 00 00 
    6ad4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006ad8 <AES_encrypt.72>:
    6ad8:	c1 e8 18             	shr    $0x18,%eax
    6adb:	89 c0                	mov    %eax,%eax
    6add:	89 c1                	mov    %eax,%ecx
    6adf:	48 8d 05 1a 15 03 00 	lea    0x3151a(%rip),%rax        # 38000 <Te0>
    6ae6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6aea:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6af1:	00 00 00 
    6af4:	41 ff d6             	call   *%r14
    6af7:	41 8b 06             	mov    (%r14),%eax
    6afa:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6afe:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6b05:	00 00 00 
    6b08:	41 ff d6             	call   *%r14
    6b0b:	41 8b 0e             	mov    (%r14),%ecx
    6b0e:	c1 e9 10             	shr    $0x10,%ecx
    6b11:	e9 42 00 00 00       	jmp    6b58 <AES_encrypt.73>
    6b16:	66 90                	xchg   %ax,%ax

0000000000006b18 <AES_encrypt.dummy.74>:
    6b18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b1f:	02 00 00 
    6b22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b29:	02 00 00 
    6b2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b33:	02 00 00 
    6b36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b3d:	02 00 00 
    6b40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b47:	02 00 00 
    6b4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b51:	02 00 00 
    6b54:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006b58 <AES_encrypt.73>:
    6b58:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6b5e:	89 c9                	mov    %ecx,%ecx
    6b60:	89 ca                	mov    %ecx,%edx
    6b62:	48 8d 0d 97 18 03 00 	lea    0x31897(%rip),%rcx        # 38400 <Te1>
    6b69:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6b6c:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6b70:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6b77:	00 00 00 
    6b7a:	41 ff d6             	call   *%r14
    6b7d:	41 8b 0e             	mov    (%r14),%ecx
    6b80:	c1 e9 08             	shr    $0x8,%ecx
    6b83:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6b89:	89 c9                	mov    %ecx,%ecx
    6b8b:	89 ca                	mov    %ecx,%edx
    6b8d:	e9 46 00 00 00       	jmp    6bd8 <AES_encrypt.74>
    6b92:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006b98 <AES_encrypt.dummy.75>:
    6b98:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6b9f:	02 00 00 
    6ba2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ba9:	02 00 00 
    6bac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bb3:	02 00 00 
    6bb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bbd:	02 00 00 
    6bc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bc7:	02 00 00 
    6bca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6bd1:	02 00 00 
    6bd4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006bd8 <AES_encrypt.74>:
    6bd8:	48 8d 0d 21 1c 03 00 	lea    0x31c21(%rip),%rcx        # 38800 <Te2>
    6bdf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6be2:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6be6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6bed:	00 00 00 
    6bf0:	41 ff d6             	call   *%r14
    6bf3:	41 8b 0e             	mov    (%r14),%ecx
    6bf6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6bfc:	89 c9                	mov    %ecx,%ecx
    6bfe:	89 ca                	mov    %ecx,%edx
    6c00:	48 8d 0d f9 1f 03 00 	lea    0x31ff9(%rip),%rcx        # 38c00 <Te3>
    6c07:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6c0a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6c0e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6c15:	00 00 00 
    6c18:	41 ff d6             	call   *%r14
    6c1b:	49 8b 0e             	mov    (%r14),%rcx
    6c1e:	e9 49 00 00 00       	jmp    6c6c <AES_encrypt.75>
    6c23:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    6c2a:	00 00 

0000000000006c2c <AES_encrypt.dummy.76>:
    6c2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c33:	02 00 00 
    6c36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c3d:	02 00 00 
    6c40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c47:	02 00 00 
    6c4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c51:	02 00 00 
    6c54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c5b:	02 00 00 
    6c5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6c65:	02 00 00 
    6c68:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006c6c <AES_encrypt.75>:
    6c6c:	33 41 58             	xor    0x58(%rcx),%eax
    6c6f:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6c73:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6c7a:	00 00 00 
    6c7d:	41 ff d6             	call   *%r14
    6c80:	41 89 06             	mov    %eax,(%r14)
    6c83:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    6c87:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6c8e:	00 00 00 
    6c91:	41 ff d6             	call   *%r14
    6c94:	41 8b 06             	mov    (%r14),%eax
    6c97:	c1 e8 18             	shr    $0x18,%eax
    6c9a:	89 c0                	mov    %eax,%eax
    6c9c:	89 c1                	mov    %eax,%ecx
    6c9e:	48 8d 05 5b 13 03 00 	lea    0x3135b(%rip),%rax        # 38000 <Te0>
    6ca5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6ca9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6cb0:	00 00 00 
    6cb3:	41 ff d6             	call   *%r14
    6cb6:	41 8b 06             	mov    (%r14),%eax
    6cb9:	e9 42 00 00 00       	jmp    6d00 <AES_encrypt.76>
    6cbe:	66 90                	xchg   %ax,%ax

0000000000006cc0 <AES_encrypt.dummy.77>:
    6cc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cc7:	02 00 00 
    6cca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cd1:	02 00 00 
    6cd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cdb:	02 00 00 
    6cde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ce5:	02 00 00 
    6ce8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cef:	02 00 00 
    6cf2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6cf9:	02 00 00 
    6cfc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006d00 <AES_encrypt.76>:
    6d00:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    6d04:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6d0b:	00 00 00 
    6d0e:	41 ff d6             	call   *%r14
    6d11:	41 8b 0e             	mov    (%r14),%ecx
    6d14:	c1 e9 10             	shr    $0x10,%ecx
    6d17:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6d1d:	89 c9                	mov    %ecx,%ecx
    6d1f:	89 ca                	mov    %ecx,%edx
    6d21:	48 8d 0d d8 16 03 00 	lea    0x316d8(%rip),%rcx        # 38400 <Te1>
    6d28:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6d2b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    6d2f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6d36:	00 00 00 
    6d39:	41 ff d6             	call   *%r14
    6d3c:	41 8b 0e             	mov    (%r14),%ecx
    6d3f:	e9 50 00 00 00       	jmp    6d94 <AES_encrypt.77>
    6d44:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d4b:	02 00 00 
    6d4e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006d54 <AES_encrypt.dummy.78>:
    6d54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d5b:	02 00 00 
    6d5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d65:	02 00 00 
    6d68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d6f:	02 00 00 
    6d72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d79:	02 00 00 
    6d7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d83:	02 00 00 
    6d86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6d8d:	02 00 00 
    6d90:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006d94 <AES_encrypt.77>:
    6d94:	c1 e9 08             	shr    $0x8,%ecx
    6d97:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6d9d:	89 c9                	mov    %ecx,%ecx
    6d9f:	89 ca                	mov    %ecx,%edx
    6da1:	48 8d 0d 58 1a 03 00 	lea    0x31a58(%rip),%rcx        # 38800 <Te2>
    6da8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6dab:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    6daf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6db6:	00 00 00 
    6db9:	41 ff d6             	call   *%r14
    6dbc:	41 8b 0e             	mov    (%r14),%ecx
    6dbf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6dc5:	89 c9                	mov    %ecx,%ecx
    6dc7:	89 ca                	mov    %ecx,%edx
    6dc9:	e9 46 00 00 00       	jmp    6e14 <AES_encrypt.78>
    6dce:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006dd4 <AES_encrypt.dummy.79>:
    6dd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ddb:	02 00 00 
    6dde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6de5:	02 00 00 
    6de8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6def:	02 00 00 
    6df2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6df9:	02 00 00 
    6dfc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e03:	02 00 00 
    6e06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e0d:	02 00 00 
    6e10:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006e14 <AES_encrypt.78>:
    6e14:	48 8d 0d e5 1d 03 00 	lea    0x31de5(%rip),%rcx        # 38c00 <Te3>
    6e1b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6e1e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6e22:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6e29:	00 00 00 
    6e2c:	41 ff d6             	call   *%r14
    6e2f:	49 8b 0e             	mov    (%r14),%rcx
    6e32:	33 41 5c             	xor    0x5c(%rcx),%eax
    6e35:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    6e39:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6e40:	00 00 00 
    6e43:	41 ff d6             	call   *%r14
    6e46:	41 89 06             	mov    %eax,(%r14)
    6e49:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    6e4d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6e54:	00 00 00 
    6e57:	41 ff d6             	call   *%r14
    6e5a:	41 8b 06             	mov    (%r14),%eax
    6e5d:	e9 46 00 00 00       	jmp    6ea8 <AES_encrypt.79>
    6e62:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006e68 <AES_encrypt.dummy.80>:
    6e68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e6f:	02 00 00 
    6e72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e79:	02 00 00 
    6e7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e83:	02 00 00 
    6e86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e8d:	02 00 00 
    6e90:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6e97:	02 00 00 
    6e9a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ea1:	02 00 00 
    6ea4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006ea8 <AES_encrypt.79>:
    6ea8:	c1 e8 18             	shr    $0x18,%eax
    6eab:	89 c0                	mov    %eax,%eax
    6ead:	89 c1                	mov    %eax,%ecx
    6eaf:	48 8d 05 4a 11 03 00 	lea    0x3114a(%rip),%rax        # 38000 <Te0>
    6eb6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    6eba:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6ec1:	00 00 00 
    6ec4:	41 ff d6             	call   *%r14
    6ec7:	41 8b 06             	mov    (%r14),%eax
    6eca:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    6ece:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6ed5:	00 00 00 
    6ed8:	41 ff d6             	call   *%r14
    6edb:	41 8b 0e             	mov    (%r14),%ecx
    6ede:	c1 e9 10             	shr    $0x10,%ecx
    6ee1:	e9 42 00 00 00       	jmp    6f28 <AES_encrypt.80>
    6ee6:	66 90                	xchg   %ax,%ax

0000000000006ee8 <AES_encrypt.dummy.81>:
    6ee8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6eef:	02 00 00 
    6ef2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6ef9:	02 00 00 
    6efc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f03:	02 00 00 
    6f06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f0d:	02 00 00 
    6f10:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f17:	02 00 00 
    6f1a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f21:	02 00 00 
    6f24:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006f28 <AES_encrypt.80>:
    6f28:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6f2e:	89 c9                	mov    %ecx,%ecx
    6f30:	89 ca                	mov    %ecx,%edx
    6f32:	48 8d 0d c7 14 03 00 	lea    0x314c7(%rip),%rcx        # 38400 <Te1>
    6f39:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6f3c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    6f40:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6f47:	00 00 00 
    6f4a:	41 ff d6             	call   *%r14
    6f4d:	41 8b 0e             	mov    (%r14),%ecx
    6f50:	c1 e9 08             	shr    $0x8,%ecx
    6f53:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6f59:	89 c9                	mov    %ecx,%ecx
    6f5b:	89 ca                	mov    %ecx,%edx
    6f5d:	e9 46 00 00 00       	jmp    6fa8 <AES_encrypt.81>
    6f62:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000006f68 <AES_encrypt.dummy.82>:
    6f68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f6f:	02 00 00 
    6f72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f79:	02 00 00 
    6f7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f83:	02 00 00 
    6f86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f8d:	02 00 00 
    6f90:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6f97:	02 00 00 
    6f9a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    6fa1:	02 00 00 
    6fa4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000006fa8 <AES_encrypt.81>:
    6fa8:	48 8d 0d 51 18 03 00 	lea    0x31851(%rip),%rcx        # 38800 <Te2>
    6faf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6fb2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    6fb6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6fbd:	00 00 00 
    6fc0:	41 ff d6             	call   *%r14
    6fc3:	41 8b 0e             	mov    (%r14),%ecx
    6fc6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    6fcc:	89 c9                	mov    %ecx,%ecx
    6fce:	89 ca                	mov    %ecx,%edx
    6fd0:	48 8d 0d 29 1c 03 00 	lea    0x31c29(%rip),%rcx        # 38c00 <Te3>
    6fd7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    6fda:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    6fde:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    6fe5:	00 00 00 
    6fe8:	41 ff d6             	call   *%r14
    6feb:	49 8b 0e             	mov    (%r14),%rcx
    6fee:	e9 49 00 00 00       	jmp    703c <AES_encrypt.82>
    6ff3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    6ffa:	00 00 

0000000000006ffc <AES_encrypt.dummy.83>:
    6ffc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7003:	02 00 00 
    7006:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    700d:	02 00 00 
    7010:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7017:	02 00 00 
    701a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7021:	02 00 00 
    7024:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    702b:	02 00 00 
    702e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7035:	02 00 00 
    7038:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000703c <AES_encrypt.82>:
    703c:	33 41 60             	xor    0x60(%rcx),%eax
    703f:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7043:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    704a:	00 00 00 
    704d:	41 ff d6             	call   *%r14
    7050:	41 89 06             	mov    %eax,(%r14)
    7053:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    7057:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    705e:	00 00 00 
    7061:	41 ff d6             	call   *%r14
    7064:	41 8b 06             	mov    (%r14),%eax
    7067:	c1 e8 18             	shr    $0x18,%eax
    706a:	89 c0                	mov    %eax,%eax
    706c:	89 c1                	mov    %eax,%ecx
    706e:	48 8d 05 8b 0f 03 00 	lea    0x30f8b(%rip),%rax        # 38000 <Te0>
    7075:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7079:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7080:	00 00 00 
    7083:	41 ff d6             	call   *%r14
    7086:	41 8b 06             	mov    (%r14),%eax
    7089:	e9 42 00 00 00       	jmp    70d0 <AES_encrypt.83>
    708e:	66 90                	xchg   %ax,%ax

0000000000007090 <AES_encrypt.dummy.84>:
    7090:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7097:	02 00 00 
    709a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70a1:	02 00 00 
    70a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70ab:	02 00 00 
    70ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70b5:	02 00 00 
    70b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70bf:	02 00 00 
    70c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    70c9:	02 00 00 
    70cc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000070d0 <AES_encrypt.83>:
    70d0:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    70d4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    70db:	00 00 00 
    70de:	41 ff d6             	call   *%r14
    70e1:	41 8b 0e             	mov    (%r14),%ecx
    70e4:	c1 e9 10             	shr    $0x10,%ecx
    70e7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    70ed:	89 c9                	mov    %ecx,%ecx
    70ef:	89 ca                	mov    %ecx,%edx
    70f1:	48 8d 0d 08 13 03 00 	lea    0x31308(%rip),%rcx        # 38400 <Te1>
    70f8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    70fb:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    70ff:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7106:	00 00 00 
    7109:	41 ff d6             	call   *%r14
    710c:	41 8b 0e             	mov    (%r14),%ecx
    710f:	e9 50 00 00 00       	jmp    7164 <AES_encrypt.84>
    7114:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    711b:	02 00 00 
    711e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007124 <AES_encrypt.dummy.85>:
    7124:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    712b:	02 00 00 
    712e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7135:	02 00 00 
    7138:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    713f:	02 00 00 
    7142:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7149:	02 00 00 
    714c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7153:	02 00 00 
    7156:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    715d:	02 00 00 
    7160:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007164 <AES_encrypt.84>:
    7164:	c1 e9 08             	shr    $0x8,%ecx
    7167:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    716d:	89 c9                	mov    %ecx,%ecx
    716f:	89 ca                	mov    %ecx,%edx
    7171:	48 8d 0d 88 16 03 00 	lea    0x31688(%rip),%rcx        # 38800 <Te2>
    7178:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    717b:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    717f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7186:	00 00 00 
    7189:	41 ff d6             	call   *%r14
    718c:	41 8b 0e             	mov    (%r14),%ecx
    718f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7195:	89 c9                	mov    %ecx,%ecx
    7197:	89 ca                	mov    %ecx,%edx
    7199:	e9 46 00 00 00       	jmp    71e4 <AES_encrypt.85>
    719e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000071a4 <AES_encrypt.dummy.86>:
    71a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71ab:	02 00 00 
    71ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71b5:	02 00 00 
    71b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71bf:	02 00 00 
    71c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71c9:	02 00 00 
    71cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71d3:	02 00 00 
    71d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    71dd:	02 00 00 
    71e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000071e4 <AES_encrypt.85>:
    71e4:	48 8d 0d 15 1a 03 00 	lea    0x31a15(%rip),%rcx        # 38c00 <Te3>
    71eb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    71ee:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    71f2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    71f9:	00 00 00 
    71fc:	41 ff d6             	call   *%r14
    71ff:	49 8b 0e             	mov    (%r14),%rcx
    7202:	33 41 64             	xor    0x64(%rcx),%eax
    7205:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7209:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7210:	00 00 00 
    7213:	41 ff d6             	call   *%r14
    7216:	41 89 06             	mov    %eax,(%r14)
    7219:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    721d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7224:	00 00 00 
    7227:	41 ff d6             	call   *%r14
    722a:	41 8b 06             	mov    (%r14),%eax
    722d:	e9 46 00 00 00       	jmp    7278 <AES_encrypt.86>
    7232:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007238 <AES_encrypt.dummy.87>:
    7238:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    723f:	02 00 00 
    7242:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7249:	02 00 00 
    724c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7253:	02 00 00 
    7256:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    725d:	02 00 00 
    7260:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7267:	02 00 00 
    726a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7271:	02 00 00 
    7274:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007278 <AES_encrypt.86>:
    7278:	c1 e8 18             	shr    $0x18,%eax
    727b:	89 c0                	mov    %eax,%eax
    727d:	89 c1                	mov    %eax,%ecx
    727f:	48 8d 05 7a 0d 03 00 	lea    0x30d7a(%rip),%rax        # 38000 <Te0>
    7286:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    728a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7291:	00 00 00 
    7294:	41 ff d6             	call   *%r14
    7297:	41 8b 06             	mov    (%r14),%eax
    729a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    729e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    72a5:	00 00 00 
    72a8:	41 ff d6             	call   *%r14
    72ab:	41 8b 0e             	mov    (%r14),%ecx
    72ae:	c1 e9 10             	shr    $0x10,%ecx
    72b1:	e9 42 00 00 00       	jmp    72f8 <AES_encrypt.87>
    72b6:	66 90                	xchg   %ax,%ax

00000000000072b8 <AES_encrypt.dummy.88>:
    72b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72bf:	02 00 00 
    72c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72c9:	02 00 00 
    72cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72d3:	02 00 00 
    72d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72dd:	02 00 00 
    72e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72e7:	02 00 00 
    72ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    72f1:	02 00 00 
    72f4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000072f8 <AES_encrypt.87>:
    72f8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    72fe:	89 c9                	mov    %ecx,%ecx
    7300:	89 ca                	mov    %ecx,%edx
    7302:	48 8d 0d f7 10 03 00 	lea    0x310f7(%rip),%rcx        # 38400 <Te1>
    7309:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    730c:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    7310:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7317:	00 00 00 
    731a:	41 ff d6             	call   *%r14
    731d:	41 8b 0e             	mov    (%r14),%ecx
    7320:	c1 e9 08             	shr    $0x8,%ecx
    7323:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7329:	89 c9                	mov    %ecx,%ecx
    732b:	89 ca                	mov    %ecx,%edx
    732d:	e9 46 00 00 00       	jmp    7378 <AES_encrypt.88>
    7332:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007338 <AES_encrypt.dummy.89>:
    7338:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    733f:	02 00 00 
    7342:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7349:	02 00 00 
    734c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7353:	02 00 00 
    7356:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    735d:	02 00 00 
    7360:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7367:	02 00 00 
    736a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7371:	02 00 00 
    7374:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007378 <AES_encrypt.88>:
    7378:	48 8d 0d 81 14 03 00 	lea    0x31481(%rip),%rcx        # 38800 <Te2>
    737f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7382:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    7386:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    738d:	00 00 00 
    7390:	41 ff d6             	call   *%r14
    7393:	41 8b 0e             	mov    (%r14),%ecx
    7396:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    739c:	89 c9                	mov    %ecx,%ecx
    739e:	89 ca                	mov    %ecx,%edx
    73a0:	48 8d 0d 59 18 03 00 	lea    0x31859(%rip),%rcx        # 38c00 <Te3>
    73a7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    73aa:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    73ae:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    73b5:	00 00 00 
    73b8:	41 ff d6             	call   *%r14
    73bb:	49 8b 0e             	mov    (%r14),%rcx
    73be:	e9 49 00 00 00       	jmp    740c <AES_encrypt.89>
    73c3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    73ca:	00 00 

00000000000073cc <AES_encrypt.dummy.90>:
    73cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73d3:	02 00 00 
    73d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73dd:	02 00 00 
    73e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73e7:	02 00 00 
    73ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73f1:	02 00 00 
    73f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    73fb:	02 00 00 
    73fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7405:	02 00 00 
    7408:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000740c <AES_encrypt.89>:
    740c:	33 41 68             	xor    0x68(%rcx),%eax
    740f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7413:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    741a:	00 00 00 
    741d:	41 ff d6             	call   *%r14
    7420:	41 89 06             	mov    %eax,(%r14)
    7423:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    7427:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    742e:	00 00 00 
    7431:	41 ff d6             	call   *%r14
    7434:	41 8b 06             	mov    (%r14),%eax
    7437:	c1 e8 18             	shr    $0x18,%eax
    743a:	89 c0                	mov    %eax,%eax
    743c:	89 c1                	mov    %eax,%ecx
    743e:	48 8d 05 bb 0b 03 00 	lea    0x30bbb(%rip),%rax        # 38000 <Te0>
    7445:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7449:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7450:	00 00 00 
    7453:	41 ff d6             	call   *%r14
    7456:	41 8b 06             	mov    (%r14),%eax
    7459:	e9 42 00 00 00       	jmp    74a0 <AES_encrypt.90>
    745e:	66 90                	xchg   %ax,%ax

0000000000007460 <AES_encrypt.dummy.91>:
    7460:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7467:	02 00 00 
    746a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7471:	02 00 00 
    7474:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    747b:	02 00 00 
    747e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7485:	02 00 00 
    7488:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    748f:	02 00 00 
    7492:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7499:	02 00 00 
    749c:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000074a0 <AES_encrypt.90>:
    74a0:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    74a4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    74ab:	00 00 00 
    74ae:	41 ff d6             	call   *%r14
    74b1:	41 8b 0e             	mov    (%r14),%ecx
    74b4:	c1 e9 10             	shr    $0x10,%ecx
    74b7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    74bd:	89 c9                	mov    %ecx,%ecx
    74bf:	89 ca                	mov    %ecx,%edx
    74c1:	48 8d 0d 38 0f 03 00 	lea    0x30f38(%rip),%rcx        # 38400 <Te1>
    74c8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    74cb:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    74cf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    74d6:	00 00 00 
    74d9:	41 ff d6             	call   *%r14
    74dc:	41 8b 0e             	mov    (%r14),%ecx
    74df:	e9 50 00 00 00       	jmp    7534 <AES_encrypt.91>
    74e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74eb:	02 00 00 
    74ee:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000074f4 <AES_encrypt.dummy.92>:
    74f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    74fb:	02 00 00 
    74fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7505:	02 00 00 
    7508:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    750f:	02 00 00 
    7512:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7519:	02 00 00 
    751c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7523:	02 00 00 
    7526:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    752d:	02 00 00 
    7530:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007534 <AES_encrypt.91>:
    7534:	c1 e9 08             	shr    $0x8,%ecx
    7537:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    753d:	89 c9                	mov    %ecx,%ecx
    753f:	89 ca                	mov    %ecx,%edx
    7541:	48 8d 0d b8 12 03 00 	lea    0x312b8(%rip),%rcx        # 38800 <Te2>
    7548:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    754b:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    754f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7556:	00 00 00 
    7559:	41 ff d6             	call   *%r14
    755c:	41 8b 0e             	mov    (%r14),%ecx
    755f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7565:	89 c9                	mov    %ecx,%ecx
    7567:	89 ca                	mov    %ecx,%edx
    7569:	e9 46 00 00 00       	jmp    75b4 <AES_encrypt.92>
    756e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007574 <AES_encrypt.dummy.93>:
    7574:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    757b:	02 00 00 
    757e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7585:	02 00 00 
    7588:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    758f:	02 00 00 
    7592:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7599:	02 00 00 
    759c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75a3:	02 00 00 
    75a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    75ad:	02 00 00 
    75b0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000075b4 <AES_encrypt.92>:
    75b4:	48 8d 0d 45 16 03 00 	lea    0x31645(%rip),%rcx        # 38c00 <Te3>
    75bb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    75be:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    75c2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    75c9:	00 00 00 
    75cc:	41 ff d6             	call   *%r14
    75cf:	49 8b 0e             	mov    (%r14),%rcx
    75d2:	33 41 6c             	xor    0x6c(%rcx),%eax
    75d5:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    75d9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    75e0:	00 00 00 
    75e3:	41 ff d6             	call   *%r14
    75e6:	41 89 06             	mov    %eax,(%r14)
    75e9:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    75ed:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    75f4:	00 00 00 
    75f7:	41 ff d6             	call   *%r14
    75fa:	41 8b 06             	mov    (%r14),%eax
    75fd:	e9 46 00 00 00       	jmp    7648 <AES_encrypt.93>
    7602:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007608 <AES_encrypt.dummy.94>:
    7608:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    760f:	02 00 00 
    7612:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7619:	02 00 00 
    761c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7623:	02 00 00 
    7626:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    762d:	02 00 00 
    7630:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7637:	02 00 00 
    763a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7641:	02 00 00 
    7644:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007648 <AES_encrypt.93>:
    7648:	c1 e8 18             	shr    $0x18,%eax
    764b:	89 c0                	mov    %eax,%eax
    764d:	89 c1                	mov    %eax,%ecx
    764f:	48 8d 05 aa 09 03 00 	lea    0x309aa(%rip),%rax        # 38000 <Te0>
    7656:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    765a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7661:	00 00 00 
    7664:	41 ff d6             	call   *%r14
    7667:	41 8b 06             	mov    (%r14),%eax
    766a:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    766e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7675:	00 00 00 
    7678:	41 ff d6             	call   *%r14
    767b:	41 8b 0e             	mov    (%r14),%ecx
    767e:	c1 e9 10             	shr    $0x10,%ecx
    7681:	e9 42 00 00 00       	jmp    76c8 <AES_encrypt.94>
    7686:	66 90                	xchg   %ax,%ax

0000000000007688 <AES_encrypt.dummy.95>:
    7688:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    768f:	02 00 00 
    7692:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7699:	02 00 00 
    769c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76a3:	02 00 00 
    76a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76ad:	02 00 00 
    76b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76b7:	02 00 00 
    76ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    76c1:	02 00 00 
    76c4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000076c8 <AES_encrypt.94>:
    76c8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    76ce:	89 c9                	mov    %ecx,%ecx
    76d0:	89 ca                	mov    %ecx,%edx
    76d2:	48 8d 0d 27 0d 03 00 	lea    0x30d27(%rip),%rcx        # 38400 <Te1>
    76d9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    76dc:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    76e0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    76e7:	00 00 00 
    76ea:	41 ff d6             	call   *%r14
    76ed:	41 8b 0e             	mov    (%r14),%ecx
    76f0:	c1 e9 08             	shr    $0x8,%ecx
    76f3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    76f9:	89 c9                	mov    %ecx,%ecx
    76fb:	89 ca                	mov    %ecx,%edx
    76fd:	e9 46 00 00 00       	jmp    7748 <AES_encrypt.95>
    7702:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007708 <AES_encrypt.dummy.96>:
    7708:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    770f:	02 00 00 
    7712:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7719:	02 00 00 
    771c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7723:	02 00 00 
    7726:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    772d:	02 00 00 
    7730:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7737:	02 00 00 
    773a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7741:	02 00 00 
    7744:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007748 <AES_encrypt.95>:
    7748:	48 8d 0d b1 10 03 00 	lea    0x310b1(%rip),%rcx        # 38800 <Te2>
    774f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7752:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7756:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    775d:	00 00 00 
    7760:	41 ff d6             	call   *%r14
    7763:	41 8b 0e             	mov    (%r14),%ecx
    7766:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    776c:	89 c9                	mov    %ecx,%ecx
    776e:	89 ca                	mov    %ecx,%edx
    7770:	48 8d 0d 89 14 03 00 	lea    0x31489(%rip),%rcx        # 38c00 <Te3>
    7777:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    777a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    777e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7785:	00 00 00 
    7788:	41 ff d6             	call   *%r14
    778b:	49 8b 0e             	mov    (%r14),%rcx
    778e:	e9 49 00 00 00       	jmp    77dc <AES_encrypt.96>
    7793:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    779a:	00 00 

000000000000779c <AES_encrypt.dummy.97>:
    779c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77a3:	02 00 00 
    77a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77ad:	02 00 00 
    77b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77b7:	02 00 00 
    77ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77c1:	02 00 00 
    77c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77cb:	02 00 00 
    77ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    77d5:	02 00 00 
    77d8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000077dc <AES_encrypt.96>:
    77dc:	33 41 70             	xor    0x70(%rcx),%eax
    77df:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    77e3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    77ea:	00 00 00 
    77ed:	41 ff d6             	call   *%r14
    77f0:	41 89 06             	mov    %eax,(%r14)
    77f3:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    77f7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    77fe:	00 00 00 
    7801:	41 ff d6             	call   *%r14
    7804:	41 8b 06             	mov    (%r14),%eax
    7807:	c1 e8 18             	shr    $0x18,%eax
    780a:	89 c0                	mov    %eax,%eax
    780c:	89 c1                	mov    %eax,%ecx
    780e:	48 8d 05 eb 07 03 00 	lea    0x307eb(%rip),%rax        # 38000 <Te0>
    7815:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7819:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7820:	00 00 00 
    7823:	41 ff d6             	call   *%r14
    7826:	41 8b 06             	mov    (%r14),%eax
    7829:	e9 42 00 00 00       	jmp    7870 <AES_encrypt.97>
    782e:	66 90                	xchg   %ax,%ax

0000000000007830 <AES_encrypt.dummy.98>:
    7830:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7837:	02 00 00 
    783a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7841:	02 00 00 
    7844:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    784b:	02 00 00 
    784e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7855:	02 00 00 
    7858:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    785f:	02 00 00 
    7862:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7869:	02 00 00 
    786c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007870 <AES_encrypt.97>:
    7870:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7874:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    787b:	00 00 00 
    787e:	41 ff d6             	call   *%r14
    7881:	41 8b 0e             	mov    (%r14),%ecx
    7884:	c1 e9 10             	shr    $0x10,%ecx
    7887:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    788d:	89 c9                	mov    %ecx,%ecx
    788f:	89 ca                	mov    %ecx,%edx
    7891:	48 8d 0d 68 0b 03 00 	lea    0x30b68(%rip),%rcx        # 38400 <Te1>
    7898:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    789b:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    789f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    78a6:	00 00 00 
    78a9:	41 ff d6             	call   *%r14
    78ac:	41 8b 0e             	mov    (%r14),%ecx
    78af:	e9 50 00 00 00       	jmp    7904 <AES_encrypt.98>
    78b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78bb:	02 00 00 
    78be:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000078c4 <AES_encrypt.dummy.99>:
    78c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78cb:	02 00 00 
    78ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78d5:	02 00 00 
    78d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78df:	02 00 00 
    78e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78e9:	02 00 00 
    78ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78f3:	02 00 00 
    78f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    78fd:	02 00 00 
    7900:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007904 <AES_encrypt.98>:
    7904:	c1 e9 08             	shr    $0x8,%ecx
    7907:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    790d:	89 c9                	mov    %ecx,%ecx
    790f:	89 ca                	mov    %ecx,%edx
    7911:	48 8d 0d e8 0e 03 00 	lea    0x30ee8(%rip),%rcx        # 38800 <Te2>
    7918:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    791b:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    791f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7926:	00 00 00 
    7929:	41 ff d6             	call   *%r14
    792c:	41 8b 0e             	mov    (%r14),%ecx
    792f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7935:	89 c9                	mov    %ecx,%ecx
    7937:	89 ca                	mov    %ecx,%edx
    7939:	e9 46 00 00 00       	jmp    7984 <AES_encrypt.99>
    793e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007944 <AES_encrypt.dummy.100>:
    7944:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    794b:	02 00 00 
    794e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7955:	02 00 00 
    7958:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    795f:	02 00 00 
    7962:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7969:	02 00 00 
    796c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7973:	02 00 00 
    7976:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    797d:	02 00 00 
    7980:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007984 <AES_encrypt.99>:
    7984:	48 8d 0d 75 12 03 00 	lea    0x31275(%rip),%rcx        # 38c00 <Te3>
    798b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    798e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7992:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7999:	00 00 00 
    799c:	41 ff d6             	call   *%r14
    799f:	49 8b 0e             	mov    (%r14),%rcx
    79a2:	33 41 74             	xor    0x74(%rcx),%eax
    79a5:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    79a9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    79b0:	00 00 00 
    79b3:	41 ff d6             	call   *%r14
    79b6:	41 89 06             	mov    %eax,(%r14)
    79b9:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    79bd:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    79c4:	00 00 00 
    79c7:	41 ff d6             	call   *%r14
    79ca:	41 8b 06             	mov    (%r14),%eax
    79cd:	e9 46 00 00 00       	jmp    7a18 <AES_encrypt.100>
    79d2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000079d8 <AES_encrypt.dummy.101>:
    79d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79df:	02 00 00 
    79e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79e9:	02 00 00 
    79ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79f3:	02 00 00 
    79f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    79fd:	02 00 00 
    7a00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a07:	02 00 00 
    7a0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a11:	02 00 00 
    7a14:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007a18 <AES_encrypt.100>:
    7a18:	c1 e8 18             	shr    $0x18,%eax
    7a1b:	89 c0                	mov    %eax,%eax
    7a1d:	89 c1                	mov    %eax,%ecx
    7a1f:	48 8d 05 da 05 03 00 	lea    0x305da(%rip),%rax        # 38000 <Te0>
    7a26:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7a2a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7a31:	00 00 00 
    7a34:	41 ff d6             	call   *%r14
    7a37:	41 8b 06             	mov    (%r14),%eax
    7a3a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7a3e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7a45:	00 00 00 
    7a48:	41 ff d6             	call   *%r14
    7a4b:	41 8b 0e             	mov    (%r14),%ecx
    7a4e:	c1 e9 10             	shr    $0x10,%ecx
    7a51:	e9 42 00 00 00       	jmp    7a98 <AES_encrypt.101>
    7a56:	66 90                	xchg   %ax,%ax

0000000000007a58 <AES_encrypt.dummy.102>:
    7a58:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a5f:	02 00 00 
    7a62:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a69:	02 00 00 
    7a6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a73:	02 00 00 
    7a76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a7d:	02 00 00 
    7a80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a87:	02 00 00 
    7a8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7a91:	02 00 00 
    7a94:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007a98 <AES_encrypt.101>:
    7a98:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7a9e:	89 c9                	mov    %ecx,%ecx
    7aa0:	89 ca                	mov    %ecx,%edx
    7aa2:	48 8d 0d 57 09 03 00 	lea    0x30957(%rip),%rcx        # 38400 <Te1>
    7aa9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7aac:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7ab0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7ab7:	00 00 00 
    7aba:	41 ff d6             	call   *%r14
    7abd:	41 8b 0e             	mov    (%r14),%ecx
    7ac0:	c1 e9 08             	shr    $0x8,%ecx
    7ac3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7ac9:	89 c9                	mov    %ecx,%ecx
    7acb:	89 ca                	mov    %ecx,%edx
    7acd:	e9 46 00 00 00       	jmp    7b18 <AES_encrypt.102>
    7ad2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007ad8 <AES_encrypt.dummy.103>:
    7ad8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7adf:	02 00 00 
    7ae2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ae9:	02 00 00 
    7aec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7af3:	02 00 00 
    7af6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7afd:	02 00 00 
    7b00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b07:	02 00 00 
    7b0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b11:	02 00 00 
    7b14:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007b18 <AES_encrypt.102>:
    7b18:	48 8d 0d e1 0c 03 00 	lea    0x30ce1(%rip),%rcx        # 38800 <Te2>
    7b1f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7b22:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7b26:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7b2d:	00 00 00 
    7b30:	41 ff d6             	call   *%r14
    7b33:	41 8b 0e             	mov    (%r14),%ecx
    7b36:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7b3c:	89 c9                	mov    %ecx,%ecx
    7b3e:	89 ca                	mov    %ecx,%edx
    7b40:	48 8d 0d b9 10 03 00 	lea    0x310b9(%rip),%rcx        # 38c00 <Te3>
    7b47:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7b4a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7b4e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7b55:	00 00 00 
    7b58:	41 ff d6             	call   *%r14
    7b5b:	49 8b 0e             	mov    (%r14),%rcx
    7b5e:	e9 49 00 00 00       	jmp    7bac <AES_encrypt.103>
    7b63:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    7b6a:	00 00 

0000000000007b6c <AES_encrypt.dummy.104>:
    7b6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b73:	02 00 00 
    7b76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b7d:	02 00 00 
    7b80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b87:	02 00 00 
    7b8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b91:	02 00 00 
    7b94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7b9b:	02 00 00 
    7b9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ba5:	02 00 00 
    7ba8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007bac <AES_encrypt.103>:
    7bac:	33 41 78             	xor    0x78(%rcx),%eax
    7baf:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    7bb3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7bba:	00 00 00 
    7bbd:	41 ff d6             	call   *%r14
    7bc0:	41 89 06             	mov    %eax,(%r14)
    7bc3:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    7bc7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7bce:	00 00 00 
    7bd1:	41 ff d6             	call   *%r14
    7bd4:	41 8b 06             	mov    (%r14),%eax
    7bd7:	c1 e8 18             	shr    $0x18,%eax
    7bda:	89 c0                	mov    %eax,%eax
    7bdc:	89 c1                	mov    %eax,%ecx
    7bde:	48 8d 05 1b 04 03 00 	lea    0x3041b(%rip),%rax        # 38000 <Te0>
    7be5:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7be9:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7bf0:	00 00 00 
    7bf3:	41 ff d6             	call   *%r14
    7bf6:	41 8b 06             	mov    (%r14),%eax
    7bf9:	e9 42 00 00 00       	jmp    7c40 <AES_encrypt.104>
    7bfe:	66 90                	xchg   %ax,%ax

0000000000007c00 <AES_encrypt.dummy.105>:
    7c00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c07:	02 00 00 
    7c0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c11:	02 00 00 
    7c14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c1b:	02 00 00 
    7c1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c25:	02 00 00 
    7c28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c2f:	02 00 00 
    7c32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c39:	02 00 00 
    7c3c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007c40 <AES_encrypt.104>:
    7c40:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7c44:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7c4b:	00 00 00 
    7c4e:	41 ff d6             	call   *%r14
    7c51:	41 8b 0e             	mov    (%r14),%ecx
    7c54:	c1 e9 10             	shr    $0x10,%ecx
    7c57:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7c5d:	89 c9                	mov    %ecx,%ecx
    7c5f:	89 ca                	mov    %ecx,%edx
    7c61:	48 8d 0d 98 07 03 00 	lea    0x30798(%rip),%rcx        # 38400 <Te1>
    7c68:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7c6b:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    7c6f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7c76:	00 00 00 
    7c79:	41 ff d6             	call   *%r14
    7c7c:	41 8b 0e             	mov    (%r14),%ecx
    7c7f:	e9 50 00 00 00       	jmp    7cd4 <AES_encrypt.105>
    7c84:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c8b:	02 00 00 
    7c8e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007c94 <AES_encrypt.dummy.106>:
    7c94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7c9b:	02 00 00 
    7c9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ca5:	02 00 00 
    7ca8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7caf:	02 00 00 
    7cb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7cb9:	02 00 00 
    7cbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7cc3:	02 00 00 
    7cc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ccd:	02 00 00 
    7cd0:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007cd4 <AES_encrypt.105>:
    7cd4:	c1 e9 08             	shr    $0x8,%ecx
    7cd7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7cdd:	89 c9                	mov    %ecx,%ecx
    7cdf:	89 ca                	mov    %ecx,%edx
    7ce1:	48 8d 0d 18 0b 03 00 	lea    0x30b18(%rip),%rcx        # 38800 <Te2>
    7ce8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7ceb:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    7cef:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7cf6:	00 00 00 
    7cf9:	41 ff d6             	call   *%r14
    7cfc:	41 8b 0e             	mov    (%r14),%ecx
    7cff:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7d05:	89 c9                	mov    %ecx,%ecx
    7d07:	89 ca                	mov    %ecx,%edx
    7d09:	e9 46 00 00 00       	jmp    7d54 <AES_encrypt.106>
    7d0e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007d14 <AES_encrypt.dummy.107>:
    7d14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d1b:	02 00 00 
    7d1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d25:	02 00 00 
    7d28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d2f:	02 00 00 
    7d32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d39:	02 00 00 
    7d3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d43:	02 00 00 
    7d46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7d4d:	02 00 00 
    7d50:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007d54 <AES_encrypt.106>:
    7d54:	48 8d 0d a5 0e 03 00 	lea    0x30ea5(%rip),%rcx        # 38c00 <Te3>
    7d5b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7d5e:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7d62:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7d69:	00 00 00 
    7d6c:	41 ff d6             	call   *%r14
    7d6f:	49 8b 0e             	mov    (%r14),%rcx
    7d72:	33 41 7c             	xor    0x7c(%rcx),%eax
    7d75:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    7d79:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7d80:	00 00 00 
    7d83:	41 ff d6             	call   *%r14
    7d86:	41 89 06             	mov    %eax,(%r14)
    7d89:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    7d8d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7d94:	00 00 00 
    7d97:	41 ff d6             	call   *%r14
    7d9a:	41 8b 06             	mov    (%r14),%eax
    7d9d:	e9 46 00 00 00       	jmp    7de8 <AES_encrypt.107>
    7da2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007da8 <AES_encrypt.dummy.108>:
    7da8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7daf:	02 00 00 
    7db2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7db9:	02 00 00 
    7dbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7dc3:	02 00 00 
    7dc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7dcd:	02 00 00 
    7dd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7dd7:	02 00 00 
    7dda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7de1:	02 00 00 
    7de4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007de8 <AES_encrypt.107>:
    7de8:	c1 e8 18             	shr    $0x18,%eax
    7deb:	89 c0                	mov    %eax,%eax
    7ded:	89 c1                	mov    %eax,%ecx
    7def:	48 8d 05 0a 02 03 00 	lea    0x3020a(%rip),%rax        # 38000 <Te0>
    7df6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    7dfa:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7e01:	00 00 00 
    7e04:	41 ff d6             	call   *%r14
    7e07:	41 8b 06             	mov    (%r14),%eax
    7e0a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    7e0e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7e15:	00 00 00 
    7e18:	41 ff d6             	call   *%r14
    7e1b:	41 8b 0e             	mov    (%r14),%ecx
    7e1e:	c1 e9 10             	shr    $0x10,%ecx
    7e21:	e9 42 00 00 00       	jmp    7e68 <AES_encrypt.108>
    7e26:	66 90                	xchg   %ax,%ax

0000000000007e28 <AES_encrypt.dummy.109>:
    7e28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e2f:	02 00 00 
    7e32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e39:	02 00 00 
    7e3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e43:	02 00 00 
    7e46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e4d:	02 00 00 
    7e50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e57:	02 00 00 
    7e5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7e61:	02 00 00 
    7e64:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007e68 <AES_encrypt.108>:
    7e68:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7e6e:	89 c9                	mov    %ecx,%ecx
    7e70:	89 ca                	mov    %ecx,%edx
    7e72:	48 8d 0d 87 05 03 00 	lea    0x30587(%rip),%rcx        # 38400 <Te1>
    7e79:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7e7c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    7e80:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7e87:	00 00 00 
    7e8a:	41 ff d6             	call   *%r14
    7e8d:	41 8b 0e             	mov    (%r14),%ecx
    7e90:	c1 e9 08             	shr    $0x8,%ecx
    7e93:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7e99:	89 c9                	mov    %ecx,%ecx
    7e9b:	89 ca                	mov    %ecx,%edx
    7e9d:	e9 46 00 00 00       	jmp    7ee8 <AES_encrypt.109>
    7ea2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007ea8 <AES_encrypt.dummy.110>:
    7ea8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7eaf:	02 00 00 
    7eb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7eb9:	02 00 00 
    7ebc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ec3:	02 00 00 
    7ec6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ecd:	02 00 00 
    7ed0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ed7:	02 00 00 
    7eda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ee1:	02 00 00 
    7ee4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007ee8 <AES_encrypt.109>:
    7ee8:	48 8d 0d 11 09 03 00 	lea    0x30911(%rip),%rcx        # 38800 <Te2>
    7eef:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7ef2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    7ef6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7efd:	00 00 00 
    7f00:	41 ff d6             	call   *%r14
    7f03:	41 8b 0e             	mov    (%r14),%ecx
    7f06:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    7f0c:	89 c9                	mov    %ecx,%ecx
    7f0e:	89 ca                	mov    %ecx,%edx
    7f10:	48 8d 0d e9 0c 03 00 	lea    0x30ce9(%rip),%rcx        # 38c00 <Te3>
    7f17:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    7f1a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    7f1e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7f25:	00 00 00 
    7f28:	41 ff d6             	call   *%r14
    7f2b:	49 8b 0e             	mov    (%r14),%rcx
    7f2e:	e9 49 00 00 00       	jmp    7f7c <AES_encrypt.110>
    7f33:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    7f3a:	00 00 

0000000000007f3c <AES_encrypt.dummy.111>:
    7f3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f43:	02 00 00 
    7f46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f4d:	02 00 00 
    7f50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f57:	02 00 00 
    7f5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f61:	02 00 00 
    7f64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f6b:	02 00 00 
    7f6e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7f75:	02 00 00 
    7f78:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007f7c <AES_encrypt.110>:
    7f7c:	33 81 80 00 00 00    	xor    0x80(%rcx),%eax
    7f82:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    7f86:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7f8d:	00 00 00 
    7f90:	41 ff d6             	call   *%r14
    7f93:	41 89 06             	mov    %eax,(%r14)
    7f96:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    7f9a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    7fa1:	00 00 00 
    7fa4:	41 ff d6             	call   *%r14
    7fa7:	41 8b 06             	mov    (%r14),%eax
    7faa:	c1 e8 18             	shr    $0x18,%eax
    7fad:	89 c0                	mov    %eax,%eax
    7faf:	89 c1                	mov    %eax,%ecx
    7fb1:	e9 46 00 00 00       	jmp    7ffc <AES_encrypt.111>
    7fb6:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000007fbc <AES_encrypt.dummy.112>:
    7fbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7fc3:	02 00 00 
    7fc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7fcd:	02 00 00 
    7fd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7fd7:	02 00 00 
    7fda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7fe1:	02 00 00 
    7fe4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7feb:	02 00 00 
    7fee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    7ff5:	02 00 00 
    7ff8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000007ffc <AES_encrypt.111>:
    7ffc:	48 8d 05 fd ff 02 00 	lea    0x2fffd(%rip),%rax        # 38000 <Te0>
    8003:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8007:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    800e:	00 00 00 
    8011:	41 ff d6             	call   *%r14
    8014:	41 8b 06             	mov    (%r14),%eax
    8017:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    801b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8022:	00 00 00 
    8025:	41 ff d6             	call   *%r14
    8028:	41 8b 0e             	mov    (%r14),%ecx
    802b:	c1 e9 10             	shr    $0x10,%ecx
    802e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8034:	89 c9                	mov    %ecx,%ecx
    8036:	e9 41 00 00 00       	jmp    807c <AES_encrypt.112>
    803b:	90                   	nop

000000000000803c <AES_encrypt.dummy.113>:
    803c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8043:	02 00 00 
    8046:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    804d:	02 00 00 
    8050:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8057:	02 00 00 
    805a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8061:	02 00 00 
    8064:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    806b:	02 00 00 
    806e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8075:	02 00 00 
    8078:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000807c <AES_encrypt.112>:
    807c:	89 ca                	mov    %ecx,%edx
    807e:	48 8d 0d 7b 03 03 00 	lea    0x3037b(%rip),%rcx        # 38400 <Te1>
    8085:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8088:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    808c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8093:	00 00 00 
    8096:	41 ff d6             	call   *%r14
    8099:	41 8b 0e             	mov    (%r14),%ecx
    809c:	c1 e9 08             	shr    $0x8,%ecx
    809f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    80a5:	89 c9                	mov    %ecx,%ecx
    80a7:	89 ca                	mov    %ecx,%edx
    80a9:	48 8d 0d 50 07 03 00 	lea    0x30750(%rip),%rcx        # 38800 <Te2>
    80b0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    80b3:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    80b7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    80be:	00 00 00 
    80c1:	41 ff d6             	call   *%r14
    80c4:	41 8b 0e             	mov    (%r14),%ecx
    80c7:	e9 44 00 00 00       	jmp    8110 <AES_encrypt.113>
    80cc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000080d0 <AES_encrypt.dummy.114>:
    80d0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80d7:	02 00 00 
    80da:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80e1:	02 00 00 
    80e4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80eb:	02 00 00 
    80ee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80f5:	02 00 00 
    80f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    80ff:	02 00 00 
    8102:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8109:	02 00 00 
    810c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008110 <AES_encrypt.113>:
    8110:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8116:	89 c9                	mov    %ecx,%ecx
    8118:	89 ca                	mov    %ecx,%edx
    811a:	48 8d 0d df 0a 03 00 	lea    0x30adf(%rip),%rcx        # 38c00 <Te3>
    8121:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8124:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8128:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    812f:	00 00 00 
    8132:	41 ff d6             	call   *%r14
    8135:	49 8b 0e             	mov    (%r14),%rcx
    8138:	33 81 84 00 00 00    	xor    0x84(%rcx),%eax
    813e:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8142:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8149:	00 00 00 
    814c:	41 ff d6             	call   *%r14
    814f:	41 89 06             	mov    %eax,(%r14)
    8152:	e9 4d 00 00 00       	jmp    81a4 <AES_encrypt.114>
    8157:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    815e:	02 00 00 
    8161:	0f 1f 00             	nopl   (%rax)

0000000000008164 <AES_encrypt.dummy.115>:
    8164:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    816b:	02 00 00 
    816e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8175:	02 00 00 
    8178:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    817f:	02 00 00 
    8182:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8189:	02 00 00 
    818c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8193:	02 00 00 
    8196:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    819d:	02 00 00 
    81a0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000081a4 <AES_encrypt.114>:
    81a4:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    81a8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    81af:	00 00 00 
    81b2:	41 ff d6             	call   *%r14
    81b5:	41 8b 06             	mov    (%r14),%eax
    81b8:	c1 e8 18             	shr    $0x18,%eax
    81bb:	89 c0                	mov    %eax,%eax
    81bd:	89 c1                	mov    %eax,%ecx
    81bf:	48 8d 05 3a fe 02 00 	lea    0x2fe3a(%rip),%rax        # 38000 <Te0>
    81c6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    81ca:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    81d1:	00 00 00 
    81d4:	41 ff d6             	call   *%r14
    81d7:	41 8b 06             	mov    (%r14),%eax
    81da:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    81de:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    81e5:	00 00 00 
    81e8:	41 ff d6             	call   *%r14
    81eb:	41 8b 0e             	mov    (%r14),%ecx
    81ee:	e9 45 00 00 00       	jmp    8238 <AES_encrypt.115>
    81f3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

00000000000081f8 <AES_encrypt.dummy.116>:
    81f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    81ff:	02 00 00 
    8202:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8209:	02 00 00 
    820c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8213:	02 00 00 
    8216:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    821d:	02 00 00 
    8220:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8227:	02 00 00 
    822a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8231:	02 00 00 
    8234:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008238 <AES_encrypt.115>:
    8238:	c1 e9 10             	shr    $0x10,%ecx
    823b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8241:	89 c9                	mov    %ecx,%ecx
    8243:	89 ca                	mov    %ecx,%edx
    8245:	48 8d 0d b4 01 03 00 	lea    0x301b4(%rip),%rcx        # 38400 <Te1>
    824c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    824f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    8253:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    825a:	00 00 00 
    825d:	41 ff d6             	call   *%r14
    8260:	41 8b 0e             	mov    (%r14),%ecx
    8263:	c1 e9 08             	shr    $0x8,%ecx
    8266:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    826c:	89 c9                	mov    %ecx,%ecx
    826e:	89 ca                	mov    %ecx,%edx
    8270:	e9 43 00 00 00       	jmp    82b8 <AES_encrypt.116>
    8275:	0f 1f 00             	nopl   (%rax)

0000000000008278 <AES_encrypt.dummy.117>:
    8278:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    827f:	02 00 00 
    8282:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8289:	02 00 00 
    828c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8293:	02 00 00 
    8296:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    829d:	02 00 00 
    82a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82a7:	02 00 00 
    82aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    82b1:	02 00 00 
    82b4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000082b8 <AES_encrypt.116>:
    82b8:	48 8d 0d 41 05 03 00 	lea    0x30541(%rip),%rcx        # 38800 <Te2>
    82bf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    82c2:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    82c6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    82cd:	00 00 00 
    82d0:	41 ff d6             	call   *%r14
    82d3:	41 8b 0e             	mov    (%r14),%ecx
    82d6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    82dc:	89 c9                	mov    %ecx,%ecx
    82de:	89 ca                	mov    %ecx,%edx
    82e0:	48 8d 0d 19 09 03 00 	lea    0x30919(%rip),%rcx        # 38c00 <Te3>
    82e7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    82ea:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    82ee:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    82f5:	00 00 00 
    82f8:	41 ff d6             	call   *%r14
    82fb:	49 8b 0e             	mov    (%r14),%rcx
    82fe:	e9 49 00 00 00       	jmp    834c <AES_encrypt.117>
    8303:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    830a:	00 00 

000000000000830c <AES_encrypt.dummy.118>:
    830c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8313:	02 00 00 
    8316:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    831d:	02 00 00 
    8320:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8327:	02 00 00 
    832a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8331:	02 00 00 
    8334:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    833b:	02 00 00 
    833e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8345:	02 00 00 
    8348:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000834c <AES_encrypt.117>:
    834c:	33 81 88 00 00 00    	xor    0x88(%rcx),%eax
    8352:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8356:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    835d:	00 00 00 
    8360:	41 ff d6             	call   *%r14
    8363:	41 89 06             	mov    %eax,(%r14)
    8366:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    836a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8371:	00 00 00 
    8374:	41 ff d6             	call   *%r14
    8377:	41 8b 06             	mov    (%r14),%eax
    837a:	c1 e8 18             	shr    $0x18,%eax
    837d:	89 c0                	mov    %eax,%eax
    837f:	89 c1                	mov    %eax,%ecx
    8381:	e9 46 00 00 00       	jmp    83cc <AES_encrypt.118>
    8386:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000838c <AES_encrypt.dummy.119>:
    838c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8393:	02 00 00 
    8396:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    839d:	02 00 00 
    83a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83a7:	02 00 00 
    83aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83b1:	02 00 00 
    83b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83bb:	02 00 00 
    83be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    83c5:	02 00 00 
    83c8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000083cc <AES_encrypt.118>:
    83cc:	48 8d 05 2d fc 02 00 	lea    0x2fc2d(%rip),%rax        # 38000 <Te0>
    83d3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    83d7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    83de:	00 00 00 
    83e1:	41 ff d6             	call   *%r14
    83e4:	41 8b 06             	mov    (%r14),%eax
    83e7:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    83eb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    83f2:	00 00 00 
    83f5:	41 ff d6             	call   *%r14
    83f8:	41 8b 0e             	mov    (%r14),%ecx
    83fb:	c1 e9 10             	shr    $0x10,%ecx
    83fe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8404:	89 c9                	mov    %ecx,%ecx
    8406:	e9 41 00 00 00       	jmp    844c <AES_encrypt.119>
    840b:	90                   	nop

000000000000840c <AES_encrypt.dummy.120>:
    840c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8413:	02 00 00 
    8416:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    841d:	02 00 00 
    8420:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8427:	02 00 00 
    842a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8431:	02 00 00 
    8434:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    843b:	02 00 00 
    843e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8445:	02 00 00 
    8448:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000844c <AES_encrypt.119>:
    844c:	89 ca                	mov    %ecx,%edx
    844e:	48 8d 0d ab ff 02 00 	lea    0x2ffab(%rip),%rcx        # 38400 <Te1>
    8455:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8458:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    845c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8463:	00 00 00 
    8466:	41 ff d6             	call   *%r14
    8469:	41 8b 0e             	mov    (%r14),%ecx
    846c:	c1 e9 08             	shr    $0x8,%ecx
    846f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8475:	89 c9                	mov    %ecx,%ecx
    8477:	89 ca                	mov    %ecx,%edx
    8479:	48 8d 0d 80 03 03 00 	lea    0x30380(%rip),%rcx        # 38800 <Te2>
    8480:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8483:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8487:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    848e:	00 00 00 
    8491:	41 ff d6             	call   *%r14
    8494:	41 8b 0e             	mov    (%r14),%ecx
    8497:	e9 44 00 00 00       	jmp    84e0 <AES_encrypt.120>
    849c:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000084a0 <AES_encrypt.dummy.121>:
    84a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84a7:	02 00 00 
    84aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84b1:	02 00 00 
    84b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84bb:	02 00 00 
    84be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84c5:	02 00 00 
    84c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84cf:	02 00 00 
    84d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    84d9:	02 00 00 
    84dc:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000084e0 <AES_encrypt.120>:
    84e0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    84e6:	89 c9                	mov    %ecx,%ecx
    84e8:	89 ca                	mov    %ecx,%edx
    84ea:	48 8d 0d 0f 07 03 00 	lea    0x3070f(%rip),%rcx        # 38c00 <Te3>
    84f1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    84f4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    84f8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    84ff:	00 00 00 
    8502:	41 ff d6             	call   *%r14
    8505:	49 8b 0e             	mov    (%r14),%rcx
    8508:	33 81 8c 00 00 00    	xor    0x8c(%rcx),%eax
    850e:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8512:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8519:	00 00 00 
    851c:	41 ff d6             	call   *%r14
    851f:	41 89 06             	mov    %eax,(%r14)
    8522:	e9 4d 00 00 00       	jmp    8574 <AES_encrypt.121>
    8527:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    852e:	02 00 00 
    8531:	0f 1f 00             	nopl   (%rax)

0000000000008534 <AES_encrypt.dummy.122>:
    8534:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    853b:	02 00 00 
    853e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8545:	02 00 00 
    8548:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    854f:	02 00 00 
    8552:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8559:	02 00 00 
    855c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8563:	02 00 00 
    8566:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    856d:	02 00 00 
    8570:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008574 <AES_encrypt.121>:
    8574:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8578:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    857f:	00 00 00 
    8582:	41 ff d6             	call   *%r14
    8585:	41 8b 06             	mov    (%r14),%eax
    8588:	c1 e8 18             	shr    $0x18,%eax
    858b:	89 c0                	mov    %eax,%eax
    858d:	89 c1                	mov    %eax,%ecx
    858f:	48 8d 05 6a fa 02 00 	lea    0x2fa6a(%rip),%rax        # 38000 <Te0>
    8596:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    859a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    85a1:	00 00 00 
    85a4:	41 ff d6             	call   *%r14
    85a7:	41 8b 06             	mov    (%r14),%eax
    85aa:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    85ae:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    85b5:	00 00 00 
    85b8:	41 ff d6             	call   *%r14
    85bb:	41 8b 0e             	mov    (%r14),%ecx
    85be:	e9 45 00 00 00       	jmp    8608 <AES_encrypt.122>
    85c3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

00000000000085c8 <AES_encrypt.dummy.123>:
    85c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85cf:	02 00 00 
    85d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85d9:	02 00 00 
    85dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85e3:	02 00 00 
    85e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85ed:	02 00 00 
    85f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    85f7:	02 00 00 
    85fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8601:	02 00 00 
    8604:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008608 <AES_encrypt.122>:
    8608:	c1 e9 10             	shr    $0x10,%ecx
    860b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8611:	89 c9                	mov    %ecx,%ecx
    8613:	89 ca                	mov    %ecx,%edx
    8615:	48 8d 0d e4 fd 02 00 	lea    0x2fde4(%rip),%rcx        # 38400 <Te1>
    861c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    861f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8623:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    862a:	00 00 00 
    862d:	41 ff d6             	call   *%r14
    8630:	41 8b 0e             	mov    (%r14),%ecx
    8633:	c1 e9 08             	shr    $0x8,%ecx
    8636:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    863c:	89 c9                	mov    %ecx,%ecx
    863e:	89 ca                	mov    %ecx,%edx
    8640:	e9 43 00 00 00       	jmp    8688 <AES_encrypt.123>
    8645:	0f 1f 00             	nopl   (%rax)

0000000000008648 <AES_encrypt.dummy.124>:
    8648:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    864f:	02 00 00 
    8652:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8659:	02 00 00 
    865c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8663:	02 00 00 
    8666:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    866d:	02 00 00 
    8670:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8677:	02 00 00 
    867a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8681:	02 00 00 
    8684:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008688 <AES_encrypt.123>:
    8688:	48 8d 0d 71 01 03 00 	lea    0x30171(%rip),%rcx        # 38800 <Te2>
    868f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8692:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8696:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    869d:	00 00 00 
    86a0:	41 ff d6             	call   *%r14
    86a3:	41 8b 0e             	mov    (%r14),%ecx
    86a6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    86ac:	89 c9                	mov    %ecx,%ecx
    86ae:	89 ca                	mov    %ecx,%edx
    86b0:	48 8d 0d 49 05 03 00 	lea    0x30549(%rip),%rcx        # 38c00 <Te3>
    86b7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    86ba:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    86be:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    86c5:	00 00 00 
    86c8:	41 ff d6             	call   *%r14
    86cb:	49 8b 0e             	mov    (%r14),%rcx
    86ce:	e9 49 00 00 00       	jmp    871c <AES_encrypt.124>
    86d3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    86da:	00 00 

00000000000086dc <AES_encrypt.dummy.125>:
    86dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86e3:	02 00 00 
    86e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86ed:	02 00 00 
    86f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    86f7:	02 00 00 
    86fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8701:	02 00 00 
    8704:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    870b:	02 00 00 
    870e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8715:	02 00 00 
    8718:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000871c <AES_encrypt.124>:
    871c:	33 81 90 00 00 00    	xor    0x90(%rcx),%eax
    8722:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    8726:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    872d:	00 00 00 
    8730:	41 ff d6             	call   *%r14
    8733:	41 89 06             	mov    %eax,(%r14)
    8736:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    873a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8741:	00 00 00 
    8744:	41 ff d6             	call   *%r14
    8747:	41 8b 06             	mov    (%r14),%eax
    874a:	c1 e8 18             	shr    $0x18,%eax
    874d:	89 c0                	mov    %eax,%eax
    874f:	89 c1                	mov    %eax,%ecx
    8751:	e9 46 00 00 00       	jmp    879c <AES_encrypt.125>
    8756:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000875c <AES_encrypt.dummy.126>:
    875c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8763:	02 00 00 
    8766:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    876d:	02 00 00 
    8770:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8777:	02 00 00 
    877a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8781:	02 00 00 
    8784:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    878b:	02 00 00 
    878e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8795:	02 00 00 
    8798:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000879c <AES_encrypt.125>:
    879c:	48 8d 05 5d f8 02 00 	lea    0x2f85d(%rip),%rax        # 38000 <Te0>
    87a3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    87a7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    87ae:	00 00 00 
    87b1:	41 ff d6             	call   *%r14
    87b4:	41 8b 06             	mov    (%r14),%eax
    87b7:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    87bb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    87c2:	00 00 00 
    87c5:	41 ff d6             	call   *%r14
    87c8:	41 8b 0e             	mov    (%r14),%ecx
    87cb:	c1 e9 10             	shr    $0x10,%ecx
    87ce:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    87d4:	89 c9                	mov    %ecx,%ecx
    87d6:	e9 41 00 00 00       	jmp    881c <AES_encrypt.126>
    87db:	90                   	nop

00000000000087dc <AES_encrypt.dummy.127>:
    87dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87e3:	02 00 00 
    87e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87ed:	02 00 00 
    87f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    87f7:	02 00 00 
    87fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8801:	02 00 00 
    8804:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    880b:	02 00 00 
    880e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8815:	02 00 00 
    8818:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000881c <AES_encrypt.126>:
    881c:	89 ca                	mov    %ecx,%edx
    881e:	48 8d 0d db fb 02 00 	lea    0x2fbdb(%rip),%rcx        # 38400 <Te1>
    8825:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8828:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    882c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8833:	00 00 00 
    8836:	41 ff d6             	call   *%r14
    8839:	41 8b 0e             	mov    (%r14),%ecx
    883c:	c1 e9 08             	shr    $0x8,%ecx
    883f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8845:	89 c9                	mov    %ecx,%ecx
    8847:	89 ca                	mov    %ecx,%edx
    8849:	48 8d 0d b0 ff 02 00 	lea    0x2ffb0(%rip),%rcx        # 38800 <Te2>
    8850:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8853:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8857:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    885e:	00 00 00 
    8861:	41 ff d6             	call   *%r14
    8864:	41 8b 0e             	mov    (%r14),%ecx
    8867:	e9 44 00 00 00       	jmp    88b0 <AES_encrypt.127>
    886c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008870 <AES_encrypt.dummy.128>:
    8870:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8877:	02 00 00 
    887a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8881:	02 00 00 
    8884:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    888b:	02 00 00 
    888e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8895:	02 00 00 
    8898:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    889f:	02 00 00 
    88a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88a9:	02 00 00 
    88ac:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000088b0 <AES_encrypt.127>:
    88b0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    88b6:	89 c9                	mov    %ecx,%ecx
    88b8:	89 ca                	mov    %ecx,%edx
    88ba:	48 8d 0d 3f 03 03 00 	lea    0x3033f(%rip),%rcx        # 38c00 <Te3>
    88c1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    88c4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    88c8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    88cf:	00 00 00 
    88d2:	41 ff d6             	call   *%r14
    88d5:	49 8b 0e             	mov    (%r14),%rcx
    88d8:	33 81 94 00 00 00    	xor    0x94(%rcx),%eax
    88de:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    88e2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    88e9:	00 00 00 
    88ec:	41 ff d6             	call   *%r14
    88ef:	41 89 06             	mov    %eax,(%r14)
    88f2:	e9 4d 00 00 00       	jmp    8944 <AES_encrypt.128>
    88f7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    88fe:	02 00 00 
    8901:	0f 1f 00             	nopl   (%rax)

0000000000008904 <AES_encrypt.dummy.129>:
    8904:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    890b:	02 00 00 
    890e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8915:	02 00 00 
    8918:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    891f:	02 00 00 
    8922:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8929:	02 00 00 
    892c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8933:	02 00 00 
    8936:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    893d:	02 00 00 
    8940:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008944 <AES_encrypt.128>:
    8944:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8948:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    894f:	00 00 00 
    8952:	41 ff d6             	call   *%r14
    8955:	41 8b 06             	mov    (%r14),%eax
    8958:	c1 e8 18             	shr    $0x18,%eax
    895b:	89 c0                	mov    %eax,%eax
    895d:	89 c1                	mov    %eax,%ecx
    895f:	48 8d 05 9a f6 02 00 	lea    0x2f69a(%rip),%rax        # 38000 <Te0>
    8966:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    896a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8971:	00 00 00 
    8974:	41 ff d6             	call   *%r14
    8977:	41 8b 06             	mov    (%r14),%eax
    897a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    897e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8985:	00 00 00 
    8988:	41 ff d6             	call   *%r14
    898b:	41 8b 0e             	mov    (%r14),%ecx
    898e:	e9 45 00 00 00       	jmp    89d8 <AES_encrypt.129>
    8993:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000008998 <AES_encrypt.dummy.130>:
    8998:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    899f:	02 00 00 
    89a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89a9:	02 00 00 
    89ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89b3:	02 00 00 
    89b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89bd:	02 00 00 
    89c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89c7:	02 00 00 
    89ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    89d1:	02 00 00 
    89d4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000089d8 <AES_encrypt.129>:
    89d8:	c1 e9 10             	shr    $0x10,%ecx
    89db:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    89e1:	89 c9                	mov    %ecx,%ecx
    89e3:	89 ca                	mov    %ecx,%edx
    89e5:	48 8d 0d 14 fa 02 00 	lea    0x2fa14(%rip),%rcx        # 38400 <Te1>
    89ec:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    89ef:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    89f3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    89fa:	00 00 00 
    89fd:	41 ff d6             	call   *%r14
    8a00:	41 8b 0e             	mov    (%r14),%ecx
    8a03:	c1 e9 08             	shr    $0x8,%ecx
    8a06:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8a0c:	89 c9                	mov    %ecx,%ecx
    8a0e:	89 ca                	mov    %ecx,%edx
    8a10:	e9 43 00 00 00       	jmp    8a58 <AES_encrypt.130>
    8a15:	0f 1f 00             	nopl   (%rax)

0000000000008a18 <AES_encrypt.dummy.131>:
    8a18:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a1f:	02 00 00 
    8a22:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a29:	02 00 00 
    8a2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a33:	02 00 00 
    8a36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a3d:	02 00 00 
    8a40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a47:	02 00 00 
    8a4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8a51:	02 00 00 
    8a54:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008a58 <AES_encrypt.130>:
    8a58:	48 8d 0d a1 fd 02 00 	lea    0x2fda1(%rip),%rcx        # 38800 <Te2>
    8a5f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8a62:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8a66:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8a6d:	00 00 00 
    8a70:	41 ff d6             	call   *%r14
    8a73:	41 8b 0e             	mov    (%r14),%ecx
    8a76:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8a7c:	89 c9                	mov    %ecx,%ecx
    8a7e:	89 ca                	mov    %ecx,%edx
    8a80:	48 8d 0d 79 01 03 00 	lea    0x30179(%rip),%rcx        # 38c00 <Te3>
    8a87:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8a8a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8a8e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8a95:	00 00 00 
    8a98:	41 ff d6             	call   *%r14
    8a9b:	49 8b 0e             	mov    (%r14),%rcx
    8a9e:	e9 49 00 00 00       	jmp    8aec <AES_encrypt.131>
    8aa3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    8aaa:	00 00 

0000000000008aac <AES_encrypt.dummy.132>:
    8aac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ab3:	02 00 00 
    8ab6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8abd:	02 00 00 
    8ac0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ac7:	02 00 00 
    8aca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ad1:	02 00 00 
    8ad4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8adb:	02 00 00 
    8ade:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ae5:	02 00 00 
    8ae8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008aec <AES_encrypt.131>:
    8aec:	33 81 98 00 00 00    	xor    0x98(%rcx),%eax
    8af2:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8af6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8afd:	00 00 00 
    8b00:	41 ff d6             	call   *%r14
    8b03:	41 89 06             	mov    %eax,(%r14)
    8b06:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    8b0a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8b11:	00 00 00 
    8b14:	41 ff d6             	call   *%r14
    8b17:	41 8b 06             	mov    (%r14),%eax
    8b1a:	c1 e8 18             	shr    $0x18,%eax
    8b1d:	89 c0                	mov    %eax,%eax
    8b1f:	89 c1                	mov    %eax,%ecx
    8b21:	e9 46 00 00 00       	jmp    8b6c <AES_encrypt.132>
    8b26:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000008b2c <AES_encrypt.dummy.133>:
    8b2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b33:	02 00 00 
    8b36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b3d:	02 00 00 
    8b40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b47:	02 00 00 
    8b4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b51:	02 00 00 
    8b54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b5b:	02 00 00 
    8b5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8b65:	02 00 00 
    8b68:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008b6c <AES_encrypt.132>:
    8b6c:	48 8d 05 8d f4 02 00 	lea    0x2f48d(%rip),%rax        # 38000 <Te0>
    8b73:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8b77:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8b7e:	00 00 00 
    8b81:	41 ff d6             	call   *%r14
    8b84:	41 8b 06             	mov    (%r14),%eax
    8b87:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8b8b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8b92:	00 00 00 
    8b95:	41 ff d6             	call   *%r14
    8b98:	41 8b 0e             	mov    (%r14),%ecx
    8b9b:	c1 e9 10             	shr    $0x10,%ecx
    8b9e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8ba4:	89 c9                	mov    %ecx,%ecx
    8ba6:	e9 41 00 00 00       	jmp    8bec <AES_encrypt.133>
    8bab:	90                   	nop

0000000000008bac <AES_encrypt.dummy.134>:
    8bac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bb3:	02 00 00 
    8bb6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bbd:	02 00 00 
    8bc0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bc7:	02 00 00 
    8bca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bd1:	02 00 00 
    8bd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8bdb:	02 00 00 
    8bde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8be5:	02 00 00 
    8be8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008bec <AES_encrypt.133>:
    8bec:	89 ca                	mov    %ecx,%edx
    8bee:	48 8d 0d 0b f8 02 00 	lea    0x2f80b(%rip),%rcx        # 38400 <Te1>
    8bf5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8bf8:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    8bfc:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8c03:	00 00 00 
    8c06:	41 ff d6             	call   *%r14
    8c09:	41 8b 0e             	mov    (%r14),%ecx
    8c0c:	c1 e9 08             	shr    $0x8,%ecx
    8c0f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8c15:	89 c9                	mov    %ecx,%ecx
    8c17:	89 ca                	mov    %ecx,%edx
    8c19:	48 8d 0d e0 fb 02 00 	lea    0x2fbe0(%rip),%rcx        # 38800 <Te2>
    8c20:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8c23:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    8c27:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8c2e:	00 00 00 
    8c31:	41 ff d6             	call   *%r14
    8c34:	41 8b 0e             	mov    (%r14),%ecx
    8c37:	e9 44 00 00 00       	jmp    8c80 <AES_encrypt.134>
    8c3c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008c40 <AES_encrypt.dummy.135>:
    8c40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c47:	02 00 00 
    8c4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c51:	02 00 00 
    8c54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c5b:	02 00 00 
    8c5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c65:	02 00 00 
    8c68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c6f:	02 00 00 
    8c72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8c79:	02 00 00 
    8c7c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008c80 <AES_encrypt.134>:
    8c80:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8c86:	89 c9                	mov    %ecx,%ecx
    8c88:	89 ca                	mov    %ecx,%edx
    8c8a:	48 8d 0d 6f ff 02 00 	lea    0x2ff6f(%rip),%rcx        # 38c00 <Te3>
    8c91:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8c94:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8c98:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8c9f:	00 00 00 
    8ca2:	41 ff d6             	call   *%r14
    8ca5:	49 8b 0e             	mov    (%r14),%rcx
    8ca8:	33 81 9c 00 00 00    	xor    0x9c(%rcx),%eax
    8cae:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    8cb2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8cb9:	00 00 00 
    8cbc:	41 ff d6             	call   *%r14
    8cbf:	41 89 06             	mov    %eax,(%r14)
    8cc2:	e9 4d 00 00 00       	jmp    8d14 <AES_encrypt.135>
    8cc7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cce:	02 00 00 
    8cd1:	0f 1f 00             	nopl   (%rax)

0000000000008cd4 <AES_encrypt.dummy.136>:
    8cd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cdb:	02 00 00 
    8cde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ce5:	02 00 00 
    8ce8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cef:	02 00 00 
    8cf2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8cf9:	02 00 00 
    8cfc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d03:	02 00 00 
    8d06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d0d:	02 00 00 
    8d10:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008d14 <AES_encrypt.135>:
    8d14:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    8d18:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8d1f:	00 00 00 
    8d22:	41 ff d6             	call   *%r14
    8d25:	49 8b 06             	mov    (%r14),%rax
    8d28:	83 b8 f0 00 00 00 0a 	cmpl   $0xa,0xf0(%rax)
    8d2f:	0f 8e e4 1e 00 00    	jle    ac19 <AES_encrypt.192+0x5>
    8d35:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    8d39:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8d40:	00 00 00 
    8d43:	41 ff d6             	call   *%r14
    8d46:	41 8b 06             	mov    (%r14),%eax
    8d49:	c1 e8 18             	shr    $0x18,%eax
    8d4c:	89 c0                	mov    %eax,%eax
    8d4e:	e9 41 00 00 00       	jmp    8d94 <AES_encrypt.136>
    8d53:	90                   	nop

0000000000008d54 <AES_encrypt.dummy.137>:
    8d54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d5b:	02 00 00 
    8d5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d65:	02 00 00 
    8d68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d6f:	02 00 00 
    8d72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d79:	02 00 00 
    8d7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d83:	02 00 00 
    8d86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8d8d:	02 00 00 
    8d90:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008d94 <AES_encrypt.136>:
    8d94:	89 c1                	mov    %eax,%ecx
    8d96:	48 8d 05 63 f2 02 00 	lea    0x2f263(%rip),%rax        # 38000 <Te0>
    8d9d:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8da1:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8da8:	00 00 00 
    8dab:	41 ff d6             	call   *%r14
    8dae:	41 8b 06             	mov    (%r14),%eax
    8db1:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    8db5:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8dbc:	00 00 00 
    8dbf:	41 ff d6             	call   *%r14
    8dc2:	41 8b 0e             	mov    (%r14),%ecx
    8dc5:	c1 e9 10             	shr    $0x10,%ecx
    8dc8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8dce:	e9 41 00 00 00       	jmp    8e14 <AES_encrypt.137>
    8dd3:	90                   	nop

0000000000008dd4 <AES_encrypt.dummy.138>:
    8dd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ddb:	02 00 00 
    8dde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8de5:	02 00 00 
    8de8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8def:	02 00 00 
    8df2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8df9:	02 00 00 
    8dfc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e03:	02 00 00 
    8e06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e0d:	02 00 00 
    8e10:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008e14 <AES_encrypt.137>:
    8e14:	89 c9                	mov    %ecx,%ecx
    8e16:	89 ca                	mov    %ecx,%edx
    8e18:	48 8d 0d e1 f5 02 00 	lea    0x2f5e1(%rip),%rcx        # 38400 <Te1>
    8e1f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8e22:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8e26:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8e2d:	00 00 00 
    8e30:	41 ff d6             	call   *%r14
    8e33:	41 8b 0e             	mov    (%r14),%ecx
    8e36:	c1 e9 08             	shr    $0x8,%ecx
    8e39:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8e3f:	89 c9                	mov    %ecx,%ecx
    8e41:	89 ca                	mov    %ecx,%edx
    8e43:	48 8d 0d b6 f9 02 00 	lea    0x2f9b6(%rip),%rcx        # 38800 <Te2>
    8e4a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8e4d:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    8e51:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8e58:	00 00 00 
    8e5b:	41 ff d6             	call   *%r14
    8e5e:	41 8b 0e             	mov    (%r14),%ecx
    8e61:	e9 42 00 00 00       	jmp    8ea8 <AES_encrypt.138>
    8e66:	66 90                	xchg   %ax,%ax

0000000000008e68 <AES_encrypt.dummy.139>:
    8e68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e6f:	02 00 00 
    8e72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e79:	02 00 00 
    8e7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e83:	02 00 00 
    8e86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e8d:	02 00 00 
    8e90:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8e97:	02 00 00 
    8e9a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ea1:	02 00 00 
    8ea4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008ea8 <AES_encrypt.138>:
    8ea8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8eae:	89 c9                	mov    %ecx,%ecx
    8eb0:	89 ca                	mov    %ecx,%edx
    8eb2:	48 8d 0d 47 fd 02 00 	lea    0x2fd47(%rip),%rcx        # 38c00 <Te3>
    8eb9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8ebc:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    8ec0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8ec7:	00 00 00 
    8eca:	41 ff d6             	call   *%r14
    8ecd:	49 8b 0e             	mov    (%r14),%rcx
    8ed0:	33 81 a0 00 00 00    	xor    0xa0(%rcx),%eax
    8ed6:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    8eda:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8ee1:	00 00 00 
    8ee4:	41 ff d6             	call   *%r14
    8ee7:	41 89 06             	mov    %eax,(%r14)
    8eea:	e9 4d 00 00 00       	jmp    8f3c <AES_encrypt.139>
    8eef:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8ef6:	02 00 00 
    8ef9:	0f 1f 00             	nopl   (%rax)

0000000000008efc <AES_encrypt.dummy.140>:
    8efc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f03:	02 00 00 
    8f06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f0d:	02 00 00 
    8f10:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f17:	02 00 00 
    8f1a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f21:	02 00 00 
    8f24:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f2b:	02 00 00 
    8f2e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f35:	02 00 00 
    8f38:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008f3c <AES_encrypt.139>:
    8f3c:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    8f40:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8f47:	00 00 00 
    8f4a:	41 ff d6             	call   *%r14
    8f4d:	41 8b 06             	mov    (%r14),%eax
    8f50:	c1 e8 18             	shr    $0x18,%eax
    8f53:	89 c0                	mov    %eax,%eax
    8f55:	89 c1                	mov    %eax,%ecx
    8f57:	48 8d 05 a2 f0 02 00 	lea    0x2f0a2(%rip),%rax        # 38000 <Te0>
    8f5e:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    8f62:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8f69:	00 00 00 
    8f6c:	41 ff d6             	call   *%r14
    8f6f:	41 8b 06             	mov    (%r14),%eax
    8f72:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    8f76:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8f7d:	00 00 00 
    8f80:	41 ff d6             	call   *%r14
    8f83:	41 8b 0e             	mov    (%r14),%ecx
    8f86:	e9 45 00 00 00       	jmp    8fd0 <AES_encrypt.140>
    8f8b:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000008f90 <AES_encrypt.dummy.141>:
    8f90:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8f97:	02 00 00 
    8f9a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fa1:	02 00 00 
    8fa4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fab:	02 00 00 
    8fae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fb5:	02 00 00 
    8fb8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fbf:	02 00 00 
    8fc2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    8fc9:	02 00 00 
    8fcc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000008fd0 <AES_encrypt.140>:
    8fd0:	c1 e9 10             	shr    $0x10,%ecx
    8fd3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    8fd9:	89 c9                	mov    %ecx,%ecx
    8fdb:	89 ca                	mov    %ecx,%edx
    8fdd:	48 8d 0d 1c f4 02 00 	lea    0x2f41c(%rip),%rcx        # 38400 <Te1>
    8fe4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    8fe7:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    8feb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    8ff2:	00 00 00 
    8ff5:	41 ff d6             	call   *%r14
    8ff8:	41 8b 0e             	mov    (%r14),%ecx
    8ffb:	c1 e9 08             	shr    $0x8,%ecx
    8ffe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9004:	89 c9                	mov    %ecx,%ecx
    9006:	89 ca                	mov    %ecx,%edx
    9008:	e9 43 00 00 00       	jmp    9050 <AES_encrypt.141>
    900d:	0f 1f 00             	nopl   (%rax)

0000000000009010 <AES_encrypt.dummy.142>:
    9010:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9017:	02 00 00 
    901a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9021:	02 00 00 
    9024:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    902b:	02 00 00 
    902e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9035:	02 00 00 
    9038:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    903f:	02 00 00 
    9042:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9049:	02 00 00 
    904c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009050 <AES_encrypt.141>:
    9050:	48 8d 0d a9 f7 02 00 	lea    0x2f7a9(%rip),%rcx        # 38800 <Te2>
    9057:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    905a:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    905e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9065:	00 00 00 
    9068:	41 ff d6             	call   *%r14
    906b:	41 8b 0e             	mov    (%r14),%ecx
    906e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9074:	89 c9                	mov    %ecx,%ecx
    9076:	89 ca                	mov    %ecx,%edx
    9078:	48 8d 0d 81 fb 02 00 	lea    0x2fb81(%rip),%rcx        # 38c00 <Te3>
    907f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9082:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9086:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    908d:	00 00 00 
    9090:	41 ff d6             	call   *%r14
    9093:	49 8b 0e             	mov    (%r14),%rcx
    9096:	e9 49 00 00 00       	jmp    90e4 <AES_encrypt.142>
    909b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    90a2:	00 00 

00000000000090a4 <AES_encrypt.dummy.143>:
    90a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90ab:	02 00 00 
    90ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90b5:	02 00 00 
    90b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90bf:	02 00 00 
    90c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90c9:	02 00 00 
    90cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90d3:	02 00 00 
    90d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    90dd:	02 00 00 
    90e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000090e4 <AES_encrypt.142>:
    90e4:	33 81 a4 00 00 00    	xor    0xa4(%rcx),%eax
    90ea:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    90ee:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    90f5:	00 00 00 
    90f8:	41 ff d6             	call   *%r14
    90fb:	41 89 06             	mov    %eax,(%r14)
    90fe:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9102:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9109:	00 00 00 
    910c:	41 ff d6             	call   *%r14
    910f:	41 8b 06             	mov    (%r14),%eax
    9112:	c1 e8 18             	shr    $0x18,%eax
    9115:	89 c0                	mov    %eax,%eax
    9117:	89 c1                	mov    %eax,%ecx
    9119:	e9 46 00 00 00       	jmp    9164 <AES_encrypt.143>
    911e:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009124 <AES_encrypt.dummy.144>:
    9124:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    912b:	02 00 00 
    912e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9135:	02 00 00 
    9138:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    913f:	02 00 00 
    9142:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9149:	02 00 00 
    914c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9153:	02 00 00 
    9156:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    915d:	02 00 00 
    9160:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009164 <AES_encrypt.143>:
    9164:	48 8d 05 95 ee 02 00 	lea    0x2ee95(%rip),%rax        # 38000 <Te0>
    916b:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    916f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9176:	00 00 00 
    9179:	41 ff d6             	call   *%r14
    917c:	41 8b 06             	mov    (%r14),%eax
    917f:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9183:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    918a:	00 00 00 
    918d:	41 ff d6             	call   *%r14
    9190:	41 8b 0e             	mov    (%r14),%ecx
    9193:	c1 e9 10             	shr    $0x10,%ecx
    9196:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    919c:	89 c9                	mov    %ecx,%ecx
    919e:	e9 41 00 00 00       	jmp    91e4 <AES_encrypt.144>
    91a3:	90                   	nop

00000000000091a4 <AES_encrypt.dummy.145>:
    91a4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91ab:	02 00 00 
    91ae:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91b5:	02 00 00 
    91b8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91bf:	02 00 00 
    91c2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91c9:	02 00 00 
    91cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91d3:	02 00 00 
    91d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    91dd:	02 00 00 
    91e0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000091e4 <AES_encrypt.144>:
    91e4:	89 ca                	mov    %ecx,%edx
    91e6:	48 8d 0d 13 f2 02 00 	lea    0x2f213(%rip),%rcx        # 38400 <Te1>
    91ed:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    91f0:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    91f4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    91fb:	00 00 00 
    91fe:	41 ff d6             	call   *%r14
    9201:	41 8b 0e             	mov    (%r14),%ecx
    9204:	c1 e9 08             	shr    $0x8,%ecx
    9207:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    920d:	89 c9                	mov    %ecx,%ecx
    920f:	89 ca                	mov    %ecx,%edx
    9211:	48 8d 0d e8 f5 02 00 	lea    0x2f5e8(%rip),%rcx        # 38800 <Te2>
    9218:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    921b:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    921f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9226:	00 00 00 
    9229:	41 ff d6             	call   *%r14
    922c:	41 8b 0e             	mov    (%r14),%ecx
    922f:	e9 44 00 00 00       	jmp    9278 <AES_encrypt.145>
    9234:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009238 <AES_encrypt.dummy.146>:
    9238:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    923f:	02 00 00 
    9242:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9249:	02 00 00 
    924c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9253:	02 00 00 
    9256:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    925d:	02 00 00 
    9260:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9267:	02 00 00 
    926a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9271:	02 00 00 
    9274:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009278 <AES_encrypt.145>:
    9278:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    927e:	89 c9                	mov    %ecx,%ecx
    9280:	89 ca                	mov    %ecx,%edx
    9282:	48 8d 0d 77 f9 02 00 	lea    0x2f977(%rip),%rcx        # 38c00 <Te3>
    9289:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    928c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9290:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9297:	00 00 00 
    929a:	41 ff d6             	call   *%r14
    929d:	49 8b 0e             	mov    (%r14),%rcx
    92a0:	33 81 a8 00 00 00    	xor    0xa8(%rcx),%eax
    92a6:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    92aa:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    92b1:	00 00 00 
    92b4:	41 ff d6             	call   *%r14
    92b7:	41 89 06             	mov    %eax,(%r14)
    92ba:	e9 4d 00 00 00       	jmp    930c <AES_encrypt.146>
    92bf:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92c6:	02 00 00 
    92c9:	0f 1f 00             	nopl   (%rax)

00000000000092cc <AES_encrypt.dummy.147>:
    92cc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92d3:	02 00 00 
    92d6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92dd:	02 00 00 
    92e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92e7:	02 00 00 
    92ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92f1:	02 00 00 
    92f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    92fb:	02 00 00 
    92fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9305:	02 00 00 
    9308:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000930c <AES_encrypt.146>:
    930c:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9310:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9317:	00 00 00 
    931a:	41 ff d6             	call   *%r14
    931d:	41 8b 06             	mov    (%r14),%eax
    9320:	c1 e8 18             	shr    $0x18,%eax
    9323:	89 c0                	mov    %eax,%eax
    9325:	89 c1                	mov    %eax,%ecx
    9327:	48 8d 05 d2 ec 02 00 	lea    0x2ecd2(%rip),%rax        # 38000 <Te0>
    932e:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9332:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9339:	00 00 00 
    933c:	41 ff d6             	call   *%r14
    933f:	41 8b 06             	mov    (%r14),%eax
    9342:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9346:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    934d:	00 00 00 
    9350:	41 ff d6             	call   *%r14
    9353:	41 8b 0e             	mov    (%r14),%ecx
    9356:	e9 45 00 00 00       	jmp    93a0 <AES_encrypt.147>
    935b:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000009360 <AES_encrypt.dummy.148>:
    9360:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9367:	02 00 00 
    936a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9371:	02 00 00 
    9374:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    937b:	02 00 00 
    937e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9385:	02 00 00 
    9388:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    938f:	02 00 00 
    9392:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9399:	02 00 00 
    939c:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000093a0 <AES_encrypt.147>:
    93a0:	c1 e9 10             	shr    $0x10,%ecx
    93a3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    93a9:	89 c9                	mov    %ecx,%ecx
    93ab:	89 ca                	mov    %ecx,%edx
    93ad:	48 8d 0d 4c f0 02 00 	lea    0x2f04c(%rip),%rcx        # 38400 <Te1>
    93b4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    93b7:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    93bb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    93c2:	00 00 00 
    93c5:	41 ff d6             	call   *%r14
    93c8:	41 8b 0e             	mov    (%r14),%ecx
    93cb:	c1 e9 08             	shr    $0x8,%ecx
    93ce:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    93d4:	89 c9                	mov    %ecx,%ecx
    93d6:	89 ca                	mov    %ecx,%edx
    93d8:	e9 43 00 00 00       	jmp    9420 <AES_encrypt.148>
    93dd:	0f 1f 00             	nopl   (%rax)

00000000000093e0 <AES_encrypt.dummy.149>:
    93e0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93e7:	02 00 00 
    93ea:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93f1:	02 00 00 
    93f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    93fb:	02 00 00 
    93fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9405:	02 00 00 
    9408:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    940f:	02 00 00 
    9412:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9419:	02 00 00 
    941c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009420 <AES_encrypt.148>:
    9420:	48 8d 0d d9 f3 02 00 	lea    0x2f3d9(%rip),%rcx        # 38800 <Te2>
    9427:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    942a:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    942e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9435:	00 00 00 
    9438:	41 ff d6             	call   *%r14
    943b:	41 8b 0e             	mov    (%r14),%ecx
    943e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9444:	89 c9                	mov    %ecx,%ecx
    9446:	89 ca                	mov    %ecx,%edx
    9448:	48 8d 0d b1 f7 02 00 	lea    0x2f7b1(%rip),%rcx        # 38c00 <Te3>
    944f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9452:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9456:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    945d:	00 00 00 
    9460:	41 ff d6             	call   *%r14
    9463:	49 8b 0e             	mov    (%r14),%rcx
    9466:	e9 49 00 00 00       	jmp    94b4 <AES_encrypt.149>
    946b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    9472:	00 00 

0000000000009474 <AES_encrypt.dummy.150>:
    9474:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    947b:	02 00 00 
    947e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9485:	02 00 00 
    9488:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    948f:	02 00 00 
    9492:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9499:	02 00 00 
    949c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94a3:	02 00 00 
    94a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94ad:	02 00 00 
    94b0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000094b4 <AES_encrypt.149>:
    94b4:	33 81 ac 00 00 00    	xor    0xac(%rcx),%eax
    94ba:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    94be:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    94c5:	00 00 00 
    94c8:	41 ff d6             	call   *%r14
    94cb:	41 89 06             	mov    %eax,(%r14)
    94ce:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    94d2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    94d9:	00 00 00 
    94dc:	41 ff d6             	call   *%r14
    94df:	41 8b 06             	mov    (%r14),%eax
    94e2:	c1 e8 18             	shr    $0x18,%eax
    94e5:	89 c0                	mov    %eax,%eax
    94e7:	89 c1                	mov    %eax,%ecx
    94e9:	e9 46 00 00 00       	jmp    9534 <AES_encrypt.150>
    94ee:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000094f4 <AES_encrypt.dummy.151>:
    94f4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    94fb:	02 00 00 
    94fe:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9505:	02 00 00 
    9508:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    950f:	02 00 00 
    9512:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9519:	02 00 00 
    951c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9523:	02 00 00 
    9526:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    952d:	02 00 00 
    9530:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009534 <AES_encrypt.150>:
    9534:	48 8d 05 c5 ea 02 00 	lea    0x2eac5(%rip),%rax        # 38000 <Te0>
    953b:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    953f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9546:	00 00 00 
    9549:	41 ff d6             	call   *%r14
    954c:	41 8b 06             	mov    (%r14),%eax
    954f:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    9553:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    955a:	00 00 00 
    955d:	41 ff d6             	call   *%r14
    9560:	41 8b 0e             	mov    (%r14),%ecx
    9563:	c1 e9 10             	shr    $0x10,%ecx
    9566:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    956c:	89 c9                	mov    %ecx,%ecx
    956e:	e9 41 00 00 00       	jmp    95b4 <AES_encrypt.151>
    9573:	90                   	nop

0000000000009574 <AES_encrypt.dummy.152>:
    9574:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    957b:	02 00 00 
    957e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9585:	02 00 00 
    9588:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    958f:	02 00 00 
    9592:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9599:	02 00 00 
    959c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95a3:	02 00 00 
    95a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    95ad:	02 00 00 
    95b0:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000095b4 <AES_encrypt.151>:
    95b4:	89 ca                	mov    %ecx,%edx
    95b6:	48 8d 0d 43 ee 02 00 	lea    0x2ee43(%rip),%rcx        # 38400 <Te1>
    95bd:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    95c0:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    95c4:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    95cb:	00 00 00 
    95ce:	41 ff d6             	call   *%r14
    95d1:	41 8b 0e             	mov    (%r14),%ecx
    95d4:	c1 e9 08             	shr    $0x8,%ecx
    95d7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    95dd:	89 c9                	mov    %ecx,%ecx
    95df:	89 ca                	mov    %ecx,%edx
    95e1:	48 8d 0d 18 f2 02 00 	lea    0x2f218(%rip),%rcx        # 38800 <Te2>
    95e8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    95eb:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    95ef:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    95f6:	00 00 00 
    95f9:	41 ff d6             	call   *%r14
    95fc:	41 8b 0e             	mov    (%r14),%ecx
    95ff:	e9 44 00 00 00       	jmp    9648 <AES_encrypt.152>
    9604:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009608 <AES_encrypt.dummy.153>:
    9608:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    960f:	02 00 00 
    9612:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9619:	02 00 00 
    961c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9623:	02 00 00 
    9626:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    962d:	02 00 00 
    9630:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9637:	02 00 00 
    963a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9641:	02 00 00 
    9644:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009648 <AES_encrypt.152>:
    9648:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    964e:	89 c9                	mov    %ecx,%ecx
    9650:	89 ca                	mov    %ecx,%edx
    9652:	48 8d 0d a7 f5 02 00 	lea    0x2f5a7(%rip),%rcx        # 38c00 <Te3>
    9659:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    965c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9660:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9667:	00 00 00 
    966a:	41 ff d6             	call   *%r14
    966d:	49 8b 0e             	mov    (%r14),%rcx
    9670:	33 81 b0 00 00 00    	xor    0xb0(%rcx),%eax
    9676:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    967a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9681:	00 00 00 
    9684:	41 ff d6             	call   *%r14
    9687:	41 89 06             	mov    %eax,(%r14)
    968a:	e9 4d 00 00 00       	jmp    96dc <AES_encrypt.153>
    968f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9696:	02 00 00 
    9699:	0f 1f 00             	nopl   (%rax)

000000000000969c <AES_encrypt.dummy.154>:
    969c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96a3:	02 00 00 
    96a6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96ad:	02 00 00 
    96b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96b7:	02 00 00 
    96ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96c1:	02 00 00 
    96c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96cb:	02 00 00 
    96ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    96d5:	02 00 00 
    96d8:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000096dc <AES_encrypt.153>:
    96dc:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    96e0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    96e7:	00 00 00 
    96ea:	41 ff d6             	call   *%r14
    96ed:	41 8b 06             	mov    (%r14),%eax
    96f0:	c1 e8 18             	shr    $0x18,%eax
    96f3:	89 c0                	mov    %eax,%eax
    96f5:	89 c1                	mov    %eax,%ecx
    96f7:	48 8d 05 02 e9 02 00 	lea    0x2e902(%rip),%rax        # 38000 <Te0>
    96fe:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9702:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9709:	00 00 00 
    970c:	41 ff d6             	call   *%r14
    970f:	41 8b 06             	mov    (%r14),%eax
    9712:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9716:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    971d:	00 00 00 
    9720:	41 ff d6             	call   *%r14
    9723:	41 8b 0e             	mov    (%r14),%ecx
    9726:	e9 45 00 00 00       	jmp    9770 <AES_encrypt.154>
    972b:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000009730 <AES_encrypt.dummy.155>:
    9730:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9737:	02 00 00 
    973a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9741:	02 00 00 
    9744:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    974b:	02 00 00 
    974e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9755:	02 00 00 
    9758:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    975f:	02 00 00 
    9762:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9769:	02 00 00 
    976c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009770 <AES_encrypt.154>:
    9770:	c1 e9 10             	shr    $0x10,%ecx
    9773:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9779:	89 c9                	mov    %ecx,%ecx
    977b:	89 ca                	mov    %ecx,%edx
    977d:	48 8d 0d 7c ec 02 00 	lea    0x2ec7c(%rip),%rcx        # 38400 <Te1>
    9784:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9787:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    978b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9792:	00 00 00 
    9795:	41 ff d6             	call   *%r14
    9798:	41 8b 0e             	mov    (%r14),%ecx
    979b:	c1 e9 08             	shr    $0x8,%ecx
    979e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    97a4:	89 c9                	mov    %ecx,%ecx
    97a6:	89 ca                	mov    %ecx,%edx
    97a8:	e9 43 00 00 00       	jmp    97f0 <AES_encrypt.155>
    97ad:	0f 1f 00             	nopl   (%rax)

00000000000097b0 <AES_encrypt.dummy.156>:
    97b0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97b7:	02 00 00 
    97ba:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97c1:	02 00 00 
    97c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97cb:	02 00 00 
    97ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97d5:	02 00 00 
    97d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97df:	02 00 00 
    97e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    97e9:	02 00 00 
    97ec:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000097f0 <AES_encrypt.155>:
    97f0:	48 8d 0d 09 f0 02 00 	lea    0x2f009(%rip),%rcx        # 38800 <Te2>
    97f7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    97fa:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    97fe:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9805:	00 00 00 
    9808:	41 ff d6             	call   *%r14
    980b:	41 8b 0e             	mov    (%r14),%ecx
    980e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9814:	89 c9                	mov    %ecx,%ecx
    9816:	89 ca                	mov    %ecx,%edx
    9818:	48 8d 0d e1 f3 02 00 	lea    0x2f3e1(%rip),%rcx        # 38c00 <Te3>
    981f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9822:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9826:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    982d:	00 00 00 
    9830:	41 ff d6             	call   *%r14
    9833:	49 8b 0e             	mov    (%r14),%rcx
    9836:	e9 49 00 00 00       	jmp    9884 <AES_encrypt.156>
    983b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    9842:	00 00 

0000000000009844 <AES_encrypt.dummy.157>:
    9844:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    984b:	02 00 00 
    984e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9855:	02 00 00 
    9858:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    985f:	02 00 00 
    9862:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9869:	02 00 00 
    986c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9873:	02 00 00 
    9876:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    987d:	02 00 00 
    9880:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009884 <AES_encrypt.156>:
    9884:	33 81 b4 00 00 00    	xor    0xb4(%rcx),%eax
    988a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    988e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9895:	00 00 00 
    9898:	41 ff d6             	call   *%r14
    989b:	41 89 06             	mov    %eax,(%r14)
    989e:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    98a2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    98a9:	00 00 00 
    98ac:	41 ff d6             	call   *%r14
    98af:	41 8b 06             	mov    (%r14),%eax
    98b2:	c1 e8 18             	shr    $0x18,%eax
    98b5:	89 c0                	mov    %eax,%eax
    98b7:	89 c1                	mov    %eax,%ecx
    98b9:	e9 46 00 00 00       	jmp    9904 <AES_encrypt.157>
    98be:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

00000000000098c4 <AES_encrypt.dummy.158>:
    98c4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98cb:	02 00 00 
    98ce:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98d5:	02 00 00 
    98d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98df:	02 00 00 
    98e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98e9:	02 00 00 
    98ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98f3:	02 00 00 
    98f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    98fd:	02 00 00 
    9900:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009904 <AES_encrypt.157>:
    9904:	48 8d 05 f5 e6 02 00 	lea    0x2e6f5(%rip),%rax        # 38000 <Te0>
    990b:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    990f:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9916:	00 00 00 
    9919:	41 ff d6             	call   *%r14
    991c:	41 8b 06             	mov    (%r14),%eax
    991f:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9923:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    992a:	00 00 00 
    992d:	41 ff d6             	call   *%r14
    9930:	41 8b 0e             	mov    (%r14),%ecx
    9933:	c1 e9 10             	shr    $0x10,%ecx
    9936:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    993c:	89 c9                	mov    %ecx,%ecx
    993e:	e9 41 00 00 00       	jmp    9984 <AES_encrypt.158>
    9943:	90                   	nop

0000000000009944 <AES_encrypt.dummy.159>:
    9944:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    994b:	02 00 00 
    994e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9955:	02 00 00 
    9958:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    995f:	02 00 00 
    9962:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9969:	02 00 00 
    996c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9973:	02 00 00 
    9976:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    997d:	02 00 00 
    9980:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009984 <AES_encrypt.158>:
    9984:	89 ca                	mov    %ecx,%edx
    9986:	48 8d 0d 73 ea 02 00 	lea    0x2ea73(%rip),%rcx        # 38400 <Te1>
    998d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9990:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9994:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    999b:	00 00 00 
    999e:	41 ff d6             	call   *%r14
    99a1:	41 8b 0e             	mov    (%r14),%ecx
    99a4:	c1 e9 08             	shr    $0x8,%ecx
    99a7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    99ad:	89 c9                	mov    %ecx,%ecx
    99af:	89 ca                	mov    %ecx,%edx
    99b1:	48 8d 0d 48 ee 02 00 	lea    0x2ee48(%rip),%rcx        # 38800 <Te2>
    99b8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    99bb:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    99bf:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    99c6:	00 00 00 
    99c9:	41 ff d6             	call   *%r14
    99cc:	41 8b 0e             	mov    (%r14),%ecx
    99cf:	e9 44 00 00 00       	jmp    9a18 <AES_encrypt.159>
    99d4:	0f 1f 40 08          	nopl   0x8(%rax)

00000000000099d8 <AES_encrypt.dummy.160>:
    99d8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99df:	02 00 00 
    99e2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99e9:	02 00 00 
    99ec:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99f3:	02 00 00 
    99f6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    99fd:	02 00 00 
    9a00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a07:	02 00 00 
    9a0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a11:	02 00 00 
    9a14:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009a18 <AES_encrypt.159>:
    9a18:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9a1e:	89 c9                	mov    %ecx,%ecx
    9a20:	89 ca                	mov    %ecx,%edx
    9a22:	48 8d 0d d7 f1 02 00 	lea    0x2f1d7(%rip),%rcx        # 38c00 <Te3>
    9a29:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9a2c:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9a30:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9a37:	00 00 00 
    9a3a:	41 ff d6             	call   *%r14
    9a3d:	49 8b 0e             	mov    (%r14),%rcx
    9a40:	33 81 b8 00 00 00    	xor    0xb8(%rcx),%eax
    9a46:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9a4a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9a51:	00 00 00 
    9a54:	41 ff d6             	call   *%r14
    9a57:	41 89 06             	mov    %eax,(%r14)
    9a5a:	e9 4d 00 00 00       	jmp    9aac <AES_encrypt.160>
    9a5f:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a66:	02 00 00 
    9a69:	0f 1f 00             	nopl   (%rax)

0000000000009a6c <AES_encrypt.dummy.161>:
    9a6c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a73:	02 00 00 
    9a76:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a7d:	02 00 00 
    9a80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a87:	02 00 00 
    9a8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a91:	02 00 00 
    9a94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9a9b:	02 00 00 
    9a9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9aa5:	02 00 00 
    9aa8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009aac <AES_encrypt.160>:
    9aac:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    9ab0:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9ab7:	00 00 00 
    9aba:	41 ff d6             	call   *%r14
    9abd:	41 8b 06             	mov    (%r14),%eax
    9ac0:	c1 e8 18             	shr    $0x18,%eax
    9ac3:	89 c0                	mov    %eax,%eax
    9ac5:	89 c1                	mov    %eax,%ecx
    9ac7:	48 8d 05 32 e5 02 00 	lea    0x2e532(%rip),%rax        # 38000 <Te0>
    9ace:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9ad2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9ad9:	00 00 00 
    9adc:	41 ff d6             	call   *%r14
    9adf:	41 8b 06             	mov    (%r14),%eax
    9ae2:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9ae6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9aed:	00 00 00 
    9af0:	41 ff d6             	call   *%r14
    9af3:	41 8b 0e             	mov    (%r14),%ecx
    9af6:	e9 45 00 00 00       	jmp    9b40 <AES_encrypt.161>
    9afb:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

0000000000009b00 <AES_encrypt.dummy.162>:
    9b00:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b07:	02 00 00 
    9b0a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b11:	02 00 00 
    9b14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b1b:	02 00 00 
    9b1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b25:	02 00 00 
    9b28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b2f:	02 00 00 
    9b32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b39:	02 00 00 
    9b3c:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009b40 <AES_encrypt.161>:
    9b40:	c1 e9 10             	shr    $0x10,%ecx
    9b43:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9b49:	89 c9                	mov    %ecx,%ecx
    9b4b:	89 ca                	mov    %ecx,%edx
    9b4d:	48 8d 0d ac e8 02 00 	lea    0x2e8ac(%rip),%rcx        # 38400 <Te1>
    9b54:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9b57:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    9b5b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9b62:	00 00 00 
    9b65:	41 ff d6             	call   *%r14
    9b68:	41 8b 0e             	mov    (%r14),%ecx
    9b6b:	c1 e9 08             	shr    $0x8,%ecx
    9b6e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9b74:	89 c9                	mov    %ecx,%ecx
    9b76:	89 ca                	mov    %ecx,%edx
    9b78:	e9 43 00 00 00       	jmp    9bc0 <AES_encrypt.162>
    9b7d:	0f 1f 00             	nopl   (%rax)

0000000000009b80 <AES_encrypt.dummy.163>:
    9b80:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b87:	02 00 00 
    9b8a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b91:	02 00 00 
    9b94:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9b9b:	02 00 00 
    9b9e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ba5:	02 00 00 
    9ba8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9baf:	02 00 00 
    9bb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9bb9:	02 00 00 
    9bbc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009bc0 <AES_encrypt.162>:
    9bc0:	48 8d 0d 39 ec 02 00 	lea    0x2ec39(%rip),%rcx        # 38800 <Te2>
    9bc7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9bca:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    9bce:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9bd5:	00 00 00 
    9bd8:	41 ff d6             	call   *%r14
    9bdb:	41 8b 0e             	mov    (%r14),%ecx
    9bde:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9be4:	89 c9                	mov    %ecx,%ecx
    9be6:	89 ca                	mov    %ecx,%edx
    9be8:	48 8d 0d 11 f0 02 00 	lea    0x2f011(%rip),%rcx        # 38c00 <Te3>
    9bef:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9bf2:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9bf6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9bfd:	00 00 00 
    9c00:	41 ff d6             	call   *%r14
    9c03:	49 8b 0e             	mov    (%r14),%rcx
    9c06:	e9 49 00 00 00       	jmp    9c54 <AES_encrypt.163>
    9c0b:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    9c12:	00 00 

0000000000009c14 <AES_encrypt.dummy.164>:
    9c14:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c1b:	02 00 00 
    9c1e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c25:	02 00 00 
    9c28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c2f:	02 00 00 
    9c32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c39:	02 00 00 
    9c3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c43:	02 00 00 
    9c46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9c4d:	02 00 00 
    9c50:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009c54 <AES_encrypt.163>:
    9c54:	33 81 bc 00 00 00    	xor    0xbc(%rcx),%eax
    9c5a:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9c5e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9c65:	00 00 00 
    9c68:	41 ff d6             	call   *%r14
    9c6b:	41 89 06             	mov    %eax,(%r14)
    9c6e:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    9c72:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9c79:	00 00 00 
    9c7c:	41 ff d6             	call   *%r14
    9c7f:	49 8b 06             	mov    (%r14),%rax
    9c82:	83 b8 f0 00 00 00 0c 	cmpl   $0xc,0xf0(%rax)
    9c89:	0f 8e 85 0f 00 00    	jle    ac14 <AES_encrypt.192>
    9c8f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9c93:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9c9a:	00 00 00 
    9c9d:	41 ff d6             	call   *%r14
    9ca0:	41 8b 06             	mov    (%r14),%eax
    9ca3:	e9 40 00 00 00       	jmp    9ce8 <AES_encrypt.164>

0000000000009ca8 <AES_encrypt.dummy.165>:
    9ca8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9caf:	02 00 00 
    9cb2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9cb9:	02 00 00 
    9cbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9cc3:	02 00 00 
    9cc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ccd:	02 00 00 
    9cd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9cd7:	02 00 00 
    9cda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ce1:	02 00 00 
    9ce4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009ce8 <AES_encrypt.164>:
    9ce8:	c1 e8 18             	shr    $0x18,%eax
    9ceb:	89 c0                	mov    %eax,%eax
    9ced:	89 c1                	mov    %eax,%ecx
    9cef:	48 8d 05 0a e3 02 00 	lea    0x2e30a(%rip),%rax        # 38000 <Te0>
    9cf6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9cfa:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9d01:	00 00 00 
    9d04:	41 ff d6             	call   *%r14
    9d07:	41 8b 06             	mov    (%r14),%eax
    9d0a:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    9d0e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9d15:	00 00 00 
    9d18:	41 ff d6             	call   *%r14
    9d1b:	41 8b 0e             	mov    (%r14),%ecx
    9d1e:	c1 e9 10             	shr    $0x10,%ecx
    9d21:	e9 42 00 00 00       	jmp    9d68 <AES_encrypt.165>
    9d26:	66 90                	xchg   %ax,%ax

0000000000009d28 <AES_encrypt.dummy.166>:
    9d28:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d2f:	02 00 00 
    9d32:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d39:	02 00 00 
    9d3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d43:	02 00 00 
    9d46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d4d:	02 00 00 
    9d50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d57:	02 00 00 
    9d5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9d61:	02 00 00 
    9d64:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009d68 <AES_encrypt.165>:
    9d68:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9d6e:	89 c9                	mov    %ecx,%ecx
    9d70:	89 ca                	mov    %ecx,%edx
    9d72:	48 8d 0d 87 e6 02 00 	lea    0x2e687(%rip),%rcx        # 38400 <Te1>
    9d79:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9d7c:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9d80:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9d87:	00 00 00 
    9d8a:	41 ff d6             	call   *%r14
    9d8d:	41 8b 0e             	mov    (%r14),%ecx
    9d90:	c1 e9 08             	shr    $0x8,%ecx
    9d93:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9d99:	89 c9                	mov    %ecx,%ecx
    9d9b:	89 ca                	mov    %ecx,%edx
    9d9d:	e9 46 00 00 00       	jmp    9de8 <AES_encrypt.166>
    9da2:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009da8 <AES_encrypt.dummy.167>:
    9da8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9daf:	02 00 00 
    9db2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9db9:	02 00 00 
    9dbc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9dc3:	02 00 00 
    9dc6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9dcd:	02 00 00 
    9dd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9dd7:	02 00 00 
    9dda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9de1:	02 00 00 
    9de4:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009de8 <AES_encrypt.166>:
    9de8:	48 8d 0d 11 ea 02 00 	lea    0x2ea11(%rip),%rcx        # 38800 <Te2>
    9def:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9df2:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9df6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9dfd:	00 00 00 
    9e00:	41 ff d6             	call   *%r14
    9e03:	41 8b 0e             	mov    (%r14),%ecx
    9e06:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9e0c:	89 c9                	mov    %ecx,%ecx
    9e0e:	89 ca                	mov    %ecx,%edx
    9e10:	48 8d 0d e9 ed 02 00 	lea    0x2ede9(%rip),%rcx        # 38c00 <Te3>
    9e17:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9e1a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    9e1e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9e25:	00 00 00 
    9e28:	41 ff d6             	call   *%r14
    9e2b:	49 8b 0e             	mov    (%r14),%rcx
    9e2e:	e9 49 00 00 00       	jmp    9e7c <AES_encrypt.167>
    9e33:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    9e3a:	00 00 

0000000000009e3c <AES_encrypt.dummy.168>:
    9e3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e43:	02 00 00 
    9e46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e4d:	02 00 00 
    9e50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e57:	02 00 00 
    9e5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e61:	02 00 00 
    9e64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e6b:	02 00 00 
    9e6e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9e75:	02 00 00 
    9e78:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009e7c <AES_encrypt.167>:
    9e7c:	33 81 c0 00 00 00    	xor    0xc0(%rcx),%eax
    9e82:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    9e86:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9e8d:	00 00 00 
    9e90:	41 ff d6             	call   *%r14
    9e93:	41 89 06             	mov    %eax,(%r14)
    9e96:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    9e9a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9ea1:	00 00 00 
    9ea4:	41 ff d6             	call   *%r14
    9ea7:	41 8b 06             	mov    (%r14),%eax
    9eaa:	c1 e8 18             	shr    $0x18,%eax
    9ead:	89 c0                	mov    %eax,%eax
    9eaf:	89 c1                	mov    %eax,%ecx
    9eb1:	e9 46 00 00 00       	jmp    9efc <AES_encrypt.168>
    9eb6:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

0000000000009ebc <AES_encrypt.dummy.169>:
    9ebc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ec3:	02 00 00 
    9ec6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ecd:	02 00 00 
    9ed0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ed7:	02 00 00 
    9eda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ee1:	02 00 00 
    9ee4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9eeb:	02 00 00 
    9eee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ef5:	02 00 00 
    9ef8:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009efc <AES_encrypt.168>:
    9efc:	48 8d 05 fd e0 02 00 	lea    0x2e0fd(%rip),%rax        # 38000 <Te0>
    9f03:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    9f07:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9f0e:	00 00 00 
    9f11:	41 ff d6             	call   *%r14
    9f14:	41 8b 06             	mov    (%r14),%eax
    9f17:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    9f1b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9f22:	00 00 00 
    9f25:	41 ff d6             	call   *%r14
    9f28:	41 8b 0e             	mov    (%r14),%ecx
    9f2b:	c1 e9 10             	shr    $0x10,%ecx
    9f2e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9f34:	89 c9                	mov    %ecx,%ecx
    9f36:	e9 41 00 00 00       	jmp    9f7c <AES_encrypt.169>
    9f3b:	90                   	nop

0000000000009f3c <AES_encrypt.dummy.170>:
    9f3c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f43:	02 00 00 
    9f46:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f4d:	02 00 00 
    9f50:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f57:	02 00 00 
    9f5a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f61:	02 00 00 
    9f64:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f6b:	02 00 00 
    9f6e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9f75:	02 00 00 
    9f78:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009f7c <AES_encrypt.169>:
    9f7c:	89 ca                	mov    %ecx,%edx
    9f7e:	48 8d 0d 7b e4 02 00 	lea    0x2e47b(%rip),%rcx        # 38400 <Te1>
    9f85:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9f88:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    9f8c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9f93:	00 00 00 
    9f96:	41 ff d6             	call   *%r14
    9f99:	41 8b 0e             	mov    (%r14),%ecx
    9f9c:	c1 e9 08             	shr    $0x8,%ecx
    9f9f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    9fa5:	89 c9                	mov    %ecx,%ecx
    9fa7:	89 ca                	mov    %ecx,%edx
    9fa9:	48 8d 0d 50 e8 02 00 	lea    0x2e850(%rip),%rcx        # 38800 <Te2>
    9fb0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    9fb3:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    9fb7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    9fbe:	00 00 00 
    9fc1:	41 ff d6             	call   *%r14
    9fc4:	41 8b 0e             	mov    (%r14),%ecx
    9fc7:	e9 44 00 00 00       	jmp    a010 <AES_encrypt.170>
    9fcc:	0f 1f 40 08          	nopl   0x8(%rax)

0000000000009fd0 <AES_encrypt.dummy.171>:
    9fd0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fd7:	02 00 00 
    9fda:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fe1:	02 00 00 
    9fe4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9feb:	02 00 00 
    9fee:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9ff5:	02 00 00 
    9ff8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    9fff:	02 00 00 
    a002:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a009:	02 00 00 
    a00c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a010 <AES_encrypt.170>:
    a010:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a016:	89 c9                	mov    %ecx,%ecx
    a018:	89 ca                	mov    %ecx,%edx
    a01a:	48 8d 0d df eb 02 00 	lea    0x2ebdf(%rip),%rcx        # 38c00 <Te3>
    a021:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a024:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a028:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a02f:	00 00 00 
    a032:	41 ff d6             	call   *%r14
    a035:	49 8b 0e             	mov    (%r14),%rcx
    a038:	33 81 c4 00 00 00    	xor    0xc4(%rcx),%eax
    a03e:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a042:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a049:	00 00 00 
    a04c:	41 ff d6             	call   *%r14
    a04f:	41 89 06             	mov    %eax,(%r14)
    a052:	e9 4d 00 00 00       	jmp    a0a4 <AES_encrypt.171>
    a057:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a05e:	02 00 00 
    a061:	0f 1f 00             	nopl   (%rax)

000000000000a064 <AES_encrypt.dummy.172>:
    a064:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a06b:	02 00 00 
    a06e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a075:	02 00 00 
    a078:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a07f:	02 00 00 
    a082:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a089:	02 00 00 
    a08c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a093:	02 00 00 
    a096:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a09d:	02 00 00 
    a0a0:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a0a4 <AES_encrypt.171>:
    a0a4:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a0a8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a0af:	00 00 00 
    a0b2:	41 ff d6             	call   *%r14
    a0b5:	41 8b 06             	mov    (%r14),%eax
    a0b8:	c1 e8 18             	shr    $0x18,%eax
    a0bb:	89 c0                	mov    %eax,%eax
    a0bd:	89 c1                	mov    %eax,%ecx
    a0bf:	48 8d 05 3a df 02 00 	lea    0x2df3a(%rip),%rax        # 38000 <Te0>
    a0c6:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a0ca:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a0d1:	00 00 00 
    a0d4:	41 ff d6             	call   *%r14
    a0d7:	41 8b 06             	mov    (%r14),%eax
    a0da:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a0de:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a0e5:	00 00 00 
    a0e8:	41 ff d6             	call   *%r14
    a0eb:	41 8b 0e             	mov    (%r14),%ecx
    a0ee:	e9 45 00 00 00       	jmp    a138 <AES_encrypt.172>
    a0f3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a0f8 <AES_encrypt.dummy.173>:
    a0f8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a0ff:	02 00 00 
    a102:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a109:	02 00 00 
    a10c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a113:	02 00 00 
    a116:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a11d:	02 00 00 
    a120:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a127:	02 00 00 
    a12a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a131:	02 00 00 
    a134:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a138 <AES_encrypt.172>:
    a138:	c1 e9 10             	shr    $0x10,%ecx
    a13b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a141:	89 c9                	mov    %ecx,%ecx
    a143:	89 ca                	mov    %ecx,%edx
    a145:	48 8d 0d b4 e2 02 00 	lea    0x2e2b4(%rip),%rcx        # 38400 <Te1>
    a14c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a14f:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a153:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a15a:	00 00 00 
    a15d:	41 ff d6             	call   *%r14
    a160:	41 8b 0e             	mov    (%r14),%ecx
    a163:	c1 e9 08             	shr    $0x8,%ecx
    a166:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a16c:	89 c9                	mov    %ecx,%ecx
    a16e:	89 ca                	mov    %ecx,%edx
    a170:	e9 43 00 00 00       	jmp    a1b8 <AES_encrypt.173>
    a175:	0f 1f 00             	nopl   (%rax)

000000000000a178 <AES_encrypt.dummy.174>:
    a178:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a17f:	02 00 00 
    a182:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a189:	02 00 00 
    a18c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a193:	02 00 00 
    a196:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a19d:	02 00 00 
    a1a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1a7:	02 00 00 
    a1aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a1b1:	02 00 00 
    a1b4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a1b8 <AES_encrypt.173>:
    a1b8:	48 8d 0d 41 e6 02 00 	lea    0x2e641(%rip),%rcx        # 38800 <Te2>
    a1bf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a1c2:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a1c6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a1cd:	00 00 00 
    a1d0:	41 ff d6             	call   *%r14
    a1d3:	41 8b 0e             	mov    (%r14),%ecx
    a1d6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a1dc:	89 c9                	mov    %ecx,%ecx
    a1de:	89 ca                	mov    %ecx,%edx
    a1e0:	48 8d 0d 19 ea 02 00 	lea    0x2ea19(%rip),%rcx        # 38c00 <Te3>
    a1e7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a1ea:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a1ee:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a1f5:	00 00 00 
    a1f8:	41 ff d6             	call   *%r14
    a1fb:	49 8b 0e             	mov    (%r14),%rcx
    a1fe:	e9 49 00 00 00       	jmp    a24c <AES_encrypt.174>
    a203:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    a20a:	00 00 

000000000000a20c <AES_encrypt.dummy.175>:
    a20c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a213:	02 00 00 
    a216:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a21d:	02 00 00 
    a220:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a227:	02 00 00 
    a22a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a231:	02 00 00 
    a234:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a23b:	02 00 00 
    a23e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a245:	02 00 00 
    a248:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a24c <AES_encrypt.174>:
    a24c:	33 81 c8 00 00 00    	xor    0xc8(%rcx),%eax
    a252:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a256:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a25d:	00 00 00 
    a260:	41 ff d6             	call   *%r14
    a263:	41 89 06             	mov    %eax,(%r14)
    a266:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    a26a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a271:	00 00 00 
    a274:	41 ff d6             	call   *%r14
    a277:	41 8b 06             	mov    (%r14),%eax
    a27a:	c1 e8 18             	shr    $0x18,%eax
    a27d:	89 c0                	mov    %eax,%eax
    a27f:	89 c1                	mov    %eax,%ecx
    a281:	e9 46 00 00 00       	jmp    a2cc <AES_encrypt.175>
    a286:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000a28c <AES_encrypt.dummy.176>:
    a28c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a293:	02 00 00 
    a296:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a29d:	02 00 00 
    a2a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2a7:	02 00 00 
    a2aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2b1:	02 00 00 
    a2b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2bb:	02 00 00 
    a2be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a2c5:	02 00 00 
    a2c8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a2cc <AES_encrypt.175>:
    a2cc:	48 8d 05 2d dd 02 00 	lea    0x2dd2d(%rip),%rax        # 38000 <Te0>
    a2d3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a2d7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a2de:	00 00 00 
    a2e1:	41 ff d6             	call   *%r14
    a2e4:	41 8b 06             	mov    (%r14),%eax
    a2e7:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a2eb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a2f2:	00 00 00 
    a2f5:	41 ff d6             	call   *%r14
    a2f8:	41 8b 0e             	mov    (%r14),%ecx
    a2fb:	c1 e9 10             	shr    $0x10,%ecx
    a2fe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a304:	89 c9                	mov    %ecx,%ecx
    a306:	e9 41 00 00 00       	jmp    a34c <AES_encrypt.176>
    a30b:	90                   	nop

000000000000a30c <AES_encrypt.dummy.177>:
    a30c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a313:	02 00 00 
    a316:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a31d:	02 00 00 
    a320:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a327:	02 00 00 
    a32a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a331:	02 00 00 
    a334:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a33b:	02 00 00 
    a33e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a345:	02 00 00 
    a348:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a34c <AES_encrypt.176>:
    a34c:	89 ca                	mov    %ecx,%edx
    a34e:	48 8d 0d ab e0 02 00 	lea    0x2e0ab(%rip),%rcx        # 38400 <Te1>
    a355:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a358:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a35c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a363:	00 00 00 
    a366:	41 ff d6             	call   *%r14
    a369:	41 8b 0e             	mov    (%r14),%ecx
    a36c:	c1 e9 08             	shr    $0x8,%ecx
    a36f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a375:	89 c9                	mov    %ecx,%ecx
    a377:	89 ca                	mov    %ecx,%edx
    a379:	48 8d 0d 80 e4 02 00 	lea    0x2e480(%rip),%rcx        # 38800 <Te2>
    a380:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a383:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a387:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a38e:	00 00 00 
    a391:	41 ff d6             	call   *%r14
    a394:	41 8b 0e             	mov    (%r14),%ecx
    a397:	e9 44 00 00 00       	jmp    a3e0 <AES_encrypt.177>
    a39c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a3a0 <AES_encrypt.dummy.178>:
    a3a0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3a7:	02 00 00 
    a3aa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3b1:	02 00 00 
    a3b4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3bb:	02 00 00 
    a3be:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3c5:	02 00 00 
    a3c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3cf:	02 00 00 
    a3d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a3d9:	02 00 00 
    a3dc:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a3e0 <AES_encrypt.177>:
    a3e0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a3e6:	89 c9                	mov    %ecx,%ecx
    a3e8:	89 ca                	mov    %ecx,%edx
    a3ea:	48 8d 0d 0f e8 02 00 	lea    0x2e80f(%rip),%rcx        # 38c00 <Te3>
    a3f1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a3f4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a3f8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a3ff:	00 00 00 
    a402:	41 ff d6             	call   *%r14
    a405:	49 8b 0e             	mov    (%r14),%rcx
    a408:	33 81 cc 00 00 00    	xor    0xcc(%rcx),%eax
    a40e:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a412:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a419:	00 00 00 
    a41c:	41 ff d6             	call   *%r14
    a41f:	41 89 06             	mov    %eax,(%r14)
    a422:	e9 4d 00 00 00       	jmp    a474 <AES_encrypt.178>
    a427:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a42e:	02 00 00 
    a431:	0f 1f 00             	nopl   (%rax)

000000000000a434 <AES_encrypt.dummy.179>:
    a434:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a43b:	02 00 00 
    a43e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a445:	02 00 00 
    a448:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a44f:	02 00 00 
    a452:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a459:	02 00 00 
    a45c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a463:	02 00 00 
    a466:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a46d:	02 00 00 
    a470:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a474 <AES_encrypt.178>:
    a474:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    a478:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a47f:	00 00 00 
    a482:	41 ff d6             	call   *%r14
    a485:	41 8b 06             	mov    (%r14),%eax
    a488:	c1 e8 18             	shr    $0x18,%eax
    a48b:	89 c0                	mov    %eax,%eax
    a48d:	89 c1                	mov    %eax,%ecx
    a48f:	48 8d 05 6a db 02 00 	lea    0x2db6a(%rip),%rax        # 38000 <Te0>
    a496:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a49a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a4a1:	00 00 00 
    a4a4:	41 ff d6             	call   *%r14
    a4a7:	41 8b 06             	mov    (%r14),%eax
    a4aa:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a4ae:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a4b5:	00 00 00 
    a4b8:	41 ff d6             	call   *%r14
    a4bb:	41 8b 0e             	mov    (%r14),%ecx
    a4be:	e9 45 00 00 00       	jmp    a508 <AES_encrypt.179>
    a4c3:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a4c8 <AES_encrypt.dummy.180>:
    a4c8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4cf:	02 00 00 
    a4d2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4d9:	02 00 00 
    a4dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4e3:	02 00 00 
    a4e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4ed:	02 00 00 
    a4f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a4f7:	02 00 00 
    a4fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a501:	02 00 00 
    a504:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a508 <AES_encrypt.179>:
    a508:	c1 e9 10             	shr    $0x10,%ecx
    a50b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a511:	89 c9                	mov    %ecx,%ecx
    a513:	89 ca                	mov    %ecx,%edx
    a515:	48 8d 0d e4 de 02 00 	lea    0x2dee4(%rip),%rcx        # 38400 <Te1>
    a51c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a51f:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a523:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a52a:	00 00 00 
    a52d:	41 ff d6             	call   *%r14
    a530:	41 8b 0e             	mov    (%r14),%ecx
    a533:	c1 e9 08             	shr    $0x8,%ecx
    a536:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a53c:	89 c9                	mov    %ecx,%ecx
    a53e:	89 ca                	mov    %ecx,%edx
    a540:	e9 43 00 00 00       	jmp    a588 <AES_encrypt.180>
    a545:	0f 1f 00             	nopl   (%rax)

000000000000a548 <AES_encrypt.dummy.181>:
    a548:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a54f:	02 00 00 
    a552:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a559:	02 00 00 
    a55c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a563:	02 00 00 
    a566:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a56d:	02 00 00 
    a570:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a577:	02 00 00 
    a57a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a581:	02 00 00 
    a584:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a588 <AES_encrypt.180>:
    a588:	48 8d 0d 71 e2 02 00 	lea    0x2e271(%rip),%rcx        # 38800 <Te2>
    a58f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a592:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a596:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a59d:	00 00 00 
    a5a0:	41 ff d6             	call   *%r14
    a5a3:	41 8b 0e             	mov    (%r14),%ecx
    a5a6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a5ac:	89 c9                	mov    %ecx,%ecx
    a5ae:	89 ca                	mov    %ecx,%edx
    a5b0:	48 8d 0d 49 e6 02 00 	lea    0x2e649(%rip),%rcx        # 38c00 <Te3>
    a5b7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a5ba:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a5be:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a5c5:	00 00 00 
    a5c8:	41 ff d6             	call   *%r14
    a5cb:	49 8b 0e             	mov    (%r14),%rcx
    a5ce:	e9 49 00 00 00       	jmp    a61c <AES_encrypt.181>
    a5d3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    a5da:	00 00 

000000000000a5dc <AES_encrypt.dummy.182>:
    a5dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5e3:	02 00 00 
    a5e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5ed:	02 00 00 
    a5f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a5f7:	02 00 00 
    a5fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a601:	02 00 00 
    a604:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a60b:	02 00 00 
    a60e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a615:	02 00 00 
    a618:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a61c <AES_encrypt.181>:
    a61c:	33 81 d0 00 00 00    	xor    0xd0(%rcx),%eax
    a622:	4c 8d 7d cc          	lea    -0x34(%rbp),%r15
    a626:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a62d:	00 00 00 
    a630:	41 ff d6             	call   *%r14
    a633:	41 89 06             	mov    %eax,(%r14)
    a636:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a63a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a641:	00 00 00 
    a644:	41 ff d6             	call   *%r14
    a647:	41 8b 06             	mov    (%r14),%eax
    a64a:	c1 e8 18             	shr    $0x18,%eax
    a64d:	89 c0                	mov    %eax,%eax
    a64f:	89 c1                	mov    %eax,%ecx
    a651:	e9 46 00 00 00       	jmp    a69c <AES_encrypt.182>
    a656:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000a65c <AES_encrypt.dummy.183>:
    a65c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a663:	02 00 00 
    a666:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a66d:	02 00 00 
    a670:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a677:	02 00 00 
    a67a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a681:	02 00 00 
    a684:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a68b:	02 00 00 
    a68e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a695:	02 00 00 
    a698:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a69c <AES_encrypt.182>:
    a69c:	48 8d 05 5d d9 02 00 	lea    0x2d95d(%rip),%rax        # 38000 <Te0>
    a6a3:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a6a7:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a6ae:	00 00 00 
    a6b1:	41 ff d6             	call   *%r14
    a6b4:	41 8b 06             	mov    (%r14),%eax
    a6b7:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a6bb:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a6c2:	00 00 00 
    a6c5:	41 ff d6             	call   *%r14
    a6c8:	41 8b 0e             	mov    (%r14),%ecx
    a6cb:	c1 e9 10             	shr    $0x10,%ecx
    a6ce:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a6d4:	89 c9                	mov    %ecx,%ecx
    a6d6:	e9 41 00 00 00       	jmp    a71c <AES_encrypt.183>
    a6db:	90                   	nop

000000000000a6dc <AES_encrypt.dummy.184>:
    a6dc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6e3:	02 00 00 
    a6e6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6ed:	02 00 00 
    a6f0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a6f7:	02 00 00 
    a6fa:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a701:	02 00 00 
    a704:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a70b:	02 00 00 
    a70e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a715:	02 00 00 
    a718:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a71c <AES_encrypt.183>:
    a71c:	89 ca                	mov    %ecx,%edx
    a71e:	48 8d 0d db dc 02 00 	lea    0x2dcdb(%rip),%rcx        # 38400 <Te1>
    a725:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a728:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a72c:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a733:	00 00 00 
    a736:	41 ff d6             	call   *%r14
    a739:	41 8b 0e             	mov    (%r14),%ecx
    a73c:	c1 e9 08             	shr    $0x8,%ecx
    a73f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a745:	89 c9                	mov    %ecx,%ecx
    a747:	89 ca                	mov    %ecx,%edx
    a749:	48 8d 0d b0 e0 02 00 	lea    0x2e0b0(%rip),%rcx        # 38800 <Te2>
    a750:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a753:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    a757:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a75e:	00 00 00 
    a761:	41 ff d6             	call   *%r14
    a764:	41 8b 0e             	mov    (%r14),%ecx
    a767:	e9 44 00 00 00       	jmp    a7b0 <AES_encrypt.184>
    a76c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a770 <AES_encrypt.dummy.185>:
    a770:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a777:	02 00 00 
    a77a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a781:	02 00 00 
    a784:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a78b:	02 00 00 
    a78e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a795:	02 00 00 
    a798:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a79f:	02 00 00 
    a7a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7a9:	02 00 00 
    a7ac:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a7b0 <AES_encrypt.184>:
    a7b0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a7b6:	89 c9                	mov    %ecx,%ecx
    a7b8:	89 ca                	mov    %ecx,%edx
    a7ba:	48 8d 0d 3f e4 02 00 	lea    0x2e43f(%rip),%rcx        # 38c00 <Te3>
    a7c1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a7c4:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a7c8:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a7cf:	00 00 00 
    a7d2:	41 ff d6             	call   *%r14
    a7d5:	49 8b 0e             	mov    (%r14),%rcx
    a7d8:	33 81 d4 00 00 00    	xor    0xd4(%rcx),%eax
    a7de:	4c 8d 7d c8          	lea    -0x38(%rbp),%r15
    a7e2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a7e9:	00 00 00 
    a7ec:	41 ff d6             	call   *%r14
    a7ef:	41 89 06             	mov    %eax,(%r14)
    a7f2:	e9 4d 00 00 00       	jmp    a844 <AES_encrypt.185>
    a7f7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a7fe:	02 00 00 
    a801:	0f 1f 00             	nopl   (%rax)

000000000000a804 <AES_encrypt.dummy.186>:
    a804:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a80b:	02 00 00 
    a80e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a815:	02 00 00 
    a818:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a81f:	02 00 00 
    a822:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a829:	02 00 00 
    a82c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a833:	02 00 00 
    a836:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a83d:	02 00 00 
    a840:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a844 <AES_encrypt.185>:
    a844:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    a848:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a84f:	00 00 00 
    a852:	41 ff d6             	call   *%r14
    a855:	41 8b 06             	mov    (%r14),%eax
    a858:	c1 e8 18             	shr    $0x18,%eax
    a85b:	89 c0                	mov    %eax,%eax
    a85d:	89 c1                	mov    %eax,%ecx
    a85f:	48 8d 05 9a d7 02 00 	lea    0x2d79a(%rip),%rax        # 38000 <Te0>
    a866:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    a86a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a871:	00 00 00 
    a874:	41 ff d6             	call   *%r14
    a877:	41 8b 06             	mov    (%r14),%eax
    a87a:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    a87e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a885:	00 00 00 
    a888:	41 ff d6             	call   *%r14
    a88b:	41 8b 0e             	mov    (%r14),%ecx
    a88e:	e9 45 00 00 00       	jmp    a8d8 <AES_encrypt.186>
    a893:	0f 1f 44 00 08       	nopl   0x8(%rax,%rax,1)

000000000000a898 <AES_encrypt.dummy.187>:
    a898:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a89f:	02 00 00 
    a8a2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8a9:	02 00 00 
    a8ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8b3:	02 00 00 
    a8b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8bd:	02 00 00 
    a8c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8c7:	02 00 00 
    a8ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a8d1:	02 00 00 
    a8d4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a8d8 <AES_encrypt.186>:
    a8d8:	c1 e9 10             	shr    $0x10,%ecx
    a8db:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a8e1:	89 c9                	mov    %ecx,%ecx
    a8e3:	89 ca                	mov    %ecx,%edx
    a8e5:	48 8d 0d 14 db 02 00 	lea    0x2db14(%rip),%rcx        # 38400 <Te1>
    a8ec:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a8ef:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    a8f3:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a8fa:	00 00 00 
    a8fd:	41 ff d6             	call   *%r14
    a900:	41 8b 0e             	mov    (%r14),%ecx
    a903:	c1 e9 08             	shr    $0x8,%ecx
    a906:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a90c:	89 c9                	mov    %ecx,%ecx
    a90e:	89 ca                	mov    %ecx,%edx
    a910:	e9 43 00 00 00       	jmp    a958 <AES_encrypt.187>
    a915:	0f 1f 00             	nopl   (%rax)

000000000000a918 <AES_encrypt.dummy.188>:
    a918:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a91f:	02 00 00 
    a922:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a929:	02 00 00 
    a92c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a933:	02 00 00 
    a936:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a93d:	02 00 00 
    a940:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a947:	02 00 00 
    a94a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a951:	02 00 00 
    a954:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a958 <AES_encrypt.187>:
    a958:	48 8d 0d a1 de 02 00 	lea    0x2dea1(%rip),%rcx        # 38800 <Te2>
    a95f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a962:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    a966:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a96d:	00 00 00 
    a970:	41 ff d6             	call   *%r14
    a973:	41 8b 0e             	mov    (%r14),%ecx
    a976:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    a97c:	89 c9                	mov    %ecx,%ecx
    a97e:	89 ca                	mov    %ecx,%edx
    a980:	48 8d 0d 79 e2 02 00 	lea    0x2e279(%rip),%rcx        # 38c00 <Te3>
    a987:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    a98a:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    a98e:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a995:	00 00 00 
    a998:	41 ff d6             	call   *%r14
    a99b:	49 8b 0e             	mov    (%r14),%rcx
    a99e:	e9 49 00 00 00       	jmp    a9ec <AES_encrypt.188>
    a9a3:	66 0f 1f 84 00 00 02 	nopw   0x200(%rax,%rax,1)
    a9aa:	00 00 

000000000000a9ac <AES_encrypt.dummy.189>:
    a9ac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9b3:	02 00 00 
    a9b6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9bd:	02 00 00 
    a9c0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9c7:	02 00 00 
    a9ca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9d1:	02 00 00 
    a9d4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9db:	02 00 00 
    a9de:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    a9e5:	02 00 00 
    a9e8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000a9ec <AES_encrypt.188>:
    a9ec:	33 81 d8 00 00 00    	xor    0xd8(%rcx),%eax
    a9f2:	4c 8d 7d c4          	lea    -0x3c(%rbp),%r15
    a9f6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    a9fd:	00 00 00 
    aa00:	41 ff d6             	call   *%r14
    aa03:	41 89 06             	mov    %eax,(%r14)
    aa06:	4c 8d 7d d0          	lea    -0x30(%rbp),%r15
    aa0a:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    aa11:	00 00 00 
    aa14:	41 ff d6             	call   *%r14
    aa17:	41 8b 06             	mov    (%r14),%eax
    aa1a:	c1 e8 18             	shr    $0x18,%eax
    aa1d:	89 c0                	mov    %eax,%eax
    aa1f:	89 c1                	mov    %eax,%ecx
    aa21:	e9 46 00 00 00       	jmp    aa6c <AES_encrypt.189>
    aa26:	66 0f 1f 44 00 08    	nopw   0x8(%rax,%rax,1)

000000000000aa2c <AES_encrypt.dummy.190>:
    aa2c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa33:	02 00 00 
    aa36:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa3d:	02 00 00 
    aa40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa47:	02 00 00 
    aa4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa51:	02 00 00 
    aa54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa5b:	02 00 00 
    aa5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aa65:	02 00 00 
    aa68:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000aa6c <AES_encrypt.189>:
    aa6c:	48 8d 05 8d d5 02 00 	lea    0x2d58d(%rip),%rax        # 38000 <Te0>
    aa73:	4c 8d 3c 88          	lea    (%rax,%rcx,4),%r15
    aa77:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    aa7e:	00 00 00 
    aa81:	41 ff d6             	call   *%r14
    aa84:	41 8b 06             	mov    (%r14),%eax
    aa87:	4c 8d 7d dc          	lea    -0x24(%rbp),%r15
    aa8b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    aa92:	00 00 00 
    aa95:	41 ff d6             	call   *%r14
    aa98:	41 8b 0e             	mov    (%r14),%ecx
    aa9b:	c1 e9 10             	shr    $0x10,%ecx
    aa9e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aaa4:	89 c9                	mov    %ecx,%ecx
    aaa6:	e9 41 00 00 00       	jmp    aaec <AES_encrypt.190>
    aaab:	90                   	nop

000000000000aaac <AES_encrypt.dummy.191>:
    aaac:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aab3:	02 00 00 
    aab6:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aabd:	02 00 00 
    aac0:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aac7:	02 00 00 
    aaca:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aad1:	02 00 00 
    aad4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aadb:	02 00 00 
    aade:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aae5:	02 00 00 
    aae8:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000aaec <AES_encrypt.190>:
    aaec:	89 ca                	mov    %ecx,%edx
    aaee:	48 8d 0d 0b d9 02 00 	lea    0x2d90b(%rip),%rcx        # 38400 <Te1>
    aaf5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aaf8:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
    aafc:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ab03:	00 00 00 
    ab06:	41 ff d6             	call   *%r14
    ab09:	41 8b 0e             	mov    (%r14),%ecx
    ab0c:	c1 e9 08             	shr    $0x8,%ecx
    ab0f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ab15:	89 c9                	mov    %ecx,%ecx
    ab17:	89 ca                	mov    %ecx,%edx
    ab19:	48 8d 0d e0 dc 02 00 	lea    0x2dce0(%rip),%rcx        # 38800 <Te2>
    ab20:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ab23:	4c 8d 7d d4          	lea    -0x2c(%rbp),%r15
    ab27:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ab2e:	00 00 00 
    ab31:	41 ff d6             	call   *%r14
    ab34:	41 8b 0e             	mov    (%r14),%ecx
    ab37:	e9 44 00 00 00       	jmp    ab80 <AES_encrypt.191>
    ab3c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ab40 <AES_encrypt.dummy.192>:
    ab40:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab47:	02 00 00 
    ab4a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab51:	02 00 00 
    ab54:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab5b:	02 00 00 
    ab5e:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab65:	02 00 00 
    ab68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab6f:	02 00 00 
    ab72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ab79:	02 00 00 
    ab7c:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ab80 <AES_encrypt.191>:
    ab80:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ab86:	89 c9                	mov    %ecx,%ecx
    ab88:	89 ca                	mov    %ecx,%edx
    ab8a:	48 8d 0d 6f e0 02 00 	lea    0x2e06f(%rip),%rcx        # 38c00 <Te3>
    ab91:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ab94:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    ab98:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ab9f:	00 00 00 
    aba2:	41 ff d6             	call   *%r14
    aba5:	49 8b 0e             	mov    (%r14),%rcx
    aba8:	33 81 dc 00 00 00    	xor    0xdc(%rcx),%eax
    abae:	4c 8d 7d c0          	lea    -0x40(%rbp),%r15
    abb2:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    abb9:	00 00 00 
    abbc:	41 ff d6             	call   *%r14
    abbf:	41 89 06             	mov    %eax,(%r14)
    abc2:	e9 4d 00 00 00       	jmp    ac14 <AES_encrypt.192>
    abc7:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abce:	02 00 00 
    abd1:	0f 1f 00             	nopl   (%rax)

000000000000abd4 <AES_encrypt.dummy.193>:
    abd4:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abdb:	02 00 00 
    abde:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abe5:	02 00 00 
    abe8:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abef:	02 00 00 
    abf2:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    abf9:	02 00 00 
    abfc:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac03:	02 00 00 
    ac06:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac0d:	02 00 00 
    ac10:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000ac14 <AES_encrypt.192>:
    ac14:	e9 00 00 00 00       	jmp    ac19 <AES_encrypt.192+0x5>
    ac19:	4c 8d 7d e8          	lea    -0x18(%rbp),%r15
    ac1d:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ac24:	00 00 00 
    ac27:	41 ff d6             	call   *%r14
    ac2a:	49 8b 06             	mov    (%r14),%rax
    ac2d:	4c 8d b8 f0 00 00 00 	lea    0xf0(%rax),%r15
    ac34:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ac3b:	00 00 00 
    ac3e:	41 ff d6             	call   *%r14
    ac41:	41 8b 0e             	mov    (%r14),%ecx
    ac44:	c1 e1 02             	shl    $0x2,%ecx
    ac47:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    ac4b:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    ac52:	00 00 00 
    ac55:	41 ff d6             	call   *%r14
    ac58:	49 8b 06             	mov    (%r14),%rax
    ac5b:	e9 48 00 00 00       	jmp    aca8 <AES_encrypt.193>
    ac60:	0f 1f 84 00 00 02 00 	nopl   0x200(%rax,%rax,1)
    ac67:	00 

000000000000ac68 <AES_encrypt.dummy.194>:
    ac68:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac6f:	02 00 00 
    ac72:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac79:	02 00 00 
    ac7c:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac83:	02 00 00 
    ac86:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac8d:	02 00 00 
    ac90:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    ac97:	02 00 00 
    ac9a:	2e 66 0f 1f 84 00 00 	cs nopw 0x200(%rax,%rax,1)
    aca1:	02 00 00 
    aca4:	0f 1f 40 08          	nopl   0x8(%rax)

000000000000aca8 <AES_encrypt.193>:
    aca8:	48 63 c9             	movslq %ecx,%rcx
    acab:	48 c1 e1 02          	shl    $0x2,%rcx
    acaf:	48 01 c8             	add    %rcx,%rax
    acb2:	4c 8d 7d e0          	lea    -0x20(%rbp),%r15
    acb6:	49 be 80 c6 00 00 00 	movabs $0xc680,%r14
    acbd:	00 00 00 
    acc0:	41 ff d6             	call   *%r14
    acc3:	49 89 06             	mov    %rax,(%r14)
    acc6:	5d                   	pop    %rbp
    acc7:	c3                   	ret    
    acc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    accf:	00 

000000000000acd0 <AES_decrypt>:
    acd0:	55                   	push   %rbp
    acd1:	48 89 e5             	mov    %rsp,%rbp
    acd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    ace0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ace4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ace8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acec:	0f b6 00             	movzbl (%rax),%eax
    acef:	c1 e0 18             	shl    $0x18,%eax
    acf2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    acf6:	0f b6 49 01          	movzbl 0x1(%rcx),%ecx
    acfa:	c1 e1 10             	shl    $0x10,%ecx
    acfd:	31 c8                	xor    %ecx,%eax
    acff:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad03:	0f b6 49 02          	movzbl 0x2(%rcx),%ecx
    ad07:	c1 e1 08             	shl    $0x8,%ecx
    ad0a:	31 c8                	xor    %ecx,%eax
    ad0c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad10:	0f b6 49 03          	movzbl 0x3(%rcx),%ecx
    ad14:	31 c8                	xor    %ecx,%eax
    ad16:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ad1a:	33 01                	xor    (%rcx),%eax
    ad1c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    ad1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad23:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    ad27:	c1 e0 18             	shl    $0x18,%eax
    ad2a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad2e:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    ad32:	c1 e1 10             	shl    $0x10,%ecx
    ad35:	31 c8                	xor    %ecx,%eax
    ad37:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad3b:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    ad3f:	c1 e1 08             	shl    $0x8,%ecx
    ad42:	31 c8                	xor    %ecx,%eax
    ad44:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad48:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    ad4c:	31 c8                	xor    %ecx,%eax
    ad4e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ad52:	33 41 04             	xor    0x4(%rcx),%eax
    ad55:	89 45 d8             	mov    %eax,-0x28(%rbp)
    ad58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad5c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    ad60:	c1 e0 18             	shl    $0x18,%eax
    ad63:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad67:	0f b6 49 09          	movzbl 0x9(%rcx),%ecx
    ad6b:	c1 e1 10             	shl    $0x10,%ecx
    ad6e:	31 c8                	xor    %ecx,%eax
    ad70:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad74:	0f b6 49 0a          	movzbl 0xa(%rcx),%ecx
    ad78:	c1 e1 08             	shl    $0x8,%ecx
    ad7b:	31 c8                	xor    %ecx,%eax
    ad7d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ad81:	0f b6 49 0b          	movzbl 0xb(%rcx),%ecx
    ad85:	31 c8                	xor    %ecx,%eax
    ad87:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ad8b:	33 41 08             	xor    0x8(%rcx),%eax
    ad8e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ad91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad95:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
    ad99:	c1 e0 18             	shl    $0x18,%eax
    ad9c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    ada0:	0f b6 49 0d          	movzbl 0xd(%rcx),%ecx
    ada4:	c1 e1 10             	shl    $0x10,%ecx
    ada7:	31 c8                	xor    %ecx,%eax
    ada9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    adad:	0f b6 49 0e          	movzbl 0xe(%rcx),%ecx
    adb1:	c1 e1 08             	shl    $0x8,%ecx
    adb4:	31 c8                	xor    %ecx,%eax
    adb6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    adba:	0f b6 49 0f          	movzbl 0xf(%rcx),%ecx
    adbe:	31 c8                	xor    %ecx,%eax
    adc0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    adc4:	33 41 0c             	xor    0xc(%rcx),%eax
    adc7:	89 45 d0             	mov    %eax,-0x30(%rbp)
    adca:	8b 45 dc             	mov    -0x24(%rbp),%eax
    adcd:	c1 e8 18             	shr    $0x18,%eax
    add0:	89 c0                	mov    %eax,%eax
    add2:	89 c1                	mov    %eax,%ecx
    add4:	48 8d 05 75 52 02 00 	lea    0x25275(%rip),%rax        # 30050 <Td0>
    addb:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    adde:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    ade1:	c1 e9 10             	shr    $0x10,%ecx
    ade4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    adea:	89 c9                	mov    %ecx,%ecx
    adec:	89 ca                	mov    %ecx,%edx
    adee:	48 8d 0d 5b 56 02 00 	lea    0x2565b(%rip),%rcx        # 30450 <Td1>
    adf5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    adf8:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    adfb:	c1 e9 08             	shr    $0x8,%ecx
    adfe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae04:	89 c9                	mov    %ecx,%ecx
    ae06:	89 ca                	mov    %ecx,%edx
    ae08:	48 8d 0d 41 5a 02 00 	lea    0x25a41(%rip),%rcx        # 30850 <Td2>
    ae0f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae12:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    ae15:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae1b:	89 c9                	mov    %ecx,%ecx
    ae1d:	89 ca                	mov    %ecx,%edx
    ae1f:	48 8d 0d 2a 5e 02 00 	lea    0x25e2a(%rip),%rcx        # 30c50 <Td3>
    ae26:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae29:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ae2d:	33 41 10             	xor    0x10(%rcx),%eax
    ae30:	89 45 cc             	mov    %eax,-0x34(%rbp)
    ae33:	8b 45 d8             	mov    -0x28(%rbp),%eax
    ae36:	c1 e8 18             	shr    $0x18,%eax
    ae39:	89 c0                	mov    %eax,%eax
    ae3b:	89 c1                	mov    %eax,%ecx
    ae3d:	48 8d 05 0c 52 02 00 	lea    0x2520c(%rip),%rax        # 30050 <Td0>
    ae44:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    ae47:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    ae4a:	c1 e9 10             	shr    $0x10,%ecx
    ae4d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae53:	89 c9                	mov    %ecx,%ecx
    ae55:	89 ca                	mov    %ecx,%edx
    ae57:	48 8d 0d f2 55 02 00 	lea    0x255f2(%rip),%rcx        # 30450 <Td1>
    ae5e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae61:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    ae64:	c1 e9 08             	shr    $0x8,%ecx
    ae67:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae6d:	89 c9                	mov    %ecx,%ecx
    ae6f:	89 ca                	mov    %ecx,%edx
    ae71:	48 8d 0d d8 59 02 00 	lea    0x259d8(%rip),%rcx        # 30850 <Td2>
    ae78:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae7b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    ae7e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ae84:	89 c9                	mov    %ecx,%ecx
    ae86:	89 ca                	mov    %ecx,%edx
    ae88:	48 8d 0d c1 5d 02 00 	lea    0x25dc1(%rip),%rcx        # 30c50 <Td3>
    ae8f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ae92:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ae96:	33 41 14             	xor    0x14(%rcx),%eax
    ae99:	89 45 c8             	mov    %eax,-0x38(%rbp)
    ae9c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ae9f:	c1 e8 18             	shr    $0x18,%eax
    aea2:	89 c0                	mov    %eax,%eax
    aea4:	89 c1                	mov    %eax,%ecx
    aea6:	48 8d 05 a3 51 02 00 	lea    0x251a3(%rip),%rax        # 30050 <Td0>
    aead:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    aeb0:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    aeb3:	c1 e9 10             	shr    $0x10,%ecx
    aeb6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aebc:	89 c9                	mov    %ecx,%ecx
    aebe:	89 ca                	mov    %ecx,%edx
    aec0:	48 8d 0d 89 55 02 00 	lea    0x25589(%rip),%rcx        # 30450 <Td1>
    aec7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aeca:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    aecd:	c1 e9 08             	shr    $0x8,%ecx
    aed0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aed6:	89 c9                	mov    %ecx,%ecx
    aed8:	89 ca                	mov    %ecx,%edx
    aeda:	48 8d 0d 6f 59 02 00 	lea    0x2596f(%rip),%rcx        # 30850 <Td2>
    aee1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aee4:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    aee7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aeed:	89 c9                	mov    %ecx,%ecx
    aeef:	89 ca                	mov    %ecx,%edx
    aef1:	48 8d 0d 58 5d 02 00 	lea    0x25d58(%rip),%rcx        # 30c50 <Td3>
    aef8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    aefb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    aeff:	33 41 18             	xor    0x18(%rcx),%eax
    af02:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    af05:	8b 45 d0             	mov    -0x30(%rbp),%eax
    af08:	c1 e8 18             	shr    $0x18,%eax
    af0b:	89 c0                	mov    %eax,%eax
    af0d:	89 c1                	mov    %eax,%ecx
    af0f:	48 8d 05 3a 51 02 00 	lea    0x2513a(%rip),%rax        # 30050 <Td0>
    af16:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    af19:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    af1c:	c1 e9 10             	shr    $0x10,%ecx
    af1f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    af25:	89 c9                	mov    %ecx,%ecx
    af27:	89 ca                	mov    %ecx,%edx
    af29:	48 8d 0d 20 55 02 00 	lea    0x25520(%rip),%rcx        # 30450 <Td1>
    af30:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    af33:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    af36:	c1 e9 08             	shr    $0x8,%ecx
    af39:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    af3f:	89 c9                	mov    %ecx,%ecx
    af41:	89 ca                	mov    %ecx,%edx
    af43:	48 8d 0d 06 59 02 00 	lea    0x25906(%rip),%rcx        # 30850 <Td2>
    af4a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    af4d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    af50:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    af56:	89 c9                	mov    %ecx,%ecx
    af58:	89 ca                	mov    %ecx,%edx
    af5a:	48 8d 0d ef 5c 02 00 	lea    0x25cef(%rip),%rcx        # 30c50 <Td3>
    af61:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    af64:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    af68:	33 41 1c             	xor    0x1c(%rcx),%eax
    af6b:	89 45 c0             	mov    %eax,-0x40(%rbp)
    af6e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    af71:	c1 e8 18             	shr    $0x18,%eax
    af74:	89 c0                	mov    %eax,%eax
    af76:	89 c1                	mov    %eax,%ecx
    af78:	48 8d 05 d1 50 02 00 	lea    0x250d1(%rip),%rax        # 30050 <Td0>
    af7f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    af82:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    af85:	c1 e9 10             	shr    $0x10,%ecx
    af88:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    af8e:	89 c9                	mov    %ecx,%ecx
    af90:	89 ca                	mov    %ecx,%edx
    af92:	48 8d 0d b7 54 02 00 	lea    0x254b7(%rip),%rcx        # 30450 <Td1>
    af99:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    af9c:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    af9f:	c1 e9 08             	shr    $0x8,%ecx
    afa2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    afa8:	89 c9                	mov    %ecx,%ecx
    afaa:	89 ca                	mov    %ecx,%edx
    afac:	48 8d 0d 9d 58 02 00 	lea    0x2589d(%rip),%rcx        # 30850 <Td2>
    afb3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    afb6:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    afb9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    afbf:	89 c9                	mov    %ecx,%ecx
    afc1:	89 ca                	mov    %ecx,%edx
    afc3:	48 8d 0d 86 5c 02 00 	lea    0x25c86(%rip),%rcx        # 30c50 <Td3>
    afca:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    afcd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    afd1:	33 41 20             	xor    0x20(%rcx),%eax
    afd4:	89 45 dc             	mov    %eax,-0x24(%rbp)
    afd7:	8b 45 c8             	mov    -0x38(%rbp),%eax
    afda:	c1 e8 18             	shr    $0x18,%eax
    afdd:	89 c0                	mov    %eax,%eax
    afdf:	89 c1                	mov    %eax,%ecx
    afe1:	48 8d 05 68 50 02 00 	lea    0x25068(%rip),%rax        # 30050 <Td0>
    afe8:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    afeb:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    afee:	c1 e9 10             	shr    $0x10,%ecx
    aff1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    aff7:	89 c9                	mov    %ecx,%ecx
    aff9:	89 ca                	mov    %ecx,%edx
    affb:	48 8d 0d 4e 54 02 00 	lea    0x2544e(%rip),%rcx        # 30450 <Td1>
    b002:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b005:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b008:	c1 e9 08             	shr    $0x8,%ecx
    b00b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b011:	89 c9                	mov    %ecx,%ecx
    b013:	89 ca                	mov    %ecx,%edx
    b015:	48 8d 0d 34 58 02 00 	lea    0x25834(%rip),%rcx        # 30850 <Td2>
    b01c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b01f:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b022:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b028:	89 c9                	mov    %ecx,%ecx
    b02a:	89 ca                	mov    %ecx,%edx
    b02c:	48 8d 0d 1d 5c 02 00 	lea    0x25c1d(%rip),%rcx        # 30c50 <Td3>
    b033:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b036:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b03a:	33 41 24             	xor    0x24(%rcx),%eax
    b03d:	89 45 d8             	mov    %eax,-0x28(%rbp)
    b040:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    b043:	c1 e8 18             	shr    $0x18,%eax
    b046:	89 c0                	mov    %eax,%eax
    b048:	89 c1                	mov    %eax,%ecx
    b04a:	48 8d 05 ff 4f 02 00 	lea    0x24fff(%rip),%rax        # 30050 <Td0>
    b051:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b054:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b057:	c1 e9 10             	shr    $0x10,%ecx
    b05a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b060:	89 c9                	mov    %ecx,%ecx
    b062:	89 ca                	mov    %ecx,%edx
    b064:	48 8d 0d e5 53 02 00 	lea    0x253e5(%rip),%rcx        # 30450 <Td1>
    b06b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b06e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b071:	c1 e9 08             	shr    $0x8,%ecx
    b074:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b07a:	89 c9                	mov    %ecx,%ecx
    b07c:	89 ca                	mov    %ecx,%edx
    b07e:	48 8d 0d cb 57 02 00 	lea    0x257cb(%rip),%rcx        # 30850 <Td2>
    b085:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b088:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b08b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b091:	89 c9                	mov    %ecx,%ecx
    b093:	89 ca                	mov    %ecx,%edx
    b095:	48 8d 0d b4 5b 02 00 	lea    0x25bb4(%rip),%rcx        # 30c50 <Td3>
    b09c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b09f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b0a3:	33 41 28             	xor    0x28(%rcx),%eax
    b0a6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    b0a9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    b0ac:	c1 e8 18             	shr    $0x18,%eax
    b0af:	89 c0                	mov    %eax,%eax
    b0b1:	89 c1                	mov    %eax,%ecx
    b0b3:	48 8d 05 96 4f 02 00 	lea    0x24f96(%rip),%rax        # 30050 <Td0>
    b0ba:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b0bd:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b0c0:	c1 e9 10             	shr    $0x10,%ecx
    b0c3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b0c9:	89 c9                	mov    %ecx,%ecx
    b0cb:	89 ca                	mov    %ecx,%edx
    b0cd:	48 8d 0d 7c 53 02 00 	lea    0x2537c(%rip),%rcx        # 30450 <Td1>
    b0d4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b0d7:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b0da:	c1 e9 08             	shr    $0x8,%ecx
    b0dd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b0e3:	89 c9                	mov    %ecx,%ecx
    b0e5:	89 ca                	mov    %ecx,%edx
    b0e7:	48 8d 0d 62 57 02 00 	lea    0x25762(%rip),%rcx        # 30850 <Td2>
    b0ee:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b0f1:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b0f4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b0fa:	89 c9                	mov    %ecx,%ecx
    b0fc:	89 ca                	mov    %ecx,%edx
    b0fe:	48 8d 0d 4b 5b 02 00 	lea    0x25b4b(%rip),%rcx        # 30c50 <Td3>
    b105:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b108:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b10c:	33 41 2c             	xor    0x2c(%rcx),%eax
    b10f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b112:	8b 45 dc             	mov    -0x24(%rbp),%eax
    b115:	c1 e8 18             	shr    $0x18,%eax
    b118:	89 c0                	mov    %eax,%eax
    b11a:	89 c1                	mov    %eax,%ecx
    b11c:	48 8d 05 2d 4f 02 00 	lea    0x24f2d(%rip),%rax        # 30050 <Td0>
    b123:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b126:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b129:	c1 e9 10             	shr    $0x10,%ecx
    b12c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b132:	89 c9                	mov    %ecx,%ecx
    b134:	89 ca                	mov    %ecx,%edx
    b136:	48 8d 0d 13 53 02 00 	lea    0x25313(%rip),%rcx        # 30450 <Td1>
    b13d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b140:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b143:	c1 e9 08             	shr    $0x8,%ecx
    b146:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b14c:	89 c9                	mov    %ecx,%ecx
    b14e:	89 ca                	mov    %ecx,%edx
    b150:	48 8d 0d f9 56 02 00 	lea    0x256f9(%rip),%rcx        # 30850 <Td2>
    b157:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b15a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b15d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b163:	89 c9                	mov    %ecx,%ecx
    b165:	89 ca                	mov    %ecx,%edx
    b167:	48 8d 0d e2 5a 02 00 	lea    0x25ae2(%rip),%rcx        # 30c50 <Td3>
    b16e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b171:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b175:	33 41 30             	xor    0x30(%rcx),%eax
    b178:	89 45 cc             	mov    %eax,-0x34(%rbp)
    b17b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    b17e:	c1 e8 18             	shr    $0x18,%eax
    b181:	89 c0                	mov    %eax,%eax
    b183:	89 c1                	mov    %eax,%ecx
    b185:	48 8d 05 c4 4e 02 00 	lea    0x24ec4(%rip),%rax        # 30050 <Td0>
    b18c:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b18f:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b192:	c1 e9 10             	shr    $0x10,%ecx
    b195:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b19b:	89 c9                	mov    %ecx,%ecx
    b19d:	89 ca                	mov    %ecx,%edx
    b19f:	48 8d 0d aa 52 02 00 	lea    0x252aa(%rip),%rcx        # 30450 <Td1>
    b1a6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b1a9:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b1ac:	c1 e9 08             	shr    $0x8,%ecx
    b1af:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b1b5:	89 c9                	mov    %ecx,%ecx
    b1b7:	89 ca                	mov    %ecx,%edx
    b1b9:	48 8d 0d 90 56 02 00 	lea    0x25690(%rip),%rcx        # 30850 <Td2>
    b1c0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b1c3:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b1c6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b1cc:	89 c9                	mov    %ecx,%ecx
    b1ce:	89 ca                	mov    %ecx,%edx
    b1d0:	48 8d 0d 79 5a 02 00 	lea    0x25a79(%rip),%rcx        # 30c50 <Td3>
    b1d7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b1da:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b1de:	33 41 34             	xor    0x34(%rcx),%eax
    b1e1:	89 45 c8             	mov    %eax,-0x38(%rbp)
    b1e4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    b1e7:	c1 e8 18             	shr    $0x18,%eax
    b1ea:	89 c0                	mov    %eax,%eax
    b1ec:	89 c1                	mov    %eax,%ecx
    b1ee:	48 8d 05 5b 4e 02 00 	lea    0x24e5b(%rip),%rax        # 30050 <Td0>
    b1f5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b1f8:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b1fb:	c1 e9 10             	shr    $0x10,%ecx
    b1fe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b204:	89 c9                	mov    %ecx,%ecx
    b206:	89 ca                	mov    %ecx,%edx
    b208:	48 8d 0d 41 52 02 00 	lea    0x25241(%rip),%rcx        # 30450 <Td1>
    b20f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b212:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b215:	c1 e9 08             	shr    $0x8,%ecx
    b218:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b21e:	89 c9                	mov    %ecx,%ecx
    b220:	89 ca                	mov    %ecx,%edx
    b222:	48 8d 0d 27 56 02 00 	lea    0x25627(%rip),%rcx        # 30850 <Td2>
    b229:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b22c:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b22f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b235:	89 c9                	mov    %ecx,%ecx
    b237:	89 ca                	mov    %ecx,%edx
    b239:	48 8d 0d 10 5a 02 00 	lea    0x25a10(%rip),%rcx        # 30c50 <Td3>
    b240:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b243:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b247:	33 41 38             	xor    0x38(%rcx),%eax
    b24a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    b24d:	8b 45 d0             	mov    -0x30(%rbp),%eax
    b250:	c1 e8 18             	shr    $0x18,%eax
    b253:	89 c0                	mov    %eax,%eax
    b255:	89 c1                	mov    %eax,%ecx
    b257:	48 8d 05 f2 4d 02 00 	lea    0x24df2(%rip),%rax        # 30050 <Td0>
    b25e:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b261:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b264:	c1 e9 10             	shr    $0x10,%ecx
    b267:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b26d:	89 c9                	mov    %ecx,%ecx
    b26f:	89 ca                	mov    %ecx,%edx
    b271:	48 8d 0d d8 51 02 00 	lea    0x251d8(%rip),%rcx        # 30450 <Td1>
    b278:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b27b:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b27e:	c1 e9 08             	shr    $0x8,%ecx
    b281:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b287:	89 c9                	mov    %ecx,%ecx
    b289:	89 ca                	mov    %ecx,%edx
    b28b:	48 8d 0d be 55 02 00 	lea    0x255be(%rip),%rcx        # 30850 <Td2>
    b292:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b295:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b298:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b29e:	89 c9                	mov    %ecx,%ecx
    b2a0:	89 ca                	mov    %ecx,%edx
    b2a2:	48 8d 0d a7 59 02 00 	lea    0x259a7(%rip),%rcx        # 30c50 <Td3>
    b2a9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b2ac:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b2b0:	33 41 3c             	xor    0x3c(%rcx),%eax
    b2b3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    b2b6:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b2b9:	c1 e8 18             	shr    $0x18,%eax
    b2bc:	89 c0                	mov    %eax,%eax
    b2be:	89 c1                	mov    %eax,%ecx
    b2c0:	48 8d 05 89 4d 02 00 	lea    0x24d89(%rip),%rax        # 30050 <Td0>
    b2c7:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b2ca:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b2cd:	c1 e9 10             	shr    $0x10,%ecx
    b2d0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b2d6:	89 c9                	mov    %ecx,%ecx
    b2d8:	89 ca                	mov    %ecx,%edx
    b2da:	48 8d 0d 6f 51 02 00 	lea    0x2516f(%rip),%rcx        # 30450 <Td1>
    b2e1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b2e4:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b2e7:	c1 e9 08             	shr    $0x8,%ecx
    b2ea:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b2f0:	89 c9                	mov    %ecx,%ecx
    b2f2:	89 ca                	mov    %ecx,%edx
    b2f4:	48 8d 0d 55 55 02 00 	lea    0x25555(%rip),%rcx        # 30850 <Td2>
    b2fb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b2fe:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b301:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b307:	89 c9                	mov    %ecx,%ecx
    b309:	89 ca                	mov    %ecx,%edx
    b30b:	48 8d 0d 3e 59 02 00 	lea    0x2593e(%rip),%rcx        # 30c50 <Td3>
    b312:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b315:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b319:	33 41 40             	xor    0x40(%rcx),%eax
    b31c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b31f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    b322:	c1 e8 18             	shr    $0x18,%eax
    b325:	89 c0                	mov    %eax,%eax
    b327:	89 c1                	mov    %eax,%ecx
    b329:	48 8d 05 20 4d 02 00 	lea    0x24d20(%rip),%rax        # 30050 <Td0>
    b330:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b333:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b336:	c1 e9 10             	shr    $0x10,%ecx
    b339:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b33f:	89 c9                	mov    %ecx,%ecx
    b341:	89 ca                	mov    %ecx,%edx
    b343:	48 8d 0d 06 51 02 00 	lea    0x25106(%rip),%rcx        # 30450 <Td1>
    b34a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b34d:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b350:	c1 e9 08             	shr    $0x8,%ecx
    b353:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b359:	89 c9                	mov    %ecx,%ecx
    b35b:	89 ca                	mov    %ecx,%edx
    b35d:	48 8d 0d ec 54 02 00 	lea    0x254ec(%rip),%rcx        # 30850 <Td2>
    b364:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b367:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b36a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b370:	89 c9                	mov    %ecx,%ecx
    b372:	89 ca                	mov    %ecx,%edx
    b374:	48 8d 0d d5 58 02 00 	lea    0x258d5(%rip),%rcx        # 30c50 <Td3>
    b37b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b37e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b382:	33 41 44             	xor    0x44(%rcx),%eax
    b385:	89 45 d8             	mov    %eax,-0x28(%rbp)
    b388:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    b38b:	c1 e8 18             	shr    $0x18,%eax
    b38e:	89 c0                	mov    %eax,%eax
    b390:	89 c1                	mov    %eax,%ecx
    b392:	48 8d 05 b7 4c 02 00 	lea    0x24cb7(%rip),%rax        # 30050 <Td0>
    b399:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b39c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b39f:	c1 e9 10             	shr    $0x10,%ecx
    b3a2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b3a8:	89 c9                	mov    %ecx,%ecx
    b3aa:	89 ca                	mov    %ecx,%edx
    b3ac:	48 8d 0d 9d 50 02 00 	lea    0x2509d(%rip),%rcx        # 30450 <Td1>
    b3b3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b3b6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b3b9:	c1 e9 08             	shr    $0x8,%ecx
    b3bc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b3c2:	89 c9                	mov    %ecx,%ecx
    b3c4:	89 ca                	mov    %ecx,%edx
    b3c6:	48 8d 0d 83 54 02 00 	lea    0x25483(%rip),%rcx        # 30850 <Td2>
    b3cd:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b3d0:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b3d3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b3d9:	89 c9                	mov    %ecx,%ecx
    b3db:	89 ca                	mov    %ecx,%edx
    b3dd:	48 8d 0d 6c 58 02 00 	lea    0x2586c(%rip),%rcx        # 30c50 <Td3>
    b3e4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b3e7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b3eb:	33 41 48             	xor    0x48(%rcx),%eax
    b3ee:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    b3f1:	8b 45 c0             	mov    -0x40(%rbp),%eax
    b3f4:	c1 e8 18             	shr    $0x18,%eax
    b3f7:	89 c0                	mov    %eax,%eax
    b3f9:	89 c1                	mov    %eax,%ecx
    b3fb:	48 8d 05 4e 4c 02 00 	lea    0x24c4e(%rip),%rax        # 30050 <Td0>
    b402:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b405:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b408:	c1 e9 10             	shr    $0x10,%ecx
    b40b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b411:	89 c9                	mov    %ecx,%ecx
    b413:	89 ca                	mov    %ecx,%edx
    b415:	48 8d 0d 34 50 02 00 	lea    0x25034(%rip),%rcx        # 30450 <Td1>
    b41c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b41f:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b422:	c1 e9 08             	shr    $0x8,%ecx
    b425:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b42b:	89 c9                	mov    %ecx,%ecx
    b42d:	89 ca                	mov    %ecx,%edx
    b42f:	48 8d 0d 1a 54 02 00 	lea    0x2541a(%rip),%rcx        # 30850 <Td2>
    b436:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b439:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b43c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b442:	89 c9                	mov    %ecx,%ecx
    b444:	89 ca                	mov    %ecx,%edx
    b446:	48 8d 0d 03 58 02 00 	lea    0x25803(%rip),%rcx        # 30c50 <Td3>
    b44d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b450:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b454:	33 41 4c             	xor    0x4c(%rcx),%eax
    b457:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b45a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    b45d:	c1 e8 18             	shr    $0x18,%eax
    b460:	89 c0                	mov    %eax,%eax
    b462:	89 c1                	mov    %eax,%ecx
    b464:	48 8d 05 e5 4b 02 00 	lea    0x24be5(%rip),%rax        # 30050 <Td0>
    b46b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b46e:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b471:	c1 e9 10             	shr    $0x10,%ecx
    b474:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b47a:	89 c9                	mov    %ecx,%ecx
    b47c:	89 ca                	mov    %ecx,%edx
    b47e:	48 8d 0d cb 4f 02 00 	lea    0x24fcb(%rip),%rcx        # 30450 <Td1>
    b485:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b488:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b48b:	c1 e9 08             	shr    $0x8,%ecx
    b48e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b494:	89 c9                	mov    %ecx,%ecx
    b496:	89 ca                	mov    %ecx,%edx
    b498:	48 8d 0d b1 53 02 00 	lea    0x253b1(%rip),%rcx        # 30850 <Td2>
    b49f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b4a2:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b4a5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b4ab:	89 c9                	mov    %ecx,%ecx
    b4ad:	89 ca                	mov    %ecx,%edx
    b4af:	48 8d 0d 9a 57 02 00 	lea    0x2579a(%rip),%rcx        # 30c50 <Td3>
    b4b6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b4b9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b4bd:	33 41 50             	xor    0x50(%rcx),%eax
    b4c0:	89 45 cc             	mov    %eax,-0x34(%rbp)
    b4c3:	8b 45 d8             	mov    -0x28(%rbp),%eax
    b4c6:	c1 e8 18             	shr    $0x18,%eax
    b4c9:	89 c0                	mov    %eax,%eax
    b4cb:	89 c1                	mov    %eax,%ecx
    b4cd:	48 8d 05 7c 4b 02 00 	lea    0x24b7c(%rip),%rax        # 30050 <Td0>
    b4d4:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b4d7:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b4da:	c1 e9 10             	shr    $0x10,%ecx
    b4dd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b4e3:	89 c9                	mov    %ecx,%ecx
    b4e5:	89 ca                	mov    %ecx,%edx
    b4e7:	48 8d 0d 62 4f 02 00 	lea    0x24f62(%rip),%rcx        # 30450 <Td1>
    b4ee:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b4f1:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b4f4:	c1 e9 08             	shr    $0x8,%ecx
    b4f7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b4fd:	89 c9                	mov    %ecx,%ecx
    b4ff:	89 ca                	mov    %ecx,%edx
    b501:	48 8d 0d 48 53 02 00 	lea    0x25348(%rip),%rcx        # 30850 <Td2>
    b508:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b50b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b50e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b514:	89 c9                	mov    %ecx,%ecx
    b516:	89 ca                	mov    %ecx,%edx
    b518:	48 8d 0d 31 57 02 00 	lea    0x25731(%rip),%rcx        # 30c50 <Td3>
    b51f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b522:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b526:	33 41 54             	xor    0x54(%rcx),%eax
    b529:	89 45 c8             	mov    %eax,-0x38(%rbp)
    b52c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    b52f:	c1 e8 18             	shr    $0x18,%eax
    b532:	89 c0                	mov    %eax,%eax
    b534:	89 c1                	mov    %eax,%ecx
    b536:	48 8d 05 13 4b 02 00 	lea    0x24b13(%rip),%rax        # 30050 <Td0>
    b53d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b540:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b543:	c1 e9 10             	shr    $0x10,%ecx
    b546:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b54c:	89 c9                	mov    %ecx,%ecx
    b54e:	89 ca                	mov    %ecx,%edx
    b550:	48 8d 0d f9 4e 02 00 	lea    0x24ef9(%rip),%rcx        # 30450 <Td1>
    b557:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b55a:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b55d:	c1 e9 08             	shr    $0x8,%ecx
    b560:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b566:	89 c9                	mov    %ecx,%ecx
    b568:	89 ca                	mov    %ecx,%edx
    b56a:	48 8d 0d df 52 02 00 	lea    0x252df(%rip),%rcx        # 30850 <Td2>
    b571:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b574:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b577:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b57d:	89 c9                	mov    %ecx,%ecx
    b57f:	89 ca                	mov    %ecx,%edx
    b581:	48 8d 0d c8 56 02 00 	lea    0x256c8(%rip),%rcx        # 30c50 <Td3>
    b588:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b58b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b58f:	33 41 58             	xor    0x58(%rcx),%eax
    b592:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    b595:	8b 45 d0             	mov    -0x30(%rbp),%eax
    b598:	c1 e8 18             	shr    $0x18,%eax
    b59b:	89 c0                	mov    %eax,%eax
    b59d:	89 c1                	mov    %eax,%ecx
    b59f:	48 8d 05 aa 4a 02 00 	lea    0x24aaa(%rip),%rax        # 30050 <Td0>
    b5a6:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b5a9:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b5ac:	c1 e9 10             	shr    $0x10,%ecx
    b5af:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b5b5:	89 c9                	mov    %ecx,%ecx
    b5b7:	89 ca                	mov    %ecx,%edx
    b5b9:	48 8d 0d 90 4e 02 00 	lea    0x24e90(%rip),%rcx        # 30450 <Td1>
    b5c0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b5c3:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b5c6:	c1 e9 08             	shr    $0x8,%ecx
    b5c9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b5cf:	89 c9                	mov    %ecx,%ecx
    b5d1:	89 ca                	mov    %ecx,%edx
    b5d3:	48 8d 0d 76 52 02 00 	lea    0x25276(%rip),%rcx        # 30850 <Td2>
    b5da:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b5dd:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b5e0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b5e6:	89 c9                	mov    %ecx,%ecx
    b5e8:	89 ca                	mov    %ecx,%edx
    b5ea:	48 8d 0d 5f 56 02 00 	lea    0x2565f(%rip),%rcx        # 30c50 <Td3>
    b5f1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b5f4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b5f8:	33 41 5c             	xor    0x5c(%rcx),%eax
    b5fb:	89 45 c0             	mov    %eax,-0x40(%rbp)
    b5fe:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b601:	c1 e8 18             	shr    $0x18,%eax
    b604:	89 c0                	mov    %eax,%eax
    b606:	89 c1                	mov    %eax,%ecx
    b608:	48 8d 05 41 4a 02 00 	lea    0x24a41(%rip),%rax        # 30050 <Td0>
    b60f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b612:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b615:	c1 e9 10             	shr    $0x10,%ecx
    b618:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b61e:	89 c9                	mov    %ecx,%ecx
    b620:	89 ca                	mov    %ecx,%edx
    b622:	48 8d 0d 27 4e 02 00 	lea    0x24e27(%rip),%rcx        # 30450 <Td1>
    b629:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b62c:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b62f:	c1 e9 08             	shr    $0x8,%ecx
    b632:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b638:	89 c9                	mov    %ecx,%ecx
    b63a:	89 ca                	mov    %ecx,%edx
    b63c:	48 8d 0d 0d 52 02 00 	lea    0x2520d(%rip),%rcx        # 30850 <Td2>
    b643:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b646:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b649:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b64f:	89 c9                	mov    %ecx,%ecx
    b651:	89 ca                	mov    %ecx,%edx
    b653:	48 8d 0d f6 55 02 00 	lea    0x255f6(%rip),%rcx        # 30c50 <Td3>
    b65a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b65d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b661:	33 41 60             	xor    0x60(%rcx),%eax
    b664:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b667:	8b 45 c8             	mov    -0x38(%rbp),%eax
    b66a:	c1 e8 18             	shr    $0x18,%eax
    b66d:	89 c0                	mov    %eax,%eax
    b66f:	89 c1                	mov    %eax,%ecx
    b671:	48 8d 05 d8 49 02 00 	lea    0x249d8(%rip),%rax        # 30050 <Td0>
    b678:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b67b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b67e:	c1 e9 10             	shr    $0x10,%ecx
    b681:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b687:	89 c9                	mov    %ecx,%ecx
    b689:	89 ca                	mov    %ecx,%edx
    b68b:	48 8d 0d be 4d 02 00 	lea    0x24dbe(%rip),%rcx        # 30450 <Td1>
    b692:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b695:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b698:	c1 e9 08             	shr    $0x8,%ecx
    b69b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b6a1:	89 c9                	mov    %ecx,%ecx
    b6a3:	89 ca                	mov    %ecx,%edx
    b6a5:	48 8d 0d a4 51 02 00 	lea    0x251a4(%rip),%rcx        # 30850 <Td2>
    b6ac:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b6af:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b6b2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b6b8:	89 c9                	mov    %ecx,%ecx
    b6ba:	89 ca                	mov    %ecx,%edx
    b6bc:	48 8d 0d 8d 55 02 00 	lea    0x2558d(%rip),%rcx        # 30c50 <Td3>
    b6c3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b6c6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b6ca:	33 41 64             	xor    0x64(%rcx),%eax
    b6cd:	89 45 d8             	mov    %eax,-0x28(%rbp)
    b6d0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    b6d3:	c1 e8 18             	shr    $0x18,%eax
    b6d6:	89 c0                	mov    %eax,%eax
    b6d8:	89 c1                	mov    %eax,%ecx
    b6da:	48 8d 05 6f 49 02 00 	lea    0x2496f(%rip),%rax        # 30050 <Td0>
    b6e1:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b6e4:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b6e7:	c1 e9 10             	shr    $0x10,%ecx
    b6ea:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b6f0:	89 c9                	mov    %ecx,%ecx
    b6f2:	89 ca                	mov    %ecx,%edx
    b6f4:	48 8d 0d 55 4d 02 00 	lea    0x24d55(%rip),%rcx        # 30450 <Td1>
    b6fb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b6fe:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b701:	c1 e9 08             	shr    $0x8,%ecx
    b704:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b70a:	89 c9                	mov    %ecx,%ecx
    b70c:	89 ca                	mov    %ecx,%edx
    b70e:	48 8d 0d 3b 51 02 00 	lea    0x2513b(%rip),%rcx        # 30850 <Td2>
    b715:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b718:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b71b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b721:	89 c9                	mov    %ecx,%ecx
    b723:	89 ca                	mov    %ecx,%edx
    b725:	48 8d 0d 24 55 02 00 	lea    0x25524(%rip),%rcx        # 30c50 <Td3>
    b72c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b72f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b733:	33 41 68             	xor    0x68(%rcx),%eax
    b736:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    b739:	8b 45 c0             	mov    -0x40(%rbp),%eax
    b73c:	c1 e8 18             	shr    $0x18,%eax
    b73f:	89 c0                	mov    %eax,%eax
    b741:	89 c1                	mov    %eax,%ecx
    b743:	48 8d 05 06 49 02 00 	lea    0x24906(%rip),%rax        # 30050 <Td0>
    b74a:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b74d:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b750:	c1 e9 10             	shr    $0x10,%ecx
    b753:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b759:	89 c9                	mov    %ecx,%ecx
    b75b:	89 ca                	mov    %ecx,%edx
    b75d:	48 8d 0d ec 4c 02 00 	lea    0x24cec(%rip),%rcx        # 30450 <Td1>
    b764:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b767:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b76a:	c1 e9 08             	shr    $0x8,%ecx
    b76d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b773:	89 c9                	mov    %ecx,%ecx
    b775:	89 ca                	mov    %ecx,%edx
    b777:	48 8d 0d d2 50 02 00 	lea    0x250d2(%rip),%rcx        # 30850 <Td2>
    b77e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b781:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b784:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b78a:	89 c9                	mov    %ecx,%ecx
    b78c:	89 ca                	mov    %ecx,%edx
    b78e:	48 8d 0d bb 54 02 00 	lea    0x254bb(%rip),%rcx        # 30c50 <Td3>
    b795:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b798:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b79c:	33 41 6c             	xor    0x6c(%rcx),%eax
    b79f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b7a2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    b7a5:	c1 e8 18             	shr    $0x18,%eax
    b7a8:	89 c0                	mov    %eax,%eax
    b7aa:	89 c1                	mov    %eax,%ecx
    b7ac:	48 8d 05 9d 48 02 00 	lea    0x2489d(%rip),%rax        # 30050 <Td0>
    b7b3:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b7b6:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b7b9:	c1 e9 10             	shr    $0x10,%ecx
    b7bc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b7c2:	89 c9                	mov    %ecx,%ecx
    b7c4:	89 ca                	mov    %ecx,%edx
    b7c6:	48 8d 0d 83 4c 02 00 	lea    0x24c83(%rip),%rcx        # 30450 <Td1>
    b7cd:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b7d0:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b7d3:	c1 e9 08             	shr    $0x8,%ecx
    b7d6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b7dc:	89 c9                	mov    %ecx,%ecx
    b7de:	89 ca                	mov    %ecx,%edx
    b7e0:	48 8d 0d 69 50 02 00 	lea    0x25069(%rip),%rcx        # 30850 <Td2>
    b7e7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b7ea:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b7ed:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b7f3:	89 c9                	mov    %ecx,%ecx
    b7f5:	89 ca                	mov    %ecx,%edx
    b7f7:	48 8d 0d 52 54 02 00 	lea    0x25452(%rip),%rcx        # 30c50 <Td3>
    b7fe:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b801:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b805:	33 41 70             	xor    0x70(%rcx),%eax
    b808:	89 45 cc             	mov    %eax,-0x34(%rbp)
    b80b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    b80e:	c1 e8 18             	shr    $0x18,%eax
    b811:	89 c0                	mov    %eax,%eax
    b813:	89 c1                	mov    %eax,%ecx
    b815:	48 8d 05 34 48 02 00 	lea    0x24834(%rip),%rax        # 30050 <Td0>
    b81c:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b81f:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b822:	c1 e9 10             	shr    $0x10,%ecx
    b825:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b82b:	89 c9                	mov    %ecx,%ecx
    b82d:	89 ca                	mov    %ecx,%edx
    b82f:	48 8d 0d 1a 4c 02 00 	lea    0x24c1a(%rip),%rcx        # 30450 <Td1>
    b836:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b839:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b83c:	c1 e9 08             	shr    $0x8,%ecx
    b83f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b845:	89 c9                	mov    %ecx,%ecx
    b847:	89 ca                	mov    %ecx,%edx
    b849:	48 8d 0d 00 50 02 00 	lea    0x25000(%rip),%rcx        # 30850 <Td2>
    b850:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b853:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b856:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b85c:	89 c9                	mov    %ecx,%ecx
    b85e:	89 ca                	mov    %ecx,%edx
    b860:	48 8d 0d e9 53 02 00 	lea    0x253e9(%rip),%rcx        # 30c50 <Td3>
    b867:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b86a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b86e:	33 41 74             	xor    0x74(%rcx),%eax
    b871:	89 45 c8             	mov    %eax,-0x38(%rbp)
    b874:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    b877:	c1 e8 18             	shr    $0x18,%eax
    b87a:	89 c0                	mov    %eax,%eax
    b87c:	89 c1                	mov    %eax,%ecx
    b87e:	48 8d 05 cb 47 02 00 	lea    0x247cb(%rip),%rax        # 30050 <Td0>
    b885:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b888:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b88b:	c1 e9 10             	shr    $0x10,%ecx
    b88e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b894:	89 c9                	mov    %ecx,%ecx
    b896:	89 ca                	mov    %ecx,%edx
    b898:	48 8d 0d b1 4b 02 00 	lea    0x24bb1(%rip),%rcx        # 30450 <Td1>
    b89f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b8a2:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b8a5:	c1 e9 08             	shr    $0x8,%ecx
    b8a8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b8ae:	89 c9                	mov    %ecx,%ecx
    b8b0:	89 ca                	mov    %ecx,%edx
    b8b2:	48 8d 0d 97 4f 02 00 	lea    0x24f97(%rip),%rcx        # 30850 <Td2>
    b8b9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b8bc:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    b8bf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b8c5:	89 c9                	mov    %ecx,%ecx
    b8c7:	89 ca                	mov    %ecx,%edx
    b8c9:	48 8d 0d 80 53 02 00 	lea    0x25380(%rip),%rcx        # 30c50 <Td3>
    b8d0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b8d3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b8d7:	33 41 78             	xor    0x78(%rcx),%eax
    b8da:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    b8dd:	8b 45 d0             	mov    -0x30(%rbp),%eax
    b8e0:	c1 e8 18             	shr    $0x18,%eax
    b8e3:	89 c0                	mov    %eax,%eax
    b8e5:	89 c1                	mov    %eax,%ecx
    b8e7:	48 8d 05 62 47 02 00 	lea    0x24762(%rip),%rax        # 30050 <Td0>
    b8ee:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b8f1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    b8f4:	c1 e9 10             	shr    $0x10,%ecx
    b8f7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b8fd:	89 c9                	mov    %ecx,%ecx
    b8ff:	89 ca                	mov    %ecx,%edx
    b901:	48 8d 0d 48 4b 02 00 	lea    0x24b48(%rip),%rcx        # 30450 <Td1>
    b908:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b90b:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    b90e:	c1 e9 08             	shr    $0x8,%ecx
    b911:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b917:	89 c9                	mov    %ecx,%ecx
    b919:	89 ca                	mov    %ecx,%edx
    b91b:	48 8d 0d 2e 4f 02 00 	lea    0x24f2e(%rip),%rcx        # 30850 <Td2>
    b922:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b925:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b928:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b92e:	89 c9                	mov    %ecx,%ecx
    b930:	89 ca                	mov    %ecx,%edx
    b932:	48 8d 0d 17 53 02 00 	lea    0x25317(%rip),%rcx        # 30c50 <Td3>
    b939:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b93c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b940:	33 41 7c             	xor    0x7c(%rcx),%eax
    b943:	89 45 c0             	mov    %eax,-0x40(%rbp)
    b946:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b949:	c1 e8 18             	shr    $0x18,%eax
    b94c:	89 c0                	mov    %eax,%eax
    b94e:	89 c1                	mov    %eax,%ecx
    b950:	48 8d 05 f9 46 02 00 	lea    0x246f9(%rip),%rax        # 30050 <Td0>
    b957:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b95a:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b95d:	c1 e9 10             	shr    $0x10,%ecx
    b960:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b966:	89 c9                	mov    %ecx,%ecx
    b968:	89 ca                	mov    %ecx,%edx
    b96a:	48 8d 0d df 4a 02 00 	lea    0x24adf(%rip),%rcx        # 30450 <Td1>
    b971:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b974:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b977:	c1 e9 08             	shr    $0x8,%ecx
    b97a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b980:	89 c9                	mov    %ecx,%ecx
    b982:	89 ca                	mov    %ecx,%edx
    b984:	48 8d 0d c5 4e 02 00 	lea    0x24ec5(%rip),%rcx        # 30850 <Td2>
    b98b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b98e:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    b991:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b997:	89 c9                	mov    %ecx,%ecx
    b999:	89 ca                	mov    %ecx,%edx
    b99b:	48 8d 0d ae 52 02 00 	lea    0x252ae(%rip),%rcx        # 30c50 <Td3>
    b9a2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b9a5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b9a9:	33 81 80 00 00 00    	xor    0x80(%rcx),%eax
    b9af:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b9b2:	8b 45 c8             	mov    -0x38(%rbp),%eax
    b9b5:	c1 e8 18             	shr    $0x18,%eax
    b9b8:	89 c0                	mov    %eax,%eax
    b9ba:	89 c1                	mov    %eax,%ecx
    b9bc:	48 8d 05 8d 46 02 00 	lea    0x2468d(%rip),%rax        # 30050 <Td0>
    b9c3:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    b9c6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    b9c9:	c1 e9 10             	shr    $0x10,%ecx
    b9cc:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b9d2:	89 c9                	mov    %ecx,%ecx
    b9d4:	89 ca                	mov    %ecx,%edx
    b9d6:	48 8d 0d 73 4a 02 00 	lea    0x24a73(%rip),%rcx        # 30450 <Td1>
    b9dd:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b9e0:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    b9e3:	c1 e9 08             	shr    $0x8,%ecx
    b9e6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    b9ec:	89 c9                	mov    %ecx,%ecx
    b9ee:	89 ca                	mov    %ecx,%edx
    b9f0:	48 8d 0d 59 4e 02 00 	lea    0x24e59(%rip),%rcx        # 30850 <Td2>
    b9f7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    b9fa:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    b9fd:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ba03:	89 c9                	mov    %ecx,%ecx
    ba05:	89 ca                	mov    %ecx,%edx
    ba07:	48 8d 0d 42 52 02 00 	lea    0x25242(%rip),%rcx        # 30c50 <Td3>
    ba0e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba11:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ba15:	33 81 84 00 00 00    	xor    0x84(%rcx),%eax
    ba1b:	89 45 d8             	mov    %eax,-0x28(%rbp)
    ba1e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    ba21:	c1 e8 18             	shr    $0x18,%eax
    ba24:	89 c0                	mov    %eax,%eax
    ba26:	89 c1                	mov    %eax,%ecx
    ba28:	48 8d 05 21 46 02 00 	lea    0x24621(%rip),%rax        # 30050 <Td0>
    ba2f:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    ba32:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    ba35:	c1 e9 10             	shr    $0x10,%ecx
    ba38:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ba3e:	89 c9                	mov    %ecx,%ecx
    ba40:	89 ca                	mov    %ecx,%edx
    ba42:	48 8d 0d 07 4a 02 00 	lea    0x24a07(%rip),%rcx        # 30450 <Td1>
    ba49:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba4c:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    ba4f:	c1 e9 08             	shr    $0x8,%ecx
    ba52:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ba58:	89 c9                	mov    %ecx,%ecx
    ba5a:	89 ca                	mov    %ecx,%edx
    ba5c:	48 8d 0d ed 4d 02 00 	lea    0x24ded(%rip),%rcx        # 30850 <Td2>
    ba63:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba66:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    ba69:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    ba6f:	89 c9                	mov    %ecx,%ecx
    ba71:	89 ca                	mov    %ecx,%edx
    ba73:	48 8d 0d d6 51 02 00 	lea    0x251d6(%rip),%rcx        # 30c50 <Td3>
    ba7a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    ba7d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ba81:	33 81 88 00 00 00    	xor    0x88(%rcx),%eax
    ba87:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ba8a:	8b 45 c0             	mov    -0x40(%rbp),%eax
    ba8d:	c1 e8 18             	shr    $0x18,%eax
    ba90:	89 c0                	mov    %eax,%eax
    ba92:	89 c1                	mov    %eax,%ecx
    ba94:	48 8d 05 b5 45 02 00 	lea    0x245b5(%rip),%rax        # 30050 <Td0>
    ba9b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    ba9e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    baa1:	c1 e9 10             	shr    $0x10,%ecx
    baa4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    baaa:	89 c9                	mov    %ecx,%ecx
    baac:	89 ca                	mov    %ecx,%edx
    baae:	48 8d 0d 9b 49 02 00 	lea    0x2499b(%rip),%rcx        # 30450 <Td1>
    bab5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bab8:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    babb:	c1 e9 08             	shr    $0x8,%ecx
    babe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bac4:	89 c9                	mov    %ecx,%ecx
    bac6:	89 ca                	mov    %ecx,%edx
    bac8:	48 8d 0d 81 4d 02 00 	lea    0x24d81(%rip),%rcx        # 30850 <Td2>
    bacf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bad2:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    bad5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    badb:	89 c9                	mov    %ecx,%ecx
    badd:	89 ca                	mov    %ecx,%edx
    badf:	48 8d 0d 6a 51 02 00 	lea    0x2516a(%rip),%rcx        # 30c50 <Td3>
    bae6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bae9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    baed:	33 81 8c 00 00 00    	xor    0x8c(%rcx),%eax
    baf3:	89 45 d0             	mov    %eax,-0x30(%rbp)
    baf6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    baf9:	c1 e8 18             	shr    $0x18,%eax
    bafc:	89 c0                	mov    %eax,%eax
    bafe:	89 c1                	mov    %eax,%ecx
    bb00:	48 8d 05 49 45 02 00 	lea    0x24549(%rip),%rax        # 30050 <Td0>
    bb07:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bb0a:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    bb0d:	c1 e9 10             	shr    $0x10,%ecx
    bb10:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb16:	89 c9                	mov    %ecx,%ecx
    bb18:	89 ca                	mov    %ecx,%edx
    bb1a:	48 8d 0d 2f 49 02 00 	lea    0x2492f(%rip),%rcx        # 30450 <Td1>
    bb21:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bb24:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bb27:	c1 e9 08             	shr    $0x8,%ecx
    bb2a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb30:	89 c9                	mov    %ecx,%ecx
    bb32:	89 ca                	mov    %ecx,%edx
    bb34:	48 8d 0d 15 4d 02 00 	lea    0x24d15(%rip),%rcx        # 30850 <Td2>
    bb3b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bb3e:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    bb41:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb47:	89 c9                	mov    %ecx,%ecx
    bb49:	89 ca                	mov    %ecx,%edx
    bb4b:	48 8d 0d fe 50 02 00 	lea    0x250fe(%rip),%rcx        # 30c50 <Td3>
    bb52:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bb55:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bb59:	33 81 90 00 00 00    	xor    0x90(%rcx),%eax
    bb5f:	89 45 cc             	mov    %eax,-0x34(%rbp)
    bb62:	8b 45 d8             	mov    -0x28(%rbp),%eax
    bb65:	c1 e8 18             	shr    $0x18,%eax
    bb68:	89 c0                	mov    %eax,%eax
    bb6a:	89 c1                	mov    %eax,%ecx
    bb6c:	48 8d 05 dd 44 02 00 	lea    0x244dd(%rip),%rax        # 30050 <Td0>
    bb73:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bb76:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    bb79:	c1 e9 10             	shr    $0x10,%ecx
    bb7c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb82:	89 c9                	mov    %ecx,%ecx
    bb84:	89 ca                	mov    %ecx,%edx
    bb86:	48 8d 0d c3 48 02 00 	lea    0x248c3(%rip),%rcx        # 30450 <Td1>
    bb8d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bb90:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    bb93:	c1 e9 08             	shr    $0x8,%ecx
    bb96:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bb9c:	89 c9                	mov    %ecx,%ecx
    bb9e:	89 ca                	mov    %ecx,%edx
    bba0:	48 8d 0d a9 4c 02 00 	lea    0x24ca9(%rip),%rcx        # 30850 <Td2>
    bba7:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bbaa:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bbad:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bbb3:	89 c9                	mov    %ecx,%ecx
    bbb5:	89 ca                	mov    %ecx,%edx
    bbb7:	48 8d 0d 92 50 02 00 	lea    0x25092(%rip),%rcx        # 30c50 <Td3>
    bbbe:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bbc1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bbc5:	33 81 94 00 00 00    	xor    0x94(%rcx),%eax
    bbcb:	89 45 c8             	mov    %eax,-0x38(%rbp)
    bbce:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    bbd1:	c1 e8 18             	shr    $0x18,%eax
    bbd4:	89 c0                	mov    %eax,%eax
    bbd6:	89 c1                	mov    %eax,%ecx
    bbd8:	48 8d 05 71 44 02 00 	lea    0x24471(%rip),%rax        # 30050 <Td0>
    bbdf:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bbe2:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    bbe5:	c1 e9 10             	shr    $0x10,%ecx
    bbe8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bbee:	89 c9                	mov    %ecx,%ecx
    bbf0:	89 ca                	mov    %ecx,%edx
    bbf2:	48 8d 0d 57 48 02 00 	lea    0x24857(%rip),%rcx        # 30450 <Td1>
    bbf9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bbfc:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    bbff:	c1 e9 08             	shr    $0x8,%ecx
    bc02:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc08:	89 c9                	mov    %ecx,%ecx
    bc0a:	89 ca                	mov    %ecx,%edx
    bc0c:	48 8d 0d 3d 4c 02 00 	lea    0x24c3d(%rip),%rcx        # 30850 <Td2>
    bc13:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc16:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    bc19:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc1f:	89 c9                	mov    %ecx,%ecx
    bc21:	89 ca                	mov    %ecx,%edx
    bc23:	48 8d 0d 26 50 02 00 	lea    0x25026(%rip),%rcx        # 30c50 <Td3>
    bc2a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc2d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bc31:	33 81 98 00 00 00    	xor    0x98(%rcx),%eax
    bc37:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    bc3a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    bc3d:	c1 e8 18             	shr    $0x18,%eax
    bc40:	89 c0                	mov    %eax,%eax
    bc42:	89 c1                	mov    %eax,%ecx
    bc44:	48 8d 05 05 44 02 00 	lea    0x24405(%rip),%rax        # 30050 <Td0>
    bc4b:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bc4e:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bc51:	c1 e9 10             	shr    $0x10,%ecx
    bc54:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc5a:	89 c9                	mov    %ecx,%ecx
    bc5c:	89 ca                	mov    %ecx,%edx
    bc5e:	48 8d 0d eb 47 02 00 	lea    0x247eb(%rip),%rcx        # 30450 <Td1>
    bc65:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc68:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    bc6b:	c1 e9 08             	shr    $0x8,%ecx
    bc6e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc74:	89 c9                	mov    %ecx,%ecx
    bc76:	89 ca                	mov    %ecx,%edx
    bc78:	48 8d 0d d1 4b 02 00 	lea    0x24bd1(%rip),%rcx        # 30850 <Td2>
    bc7f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc82:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    bc85:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bc8b:	89 c9                	mov    %ecx,%ecx
    bc8d:	89 ca                	mov    %ecx,%edx
    bc8f:	48 8d 0d ba 4f 02 00 	lea    0x24fba(%rip),%rcx        # 30c50 <Td3>
    bc96:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bc99:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bc9d:	33 81 9c 00 00 00    	xor    0x9c(%rcx),%eax
    bca3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    bca6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcaa:	83 b8 f0 00 00 00 0a 	cmpl   $0xa,0xf0(%rax)
    bcb1:	0f 8e d6 06 00 00    	jle    c38d <AES_decrypt+0x16bd>
    bcb7:	8b 45 cc             	mov    -0x34(%rbp),%eax
    bcba:	c1 e8 18             	shr    $0x18,%eax
    bcbd:	89 c0                	mov    %eax,%eax
    bcbf:	89 c1                	mov    %eax,%ecx
    bcc1:	48 8d 05 88 43 02 00 	lea    0x24388(%rip),%rax        # 30050 <Td0>
    bcc8:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bccb:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    bcce:	c1 e9 10             	shr    $0x10,%ecx
    bcd1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bcd7:	89 c9                	mov    %ecx,%ecx
    bcd9:	89 ca                	mov    %ecx,%edx
    bcdb:	48 8d 0d 6e 47 02 00 	lea    0x2476e(%rip),%rcx        # 30450 <Td1>
    bce2:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bce5:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    bce8:	c1 e9 08             	shr    $0x8,%ecx
    bceb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bcf1:	89 c9                	mov    %ecx,%ecx
    bcf3:	89 ca                	mov    %ecx,%edx
    bcf5:	48 8d 0d 54 4b 02 00 	lea    0x24b54(%rip),%rcx        # 30850 <Td2>
    bcfc:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bcff:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    bd02:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bd08:	89 c9                	mov    %ecx,%ecx
    bd0a:	89 ca                	mov    %ecx,%edx
    bd0c:	48 8d 0d 3d 4f 02 00 	lea    0x24f3d(%rip),%rcx        # 30c50 <Td3>
    bd13:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bd16:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bd1a:	33 81 a0 00 00 00    	xor    0xa0(%rcx),%eax
    bd20:	89 45 dc             	mov    %eax,-0x24(%rbp)
    bd23:	8b 45 c8             	mov    -0x38(%rbp),%eax
    bd26:	c1 e8 18             	shr    $0x18,%eax
    bd29:	89 c0                	mov    %eax,%eax
    bd2b:	89 c1                	mov    %eax,%ecx
    bd2d:	48 8d 05 1c 43 02 00 	lea    0x2431c(%rip),%rax        # 30050 <Td0>
    bd34:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bd37:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    bd3a:	c1 e9 10             	shr    $0x10,%ecx
    bd3d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bd43:	89 c9                	mov    %ecx,%ecx
    bd45:	89 ca                	mov    %ecx,%edx
    bd47:	48 8d 0d 02 47 02 00 	lea    0x24702(%rip),%rcx        # 30450 <Td1>
    bd4e:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bd51:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    bd54:	c1 e9 08             	shr    $0x8,%ecx
    bd57:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bd5d:	89 c9                	mov    %ecx,%ecx
    bd5f:	89 ca                	mov    %ecx,%edx
    bd61:	48 8d 0d e8 4a 02 00 	lea    0x24ae8(%rip),%rcx        # 30850 <Td2>
    bd68:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bd6b:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    bd6e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bd74:	89 c9                	mov    %ecx,%ecx
    bd76:	89 ca                	mov    %ecx,%edx
    bd78:	48 8d 0d d1 4e 02 00 	lea    0x24ed1(%rip),%rcx        # 30c50 <Td3>
    bd7f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bd82:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bd86:	33 81 a4 00 00 00    	xor    0xa4(%rcx),%eax
    bd8c:	89 45 d8             	mov    %eax,-0x28(%rbp)
    bd8f:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    bd92:	c1 e8 18             	shr    $0x18,%eax
    bd95:	89 c0                	mov    %eax,%eax
    bd97:	89 c1                	mov    %eax,%ecx
    bd99:	48 8d 05 b0 42 02 00 	lea    0x242b0(%rip),%rax        # 30050 <Td0>
    bda0:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bda3:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    bda6:	c1 e9 10             	shr    $0x10,%ecx
    bda9:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bdaf:	89 c9                	mov    %ecx,%ecx
    bdb1:	89 ca                	mov    %ecx,%edx
    bdb3:	48 8d 0d 96 46 02 00 	lea    0x24696(%rip),%rcx        # 30450 <Td1>
    bdba:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bdbd:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    bdc0:	c1 e9 08             	shr    $0x8,%ecx
    bdc3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bdc9:	89 c9                	mov    %ecx,%ecx
    bdcb:	89 ca                	mov    %ecx,%edx
    bdcd:	48 8d 0d 7c 4a 02 00 	lea    0x24a7c(%rip),%rcx        # 30850 <Td2>
    bdd4:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bdd7:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    bdda:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bde0:	89 c9                	mov    %ecx,%ecx
    bde2:	89 ca                	mov    %ecx,%edx
    bde4:	48 8d 0d 65 4e 02 00 	lea    0x24e65(%rip),%rcx        # 30c50 <Td3>
    bdeb:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bdee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bdf2:	33 81 a8 00 00 00    	xor    0xa8(%rcx),%eax
    bdf8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    bdfb:	8b 45 c0             	mov    -0x40(%rbp),%eax
    bdfe:	c1 e8 18             	shr    $0x18,%eax
    be01:	89 c0                	mov    %eax,%eax
    be03:	89 c1                	mov    %eax,%ecx
    be05:	48 8d 05 44 42 02 00 	lea    0x24244(%rip),%rax        # 30050 <Td0>
    be0c:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    be0f:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    be12:	c1 e9 10             	shr    $0x10,%ecx
    be15:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    be1b:	89 c9                	mov    %ecx,%ecx
    be1d:	89 ca                	mov    %ecx,%edx
    be1f:	48 8d 0d 2a 46 02 00 	lea    0x2462a(%rip),%rcx        # 30450 <Td1>
    be26:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    be29:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    be2c:	c1 e9 08             	shr    $0x8,%ecx
    be2f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    be35:	89 c9                	mov    %ecx,%ecx
    be37:	89 ca                	mov    %ecx,%edx
    be39:	48 8d 0d 10 4a 02 00 	lea    0x24a10(%rip),%rcx        # 30850 <Td2>
    be40:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    be43:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    be46:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    be4c:	89 c9                	mov    %ecx,%ecx
    be4e:	89 ca                	mov    %ecx,%edx
    be50:	48 8d 0d f9 4d 02 00 	lea    0x24df9(%rip),%rcx        # 30c50 <Td3>
    be57:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    be5a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    be5e:	33 81 ac 00 00 00    	xor    0xac(%rcx),%eax
    be64:	89 45 d0             	mov    %eax,-0x30(%rbp)
    be67:	8b 45 dc             	mov    -0x24(%rbp),%eax
    be6a:	c1 e8 18             	shr    $0x18,%eax
    be6d:	89 c0                	mov    %eax,%eax
    be6f:	89 c1                	mov    %eax,%ecx
    be71:	48 8d 05 d8 41 02 00 	lea    0x241d8(%rip),%rax        # 30050 <Td0>
    be78:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    be7b:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    be7e:	c1 e9 10             	shr    $0x10,%ecx
    be81:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    be87:	89 c9                	mov    %ecx,%ecx
    be89:	89 ca                	mov    %ecx,%edx
    be8b:	48 8d 0d be 45 02 00 	lea    0x245be(%rip),%rcx        # 30450 <Td1>
    be92:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    be95:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    be98:	c1 e9 08             	shr    $0x8,%ecx
    be9b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bea1:	89 c9                	mov    %ecx,%ecx
    bea3:	89 ca                	mov    %ecx,%edx
    bea5:	48 8d 0d a4 49 02 00 	lea    0x249a4(%rip),%rcx        # 30850 <Td2>
    beac:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    beaf:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    beb2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    beb8:	89 c9                	mov    %ecx,%ecx
    beba:	89 ca                	mov    %ecx,%edx
    bebc:	48 8d 0d 8d 4d 02 00 	lea    0x24d8d(%rip),%rcx        # 30c50 <Td3>
    bec3:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bec6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    beca:	33 81 b0 00 00 00    	xor    0xb0(%rcx),%eax
    bed0:	89 45 cc             	mov    %eax,-0x34(%rbp)
    bed3:	8b 45 d8             	mov    -0x28(%rbp),%eax
    bed6:	c1 e8 18             	shr    $0x18,%eax
    bed9:	89 c0                	mov    %eax,%eax
    bedb:	89 c1                	mov    %eax,%ecx
    bedd:	48 8d 05 6c 41 02 00 	lea    0x2416c(%rip),%rax        # 30050 <Td0>
    bee4:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bee7:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    beea:	c1 e9 10             	shr    $0x10,%ecx
    beed:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bef3:	89 c9                	mov    %ecx,%ecx
    bef5:	89 ca                	mov    %ecx,%edx
    bef7:	48 8d 0d 52 45 02 00 	lea    0x24552(%rip),%rcx        # 30450 <Td1>
    befe:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf01:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    bf04:	c1 e9 08             	shr    $0x8,%ecx
    bf07:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bf0d:	89 c9                	mov    %ecx,%ecx
    bf0f:	89 ca                	mov    %ecx,%edx
    bf11:	48 8d 0d 38 49 02 00 	lea    0x24938(%rip),%rcx        # 30850 <Td2>
    bf18:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf1b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bf1e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bf24:	89 c9                	mov    %ecx,%ecx
    bf26:	89 ca                	mov    %ecx,%edx
    bf28:	48 8d 0d 21 4d 02 00 	lea    0x24d21(%rip),%rcx        # 30c50 <Td3>
    bf2f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf32:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bf36:	33 81 b4 00 00 00    	xor    0xb4(%rcx),%eax
    bf3c:	89 45 c8             	mov    %eax,-0x38(%rbp)
    bf3f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    bf42:	c1 e8 18             	shr    $0x18,%eax
    bf45:	89 c0                	mov    %eax,%eax
    bf47:	89 c1                	mov    %eax,%ecx
    bf49:	48 8d 05 00 41 02 00 	lea    0x24100(%rip),%rax        # 30050 <Td0>
    bf50:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bf53:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    bf56:	c1 e9 10             	shr    $0x10,%ecx
    bf59:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bf5f:	89 c9                	mov    %ecx,%ecx
    bf61:	89 ca                	mov    %ecx,%edx
    bf63:	48 8d 0d e6 44 02 00 	lea    0x244e6(%rip),%rcx        # 30450 <Td1>
    bf6a:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf6d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    bf70:	c1 e9 08             	shr    $0x8,%ecx
    bf73:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bf79:	89 c9                	mov    %ecx,%ecx
    bf7b:	89 ca                	mov    %ecx,%edx
    bf7d:	48 8d 0d cc 48 02 00 	lea    0x248cc(%rip),%rcx        # 30850 <Td2>
    bf84:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf87:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    bf8a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bf90:	89 c9                	mov    %ecx,%ecx
    bf92:	89 ca                	mov    %ecx,%edx
    bf94:	48 8d 0d b5 4c 02 00 	lea    0x24cb5(%rip),%rcx        # 30c50 <Td3>
    bf9b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bf9e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bfa2:	33 81 b8 00 00 00    	xor    0xb8(%rcx),%eax
    bfa8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    bfab:	8b 45 d0             	mov    -0x30(%rbp),%eax
    bfae:	c1 e8 18             	shr    $0x18,%eax
    bfb1:	89 c0                	mov    %eax,%eax
    bfb3:	89 c1                	mov    %eax,%ecx
    bfb5:	48 8d 05 94 40 02 00 	lea    0x24094(%rip),%rax        # 30050 <Td0>
    bfbc:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    bfbf:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bfc2:	c1 e9 10             	shr    $0x10,%ecx
    bfc5:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bfcb:	89 c9                	mov    %ecx,%ecx
    bfcd:	89 ca                	mov    %ecx,%edx
    bfcf:	48 8d 0d 7a 44 02 00 	lea    0x2447a(%rip),%rcx        # 30450 <Td1>
    bfd6:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bfd9:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    bfdc:	c1 e9 08             	shr    $0x8,%ecx
    bfdf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bfe5:	89 c9                	mov    %ecx,%ecx
    bfe7:	89 ca                	mov    %ecx,%edx
    bfe9:	48 8d 0d 60 48 02 00 	lea    0x24860(%rip),%rcx        # 30850 <Td2>
    bff0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    bff3:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    bff6:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    bffc:	89 c9                	mov    %ecx,%ecx
    bffe:	89 ca                	mov    %ecx,%edx
    c000:	48 8d 0d 49 4c 02 00 	lea    0x24c49(%rip),%rcx        # 30c50 <Td3>
    c007:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c00a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c00e:	33 81 bc 00 00 00    	xor    0xbc(%rcx),%eax
    c014:	89 45 c0             	mov    %eax,-0x40(%rbp)
    c017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c01b:	83 b8 f0 00 00 00 0c 	cmpl   $0xc,0xf0(%rax)
    c022:	0f 8e 60 03 00 00    	jle    c388 <AES_decrypt+0x16b8>
    c028:	8b 45 cc             	mov    -0x34(%rbp),%eax
    c02b:	c1 e8 18             	shr    $0x18,%eax
    c02e:	89 c0                	mov    %eax,%eax
    c030:	89 c1                	mov    %eax,%ecx
    c032:	48 8d 05 17 40 02 00 	lea    0x24017(%rip),%rax        # 30050 <Td0>
    c039:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c03c:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c03f:	c1 e9 10             	shr    $0x10,%ecx
    c042:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c048:	89 c9                	mov    %ecx,%ecx
    c04a:	89 ca                	mov    %ecx,%edx
    c04c:	48 8d 0d fd 43 02 00 	lea    0x243fd(%rip),%rcx        # 30450 <Td1>
    c053:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c056:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c059:	c1 e9 08             	shr    $0x8,%ecx
    c05c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c062:	89 c9                	mov    %ecx,%ecx
    c064:	89 ca                	mov    %ecx,%edx
    c066:	48 8d 0d e3 47 02 00 	lea    0x247e3(%rip),%rcx        # 30850 <Td2>
    c06d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c070:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c073:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c079:	89 c9                	mov    %ecx,%ecx
    c07b:	89 ca                	mov    %ecx,%edx
    c07d:	48 8d 0d cc 4b 02 00 	lea    0x24bcc(%rip),%rcx        # 30c50 <Td3>
    c084:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c087:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c08b:	33 81 c0 00 00 00    	xor    0xc0(%rcx),%eax
    c091:	89 45 dc             	mov    %eax,-0x24(%rbp)
    c094:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c097:	c1 e8 18             	shr    $0x18,%eax
    c09a:	89 c0                	mov    %eax,%eax
    c09c:	89 c1                	mov    %eax,%ecx
    c09e:	48 8d 05 ab 3f 02 00 	lea    0x23fab(%rip),%rax        # 30050 <Td0>
    c0a5:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c0a8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c0ab:	c1 e9 10             	shr    $0x10,%ecx
    c0ae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c0b4:	89 c9                	mov    %ecx,%ecx
    c0b6:	89 ca                	mov    %ecx,%edx
    c0b8:	48 8d 0d 91 43 02 00 	lea    0x24391(%rip),%rcx        # 30450 <Td1>
    c0bf:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c0c2:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c0c5:	c1 e9 08             	shr    $0x8,%ecx
    c0c8:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c0ce:	89 c9                	mov    %ecx,%ecx
    c0d0:	89 ca                	mov    %ecx,%edx
    c0d2:	48 8d 0d 77 47 02 00 	lea    0x24777(%rip),%rcx        # 30850 <Td2>
    c0d9:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c0dc:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c0df:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c0e5:	89 c9                	mov    %ecx,%ecx
    c0e7:	89 ca                	mov    %ecx,%edx
    c0e9:	48 8d 0d 60 4b 02 00 	lea    0x24b60(%rip),%rcx        # 30c50 <Td3>
    c0f0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c0f3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c0f7:	33 81 c4 00 00 00    	xor    0xc4(%rcx),%eax
    c0fd:	89 45 d8             	mov    %eax,-0x28(%rbp)
    c100:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    c103:	c1 e8 18             	shr    $0x18,%eax
    c106:	89 c0                	mov    %eax,%eax
    c108:	89 c1                	mov    %eax,%ecx
    c10a:	48 8d 05 3f 3f 02 00 	lea    0x23f3f(%rip),%rax        # 30050 <Td0>
    c111:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c114:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c117:	c1 e9 10             	shr    $0x10,%ecx
    c11a:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c120:	89 c9                	mov    %ecx,%ecx
    c122:	89 ca                	mov    %ecx,%edx
    c124:	48 8d 0d 25 43 02 00 	lea    0x24325(%rip),%rcx        # 30450 <Td1>
    c12b:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c12e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c131:	c1 e9 08             	shr    $0x8,%ecx
    c134:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c13a:	89 c9                	mov    %ecx,%ecx
    c13c:	89 ca                	mov    %ecx,%edx
    c13e:	48 8d 0d 0b 47 02 00 	lea    0x2470b(%rip),%rcx        # 30850 <Td2>
    c145:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c148:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c14b:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c151:	89 c9                	mov    %ecx,%ecx
    c153:	89 ca                	mov    %ecx,%edx
    c155:	48 8d 0d f4 4a 02 00 	lea    0x24af4(%rip),%rcx        # 30c50 <Td3>
    c15c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c15f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c163:	33 81 c8 00 00 00    	xor    0xc8(%rcx),%eax
    c169:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    c16c:	8b 45 c0             	mov    -0x40(%rbp),%eax
    c16f:	c1 e8 18             	shr    $0x18,%eax
    c172:	89 c0                	mov    %eax,%eax
    c174:	89 c1                	mov    %eax,%ecx
    c176:	48 8d 05 d3 3e 02 00 	lea    0x23ed3(%rip),%rax        # 30050 <Td0>
    c17d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c180:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c183:	c1 e9 10             	shr    $0x10,%ecx
    c186:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c18c:	89 c9                	mov    %ecx,%ecx
    c18e:	89 ca                	mov    %ecx,%edx
    c190:	48 8d 0d b9 42 02 00 	lea    0x242b9(%rip),%rcx        # 30450 <Td1>
    c197:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c19a:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c19d:	c1 e9 08             	shr    $0x8,%ecx
    c1a0:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c1a6:	89 c9                	mov    %ecx,%ecx
    c1a8:	89 ca                	mov    %ecx,%edx
    c1aa:	48 8d 0d 9f 46 02 00 	lea    0x2469f(%rip),%rcx        # 30850 <Td2>
    c1b1:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c1b4:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c1b7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c1bd:	89 c9                	mov    %ecx,%ecx
    c1bf:	89 ca                	mov    %ecx,%edx
    c1c1:	48 8d 0d 88 4a 02 00 	lea    0x24a88(%rip),%rcx        # 30c50 <Td3>
    c1c8:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c1cb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c1cf:	33 81 cc 00 00 00    	xor    0xcc(%rcx),%eax
    c1d5:	89 45 d0             	mov    %eax,-0x30(%rbp)
    c1d8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c1db:	c1 e8 18             	shr    $0x18,%eax
    c1de:	89 c0                	mov    %eax,%eax
    c1e0:	89 c1                	mov    %eax,%ecx
    c1e2:	48 8d 05 67 3e 02 00 	lea    0x23e67(%rip),%rax        # 30050 <Td0>
    c1e9:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c1ec:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    c1ef:	c1 e9 10             	shr    $0x10,%ecx
    c1f2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c1f8:	89 c9                	mov    %ecx,%ecx
    c1fa:	89 ca                	mov    %ecx,%edx
    c1fc:	48 8d 0d 4d 42 02 00 	lea    0x2424d(%rip),%rcx        # 30450 <Td1>
    c203:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c206:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    c209:	c1 e9 08             	shr    $0x8,%ecx
    c20c:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c212:	89 c9                	mov    %ecx,%ecx
    c214:	89 ca                	mov    %ecx,%edx
    c216:	48 8d 0d 33 46 02 00 	lea    0x24633(%rip),%rcx        # 30850 <Td2>
    c21d:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c220:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    c223:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c229:	89 c9                	mov    %ecx,%ecx
    c22b:	89 ca                	mov    %ecx,%edx
    c22d:	48 8d 0d 1c 4a 02 00 	lea    0x24a1c(%rip),%rcx        # 30c50 <Td3>
    c234:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c237:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c23b:	33 81 d0 00 00 00    	xor    0xd0(%rcx),%eax
    c241:	89 45 cc             	mov    %eax,-0x34(%rbp)
    c244:	8b 45 d8             	mov    -0x28(%rbp),%eax
    c247:	c1 e8 18             	shr    $0x18,%eax
    c24a:	89 c0                	mov    %eax,%eax
    c24c:	89 c1                	mov    %eax,%ecx
    c24e:	48 8d 05 fb 3d 02 00 	lea    0x23dfb(%rip),%rax        # 30050 <Td0>
    c255:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c258:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    c25b:	c1 e9 10             	shr    $0x10,%ecx
    c25e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c264:	89 c9                	mov    %ecx,%ecx
    c266:	89 ca                	mov    %ecx,%edx
    c268:	48 8d 0d e1 41 02 00 	lea    0x241e1(%rip),%rcx        # 30450 <Td1>
    c26f:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c272:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    c275:	c1 e9 08             	shr    $0x8,%ecx
    c278:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c27e:	89 c9                	mov    %ecx,%ecx
    c280:	89 ca                	mov    %ecx,%edx
    c282:	48 8d 0d c7 45 02 00 	lea    0x245c7(%rip),%rcx        # 30850 <Td2>
    c289:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c28c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    c28f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c295:	89 c9                	mov    %ecx,%ecx
    c297:	89 ca                	mov    %ecx,%edx
    c299:	48 8d 0d b0 49 02 00 	lea    0x249b0(%rip),%rcx        # 30c50 <Td3>
    c2a0:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c2a3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c2a7:	33 81 d4 00 00 00    	xor    0xd4(%rcx),%eax
    c2ad:	89 45 c8             	mov    %eax,-0x38(%rbp)
    c2b0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    c2b3:	c1 e8 18             	shr    $0x18,%eax
    c2b6:	89 c0                	mov    %eax,%eax
    c2b8:	89 c1                	mov    %eax,%ecx
    c2ba:	48 8d 05 8f 3d 02 00 	lea    0x23d8f(%rip),%rax        # 30050 <Td0>
    c2c1:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c2c4:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    c2c7:	c1 e9 10             	shr    $0x10,%ecx
    c2ca:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c2d0:	89 c9                	mov    %ecx,%ecx
    c2d2:	89 ca                	mov    %ecx,%edx
    c2d4:	48 8d 0d 75 41 02 00 	lea    0x24175(%rip),%rcx        # 30450 <Td1>
    c2db:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c2de:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    c2e1:	c1 e9 08             	shr    $0x8,%ecx
    c2e4:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c2ea:	89 c9                	mov    %ecx,%ecx
    c2ec:	89 ca                	mov    %ecx,%edx
    c2ee:	48 8d 0d 5b 45 02 00 	lea    0x2455b(%rip),%rcx        # 30850 <Td2>
    c2f5:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c2f8:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    c2fb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c301:	89 c9                	mov    %ecx,%ecx
    c303:	89 ca                	mov    %ecx,%edx
    c305:	48 8d 0d 44 49 02 00 	lea    0x24944(%rip),%rcx        # 30c50 <Td3>
    c30c:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c30f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c313:	33 81 d8 00 00 00    	xor    0xd8(%rcx),%eax
    c319:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    c31c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    c31f:	c1 e8 18             	shr    $0x18,%eax
    c322:	89 c0                	mov    %eax,%eax
    c324:	89 c1                	mov    %eax,%ecx
    c326:	48 8d 05 23 3d 02 00 	lea    0x23d23(%rip),%rax        # 30050 <Td0>
    c32d:	8b 04 88             	mov    (%rax,%rcx,4),%eax
    c330:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    c333:	c1 e9 10             	shr    $0x10,%ecx
    c336:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c33c:	89 c9                	mov    %ecx,%ecx
    c33e:	89 ca                	mov    %ecx,%edx
    c340:	48 8d 0d 09 41 02 00 	lea    0x24109(%rip),%rcx        # 30450 <Td1>
    c347:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c34a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    c34d:	c1 e9 08             	shr    $0x8,%ecx
    c350:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c356:	89 c9                	mov    %ecx,%ecx
    c358:	89 ca                	mov    %ecx,%edx
    c35a:	48 8d 0d ef 44 02 00 	lea    0x244ef(%rip),%rcx        # 30850 <Td2>
    c361:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c364:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    c367:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c36d:	89 c9                	mov    %ecx,%ecx
    c36f:	89 ca                	mov    %ecx,%edx
    c371:	48 8d 0d d8 48 02 00 	lea    0x248d8(%rip),%rcx        # 30c50 <Td3>
    c378:	33 04 91             	xor    (%rcx,%rdx,4),%eax
    c37b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c37f:	33 81 dc 00 00 00    	xor    0xdc(%rcx),%eax
    c385:	89 45 c0             	mov    %eax,-0x40(%rbp)
    c388:	e9 00 00 00 00       	jmp    c38d <AES_decrypt+0x16bd>
    c38d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c391:	8b 88 f0 00 00 00    	mov    0xf0(%rax),%ecx
    c397:	c1 e1 02             	shl    $0x2,%ecx
    c39a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c39e:	48 63 c9             	movslq %ecx,%rcx
    c3a1:	48 c1 e1 02          	shl    $0x2,%rcx
    c3a5:	48 01 c8             	add    %rcx,%rax
    c3a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c3ac:	8b 45 cc             	mov    -0x34(%rbp),%eax
    c3af:	c1 e8 18             	shr    $0x18,%eax
    c3b2:	89 c0                	mov    %eax,%eax
    c3b4:	89 c1                	mov    %eax,%ecx
    c3b6:	48 8d 05 93 4c 02 00 	lea    0x24c93(%rip),%rax        # 31050 <Td4>
    c3bd:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    c3c1:	c1 e0 18             	shl    $0x18,%eax
    c3c4:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c3c7:	c1 e9 10             	shr    $0x10,%ecx
    c3ca:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c3d0:	89 c9                	mov    %ecx,%ecx
    c3d2:	89 ca                	mov    %ecx,%edx
    c3d4:	48 8d 0d 75 4c 02 00 	lea    0x24c75(%rip),%rcx        # 31050 <Td4>
    c3db:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c3df:	c1 e1 10             	shl    $0x10,%ecx
    c3e2:	31 c8                	xor    %ecx,%eax
    c3e4:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c3e7:	c1 e9 08             	shr    $0x8,%ecx
    c3ea:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c3f0:	89 c9                	mov    %ecx,%ecx
    c3f2:	89 ca                	mov    %ecx,%edx
    c3f4:	48 8d 0d 55 4c 02 00 	lea    0x24c55(%rip),%rcx        # 31050 <Td4>
    c3fb:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c3ff:	c1 e1 08             	shl    $0x8,%ecx
    c402:	31 c8                	xor    %ecx,%eax
    c404:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c407:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c40d:	89 c9                	mov    %ecx,%ecx
    c40f:	89 ca                	mov    %ecx,%edx
    c411:	48 8d 0d 38 4c 02 00 	lea    0x24c38(%rip),%rcx        # 31050 <Td4>
    c418:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c41c:	31 c8                	xor    %ecx,%eax
    c41e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c422:	33 01                	xor    (%rcx),%eax
    c424:	89 45 dc             	mov    %eax,-0x24(%rbp)
    c427:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c42a:	c1 e8 18             	shr    $0x18,%eax
    c42d:	88 c1                	mov    %al,%cl
    c42f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c433:	88 08                	mov    %cl,(%rax)
    c435:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c438:	c1 e8 10             	shr    $0x10,%eax
    c43b:	88 c1                	mov    %al,%cl
    c43d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c441:	88 48 01             	mov    %cl,0x1(%rax)
    c444:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c447:	c1 e8 08             	shr    $0x8,%eax
    c44a:	88 c1                	mov    %al,%cl
    c44c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c450:	88 48 02             	mov    %cl,0x2(%rax)
    c453:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c456:	88 c1                	mov    %al,%cl
    c458:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c45c:	88 48 03             	mov    %cl,0x3(%rax)
    c45f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c462:	c1 e8 18             	shr    $0x18,%eax
    c465:	89 c0                	mov    %eax,%eax
    c467:	89 c1                	mov    %eax,%ecx
    c469:	48 8d 05 e0 4b 02 00 	lea    0x24be0(%rip),%rax        # 31050 <Td4>
    c470:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    c474:	c1 e0 18             	shl    $0x18,%eax
    c477:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c47a:	c1 e9 10             	shr    $0x10,%ecx
    c47d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c483:	89 c9                	mov    %ecx,%ecx
    c485:	89 ca                	mov    %ecx,%edx
    c487:	48 8d 0d c2 4b 02 00 	lea    0x24bc2(%rip),%rcx        # 31050 <Td4>
    c48e:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c492:	c1 e1 10             	shl    $0x10,%ecx
    c495:	31 c8                	xor    %ecx,%eax
    c497:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c49a:	c1 e9 08             	shr    $0x8,%ecx
    c49d:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c4a3:	89 c9                	mov    %ecx,%ecx
    c4a5:	89 ca                	mov    %ecx,%edx
    c4a7:	48 8d 0d a2 4b 02 00 	lea    0x24ba2(%rip),%rcx        # 31050 <Td4>
    c4ae:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c4b2:	c1 e1 08             	shl    $0x8,%ecx
    c4b5:	31 c8                	xor    %ecx,%eax
    c4b7:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c4ba:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c4c0:	89 c9                	mov    %ecx,%ecx
    c4c2:	89 ca                	mov    %ecx,%edx
    c4c4:	48 8d 0d 85 4b 02 00 	lea    0x24b85(%rip),%rcx        # 31050 <Td4>
    c4cb:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c4cf:	31 c8                	xor    %ecx,%eax
    c4d1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c4d5:	33 41 04             	xor    0x4(%rcx),%eax
    c4d8:	89 45 d8             	mov    %eax,-0x28(%rbp)
    c4db:	8b 45 d8             	mov    -0x28(%rbp),%eax
    c4de:	c1 e8 18             	shr    $0x18,%eax
    c4e1:	88 c1                	mov    %al,%cl
    c4e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4e7:	88 48 04             	mov    %cl,0x4(%rax)
    c4ea:	8b 45 d8             	mov    -0x28(%rbp),%eax
    c4ed:	c1 e8 10             	shr    $0x10,%eax
    c4f0:	88 c1                	mov    %al,%cl
    c4f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4f6:	88 48 05             	mov    %cl,0x5(%rax)
    c4f9:	8b 45 d8             	mov    -0x28(%rbp),%eax
    c4fc:	c1 e8 08             	shr    $0x8,%eax
    c4ff:	88 c1                	mov    %al,%cl
    c501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c505:	88 48 06             	mov    %cl,0x6(%rax)
    c508:	8b 45 d8             	mov    -0x28(%rbp),%eax
    c50b:	88 c1                	mov    %al,%cl
    c50d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c511:	88 48 07             	mov    %cl,0x7(%rax)
    c514:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    c517:	c1 e8 18             	shr    $0x18,%eax
    c51a:	89 c0                	mov    %eax,%eax
    c51c:	89 c1                	mov    %eax,%ecx
    c51e:	48 8d 05 2b 4b 02 00 	lea    0x24b2b(%rip),%rax        # 31050 <Td4>
    c525:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    c529:	c1 e0 18             	shl    $0x18,%eax
    c52c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c52f:	c1 e9 10             	shr    $0x10,%ecx
    c532:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c538:	89 c9                	mov    %ecx,%ecx
    c53a:	89 ca                	mov    %ecx,%edx
    c53c:	48 8d 0d 0d 4b 02 00 	lea    0x24b0d(%rip),%rcx        # 31050 <Td4>
    c543:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c547:	c1 e1 10             	shl    $0x10,%ecx
    c54a:	31 c8                	xor    %ecx,%eax
    c54c:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c54f:	c1 e9 08             	shr    $0x8,%ecx
    c552:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c558:	89 c9                	mov    %ecx,%ecx
    c55a:	89 ca                	mov    %ecx,%edx
    c55c:	48 8d 0d ed 4a 02 00 	lea    0x24aed(%rip),%rcx        # 31050 <Td4>
    c563:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c567:	c1 e1 08             	shl    $0x8,%ecx
    c56a:	31 c8                	xor    %ecx,%eax
    c56c:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    c56f:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c575:	89 c9                	mov    %ecx,%ecx
    c577:	89 ca                	mov    %ecx,%edx
    c579:	48 8d 0d d0 4a 02 00 	lea    0x24ad0(%rip),%rcx        # 31050 <Td4>
    c580:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c584:	31 c8                	xor    %ecx,%eax
    c586:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c58a:	33 41 08             	xor    0x8(%rcx),%eax
    c58d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    c590:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    c593:	c1 e8 18             	shr    $0x18,%eax
    c596:	88 c1                	mov    %al,%cl
    c598:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c59c:	88 48 08             	mov    %cl,0x8(%rax)
    c59f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    c5a2:	c1 e8 10             	shr    $0x10,%eax
    c5a5:	88 c1                	mov    %al,%cl
    c5a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5ab:	88 48 09             	mov    %cl,0x9(%rax)
    c5ae:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    c5b1:	c1 e8 08             	shr    $0x8,%eax
    c5b4:	88 c1                	mov    %al,%cl
    c5b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5ba:	88 48 0a             	mov    %cl,0xa(%rax)
    c5bd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    c5c0:	88 c1                	mov    %al,%cl
    c5c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5c6:	88 48 0b             	mov    %cl,0xb(%rax)
    c5c9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    c5cc:	c1 e8 18             	shr    $0x18,%eax
    c5cf:	89 c0                	mov    %eax,%eax
    c5d1:	89 c1                	mov    %eax,%ecx
    c5d3:	48 8d 05 76 4a 02 00 	lea    0x24a76(%rip),%rax        # 31050 <Td4>
    c5da:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    c5de:	c1 e0 18             	shl    $0x18,%eax
    c5e1:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    c5e4:	c1 e9 10             	shr    $0x10,%ecx
    c5e7:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c5ed:	89 c9                	mov    %ecx,%ecx
    c5ef:	89 ca                	mov    %ecx,%edx
    c5f1:	48 8d 0d 58 4a 02 00 	lea    0x24a58(%rip),%rcx        # 31050 <Td4>
    c5f8:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c5fc:	c1 e1 10             	shl    $0x10,%ecx
    c5ff:	31 c8                	xor    %ecx,%eax
    c601:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    c604:	c1 e9 08             	shr    $0x8,%ecx
    c607:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c60d:	89 c9                	mov    %ecx,%ecx
    c60f:	89 ca                	mov    %ecx,%edx
    c611:	48 8d 0d 38 4a 02 00 	lea    0x24a38(%rip),%rcx        # 31050 <Td4>
    c618:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c61c:	c1 e1 08             	shl    $0x8,%ecx
    c61f:	31 c8                	xor    %ecx,%eax
    c621:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    c624:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    c62a:	89 c9                	mov    %ecx,%ecx
    c62c:	89 ca                	mov    %ecx,%edx
    c62e:	48 8d 0d 1b 4a 02 00 	lea    0x24a1b(%rip),%rcx        # 31050 <Td4>
    c635:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c639:	31 c8                	xor    %ecx,%eax
    c63b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c63f:	33 41 0c             	xor    0xc(%rcx),%eax
    c642:	89 45 d0             	mov    %eax,-0x30(%rbp)
    c645:	8b 45 d0             	mov    -0x30(%rbp),%eax
    c648:	c1 e8 18             	shr    $0x18,%eax
    c64b:	88 c1                	mov    %al,%cl
    c64d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c651:	88 48 0c             	mov    %cl,0xc(%rax)
    c654:	8b 45 d0             	mov    -0x30(%rbp),%eax
    c657:	c1 e8 10             	shr    $0x10,%eax
    c65a:	88 c1                	mov    %al,%cl
    c65c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c660:	88 48 0d             	mov    %cl,0xd(%rax)
    c663:	8b 45 d0             	mov    -0x30(%rbp),%eax
    c666:	c1 e8 08             	shr    $0x8,%eax
    c669:	88 c1                	mov    %al,%cl
    c66b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c66f:	88 48 0e             	mov    %cl,0xe(%rax)
    c672:	8b 45 d0             	mov    -0x30(%rbp),%eax
    c675:	88 c1                	mov    %al,%cl
    c677:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c67b:	88 48 0f             	mov    %cl,0xf(%rax)
    c67e:	5d                   	pop    %rbp
    c67f:	c3                   	ret    

000000000000c680 <__mince_data_addr_translate>:
    c680:	50                   	push   %rax
    c681:	53                   	push   %rbx
    c682:	51                   	push   %rcx
    c683:	52                   	push   %rdx
    c684:	56                   	push   %rsi
    c685:	57                   	push   %rdi
    c686:	41 50                	push   %r8
    c688:	41 51                	push   %r9
    c68a:	41 52                	push   %r10
    c68c:	41 53                	push   %r11
    c68e:	41 54                	push   %r12
    c690:	41 55                	push   %r13
    c692:	9c                   	pushf  
    c693:	e8 47 00 00 00       	call   c6df <__mince_data_addr_translate_inner>
    c698:	49 89 c6             	mov    %rax,%r14
    c69b:	9d                   	popf   
    c69c:	41 5d                	pop    %r13
    c69e:	41 5c                	pop    %r12
    c6a0:	41 5b                	pop    %r11
    c6a2:	41 5a                	pop    %r10
    c6a4:	41 59                	pop    %r9
    c6a6:	41 58                	pop    %r8
    c6a8:	5f                   	pop    %rdi
    c6a9:	5e                   	pop    %rsi
    c6aa:	5a                   	pop    %rdx
    c6ab:	59                   	pop    %rcx
    c6ac:	5b                   	pop    %rbx
    c6ad:	58                   	pop    %rax
    c6ae:	c3                   	ret    

000000000000c6af <__mince_populate>:
    c6af:	f3 0f 1e fa          	endbr64 
    c6b3:	55                   	push   %rbp
    c6b4:	48 89 e5             	mov    %rsp,%rbp
    c6b7:	48 83 ec 20          	sub    $0x20,%rsp
    c6bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6c3:	89 55 ec             	mov    %edx,-0x14(%rbp)
    c6c6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c6c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6d1:	48 89 ce             	mov    %rcx,%rsi
    c6d4:	48 89 c7             	mov    %rax,%rdi
    c6d7:	e8 d2 00 00 00       	call   c7ae <_Z16populate_newdrammmj>
    c6dc:	90                   	nop
    c6dd:	c9                   	leave  
    c6de:	c3                   	ret    

000000000000c6df <__mince_data_addr_translate_inner>:
    c6df:	f3 0f 1e fa          	endbr64 
    c6e3:	55                   	push   %rbp
    c6e4:	48 89 e5             	mov    %rsp,%rbp
    c6e7:	41 57                	push   %r15
    c6e9:	4c 89 fa             	mov    %r15,%rdx
    c6ec:	48 8d 05 0d b9 02 00 	lea    0x2b90d(%rip),%rax        # 38000 <Te0>
    c6f3:	48 39 c2             	cmp    %rax,%rdx
    c6f6:	72 15                	jb     c70d <__mince_data_addr_translate_inner+0x2e>
    c6f8:	4c 89 fa             	mov    %r15,%rdx
    c6fb:	48 8d 05 fe b8 02 00 	lea    0x2b8fe(%rip),%rax        # 38000 <Te0>
    c702:	48 05 00 04 00 00    	add    $0x400,%rax
    c708:	48 39 c2             	cmp    %rax,%rdx
    c70b:	76 08                	jbe    c715 <__mince_data_addr_translate_inner+0x36>
    c70d:	4c 89 f8             	mov    %r15,%rax
    c710:	e9 84 00 00 00       	jmp    c799 <__mince_data_addr_translate_inner+0xba>
    c715:	4c 89 f8             	mov    %r15,%rax
    c718:	48 c1 e8 06          	shr    $0x6,%rax
    c71c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c720:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    c727:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    c72a:	8b 05 d0 ec 04 00    	mov    0x4ecd0(%rip),%eax        # 5b400 <real_data_blocks_num>
    c730:	39 c2                	cmp    %eax,%edx
    c732:	73 61                	jae    c795 <__mince_data_addr_translate_inner+0xb6>
    c734:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    c737:	48 63 d0             	movslq %eax,%rdx
    c73a:	48 89 d0             	mov    %rdx,%rax
    c73d:	48 01 c0             	add    %rax,%rax
    c740:	48 01 d0             	add    %rdx,%rax
    c743:	48 c1 e0 03          	shl    $0x3,%rax
    c747:	48 89 c2             	mov    %rax,%rdx
    c74a:	48 8d 05 d7 ec 04 00 	lea    0x4ecd7(%rip),%rax        # 5b428 <data_mapping+0x8>
    c751:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    c755:	48 c1 e8 06          	shr    $0x6,%rax
    c759:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    c75d:	75 30                	jne    c78f <__mince_data_addr_translate_inner+0xb0>
    c75f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    c762:	48 63 d0             	movslq %eax,%rdx
    c765:	48 89 d0             	mov    %rdx,%rax
    c768:	48 01 c0             	add    %rax,%rax
    c76b:	48 01 d0             	add    %rdx,%rax
    c76e:	48 c1 e0 03          	shl    $0x3,%rax
    c772:	48 89 c2             	mov    %rax,%rdx
    c775:	48 8d 05 a4 ec 04 00 	lea    0x4eca4(%rip),%rax        # 5b420 <data_mapping>
    c77c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    c780:	4c 89 fa             	mov    %r15,%rdx
    c783:	83 e2 3f             	and    $0x3f,%edx
    c786:	48 01 d0             	add    %rdx,%rax
    c789:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c78d:	eb 06                	jmp    c795 <__mince_data_addr_translate_inner+0xb6>
    c78f:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    c793:	eb 92                	jmp    c727 <__mince_data_addr_translate_inner+0x48>
    c795:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c799:	41 5f                	pop    %r15
    c79b:	5d                   	pop    %rbp
    c79c:	c3                   	ret    

000000000000c79d <get_mince_start_addr>:
    c79d:	f3 0f 1e fa          	endbr64 
    c7a1:	55                   	push   %rbp
    c7a2:	48 89 e5             	mov    %rsp,%rbp
    c7a5:	48 8d 05 54 d8 02 00 	lea    0x2d854(%rip),%rax        # 3a000 <data_region>
    c7ac:	5d                   	pop    %rbp
    c7ad:	c3                   	ret    

000000000000c7ae <_Z16populate_newdrammmj>:
    c7ae:	f3 0f 1e fa          	endbr64 
    c7b2:	55                   	push   %rbp
    c7b3:	48 89 e5             	mov    %rsp,%rbp
    c7b6:	48 83 ec 20          	sub    $0x20,%rsp
    c7ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7c2:	89 55 ec             	mov    %edx,-0x14(%rbp)
    c7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c7cc:	48 89 d1             	mov    %rdx,%rcx
    c7cf:	48 c1 e1 0c          	shl    $0xc,%rcx
    c7d3:	48 8d 15 26 d8 02 00 	lea    0x2d826(%rip),%rdx        # 3a000 <data_region>
    c7da:	48 01 d1             	add    %rdx,%rcx
    c7dd:	ba 40 00 00 00       	mov    $0x40,%edx
    c7e2:	48 89 c6             	mov    %rax,%rsi
    c7e5:	48 89 cf             	mov    %rcx,%rdi
    c7e8:	e8 92 46 01 00       	call   20e7f <memcpy>
    c7ed:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c7f0:	48 89 d0             	mov    %rdx,%rax
    c7f3:	48 01 c0             	add    %rax,%rax
    c7f6:	48 01 d0             	add    %rdx,%rax
    c7f9:	48 c1 e0 03          	shl    $0x3,%rax
    c7fd:	48 89 c1             	mov    %rax,%rcx
    c800:	48 8d 15 29 ec 04 00 	lea    0x4ec29(%rip),%rdx        # 5b430 <data_mapping+0x10>
    c807:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c80a:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
    c80d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c810:	48 89 d0             	mov    %rdx,%rax
    c813:	48 01 c0             	add    %rax,%rax
    c816:	48 01 d0             	add    %rdx,%rax
    c819:	48 c1 e0 03          	shl    $0x3,%rax
    c81d:	48 89 c1             	mov    %rax,%rcx
    c820:	48 8d 15 01 ec 04 00 	lea    0x4ec01(%rip),%rdx        # 5b428 <data_mapping+0x8>
    c827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82b:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    c82f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c832:	48 c1 e0 0c          	shl    $0xc,%rax
    c836:	48 89 c2             	mov    %rax,%rdx
    c839:	48 8d 05 c0 d7 02 00 	lea    0x2d7c0(%rip),%rax        # 3a000 <data_region>
    c840:	48 01 d0             	add    %rdx,%rax
    c843:	48 89 c1             	mov    %rax,%rcx
    c846:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c849:	48 89 d0             	mov    %rdx,%rax
    c84c:	48 01 c0             	add    %rax,%rax
    c84f:	48 01 d0             	add    %rdx,%rax
    c852:	48 c1 e0 03          	shl    $0x3,%rax
    c856:	48 89 c2             	mov    %rax,%rdx
    c859:	48 8d 05 c0 eb 04 00 	lea    0x4ebc0(%rip),%rax        # 5b420 <data_mapping>
    c860:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
    c864:	8b 05 96 eb 04 00    	mov    0x4eb96(%rip),%eax        # 5b400 <real_data_blocks_num>
    c86a:	83 c0 01             	add    $0x1,%eax
    c86d:	89 05 8d eb 04 00    	mov    %eax,0x4eb8d(%rip)        # 5b400 <real_data_blocks_num>
    c873:	90                   	nop
    c874:	c9                   	leave  
    c875:	c3                   	ret    

000000000000c876 <_ZL23build_rts_context_nodesP15_layout_entry_tm>:
    c876:	f3 0f 1e fa          	endbr64 
    c87a:	55                   	push   %rbp
    c87b:	48 89 e5             	mov    %rsp,%rbp
    c87e:	48 83 ec 50          	sub    $0x50,%rsp
    c882:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c886:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    c88a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c88e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c892:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c896:	48 01 d0             	add    %rdx,%rax
    c899:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c89d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8a1:	25 ff 0f 00 00       	and    $0xfff,%eax
    c8a6:	48 85 c0             	test   %rax,%rax
    c8a9:	74 1f                	je     c8ca <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x54>
    c8ab:	48 8d 0d fe 48 02 00 	lea    0x248fe(%rip),%rcx        # 311b0 <Td4+0x160>
    c8b2:	48 8d 15 0c 49 02 00 	lea    0x2490c(%rip),%rdx        # 311c5 <Td4+0x175>
    c8b9:	be 2a 00 00 00       	mov    $0x2a,%esi
    c8be:	48 8d 3d 18 49 02 00 	lea    0x24918(%rip),%rdi        # 311dd <Td4+0x18d>
    c8c5:	e8 0f a4 00 00       	call   16cd9 <__assert>
    c8ca:	e8 6c 28 02 00       	call   2f13b <get_enclave_base>
    c8cf:	48 89 c2             	mov    %rax,%rdx
    c8d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8d6:	48 01 d0             	add    %rdx,%rax
    c8d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c8dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8e1:	8b 40 04             	mov    0x4(%rax),%eax
    c8e4:	c1 e0 0c             	shl    $0xc,%eax
    c8e7:	89 c0                	mov    %eax,%eax
    c8e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c8ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8f1:	48 8b 40 18          	mov    0x18(%rax),%rax
    c8f5:	48 85 c0             	test   %rax,%rax
    c8f8:	74 12                	je     c90c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x96>
    c8fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8fe:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    c902:	0f b7 c0             	movzwl %ax,%eax
    c905:	83 e0 04             	and    $0x4,%eax
    c908:	85 c0                	test   %eax,%eax
    c90a:	74 43                	je     c94f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0xd9>
    c90c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c910:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    c914:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    c91a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    c920:	b9 00 00 00 00       	mov    $0x0,%ecx
    c925:	ba 81 00 00 00       	mov    $0x81,%edx
    c92a:	48 89 c7             	mov    %rax,%rdi
    c92d:	e8 5d 91 00 00       	call   15a8f <mm_init_ema>
    c932:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    c935:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    c939:	74 0a                	je     c945 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0xcf>
    c93b:	b8 01 00 00 00       	mov    $0x1,%eax
    c940:	e9 c9 01 00 00       	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    c945:	b8 00 00 00 00       	mov    $0x0,%eax
    c94a:	e9 bf 01 00 00       	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    c94f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c953:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    c957:	0f b7 c0             	movzwl %ax,%eax
    c95a:	83 e0 10             	and    $0x10,%eax
    c95d:	85 c0                	test   %eax,%eax
    c95f:	0f 95 c0             	setne  %al
    c962:	88 45 c9             	mov    %al,-0x37(%rbp)
    c965:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c969:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    c96d:	0f b7 c0             	movzwl %ax,%eax
    c970:	83 e0 08             	and    $0x8,%eax
    c973:	85 c0                	test   %eax,%eax
    c975:	0f 95 c0             	setne  %al
    c978:	88 45 ca             	mov    %al,-0x36(%rbp)
    c97b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c97f:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    c983:	0f b7 c0             	movzwl %ax,%eax
    c986:	83 e0 01             	and    $0x1,%eax
    c989:	85 c0                	test   %eax,%eax
    c98b:	74 12                	je     c99f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x129>
    c98d:	0f b6 45 c9          	movzbl -0x37(%rbp),%eax
    c991:	83 f0 01             	xor    $0x1,%eax
    c994:	84 c0                	test   %al,%al
    c996:	74 07                	je     c99f <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x129>
    c998:	b8 01 00 00 00       	mov    $0x1,%eax
    c99d:	eb 05                	jmp    c9a4 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x12e>
    c99f:	b8 00 00 00 00       	mov    $0x0,%eax
    c9a4:	88 45 cb             	mov    %al,-0x35(%rbp)
    c9a7:	80 7d c9 00          	cmpb   $0x0,-0x37(%rbp)
    c9ab:	74 5f                	je     ca0c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x196>
    c9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9b1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    c9b5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    c9bb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    c9c1:	b9 03 00 00 00       	mov    $0x3,%ecx
    c9c6:	ba 80 00 00 00       	mov    $0x80,%edx
    c9cb:	48 89 c7             	mov    %rax,%rdi
    c9ce:	e8 bc 90 00 00       	call   15a8f <mm_init_ema>
    c9d3:	85 c0                	test   %eax,%eax
    c9d5:	0f 95 c0             	setne  %al
    c9d8:	84 c0                	test   %al,%al
    c9da:	74 0a                	je     c9e6 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x170>
    c9dc:	b8 01 00 00 00       	mov    $0x1,%eax
    c9e1:	e9 28 01 00 00       	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    c9e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c9ee:	48 89 d6             	mov    %rdx,%rsi
    c9f1:	48 89 c7             	mov    %rax,%rdi
    c9f4:	e8 7c 92 00 00       	call   15c75 <mm_dealloc>
    c9f9:	85 c0                	test   %eax,%eax
    c9fb:	0f 95 c0             	setne  %al
    c9fe:	84 c0                	test   %al,%al
    ca00:	74 0a                	je     ca0c <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x196>
    ca02:	b8 01 00 00 00       	mov    $0x1,%eax
    ca07:	e9 02 01 00 00       	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    ca0c:	80 7d ca 00          	cmpb   $0x0,-0x36(%rbp)
    ca10:	0f 84 83 00 00 00    	je     ca99 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x223>
    ca16:	c7 45 cc 20 00 00 00 	movl   $0x20,-0x34(%rbp)
    ca1d:	c7 45 dc 00 02 00 00 	movl   $0x200,-0x24(%rbp)
    ca24:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ca28:	0f b7 00             	movzwl (%rax),%eax
    ca2b:	66 83 f8 07          	cmp    $0x7,%ax
    ca2f:	74 1a                	je     ca4b <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1d5>
    ca31:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ca35:	0f b7 00             	movzwl (%rax),%eax
    ca38:	66 83 f8 11          	cmp    $0x11,%ax
    ca3c:	74 0d                	je     ca4b <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1d5>
    ca3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ca42:	0f b7 00             	movzwl (%rax),%eax
    ca45:	66 83 f8 12          	cmp    $0x12,%ax
    ca49:	75 07                	jne    ca52 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x1dc>
    ca4b:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    ca52:	8b 45 cc             	mov    -0x34(%rbp),%eax
    ca55:	0b 45 dc             	or     -0x24(%rbp),%eax
    ca58:	0c c4                	or     $0xc4,%al
    ca5a:	89 c2                	mov    %eax,%edx
    ca5c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ca60:	8b 40 04             	mov    0x4(%rax),%eax
    ca63:	89 c0                	mov    %eax,%eax
    ca65:	48 c1 e0 0c          	shl    $0xc,%rax
    ca69:	48 89 c6             	mov    %rax,%rsi
    ca6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca70:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    ca76:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ca7c:	b9 00 00 00 00       	mov    $0x0,%ecx
    ca81:	48 89 c7             	mov    %rax,%rdi
    ca84:	e8 38 91 00 00       	call   15bc1 <mm_alloc>
    ca89:	89 45 e0             	mov    %eax,-0x20(%rbp)
    ca8c:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    ca90:	74 77                	je     cb09 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    ca92:	b8 01 00 00 00       	mov    $0x1,%eax
    ca97:	eb 75                	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    ca99:	80 7d cb 00          	cmpb   $0x0,-0x35(%rbp)
    ca9d:	74 6a                	je     cb09 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    ca9f:	c7 45 d0 00 02 00 00 	movl   $0x200,-0x30(%rbp)
    caa6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    caaa:	48 8b 40 18          	mov    0x18(%rax),%rax
    caae:	83 e0 07             	and    $0x7,%eax
    cab1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    cab4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cab8:	0f b7 00             	movzwl (%rax),%eax
    cabb:	66 83 f8 04          	cmp    $0x4,%ax
    cabf:	75 0e                	jne    cacf <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x259>
    cac1:	c7 45 d0 00 01 00 00 	movl   $0x100,-0x30(%rbp)
    cac8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    cacf:	8b 45 d0             	mov    -0x30(%rbp),%eax
    cad2:	0c 80                	or     $0x80,%al
    cad4:	89 c7                	mov    %eax,%edi
    cad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cada:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    cadd:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    cae1:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    cae7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    caed:	89 d1                	mov    %edx,%ecx
    caef:	89 fa                	mov    %edi,%edx
    caf1:	48 89 c7             	mov    %rax,%rdi
    caf4:	e8 96 8f 00 00       	call   15a8f <mm_init_ema>
    caf9:	89 45 d8             	mov    %eax,-0x28(%rbp)
    cafc:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    cb00:	74 07                	je     cb09 <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x293>
    cb02:	b8 01 00 00 00       	mov    $0x1,%eax
    cb07:	eb 05                	jmp    cb0e <_ZL23build_rts_context_nodesP15_layout_entry_tm+0x298>
    cb09:	b8 00 00 00 00       	mov    $0x0,%eax
    cb0e:	c9                   	leave  
    cb0f:	c3                   	ret    

000000000000cb10 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    cb10:	f3 0f 1e fa          	endbr64 
    cb14:	55                   	push   %rbp
    cb15:	48 89 e5             	mov    %rsp,%rbp
    cb18:	48 83 ec 40          	sub    $0x40,%rsp
    cb1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cb20:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cb24:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    cb28:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    cb2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cb37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb3b:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    cb3f:	0f 83 aa 00 00 00    	jae    cbef <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xdf>
    cb45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb49:	0f b7 00             	movzwl (%rax),%eax
    cb4c:	0f b7 c0             	movzwl %ax,%eax
    cb4f:	25 00 10 00 00       	and    $0x1000,%eax
    cb54:	85 c0                	test   %eax,%eax
    cb56:	75 21                	jne    cb79 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x69>
    cb58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cb60:	48 89 d6             	mov    %rdx,%rsi
    cb63:	48 89 c7             	mov    %rax,%rdi
    cb66:	e8 0b fd ff ff       	call   c876 <_ZL23build_rts_context_nodesP15_layout_entry_tm>
    cb6b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    cb6e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    cb72:	74 71                	je     cbe5 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd5>
    cb74:	8b 45 ec             	mov    -0x14(%rbp),%eax
    cb77:	eb 7b                	jmp    cbf4 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe4>
    cb79:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    cb80:	00 
    cb81:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    cb88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb8c:	8b 40 04             	mov    0x4(%rax),%eax
    cb8f:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    cb92:	73 51                	jae    cbe5 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd5>
    cb94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb98:	48 8b 40 08          	mov    0x8(%rax),%rax
    cb9c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    cba0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cba4:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    cba8:	0f b7 c0             	movzwl %ax,%eax
    cbab:	f7 d8                	neg    %eax
    cbad:	48 98                	cltq   
    cbaf:	48 c1 e0 05          	shl    $0x5,%rax
    cbb3:	48 89 c2             	mov    %rax,%rdx
    cbb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbba:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cbbe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cbc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbc6:	48 89 c6             	mov    %rax,%rsi
    cbc9:	48 89 cf             	mov    %rcx,%rdi
    cbcc:	e8 3f ff ff ff       	call   cb10 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    cbd1:	89 45 ec             	mov    %eax,-0x14(%rbp)
    cbd4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    cbd8:	74 05                	je     cbdf <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xcf>
    cbda:	8b 45 ec             	mov    -0x14(%rbp),%eax
    cbdd:	eb 15                	jmp    cbf4 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe4>
    cbdf:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    cbe3:	eb a3                	jmp    cb88 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x78>
    cbe5:	48 83 45 f0 20       	addq   $0x20,-0x10(%rbp)
    cbea:	e9 48 ff ff ff       	jmp    cb37 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x27>
    cbef:	b8 00 00 00 00       	mov    $0x0,%eax
    cbf4:	c9                   	leave  
    cbf5:	c3                   	ret    

000000000000cbf6 <init_rts_emas>:
    cbf6:	f3 0f 1e fa          	endbr64 
    cbfa:	55                   	push   %rbp
    cbfb:	48 89 e5             	mov    %rsp,%rbp
    cbfe:	48 83 ec 30          	sub    $0x30,%rsp
    cc02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc0a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cc0e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    cc15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc19:	48 89 c7             	mov    %rax,%rdi
    cc1c:	e8 f4 41 00 00       	call   10e15 <init_segment_emas>
    cc21:	89 45 fc             	mov    %eax,-0x4(%rbp)
    cc24:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cc28:	74 05                	je     cc2f <init_rts_emas+0x39>
    cc2a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cc2d:	eb 1e                	jmp    cc4d <init_rts_emas+0x57>
    cc2f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cc33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc37:	ba 00 00 00 00       	mov    $0x0,%edx
    cc3c:	48 89 ce             	mov    %rcx,%rsi
    cc3f:	48 89 c7             	mov    %rax,%rdi
    cc42:	e8 c9 fe ff ff       	call   cb10 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    cc47:	89 45 fc             	mov    %eax,-0x4(%rbp)
    cc4a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cc4d:	c9                   	leave  
    cc4e:	c3                   	ret    

000000000000cc4f <sgx_mm_alloc_ocall>:
    cc4f:	f3 0f 1e fa          	endbr64 
    cc53:	55                   	push   %rbp
    cc54:	48 89 e5             	mov    %rsp,%rbp
    cc57:	48 83 ec 40          	sub    $0x40,%rsp
    cc5b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cc5f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cc63:	89 55 cc             	mov    %edx,-0x34(%rbp)
    cc66:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    cc69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    cc70:	c7 45 e8 0e 00 00 00 	movl   $0xe,-0x18(%rbp)
    cc77:	bf 20 00 00 00       	mov    $0x20,%edi
    cc7c:	e8 54 06 00 00       	call   d2d5 <sgx_ocalloc>
    cc81:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cc85:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cc8a:	75 0c                	jne    cc98 <sgx_mm_alloc_ocall+0x49>
    cc8c:	e8 59 07 00 00       	call   d3ea <sgx_ocfree>
    cc91:	b8 01 00 00 00       	mov    $0x1,%eax
    cc96:	eb 67                	jmp    ccff <sgx_mm_alloc_ocall+0xb0>
    cc98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cca4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cca8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ccac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccb0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ccb4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ccb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccbc:	8b 55 cc             	mov    -0x34(%rbp),%edx
    ccbf:	89 50 18             	mov    %edx,0x18(%rax)
    ccc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccc6:	8b 55 c8             	mov    -0x38(%rbp),%edx
    ccc9:	89 50 1c             	mov    %edx,0x1c(%rax)
    cccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd0:	48 89 c6             	mov    %rax,%rsi
    ccd3:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    ccd8:	e8 ff 21 00 00       	call   eedc <sgx_ocall>
    ccdd:	89 45 ec             	mov    %eax,-0x14(%rbp)
    cce0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    cce4:	75 11                	jne    ccf7 <sgx_mm_alloc_ocall+0xa8>
    cce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccea:	8b 00                	mov    (%rax),%eax
    ccec:	85 c0                	test   %eax,%eax
    ccee:	75 07                	jne    ccf7 <sgx_mm_alloc_ocall+0xa8>
    ccf0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    ccf7:	e8 ee 06 00 00       	call   d3ea <sgx_ocfree>
    ccfc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    ccff:	c9                   	leave  
    cd00:	c3                   	ret    

000000000000cd01 <sgx_mm_modify_ocall>:
    cd01:	f3 0f 1e fa          	endbr64 
    cd05:	55                   	push   %rbp
    cd06:	48 89 e5             	mov    %rsp,%rbp
    cd09:	48 83 ec 40          	sub    $0x40,%rsp
    cd0d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cd11:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cd15:	89 55 cc             	mov    %edx,-0x34(%rbp)
    cd18:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    cd1b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    cd22:	c7 45 e8 0e 00 00 00 	movl   $0xe,-0x18(%rbp)
    cd29:	bf 20 00 00 00       	mov    $0x20,%edi
    cd2e:	e8 a2 05 00 00       	call   d2d5 <sgx_ocalloc>
    cd33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cd37:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cd3c:	75 0c                	jne    cd4a <sgx_mm_modify_ocall+0x49>
    cd3e:	e8 a7 06 00 00       	call   d3ea <sgx_ocfree>
    cd43:	b8 01 00 00 00       	mov    $0x1,%eax
    cd48:	eb 67                	jmp    cdb1 <sgx_mm_modify_ocall+0xb0>
    cd4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cd4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cd52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cd5a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd62:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cd66:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cd6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd6e:	8b 55 cc             	mov    -0x34(%rbp),%edx
    cd71:	89 50 18             	mov    %edx,0x18(%rax)
    cd74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd78:	8b 55 c8             	mov    -0x38(%rbp),%edx
    cd7b:	89 50 1c             	mov    %edx,0x1c(%rax)
    cd7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd82:	48 89 c6             	mov    %rax,%rsi
    cd85:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    cd8a:	e8 4d 21 00 00       	call   eedc <sgx_ocall>
    cd8f:	89 45 ec             	mov    %eax,-0x14(%rbp)
    cd92:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    cd96:	75 11                	jne    cda9 <sgx_mm_modify_ocall+0xa8>
    cd98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd9c:	8b 00                	mov    (%rax),%eax
    cd9e:	85 c0                	test   %eax,%eax
    cda0:	75 07                	jne    cda9 <sgx_mm_modify_ocall+0xa8>
    cda2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    cda9:	e8 3c 06 00 00       	call   d3ea <sgx_ocfree>
    cdae:	8b 45 e8             	mov    -0x18(%rbp),%eax
    cdb1:	c9                   	leave  
    cdb2:	c3                   	ret    

000000000000cdb3 <sgx_mm_register_pfhandler>:
    cdb3:	f3 0f 1e fa          	endbr64 
    cdb7:	55                   	push   %rbp
    cdb8:	48 89 e5             	mov    %rsp,%rbp
    cdbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdbf:	48 8b 05 8a e9 04 00 	mov    0x4e98a(%rip),%rax        # 5b750 <g_mm_pfhandler>
    cdc6:	48 85 c0             	test   %rax,%rax
    cdc9:	74 07                	je     cdd2 <sgx_mm_register_pfhandler+0x1f>
    cdcb:	b8 00 00 00 00       	mov    $0x0,%eax
    cdd0:	eb 10                	jmp    cde2 <sgx_mm_register_pfhandler+0x2f>
    cdd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdd6:	48 89 05 73 e9 04 00 	mov    %rax,0x4e973(%rip)        # 5b750 <g_mm_pfhandler>
    cddd:	b8 01 00 00 00       	mov    $0x1,%eax
    cde2:	5d                   	pop    %rbp
    cde3:	c3                   	ret    

000000000000cde4 <sgx_mm_unregister_pfhandler>:
    cde4:	f3 0f 1e fa          	endbr64 
    cde8:	55                   	push   %rbp
    cde9:	48 89 e5             	mov    %rsp,%rbp
    cdec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdf0:	48 8b 05 59 e9 04 00 	mov    0x4e959(%rip),%rax        # 5b750 <g_mm_pfhandler>
    cdf7:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cdfb:	74 07                	je     ce04 <sgx_mm_unregister_pfhandler+0x20>
    cdfd:	b8 00 00 00 00       	mov    $0x0,%eax
    ce02:	eb 10                	jmp    ce14 <sgx_mm_unregister_pfhandler+0x30>
    ce04:	48 c7 05 41 e9 04 00 	movq   $0x0,0x4e941(%rip)        # 5b750 <g_mm_pfhandler>
    ce0b:	00 00 00 00 
    ce0f:	b8 01 00 00 00       	mov    $0x1,%eax
    ce14:	5d                   	pop    %rbp
    ce15:	c3                   	ret    

000000000000ce16 <sgx_mm_mutex_init>:
    ce16:	f3 0f 1e fa          	endbr64 
    ce1a:	55                   	push   %rbp
    ce1b:	48 89 e5             	mov    %rsp,%rbp
    ce1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ce22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ce26:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ce2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ce31:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    ce38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ce3c:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ce43:	00 
    ce44:	b8 00 00 00 00       	mov    $0x0,%eax
    ce49:	5d                   	pop    %rbp
    ce4a:	c3                   	ret    

000000000000ce4b <sgx_mm_mutex_create>:
    ce4b:	f3 0f 1e fa          	endbr64 
    ce4f:	55                   	push   %rbp
    ce50:	48 89 e5             	mov    %rsp,%rbp
    ce53:	48 83 ec 10          	sub    $0x10,%rsp
    ce57:	bf 18 00 00 00       	mov    $0x18,%edi
    ce5c:	e8 56 06 01 00       	call   1d4b7 <dlmalloc>
    ce61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ce65:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ce6a:	75 07                	jne    ce73 <sgx_mm_mutex_create+0x28>
    ce6c:	b8 00 00 00 00       	mov    $0x0,%eax
    ce71:	eb 10                	jmp    ce83 <sgx_mm_mutex_create+0x38>
    ce73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce77:	48 89 c7             	mov    %rax,%rdi
    ce7a:	e8 97 ff ff ff       	call   ce16 <sgx_mm_mutex_init>
    ce7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce83:	c9                   	leave  
    ce84:	c3                   	ret    

000000000000ce85 <sgx_mm_mutex_lock>:
    ce85:	f3 0f 1e fa          	endbr64 
    ce89:	55                   	push   %rbp
    ce8a:	48 89 e5             	mov    %rsp,%rbp
    ce8d:	48 83 ec 10          	sub    $0x10,%rsp
    ce91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce95:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ce9a:	75 1f                	jne    cebb <sgx_mm_mutex_lock+0x36>
    ce9c:	48 8d 0d 47 43 02 00 	lea    0x24347(%rip),%rcx        # 311ea <Td4+0x19a>
    cea3:	48 8d 15 66 43 02 00 	lea    0x24366(%rip),%rdx        # 31210 <__func__.2612>
    ceaa:	be 99 00 00 00       	mov    $0x99,%esi
    ceaf:	48 8d 3d 42 43 02 00 	lea    0x24342(%rip),%rdi        # 311f8 <Td4+0x1a8>
    ceb6:	e8 1e 9e 00 00       	call   16cd9 <__assert>
    cebb:	90                   	nop
    cebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec0:	48 89 c7             	mov    %rax,%rdi
    cec3:	e8 03 45 01 00       	call   213cb <sgx_thread_spin_trylock>
    cec8:	85 c0                	test   %eax,%eax
    ceca:	75 f0                	jne    cebc <sgx_mm_mutex_lock+0x37>
    cecc:	b8 00 00 00 00       	mov    $0x0,%eax
    ced1:	c9                   	leave  
    ced2:	c3                   	ret    

000000000000ced3 <sgx_mm_mutex_unlock>:
    ced3:	f3 0f 1e fa          	endbr64 
    ced7:	55                   	push   %rbp
    ced8:	48 89 e5             	mov    %rsp,%rbp
    cedb:	48 83 ec 10          	sub    $0x10,%rsp
    cedf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cee3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cee8:	75 1f                	jne    cf09 <sgx_mm_mutex_unlock+0x36>
    ceea:	48 8d 0d f9 42 02 00 	lea    0x242f9(%rip),%rcx        # 311ea <Td4+0x19a>
    cef1:	48 8d 15 38 43 02 00 	lea    0x24338(%rip),%rdx        # 31230 <__func__.2619>
    cef8:	be a7 00 00 00       	mov    $0xa7,%esi
    cefd:	48 8d 3d f4 42 02 00 	lea    0x242f4(%rip),%rdi        # 311f8 <Td4+0x1a8>
    cf04:	e8 d0 9d 00 00       	call   16cd9 <__assert>
    cf09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf0d:	48 89 c7             	mov    %rax,%rdi
    cf10:	e8 a5 45 01 00       	call   214ba <sgx_thread_spin_unlock>
    cf15:	c9                   	leave  
    cf16:	c3                   	ret    

000000000000cf17 <sgx_mm_mutex_destroy>:
    cf17:	f3 0f 1e fa          	endbr64 
    cf1b:	55                   	push   %rbp
    cf1c:	48 89 e5             	mov    %rsp,%rbp
    cf1f:	48 83 ec 20          	sub    $0x20,%rsp
    cf23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf27:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cf2c:	75 1f                	jne    cf4d <sgx_mm_mutex_destroy+0x36>
    cf2e:	48 8d 0d b5 42 02 00 	lea    0x242b5(%rip),%rcx        # 311ea <Td4+0x19a>
    cf35:	48 8d 15 14 43 02 00 	lea    0x24314(%rip),%rdx        # 31250 <__func__.2623>
    cf3c:	be ad 00 00 00       	mov    $0xad,%esi
    cf41:	48 8d 3d b0 42 02 00 	lea    0x242b0(%rip),%rdi        # 311f8 <Td4+0x1a8>
    cf48:	e8 8c 9d 00 00       	call   16cd9 <__assert>
    cf4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf51:	48 89 c7             	mov    %rax,%rdi
    cf54:	e8 d9 43 01 00       	call   21332 <sgx_thread_spin_destroy>
    cf59:	89 45 fc             	mov    %eax,-0x4(%rbp)
    cf5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf60:	48 89 c7             	mov    %rax,%rdi
    cf63:	e8 4a 10 01 00       	call   1dfb2 <dlfree>
    cf68:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cf6b:	c9                   	leave  
    cf6c:	c3                   	ret    

000000000000cf6d <sgx_mm_is_within_enclave>:
    cf6d:	f3 0f 1e fa          	endbr64 
    cf71:	55                   	push   %rbp
    cf72:	48 89 e5             	mov    %rsp,%rbp
    cf75:	48 83 ec 10          	sub    $0x10,%rsp
    cf79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf89:	48 89 d6             	mov    %rdx,%rsi
    cf8c:	48 89 c7             	mov    %rax,%rdi
    cf8f:	e8 13 02 00 00       	call   d1a7 <sgx_is_within_enclave>
    cf94:	85 c0                	test   %eax,%eax
    cf96:	0f 95 c0             	setne  %al
    cf99:	c9                   	leave  
    cf9a:	c3                   	ret    

000000000000cf9b <_ZL28set_global_feature_indicatormm>:
    cf9b:	f3 0f 1e fa          	endbr64 
    cf9f:	55                   	push   %rbp
    cfa0:	48 89 e5             	mov    %rsp,%rbp
    cfa3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfa7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cfab:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    cfb2:	00 00 ff 
    cfb5:	48 23 45 f8          	and    -0x8(%rbp),%rax
    cfb9:	48 85 c0             	test   %rax,%rax
    cfbc:	74 0e                	je     cfcc <_ZL28set_global_feature_indicatormm+0x31>
    cfbe:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    cfc5:	ff ff 00 
    cfc8:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    cfcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfd0:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
    cfd6:	48 85 c0             	test   %rax,%rax
    cfd9:	75 0a                	jne    cfe5 <_ZL28set_global_feature_indicatormm+0x4a>
    cfdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    cfe0:	e9 02 01 00 00       	jmp    d0e7 <_ZL28set_global_feature_indicatormm+0x14c>
    cfe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfe9:	83 e0 20             	and    $0x20,%eax
    cfec:	48 85 c0             	test   %rax,%rax
    cfef:	74 11                	je     d002 <_ZL28set_global_feature_indicatormm+0x67>
    cff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff5:	83 e0 1f             	and    $0x1f,%eax
    cff8:	48 83 f8 1f          	cmp    $0x1f,%rax
    cffc:	0f 85 8f 00 00 00    	jne    d091 <_ZL28set_global_feature_indicatormm+0xf6>
    d002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d006:	83 e0 40             	and    $0x40,%eax
    d009:	48 85 c0             	test   %rax,%rax
    d00c:	74 0d                	je     d01b <_ZL28set_global_feature_indicatormm+0x80>
    d00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d012:	83 e0 3f             	and    $0x3f,%eax
    d015:	48 83 f8 3f          	cmp    $0x3f,%rax
    d019:	75 76                	jne    d091 <_ZL28set_global_feature_indicatormm+0xf6>
    d01b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d01f:	25 80 00 00 00       	and    $0x80,%eax
    d024:	48 85 c0             	test   %rax,%rax
    d027:	74 0d                	je     d036 <_ZL28set_global_feature_indicatormm+0x9b>
    d029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d02d:	83 e0 7f             	and    $0x7f,%eax
    d030:	48 83 f8 7f          	cmp    $0x7f,%rax
    d034:	75 5b                	jne    d091 <_ZL28set_global_feature_indicatormm+0xf6>
    d036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d03a:	25 00 01 00 00       	and    $0x100,%eax
    d03f:	48 85 c0             	test   %rax,%rax
    d042:	74 0f                	je     d053 <_ZL28set_global_feature_indicatormm+0xb8>
    d044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d048:	0f b6 c0             	movzbl %al,%eax
    d04b:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    d051:	75 3e                	jne    d091 <_ZL28set_global_feature_indicatormm+0xf6>
    d053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d057:	25 00 02 00 00       	and    $0x200,%eax
    d05c:	48 85 c0             	test   %rax,%rax
    d05f:	74 11                	je     d072 <_ZL28set_global_feature_indicatormm+0xd7>
    d061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d065:	25 ff 01 00 00       	and    $0x1ff,%eax
    d06a:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    d070:	75 1f                	jne    d091 <_ZL28set_global_feature_indicatormm+0xf6>
    d072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d076:	25 00 04 00 00       	and    $0x400,%eax
    d07b:	48 85 c0             	test   %rax,%rax
    d07e:	74 18                	je     d098 <_ZL28set_global_feature_indicatormm+0xfd>
    d080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d084:	25 ff 03 00 00       	and    $0x3ff,%eax
    d089:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    d08f:	74 07                	je     d098 <_ZL28set_global_feature_indicatormm+0xfd>
    d091:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d096:	eb 4f                	jmp    d0e7 <_ZL28set_global_feature_indicatormm+0x14c>
    d098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d09c:	83 e0 06             	and    $0x6,%eax
    d09f:	48 83 f8 06          	cmp    $0x6,%rax
    d0a3:	74 10                	je     d0b5 <_ZL28set_global_feature_indicatormm+0x11a>
    d0a5:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    d0ac:	20 fe ff 
    d0af:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    d0b3:	eb 1f                	jmp    d0d4 <_ZL28set_global_feature_indicatormm+0x139>
    d0b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d0b9:	25 e0 00 00 00       	and    $0xe0,%eax
    d0be:	48 3d e0 00 00 00    	cmp    $0xe0,%rax
    d0c4:	74 0e                	je     d0d4 <_ZL28set_global_feature_indicatormm+0x139>
    d0c6:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    d0cd:	e0 fe ff 
    d0d0:	48 21 45 f8          	and    %rax,-0x8(%rbp)
    d0d4:	48 8d 05 0d ad 02 00 	lea    0x2ad0d(%rip),%rax        # 37de8 <g_cpu_feature_indicator>
    d0db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d0df:	48 89 10             	mov    %rdx,(%rax)
    d0e2:	b8 00 00 00 00       	mov    $0x0,%eax
    d0e7:	5d                   	pop    %rbp
    d0e8:	c3                   	ret    

000000000000d0e9 <init_optimized_libs>:
    d0e9:	f3 0f 1e fa          	endbr64 
    d0ed:	55                   	push   %rbp
    d0ee:	48 89 e5             	mov    %rsp,%rbp
    d0f1:	48 83 ec 20          	sub    $0x20,%rsp
    d0f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0fd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d101:	e8 41 20 02 00       	call   2f147 <get_enclave_state>
    d106:	83 f8 01             	cmp    $0x1,%eax
    d109:	0f 95 c0             	setne  %al
    d10c:	84 c0                	test   %al,%al
    d10e:	74 07                	je     d117 <init_optimized_libs+0x2e>
    d110:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d115:	eb 73                	jmp    d18a <init_optimized_libs+0xa1>
    d117:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d11f:	48 89 d6             	mov    %rdx,%rsi
    d122:	48 89 c7             	mov    %rax,%rdi
    d125:	e8 71 fe ff ff       	call   cf9b <_ZL28set_global_feature_indicatormm>
    d12a:	85 c0                	test   %eax,%eax
    d12c:	0f 95 c0             	setne  %al
    d12f:	84 c0                	test   %al,%al
    d131:	74 07                	je     d13a <init_optimized_libs+0x51>
    d133:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d138:	eb 50                	jmp    d18a <init_optimized_libs+0xa1>
    d13a:	48 8d 05 a7 ac 02 00 	lea    0x2aca7(%rip),%rax        # 37de8 <g_cpu_feature_indicator>
    d141:	48 8b 00             	mov    (%rax),%rax
    d144:	48 89 c7             	mov    %rax,%rdi
    d147:	e8 0a 41 01 00       	call   21256 <sgx_init_string_lib>
    d14c:	85 c0                	test   %eax,%eax
    d14e:	0f 95 c0             	setne  %al
    d151:	84 c0                	test   %al,%al
    d153:	74 07                	je     d15c <init_optimized_libs+0x73>
    d155:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d15a:	eb 2e                	jmp    d18a <init_optimized_libs+0xa1>
    d15c:	48 8d 05 85 ac 02 00 	lea    0x2ac85(%rip),%rax        # 37de8 <g_cpu_feature_indicator>
    d163:	48 8b 00             	mov    (%rax),%rax
    d166:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d16a:	48 89 d6             	mov    %rdx,%rsi
    d16d:	48 89 c7             	mov    %rax,%rdi
    d170:	e8 e1 0f 02 00       	call   2e156 <sgx_init_crypto_lib>
    d175:	85 c0                	test   %eax,%eax
    d177:	0f 95 c0             	setne  %al
    d17a:	84 c0                	test   %al,%al
    d17c:	74 07                	je     d185 <init_optimized_libs+0x9c>
    d17e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d183:	eb 05                	jmp    d18a <init_optimized_libs+0xa1>
    d185:	b8 00 00 00 00       	mov    $0x0,%eax
    d18a:	c9                   	leave  
    d18b:	c3                   	ret    

000000000000d18c <trts_access_version_dummy1>:
    d18c:	f3 0f 1e fa          	endbr64 
    d190:	55                   	push   %rbp
    d191:	48 89 e5             	mov    %rsp,%rbp
    d194:	48 8d 05 75 be 02 00 	lea    0x2be75(%rip),%rax        # 39010 <sgx_trts_version>
    d19b:	c6 00 73             	movb   $0x73,(%rax)
    d19e:	48 8d 05 6b be 02 00 	lea    0x2be6b(%rip),%rax        # 39010 <sgx_trts_version>
    d1a5:	5d                   	pop    %rbp
    d1a6:	c3                   	ret    

000000000000d1a7 <sgx_is_within_enclave>:
    d1a7:	f3 0f 1e fa          	endbr64 
    d1ab:	55                   	push   %rbp
    d1ac:	48 89 e5             	mov    %rsp,%rbp
    d1af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d1b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d1b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d1bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d1bf:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    d1c6:	00 
    d1c7:	48 8d 05 2a ac 02 00 	lea    0x2ac2a(%rip),%rax        # 37df8 <g_enclave_base>
    d1ce:	48 8b 00             	mov    (%rax),%rax
    d1d1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d1d5:	48 8d 05 24 ac 02 00 	lea    0x2ac24(%rip),%rax        # 37e00 <g_enclave_size>
    d1dc:	48 8b 10             	mov    (%rax),%rdx
    d1df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d1e3:	48 01 d0             	add    %rdx,%rax
    d1e6:	48 83 e8 01          	sub    $0x1,%rax
    d1ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d1ee:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d1f3:	74 15                	je     d20a <sgx_is_within_enclave+0x63>
    d1f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d1fd:	48 01 d0             	add    %rdx,%rax
    d200:	48 83 e8 01          	sub    $0x1,%rax
    d204:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d208:	eb 08                	jmp    d212 <sgx_is_within_enclave+0x6b>
    d20a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d20e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d212:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d216:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d21a:	77 1b                	ja     d237 <sgx_is_within_enclave+0x90>
    d21c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d220:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d224:	72 11                	jb     d237 <sgx_is_within_enclave+0x90>
    d226:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d22a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    d22e:	77 07                	ja     d237 <sgx_is_within_enclave+0x90>
    d230:	b8 01 00 00 00       	mov    $0x1,%eax
    d235:	eb 05                	jmp    d23c <sgx_is_within_enclave+0x95>
    d237:	b8 00 00 00 00       	mov    $0x0,%eax
    d23c:	5d                   	pop    %rbp
    d23d:	c3                   	ret    

000000000000d23e <sgx_is_outside_enclave>:
    d23e:	f3 0f 1e fa          	endbr64 
    d242:	55                   	push   %rbp
    d243:	48 89 e5             	mov    %rsp,%rbp
    d246:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d24a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d24e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d252:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d256:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    d25d:	00 
    d25e:	48 8d 05 93 ab 02 00 	lea    0x2ab93(%rip),%rax        # 37df8 <g_enclave_base>
    d265:	48 8b 00             	mov    (%rax),%rax
    d268:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d26c:	48 8d 05 8d ab 02 00 	lea    0x2ab8d(%rip),%rax        # 37e00 <g_enclave_size>
    d273:	48 8b 10             	mov    (%rax),%rdx
    d276:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d27a:	48 01 d0             	add    %rdx,%rax
    d27d:	48 83 e8 01          	sub    $0x1,%rax
    d281:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d285:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d28a:	74 15                	je     d2a1 <sgx_is_outside_enclave+0x63>
    d28c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d290:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d294:	48 01 d0             	add    %rdx,%rax
    d297:	48 83 e8 01          	sub    $0x1,%rax
    d29b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d29f:	eb 08                	jmp    d2a9 <sgx_is_outside_enclave+0x6b>
    d2a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2a5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d2a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2ad:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d2b1:	77 1b                	ja     d2ce <sgx_is_outside_enclave+0x90>
    d2b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d2b7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2bb:	72 0a                	jb     d2c7 <sgx_is_outside_enclave+0x89>
    d2bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2c1:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    d2c5:	76 07                	jbe    d2ce <sgx_is_outside_enclave+0x90>
    d2c7:	b8 01 00 00 00       	mov    $0x1,%eax
    d2cc:	eb 05                	jmp    d2d3 <sgx_is_outside_enclave+0x95>
    d2ce:	b8 00 00 00 00       	mov    $0x0,%eax
    d2d3:	5d                   	pop    %rbp
    d2d4:	c3                   	ret    

000000000000d2d5 <sgx_ocalloc>:
    d2d5:	f3 0f 1e fa          	endbr64 
    d2d9:	55                   	push   %rbp
    d2da:	48 89 e5             	mov    %rsp,%rbp
    d2dd:	48 83 ec 40          	sub    $0x40,%rsp
    d2e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d2e5:	e8 9c 1e 02 00       	call   2f186 <get_thread_data>
    d2ea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d2ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d2f2:	48 8b 40 20          	mov    0x20(%rax),%rax
    d2f6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d2fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d2fe:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    d305:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d30d:	be 08 00 00 00       	mov    $0x8,%esi
    d312:	48 89 c7             	mov    %rax,%rdi
    d315:	e8 24 ff ff ff       	call   d23e <sgx_is_outside_enclave>
    d31a:	85 c0                	test   %eax,%eax
    d31c:	0f 94 c0             	sete   %al
    d31f:	84 c0                	test   %al,%al
    d321:	74 05                	je     d328 <sgx_ocalloc+0x53>
    d323:	e8 03 22 02 00       	call   2f52b <abort>
    d328:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d32c:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    d330:	73 05                	jae    d337 <sgx_ocalloc+0x62>
    d332:	e8 f4 21 02 00       	call   2f52b <abort>
    d337:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d33b:	48 29 45 e8          	sub    %rax,-0x18(%rbp)
    d33f:	48 83 65 e8 f0       	andq   $0xfffffffffffffff0,-0x18(%rbp)
    d344:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d348:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d34c:	48 89 d6             	mov    %rdx,%rsi
    d34f:	48 89 c7             	mov    %rax,%rdi
    d352:	e8 e7 fe ff ff       	call   d23e <sgx_is_outside_enclave>
    d357:	85 c0                	test   %eax,%eax
    d359:	0f 94 c0             	sete   %al
    d35c:	84 c0                	test   %al,%al
    d35e:	74 05                	je     d365 <sgx_ocalloc+0x90>
    d360:	e8 c6 21 02 00       	call   2f52b <abort>
    d365:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d369:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    d370:	48 83 e8 01          	sub    $0x1,%rax
    d374:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    d37a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d37e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d382:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    d388:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d38c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d391:	75 05                	jne    d398 <sgx_ocalloc+0xc3>
    d393:	e8 93 21 02 00       	call   2f52b <abort>
    d398:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d39c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d3a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3a4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d3a8:	0f 96 c0             	setbe  %al
    d3ab:	84 c0                	test   %al,%al
    d3ad:	74 26                	je     d3d5 <sgx_ocalloc+0x100>
    d3af:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d3b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d3b7:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    d3be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3c2:	c6 00 00             	movb   $0x0,(%rax)
    d3c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3c9:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    d3cf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d3d3:	eb cb                	jmp    d3a0 <sgx_ocalloc+0xcb>
    d3d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d3d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d3dd:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    d3e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3e8:	c9                   	leave  
    d3e9:	c3                   	ret    

000000000000d3ea <sgx_ocfree>:
    d3ea:	f3 0f 1e fa          	endbr64 
    d3ee:	55                   	push   %rbp
    d3ef:	48 89 e5             	mov    %rsp,%rbp
    d3f2:	48 83 ec 20          	sub    $0x20,%rsp
    d3f6:	e8 8b 1d 02 00       	call   2f186 <get_thread_data>
    d3fb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d3ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d403:	48 8b 40 20          	mov    0x20(%rax),%rax
    d407:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d40b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d40f:	48 8b 40 08          	mov    0x8(%rax),%rax
    d413:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d41b:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    d41f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d427:	be 08 00 00 00       	mov    $0x8,%esi
    d42c:	48 89 c7             	mov    %rax,%rdi
    d42f:	e8 0a fe ff ff       	call   d23e <sgx_is_outside_enclave>
    d434:	85 c0                	test   %eax,%eax
    d436:	0f 94 c0             	sete   %al
    d439:	84 c0                	test   %al,%al
    d43b:	74 05                	je     d442 <sgx_ocfree+0x58>
    d43d:	e8 e9 20 02 00       	call   2f52b <abort>
    d442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d446:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d44a:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    d451:	90                   	nop
    d452:	c9                   	leave  
    d453:	c3                   	ret    

000000000000d454 <_ZL15__do_get_rand32Pj>:
    d454:	f3 0f 1e fa          	endbr64 
    d458:	55                   	push   %rbp
    d459:	48 89 e5             	mov    %rsp,%rbp
    d45c:	48 83 ec 10          	sub    $0x10,%rsp
    d460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d468:	48 89 c7             	mov    %rax,%rdi
    d46b:	e8 98 20 02 00       	call   2f508 <do_rdrand>
    d470:	85 c0                	test   %eax,%eax
    d472:	0f 94 c0             	sete   %al
    d475:	84 c0                	test   %al,%al
    d477:	74 07                	je     d480 <_ZL15__do_get_rand32Pj+0x2c>
    d479:	b8 01 00 00 00       	mov    $0x1,%eax
    d47e:	eb 05                	jmp    d485 <_ZL15__do_get_rand32Pj+0x31>
    d480:	b8 00 00 00 00       	mov    $0x0,%eax
    d485:	c9                   	leave  
    d486:	c3                   	ret    

000000000000d487 <sgx_read_rand>:
    d487:	f3 0f 1e fa          	endbr64 
    d48b:	55                   	push   %rbp
    d48c:	48 89 e5             	mov    %rsp,%rbp
    d48f:	48 83 ec 30          	sub    $0x30,%rsp
    d493:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d497:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d49b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d4a2:	00 00 
    d4a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d4a8:	31 c0                	xor    %eax,%eax
    d4aa:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d4af:	74 07                	je     d4b8 <sgx_read_rand+0x31>
    d4b1:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d4b6:	75 0a                	jne    d4c2 <sgx_read_rand+0x3b>
    d4b8:	b8 02 00 00 00       	mov    $0x2,%eax
    d4bd:	e9 cc 00 00 00       	jmp    d58e <sgx_read_rand+0x107>
    d4c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d4c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4ca:	48 89 d6             	mov    %rdx,%rsi
    d4cd:	48 89 c7             	mov    %rax,%rdi
    d4d0:	e8 d2 fc ff ff       	call   d1a7 <sgx_is_within_enclave>
    d4d5:	85 c0                	test   %eax,%eax
    d4d7:	75 1e                	jne    d4f7 <sgx_read_rand+0x70>
    d4d9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d4dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4e1:	48 89 d6             	mov    %rdx,%rsi
    d4e4:	48 89 c7             	mov    %rax,%rdi
    d4e7:	e8 52 fd ff ff       	call   d23e <sgx_is_outside_enclave>
    d4ec:	85 c0                	test   %eax,%eax
    d4ee:	75 07                	jne    d4f7 <sgx_read_rand+0x70>
    d4f0:	b8 01 00 00 00       	mov    $0x1,%eax
    d4f5:	eb 05                	jmp    d4fc <sgx_read_rand+0x75>
    d4f7:	b8 00 00 00 00       	mov    $0x0,%eax
    d4fc:	84 c0                	test   %al,%al
    d4fe:	74 0a                	je     d50a <sgx_read_rand+0x83>
    d500:	b8 02 00 00 00       	mov    $0x2,%eax
    d505:	e9 84 00 00 00       	jmp    d58e <sgx_read_rand+0x107>
    d50a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    d511:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d516:	74 56                	je     d56e <sgx_read_rand+0xe7>
    d518:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d51c:	48 89 c7             	mov    %rax,%rdi
    d51f:	e8 30 ff ff ff       	call   d454 <_ZL15__do_get_rand32Pj>
    d524:	89 45 ec             	mov    %eax,-0x14(%rbp)
    d527:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    d52b:	74 05                	je     d532 <sgx_read_rand+0xab>
    d52d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d530:	eb 5c                	jmp    d58e <sgx_read_rand+0x107>
    d532:	b8 04 00 00 00       	mov    $0x4,%eax
    d537:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
    d53c:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
    d541:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d545:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d549:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    d54d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d551:	48 89 ce             	mov    %rcx,%rsi
    d554:	48 89 c7             	mov    %rax,%rdi
    d557:	e8 23 39 01 00       	call   20e7f <memcpy>
    d55c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d560:	48 01 45 d8          	add    %rax,-0x28(%rbp)
    d564:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d568:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
    d56c:	eb a3                	jmp    d511 <sgx_read_rand+0x8a>
    d56e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d572:	b9 04 00 00 00       	mov    $0x4,%ecx
    d577:	ba 00 00 00 00       	mov    $0x0,%edx
    d57c:	be 04 00 00 00       	mov    $0x4,%esi
    d581:	48 89 c7             	mov    %rax,%rdi
    d584:	e8 b8 3b 01 00       	call   21141 <memset_s>
    d589:	b8 00 00 00 00       	mov    $0x0,%eax
    d58e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d592:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    d599:	00 00 
    d59b:	74 05                	je     d5a2 <sgx_read_rand+0x11b>
    d59d:	e8 e5 3c 01 00       	call   21287 <__stack_chk_fail>
    d5a2:	c9                   	leave  
    d5a3:	c3                   	ret    

000000000000d5a4 <check_static_stack_canary>:
    d5a4:	f3 0f 1e fa          	endbr64 
    d5a8:	55                   	push   %rbp
    d5a9:	48 89 e5             	mov    %rsp,%rbp
    d5ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d5b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5b4:	48 2d f8 03 01 00    	sub    $0x103f8,%rax
    d5ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d5be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c2:	48 8b 10             	mov    (%rax),%rdx
    d5c5:	48 8d 05 44 a8 02 00 	lea    0x2a844(%rip),%rax        # 37e10 <__intel_security_cookie>
    d5cc:	48 8b 00             	mov    (%rax),%rax
    d5cf:	48 39 c2             	cmp    %rax,%rdx
    d5d2:	74 07                	je     d5db <check_static_stack_canary+0x37>
    d5d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d5d9:	eb 05                	jmp    d5e0 <check_static_stack_canary+0x3c>
    d5db:	b8 00 00 00 00       	mov    $0x0,%eax
    d5e0:	5d                   	pop    %rbp
    d5e1:	c3                   	ret    

000000000000d5e2 <sgx_rdpkru>:
    d5e2:	f3 0f 1e fa          	endbr64 
    d5e6:	55                   	push   %rbp
    d5e7:	48 89 e5             	mov    %rsp,%rbp
    d5ea:	48 83 ec 20          	sub    $0x20,%rsp
    d5ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d5f2:	e8 91 1f 00 00       	call   f588 <is_pkru_enabled>
    d5f7:	83 f0 01             	xor    $0x1,%eax
    d5fa:	84 c0                	test   %al,%al
    d5fc:	74 07                	je     d605 <sgx_rdpkru+0x23>
    d5fe:	b8 00 00 00 00       	mov    $0x0,%eax
    d603:	eb 23                	jmp    d628 <sgx_rdpkru+0x46>
    d605:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    d60c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    d60f:	89 c1                	mov    %eax,%ecx
    d611:	0f 01 ee             	rdpkru 
    d614:	89 45 f8             	mov    %eax,-0x8(%rbp)
    d617:	89 55 fc             	mov    %edx,-0x4(%rbp)
    d61a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d61e:	8b 55 f8             	mov    -0x8(%rbp),%edx
    d621:	89 10                	mov    %edx,(%rax)
    d623:	b8 01 00 00 00       	mov    $0x1,%eax
    d628:	c9                   	leave  
    d629:	c3                   	ret    

000000000000d62a <sgx_wrpkru>:
    d62a:	f3 0f 1e fa          	endbr64 
    d62e:	55                   	push   %rbp
    d62f:	48 89 e5             	mov    %rsp,%rbp
    d632:	48 83 ec 20          	sub    $0x20,%rsp
    d636:	89 7d ec             	mov    %edi,-0x14(%rbp)
    d639:	e8 4a 1f 00 00       	call   f588 <is_pkru_enabled>
    d63e:	83 f0 01             	xor    $0x1,%eax
    d641:	84 c0                	test   %al,%al
    d643:	74 07                	je     d64c <sgx_wrpkru+0x22>
    d645:	b8 00 00 00 00       	mov    $0x0,%eax
    d64a:	eb 1f                	jmp    d66b <sgx_wrpkru+0x41>
    d64c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    d653:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    d65a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d65d:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    d660:	8b 55 fc             	mov    -0x4(%rbp),%edx
    d663:	0f 01 ef             	wrpkru 
    d666:	b8 01 00 00 00       	mov    $0x1,%eax
    d66b:	c9                   	leave  
    d66c:	c3                   	ret    

000000000000d66d <memcpy_s>:
    d66d:	55                   	push   %rbp
    d66e:	48 89 e5             	mov    %rsp,%rbp
    d671:	48 83 ec 20          	sub    $0x20,%rsp
    d675:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d679:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d67d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d681:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    d685:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d689:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d68d:	73 07                	jae    d696 <memcpy_s+0x29>
    d68f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d694:	eb 1c                	jmp    d6b2 <memcpy_s+0x45>
    d696:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d69a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d69e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6a2:	48 89 ce             	mov    %rcx,%rsi
    d6a5:	48 89 c7             	mov    %rax,%rdi
    d6a8:	e8 d2 37 01 00       	call   20e7f <memcpy>
    d6ad:	b8 00 00 00 00       	mov    $0x0,%eax
    d6b2:	c9                   	leave  
    d6b3:	c3                   	ret    

000000000000d6b4 <_Z24get_dynamic_layout_by_idt>:
    d6b4:	f3 0f 1e fa          	endbr64 
    d6b8:	55                   	push   %rbp
    d6b9:	48 89 e5             	mov    %rsp,%rbp
    d6bc:	89 f8                	mov    %edi,%eax
    d6be:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    d6c2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    d6c9:	48 8d 05 70 48 02 00 	lea    0x24870(%rip),%rax        # 31f40 <g_global_data>
    d6d0:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    d6d6:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    d6d9:	0f 92 c0             	setb   %al
    d6dc:	84 c0                	test   %al,%al
    d6de:	74 43                	je     d723 <_Z24get_dynamic_layout_by_idt+0x6f>
    d6e0:	48 8d 05 59 48 02 00 	lea    0x24859(%rip),%rax        # 31f40 <g_global_data>
    d6e7:	8b 55 fc             	mov    -0x4(%rbp),%edx
    d6ea:	48 83 c2 0a          	add    $0xa,%rdx
    d6ee:	48 c1 e2 05          	shl    $0x5,%rdx
    d6f2:	48 01 d0             	add    %rdx,%rax
    d6f5:	0f b7 00             	movzwl (%rax),%eax
    d6f8:	66 39 45 ec          	cmp    %ax,-0x14(%rbp)
    d6fc:	0f 94 c0             	sete   %al
    d6ff:	84 c0                	test   %al,%al
    d701:	74 1a                	je     d71d <_Z24get_dynamic_layout_by_idt+0x69>
    d703:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d706:	48 83 c0 0a          	add    $0xa,%rax
    d70a:	48 c1 e0 05          	shl    $0x5,%rax
    d70e:	48 89 c2             	mov    %rax,%rdx
    d711:	48 8d 05 28 48 02 00 	lea    0x24828(%rip),%rax        # 31f40 <g_global_data>
    d718:	48 01 d0             	add    %rdx,%rax
    d71b:	eb 0b                	jmp    d728 <_Z24get_dynamic_layout_by_idt+0x74>
    d71d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    d721:	eb a6                	jmp    d6c9 <_Z24get_dynamic_layout_by_idt+0x15>
    d723:	b8 00 00 00 00       	mov    $0x0,%eax
    d728:	5d                   	pop    %rbp
    d729:	c3                   	ret    

000000000000d72a <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>:
    d72a:	f3 0f 1e fa          	endbr64 
    d72e:	55                   	push   %rbp
    d72f:	48 89 e5             	mov    %rsp,%rbp
    d732:	53                   	push   %rbx
    d733:	48 83 ec 38          	sub    $0x38,%rsp
    d737:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d73b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d73f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d743:	e8 b7 19 00 00       	call   f0ff <get_heap_base>
    d748:	48 89 c3             	mov    %rax,%rbx
    d74b:	e8 65 1a 00 00       	call   f1b5 <get_heap_min_size>
    d750:	48 01 d8             	add    %rbx,%rax
    d753:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d757:	e8 c3 19 00 00       	call   f11f <get_heap_size>
    d75c:	48 89 c3             	mov    %rax,%rbx
    d75f:	e8 51 1a 00 00       	call   f1b5 <get_heap_min_size>
    d764:	48 29 c3             	sub    %rax,%rbx
    d767:	48 89 d8             	mov    %rbx,%rax
    d76a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d76e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d772:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    d776:	77 46                	ja     d7be <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x94>
    d778:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d77c:	48 c1 e0 0c          	shl    $0xc,%rax
    d780:	48 89 c2             	mov    %rax,%rdx
    d783:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d787:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d78b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d78f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d793:	48 01 d0             	add    %rdx,%rax
    d796:	48 39 c1             	cmp    %rax,%rcx
    d799:	77 23                	ja     d7be <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x94>
    d79b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d7a0:	74 15                	je     d7b7 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x8d>
    d7a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d7a6:	48 c7 00 03 02 00 00 	movq   $0x203,(%rax)
    d7ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d7b1:	66 c7 40 08 08 00    	movw   $0x8,0x8(%rax)
    d7b7:	b8 00 00 00 00       	mov    $0x0,%eax
    d7bc:	eb 05                	jmp    d7c3 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x99>
    d7be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d7c3:	48 83 c4 38          	add    $0x38,%rsp
    d7c7:	5b                   	pop    %rbx
    d7c8:	5d                   	pop    %rbp
    d7c9:	c3                   	ret    

000000000000d7ca <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes>:
    d7ca:	f3 0f 1e fa          	endbr64 
    d7ce:	55                   	push   %rbp
    d7cf:	48 89 e5             	mov    %rsp,%rbp
    d7d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d7d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d7da:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d7de:	48 8d 05 53 a6 02 00 	lea    0x2a653(%rip),%rax        # 37e38 <rsrv_mem_base>
    d7e5:	48 8b 00             	mov    (%rax),%rax
    d7e8:	48 89 c2             	mov    %rax,%rdx
    d7eb:	48 8d 05 56 a6 02 00 	lea    0x2a656(%rip),%rax        # 37e48 <rsrv_mem_min_size>
    d7f2:	48 8b 00             	mov    (%rax),%rax
    d7f5:	48 01 d0             	add    %rdx,%rax
    d7f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d7fc:	48 8d 05 3d a6 02 00 	lea    0x2a63d(%rip),%rax        # 37e40 <rsrv_mem_size>
    d803:	48 8b 10             	mov    (%rax),%rdx
    d806:	48 8d 05 3b a6 02 00 	lea    0x2a63b(%rip),%rax        # 37e48 <rsrv_mem_min_size>
    d80d:	48 8b 00             	mov    (%rax),%rax
    d810:	48 29 c2             	sub    %rax,%rdx
    d813:	48 89 d0             	mov    %rdx,%rax
    d816:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d81a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d81e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d822:	77 46                	ja     d86a <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa0>
    d824:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d828:	48 c1 e0 0c          	shl    $0xc,%rax
    d82c:	48 89 c2             	mov    %rax,%rdx
    d82f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d833:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d837:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d83b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d83f:	48 01 d0             	add    %rdx,%rax
    d842:	48 39 c1             	cmp    %rax,%rcx
    d845:	77 23                	ja     d86a <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa0>
    d847:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d84c:	74 15                	je     d863 <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0x99>
    d84e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d852:	48 c7 00 03 02 00 00 	movq   $0x203,(%rax)
    d859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d85d:	66 c7 40 08 08 00    	movw   $0x8,0x8(%rax)
    d863:	b8 00 00 00 00       	mov    $0x0,%eax
    d868:	eb 05                	jmp    d86f <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes+0xa5>
    d86a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d86f:	5d                   	pop    %rbp
    d870:	c3                   	ret    

000000000000d871 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>:
    d871:	f3 0f 1e fa          	endbr64 
    d875:	55                   	push   %rbp
    d876:	48 89 e5             	mov    %rsp,%rbp
    d879:	48 83 ec 50          	sub    $0x50,%rsp
    d87d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d881:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d885:	89 d0                	mov    %edx,%eax
    d887:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    d88b:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    d88f:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
    d893:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    d89a:	00 
    d89b:	66 83 7d cc 00       	cmpw   $0x0,-0x34(%rbp)
    d8a0:	74 1d                	je     d8bf <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4e>
    d8a2:	66 83 7d cc 12       	cmpw   $0x12,-0x34(%rbp)
    d8a7:	77 16                	ja     d8bf <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4e>
    d8a9:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax
    d8ad:	89 c7                	mov    %eax,%edi
    d8af:	e8 00 fe ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    d8b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d8b8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d8bd:	75 07                	jne    d8c6 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x55>
    d8bf:	b8 01 00 00 00       	mov    $0x1,%eax
    d8c4:	eb 05                	jmp    d8cb <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x5a>
    d8c6:	b8 00 00 00 00       	mov    $0x0,%eax
    d8cb:	84 c0                	test   %al,%al
    d8cd:	74 0a                	je     d8d9 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x68>
    d8cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d8d4:	e9 8c 00 00 00       	jmp    d965 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf4>
    d8d9:	e8 5d 18 02 00       	call   2f13b <get_enclave_base>
    d8de:	48 89 c2             	mov    %rax,%rdx
    d8e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d8e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    d8e9:	48 01 c2             	add    %rax,%rdx
    d8ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d8f0:	48 01 d0             	add    %rdx,%rax
    d8f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d8f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d8fb:	8b 40 04             	mov    0x4(%rax),%eax
    d8fe:	89 45 ec             	mov    %eax,-0x14(%rbp)
    d901:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d905:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d909:	77 55                	ja     d960 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xef>
    d90b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d90f:	48 c1 e0 0c          	shl    $0xc,%rax
    d913:	48 89 c2             	mov    %rax,%rdx
    d916:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d91a:	48 01 c2             	add    %rax,%rdx
    d91d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d920:	48 c1 e0 0c          	shl    $0xc,%rax
    d924:	48 89 c1             	mov    %rax,%rcx
    d927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d92b:	48 01 c8             	add    %rcx,%rax
    d92e:	48 39 c2             	cmp    %rax,%rdx
    d931:	77 2d                	ja     d960 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xef>
    d933:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    d938:	74 1f                	je     d959 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xe8>
    d93a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d93e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d942:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d946:	48 89 10             	mov    %rdx,(%rax)
    d949:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d94d:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    d951:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d955:	66 89 50 08          	mov    %dx,0x8(%rax)
    d959:	b8 00 00 00 00       	mov    $0x0,%eax
    d95e:	eb 05                	jmp    d965 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf4>
    d960:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d965:	c9                   	leave  
    d966:	c3                   	ret    

000000000000d967 <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>:
    d967:	f3 0f 1e fa          	endbr64 
    d96b:	55                   	push   %rbp
    d96c:	48 89 e5             	mov    %rsp,%rbp
    d96f:	48 83 ec 20          	sub    $0x20,%rsp
    d973:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d977:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d97b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d97f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d983:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    d987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d98b:	49 89 d0             	mov    %rdx,%r8
    d98e:	b9 00 00 00 00       	mov    $0x0,%ecx
    d993:	ba 07 00 00 00       	mov    $0x7,%edx
    d998:	48 89 c7             	mov    %rax,%rdi
    d99b:	e8 d1 fe ff ff       	call   d871 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    d9a0:	c9                   	leave  
    d9a1:	c3                   	ret    

000000000000d9a2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    d9a2:	f3 0f 1e fa          	endbr64 
    d9a6:	55                   	push   %rbp
    d9a7:	48 89 e5             	mov    %rsp,%rbp
    d9aa:	48 83 ec 30          	sub    $0x30,%rsp
    d9ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9b2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d9b6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d9ba:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d9be:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    d9c5:	00 
    d9c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d9ca:	48 c1 e0 0c          	shl    $0xc,%rax
    d9ce:	48 f7 d0             	not    %rax
    d9d1:	48 89 c2             	mov    %rax,%rdx
    d9d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9d8:	48 39 c2             	cmp    %rax,%rdx
    d9db:	73 0a                	jae    d9e7 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x45>
    d9dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d9e2:	e9 99 01 00 00       	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    d9e7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d9eb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d9ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9f3:	48 89 ce             	mov    %rcx,%rsi
    d9f6:	48 89 c7             	mov    %rax,%rdi
    d9f9:	e8 2c fd ff ff       	call   d72a <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>
    d9fe:	85 c0                	test   %eax,%eax
    da00:	0f 94 c0             	sete   %al
    da03:	84 c0                	test   %al,%al
    da05:	74 0a                	je     da11 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x6f>
    da07:	b8 00 00 00 00       	mov    $0x0,%eax
    da0c:	e9 6f 01 00 00       	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    da11:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    da15:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    da19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da1d:	48 89 ce             	mov    %rcx,%rsi
    da20:	48 89 c7             	mov    %rax,%rdi
    da23:	e8 3f ff ff ff       	call   d967 <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>
    da28:	85 c0                	test   %eax,%eax
    da2a:	0f 94 c0             	sete   %al
    da2d:	84 c0                	test   %al,%al
    da2f:	74 0a                	je     da3b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x99>
    da31:	b8 00 00 00 00       	mov    $0x0,%eax
    da36:	e9 45 01 00 00       	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    da3b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    da3f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    da43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da47:	48 89 ce             	mov    %rcx,%rsi
    da4a:	48 89 c7             	mov    %rax,%rdi
    da4d:	e8 78 fd ff ff       	call   d7ca <_ZL20check_rsrv_dyn_rangePvmP24dynamic_flags_attributes>
    da52:	85 c0                	test   %eax,%eax
    da54:	0f 94 c0             	sete   %al
    da57:	84 c0                	test   %al,%al
    da59:	74 0a                	je     da65 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xc3>
    da5b:	b8 00 00 00 00       	mov    $0x0,%eax
    da60:	e9 1b 01 00 00       	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    da65:	bf 13 10 00 00       	mov    $0x1013,%edi
    da6a:	e8 45 fc ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    da6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    da73:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    da78:	0f 95 c0             	setne  %al
    da7b:	84 c0                	test   %al,%al
    da7d:	0f 84 9c 00 00 00    	je     db1f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x17d>
    da83:	66 c7 45 f0 0e 00    	movw   $0xe,-0x10(%rbp)
    da89:	66 83 7d f0 12       	cmpw   $0x12,-0x10(%rbp)
    da8e:	0f 87 e7 00 00 00    	ja     db7b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1d9>
    da94:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    da9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da9f:	8b 40 04             	mov    0x4(%rax),%eax
    daa2:	83 c0 01             	add    $0x1,%eax
    daa5:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    daa8:	0f 92 c0             	setb   %al
    daab:	84 c0                	test   %al,%al
    daad:	74 60                	je     db0f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x16d>
    daaf:	8b 55 f4             	mov    -0xc(%rbp),%edx
    dab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab6:	48 8b 40 08          	mov    0x8(%rax),%rax
    daba:	48 89 d1             	mov    %rdx,%rcx
    dabd:	48 0f af c8          	imul   %rax,%rcx
    dac1:	0f b7 55 f0          	movzwl -0x10(%rbp),%edx
    dac5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    dac9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dacd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad1:	49 89 f8             	mov    %rdi,%r8
    dad4:	48 89 c7             	mov    %rax,%rdi
    dad7:	e8 95 fd ff ff       	call   d871 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    dadc:	85 c0                	test   %eax,%eax
    dade:	0f 94 c0             	sete   %al
    dae1:	84 c0                	test   %al,%al
    dae3:	74 24                	je     db09 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x167>
    dae5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    daea:	74 16                	je     db02 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x160>
    daec:	8b 55 f4             	mov    -0xc(%rbp),%edx
    daef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf3:	48 8b 40 08          	mov    0x8(%rax),%rax
    daf7:	48 0f af d0          	imul   %rax,%rdx
    dafb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    daff:	48 89 10             	mov    %rdx,(%rax)
    db02:	b8 00 00 00 00       	mov    $0x0,%eax
    db07:	eb 77                	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    db09:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    db0d:	eb 8c                	jmp    da9b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xf9>
    db0f:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
    db13:	83 c0 01             	add    $0x1,%eax
    db16:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
    db1a:	e9 6a ff ff ff       	jmp    da89 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xe7>
    db1f:	66 c7 45 f2 0e 00    	movw   $0xe,-0xe(%rbp)
    db25:	66 83 7d f2 12       	cmpw   $0x12,-0xe(%rbp)
    db2a:	77 4f                	ja     db7b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1d9>
    db2c:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
    db30:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    db34:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    db38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db3c:	49 89 c8             	mov    %rcx,%r8
    db3f:	b9 00 00 00 00       	mov    $0x0,%ecx
    db44:	48 89 c7             	mov    %rax,%rdi
    db47:	e8 25 fd ff ff       	call   d871 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    db4c:	85 c0                	test   %eax,%eax
    db4e:	0f 94 c0             	sete   %al
    db51:	84 c0                	test   %al,%al
    db53:	74 19                	je     db6e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1cc>
    db55:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    db5a:	74 0b                	je     db67 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c5>
    db5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db60:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    db67:	b8 00 00 00 00       	mov    $0x0,%eax
    db6c:	eb 12                	jmp    db80 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1de>
    db6e:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
    db72:	83 c0 01             	add    $0x1,%eax
    db75:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
    db79:	eb aa                	jmp    db25 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x183>
    db7b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    db80:	c9                   	leave  
    db81:	c3                   	ret    

000000000000db82 <is_dynamic_thread>:
    db82:	f3 0f 1e fa          	endbr64 
    db86:	55                   	push   %rbp
    db87:	48 89 e5             	mov    %rsp,%rbp
    db8a:	48 83 ec 30          	sub    $0x30,%rsp
    db8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    db92:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    db99:	00 00 
    db9b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    db9f:	31 c0                	xor    %eax,%eax
    dba1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    dba6:	74 34                	je     dbdc <is_dynamic_thread+0x5a>
    dba8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    dbac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbb0:	48 89 d1             	mov    %rdx,%rcx
    dbb3:	ba 00 00 00 00       	mov    $0x0,%edx
    dbb8:	be 01 00 00 00       	mov    $0x1,%esi
    dbbd:	48 89 c7             	mov    %rax,%rdi
    dbc0:	e8 dd fd ff ff       	call   d9a2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    dbc5:	85 c0                	test   %eax,%eax
    dbc7:	75 13                	jne    dbdc <is_dynamic_thread+0x5a>
    dbc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dbcd:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    dbd3:	75 07                	jne    dbdc <is_dynamic_thread+0x5a>
    dbd5:	b8 01 00 00 00       	mov    $0x1,%eax
    dbda:	eb 05                	jmp    dbe1 <is_dynamic_thread+0x5f>
    dbdc:	b8 00 00 00 00       	mov    $0x0,%eax
    dbe1:	84 c0                	test   %al,%al
    dbe3:	74 07                	je     dbec <is_dynamic_thread+0x6a>
    dbe5:	b8 01 00 00 00       	mov    $0x1,%eax
    dbea:	eb 05                	jmp    dbf1 <is_dynamic_thread+0x6f>
    dbec:	b8 00 00 00 00       	mov    $0x0,%eax
    dbf1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dbf5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    dbfc:	00 00 
    dbfe:	74 05                	je     dc05 <is_dynamic_thread+0x83>
    dc00:	e8 82 36 01 00       	call   21287 <__stack_chk_fail>
    dc05:	c9                   	leave  
    dc06:	c3                   	ret    

000000000000dc07 <is_dynamic_thread_exist>:
    dc07:	f3 0f 1e fa          	endbr64 
    dc0b:	55                   	push   %rbp
    dc0c:	48 89 e5             	mov    %rsp,%rbp
    dc0f:	48 83 ec 10          	sub    $0x10,%rsp
    dc13:	48 8d 05 d6 a1 02 00 	lea    0x2a1d6(%rip),%rax        # 37df0 <EDMM_supported>
    dc1a:	8b 00                	mov    (%rax),%eax
    dc1c:	85 c0                	test   %eax,%eax
    dc1e:	75 07                	jne    dc27 <is_dynamic_thread_exist+0x20>
    dc20:	b8 00 00 00 00       	mov    $0x0,%eax
    dc25:	eb 21                	jmp    dc48 <is_dynamic_thread_exist+0x41>
    dc27:	bf 12 00 00 00       	mov    $0x12,%edi
    dc2c:	e8 83 fa ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    dc31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dc35:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dc3a:	75 07                	jne    dc43 <is_dynamic_thread_exist+0x3c>
    dc3c:	b8 00 00 00 00       	mov    $0x0,%eax
    dc41:	eb 05                	jmp    dc48 <is_dynamic_thread_exist+0x41>
    dc43:	b8 01 00 00 00       	mov    $0x1,%eax
    dc48:	c9                   	leave  
    dc49:	c3                   	ret    

000000000000dc4a <get_dynamic_stack_max_page>:
    dc4a:	f3 0f 1e fa          	endbr64 
    dc4e:	55                   	push   %rbp
    dc4f:	48 89 e5             	mov    %rsp,%rbp
    dc52:	48 83 ec 10          	sub    $0x10,%rsp
    dc56:	bf 07 00 00 00       	mov    $0x7,%edi
    dc5b:	e8 54 fa ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    dc60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dc64:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dc69:	75 07                	jne    dc72 <get_dynamic_stack_max_page+0x28>
    dc6b:	b8 00 00 00 00       	mov    $0x0,%eax
    dc70:	eb 07                	jmp    dc79 <get_dynamic_stack_max_page+0x2f>
    dc72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc76:	8b 40 04             	mov    0x4(%rax),%eax
    dc79:	c9                   	leave  
    dc7a:	c3                   	ret    

000000000000dc7b <do_add_thread>:
    dc7b:	f3 0f 1e fa          	endbr64 
    dc7f:	55                   	push   %rbp
    dc80:	48 89 e5             	mov    %rsp,%rbp
    dc83:	48 83 ec 50          	sub    $0x50,%rsp
    dc87:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    dc8b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dc92:	00 00 
    dc94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dc98:	31 c0                	xor    %eax,%eax
    dc9a:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
    dca1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dca5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    dca9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    dcb0:	00 
    dcb1:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    dcb8:	00 
    dcb9:	e8 7d 14 02 00       	call   2f13b <get_enclave_base>
    dcbe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    dcc2:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    dcc6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dcca:	b9 00 00 00 00       	mov    $0x0,%ecx
    dccf:	be 01 00 00 00       	mov    $0x1,%esi
    dcd4:	48 89 c7             	mov    %rax,%rdi
    dcd7:	e8 c6 fc ff ff       	call   d9a2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    dcdc:	85 c0                	test   %eax,%eax
    dcde:	0f 95 c0             	setne  %al
    dce1:	84 c0                	test   %al,%al
    dce3:	74 0a                	je     dcef <do_add_thread+0x74>
    dce5:	b8 01 00 00 00       	mov    $0x1,%eax
    dcea:	e9 97 01 00 00       	jmp    de86 <do_add_thread+0x20b>
    dcef:	bf 0e 00 00 00       	mov    $0xe,%edi
    dcf4:	e8 bb f9 ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    dcf9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dcfd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    dd02:	75 0a                	jne    dd0e <do_add_thread+0x93>
    dd04:	b8 01 00 00 00       	mov    $0x1,%eax
    dd09:	e9 78 01 00 00       	jmp    de86 <do_add_thread+0x20b>
    dd0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd12:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dd16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd1a:	48 01 c2             	add    %rax,%rdx
    dd1d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dd21:	48 01 c2             	add    %rax,%rdx
    dd24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd28:	48 39 c2             	cmp    %rax,%rdx
    dd2b:	0f 95 c0             	setne  %al
    dd2e:	84 c0                	test   %al,%al
    dd30:	74 0a                	je     dd3c <do_add_thread+0xc1>
    dd32:	b8 01 00 00 00       	mov    $0x1,%eax
    dd37:	e9 4a 01 00 00       	jmp    de86 <do_add_thread+0x20b>
    dd3c:	66 c7 45 c2 0e 00    	movw   $0xe,-0x3e(%rbp)
    dd42:	66 83 7d c2 12       	cmpw   $0x12,-0x3e(%rbp)
    dd47:	0f 87 88 00 00 00    	ja     ddd5 <do_add_thread+0x15a>
    dd4d:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
    dd51:	89 c7                	mov    %eax,%edi
    dd53:	e8 5c f9 ff ff       	call   d6b4 <_Z24get_dynamic_layout_by_idt>
    dd58:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dd5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dd61:	74 19                	je     dd7c <do_add_thread+0x101>
    dd63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd67:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    dd6b:	0f b7 c0             	movzwl %ax,%eax
    dd6e:	83 e0 20             	and    $0x20,%eax
    dd71:	85 c0                	test   %eax,%eax
    dd73:	74 07                	je     dd7c <do_add_thread+0x101>
    dd75:	b8 01 00 00 00       	mov    $0x1,%eax
    dd7a:	eb 05                	jmp    dd81 <do_add_thread+0x106>
    dd7c:	b8 00 00 00 00       	mov    $0x0,%eax
    dd81:	84 c0                	test   %al,%al
    dd83:	74 40                	je     ddc5 <do_add_thread+0x14a>
    dd85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd89:	8b 40 04             	mov    0x4(%rax),%eax
    dd8c:	c1 e0 0c             	shl    $0xc,%eax
    dd8f:	89 c1                	mov    %eax,%ecx
    dd91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd95:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dd99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd9d:	48 01 c2             	add    %rax,%rdx
    dda0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dda4:	48 01 d0             	add    %rdx,%rax
    dda7:	48 89 ce             	mov    %rcx,%rsi
    ddaa:	48 89 c7             	mov    %rax,%rdi
    ddad:	e8 63 7e 00 00       	call   15c15 <mm_commit>
    ddb2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    ddb5:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    ddb9:	74 0a                	je     ddc5 <do_add_thread+0x14a>
    ddbb:	b8 01 00 00 00       	mov    $0x1,%eax
    ddc0:	e9 c1 00 00 00       	jmp    de86 <do_add_thread+0x20b>
    ddc5:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
    ddc9:	83 c0 01             	add    $0x1,%eax
    ddcc:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
    ddd0:	e9 6d ff ff ff       	jmp    dd42 <do_add_thread+0xc7>
    ddd5:	48 8d 05 64 41 02 00 	lea    0x24164(%rip),%rax        # 31f40 <g_global_data>
    dddc:	48 8d 80 f0 00 00 00 	lea    0xf0(%rax),%rax
    dde3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    dde7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ddeb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ddef:	b9 48 00 00 00       	mov    $0x48,%ecx
    ddf4:	be 00 10 00 00       	mov    $0x1000,%esi
    ddf9:	48 89 c7             	mov    %rax,%rdi
    ddfc:	e8 6c f8 ff ff       	call   d66d <memcpy_s>
    de01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de05:	48 8b 50 10          	mov    0x10(%rax),%rdx
    de09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de0d:	48 01 d0             	add    %rdx,%rax
    de10:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    de14:	48 89 c2             	mov    %rax,%rdx
    de17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de1b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    de1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de23:	48 8b 50 30          	mov    0x30(%rax),%rdx
    de27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de2b:	48 01 d0             	add    %rdx,%rax
    de2e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    de32:	48 89 c2             	mov    %rax,%rdx
    de35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de39:	48 89 50 30          	mov    %rdx,0x30(%rax)
    de3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de41:	48 8b 50 38          	mov    0x38(%rax),%rdx
    de45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de49:	48 01 d0             	add    %rdx,%rax
    de4c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    de50:	48 89 c2             	mov    %rax,%rdx
    de53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de57:	48 89 50 38          	mov    %rdx,0x38(%rax)
    de5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de5f:	ba 00 01 00 00       	mov    $0x100,%edx
    de64:	be 00 10 00 00       	mov    $0x1000,%esi
    de69:	48 89 c7             	mov    %rax,%rdi
    de6c:	e8 6f 7e 00 00       	call   15ce0 <mm_modify_type>
    de71:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    de74:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    de78:	74 07                	je     de81 <do_add_thread+0x206>
    de7a:	b8 01 00 00 00       	mov    $0x1,%eax
    de7f:	eb 05                	jmp    de86 <do_add_thread+0x20b>
    de81:	b8 00 00 00 00       	mov    $0x0,%eax
    de86:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    de8a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    de91:	00 00 
    de93:	74 05                	je     de9a <do_add_thread+0x21f>
    de95:	e8 ed 33 01 00       	call   21287 <__stack_chk_fail>
    de9a:	c9                   	leave  
    de9b:	c3                   	ret    

000000000000de9c <memcpy_s>:
    de9c:	55                   	push   %rbp
    de9d:	48 89 e5             	mov    %rsp,%rbp
    dea0:	48 83 ec 20          	sub    $0x20,%rsp
    dea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    deac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    deb0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    deb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    deb8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    debc:	73 07                	jae    dec5 <memcpy_s+0x29>
    debe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    dec3:	eb 1c                	jmp    dee1 <memcpy_s+0x45>
    dec5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dec9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    decd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ded1:	48 89 ce             	mov    %rcx,%rsi
    ded4:	48 89 c7             	mov    %rax,%rdi
    ded7:	e8 a3 2f 01 00       	call   20e7f <memcpy>
    dedc:	b8 00 00 00 00       	mov    $0x0,%eax
    dee1:	c9                   	leave  
    dee2:	c3                   	ret    

000000000000dee3 <_pthread_thread_run>:
    dee3:	f3 0f 1e fa          	endbr64 
    dee7:	55                   	push   %rbp
    dee8:	48 89 e5             	mov    %rsp,%rbp
    deeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deef:	b8 00 00 00 00       	mov    $0x0,%eax
    def4:	5d                   	pop    %rbp
    def5:	c3                   	ret    

000000000000def6 <_Z16_pthread_enabledv>:
    def6:	f3 0f 1e fa          	endbr64 
    defa:	55                   	push   %rbp
    defb:	48 89 e5             	mov    %rsp,%rbp
    defe:	b8 00 00 00 00       	mov    $0x0,%eax
    df03:	5d                   	pop    %rbp
    df04:	c3                   	ret    

000000000000df05 <_Z24_pthread_tls_store_state9_status_t>:
    df05:	f3 0f 1e fa          	endbr64 
    df09:	55                   	push   %rbp
    df0a:	48 89 e5             	mov    %rsp,%rbp
    df0d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    df10:	90                   	nop
    df11:	5d                   	pop    %rbp
    df12:	c3                   	ret    

000000000000df13 <_Z22_pthread_tls_get_statev>:
    df13:	f3 0f 1e fa          	endbr64 
    df17:	55                   	push   %rbp
    df18:	48 89 e5             	mov    %rsp,%rbp
    df1b:	b8 00 00 00 00       	mov    $0x0,%eax
    df20:	5d                   	pop    %rbp
    df21:	c3                   	ret    

000000000000df22 <_Z26_pthread_tls_store_contextPv>:
    df22:	f3 0f 1e fa          	endbr64 
    df26:	55                   	push   %rbp
    df27:	48 89 e5             	mov    %rsp,%rbp
    df2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df2e:	90                   	nop
    df2f:	5d                   	pop    %rbp
    df30:	c3                   	ret    

000000000000df31 <_Z20_pthread_wakeup_joinPv>:
    df31:	f3 0f 1e fa          	endbr64 
    df35:	55                   	push   %rbp
    df36:	48 89 e5             	mov    %rsp,%rbp
    df39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df3d:	90                   	nop
    df3e:	5d                   	pop    %rbp
    df3f:	c3                   	ret    

000000000000df40 <_Z24_pthread_tls_destructorsv>:
    df40:	f3 0f 1e fa          	endbr64 
    df44:	55                   	push   %rbp
    df45:	48 89 e5             	mov    %rsp,%rbp
    df48:	90                   	nop
    df49:	5d                   	pop    %rbp
    df4a:	c3                   	ret    

000000000000df4b <tc_set_idle>:
    df4b:	f3 0f 1e fa          	endbr64 
    df4f:	55                   	push   %rbp
    df50:	48 89 e5             	mov    %rsp,%rbp
    df53:	90                   	nop
    df54:	5d                   	pop    %rbp
    df55:	c3                   	ret    

000000000000df56 <_ZL16is_ecall_allowedj>:
    df56:	f3 0f 1e fa          	endbr64 
    df5a:	55                   	push   %rbp
    df5b:	48 89 e5             	mov    %rsp,%rbp
    df5e:	48 83 ec 30          	sub    $0x30,%rsp
    df62:	89 7d dc             	mov    %edi,-0x24(%rbp)
    df65:	8b 55 dc             	mov    -0x24(%rbp),%edx
    df68:	48 8d 05 31 9e 02 00 	lea    0x29e31(%rip),%rax        # 37da0 <g_ecall_table>
    df6f:	48 8b 00             	mov    (%rax),%rax
    df72:	48 39 c2             	cmp    %rax,%rdx
    df75:	72 0a                	jb     df81 <_ZL16is_ecall_allowedj+0x2b>
    df77:	b8 01 10 00 00       	mov    $0x1001,%eax
    df7c:	e9 c7 00 00 00       	jmp    e048 <_ZL16is_ecall_allowedj+0xf2>
    df81:	e8 00 12 02 00       	call   2f186 <get_thread_data>
    df86:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    df8a:	0f ae e8             	lfence 
    df8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df91:	48 8b 50 08          	mov    0x8(%rax),%rdx
    df95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df99:	48 8b 40 10          	mov    0x10(%rax),%rax
    df9d:	48 39 c2             	cmp    %rax,%rdx
    dfa0:	75 2d                	jne    dfcf <_ZL16is_ecall_allowedj+0x79>
    dfa2:	48 8d 05 f7 9d 02 00 	lea    0x29df7(%rip),%rax        # 37da0 <g_ecall_table>
    dfa9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dfac:	48 c1 e2 04          	shl    $0x4,%rdx
    dfb0:	48 01 d0             	add    %rdx,%rax
    dfb3:	48 83 c0 10          	add    $0x10,%rax
    dfb7:	0f b6 00             	movzbl (%rax),%eax
    dfba:	84 c0                	test   %al,%al
    dfbc:	74 0a                	je     dfc8 <_ZL16is_ecall_allowedj+0x72>
    dfbe:	b8 07 10 00 00       	mov    $0x1007,%eax
    dfc3:	e9 80 00 00 00       	jmp    e048 <_ZL16is_ecall_allowedj+0xf2>
    dfc8:	b8 00 00 00 00       	mov    $0x0,%eax
    dfcd:	eb 79                	jmp    e048 <_ZL16is_ecall_allowedj+0xf2>
    dfcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfd3:	48 8b 40 08          	mov    0x8(%rax),%rax
    dfd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dfdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dfdf:	48 8b 40 20          	mov    0x20(%rax),%rax
    dfe3:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    dfe9:	74 05                	je     dff0 <_ZL16is_ecall_allowedj+0x9a>
    dfeb:	e8 3b 15 02 00       	call   2f52b <abort>
    dff0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dff4:	48 8b 40 28          	mov    0x28(%rax),%rax
    dff8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dffc:	48 8d 05 fd 1f 02 00 	lea    0x21ffd(%rip),%rax        # 30000 <g_dyn_entry_table>
    e003:	48 8b 00             	mov    (%rax),%rax
    e006:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e00a:	72 07                	jb     e013 <_ZL16is_ecall_allowedj+0xbd>
    e00c:	b8 01 10 00 00       	mov    $0x1001,%eax
    e011:	eb 35                	jmp    e048 <_ZL16is_ecall_allowedj+0xf2>
    e013:	48 8d 05 86 9d 02 00 	lea    0x29d86(%rip),%rax        # 37da0 <g_ecall_table>
    e01a:	48 8b 00             	mov    (%rax),%rax
    e01d:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    e022:	48 89 c2             	mov    %rax,%rdx
    e025:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e028:	48 01 c2             	add    %rax,%rdx
    e02b:	48 8d 05 ce 1f 02 00 	lea    0x21fce(%rip),%rax        # 30000 <g_dyn_entry_table>
    e032:	0f b6 44 10 08       	movzbl 0x8(%rax,%rdx,1),%eax
    e037:	84 c0                	test   %al,%al
    e039:	74 07                	je     e042 <_ZL16is_ecall_allowedj+0xec>
    e03b:	b8 00 00 00 00       	mov    $0x0,%eax
    e040:	eb 05                	jmp    e047 <_ZL16is_ecall_allowedj+0xf1>
    e042:	b8 07 10 00 00       	mov    $0x1007,%eax
    e047:	90                   	nop
    e048:	c9                   	leave  
    e049:	c3                   	ret    

000000000000e04a <_ZL13get_func_addrjPPv>:
    e04a:	f3 0f 1e fa          	endbr64 
    e04e:	55                   	push   %rbp
    e04f:	48 89 e5             	mov    %rsp,%rbp
    e052:	48 83 ec 20          	sub    $0x20,%rsp
    e056:	89 7d ec             	mov    %edi,-0x14(%rbp)
    e059:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e05d:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
    e061:	75 15                	jne    e078 <_ZL13get_func_addrjPPv+0x2e>
    e063:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e067:	48 8d 15 75 fe ff ff 	lea    -0x18b(%rip),%rdx        # dee3 <_pthread_thread_run>
    e06e:	48 89 10             	mov    %rdx,(%rax)
    e071:	b8 00 00 00 00       	mov    $0x0,%eax
    e076:	eb 60                	jmp    e0d8 <_ZL13get_func_addrjPPv+0x8e>
    e078:	8b 45 ec             	mov    -0x14(%rbp),%eax
    e07b:	89 c7                	mov    %eax,%edi
    e07d:	e8 d4 fe ff ff       	call   df56 <_ZL16is_ecall_allowedj>
    e082:	89 45 fc             	mov    %eax,-0x4(%rbp)
    e085:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e089:	74 05                	je     e090 <_ZL13get_func_addrjPPv+0x46>
    e08b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e08e:	eb 48                	jmp    e0d8 <_ZL13get_func_addrjPPv+0x8e>
    e090:	48 8d 05 09 9d 02 00 	lea    0x29d09(%rip),%rax        # 37da0 <g_ecall_table>
    e097:	8b 55 ec             	mov    -0x14(%rbp),%edx
    e09a:	48 c1 e2 04          	shl    $0x4,%rdx
    e09e:	48 01 d0             	add    %rdx,%rax
    e0a1:	48 83 c0 08          	add    $0x8,%rax
    e0a5:	48 8b 10             	mov    (%rax),%rdx
    e0a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e0ac:	48 89 10             	mov    %rdx,(%rax)
    e0af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e0b3:	48 8b 00             	mov    (%rax),%rax
    e0b6:	be 00 00 00 00       	mov    $0x0,%esi
    e0bb:	48 89 c7             	mov    %rax,%rdi
    e0be:	e8 e4 f0 ff ff       	call   d1a7 <sgx_is_within_enclave>
    e0c3:	85 c0                	test   %eax,%eax
    e0c5:	0f 94 c0             	sete   %al
    e0c8:	84 c0                	test   %al,%al
    e0ca:	74 07                	je     e0d3 <_ZL13get_func_addrjPPv+0x89>
    e0cc:	b8 01 00 00 00       	mov    $0x1,%eax
    e0d1:	eb 05                	jmp    e0d8 <_ZL13get_func_addrjPPv+0x8e>
    e0d3:	b8 00 00 00 00       	mov    $0x0,%eax
    e0d8:	c9                   	leave  
    e0d9:	c3                   	ret    

000000000000e0da <_ZL11do_save_tcsPv>:
    e0da:	f3 0f 1e fa          	endbr64 
    e0de:	55                   	push   %rbp
    e0df:	48 89 e5             	mov    %rsp,%rbp
    e0e2:	48 83 ec 30          	sub    $0x30,%rsp
    e0e6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e0ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e0f1:	00 00 
    e0f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e0f7:	31 c0                	xor    %eax,%eax
    e0f9:	48 8b 05 28 d6 04 00 	mov    0x4d628(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    e100:	48 85 c0             	test   %rax,%rax
    e103:	0f 94 c0             	sete   %al
    e106:	0f b6 c0             	movzbl %al,%eax
    e109:	48 85 c0             	test   %rax,%rax
    e10c:	74 4b                	je     e159 <_ZL11do_save_tcsPv+0x7f>
    e10e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e115:	00 
    e116:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e11a:	be 08 00 00 00       	mov    $0x8,%esi
    e11f:	48 89 c7             	mov    %rax,%rdi
    e122:	e8 60 f3 ff ff       	call   d487 <sgx_read_rand>
    e127:	85 c0                	test   %eax,%eax
    e129:	0f 95 c0             	setne  %al
    e12c:	84 c0                	test   %al,%al
    e12e:	74 07                	je     e137 <_ZL11do_save_tcsPv+0x5d>
    e130:	b8 01 00 00 00       	mov    $0x1,%eax
    e135:	eb 72                	jmp    e1a9 <_ZL11do_save_tcsPv+0xcf>
    e137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e13b:	48 85 c0             	test   %rax,%rax
    e13e:	75 02                	jne    e142 <_ZL11do_save_tcsPv+0x68>
    e140:	eb d4                	jmp    e116 <_ZL11do_save_tcsPv+0x3c>
    e142:	48 8b 05 df d5 04 00 	mov    0x4d5df(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    e149:	48 85 c0             	test   %rax,%rax
    e14c:	75 0b                	jne    e159 <_ZL11do_save_tcsPv+0x7f>
    e14e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e152:	48 89 05 cf d5 04 00 	mov    %rax,0x4d5cf(%rip)        # 5b728 <_ZL12g_tcs_cookie>
    e159:	bf 10 00 00 00       	mov    $0x10,%edi
    e15e:	e8 54 f3 00 00       	call   1d4b7 <dlmalloc>
    e163:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e167:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e16c:	75 07                	jne    e175 <_ZL11do_save_tcsPv+0x9b>
    e16e:	b8 01 00 00 00       	mov    $0x1,%eax
    e173:	eb 34                	jmp    e1a9 <_ZL11do_save_tcsPv+0xcf>
    e175:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e179:	48 8b 05 a8 d5 04 00 	mov    0x4d5a8(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    e180:	48 31 c2             	xor    %rax,%rdx
    e183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e187:	48 89 10             	mov    %rdx,(%rax)
    e18a:	48 8b 15 8f d5 04 00 	mov    0x4d58f(%rip),%rdx        # 5b720 <_ZL10g_tcs_node>
    e191:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e195:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e199:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e19d:	48 89 05 7c d5 04 00 	mov    %rax,0x4d57c(%rip)        # 5b720 <_ZL10g_tcs_node>
    e1a4:	b8 00 00 00 00       	mov    $0x0,%eax
    e1a9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    e1ad:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e1b4:	00 00 
    e1b6:	74 05                	je     e1bd <_ZL11do_save_tcsPv+0xe3>
    e1b8:	e8 ca 30 01 00       	call   21287 <__stack_chk_fail>
    e1bd:	c9                   	leave  
    e1be:	c3                   	ret    

000000000000e1bf <_ZL10do_del_tcsPv>:
    e1bf:	f3 0f 1e fa          	endbr64 
    e1c3:	55                   	push   %rbp
    e1c4:	48 89 e5             	mov    %rsp,%rbp
    e1c7:	48 83 ec 30          	sub    $0x30,%rsp
    e1cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e1cf:	e8 4a 13 00 00       	call   f51e <is_utility_thread>
    e1d4:	83 f0 01             	xor    $0x1,%eax
    e1d7:	84 c0                	test   %al,%al
    e1d9:	0f 85 c1 00 00 00    	jne    e2a0 <_ZL10do_del_tcsPv+0xe1>
    e1df:	48 8b 05 3a d5 04 00 	mov    0x4d53a(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e1e6:	48 85 c0             	test   %rax,%rax
    e1e9:	0f 84 b2 00 00 00    	je     e2a1 <_ZL10do_del_tcsPv+0xe2>
    e1ef:	48 8b 05 2a d5 04 00 	mov    0x4d52a(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e1f6:	48 8b 10             	mov    (%rax),%rdx
    e1f9:	48 8b 05 28 d5 04 00 	mov    0x4d528(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    e200:	48 31 d0             	xor    %rdx,%rax
    e203:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    e207:	75 2b                	jne    e234 <_ZL10do_del_tcsPv+0x75>
    e209:	48 8b 05 10 d5 04 00 	mov    0x4d510(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e210:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e214:	48 8b 05 05 d5 04 00 	mov    0x4d505(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e21b:	48 8b 40 08          	mov    0x8(%rax),%rax
    e21f:	48 89 05 fa d4 04 00 	mov    %rax,0x4d4fa(%rip)        # 5b720 <_ZL10g_tcs_node>
    e226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e22a:	48 89 c7             	mov    %rax,%rdi
    e22d:	e8 80 fd 00 00       	call   1dfb2 <dlfree>
    e232:	eb 6d                	jmp    e2a1 <_ZL10do_del_tcsPv+0xe2>
    e234:	48 8b 05 e5 d4 04 00 	mov    0x4d4e5(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e23b:	48 8b 40 08          	mov    0x8(%rax),%rax
    e23f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e243:	48 8b 05 d6 d4 04 00 	mov    0x4d4d6(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    e24a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e24e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e253:	74 4c                	je     e2a1 <_ZL10do_del_tcsPv+0xe2>
    e255:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e259:	48 8b 10             	mov    (%rax),%rdx
    e25c:	48 8b 05 c5 d4 04 00 	mov    0x4d4c5(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    e263:	48 31 d0             	xor    %rdx,%rax
    e266:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    e26a:	75 1e                	jne    e28a <_ZL10do_del_tcsPv+0xcb>
    e26c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e270:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e278:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e27c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e280:	48 89 c7             	mov    %rax,%rdi
    e283:	e8 2a fd 00 00       	call   1dfb2 <dlfree>
    e288:	eb 17                	jmp    e2a1 <_ZL10do_del_tcsPv+0xe2>
    e28a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e28e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e292:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e296:	48 8b 40 08          	mov    0x8(%rax),%rax
    e29a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e29e:	eb ae                	jmp    e24e <_ZL10do_del_tcsPv+0x8f>
    e2a0:	90                   	nop
    e2a1:	c9                   	leave  
    e2a2:	c3                   	ret    

000000000000e2a3 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    e2a3:	f3 0f 1e fa          	endbr64 
    e2a7:	55                   	push   %rbp
    e2a8:	48 89 e5             	mov    %rsp,%rbp
    e2ab:	53                   	push   %rbx
    e2ac:	48 83 ec 48          	sub    $0x48,%rsp
    e2b0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e2b4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e2b8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e2bc:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
    e2c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e2c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e2cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2cf:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    e2d3:	0f 83 1a 01 00 00    	jae    e3f3 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x150>
    e2d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2dd:	0f b7 00             	movzwl (%rax),%eax
    e2e0:	0f b7 c0             	movzwl %ax,%eax
    e2e3:	25 00 10 00 00       	and    $0x1000,%eax
    e2e8:	85 c0                	test   %eax,%eax
    e2ea:	75 27                	jne    e313 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
    e2ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2f0:	48 8b 40 18          	mov    0x18(%rax),%rax
    e2f4:	25 00 01 00 00       	and    $0x100,%eax
    e2f9:	48 85 c0             	test   %rax,%rax
    e2fc:	74 15                	je     e313 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
    e2fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e302:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    e306:	66 83 f8 03          	cmp    $0x3,%ax
    e30a:	75 07                	jne    e313 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x70>
    e30c:	b8 01 00 00 00       	mov    $0x1,%eax
    e311:	eb 05                	jmp    e318 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x75>
    e313:	b8 00 00 00 00       	mov    $0x0,%eax
    e318:	84 c0                	test   %al,%al
    e31a:	74 3f                	je     e35b <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb8>
    e31c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e320:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e324:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e328:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    e32c:	e8 0a 0e 02 00       	call   2f13b <get_enclave_base>
    e331:	48 01 d8             	add    %rbx,%rax
    e334:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e33c:	48 89 c7             	mov    %rax,%rdi
    e33f:	e8 96 fd ff ff       	call   e0da <_ZL11do_save_tcsPv>
    e344:	85 c0                	test   %eax,%eax
    e346:	0f 95 c0             	setne  %al
    e349:	84 c0                	test   %al,%al
    e34b:	0f 84 98 00 00 00    	je     e3e9 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
    e351:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    e356:	e9 9d 00 00 00       	jmp    e3f8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x155>
    e35b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e35f:	0f b7 00             	movzwl (%rax),%eax
    e362:	0f b7 c0             	movzwl %ax,%eax
    e365:	25 00 10 00 00       	and    $0x1000,%eax
    e36a:	85 c0                	test   %eax,%eax
    e36c:	0f 95 c0             	setne  %al
    e36f:	84 c0                	test   %al,%al
    e371:	74 76                	je     e3e9 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
    e373:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e37a:	00 
    e37b:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    e382:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e386:	8b 40 04             	mov    0x4(%rax),%eax
    e389:	39 45 d0             	cmp    %eax,-0x30(%rbp)
    e38c:	0f 92 c0             	setb   %al
    e38f:	84 c0                	test   %al,%al
    e391:	74 56                	je     e3e9 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x146>
    e393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e397:	48 8b 40 08          	mov    0x8(%rax),%rax
    e39b:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    e39f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3a3:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    e3a7:	0f b7 c0             	movzwl %ax,%eax
    e3aa:	f7 d8                	neg    %eax
    e3ac:	48 98                	cltq   
    e3ae:	48 c1 e0 05          	shl    $0x5,%rax
    e3b2:	48 89 c2             	mov    %rax,%rdx
    e3b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3b9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e3bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e3c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3c5:	48 89 c6             	mov    %rax,%rsi
    e3c8:	48 89 cf             	mov    %rcx,%rdi
    e3cb:	e8 d3 fe ff ff       	call   e2a3 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    e3d0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e3d3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    e3d7:	0f 95 c0             	setne  %al
    e3da:	84 c0                	test   %al,%al
    e3dc:	74 05                	je     e3e3 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x140>
    e3de:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e3e1:	eb 15                	jmp    e3f8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x155>
    e3e3:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    e3e7:	eb 99                	jmp    e382 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xdf>
    e3e9:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
    e3ee:	e9 d8 fe ff ff       	jmp    e2cb <_ZL18add_static_threadsPVK9_layout_tS1_m+0x28>
    e3f3:	b8 00 00 00 00       	mov    $0x0,%eax
    e3f8:	48 83 c4 48          	add    $0x48,%rsp
    e3fc:	5b                   	pop    %rbx
    e3fd:	5d                   	pop    %rbp
    e3fe:	c3                   	ret    

000000000000e3ff <_ZL10trts_ecalljPv>:
    e3ff:	f3 0f 1e fa          	endbr64 
    e403:	55                   	push   %rbp
    e404:	48 89 e5             	mov    %rsp,%rbp
    e407:	48 83 ec 40          	sub    $0x40,%rsp
    e40b:	89 7d cc             	mov    %edi,-0x34(%rbp)
    e40e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e412:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e419:	00 00 
    e41b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e41f:	31 c0                	xor    %eax,%eax
    e421:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    e428:	0f b6 05 d1 ab 02 00 	movzbl 0x2abd1(%rip),%eax        # 39000 <_ZL16g_is_first_ecall>
    e42f:	0f b6 c0             	movzbl %al,%eax
    e432:	48 85 c0             	test   %rax,%rax
    e435:	0f 95 c0             	setne  %al
    e438:	84 c0                	test   %al,%al
    e43a:	0f 84 01 01 00 00    	je     e541 <_ZL10trts_ecalljPv+0x142>
    e440:	e8 41 0d 02 00       	call   2f186 <get_thread_data>
    e445:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e449:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e44d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e451:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e455:	48 8b 40 10          	mov    0x10(%rax),%rax
    e459:	48 39 c2             	cmp    %rax,%rdx
    e45c:	74 0a                	je     e468 <_ZL10trts_ecalljPv+0x69>
    e45e:	b8 07 10 00 00       	mov    $0x1007,%eax
    e463:	e9 19 01 00 00       	jmp    e581 <_ZL10trts_ecalljPv+0x182>
    e468:	48 8d 3d c1 d2 04 00 	lea    0x4d2c1(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    e46f:	e8 b8 8c 00 00       	call   1712c <sgx_spin_lock>
    e474:	0f b6 05 85 ab 02 00 	movzbl 0x2ab85(%rip),%eax        # 39000 <_ZL16g_is_first_ecall>
    e47b:	84 c0                	test   %al,%al
    e47d:	0f 84 b2 00 00 00    	je     e535 <_ZL10trts_ecalljPv+0x136>
    e483:	48 8d 05 66 99 02 00 	lea    0x29966(%rip),%rax        # 37df0 <EDMM_supported>
    e48a:	8b 00                	mov    (%rax),%eax
    e48c:	85 c0                	test   %eax,%eax
    e48e:	0f 84 95 00 00 00    	je     e529 <_ZL10trts_ecalljPv+0x12a>
    e494:	48 8d 05 a5 3a 02 00 	lea    0x23aa5(%rip),%rax        # 31f40 <g_global_data>
    e49b:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    e4a1:	89 c0                	mov    %eax,%eax
    e4a3:	48 c1 e0 05          	shl    $0x5,%rax
    e4a7:	48 89 c2             	mov    %rax,%rdx
    e4aa:	48 8d 05 8f 3a 02 00 	lea    0x23a8f(%rip),%rax        # 31f40 <g_global_data>
    e4b1:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
    e4b8:	48 01 d0             	add    %rdx,%rax
    e4bb:	ba 00 00 00 00       	mov    $0x0,%edx
    e4c0:	48 89 c6             	mov    %rax,%rsi
    e4c3:	48 8d 05 76 3a 02 00 	lea    0x23a76(%rip),%rax        # 31f40 <g_global_data>
    e4ca:	48 8d b8 40 01 00 00 	lea    0x140(%rax),%rdi
    e4d1:	e8 cd fd ff ff       	call   e2a3 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    e4d6:	85 c0                	test   %eax,%eax
    e4d8:	0f 95 c0             	setne  %al
    e4db:	84 c0                	test   %al,%al
    e4dd:	74 16                	je     e4f5 <_ZL10trts_ecalljPv+0xf6>
    e4df:	48 8d 3d 4a d2 04 00 	lea    0x4d24a(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    e4e6:	e8 dc 8c 00 00       	call   171c7 <sgx_spin_unlock>
    e4eb:	b8 01 00 00 00       	mov    $0x1,%eax
    e4f0:	e9 8c 00 00 00       	jmp    e581 <_ZL10trts_ecalljPv+0x182>
    e4f5:	e8 41 0c 02 00       	call   2f13b <get_enclave_base>
    e4fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e4fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e502:	48 89 c7             	mov    %rax,%rdi
    e505:	e8 44 26 00 00       	call   10b4e <change_protection>
    e50a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e50d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    e511:	0f 95 c0             	setne  %al
    e514:	84 c0                	test   %al,%al
    e516:	74 11                	je     e529 <_ZL10trts_ecalljPv+0x12a>
    e518:	48 8d 3d 11 d2 04 00 	lea    0x4d211(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    e51f:	e8 a3 8c 00 00       	call   171c7 <sgx_spin_unlock>
    e524:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e527:	eb 58                	jmp    e581 <_ZL10trts_ecalljPv+0x182>
    e529:	e8 c5 2d 00 00       	call   112f3 <init_global_object>
    e52e:	c6 05 cb aa 02 00 00 	movb   $0x0,0x2aacb(%rip)        # 39000 <_ZL16g_is_first_ecall>
    e535:	48 8d 3d f4 d1 04 00 	lea    0x4d1f4(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    e53c:	e8 86 8c 00 00       	call   171c7 <sgx_spin_unlock>
    e541:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    e548:	00 
    e549:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    e54d:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e550:	48 89 d6             	mov    %rdx,%rsi
    e553:	89 c7                	mov    %eax,%edi
    e555:	e8 f0 fa ff ff       	call   e04a <_ZL13get_func_addrjPPv>
    e55a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e55d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    e561:	75 1b                	jne    e57e <_ZL10trts_ecalljPv+0x17f>
    e563:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e567:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e56b:	0f ae e8             	lfence 
    e56e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e572:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e576:	48 89 c7             	mov    %rax,%rdi
    e579:	ff d2                	call   *%rdx
    e57b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e57e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e581:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    e585:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e58c:	00 00 
    e58e:	74 05                	je     e595 <_ZL10trts_ecalljPv+0x196>
    e590:	e8 f2 2c 01 00       	call   21287 <__stack_chk_fail>
    e595:	c9                   	leave  
    e596:	c3                   	ret    

000000000000e597 <_ZL24init_static_stack_canaryPv>:
    e597:	f3 0f 1e fa          	endbr64 
    e59b:	55                   	push   %rbp
    e59c:	48 89 e5             	mov    %rsp,%rbp
    e59f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5a7:	48 2d f8 03 01 00    	sub    $0x103f8,%rax
    e5ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e5b1:	48 8d 05 58 98 02 00 	lea    0x29858(%rip),%rax        # 37e10 <__intel_security_cookie>
    e5b8:	48 8b 10             	mov    (%rax),%rdx
    e5bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5bf:	48 89 10             	mov    %rdx,(%rax)
    e5c2:	90                   	nop
    e5c3:	5d                   	pop    %rbp
    e5c4:	c3                   	ret    

000000000000e5c5 <do_init_thread>:
    e5c5:	f3 0f 1e fa          	endbr64 
    e5c9:	55                   	push   %rbp
    e5ca:	48 89 e5             	mov    %rsp,%rbp
    e5cd:	48 83 ec 50          	sub    $0x50,%rsp
    e5d1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    e5d5:	89 f0                	mov    %esi,%eax
    e5d7:	88 45 b4             	mov    %al,-0x4c(%rbp)
    e5da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e5e1:	00 00 
    e5e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e5e7:	31 c0                	xor    %eax,%eax
    e5e9:	48 8d 05 50 39 02 00 	lea    0x23950(%rip),%rax        # 31f40 <g_global_data>
    e5f0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    e5f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e5f8:	48 01 d0             	add    %rdx,%rax
    e5fb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e5ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e603:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    e60a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e60e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e613:	0f 94 c0             	sete   %al
    e616:	88 45 c3             	mov    %al,-0x3d(%rbp)
    e619:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e61d:	48 8b 40 28          	mov    0x28(%rax),%rax
    e621:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e629:	48 8b 40 30          	mov    0x30(%rax),%rax
    e62d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e631:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e635:	b9 a0 00 00 00       	mov    $0xa0,%ecx
    e63a:	48 8d 15 ff 38 02 00 	lea    0x238ff(%rip),%rdx        # 31f40 <g_global_data>
    e641:	48 8d 52 50          	lea    0x50(%rdx),%rdx
    e645:	be 00 10 00 00       	mov    $0x1000,%esi
    e64a:	48 89 c7             	mov    %rax,%rdi
    e64d:	e8 4a f8 ff ff       	call   de9c <memcpy_s>
    e652:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e656:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e65a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e65e:	48 01 c2             	add    %rax,%rdx
    e661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e665:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e66d:	48 8b 10             	mov    (%rax),%rdx
    e670:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e674:	48 01 c2             	add    %rax,%rdx
    e677:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e67b:	48 89 10             	mov    %rdx,(%rax)
    e67e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e682:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e686:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e68a:	48 01 c2             	add    %rax,%rdx
    e68d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e691:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e695:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e699:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e69d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6a1:	48 01 c2             	add    %rax,%rdx
    e6a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6a8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e6ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6b0:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e6b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6b8:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    e6bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6c3:	48 8b 50 20          	mov    0x20(%rax),%rdx
    e6c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6cb:	48 01 c2             	add    %rax,%rdx
    e6ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6d2:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e6d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6da:	48 8b 50 58          	mov    0x58(%rax),%rdx
    e6de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6e2:	48 01 c2             	add    %rax,%rdx
    e6e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6e9:	48 89 50 58          	mov    %rdx,0x58(%rax)
    e6ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6f1:	48 8b 50 50          	mov    0x50(%rax),%rdx
    e6f5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6f9:	48 01 c2             	add    %rax,%rdx
    e6fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e700:	48 89 50 50          	mov    %rdx,0x50(%rax)
    e704:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e708:	48 8b 40 08          	mov    0x8(%rax),%rax
    e70c:	48 8d 90 00 fc ff ff 	lea    -0x400(%rax),%rdx
    e713:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e717:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e71b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e71f:	48 8b 40 10          	mov    0x10(%rax),%rax
    e723:	48 8d 90 00 fc ff ff 	lea    -0x400(%rax),%rdx
    e72a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e72e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e732:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e736:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e73a:	48 89 50 28          	mov    %rdx,0x28(%rax)
    e73e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e742:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e746:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e74a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e74e:	48 89 c7             	mov    %rax,%rdi
    e751:	e8 41 fe ff ff       	call   e597 <_ZL24init_static_stack_canaryPv>
    e756:	48 8d 05 93 96 02 00 	lea    0x29693(%rip),%rax        # 37df0 <EDMM_supported>
    e75d:	8b 00                	mov    (%rax),%eax
    e75f:	85 c0                	test   %eax,%eax
    e761:	74 12                	je     e775 <do_init_thread+0x1b0>
    e763:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
    e767:	74 0c                	je     e775 <do_init_thread+0x1b0>
    e769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e76d:	48 c7 40 30 01 00 00 	movq   $0x1,0x30(%rax)
    e774:	00 
    e775:	80 7d c3 00          	cmpb   $0x0,-0x3d(%rbp)
    e779:	74 5d                	je     e7d8 <do_init_thread+0x213>
    e77b:	48 8d 05 6e 96 02 00 	lea    0x2966e(%rip),%rax        # 37df0 <EDMM_supported>
    e782:	8b 00                	mov    (%rax),%eax
    e784:	85 c0                	test   %eax,%eax
    e786:	74 1d                	je     e7a5 <do_init_thread+0x1e0>
    e788:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
    e78c:	75 10                	jne    e79e <do_init_thread+0x1d9>
    e78e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e792:	48 89 c7             	mov    %rax,%rdi
    e795:	e8 e8 f3 ff ff       	call   db82 <is_dynamic_thread>
    e79a:	85 c0                	test   %eax,%eax
    e79c:	74 07                	je     e7a5 <do_init_thread+0x1e0>
    e79e:	b8 01 00 00 00       	mov    $0x1,%eax
    e7a3:	eb 05                	jmp    e7aa <do_init_thread+0x1e5>
    e7a5:	b8 00 00 00 00       	mov    $0x0,%eax
    e7aa:	84 c0                	test   %al,%al
    e7ac:	74 39                	je     e7e7 <do_init_thread+0x222>
    e7ae:	e8 97 f4 ff ff       	call   dc4a <get_dynamic_stack_max_page>
    e7b3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    e7b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7ba:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    e7c1:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    e7c4:	48 c1 e2 0c          	shl    $0xc,%rdx
    e7c8:	48 01 c2             	add    %rax,%rdx
    e7cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7cf:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    e7d6:	eb 0f                	jmp    e7e7 <do_init_thread+0x222>
    e7d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e7e0:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    e7e7:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    e7ee:	00 
    e7ef:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    e7f6:	00 
    e7f7:	e8 3f 09 02 00       	call   2f13b <get_enclave_base>
    e7fc:	48 89 c1             	mov    %rax,%rcx
    e7ff:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e803:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e807:	48 89 c6             	mov    %rax,%rsi
    e80a:	48 89 cf             	mov    %rcx,%rdi
    e80d:	e8 94 1e 00 00       	call   106a6 <elf_tls_info>
    e812:	85 c0                	test   %eax,%eax
    e814:	0f 95 c0             	setne  %al
    e817:	84 c0                	test   %al,%al
    e819:	74 0a                	je     e825 <do_init_thread+0x260>
    e81b:	b8 01 00 00 00       	mov    $0x1,%eax
    e820:	e9 87 00 00 00       	jmp    e8ac <do_init_thread+0x2e7>
    e825:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e829:	48 85 c0             	test   %rax,%rax
    e82c:	74 79                	je     e8a7 <do_init_thread+0x2e2>
    e82e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e832:	48 8b 10             	mov    (%rax),%rdx
    e835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e839:	48 8b 40 50          	mov    0x50(%rax),%rax
    e83d:	48 29 c2             	sub    %rax,%rdx
    e840:	48 89 d0             	mov    %rdx,%rax
    e843:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    e849:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    e84f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e853:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    e857:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    e85e:	48 89 d1             	mov    %rdx,%rcx
    e861:	48 89 c2             	mov    %rax,%rdx
    e864:	be 00 00 00 00       	mov    $0x0,%esi
    e869:	48 89 cf             	mov    %rcx,%rdi
    e86c:	e8 a2 28 01 00       	call   21113 <memset>
    e871:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e875:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e879:	49 89 d0             	mov    %rdx,%r8
    e87c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e880:	48 8b 0a             	mov    (%rdx),%rcx
    e883:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e887:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    e88b:	48 89 ce             	mov    %rcx,%rsi
    e88e:	48 29 d6             	sub    %rdx,%rsi
    e891:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e895:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    e899:	48 89 d7             	mov    %rdx,%rdi
    e89c:	48 89 c1             	mov    %rax,%rcx
    e89f:	4c 89 c2             	mov    %r8,%rdx
    e8a2:	e8 f5 f5 ff ff       	call   de9c <memcpy_s>
    e8a7:	b8 00 00 00 00       	mov    $0x0,%eax
    e8ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    e8b0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e8b7:	00 00 
    e8b9:	74 05                	je     e8c0 <do_init_thread+0x2fb>
    e8bb:	e8 c7 29 01 00       	call   21287 <__stack_chk_fail>
    e8c0:	c9                   	leave  
    e8c1:	c3                   	ret    

000000000000e8c2 <do_ecall>:
    e8c2:	f3 0f 1e fa          	endbr64 
    e8c6:	55                   	push   %rbp
    e8c7:	48 89 e5             	mov    %rsp,%rbp
    e8ca:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e8ce:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    e8d1:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    e8d5:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    e8d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e8e0:	00 00 
    e8e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e8e6:	31 c0                	xor    %eax,%eax
    e8e8:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%rbp)
    e8ef:	e8 53 08 02 00       	call   2f147 <get_enclave_state>
    e8f4:	83 f8 02             	cmp    $0x2,%eax
    e8f7:	0f 95 c0             	setne  %al
    e8fa:	84 c0                	test   %al,%al
    e8fc:	74 08                	je     e906 <do_ecall+0x44>
    e8fe:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    e901:	e9 e2 01 00 00       	jmp    eae8 <do_ecall+0x226>
    e906:	e8 7b 08 02 00       	call   2f186 <get_thread_data>
    e90b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e90f:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    e914:	74 37                	je     e94d <do_ecall+0x8b>
    e916:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e91a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e91e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e922:	48 8b 40 08          	mov    0x8(%rax),%rax
    e926:	48 39 c2             	cmp    %rax,%rdx
    e929:	75 29                	jne    e954 <do_ecall+0x92>
    e92b:	48 8d 05 0e 36 02 00 	lea    0x2360e(%rip),%rax        # 31f40 <g_global_data>
    e932:	48 8b 40 38          	mov    0x38(%rax),%rax
    e936:	48 85 c0             	test   %rax,%rax
    e939:	75 12                	jne    e94d <do_ecall+0x8b>
    e93b:	e8 d3 f5 ff ff       	call   df13 <_Z22_pthread_tls_get_statev>
    e940:	83 f8 09             	cmp    $0x9,%eax
    e943:	74 08                	je     e94d <do_ecall+0x8b>
    e945:	8b 45 9c             	mov    -0x64(%rbp),%eax
    e948:	83 f8 fa             	cmp    $0xfffffffa,%eax
    e94b:	75 07                	jne    e954 <do_ecall+0x92>
    e94d:	b8 01 00 00 00       	mov    $0x1,%eax
    e952:	eb 05                	jmp    e959 <do_ecall+0x97>
    e954:	b8 00 00 00 00       	mov    $0x0,%eax
    e959:	84 c0                	test   %al,%al
    e95b:	74 22                	je     e97f <do_ecall+0xbd>
    e95d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e961:	be 00 00 00 00       	mov    $0x0,%esi
    e966:	48 89 c7             	mov    %rax,%rdi
    e969:	e8 57 fc ff ff       	call   e5c5 <do_init_thread>
    e96e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    e971:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    e975:	74 08                	je     e97f <do_ecall+0xbd>
    e977:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    e97a:	e9 69 01 00 00       	jmp    eae8 <do_ecall+0x226>
    e97f:	e8 02 08 02 00       	call   2f186 <get_thread_data>
    e984:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e988:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e98c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e990:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e994:	48 8b 40 08          	mov    0x8(%rax),%rax
    e998:	48 39 c2             	cmp    %rax,%rdx
    e99b:	0f 85 f6 00 00 00    	jne    ea97 <do_ecall+0x1d5>
    e9a1:	bf 00 00 00 00       	mov    $0x0,%edi
    e9a6:	e8 7f ec ff ff       	call   d62a <sgx_wrpkru>
    e9ab:	e8 46 f5 ff ff       	call   def6 <_Z16_pthread_enabledv>
    e9b0:	84 c0                	test   %al,%al
    e9b2:	0f 84 c3 00 00 00    	je     ea7b <do_ecall+0x1b9>
    e9b8:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    e9bf:	00 
    e9c0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    e9c7:	00 
    e9c8:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    e9cf:	00 
    e9d0:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    e9d7:	00 
    e9d8:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    e9df:	00 
    e9e0:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    e9e7:	00 
    e9e8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e9ef:	00 
    e9f0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e9f7:	00 
    e9f8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e9fc:	48 89 c7             	mov    %rax,%rdi
    e9ff:	e8 84 2d 01 00       	call   21788 <_setjmp>
    ea04:	f3 0f 1e fa          	endbr64 
    ea08:	85 c0                	test   %eax,%eax
    ea0a:	0f 94 c0             	sete   %al
    ea0d:	84 c0                	test   %al,%al
    ea0f:	74 28                	je     ea39 <do_ecall+0x177>
    ea11:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ea15:	48 89 c7             	mov    %rax,%rdi
    ea18:	e8 05 f5 ff ff       	call   df22 <_Z26_pthread_tls_store_contextPv>
    ea1d:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    ea21:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
    ea25:	48 89 c6             	mov    %rax,%rsi
    ea28:	48 8d 3d d0 f9 ff ff 	lea    -0x630(%rip),%rdi        # e3ff <_ZL10trts_ecalljPv>
    ea2f:	e8 12 03 00 00       	call   ed46 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
    ea34:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    ea37:	eb 17                	jmp    ea50 <do_ecall+0x18e>
    ea39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea3d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ea41:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea45:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ea49:	c7 45 a4 09 00 00 00 	movl   $0x9,-0x5c(%rbp)
    ea50:	8b 45 9c             	mov    -0x64(%rbp),%eax
    ea53:	83 f8 fa             	cmp    $0xfffffffa,%eax
    ea56:	74 06                	je     ea5e <do_ecall+0x19c>
    ea58:	83 7d a4 09          	cmpl   $0x9,-0x5c(%rbp)
    ea5c:	75 0a                	jne    ea68 <do_ecall+0x1a6>
    ea5e:	bf 09 00 00 00       	mov    $0x9,%edi
    ea63:	e8 9d f4 ff ff       	call   df05 <_Z24_pthread_tls_store_state9_status_t>
    ea68:	e8 d3 f4 ff ff       	call   df40 <_Z24_pthread_tls_destructorsv>
    ea6d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ea71:	48 89 c7             	mov    %rax,%rdi
    ea74:	e8 b8 f4 ff ff       	call   df31 <_Z20_pthread_wakeup_joinPv>
    ea79:	eb 30                	jmp    eaab <do_ecall+0x1e9>
    ea7b:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    ea7f:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
    ea83:	48 89 c6             	mov    %rax,%rsi
    ea86:	48 8d 3d 72 f9 ff ff 	lea    -0x68e(%rip),%rdi        # e3ff <_ZL10trts_ecalljPv>
    ea8d:	e8 b4 02 00 00       	call   ed46 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>
    ea92:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    ea95:	eb 14                	jmp    eaab <do_ecall+0x1e9>
    ea97:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ea9b:	8b 55 9c             	mov    -0x64(%rbp),%edx
    ea9e:	48 89 c6             	mov    %rax,%rsi
    eaa1:	89 d7                	mov    %edx,%edi
    eaa3:	e8 57 f9 ff ff       	call   e3ff <_ZL10trts_ecalljPv>
    eaa8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    eaab:	48 8d 05 8e 34 02 00 	lea    0x2348e(%rip),%rax        # 31f40 <g_global_data>
    eab2:	48 8b 40 38          	mov    0x38(%rax),%rax
    eab6:	48 85 c0             	test   %rax,%rax
    eab9:	74 1c                	je     ead7 <do_ecall+0x215>
    eabb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eabf:	48 8b 50 10          	mov    0x10(%rax),%rdx
    eac3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eac7:	48 8b 40 08          	mov    0x8(%rax),%rax
    eacb:	48 39 c2             	cmp    %rax,%rdx
    eace:	75 07                	jne    ead7 <do_ecall+0x215>
    ead0:	b8 01 00 00 00       	mov    $0x1,%eax
    ead5:	eb 05                	jmp    eadc <do_ecall+0x21a>
    ead7:	b8 00 00 00 00       	mov    $0x0,%eax
    eadc:	84 c0                	test   %al,%al
    eade:	74 05                	je     eae5 <do_ecall+0x223>
    eae0:	e8 66 f4 ff ff       	call   df4b <tc_set_idle>
    eae5:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    eae8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    eaec:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    eaf3:	00 00 
    eaf5:	74 05                	je     eafc <do_ecall+0x23a>
    eaf7:	e8 8b 27 01 00       	call   21287 <__stack_chk_fail>
    eafc:	c9                   	leave  
    eafd:	c3                   	ret    

000000000000eafe <do_ecall_add_thread>:
    eafe:	f3 0f 1e fa          	endbr64 
    eb02:	55                   	push   %rbp
    eb03:	48 89 e5             	mov    %rsp,%rbp
    eb06:	48 83 ec 30          	sub    $0x30,%rsp
    eb0a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    eb0e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    eb15:	e8 04 0a 00 00       	call   f51e <is_utility_thread>
    eb1a:	83 f0 01             	xor    $0x1,%eax
    eb1d:	84 c0                	test   %al,%al
    eb1f:	74 08                	je     eb29 <do_ecall_add_thread+0x2b>
    eb21:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    eb24:	e9 9e 00 00 00       	jmp    ebc7 <do_ecall_add_thread+0xc9>
    eb29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    eb31:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eb36:	75 08                	jne    eb40 <do_ecall_add_thread+0x42>
    eb38:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    eb3b:	e9 87 00 00 00       	jmp    ebc7 <do_ecall_add_thread+0xc9>
    eb40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb44:	be 08 00 00 00       	mov    $0x8,%esi
    eb49:	48 89 c7             	mov    %rax,%rdi
    eb4c:	e8 ed e6 ff ff       	call   d23e <sgx_is_outside_enclave>
    eb51:	85 c0                	test   %eax,%eax
    eb53:	0f 94 c0             	sete   %al
    eb56:	84 c0                	test   %al,%al
    eb58:	74 05                	je     eb5f <do_ecall_add_thread+0x61>
    eb5a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    eb5d:	eb 68                	jmp    ebc7 <do_ecall_add_thread+0xc9>
    eb5f:	0f ae e8             	lfence 
    eb62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb66:	48 8b 00             	mov    (%rax),%rax
    eb69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    eb6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eb75:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    eb7a:	75 05                	jne    eb81 <do_ecall_add_thread+0x83>
    eb7c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    eb7f:	eb 46                	jmp    ebc7 <do_ecall_add_thread+0xc9>
    eb81:	0f ae e8             	lfence 
    eb84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb88:	48 89 c7             	mov    %rax,%rdi
    eb8b:	e8 4a f5 ff ff       	call   e0da <_ZL11do_save_tcsPv>
    eb90:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    eb93:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    eb97:	74 05                	je     eb9e <do_ecall_add_thread+0xa0>
    eb99:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    eb9c:	eb 29                	jmp    ebc7 <do_ecall_add_thread+0xc9>
    eb9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eba2:	48 89 c7             	mov    %rax,%rdi
    eba5:	e8 d1 f0 ff ff       	call   dc7b <do_add_thread>
    ebaa:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    ebad:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    ebb1:	74 11                	je     ebc4 <do_ecall_add_thread+0xc6>
    ebb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebb7:	48 89 c7             	mov    %rax,%rdi
    ebba:	e8 00 f6 ff ff       	call   e1bf <_ZL10do_del_tcsPv>
    ebbf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ebc2:	eb 03                	jmp    ebc7 <do_ecall_add_thread+0xc9>
    ebc4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ebc7:	c9                   	leave  
    ebc8:	c3                   	ret    

000000000000ebc9 <do_uninit_enclave>:
    ebc9:	f3 0f 1e fa          	endbr64 
    ebcd:	55                   	push   %rbp
    ebce:	48 89 e5             	mov    %rsp,%rbp
    ebd1:	48 83 ec 40          	sub    $0x40,%rsp
    ebd5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ebd9:	48 8d 05 10 92 02 00 	lea    0x29210(%rip),%rax        # 37df0 <EDMM_supported>
    ebe0:	8b 00                	mov    (%rax),%eax
    ebe2:	85 c0                	test   %eax,%eax
    ebe4:	75 14                	jne    ebfa <do_uninit_enclave+0x31>
    ebe6:	bf 03 00 00 00       	mov    $0x3,%edi
    ebeb:	e8 68 05 02 00       	call   2f158 <set_enclave_state>
    ebf0:	b8 01 00 00 00       	mov    $0x1,%eax
    ebf5:	e9 4a 01 00 00       	jmp    ed44 <do_uninit_enclave+0x17b>
    ebfa:	e8 1f 09 00 00       	call   f51e <is_utility_thread>
    ebff:	83 f0 01             	xor    $0x1,%eax
    ec02:	84 c0                	test   %al,%al
    ec04:	74 10                	je     ec16 <do_uninit_enclave+0x4d>
    ec06:	e8 fc ef ff ff       	call   dc07 <is_dynamic_thread_exist>
    ec0b:	85 c0                	test   %eax,%eax
    ec0d:	74 07                	je     ec16 <do_uninit_enclave+0x4d>
    ec0f:	b8 01 00 00 00       	mov    $0x1,%eax
    ec14:	eb 05                	jmp    ec1b <do_uninit_enclave+0x52>
    ec16:	b8 00 00 00 00       	mov    $0x0,%eax
    ec1b:	84 c0                	test   %al,%al
    ec1d:	74 14                	je     ec33 <do_uninit_enclave+0x6a>
    ec1f:	bf 03 00 00 00       	mov    $0x3,%edi
    ec24:	e8 2f 05 02 00       	call   2f158 <set_enclave_state>
    ec29:	b8 01 00 00 00       	mov    $0x1,%eax
    ec2e:	e9 11 01 00 00       	jmp    ed44 <do_uninit_enclave+0x17b>
    ec33:	f0 83 0d f9 ca 04 00 	lock orl $0x1,0x4caf9(%rip)        # 5b734 <g_uninit_flag>
    ec3a:	01 
    ec3b:	48 8b 05 de ca 04 00 	mov    0x4cade(%rip),%rax        # 5b720 <_ZL10g_tcs_node>
    ec42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ec46:	48 c7 05 cf ca 04 00 	movq   $0x0,0x4cacf(%rip)        # 5b720 <_ZL10g_tcs_node>
    ec4d:	00 00 00 00 
    ec51:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ec56:	0f 84 ae 00 00 00    	je     ed0a <do_uninit_enclave+0x141>
    ec5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec60:	48 8b 10             	mov    (%rax),%rdx
    ec63:	48 8b 05 be ca 04 00 	mov    0x4cabe(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    ec6a:	48 31 d0             	xor    %rdx,%rax
    ec6d:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    ec71:	75 22                	jne    ec95 <do_uninit_enclave+0xcc>
    ec73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ec7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec7f:	48 8b 40 08          	mov    0x8(%rax),%rax
    ec83:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ec87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec8b:	48 89 c7             	mov    %rax,%rdi
    ec8e:	e8 1f f3 00 00       	call   1dfb2 <dlfree>
    ec93:	eb 70                	jmp    ed05 <do_uninit_enclave+0x13c>
    ec95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec99:	48 8b 10             	mov    (%rax),%rdx
    ec9c:	48 8b 05 85 ca 04 00 	mov    0x4ca85(%rip),%rax        # 5b728 <_ZL12g_tcs_cookie>
    eca3:	48 31 d0             	xor    %rdx,%rax
    eca6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ecaa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecae:	48 05 00 10 00 00    	add    $0x1000,%rax
    ecb4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ecb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecbc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ecc0:	48 89 d6             	mov    %rdx,%rsi
    ecc3:	48 89 c7             	mov    %rax,%rdi
    ecc6:	e8 aa 6f 00 00       	call   15c75 <mm_dealloc>
    eccb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ecce:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    ecd2:	74 11                	je     ece5 <do_uninit_enclave+0x11c>
    ecd4:	bf 03 00 00 00       	mov    $0x3,%edi
    ecd9:	e8 7a 04 02 00       	call   2f158 <set_enclave_state>
    ecde:	b8 01 00 00 00       	mov    $0x1,%eax
    ece3:	eb 5f                	jmp    ed44 <do_uninit_enclave+0x17b>
    ece5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ece9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    eced:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecf1:	48 8b 40 08          	mov    0x8(%rax),%rax
    ecf5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ecf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ecfd:	48 89 c7             	mov    %rax,%rdi
    ed00:	e8 ad f2 00 00       	call   1dfb2 <dlfree>
    ed05:	e9 47 ff ff ff       	jmp    ec51 <do_uninit_enclave+0x88>
    ed0a:	48 8d 3d 1f ca 04 00 	lea    0x4ca1f(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    ed11:	e8 16 84 00 00       	call   1712c <sgx_spin_lock>
    ed16:	0f b6 05 e3 a2 02 00 	movzbl 0x2a2e3(%rip),%eax        # 39000 <_ZL16g_is_first_ecall>
    ed1d:	83 f0 01             	xor    $0x1,%eax
    ed20:	84 c0                	test   %al,%al
    ed22:	74 05                	je     ed29 <do_uninit_enclave+0x160>
    ed24:	e8 da 25 00 00       	call   11303 <uninit_global_object>
    ed29:	48 8d 3d 00 ca 04 00 	lea    0x4ca00(%rip),%rdi        # 5b730 <_ZL10g_ife_lock>
    ed30:	e8 92 84 00 00       	call   171c7 <sgx_spin_unlock>
    ed35:	bf 03 00 00 00       	mov    $0x3,%edi
    ed3a:	e8 19 04 02 00       	call   2f158 <set_enclave_state>
    ed3f:	b8 00 00 00 00       	mov    $0x0,%eax
    ed44:	c9                   	leave  
    ed45:	c3                   	ret    

000000000000ed46 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_>:
    ed46:	f3 0f 1e fa          	endbr64 
    ed4a:	55                   	push   %rbp
    ed4b:	48 89 e5             	mov    %rsp,%rbp
    ed4e:	41 57                	push   %r15
    ed50:	41 56                	push   %r14
    ed52:	41 55                	push   %r13
    ed54:	41 54                	push   %r12
    ed56:	53                   	push   %rbx
    ed57:	48 83 ec 58          	sub    $0x58,%rsp
    ed5b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    ed5f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    ed63:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    ed67:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ed6e:	00 00 
    ed70:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ed74:	31 c0                	xor    %eax,%eax
    ed76:	48 89 e0             	mov    %rsp,%rax
    ed79:	48 89 c3             	mov    %rax,%rbx
    ed7c:	e8 04 01 00 00       	call   ee85 <_Z6rdrandIjET_v>
    ed81:	25 ff 07 00 00       	and    $0x7ff,%eax
    ed86:	83 c0 01             	add    $0x1,%eax
    ed89:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    ed8c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    ed8f:	48 83 e8 01          	sub    $0x1,%rax
    ed93:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ed97:	48 89 c2             	mov    %rax,%rdx
    ed9a:	48 83 c2 01          	add    $0x1,%rdx
    ed9e:	49 89 d6             	mov    %rdx,%r14
    eda1:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    eda7:	48 89 c2             	mov    %rax,%rdx
    edaa:	48 83 c2 01          	add    $0x1,%rdx
    edae:	49 89 d4             	mov    %rdx,%r12
    edb1:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    edb7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    edbb:	b8 10 00 00 00       	mov    $0x10,%eax
    edc0:	48 83 e8 01          	sub    $0x1,%rax
    edc4:	48 01 d0             	add    %rdx,%rax
    edc7:	bf 10 00 00 00       	mov    $0x10,%edi
    edcc:	ba 00 00 00 00       	mov    $0x0,%edx
    edd1:	48 f7 f7             	div    %rdi
    edd4:	48 6b c0 10          	imul   $0x10,%rax,%rax
    edd8:	48 89 c2             	mov    %rax,%rdx
    eddb:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    ede2:	48 89 e1             	mov    %rsp,%rcx
    ede5:	48 29 d1             	sub    %rdx,%rcx
    ede8:	48 89 ca             	mov    %rcx,%rdx
    edeb:	48 39 d4             	cmp    %rdx,%rsp
    edee:	74 12                	je     ee02 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xbc>
    edf0:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    edf7:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    edfe:	00 00 
    ee00:	eb e9                	jmp    edeb <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xa5>
    ee02:	48 89 c2             	mov    %rax,%rdx
    ee05:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    ee0b:	48 29 d4             	sub    %rdx,%rsp
    ee0e:	48 89 c2             	mov    %rax,%rdx
    ee11:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    ee17:	48 85 d2             	test   %rdx,%rdx
    ee1a:	74 10                	je     ee2c <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xe6>
    ee1c:	25 ff 0f 00 00       	and    $0xfff,%eax
    ee21:	48 83 e8 08          	sub    $0x8,%rax
    ee25:	48 01 e0             	add    %rsp,%rax
    ee28:	48 83 08 00          	orq    $0x0,(%rax)
    ee2c:	48 89 e0             	mov    %rsp,%rax
    ee2f:	48 83 c0 00          	add    $0x0,%rax
    ee33:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    ee37:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ee3b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ee3f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ee43:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ee47:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    ee4b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    ee4f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ee53:	48 89 ce             	mov    %rcx,%rsi
    ee56:	48 89 c7             	mov    %rax,%rdi
    ee59:	e8 3c 00 00 00       	call   ee9a <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>
    ee5e:	90                   	nop
    ee5f:	48 89 dc             	mov    %rbx,%rsp
    ee62:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ee66:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    ee6d:	00 00 
    ee6f:	74 05                	je     ee76 <_Z20random_stack_advanceILj2048E9_status_tJjPvEJRiRS1_EET0_PFS4_DpT1_EDpOT2_+0x130>
    ee71:	e8 11 24 01 00       	call   21287 <__stack_chk_fail>
    ee76:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ee7a:	5b                   	pop    %rbx
    ee7b:	41 5c                	pop    %r12
    ee7d:	41 5d                	pop    %r13
    ee7f:	41 5e                	pop    %r14
    ee81:	41 5f                	pop    %r15
    ee83:	5d                   	pop    %rbp
    ee84:	c3                   	ret    

000000000000ee85 <_Z6rdrandIjET_v>:
    ee85:	f3 0f 1e fa          	endbr64 
    ee89:	55                   	push   %rbp
    ee8a:	48 89 e5             	mov    %rsp,%rbp
    ee8d:	0f c7 f0             	rdrand %eax
    ee90:	73 fb                	jae    ee8d <_Z6rdrandIjET_v+0x8>
    ee92:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ee95:	8b 45 fc             	mov    -0x4(%rbp),%eax
    ee98:	5d                   	pop    %rbp
    ee99:	c3                   	ret    

000000000000ee9a <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>:
    ee9a:	f3 0f 1e fa          	endbr64 
    ee9e:	55                   	push   %rbp
    ee9f:	48 89 e5             	mov    %rsp,%rbp
    eea2:	48 83 ec 30          	sub    $0x30,%rsp
    eea6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eeaa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eeae:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    eeb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eeb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eeba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eec2:	48 8b 00             	mov    (%rax),%rax
    eec5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    eec9:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    eecd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eed1:	8b 09                	mov    (%rcx),%ecx
    eed3:	48 89 c6             	mov    %rax,%rsi
    eed6:	89 cf                	mov    %ecx,%edi
    eed8:	ff d2                	call   *%rdx
    eeda:	c9                   	leave  
    eedb:	c3                   	ret    

000000000000eedc <sgx_ocall>:
    eedc:	f3 0f 1e fa          	endbr64 
    eee0:	55                   	push   %rbp
    eee1:	48 89 e5             	mov    %rsp,%rbp
    eee4:	48 83 ec 20          	sub    $0x20,%rsp
    eee8:	89 7d ec             	mov    %edi,-0x14(%rbp)
    eeeb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eeef:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    eef3:	74 29                	je     ef1e <sgx_ocall+0x42>
    eef5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    eef8:	83 f8 f9             	cmp    $0xfffffff9,%eax
    eefb:	7c 08                	jl     ef05 <sgx_ocall+0x29>
    eefd:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ef00:	83 f8 ff             	cmp    $0xffffffff,%eax
    ef03:	7c 19                	jl     ef1e <sgx_ocall+0x42>
    ef05:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ef08:	48 8d 05 f1 10 02 00 	lea    0x210f1(%rip),%rax        # 30000 <g_dyn_entry_table>
    ef0f:	48 8b 00             	mov    (%rax),%rax
    ef12:	48 39 c2             	cmp    %rax,%rdx
    ef15:	72 07                	jb     ef1e <sgx_ocall+0x42>
    ef17:	b8 01 10 00 00       	mov    $0x1001,%eax
    ef1c:	eb 17                	jmp    ef35 <sgx_ocall+0x59>
    ef1e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ef22:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ef25:	48 89 d6             	mov    %rdx,%rsi
    ef28:	89 c7                	mov    %eax,%edi
    ef2a:	e8 a4 04 02 00       	call   2f3d3 <__morestack>
    ef2f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ef32:	8b 45 fc             	mov    -0x4(%rbp),%eax
    ef35:	c9                   	leave  
    ef36:	c3                   	ret    

000000000000ef37 <update_ocall_lastsp>:
    ef37:	f3 0f 1e fa          	endbr64 
    ef3b:	55                   	push   %rbp
    ef3c:	48 89 e5             	mov    %rsp,%rbp
    ef3f:	48 83 ec 30          	sub    $0x30,%rsp
    ef43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ef47:	e8 3a 02 02 00       	call   2f186 <get_thread_data>
    ef4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ef50:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    ef57:	00 
    ef58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef5c:	48 8b 40 08          	mov    0x8(%rax),%rax
    ef60:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ef64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef6c:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ef70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef74:	48 8b 50 30          	mov    0x30(%rax),%rdx
    ef78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef7c:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef80:	48 39 c2             	cmp    %rax,%rdx
    ef83:	75 11                	jne    ef96 <update_ocall_lastsp+0x5f>
    ef85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef89:	48 c7 80 90 00 00 00 	movq   $0x1,0x90(%rax)
    ef90:	01 00 00 00 
    ef94:	eb 26                	jmp    efbc <update_ocall_lastsp+0x85>
    ef96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef9a:	48 8b 40 30          	mov    0x30(%rax),%rax
    ef9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    efa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efa6:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    efad:	48 8d 50 01          	lea    0x1(%rax),%rdx
    efb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efb5:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    efbc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    efc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efc4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    efc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    efcc:	c9                   	leave  
    efcd:	c3                   	ret    

000000000000efce <do_oret>:
    efce:	f3 0f 1e fa          	endbr64 
    efd2:	55                   	push   %rbp
    efd3:	48 89 e5             	mov    %rsp,%rbp
    efd6:	48 83 ec 30          	sub    $0x30,%rsp
    efda:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    efde:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    efe5:	00 00 
    efe7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    efeb:	31 c0                	xor    %eax,%eax
    efed:	e8 94 01 02 00       	call   2f186 <get_thread_data>
    eff2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    eff6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    effa:	48 8b 40 08          	mov    0x8(%rax),%rax
    effe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f006:	48 8b 40 08          	mov    0x8(%rax),%rax
    f00a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f00e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f013:	74 0a                	je     f01f <do_oret+0x51>
    f015:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f019:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    f01d:	77 0a                	ja     f029 <do_oret+0x5b>
    f01f:	b8 01 00 00 00       	mov    $0x1,%eax
    f024:	e9 87 00 00 00       	jmp    f0b0 <do_oret+0xe2>
    f029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f02d:	48 8b 40 10          	mov    0x10(%rax),%rax
    f031:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    f037:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    f03b:	76 07                	jbe    f044 <do_oret+0x76>
    f03d:	b8 01 00 00 00       	mov    $0x1,%eax
    f042:	eb 6c                	jmp    f0b0 <do_oret+0xe2>
    f044:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f048:	48 8b 40 20          	mov    0x20(%rax),%rax
    f04c:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    f052:	74 07                	je     f05b <do_oret+0x8d>
    f054:	b8 01 00 00 00       	mov    $0x1,%eax
    f059:	eb 55                	jmp    f0b0 <do_oret+0xe2>
    f05b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f05f:	48 8b 50 30          	mov    0x30(%rax),%rdx
    f063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f067:	48 8b 40 10          	mov    0x10(%rax),%rax
    f06b:	48 39 c2             	cmp    %rax,%rdx
    f06e:	77 11                	ja     f081 <do_oret+0xb3>
    f070:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f074:	48 8b 40 30          	mov    0x30(%rax),%rax
    f078:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f07c:	48 39 d0             	cmp    %rdx,%rax
    f07f:	77 07                	ja     f088 <do_oret+0xba>
    f081:	b8 01 00 00 00       	mov    $0x1,%eax
    f086:	eb 28                	jmp    f0b0 <do_oret+0xe2>
    f088:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f08c:	48 8b 50 30          	mov    0x30(%rax),%rdx
    f090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f094:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f098:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f09c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0a0:	48 89 d6             	mov    %rdx,%rsi
    f0a3:	48 89 c7             	mov    %rax,%rdi
    f0a6:	e8 3b 03 02 00       	call   2f3e6 <asm_oret>
    f0ab:	b8 01 00 00 00       	mov    $0x1,%eax
    f0b0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f0b4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    f0bb:	00 00 
    f0bd:	74 05                	je     f0c4 <do_oret+0xf6>
    f0bf:	e8 c3 21 01 00       	call   21287 <__stack_chk_fail>
    f0c4:	c9                   	leave  
    f0c5:	c3                   	ret    

000000000000f0c6 <get_enclave_size>:
    f0c6:	f3 0f 1e fa          	endbr64 
    f0ca:	55                   	push   %rbp
    f0cb:	48 89 e5             	mov    %rsp,%rbp
    f0ce:	48 8d 05 6b 2e 02 00 	lea    0x22e6b(%rip),%rax        # 31f40 <g_global_data>
    f0d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    f0d9:	5d                   	pop    %rbp
    f0da:	c3                   	ret    

000000000000f0db <get_enclave_end>:
    f0db:	f3 0f 1e fa          	endbr64 
    f0df:	55                   	push   %rbp
    f0e0:	48 89 e5             	mov    %rsp,%rbp
    f0e3:	e8 53 00 02 00       	call   2f13b <get_enclave_base>
    f0e8:	48 89 c2             	mov    %rax,%rdx
    f0eb:	48 8d 05 4e 2e 02 00 	lea    0x22e4e(%rip),%rax        # 31f40 <g_global_data>
    f0f2:	48 8b 40 08          	mov    0x8(%rax),%rax
    f0f6:	48 01 d0             	add    %rdx,%rax
    f0f9:	48 83 e8 01          	sub    $0x1,%rax
    f0fd:	5d                   	pop    %rbp
    f0fe:	c3                   	ret    

000000000000f0ff <get_heap_base>:
    f0ff:	f3 0f 1e fa          	endbr64 
    f103:	55                   	push   %rbp
    f104:	48 89 e5             	mov    %rsp,%rbp
    f107:	e8 2f 00 02 00       	call   2f13b <get_enclave_base>
    f10c:	48 89 c2             	mov    %rax,%rdx
    f10f:	48 8d 05 2a 2e 02 00 	lea    0x22e2a(%rip),%rax        # 31f40 <g_global_data>
    f116:	48 8b 40 10          	mov    0x10(%rax),%rax
    f11a:	48 01 d0             	add    %rdx,%rax
    f11d:	5d                   	pop    %rbp
    f11e:	c3                   	ret    

000000000000f11f <get_heap_size>:
    f11f:	f3 0f 1e fa          	endbr64 
    f123:	55                   	push   %rbp
    f124:	48 89 e5             	mov    %rsp,%rbp
    f127:	48 8d 05 12 2e 02 00 	lea    0x22e12(%rip),%rax        # 31f40 <g_global_data>
    f12e:	48 8b 40 18          	mov    0x18(%rax),%rax
    f132:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f136:	48 8d 05 b3 8c 02 00 	lea    0x28cb3(%rip),%rax        # 37df0 <EDMM_supported>
    f13d:	8b 00                	mov    (%rax),%eax
    f13f:	85 c0                	test   %eax,%eax
    f141:	74 6c                	je     f1af <get_heap_size+0x90>
    f143:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f14a:	48 8d 05 ef 2d 02 00 	lea    0x22def(%rip),%rax        # 31f40 <g_global_data>
    f151:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    f157:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    f15a:	0f 92 c0             	setb   %al
    f15d:	84 c0                	test   %al,%al
    f15f:	74 4e                	je     f1af <get_heap_size+0x90>
    f161:	48 8d 05 d8 2d 02 00 	lea    0x22dd8(%rip),%rax        # 31f40 <g_global_data>
    f168:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f16b:	48 83 c2 0a          	add    $0xa,%rdx
    f16f:	48 c1 e2 05          	shl    $0x5,%rdx
    f173:	48 01 d0             	add    %rdx,%rax
    f176:	0f b7 00             	movzwl (%rax),%eax
    f179:	66 83 f8 03          	cmp    $0x3,%ax
    f17d:	0f 94 c0             	sete   %al
    f180:	84 c0                	test   %al,%al
    f182:	74 25                	je     f1a9 <get_heap_size+0x8a>
    f184:	48 8d 05 b5 2d 02 00 	lea    0x22db5(%rip),%rax        # 31f40 <g_global_data>
    f18b:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f18e:	48 83 c2 0a          	add    $0xa,%rdx
    f192:	48 c1 e2 05          	shl    $0x5,%rdx
    f196:	48 01 d0             	add    %rdx,%rax
    f199:	48 83 c0 04          	add    $0x4,%rax
    f19d:	8b 00                	mov    (%rax),%eax
    f19f:	89 c0                	mov    %eax,%eax
    f1a1:	48 c1 e0 0c          	shl    $0xc,%rax
    f1a5:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    f1a9:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    f1ad:	eb 9b                	jmp    f14a <get_heap_size+0x2b>
    f1af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1b3:	5d                   	pop    %rbp
    f1b4:	c3                   	ret    

000000000000f1b5 <get_heap_min_size>:
    f1b5:	f3 0f 1e fa          	endbr64 
    f1b9:	55                   	push   %rbp
    f1ba:	48 89 e5             	mov    %rsp,%rbp
    f1bd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f1c4:	00 
    f1c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f1cc:	48 8d 05 6d 2d 02 00 	lea    0x22d6d(%rip),%rax        # 31f40 <g_global_data>
    f1d3:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    f1d9:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    f1dc:	0f 92 c0             	setb   %al
    f1df:	84 c0                	test   %al,%al
    f1e1:	74 50                	je     f233 <get_heap_min_size+0x7e>
    f1e3:	48 8d 05 56 2d 02 00 	lea    0x22d56(%rip),%rax        # 31f40 <g_global_data>
    f1ea:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f1ed:	48 83 c2 0a          	add    $0xa,%rdx
    f1f1:	48 c1 e2 05          	shl    $0x5,%rdx
    f1f5:	48 01 d0             	add    %rdx,%rax
    f1f8:	0f b7 00             	movzwl (%rax),%eax
    f1fb:	66 83 f8 01          	cmp    $0x1,%ax
    f1ff:	0f 94 c0             	sete   %al
    f202:	84 c0                	test   %al,%al
    f204:	74 27                	je     f22d <get_heap_min_size+0x78>
    f206:	48 8d 05 33 2d 02 00 	lea    0x22d33(%rip),%rax        # 31f40 <g_global_data>
    f20d:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f210:	48 83 c2 0a          	add    $0xa,%rdx
    f214:	48 c1 e2 05          	shl    $0x5,%rdx
    f218:	48 01 d0             	add    %rdx,%rax
    f21b:	48 83 c0 04          	add    $0x4,%rax
    f21f:	8b 00                	mov    (%rax),%eax
    f221:	89 c0                	mov    %eax,%eax
    f223:	48 c1 e0 0c          	shl    $0xc,%rax
    f227:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f22b:	eb 06                	jmp    f233 <get_heap_min_size+0x7e>
    f22d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    f231:	eb 99                	jmp    f1cc <get_heap_min_size+0x17>
    f233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f237:	5d                   	pop    %rbp
    f238:	c3                   	ret    

000000000000f239 <get_rsrv_base>:
    f239:	f3 0f 1e fa          	endbr64 
    f23d:	55                   	push   %rbp
    f23e:	48 89 e5             	mov    %rsp,%rbp
    f241:	e8 f5 fe 01 00       	call   2f13b <get_enclave_base>
    f246:	48 89 c2             	mov    %rax,%rdx
    f249:	48 8d 05 f0 2c 02 00 	lea    0x22cf0(%rip),%rax        # 31f40 <g_global_data>
    f250:	48 8b 40 20          	mov    0x20(%rax),%rax
    f254:	48 01 d0             	add    %rdx,%rax
    f257:	5d                   	pop    %rbp
    f258:	c3                   	ret    

000000000000f259 <get_rsrv_end>:
    f259:	f3 0f 1e fa          	endbr64 
    f25d:	55                   	push   %rbp
    f25e:	48 89 e5             	mov    %rsp,%rbp
    f261:	53                   	push   %rbx
    f262:	48 83 ec 08          	sub    $0x8,%rsp
    f266:	e8 ce ff ff ff       	call   f239 <get_rsrv_base>
    f26b:	48 89 c3             	mov    %rax,%rbx
    f26e:	e8 0e 00 00 00       	call   f281 <get_rsrv_size>
    f273:	48 01 d8             	add    %rbx,%rax
    f276:	48 83 e8 01          	sub    $0x1,%rax
    f27a:	48 83 c4 08          	add    $0x8,%rsp
    f27e:	5b                   	pop    %rbx
    f27f:	5d                   	pop    %rbp
    f280:	c3                   	ret    

000000000000f281 <get_rsrv_size>:
    f281:	f3 0f 1e fa          	endbr64 
    f285:	55                   	push   %rbp
    f286:	48 89 e5             	mov    %rsp,%rbp
    f289:	48 8d 05 b0 2c 02 00 	lea    0x22cb0(%rip),%rax        # 31f40 <g_global_data>
    f290:	48 8b 40 28          	mov    0x28(%rax),%rax
    f294:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f298:	48 8d 05 51 8b 02 00 	lea    0x28b51(%rip),%rax        # 37df0 <EDMM_supported>
    f29f:	8b 00                	mov    (%rax),%eax
    f2a1:	85 c0                	test   %eax,%eax
    f2a3:	74 6c                	je     f311 <get_rsrv_size+0x90>
    f2a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f2ac:	48 8d 05 8d 2c 02 00 	lea    0x22c8d(%rip),%rax        # 31f40 <g_global_data>
    f2b3:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    f2b9:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    f2bc:	0f 92 c0             	setb   %al
    f2bf:	84 c0                	test   %al,%al
    f2c1:	74 4e                	je     f311 <get_rsrv_size+0x90>
    f2c3:	48 8d 05 76 2c 02 00 	lea    0x22c76(%rip),%rax        # 31f40 <g_global_data>
    f2ca:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f2cd:	48 83 c2 0a          	add    $0xa,%rdx
    f2d1:	48 c1 e2 05          	shl    $0x5,%rdx
    f2d5:	48 01 d0             	add    %rdx,%rax
    f2d8:	0f b7 00             	movzwl (%rax),%eax
    f2db:	66 83 f8 16          	cmp    $0x16,%ax
    f2df:	0f 94 c0             	sete   %al
    f2e2:	84 c0                	test   %al,%al
    f2e4:	74 25                	je     f30b <get_rsrv_size+0x8a>
    f2e6:	48 8d 05 53 2c 02 00 	lea    0x22c53(%rip),%rax        # 31f40 <g_global_data>
    f2ed:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f2f0:	48 83 c2 0a          	add    $0xa,%rdx
    f2f4:	48 c1 e2 05          	shl    $0x5,%rdx
    f2f8:	48 01 d0             	add    %rdx,%rax
    f2fb:	48 83 c0 04          	add    $0x4,%rax
    f2ff:	8b 00                	mov    (%rax),%eax
    f301:	89 c0                	mov    %eax,%eax
    f303:	48 c1 e0 0c          	shl    $0xc,%rax
    f307:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    f30b:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    f30f:	eb 9b                	jmp    f2ac <get_rsrv_size+0x2b>
    f311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f315:	5d                   	pop    %rbp
    f316:	c3                   	ret    

000000000000f317 <get_rsrv_min_size>:
    f317:	f3 0f 1e fa          	endbr64 
    f31b:	55                   	push   %rbp
    f31c:	48 89 e5             	mov    %rsp,%rbp
    f31f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f326:	00 
    f327:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f32e:	48 8d 05 0b 2c 02 00 	lea    0x22c0b(%rip),%rax        # 31f40 <g_global_data>
    f335:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
    f33b:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    f33e:	0f 92 c0             	setb   %al
    f341:	84 c0                	test   %al,%al
    f343:	74 50                	je     f395 <get_rsrv_min_size+0x7e>
    f345:	48 8d 05 f4 2b 02 00 	lea    0x22bf4(%rip),%rax        # 31f40 <g_global_data>
    f34c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f34f:	48 83 c2 0a          	add    $0xa,%rdx
    f353:	48 c1 e2 05          	shl    $0x5,%rdx
    f357:	48 01 d0             	add    %rdx,%rax
    f35a:	0f b7 00             	movzwl (%rax),%eax
    f35d:	66 83 f8 14          	cmp    $0x14,%ax
    f361:	0f 94 c0             	sete   %al
    f364:	84 c0                	test   %al,%al
    f366:	74 27                	je     f38f <get_rsrv_min_size+0x78>
    f368:	48 8d 05 d1 2b 02 00 	lea    0x22bd1(%rip),%rax        # 31f40 <g_global_data>
    f36f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    f372:	48 83 c2 0a          	add    $0xa,%rdx
    f376:	48 c1 e2 05          	shl    $0x5,%rdx
    f37a:	48 01 d0             	add    %rdx,%rax
    f37d:	48 83 c0 04          	add    $0x4,%rax
    f381:	8b 00                	mov    (%rax),%eax
    f383:	89 c0                	mov    %eax,%eax
    f385:	48 c1 e0 0c          	shl    $0xc,%rax
    f389:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f38d:	eb 06                	jmp    f395 <get_rsrv_min_size+0x7e>
    f38f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    f393:	eb 99                	jmp    f32e <get_rsrv_min_size+0x17>
    f395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f399:	5d                   	pop    %rbp
    f39a:	c3                   	ret    

000000000000f39b <get_errno_addr>:
    f39b:	f3 0f 1e fa          	endbr64 
    f39f:	55                   	push   %rbp
    f3a0:	48 89 e5             	mov    %rsp,%rbp
    f3a3:	48 83 ec 10          	sub    $0x10,%rsp
    f3a7:	e8 da fd 01 00       	call   2f186 <get_thread_data>
    f3ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3b4:	48 83 c0 40          	add    $0x40,%rax
    f3b8:	c9                   	leave  
    f3b9:	c3                   	ret    

000000000000f3ba <feature_supported>:
    f3ba:	f3 0f 1e fa          	endbr64 
    f3be:	55                   	push   %rbp
    f3bf:	48 89 e5             	mov    %rsp,%rbp
    f3c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f3c6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    f3c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f3d8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    f3df:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f3e4:	75 07                	jne    f3ed <feature_supported+0x33>
    f3e6:	b8 00 00 00 00       	mov    $0x0,%eax
    f3eb:	eb 79                	jmp    f466 <feature_supported+0xac>
    f3ed:	8b 45 f0             	mov    -0x10(%rbp),%eax
    f3f0:	83 c0 01             	add    $0x1,%eax
    f3f3:	c1 e0 06             	shl    $0x6,%eax
    f3f6:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    f3f9:	72 27                	jb     f422 <feature_supported+0x68>
    f3fb:	8b 45 f0             	mov    -0x10(%rbp),%eax
    f3fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f405:	00 
    f406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f40a:	48 01 d0             	add    %rdx,%rax
    f40d:	48 8b 00             	mov    (%rax),%rax
    f410:	48 85 c0             	test   %rax,%rax
    f413:	79 07                	jns    f41c <feature_supported+0x62>
    f415:	b8 00 00 00 00       	mov    $0x0,%eax
    f41a:	eb 4a                	jmp    f466 <feature_supported+0xac>
    f41c:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    f420:	eb cb                	jmp    f3ed <feature_supported+0x33>
    f422:	8b 45 f0             	mov    -0x10(%rbp),%eax
    f425:	c1 e0 06             	shl    $0x6,%eax
    f428:	89 c2                	mov    %eax,%edx
    f42a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    f42d:	29 d0                	sub    %edx,%eax
    f42f:	89 45 f4             	mov    %eax,-0xc(%rbp)
    f432:	8b 45 f0             	mov    -0x10(%rbp),%eax
    f435:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f43c:	00 
    f43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f441:	48 01 d0             	add    %rdx,%rax
    f444:	48 8b 10             	mov    (%rax),%rdx
    f447:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f44a:	89 c1                	mov    %eax,%ecx
    f44c:	48 d3 ea             	shr    %cl,%rdx
    f44f:	48 89 d0             	mov    %rdx,%rax
    f452:	83 e0 01             	and    $0x1,%eax
    f455:	48 85 c0             	test   %rax,%rax
    f458:	74 07                	je     f461 <feature_supported+0xa7>
    f45a:	b8 01 00 00 00       	mov    $0x1,%eax
    f45f:	eb 05                	jmp    f466 <feature_supported+0xac>
    f461:	b8 00 00 00 00       	mov    $0x0,%eax
    f466:	5d                   	pop    %rbp
    f467:	c3                   	ret    

000000000000f468 <is_stack_addr>:
    f468:	f3 0f 1e fa          	endbr64 
    f46c:	55                   	push   %rbp
    f46d:	48 89 e5             	mov    %rsp,%rbp
    f470:	48 83 ec 30          	sub    $0x30,%rsp
    f474:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f478:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f47c:	e8 05 fd 01 00       	call   2f186 <get_thread_data>
    f481:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f485:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f489:	48 8b 40 10          	mov    0x10(%rax),%rax
    f48d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f491:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f495:	48 8b 40 18          	mov    0x18(%rax),%rax
    f499:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f49d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f4a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f4a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4ad:	48 01 d0             	add    %rdx,%rax
    f4b0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    f4b4:	77 22                	ja     f4d8 <is_stack_addr+0x70>
    f4b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4be:	48 01 d0             	add    %rdx,%rax
    f4c1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    f4c5:	72 11                	jb     f4d8 <is_stack_addr+0x70>
    f4c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f4cb:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    f4cf:	77 07                	ja     f4d8 <is_stack_addr+0x70>
    f4d1:	b8 01 00 00 00       	mov    $0x1,%eax
    f4d6:	eb 05                	jmp    f4dd <is_stack_addr+0x75>
    f4d8:	b8 00 00 00 00       	mov    $0x0,%eax
    f4dd:	c9                   	leave  
    f4de:	c3                   	ret    

000000000000f4df <is_valid_sp>:
    f4df:	f3 0f 1e fa          	endbr64 
    f4e3:	55                   	push   %rbp
    f4e4:	48 89 e5             	mov    %rsp,%rbp
    f4e7:	48 83 ec 10          	sub    $0x10,%rsp
    f4eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4f3:	83 e0 07             	and    $0x7,%eax
    f4f6:	48 85 c0             	test   %rax,%rax
    f4f9:	75 1c                	jne    f517 <is_valid_sp+0x38>
    f4fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4ff:	be 00 00 00 00       	mov    $0x0,%esi
    f504:	48 89 c7             	mov    %rax,%rdi
    f507:	e8 5c ff ff ff       	call   f468 <is_stack_addr>
    f50c:	84 c0                	test   %al,%al
    f50e:	74 07                	je     f517 <is_valid_sp+0x38>
    f510:	b8 01 00 00 00       	mov    $0x1,%eax
    f515:	eb 05                	jmp    f51c <is_valid_sp+0x3d>
    f517:	b8 00 00 00 00       	mov    $0x0,%eax
    f51c:	c9                   	leave  
    f51d:	c3                   	ret    

000000000000f51e <is_utility_thread>:
    f51e:	f3 0f 1e fa          	endbr64 
    f522:	55                   	push   %rbp
    f523:	48 89 e5             	mov    %rsp,%rbp
    f526:	48 83 ec 10          	sub    $0x10,%rsp
    f52a:	e8 57 fc 01 00       	call   2f186 <get_thread_data>
    f52f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f533:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f538:	74 17                	je     f551 <is_utility_thread+0x33>
    f53a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f53e:	48 8b 40 30          	mov    0x30(%rax),%rax
    f542:	83 e0 01             	and    $0x1,%eax
    f545:	48 85 c0             	test   %rax,%rax
    f548:	74 07                	je     f551 <is_utility_thread+0x33>
    f54a:	b8 01 00 00 00       	mov    $0x1,%eax
    f54f:	eb 05                	jmp    f556 <is_utility_thread+0x38>
    f551:	b8 00 00 00 00       	mov    $0x0,%eax
    f556:	c9                   	leave  
    f557:	c3                   	ret    

000000000000f558 <get_max_tcs_num>:
    f558:	f3 0f 1e fa          	endbr64 
    f55c:	55                   	push   %rbp
    f55d:	48 89 e5             	mov    %rsp,%rbp
    f560:	48 8d 05 89 88 02 00 	lea    0x28889(%rip),%rax        # 37df0 <EDMM_supported>
    f567:	8b 00                	mov    (%rax),%eax
    f569:	83 f8 01             	cmp    $0x1,%eax
    f56c:	75 0d                	jne    f57b <get_max_tcs_num+0x23>
    f56e:	48 8d 05 cb 29 02 00 	lea    0x229cb(%rip),%rax        # 31f40 <g_global_data>
    f575:	48 8b 40 40          	mov    0x40(%rax),%rax
    f579:	eb 0b                	jmp    f586 <get_max_tcs_num+0x2e>
    f57b:	48 8d 05 be 29 02 00 	lea    0x229be(%rip),%rax        # 31f40 <g_global_data>
    f582:	48 8b 40 48          	mov    0x48(%rax),%rax
    f586:	5d                   	pop    %rbp
    f587:	c3                   	ret    

000000000000f588 <is_pkru_enabled>:
    f588:	f3 0f 1e fa          	endbr64 
    f58c:	55                   	push   %rbp
    f58d:	48 89 e5             	mov    %rsp,%rbp
    f590:	48 83 ec 10          	sub    $0x10,%rsp
    f594:	e8 99 0b 00 00       	call   10132 <get_xfeature_state>
    f599:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5a1:	25 00 02 00 00       	and    $0x200,%eax
    f5a6:	48 85 c0             	test   %rax,%rax
    f5a9:	74 07                	je     f5b2 <is_pkru_enabled+0x2a>
    f5ab:	b8 01 00 00 00       	mov    $0x1,%eax
    f5b0:	eb 05                	jmp    f5b7 <is_pkru_enabled+0x2f>
    f5b2:	b8 00 00 00 00       	mov    $0x0,%eax
    f5b7:	c9                   	leave  
    f5b8:	c3                   	ret    

000000000000f5b9 <is_tcs_binding_mode>:
    f5b9:	f3 0f 1e fa          	endbr64 
    f5bd:	55                   	push   %rbp
    f5be:	48 89 e5             	mov    %rsp,%rbp
    f5c1:	48 8d 05 78 29 02 00 	lea    0x22978(%rip),%rax        # 31f40 <g_global_data>
    f5c8:	48 8b 40 38          	mov    0x38(%rax),%rax
    f5cc:	48 85 c0             	test   %rax,%rax
    f5cf:	0f 94 c0             	sete   %al
    f5d2:	5d                   	pop    %rbp
    f5d3:	c3                   	ret    

000000000000f5d4 <get_xsave_size>:
    f5d4:	f3 0f 1e fa          	endbr64 
    f5d8:	55                   	push   %rbp
    f5d9:	48 89 e5             	mov    %rsp,%rbp
    f5dc:	48 8d 05 5d 29 02 00 	lea    0x2295d(%rip),%rax        # 31f40 <g_global_data>
    f5e3:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    f5ea:	5d                   	pop    %rbp
    f5eb:	c3                   	ret    

000000000000f5ec <sgx_register_exception_handler>:
    f5ec:	f3 0f 1e fa          	endbr64 
    f5f0:	55                   	push   %rbp
    f5f1:	48 89 e5             	mov    %rsp,%rbp
    f5f4:	48 83 ec 30          	sub    $0x30,%rsp
    f5f8:	89 7d dc             	mov    %edi,-0x24(%rbp)
    f5fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f5ff:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f606:	00 00 
    f608:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f60c:	31 c0                	xor    %eax,%eax
    f60e:	48 8b 05 33 c1 04 00 	mov    0x4c133(%rip),%rax        # 5b748 <_ZL12g_veh_cookie>
    f615:	48 85 c0             	test   %rax,%rax
    f618:	0f 94 c0             	sete   %al
    f61b:	0f b6 c0             	movzbl %al,%eax
    f61e:	48 85 c0             	test   %rax,%rax
    f621:	74 66                	je     f689 <sgx_register_exception_handler+0x9d>
    f623:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f62a:	00 
    f62b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f62f:	be 08 00 00 00       	mov    $0x8,%esi
    f634:	48 89 c7             	mov    %rax,%rdi
    f637:	e8 4b de ff ff       	call   d487 <sgx_read_rand>
    f63c:	85 c0                	test   %eax,%eax
    f63e:	0f 95 c0             	setne  %al
    f641:	84 c0                	test   %al,%al
    f643:	74 0a                	je     f64f <sgx_register_exception_handler+0x63>
    f645:	b8 00 00 00 00       	mov    $0x0,%eax
    f64a:	e9 1a 01 00 00       	jmp    f769 <sgx_register_exception_handler+0x17d>
    f64f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f653:	48 85 c0             	test   %rax,%rax
    f656:	75 02                	jne    f65a <sgx_register_exception_handler+0x6e>
    f658:	eb d1                	jmp    f62b <sgx_register_exception_handler+0x3f>
    f65a:	48 8d 3d df c0 04 00 	lea    0x4c0df(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f661:	e8 c6 7a 00 00       	call   1712c <sgx_spin_lock>
    f666:	48 8b 05 db c0 04 00 	mov    0x4c0db(%rip),%rax        # 5b748 <_ZL12g_veh_cookie>
    f66d:	48 85 c0             	test   %rax,%rax
    f670:	75 0b                	jne    f67d <sgx_register_exception_handler+0x91>
    f672:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f676:	48 89 05 cb c0 04 00 	mov    %rax,0x4c0cb(%rip)        # 5b748 <_ZL12g_veh_cookie>
    f67d:	48 8d 3d bc c0 04 00 	lea    0x4c0bc(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f684:	e8 3e 7b 00 00       	call   171c7 <sgx_spin_unlock>
    f689:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f68d:	be 00 00 00 00       	mov    $0x0,%esi
    f692:	48 89 c7             	mov    %rax,%rdi
    f695:	e8 0d db ff ff       	call   d1a7 <sgx_is_within_enclave>
    f69a:	85 c0                	test   %eax,%eax
    f69c:	0f 94 c0             	sete   %al
    f69f:	84 c0                	test   %al,%al
    f6a1:	74 0a                	je     f6ad <sgx_register_exception_handler+0xc1>
    f6a3:	b8 00 00 00 00       	mov    $0x0,%eax
    f6a8:	e9 bc 00 00 00       	jmp    f769 <sgx_register_exception_handler+0x17d>
    f6ad:	bf 10 00 00 00       	mov    $0x10,%edi
    f6b2:	e8 00 de 00 00       	call   1d4b7 <dlmalloc>
    f6b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f6bb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f6c0:	75 0a                	jne    f6cc <sgx_register_exception_handler+0xe0>
    f6c2:	b8 00 00 00 00       	mov    $0x0,%eax
    f6c7:	e9 9d 00 00 00       	jmp    f769 <sgx_register_exception_handler+0x17d>
    f6cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f6d0:	48 8b 05 71 c0 04 00 	mov    0x4c071(%rip),%rax        # 5b748 <_ZL12g_veh_cookie>
    f6d7:	48 31 c2             	xor    %rax,%rdx
    f6da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f6de:	48 89 10             	mov    %rdx,(%rax)
    f6e1:	48 8d 3d 58 c0 04 00 	lea    0x4c058(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f6e8:	e8 3f 7a 00 00       	call   1712c <sgx_spin_lock>
    f6ed:	48 8b 05 44 c0 04 00 	mov    0x4c044(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f6f4:	48 85 c0             	test   %rax,%rax
    f6f7:	74 06                	je     f6ff <sgx_register_exception_handler+0x113>
    f6f9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    f6fd:	74 1c                	je     f71b <sgx_register_exception_handler+0x12f>
    f6ff:	48 8b 15 32 c0 04 00 	mov    0x4c032(%rip),%rdx        # 5b738 <_ZL12g_first_node>
    f706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f70a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f70e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f712:	48 89 05 1f c0 04 00 	mov    %rax,0x4c01f(%rip)        # 5b738 <_ZL12g_first_node>
    f719:	eb 3e                	jmp    f759 <sgx_register_exception_handler+0x16d>
    f71b:	48 8b 05 16 c0 04 00 	mov    0x4c016(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f722:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f726:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f72a:	48 8b 40 08          	mov    0x8(%rax),%rax
    f72e:	48 85 c0             	test   %rax,%rax
    f731:	74 0e                	je     f741 <sgx_register_exception_handler+0x155>
    f733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f737:	48 8b 40 08          	mov    0x8(%rax),%rax
    f73b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f73f:	eb e5                	jmp    f726 <sgx_register_exception_handler+0x13a>
    f741:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f745:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f74c:	00 
    f74d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f751:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f755:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f759:	48 8d 3d e0 bf 04 00 	lea    0x4bfe0(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f760:	e8 62 7a 00 00       	call   171c7 <sgx_spin_unlock>
    f765:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f769:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f76d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    f774:	00 00 
    f776:	74 05                	je     f77d <sgx_register_exception_handler+0x191>
    f778:	e8 0a 1b 01 00       	call   21287 <__stack_chk_fail>
    f77d:	c9                   	leave  
    f77e:	c3                   	ret    

000000000000f77f <sgx_unregister_exception_handler>:
    f77f:	f3 0f 1e fa          	endbr64 
    f783:	55                   	push   %rbp
    f784:	48 89 e5             	mov    %rsp,%rbp
    f787:	48 83 ec 20          	sub    $0x20,%rsp
    f78b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f78f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f794:	75 0a                	jne    f7a0 <sgx_unregister_exception_handler+0x21>
    f796:	b8 00 00 00 00       	mov    $0x0,%eax
    f79b:	e9 b3 00 00 00       	jmp    f853 <sgx_unregister_exception_handler+0xd4>
    f7a0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    f7a7:	48 8d 3d 92 bf 04 00 	lea    0x4bf92(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f7ae:	e8 79 79 00 00       	call   1712c <sgx_spin_lock>
    f7b3:	48 8b 05 7e bf 04 00 	mov    0x4bf7e(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f7ba:	48 85 c0             	test   %rax,%rax
    f7bd:	74 73                	je     f832 <sgx_unregister_exception_handler+0xb3>
    f7bf:	48 8b 05 72 bf 04 00 	mov    0x4bf72(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f7c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f7ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7ce:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f7d2:	75 18                	jne    f7ec <sgx_unregister_exception_handler+0x6d>
    f7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    f7dc:	48 89 05 55 bf 04 00 	mov    %rax,0x4bf55(%rip)        # 5b738 <_ZL12g_first_node>
    f7e3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    f7ea:	eb 46                	jmp    f832 <sgx_unregister_exception_handler+0xb3>
    f7ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    f7f4:	48 85 c0             	test   %rax,%rax
    f7f7:	74 39                	je     f832 <sgx_unregister_exception_handler+0xb3>
    f7f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7fd:	48 8b 40 08          	mov    0x8(%rax),%rax
    f801:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    f805:	75 1d                	jne    f824 <sgx_unregister_exception_handler+0xa5>
    f807:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f80b:	48 8b 40 08          	mov    0x8(%rax),%rax
    f80f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f817:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f81b:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    f822:	eb 0e                	jmp    f832 <sgx_unregister_exception_handler+0xb3>
    f824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f828:	48 8b 40 08          	mov    0x8(%rax),%rax
    f82c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f830:	eb ba                	jmp    f7ec <sgx_unregister_exception_handler+0x6d>
    f832:	48 8d 3d 07 bf 04 00 	lea    0x4bf07(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f839:	e8 89 79 00 00       	call   171c7 <sgx_spin_unlock>
    f83e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    f842:	74 0c                	je     f850 <sgx_unregister_exception_handler+0xd1>
    f844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f848:	48 89 c7             	mov    %rax,%rdi
    f84b:	e8 62 e7 00 00       	call   1dfb2 <dlfree>
    f850:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f853:	c9                   	leave  
    f854:	c3                   	ret    

000000000000f855 <internal_handle_exception>:
    f855:	f3 0f 1e fa          	endbr64 
    f859:	55                   	push   %rbp
    f85a:	48 89 e5             	mov    %rsp,%rbp
    f85d:	48 83 ec 60          	sub    $0x60,%rsp
    f861:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    f865:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f86c:	00 00 
    f86e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f872:	31 c0                	xor    %eax,%eax
    f874:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    f87b:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    f882:	00 
    f883:	e8 fe f8 01 00       	call   2f186 <get_thread_data>
    f888:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f88c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    f893:	00 
    f894:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    f89b:	00 
    f89c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    f8a3:	00 
    f8a4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f8ab:	00 
    f8ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8b0:	48 8b 40 60          	mov    0x60(%rax),%rax
    f8b4:	48 85 c0             	test   %rax,%rax
    f8b7:	0f 88 f5 01 00 00    	js     fab2 <internal_handle_exception+0x25d>
    f8bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8c1:	48 8b 40 60          	mov    0x60(%rax),%rax
    f8c5:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f8c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8cd:	48 89 50 60          	mov    %rdx,0x60(%rax)
    f8d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8d5:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
    f8db:	83 f8 0e             	cmp    $0xe,%eax
    f8de:	75 68                	jne    f948 <internal_handle_exception+0xf3>
    f8e0:	48 8b 05 69 be 04 00 	mov    0x4be69(%rip),%rax        # 5b750 <g_mm_pfhandler>
    f8e7:	48 85 c0             	test   %rax,%rax
    f8ea:	74 5c                	je     f948 <internal_handle_exception+0xf3>
    f8ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8f0:	48 8b 40 60          	mov    0x60(%rax),%rax
    f8f4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    f8f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8fc:	48 89 50 60          	mov    %rdx,0x60(%rax)
    f900:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f904:	48 05 98 00 00 00    	add    $0x98,%rax
    f90a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f90e:	48 8b 15 3b be 04 00 	mov    0x4be3b(%rip),%rdx        # 5b750 <g_mm_pfhandler>
    f915:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f919:	48 89 c7             	mov    %rax,%rdi
    f91c:	ff d2                	call   *%rdx
    f91e:	83 f8 ff             	cmp    $0xffffffff,%eax
    f921:	0f 94 c0             	sete   %al
    f924:	84 c0                	test   %al,%al
    f926:	74 0c                	je     f934 <internal_handle_exception+0xdf>
    f928:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f92c:	48 89 c7             	mov    %rax,%rdi
    f92f:	e8 0a fc 01 00       	call   2f53e <continue_execution>
    f934:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f938:	48 8b 40 60          	mov    0x60(%rax),%rax
    f93c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f940:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f944:	48 89 50 60          	mov    %rdx,0x60(%rax)
    f948:	48 8d 3d f1 bd 04 00 	lea    0x4bdf1(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f94f:	e8 d8 77 00 00       	call   1712c <sgx_spin_lock>
    f954:	48 8b 05 dd bd 04 00 	mov    0x4bddd(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f95b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f95f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    f964:	74 13                	je     f979 <internal_handle_exception+0x124>
    f966:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
    f96b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f96f:	48 8b 40 08          	mov    0x8(%rax),%rax
    f973:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f977:	eb e6                	jmp    f95f <internal_handle_exception+0x10a>
    f979:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    f97e:	75 24                	jne    f9a4 <internal_handle_exception+0x14f>
    f980:	48 8d 3d b9 bd 04 00 	lea    0x4bdb9(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f987:	e8 3b 78 00 00       	call   171c7 <sgx_spin_unlock>
    f98c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f990:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    f997:	ff 
    f998:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f99c:	48 89 c7             	mov    %rax,%rdi
    f99f:	e8 9a fb 01 00       	call   2f53e <continue_execution>
    f9a4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f9a8:	48 89 c7             	mov    %rax,%rdi
    f9ab:	e8 10 73 00 00       	call   16cc0 <alloca>
    f9b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f9b4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    f9b9:	0f 94 c0             	sete   %al
    f9bc:	84 c0                	test   %al,%al
    f9be:	74 11                	je     f9d1 <internal_handle_exception+0x17c>
    f9c0:	48 8d 3d 79 bd 04 00 	lea    0x4bd79(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    f9c7:	e8 fb 77 00 00       	call   171c7 <sgx_spin_unlock>
    f9cc:	e9 e5 00 00 00       	jmp    fab6 <internal_handle_exception+0x261>
    f9d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f9d5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f9d9:	48 8b 05 58 bd 04 00 	mov    0x4bd58(%rip),%rax        # 5b738 <_ZL12g_first_node>
    f9e0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f9e4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    f9e9:	74 21                	je     fa0c <internal_handle_exception+0x1b7>
    f9eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f9ef:	48 8b 10             	mov    (%rax),%rdx
    f9f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f9f6:	48 89 10             	mov    %rdx,(%rax)
    f9f9:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
    f9fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fa02:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa06:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fa0a:	eb d8                	jmp    f9e4 <internal_handle_exception+0x18f>
    fa0c:	48 8d 3d 2d bd 04 00 	lea    0x4bd2d(%rip),%rdi        # 5b740 <_ZL14g_handler_lock>
    fa13:	e8 af 77 00 00       	call   171c7 <sgx_spin_unlock>
    fa18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fa1c:	48 8b 40 60          	mov    0x60(%rax),%rax
    fa20:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    fa24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fa28:	48 89 50 60          	mov    %rdx,0x60(%rax)
    fa2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa30:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fa34:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    fa39:	74 38                	je     fa73 <internal_handle_exception+0x21e>
    fa3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fa3f:	48 8b 10             	mov    (%rax),%rdx
    fa42:	48 8b 05 ff bc 04 00 	mov    0x4bcff(%rip),%rax        # 5b748 <_ZL12g_veh_cookie>
    fa49:	48 31 d0             	xor    %rdx,%rax
    fa4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fa50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa54:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa58:	48 89 c7             	mov    %rax,%rdi
    fa5b:	ff d2                	call   *%rdx
    fa5d:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    fa60:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
    fa64:	74 0c                	je     fa72 <internal_handle_exception+0x21d>
    fa66:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
    fa6b:	48 83 6d c0 08       	subq   $0x8,-0x40(%rbp)
    fa70:	eb c2                	jmp    fa34 <internal_handle_exception+0x1df>
    fa72:	90                   	nop
    fa73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa77:	48 8b 40 20          	mov    0x20(%rax),%rax
    fa7b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fa7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fa83:	48 89 c7             	mov    %rax,%rdi
    fa86:	e8 54 fa ff ff       	call   f4df <is_valid_sp>
    fa8b:	83 f0 01             	xor    $0x1,%eax
    fa8e:	84 c0                	test   %al,%al
    fa90:	75 23                	jne    fab5 <internal_handle_exception+0x260>
    fa92:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
    fa96:	74 0c                	je     faa4 <internal_handle_exception+0x24f>
    fa98:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fa9c:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    faa3:	ff 
    faa4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    faa8:	48 89 c7             	mov    %rax,%rdi
    faab:	e8 8e fa 01 00       	call   2f53e <continue_execution>
    fab0:	eb 04                	jmp    fab6 <internal_handle_exception+0x261>
    fab2:	90                   	nop
    fab3:	eb 01                	jmp    fab6 <internal_handle_exception+0x261>
    fab5:	90                   	nop
    fab6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    faba:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    fac1:	ff 
    fac2:	e8 64 fa 01 00       	call   2f52b <abort>

000000000000fac7 <_ZL21expand_stack_by_pagesPvm>:
    fac7:	f3 0f 1e fa          	endbr64 
    facb:	55                   	push   %rbp
    facc:	48 89 e5             	mov    %rsp,%rbp
    facf:	48 83 ec 20          	sub    $0x20,%rsp
    fad3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fad7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fadb:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    fae2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    fae7:	74 07                	je     faf0 <_ZL21expand_stack_by_pagesPvm+0x29>
    fae9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    faee:	75 07                	jne    faf7 <_ZL21expand_stack_by_pagesPvm+0x30>
    faf0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    faf5:	eb 20                	jmp    fb17 <_ZL21expand_stack_by_pagesPvm+0x50>
    faf7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fafb:	48 c1 e0 0c          	shl    $0xc,%rax
    faff:	48 89 c2             	mov    %rax,%rdx
    fb02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb06:	48 89 d6             	mov    %rdx,%rsi
    fb09:	48 89 c7             	mov    %rax,%rdi
    fb0c:	e8 04 61 00 00       	call   15c15 <mm_commit>
    fb11:	89 45 fc             	mov    %eax,-0x4(%rbp)
    fb14:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fb17:	c9                   	leave  
    fb18:	c3                   	ret    

000000000000fb19 <trts_handle_exception>:
    fb19:	f3 0f 1e fa          	endbr64 
    fb1d:	55                   	push   %rbp
    fb1e:	48 89 e5             	mov    %rsp,%rbp
    fb21:	53                   	push   %rbx
    fb22:	48 83 ec 68          	sub    $0x68,%rsp
    fb26:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    fb2a:	e8 57 f6 01 00       	call   2f186 <get_thread_data>
    fb2f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fb33:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    fb3a:	00 
    fb3b:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    fb42:	00 
    fb43:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    fb4a:	00 
    fb4b:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    fb52:	00 
    fb53:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    fb58:	0f 84 ae 05 00 00    	je     1010c <trts_handle_exception+0x5f3>
    fb5e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    fb63:	0f 84 a3 05 00 00    	je     1010c <trts_handle_exception+0x5f3>
    fb69:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fb6d:	48 89 c7             	mov    %rax,%rdi
    fb70:	e8 2f da ff ff       	call   d5a4 <check_static_stack_canary>
    fb75:	85 c0                	test   %eax,%eax
    fb77:	0f 95 c0             	setne  %al
    fb7a:	84 c0                	test   %al,%al
    fb7c:	0f 85 8d 05 00 00    	jne    1010f <trts_handle_exception+0x5f6>
    fb82:	e8 c0 f5 01 00       	call   2f147 <get_enclave_state>
    fb87:	83 f8 02             	cmp    $0x2,%eax
    fb8a:	0f 95 c0             	setne  %al
    fb8d:	84 c0                	test   %al,%al
    fb8f:	0f 85 7d 05 00 00    	jne    10112 <trts_handle_exception+0x5f9>
    fb95:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fb99:	48 8b 40 60          	mov    0x60(%rax),%rax
    fb9d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    fba1:	0f 84 6e 05 00 00    	je     10115 <trts_handle_exception+0x5fc>
    fba7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fbab:	48 8b 40 10          	mov    0x10(%rax),%rax
    fbaf:	48 05 00 04 01 00    	add    $0x10400,%rax
    fbb5:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    fbb9:	75 31                	jne    fbec <trts_handle_exception+0xd3>
    fbbb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fbbf:	48 8b 40 20          	mov    0x20(%rax),%rax
    fbc3:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    fbc9:	48 89 c3             	mov    %rax,%rbx
    fbcc:	e8 03 fa ff ff       	call   f5d4 <get_xsave_size>
    fbd1:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    fbd7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    fbdd:	48 29 c3             	sub    %rax,%rbx
    fbe0:	48 89 da             	mov    %rbx,%rdx
    fbe3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fbe7:	48 39 c2             	cmp    %rax,%rdx
    fbea:	74 07                	je     fbf3 <trts_handle_exception+0xda>
    fbec:	b8 01 00 00 00       	mov    $0x1,%eax
    fbf1:	eb 05                	jmp    fbf8 <trts_handle_exception+0xdf>
    fbf3:	b8 00 00 00 00       	mov    $0x0,%eax
    fbf8:	84 c0                	test   %al,%al
    fbfa:	0f 85 18 05 00 00    	jne    10118 <trts_handle_exception+0x5ff>
    fc00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fc04:	48 8b 40 20          	mov    0x20(%rax),%rax
    fc08:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    fc0c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fc10:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    fc17:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fc1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc1f:	be 08 00 00 00       	mov    $0x8,%esi
    fc24:	48 89 c7             	mov    %rax,%rdi
    fc27:	e8 12 d6 ff ff       	call   d23e <sgx_is_outside_enclave>
    fc2c:	85 c0                	test   %eax,%eax
    fc2e:	0f 94 c0             	sete   %al
    fc31:	84 c0                	test   %al,%al
    fc33:	74 14                	je     fc49 <trts_handle_exception+0x130>
    fc35:	bf 03 00 00 00       	mov    $0x3,%edi
    fc3a:	e8 19 f5 01 00       	call   2f158 <set_enclave_state>
    fc3f:	b8 09 10 00 00       	mov    $0x1009,%eax
    fc44:	e9 e2 04 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fc49:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fc4d:	48 8b 40 20          	mov    0x20(%rax),%rax
    fc51:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fc55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc59:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    fc5d:	75 14                	jne    fc73 <trts_handle_exception+0x15a>
    fc5f:	bf 03 00 00 00       	mov    $0x3,%edi
    fc64:	e8 ef f4 01 00       	call   2f158 <set_enclave_state>
    fc69:	b8 09 10 00 00       	mov    $0x1009,%eax
    fc6e:	e9 b8 04 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fc73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fc77:	be 00 00 00 00       	mov    $0x0,%esi
    fc7c:	48 89 c7             	mov    %rax,%rdi
    fc7f:	e8 e4 f7 ff ff       	call   f468 <is_stack_addr>
    fc84:	83 f0 01             	xor    $0x1,%eax
    fc87:	84 c0                	test   %al,%al
    fc89:	74 14                	je     fc9f <trts_handle_exception+0x186>
    fc8b:	bf 03 00 00 00       	mov    $0x3,%edi
    fc90:	e8 c3 f4 01 00       	call   2f158 <set_enclave_state>
    fc95:	b8 09 10 00 00       	mov    $0x1009,%eax
    fc9a:	e9 8c 04 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fc9f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    fca6:	00 
    fca7:	48 83 6d c8 80       	subq   $0xffffffffffffff80,-0x38(%rbp)
    fcac:	48 81 45 c8 a8 00 00 	addq   $0xa8,-0x38(%rbp)
    fcb3:	00 
    fcb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fcb8:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
    fcbc:	48 83 65 d8 f0       	andq   $0xfffffffffffffff0,-0x28(%rbp)
    fcc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fcc9:	48 89 d6             	mov    %rdx,%rsi
    fccc:	48 89 c7             	mov    %rax,%rdi
    fccf:	e8 94 f7 ff ff       	call   f468 <is_stack_addr>
    fcd4:	83 f0 01             	xor    $0x1,%eax
    fcd7:	84 c0                	test   %al,%al
    fcd9:	74 14                	je     fcef <trts_handle_exception+0x1d6>
    fcdb:	bf 03 00 00 00       	mov    $0x3,%edi
    fce0:	e8 73 f4 01 00       	call   2f158 <set_enclave_state>
    fce5:	b8 09 10 00 00       	mov    $0x1009,%eax
    fcea:	e9 3c 04 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fcef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcf3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fcf7:	48 c7 45 c8 08 00 00 	movq   $0x8,-0x38(%rbp)
    fcfe:	00 
    fcff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fd03:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
    fd07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd0b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fd0f:	48 89 d6             	mov    %rdx,%rsi
    fd12:	48 89 c7             	mov    %rax,%rdi
    fd15:	e8 4e f7 ff ff       	call   f468 <is_stack_addr>
    fd1a:	83 f0 01             	xor    $0x1,%eax
    fd1d:	84 c0                	test   %al,%al
    fd1f:	74 14                	je     fd35 <trts_handle_exception+0x21c>
    fd21:	bf 03 00 00 00       	mov    $0x3,%edi
    fd26:	e8 2d f4 01 00       	call   2f158 <set_enclave_state>
    fd2b:	b8 09 10 00 00       	mov    $0x1009,%eax
    fd30:	e9 f6 03 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fd35:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fd39:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    fd40:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    fd44:	0f 83 c4 00 00 00    	jae    fe0e <trts_handle_exception+0x2f5>
    fd4a:	c7 45 a4 ff ff ff ff 	movl   $0xffffffff,-0x5c(%rbp)
    fd51:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    fd58:	00 
    fd59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fd5d:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    fd64:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    fd68:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    fd6e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    fd74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fd78:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fd7c:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    fd83:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    fd87:	73 44                	jae    fdcd <trts_handle_exception+0x2b4>
    fd89:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fd8d:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    fd94:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fd98:	48 89 c2             	mov    %rax,%rdx
    fd9b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fd9f:	48 8b 40 18          	mov    0x18(%rax),%rax
    fda3:	48 39 c2             	cmp    %rax,%rdx
    fda6:	72 25                	jb     fdcd <trts_handle_exception+0x2b4>
    fda8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdac:	48 c1 e8 0c          	shr    $0xc,%rax
    fdb0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    fdb4:	48 8b 92 98 00 00 00 	mov    0x98(%rdx),%rdx
    fdbb:	48 2b 55 e8          	sub    -0x18(%rbp),%rdx
    fdbf:	48 89 c6             	mov    %rax,%rsi
    fdc2:	48 89 d7             	mov    %rdx,%rdi
    fdc5:	e8 fd fc ff ff       	call   fac7 <_ZL21expand_stack_by_pagesPvm>
    fdca:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    fdcd:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    fdd1:	75 27                	jne    fdfa <trts_handle_exception+0x2e1>
    fdd3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fdd7:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    fdde:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fde2:	48 89 c2             	mov    %rax,%rdx
    fde5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fde9:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    fdf0:	b8 00 00 00 00       	mov    $0x0,%eax
    fdf5:	e9 31 03 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fdfa:	bf 03 00 00 00       	mov    $0x3,%edi
    fdff:	e8 54 f3 01 00       	call   2f158 <set_enclave_state>
    fe04:	b8 09 10 00 00       	mov    $0x1009,%eax
    fe09:	e9 1d 03 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fe0e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe12:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    fe19:	48 8d 15 69 f6 01 00 	lea    0x1f669(%rip),%rdx        # 2f489 <Lereport_inst>
    fe20:	48 39 d0             	cmp    %rdx,%rax
    fe23:	75 4d                	jne    fe72 <trts_handle_exception+0x359>
    fe25:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe29:	48 8b 00             	mov    (%rax),%rax
    fe2c:	48 85 c0             	test   %rax,%rax
    fe2f:	75 41                	jne    fe72 <trts_handle_exception+0x359>
    fe31:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe35:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    fe3c:	48 8d 50 03          	lea    0x3(%rax),%rdx
    fe40:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe44:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    fe4b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe4f:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    fe56:	48 83 c8 01          	or     $0x1,%rax
    fe5a:	48 89 c2             	mov    %rax,%rdx
    fe5d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe61:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    fe68:	b8 00 00 00 00       	mov    $0x0,%eax
    fe6d:	e9 b9 02 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fe72:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe76:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    fe7d:	48 8d 15 23 f6 01 00 	lea    0x1f623(%rip),%rdx        # 2f4a7 <Leverifyreport2_inst>
    fe84:	48 39 d0             	cmp    %rdx,%rax
    fe87:	75 59                	jne    fee2 <trts_handle_exception+0x3c9>
    fe89:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe8d:	48 8b 00             	mov    (%rax),%rax
    fe90:	48 83 f8 08          	cmp    $0x8,%rax
    fe94:	75 4c                	jne    fee2 <trts_handle_exception+0x3c9>
    fe96:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fe9a:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    fea1:	48 8d 50 03          	lea    0x3(%rax),%rdx
    fea5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fea9:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    feb0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    feb4:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    febb:	48 83 c8 40          	or     $0x40,%rax
    febf:	48 89 c2             	mov    %rax,%rdx
    fec2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fec6:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    fecd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fed1:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
    fed8:	b8 00 00 00 00       	mov    $0x0,%eax
    fedd:	e9 49 02 00 00       	jmp    1012b <trts_handle_exception+0x612>
    fee2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fee6:	0f b6 80 a3 00 00 00 	movzbl 0xa3(%rax),%eax
    feed:	83 e0 80             	and    $0xffffff80,%eax
    fef0:	84 c0                	test   %al,%al
    fef2:	0f 84 23 02 00 00    	je     1011b <trts_handle_exception+0x602>
    fef8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fefc:	0f b6 80 a0 00 00 00 	movzbl 0xa0(%rax),%eax
    ff03:	0f b6 d0             	movzbl %al,%edx
    ff06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff0a:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
    ff10:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff14:	0f b6 80 a1 00 00 00 	movzbl 0xa1(%rax),%eax
    ff1b:	83 e0 07             	and    $0x7,%eax
    ff1e:	0f b6 d0             	movzbl %al,%edx
    ff21:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff25:	89 90 94 00 00 00    	mov    %edx,0x94(%rax)
    ff2b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff2f:	48 8b 10             	mov    (%rax),%rdx
    ff32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff36:	48 89 10             	mov    %rdx,(%rax)
    ff39:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff3d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ff41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff45:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ff49:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff4d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ff51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff55:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ff59:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff5d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ff61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff65:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ff69:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff6d:	48 8b 50 20          	mov    0x20(%rax),%rdx
    ff71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff75:	48 89 50 20          	mov    %rdx,0x20(%rax)
    ff79:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff7d:	48 8b 50 28          	mov    0x28(%rax),%rdx
    ff81:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff85:	48 89 50 28          	mov    %rdx,0x28(%rax)
    ff89:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff8d:	48 8b 50 30          	mov    0x30(%rax),%rdx
    ff91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff95:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ff99:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff9d:	48 8b 50 38          	mov    0x38(%rax),%rdx
    ffa1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffa5:	48 89 50 38          	mov    %rdx,0x38(%rax)
    ffa9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffad:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    ffb4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffb8:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    ffbf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffc3:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    ffca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffce:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    ffd5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffd9:	48 8b 50 40          	mov    0x40(%rax),%rdx
    ffdd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffe1:	48 89 50 40          	mov    %rdx,0x40(%rax)
    ffe5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffe9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ffed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fff1:	48 89 50 48          	mov    %rdx,0x48(%rax)
    fff5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fff9:	48 8b 50 50          	mov    0x50(%rax),%rdx
    fffd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10001:	48 89 50 50          	mov    %rdx,0x50(%rax)
   10005:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10009:	48 8b 50 58          	mov    0x58(%rax),%rdx
   1000d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10011:	48 89 50 58          	mov    %rdx,0x58(%rax)
   10015:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10019:	48 8b 50 60          	mov    0x60(%rax),%rdx
   1001d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10021:	48 89 50 60          	mov    %rdx,0x60(%rax)
   10025:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10029:	48 8b 50 68          	mov    0x68(%rax),%rdx
   1002d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10031:	48 89 50 68          	mov    %rdx,0x68(%rax)
   10035:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10039:	48 8b 50 70          	mov    0x70(%rax),%rdx
   1003d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10041:	48 89 50 70          	mov    %rdx,0x70(%rax)
   10045:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10049:	48 8b 50 78          	mov    0x78(%rax),%rdx
   1004d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10051:	48 89 50 78          	mov    %rdx,0x78(%rax)
   10055:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10059:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   1005f:	83 f8 0e             	cmp    $0xe,%eax
   10062:	74 0f                	je     10073 <trts_handle_exception+0x55a>
   10064:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10068:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   1006e:	83 f8 0d             	cmp    $0xd,%eax
   10071:	75 2f                	jne    100a2 <trts_handle_exception+0x589>
   10073:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10077:	48 83 e8 10          	sub    $0x10,%rax
   1007b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1007f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10083:	48 8b 10             	mov    (%rax),%rdx
   10086:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1008a:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
   10091:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10095:	8b 50 08             	mov    0x8(%rax),%edx
   10098:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1009c:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
   100a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   100a6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   100aa:	48 8d 15 a4 f7 ff ff 	lea    -0x85c(%rip),%rdx        # f855 <internal_handle_exception>
   100b1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100b5:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   100bc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   100c0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100c4:	48 89 50 20          	mov    %rdx,0x20(%rax)
   100c8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   100cc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100d0:	48 89 10             	mov    %rdx,(%rax)
   100d3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   100d7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100db:	48 89 50 38          	mov    %rdx,0x38(%rax)
   100df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   100e3:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   100ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   100ee:	48 89 10             	mov    %rdx,(%rax)
   100f1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100f5:	0f b6 90 a3 00 00 00 	movzbl 0xa3(%rax),%edx
   100fc:	83 e2 7f             	and    $0x7f,%edx
   100ff:	88 90 a3 00 00 00    	mov    %dl,0xa3(%rax)
   10105:	b8 00 00 00 00       	mov    $0x0,%eax
   1010a:	eb 1f                	jmp    1012b <trts_handle_exception+0x612>
   1010c:	90                   	nop
   1010d:	eb 0d                	jmp    1011c <trts_handle_exception+0x603>
   1010f:	90                   	nop
   10110:	eb 0a                	jmp    1011c <trts_handle_exception+0x603>
   10112:	90                   	nop
   10113:	eb 07                	jmp    1011c <trts_handle_exception+0x603>
   10115:	90                   	nop
   10116:	eb 04                	jmp    1011c <trts_handle_exception+0x603>
   10118:	90                   	nop
   10119:	eb 01                	jmp    1011c <trts_handle_exception+0x603>
   1011b:	90                   	nop
   1011c:	bf 03 00 00 00       	mov    $0x3,%edi
   10121:	e8 32 f0 01 00       	call   2f158 <set_enclave_state>
   10126:	b8 06 10 00 00       	mov    $0x1006,%eax
   1012b:	48 83 c4 68          	add    $0x68,%rsp
   1012f:	5b                   	pop    %rbx
   10130:	5d                   	pop    %rbp
   10131:	c3                   	ret    

0000000000010132 <get_xfeature_state>:
   10132:	f3 0f 1e fa          	endbr64 
   10136:	55                   	push   %rbp
   10137:	48 89 e5             	mov    %rsp,%rbp
   1013a:	48 83 ec 10          	sub    $0x10,%rsp
   1013e:	e8 84 e5 01 00       	call   2e6c7 <sgx_self_report>
   10143:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10147:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1014b:	48 8b 40 38          	mov    0x38(%rax),%rax
   1014f:	48 83 f8 03          	cmp    $0x3,%rax
   10153:	0f 95 c0             	setne  %al
   10156:	0f b6 c0             	movzbl %al,%eax
   10159:	89 05 a5 9e 04 00    	mov    %eax,0x49ea5(%rip)        # 5a004 <g_xsave_enabled>
   1015f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10163:	48 8b 40 38          	mov    0x38(%rax),%rax
   10167:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1016b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1016f:	c9                   	leave  
   10170:	c3                   	ret    

0000000000010171 <get_phdr>:
   10171:	f3 0f 1e fa          	endbr64 
   10175:	55                   	push   %rbp
   10176:	48 89 e5             	mov    %rsp,%rbp
   10179:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1017d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10182:	75 07                	jne    1018b <get_phdr+0x1a>
   10184:	b8 00 00 00 00       	mov    $0x0,%eax
   10189:	eb 5a                	jmp    101e5 <get_phdr+0x74>
   1018b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1018f:	0f b6 00             	movzbl (%rax),%eax
   10192:	3c 7f                	cmp    $0x7f,%al
   10194:	75 24                	jne    101ba <get_phdr+0x49>
   10196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1019a:	0f b6 40 01          	movzbl 0x1(%rax),%eax
   1019e:	3c 45                	cmp    $0x45,%al
   101a0:	75 18                	jne    101ba <get_phdr+0x49>
   101a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101a6:	0f b6 40 02          	movzbl 0x2(%rax),%eax
   101aa:	3c 4c                	cmp    $0x4c,%al
   101ac:	75 0c                	jne    101ba <get_phdr+0x49>
   101ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b2:	0f b6 40 03          	movzbl 0x3(%rax),%eax
   101b6:	3c 46                	cmp    $0x46,%al
   101b8:	74 07                	je     101c1 <get_phdr+0x50>
   101ba:	b8 00 00 00 00       	mov    $0x0,%eax
   101bf:	eb 24                	jmp    101e5 <get_phdr+0x74>
   101c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101c5:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   101c9:	66 83 f8 03          	cmp    $0x3,%ax
   101cd:	74 07                	je     101d6 <get_phdr+0x65>
   101cf:	b8 00 00 00 00       	mov    $0x0,%eax
   101d4:	eb 0f                	jmp    101e5 <get_phdr+0x74>
   101d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101da:	48 8b 50 20          	mov    0x20(%rax),%rdx
   101de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101e2:	48 01 d0             	add    %rdx,%rax
   101e5:	5d                   	pop    %rbp
   101e6:	c3                   	ret    

00000000000101e7 <get_sym>:
   101e7:	f3 0f 1e fa          	endbr64 
   101eb:	55                   	push   %rbp
   101ec:	48 89 e5             	mov    %rsp,%rbp
   101ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   101f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   101fb:	48 89 d0             	mov    %rdx,%rax
   101fe:	48 01 c0             	add    %rax,%rax
   10201:	48 01 d0             	add    %rdx,%rax
   10204:	48 c1 e0 03          	shl    $0x3,%rax
   10208:	48 89 c2             	mov    %rax,%rdx
   1020b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1020f:	48 01 d0             	add    %rdx,%rax
   10212:	0f b6 40 04          	movzbl 0x4(%rax),%eax
   10216:	c0 e8 04             	shr    $0x4,%al
   10219:	3c 02                	cmp    $0x2,%al
   1021b:	75 2b                	jne    10248 <get_sym+0x61>
   1021d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10221:	48 89 d0             	mov    %rdx,%rax
   10224:	48 01 c0             	add    %rax,%rax
   10227:	48 01 d0             	add    %rdx,%rax
   1022a:	48 c1 e0 03          	shl    $0x3,%rax
   1022e:	48 89 c2             	mov    %rax,%rdx
   10231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10235:	48 01 d0             	add    %rdx,%rax
   10238:	48 8b 40 08          	mov    0x8(%rax),%rax
   1023c:	48 85 c0             	test   %rax,%rax
   1023f:	75 07                	jne    10248 <get_sym+0x61>
   10241:	b8 00 00 00 00       	mov    $0x0,%eax
   10246:	eb 1b                	jmp    10263 <get_sym+0x7c>
   10248:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1024c:	48 89 d0             	mov    %rdx,%rax
   1024f:	48 01 c0             	add    %rax,%rax
   10252:	48 01 d0             	add    %rdx,%rax
   10255:	48 c1 e0 03          	shl    $0x3,%rax
   10259:	48 89 c2             	mov    %rax,%rdx
   1025c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10260:	48 01 d0             	add    %rdx,%rax
   10263:	5d                   	pop    %rbp
   10264:	c3                   	ret    

0000000000010265 <do_relocs>:
   10265:	f3 0f 1e fa          	endbr64 
   10269:	55                   	push   %rbp
   1026a:	48 89 e5             	mov    %rsp,%rbp
   1026d:	48 83 ec 60          	sub    $0x60,%rsp
   10271:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10275:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   10279:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1027d:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   10281:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10288:	00 00 
   1028a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1028e:	31 c0                	xor    %eax,%eax
   10290:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   10294:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10298:	48 01 d0             	add    %rdx,%rax
   1029b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1029f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   102a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102a7:	48 01 d0             	add    %rdx,%rax
   102aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   102ae:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   102b5:	00 
   102b6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   102bd:	00 
   102be:	e9 a2 01 00 00       	jmp    10465 <do_relocs+0x200>
   102c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   102c7:	48 8b 10             	mov    (%rax),%rdx
   102ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102ce:	48 01 d0             	add    %rdx,%rax
   102d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   102d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   102d9:	48 8b 40 08          	mov    0x8(%rax),%rax
   102dd:	89 c0                	mov    %eax,%eax
   102df:	48 83 f8 12          	cmp    $0x12,%rax
   102e3:	0f 87 61 01 00 00    	ja     1044a <do_relocs+0x1e5>
   102e9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   102f0:	00 
   102f1:	48 8d 05 a0 0f 02 00 	lea    0x20fa0(%rip),%rax        # 31298 <__func__.2623+0x48>
   102f8:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   102fb:	48 98                	cltq   
   102fd:	48 8d 15 94 0f 02 00 	lea    0x20f94(%rip),%rdx        # 31298 <__func__.2623+0x48>
   10304:	48 01 d0             	add    %rdx,%rax
   10307:	3e ff e0             	notrack jmp *%rax
   1030a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1030e:	48 8b 40 10          	mov    0x10(%rax),%rax
   10312:	48 89 c2             	mov    %rax,%rdx
   10315:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10319:	48 01 c2             	add    %rax,%rdx
   1031c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10320:	48 89 10             	mov    %rdx,(%rax)
   10323:	e9 33 01 00 00       	jmp    1045b <do_relocs+0x1f6>
   10328:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1032c:	48 8b 40 08          	mov    0x8(%rax),%rax
   10330:	48 c1 e8 20          	shr    $0x20,%rax
   10334:	48 89 c2             	mov    %rax,%rdx
   10337:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1033b:	48 89 d6             	mov    %rdx,%rsi
   1033e:	48 89 c7             	mov    %rax,%rdi
   10341:	e8 a1 fe ff ff       	call   101e7 <get_sym>
   10346:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1034a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1034f:	0f 84 ff 00 00 00    	je     10454 <do_relocs+0x1ef>
   10355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10359:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1035d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10361:	48 01 c2             	add    %rax,%rdx
   10364:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10368:	48 8b 40 10          	mov    0x10(%rax),%rax
   1036c:	48 01 c2             	add    %rax,%rdx
   1036f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10373:	48 89 10             	mov    %rdx,(%rax)
   10376:	e9 e0 00 00 00       	jmp    1045b <do_relocs+0x1f6>
   1037b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1037f:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   10386:	e9 d0 00 00 00       	jmp    1045b <do_relocs+0x1f6>
   1038b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1038f:	48 8b 40 08          	mov    0x8(%rax),%rax
   10393:	48 c1 e8 20          	shr    $0x20,%rax
   10397:	48 89 c2             	mov    %rax,%rdx
   1039a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1039e:	48 89 d6             	mov    %rdx,%rsi
   103a1:	48 89 c7             	mov    %rax,%rdi
   103a4:	e8 3e fe ff ff       	call   101e7 <get_sym>
   103a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   103ad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   103b2:	0f 84 9f 00 00 00    	je     10457 <do_relocs+0x1f2>
   103b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103bc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   103c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103c4:	48 8b 40 10          	mov    0x10(%rax),%rax
   103c8:	48 01 c2             	add    %rax,%rdx
   103cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103cf:	48 89 10             	mov    %rdx,(%rax)
   103d2:	e9 84 00 00 00       	jmp    1045b <do_relocs+0x1f6>
   103d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103db:	48 8b 40 08          	mov    0x8(%rax),%rax
   103df:	48 c1 e8 20          	shr    $0x20,%rax
   103e3:	48 89 c2             	mov    %rax,%rdx
   103e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   103ea:	48 89 d6             	mov    %rdx,%rsi
   103ed:	48 89 c7             	mov    %rax,%rdi
   103f0:	e8 f2 fd ff ff       	call   101e7 <get_sym>
   103f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   103f9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   103fe:	74 5a                	je     1045a <do_relocs+0x1f5>
   10400:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10404:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10408:	48 89 d6             	mov    %rdx,%rsi
   1040b:	48 89 c7             	mov    %rax,%rdi
   1040e:	e8 57 03 00 00       	call   1076a <elf_tls_aligned_virtual_size>
   10413:	85 c0                	test   %eax,%eax
   10415:	75 2c                	jne    10443 <do_relocs+0x1de>
   10417:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1041b:	48 85 c0             	test   %rax,%rax
   1041e:	74 23                	je     10443 <do_relocs+0x1de>
   10420:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10424:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10428:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1042c:	48 8b 40 10          	mov    0x10(%rax),%rax
   10430:	48 01 c2             	add    %rax,%rdx
   10433:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10437:	48 29 c2             	sub    %rax,%rdx
   1043a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1043e:	48 89 10             	mov    %rdx,(%rax)
   10441:	eb 18                	jmp    1045b <do_relocs+0x1f6>
   10443:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10448:	eb 2e                	jmp    10478 <do_relocs+0x213>
   1044a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1044f:	eb 27                	jmp    10478 <do_relocs+0x213>
   10451:	90                   	nop
   10452:	eb 07                	jmp    1045b <do_relocs+0x1f6>
   10454:	90                   	nop
   10455:	eb 04                	jmp    1045b <do_relocs+0x1f6>
   10457:	90                   	nop
   10458:	eb 01                	jmp    1045b <do_relocs+0x1f6>
   1045a:	90                   	nop
   1045b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   10460:	48 83 45 d0 18       	addq   $0x18,-0x30(%rbp)
   10465:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10469:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1046d:	0f 82 50 fe ff ff    	jb     102c3 <do_relocs+0x5e>
   10473:	b8 00 00 00 00       	mov    $0x0,%eax
   10478:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1047c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   10483:	00 00 
   10485:	74 05                	je     1048c <do_relocs+0x227>
   10487:	e8 fb 0d 01 00       	call   21287 <__stack_chk_fail>
   1048c:	c9                   	leave  
   1048d:	c3                   	ret    

000000000001048e <relocate_enclave>:
   1048e:	f3 0f 1e fa          	endbr64 
   10492:	55                   	push   %rbp
   10493:	48 89 e5             	mov    %rsp,%rbp
   10496:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   1049a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1049e:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
   104a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   104a9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   104ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   104b1:	48 89 c7             	mov    %rax,%rdi
   104b4:	e8 b8 fc ff ff       	call   10171 <get_phdr>
   104b9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   104bd:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   104c2:	0f 85 c3 01 00 00    	jne    1068b <relocate_enclave+0x1fd>
   104c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   104cd:	e9 d2 01 00 00       	jmp    106a4 <relocate_enclave+0x216>
   104d2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   104d6:	8b 00                	mov    (%rax),%eax
   104d8:	83 f8 02             	cmp    $0x2,%eax
   104db:	0f 85 a1 01 00 00    	jne    10682 <relocate_enclave+0x1f4>
   104e1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   104e5:	48 8b 40 20          	mov    0x20(%rax),%rax
   104e9:	48 c1 e8 04          	shr    $0x4,%rax
   104ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   104f1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   104f5:	48 8b 50 18          	mov    0x18(%rax),%rdx
   104f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   104fd:	48 01 d0             	add    %rdx,%rax
   10500:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10504:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   1050b:	00 
   1050c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   10513:	00 
   10514:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1051b:	00 
   1051c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   10523:	00 
   10524:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   1052b:	00 
   1052c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   10533:	00 
   10534:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   1053b:	00 
   1053c:	e9 9b 00 00 00       	jmp    105dc <relocate_enclave+0x14e>
   10541:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10545:	48 8b 00             	mov    (%rax),%rax
   10548:	48 85 c0             	test   %rax,%rax
   1054b:	0f 84 9b 00 00 00    	je     105ec <relocate_enclave+0x15e>
   10551:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10555:	48 8b 00             	mov    (%rax),%rax
   10558:	48 83 f8 17          	cmp    $0x17,%rax
   1055c:	77 74                	ja     105d2 <relocate_enclave+0x144>
   1055e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   10565:	00 
   10566:	48 8d 05 77 0d 02 00 	lea    0x20d77(%rip),%rax        # 312e4 <__func__.2623+0x94>
   1056d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   10570:	48 98                	cltq   
   10572:	48 8d 15 6b 0d 02 00 	lea    0x20d6b(%rip),%rdx        # 312e4 <__func__.2623+0x94>
   10579:	48 01 d0             	add    %rdx,%rax
   1057c:	3e ff e0             	notrack jmp *%rax
   1057f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10583:	48 8b 40 08          	mov    0x8(%rax),%rax
   10587:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1058b:	eb 45                	jmp    105d2 <relocate_enclave+0x144>
   1058d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10591:	48 8b 40 08          	mov    0x8(%rax),%rax
   10595:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10599:	eb 37                	jmp    105d2 <relocate_enclave+0x144>
   1059b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1059f:	48 8b 40 08          	mov    0x8(%rax),%rax
   105a3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   105a7:	eb 29                	jmp    105d2 <relocate_enclave+0x144>
   105a9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   105b1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   105b5:	eb 1b                	jmp    105d2 <relocate_enclave+0x144>
   105b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105bb:	48 8b 40 08          	mov    0x8(%rax),%rax
   105bf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   105c3:	eb 0d                	jmp    105d2 <relocate_enclave+0x144>
   105c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105c9:	48 8b 40 08          	mov    0x8(%rax),%rax
   105cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   105d1:	90                   	nop
   105d2:	48 83 45 a0 01       	addq   $0x1,-0x60(%rbp)
   105d7:	48 83 45 a8 10       	addq   $0x10,-0x58(%rbp)
   105dc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   105e0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   105e4:	0f 82 57 ff ff ff    	jb     10541 <relocate_enclave+0xb3>
   105ea:	eb 01                	jmp    105ed <relocate_enclave+0x15f>
   105ec:	90                   	nop
   105ed:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   105f2:	74 45                	je     10639 <relocate_enclave+0x1ab>
   105f4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   105f9:	75 0a                	jne    10605 <relocate_enclave+0x177>
   105fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10600:	e9 9f 00 00 00       	jmp    106a4 <relocate_enclave+0x216>
   10605:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10609:	ba 00 00 00 00       	mov    $0x0,%edx
   1060e:	48 f7 75 d0          	divq   -0x30(%rbp)
   10612:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10616:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1061a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1061e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10622:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   10626:	48 89 c7             	mov    %rax,%rdi
   10629:	e8 37 fc ff ff       	call   10265 <do_relocs>
   1062e:	85 c0                	test   %eax,%eax
   10630:	74 07                	je     10639 <relocate_enclave+0x1ab>
   10632:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10637:	eb 6b                	jmp    106a4 <relocate_enclave+0x216>
   10639:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1063e:	74 42                	je     10682 <relocate_enclave+0x1f4>
   10640:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   10645:	75 07                	jne    1064e <relocate_enclave+0x1c0>
   10647:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1064c:	eb 56                	jmp    106a4 <relocate_enclave+0x216>
   1064e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10652:	ba 00 00 00 00       	mov    $0x0,%edx
   10657:	48 f7 75 d0          	divq   -0x30(%rbp)
   1065b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1065f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10663:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10667:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1066b:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1066f:	48 89 c7             	mov    %rax,%rdi
   10672:	e8 ee fb ff ff       	call   10265 <do_relocs>
   10677:	85 c0                	test   %eax,%eax
   10679:	74 07                	je     10682 <relocate_enclave+0x1f4>
   1067b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10680:	eb 22                	jmp    106a4 <relocate_enclave+0x216>
   10682:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
   10686:	48 83 45 98 38       	addq   $0x38,-0x68(%rbp)
   1068b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1068f:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10693:	0f b7 c0             	movzwl %ax,%eax
   10696:	39 45 94             	cmp    %eax,-0x6c(%rbp)
   10699:	0f 82 33 fe ff ff    	jb     104d2 <relocate_enclave+0x44>
   1069f:	b8 00 00 00 00       	mov    $0x0,%eax
   106a4:	c9                   	leave  
   106a5:	c3                   	ret    

00000000000106a6 <elf_tls_info>:
   106a6:	f3 0f 1e fa          	endbr64 
   106aa:	55                   	push   %rbp
   106ab:	48 89 e5             	mov    %rsp,%rbp
   106ae:	48 83 ec 38          	sub    $0x38,%rsp
   106b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   106b6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   106ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   106be:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   106c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   106c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   106cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d1:	48 89 c7             	mov    %rax,%rdi
   106d4:	e8 98 fa ff ff       	call   10171 <get_phdr>
   106d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   106dd:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   106e2:	74 07                	je     106eb <elf_tls_info+0x45>
   106e4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   106e9:	75 07                	jne    106f2 <elf_tls_info+0x4c>
   106eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   106f0:	eb 76                	jmp    10768 <elf_tls_info+0xc2>
   106f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   106f7:	75 07                	jne    10700 <elf_tls_info+0x5a>
   106f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   106fe:	eb 68                	jmp    10768 <elf_tls_info+0xc2>
   10700:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10704:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1070b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1070f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10716:	eb 3b                	jmp    10753 <elf_tls_info+0xad>
   10718:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1071c:	8b 00                	mov    (%rax),%eax
   1071e:	83 f8 07             	cmp    $0x7,%eax
   10721:	75 27                	jne    1074a <elf_tls_info+0xa4>
   10723:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10727:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1072b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1072f:	48 01 c2             	add    %rax,%rdx
   10732:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10736:	48 89 10             	mov    %rdx,(%rax)
   10739:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1073d:	48 8b 50 20          	mov    0x20(%rax),%rdx
   10741:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10745:	48 89 10             	mov    %rdx,(%rax)
   10748:	eb 19                	jmp    10763 <elf_tls_info+0xbd>
   1074a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   1074e:	48 83 45 f0 38       	addq   $0x38,-0x10(%rbp)
   10753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10757:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1075b:	0f b7 c0             	movzwl %ax,%eax
   1075e:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   10761:	72 b5                	jb     10718 <elf_tls_info+0x72>
   10763:	b8 00 00 00 00       	mov    $0x0,%eax
   10768:	c9                   	leave  
   10769:	c3                   	ret    

000000000001076a <elf_tls_aligned_virtual_size>:
   1076a:	f3 0f 1e fa          	endbr64 
   1076e:	55                   	push   %rbp
   1076f:	48 89 e5             	mov    %rsp,%rbp
   10772:	48 83 ec 40          	sub    $0x40,%rsp
   10776:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1077a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1077e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   10785:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10789:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1078d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10791:	48 89 c7             	mov    %rax,%rdi
   10794:	e8 d8 f9 ff ff       	call   10171 <get_phdr>
   10799:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1079d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   107a4:	00 
   107a5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   107ac:	00 
   107ad:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   107b2:	75 0a                	jne    107be <elf_tls_aligned_virtual_size+0x54>
   107b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   107b9:	e9 9c 00 00 00       	jmp    1085a <elf_tls_aligned_virtual_size+0xf0>
   107be:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   107c3:	75 0a                	jne    107cf <elf_tls_aligned_virtual_size+0x65>
   107c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   107ca:	e9 8b 00 00 00       	jmp    1085a <elf_tls_aligned_virtual_size+0xf0>
   107cf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   107d3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   107da:	eb 69                	jmp    10845 <elf_tls_aligned_virtual_size+0xdb>
   107dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107e0:	8b 00                	mov    (%rax),%eax
   107e2:	83 f8 07             	cmp    $0x7,%eax
   107e5:	75 55                	jne    1083c <elf_tls_aligned_virtual_size+0xd2>
   107e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107eb:	48 8b 40 28          	mov    0x28(%rax),%rax
   107ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   107f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107f7:	48 8b 40 30          	mov    0x30(%rax),%rax
   107fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   107ff:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10804:	74 07                	je     1080d <elf_tls_aligned_virtual_size+0xa3>
   10806:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
   1080b:	75 0d                	jne    1081a <elf_tls_aligned_virtual_size+0xb0>
   1080d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10811:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10815:	48 89 10             	mov    %rdx,(%rax)
   10818:	eb 3b                	jmp    10855 <elf_tls_aligned_virtual_size+0xeb>
   1081a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1081e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10822:	48 01 d0             	add    %rdx,%rax
   10825:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   10829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1082d:	48 f7 d8             	neg    %rax
   10830:	48 21 c2             	and    %rax,%rdx
   10833:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10837:	48 89 10             	mov    %rdx,(%rax)
   1083a:	eb 19                	jmp    10855 <elf_tls_aligned_virtual_size+0xeb>
   1083c:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   10840:	48 83 45 e0 38       	addq   $0x38,-0x20(%rbp)
   10845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10849:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1084d:	0f b7 c0             	movzwl %ax,%eax
   10850:	39 45 dc             	cmp    %eax,-0x24(%rbp)
   10853:	72 87                	jb     107dc <elf_tls_aligned_virtual_size+0x72>
   10855:	b8 00 00 00 00       	mov    $0x0,%eax
   1085a:	c9                   	leave  
   1085b:	c3                   	ret    

000000000001085c <elf_get_init_array>:
   1085c:	f3 0f 1e fa          	endbr64 
   10860:	55                   	push   %rbp
   10861:	48 89 e5             	mov    %rsp,%rbp
   10864:	48 83 ec 48          	sub    $0x48,%rsp
   10868:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1086c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   10870:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   10874:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   1087b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1087f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10883:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10887:	48 89 c7             	mov    %rax,%rdi
   1088a:	e8 e2 f8 ff ff       	call   10171 <get_phdr>
   1088f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10893:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10898:	74 07                	je     108a1 <elf_get_init_array+0x45>
   1089a:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   1089f:	75 0a                	jne    108ab <elf_get_init_array+0x4f>
   108a1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   108a6:	e9 d0 00 00 00       	jmp    1097b <elf_get_init_array+0x11f>
   108ab:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   108b0:	75 0a                	jne    108bc <elf_get_init_array+0x60>
   108b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   108b7:	e9 bf 00 00 00       	jmp    1097b <elf_get_init_array+0x11f>
   108bc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   108c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   108c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   108cb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   108d2:	e9 8b 00 00 00       	jmp    10962 <elf_get_init_array+0x106>
   108d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108db:	8b 00                	mov    (%rax),%eax
   108dd:	83 f8 02             	cmp    $0x2,%eax
   108e0:	75 77                	jne    10959 <elf_get_init_array+0xfd>
   108e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108e6:	48 8b 40 20          	mov    0x20(%rax),%rax
   108ea:	48 c1 e8 04          	shr    $0x4,%rax
   108ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   108f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108f6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   108fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   108fe:	48 01 d0             	add    %rdx,%rax
   10901:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10905:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1090c:	00 
   1090d:	eb 40                	jmp    1094f <elf_get_init_array+0xf3>
   1090f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10913:	48 8b 00             	mov    (%rax),%rax
   10916:	48 83 f8 19          	cmp    $0x19,%rax
   1091a:	74 08                	je     10924 <elf_get_init_array+0xc8>
   1091c:	48 83 f8 1b          	cmp    $0x1b,%rax
   10920:	74 13                	je     10935 <elf_get_init_array+0xd9>
   10922:	eb 21                	jmp    10945 <elf_get_init_array+0xe9>
   10924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10928:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1092c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10930:	48 89 10             	mov    %rdx,(%rax)
   10933:	eb 10                	jmp    10945 <elf_get_init_array+0xe9>
   10935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10939:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1093d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10941:	48 89 10             	mov    %rdx,(%rax)
   10944:	90                   	nop
   10945:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   1094a:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
   1094f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10953:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   10957:	72 b6                	jb     1090f <elf_get_init_array+0xb3>
   10959:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   1095d:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   10962:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10966:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1096a:	0f b7 c0             	movzwl %ax,%eax
   1096d:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   10970:	0f 82 61 ff ff ff    	jb     108d7 <elf_get_init_array+0x7b>
   10976:	b8 00 00 00 00       	mov    $0x0,%eax
   1097b:	c9                   	leave  
   1097c:	c3                   	ret    

000000000001097d <elf_get_uninit_array>:
   1097d:	f3 0f 1e fa          	endbr64 
   10981:	55                   	push   %rbp
   10982:	48 89 e5             	mov    %rsp,%rbp
   10985:	48 83 ec 48          	sub    $0x48,%rsp
   10989:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1098d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   10991:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   10995:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   1099c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   109a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   109a8:	48 89 c7             	mov    %rax,%rdi
   109ab:	e8 c1 f7 ff ff       	call   10171 <get_phdr>
   109b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   109b4:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   109b9:	74 07                	je     109c2 <elf_get_uninit_array+0x45>
   109bb:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   109c0:	75 0a                	jne    109cc <elf_get_uninit_array+0x4f>
   109c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   109c7:	e9 d0 00 00 00       	jmp    10a9c <elf_get_uninit_array+0x11f>
   109cc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   109d1:	75 0a                	jne    109dd <elf_get_uninit_array+0x60>
   109d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   109d8:	e9 bf 00 00 00       	jmp    10a9c <elf_get_uninit_array+0x11f>
   109dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   109e1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   109e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109ec:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   109f3:	e9 8b 00 00 00       	jmp    10a83 <elf_get_uninit_array+0x106>
   109f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   109fc:	8b 00                	mov    (%rax),%eax
   109fe:	83 f8 02             	cmp    $0x2,%eax
   10a01:	75 77                	jne    10a7a <elf_get_uninit_array+0xfd>
   10a03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a07:	48 8b 40 20          	mov    0x20(%rax),%rax
   10a0b:	48 c1 e8 04          	shr    $0x4,%rax
   10a0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10a13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a17:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10a1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a1f:	48 01 d0             	add    %rdx,%rax
   10a22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10a26:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10a2d:	00 
   10a2e:	eb 40                	jmp    10a70 <elf_get_uninit_array+0xf3>
   10a30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a34:	48 8b 00             	mov    (%rax),%rax
   10a37:	48 83 f8 1a          	cmp    $0x1a,%rax
   10a3b:	74 08                	je     10a45 <elf_get_uninit_array+0xc8>
   10a3d:	48 83 f8 1c          	cmp    $0x1c,%rax
   10a41:	74 13                	je     10a56 <elf_get_uninit_array+0xd9>
   10a43:	eb 21                	jmp    10a66 <elf_get_uninit_array+0xe9>
   10a45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a49:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10a4d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10a51:	48 89 10             	mov    %rdx,(%rax)
   10a54:	eb 10                	jmp    10a66 <elf_get_uninit_array+0xe9>
   10a56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a5a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10a5e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a62:	48 89 10             	mov    %rdx,(%rax)
   10a65:	90                   	nop
   10a66:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   10a6b:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
   10a70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a74:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   10a78:	72 b6                	jb     10a30 <elf_get_uninit_array+0xb3>
   10a7a:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   10a7e:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   10a83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a87:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10a8b:	0f b7 c0             	movzwl %ax,%eax
   10a8e:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   10a91:	0f 82 61 ff ff ff    	jb     109f8 <elf_get_uninit_array+0x7b>
   10a97:	b8 00 00 00 00       	mov    $0x0,%eax
   10a9c:	c9                   	leave  
   10a9d:	c3                   	ret    

0000000000010a9e <has_text_relo>:
   10a9e:	f3 0f 1e fa          	endbr64 
   10aa2:	55                   	push   %rbp
   10aa3:	48 89 e5             	mov    %rsp,%rbp
   10aa6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10aaa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10aae:	89 55 cc             	mov    %edx,-0x34(%rbp)
   10ab1:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   10ab8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   10abf:	eb 7c                	jmp    10b3d <has_text_relo+0x9f>
   10ac1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ac5:	8b 00                	mov    (%rax),%eax
   10ac7:	83 f8 02             	cmp    $0x2,%eax
   10aca:	75 68                	jne    10b34 <has_text_relo+0x96>
   10acc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ad0:	48 8b 40 20          	mov    0x20(%rax),%rax
   10ad4:	48 c1 e8 04          	shr    $0x4,%rax
   10ad8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10adc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ae0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10ae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ae8:	48 01 d0             	add    %rdx,%rax
   10aeb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10aef:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10af6:	00 
   10af7:	eb 2c                	jmp    10b25 <has_text_relo+0x87>
   10af9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10afd:	48 8b 00             	mov    (%rax),%rax
   10b00:	48 85 c0             	test   %rax,%rax
   10b03:	74 2c                	je     10b31 <has_text_relo+0x93>
   10b05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b09:	48 8b 00             	mov    (%rax),%rax
   10b0c:	48 83 f8 16          	cmp    $0x16,%rax
   10b10:	75 09                	jne    10b1b <has_text_relo+0x7d>
   10b12:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
   10b19:	eb 17                	jmp    10b32 <has_text_relo+0x94>
   10b1b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   10b20:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
   10b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b29:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   10b2d:	72 ca                	jb     10af9 <has_text_relo+0x5b>
   10b2f:	eb 18                	jmp    10b49 <has_text_relo+0xab>
   10b31:	90                   	nop
   10b32:	eb 15                	jmp    10b49 <has_text_relo+0xab>
   10b34:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
   10b38:	48 83 45 d0 38       	addq   $0x38,-0x30(%rbp)
   10b3d:	8b 45 e0             	mov    -0x20(%rbp),%eax
   10b40:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   10b43:	0f 82 78 ff ff ff    	jb     10ac1 <has_text_relo+0x23>
   10b49:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   10b4c:	5d                   	pop    %rbp
   10b4d:	c3                   	ret    

0000000000010b4e <change_protection>:
   10b4e:	f3 0f 1e fa          	endbr64 
   10b52:	55                   	push   %rbp
   10b53:	48 89 e5             	mov    %rsp,%rbp
   10b56:	48 83 ec 60          	sub    $0x60,%rsp
   10b5a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   10b5e:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   10b65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10b69:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10b6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b71:	48 89 c7             	mov    %rax,%rdi
   10b74:	e8 f8 f5 ff ff       	call   10171 <get_phdr>
   10b79:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10b7d:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   10b84:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   10b89:	75 08                	jne    10b93 <change_protection+0x45>
   10b8b:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10b8e:	e9 80 02 00 00       	jmp    10e13 <change_protection+0x2c5>
   10b93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b97:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10b9b:	0f b7 d0             	movzwl %ax,%edx
   10b9e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   10ba2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ba6:	48 89 ce             	mov    %rcx,%rsi
   10ba9:	48 89 c7             	mov    %rax,%rdi
   10bac:	e8 ed fe ff ff       	call   10a9e <has_text_relo>
   10bb1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   10bb4:	e9 62 01 00 00       	jmp    10d1b <change_protection+0x1cd>
   10bb9:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   10bbd:	0f 84 c4 00 00 00    	je     10c87 <change_protection+0x139>
   10bc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bc7:	8b 00                	mov    (%rax),%eax
   10bc9:	83 f8 01             	cmp    $0x1,%eax
   10bcc:	0f 85 b5 00 00 00    	jne    10c87 <change_protection+0x139>
   10bd2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bd6:	8b 40 04             	mov    0x4(%rax),%eax
   10bd9:	83 e0 02             	and    $0x2,%eax
   10bdc:	85 c0                	test   %eax,%eax
   10bde:	0f 85 a3 00 00 00    	jne    10c87 <change_protection+0x139>
   10be4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   10beb:	00 
   10bec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bf0:	48 8b 40 10          	mov    0x10(%rax),%rax
   10bf4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10bfa:	48 89 c2             	mov    %rax,%rdx
   10bfd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10c01:	48 01 d0             	add    %rdx,%rax
   10c04:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10c08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c0c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10c10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c14:	48 8b 40 28          	mov    0x28(%rax),%rax
   10c18:	48 01 d0             	add    %rdx,%rax
   10c1b:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   10c21:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10c27:	48 89 c2             	mov    %rax,%rdx
   10c2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10c2e:	48 01 d0             	add    %rdx,%rax
   10c31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10c35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c39:	8b 40 04             	mov    0x4(%rax),%eax
   10c3c:	83 e0 04             	and    $0x4,%eax
   10c3f:	85 c0                	test   %eax,%eax
   10c41:	74 05                	je     10c48 <change_protection+0xfa>
   10c43:	48 83 4d d0 01       	orq    $0x1,-0x30(%rbp)
   10c48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c4c:	8b 40 04             	mov    0x4(%rax),%eax
   10c4f:	83 e0 01             	and    $0x1,%eax
   10c52:	85 c0                	test   %eax,%eax
   10c54:	74 05                	je     10c5b <change_protection+0x10d>
   10c56:	48 83 4d d0 04       	orq    $0x4,-0x30(%rbp)
   10c5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10c5f:	89 c2                	mov    %eax,%edx
   10c61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c65:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10c69:	48 89 c1             	mov    %rax,%rcx
   10c6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c70:	48 89 ce             	mov    %rcx,%rsi
   10c73:	48 89 c7             	mov    %rax,%rdi
   10c76:	e8 98 50 00 00       	call   15d13 <mm_modify_permissions>
   10c7b:	85 c0                	test   %eax,%eax
   10c7d:	74 08                	je     10c87 <change_protection+0x139>
   10c7f:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10c82:	e9 8c 01 00 00       	jmp    10e13 <change_protection+0x2c5>
   10c87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c8b:	8b 00                	mov    (%rax),%eax
   10c8d:	3d 52 e5 74 64       	cmp    $0x6474e552,%eax
   10c92:	75 7e                	jne    10d12 <change_protection+0x1c4>
   10c94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c98:	48 8b 40 10          	mov    0x10(%rax),%rax
   10c9c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10ca2:	48 89 c2             	mov    %rax,%rdx
   10ca5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10ca9:	48 01 d0             	add    %rdx,%rax
   10cac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10cb0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cb4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10cb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cbc:	48 8b 40 28          	mov    0x28(%rax),%rax
   10cc0:	48 01 d0             	add    %rdx,%rax
   10cc3:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   10cc9:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10ccf:	48 89 c2             	mov    %rax,%rdx
   10cd2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10cd6:	48 01 d0             	add    %rdx,%rax
   10cd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10cdd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ce1:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   10ce5:	74 2b                	je     10d12 <change_protection+0x1c4>
   10ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ceb:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   10cef:	48 89 c1             	mov    %rax,%rcx
   10cf2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cf6:	ba 01 00 00 00       	mov    $0x1,%edx
   10cfb:	48 89 ce             	mov    %rcx,%rsi
   10cfe:	48 89 c7             	mov    %rax,%rdi
   10d01:	e8 0d 50 00 00       	call   15d13 <mm_modify_permissions>
   10d06:	85 c0                	test   %eax,%eax
   10d08:	74 08                	je     10d12 <change_protection+0x1c4>
   10d0a:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10d0d:	e9 01 01 00 00       	jmp    10e13 <change_protection+0x2c5>
   10d12:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)
   10d16:	48 83 45 c8 38       	addq   $0x38,-0x38(%rbp)
   10d1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d1f:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10d23:	0f b7 c0             	movzwl %ax,%eax
   10d26:	39 45 b8             	cmp    %eax,-0x48(%rbp)
   10d29:	0f 82 8a fe ff ff    	jb     10bb9 <change_protection+0x6b>
   10d2f:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
   10d36:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
   10d3d:	e9 ba 00 00 00       	jmp    10dfc <change_protection+0x2ae>
   10d42:	8b 45 bc             	mov    -0x44(%rbp),%eax
   10d45:	48 83 c0 0a          	add    $0xa,%rax
   10d49:	48 c1 e0 05          	shl    $0x5,%rax
   10d4d:	48 89 c2             	mov    %rax,%rdx
   10d50:	48 8d 05 e9 11 02 00 	lea    0x211e9(%rip),%rax        # 31f40 <g_global_data>
   10d57:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
   10d5b:	66 83 f8 14          	cmp    $0x14,%ax
   10d5f:	0f 85 93 00 00 00    	jne    10df8 <change_protection+0x2aa>
   10d65:	8b 45 bc             	mov    -0x44(%rbp),%eax
   10d68:	48 c1 e0 05          	shl    $0x5,%rax
   10d6c:	48 89 c2             	mov    %rax,%rdx
   10d6f:	48 8d 05 22 13 02 00 	lea    0x21322(%rip),%rax        # 32098 <g_global_data+0x158>
   10d76:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   10d7a:	48 3d 07 02 00 00    	cmp    $0x207,%rax
   10d80:	75 76                	jne    10df8 <change_protection+0x2aa>
   10d82:	8b 45 bc             	mov    -0x44(%rbp),%eax
   10d85:	48 83 c0 0a          	add    $0xa,%rax
   10d89:	48 c1 e0 05          	shl    $0x5,%rax
   10d8d:	48 89 c2             	mov    %rax,%rdx
   10d90:	48 8d 05 ad 11 02 00 	lea    0x211ad(%rip),%rax        # 31f44 <g_global_data+0x4>
   10d97:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   10d9a:	85 c0                	test   %eax,%eax
   10d9c:	74 5a                	je     10df8 <change_protection+0x2aa>
   10d9e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   10da1:	48 83 c0 0a          	add    $0xa,%rax
   10da5:	48 c1 e0 05          	shl    $0x5,%rax
   10da9:	48 89 c2             	mov    %rax,%rdx
   10dac:	48 8d 05 91 11 02 00 	lea    0x21191(%rip),%rax        # 31f44 <g_global_data+0x4>
   10db3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   10db6:	89 c0                	mov    %eax,%eax
   10db8:	48 c1 e0 0c          	shl    $0xc,%rax
   10dbc:	8b 55 bc             	mov    -0x44(%rbp),%edx
   10dbf:	48 83 c2 0a          	add    $0xa,%rdx
   10dc3:	48 89 d1             	mov    %rdx,%rcx
   10dc6:	48 c1 e1 05          	shl    $0x5,%rcx
   10dca:	48 8d 15 77 11 02 00 	lea    0x21177(%rip),%rdx        # 31f48 <g_global_data+0x8>
   10dd1:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   10dd5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10dd9:	48 01 ca             	add    %rcx,%rdx
   10ddc:	48 89 d1             	mov    %rdx,%rcx
   10ddf:	ba 03 00 00 00       	mov    $0x3,%edx
   10de4:	48 89 c6             	mov    %rax,%rsi
   10de7:	48 89 cf             	mov    %rcx,%rdi
   10dea:	e8 24 4f 00 00       	call   15d13 <mm_modify_permissions>
   10def:	85 c0                	test   %eax,%eax
   10df1:	74 1a                	je     10e0d <change_protection+0x2bf>
   10df3:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10df6:	eb 1b                	jmp    10e13 <change_protection+0x2c5>
   10df8:	83 45 bc 01          	addl   $0x1,-0x44(%rbp)
   10dfc:	8b 05 76 12 02 00    	mov    0x21276(%rip),%eax        # 32078 <g_global_data+0x138>
   10e02:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   10e05:	0f 82 37 ff ff ff    	jb     10d42 <change_protection+0x1f4>
   10e0b:	eb 01                	jmp    10e0e <change_protection+0x2c0>
   10e0d:	90                   	nop
   10e0e:	b8 00 00 00 00       	mov    $0x0,%eax
   10e13:	c9                   	leave  
   10e14:	c3                   	ret    

0000000000010e15 <init_segment_emas>:
   10e15:	f3 0f 1e fa          	endbr64 
   10e19:	55                   	push   %rbp
   10e1a:	48 89 e5             	mov    %rsp,%rbp
   10e1d:	48 83 ec 40          	sub    $0x40,%rsp
   10e21:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10e25:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   10e2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10e34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e38:	48 89 c7             	mov    %rax,%rdi
   10e3b:	e8 31 f3 ff ff       	call   10171 <get_phdr>
   10e40:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10e44:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   10e49:	75 0a                	jne    10e55 <init_segment_emas+0x40>
   10e4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10e50:	e9 0f 01 00 00       	jmp    10f64 <init_segment_emas+0x14f>
   10e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e59:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10e5d:	0f b7 d0             	movzwl %ax,%edx
   10e60:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   10e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e68:	48 89 ce             	mov    %rcx,%rsi
   10e6b:	48 89 c7             	mov    %rax,%rdi
   10e6e:	e8 2b fc ff ff       	call   10a9e <has_text_relo>
   10e73:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   10e76:	e9 d0 00 00 00       	jmp    10f4b <init_segment_emas+0x136>
   10e7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e7f:	8b 00                	mov    (%rax),%eax
   10e81:	83 f8 01             	cmp    $0x1,%eax
   10e84:	0f 85 b8 00 00 00    	jne    10f42 <init_segment_emas+0x12d>
   10e8a:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
   10e91:	00 
   10e92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e96:	48 8b 40 10          	mov    0x10(%rax),%rax
   10e9a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10ea0:	48 89 c2             	mov    %rax,%rdx
   10ea3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ea7:	48 01 d0             	add    %rdx,%rax
   10eaa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10eae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10eb2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10eb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10eba:	48 8b 40 28          	mov    0x28(%rax),%rax
   10ebe:	48 01 d0             	add    %rdx,%rax
   10ec1:	48 05 ff 0f 00 00    	add    $0xfff,%rax
   10ec7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10ecd:	48 89 c2             	mov    %rax,%rdx
   10ed0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ed4:	48 01 d0             	add    %rdx,%rax
   10ed7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10edb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10edf:	8b 40 04             	mov    0x4(%rax),%eax
   10ee2:	83 e0 02             	and    $0x2,%eax
   10ee5:	85 c0                	test   %eax,%eax
   10ee7:	75 06                	jne    10eef <init_segment_emas+0xda>
   10ee9:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   10eed:	74 05                	je     10ef4 <init_segment_emas+0xdf>
   10eef:	48 83 4d e0 02       	orq    $0x2,-0x20(%rbp)
   10ef4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ef8:	8b 40 04             	mov    0x4(%rax),%eax
   10efb:	83 e0 01             	and    $0x1,%eax
   10efe:	85 c0                	test   %eax,%eax
   10f00:	74 05                	je     10f07 <init_segment_emas+0xf2>
   10f02:	48 83 4d e0 04       	orq    $0x4,-0x20(%rbp)
   10f07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f0b:	89 c2                	mov    %eax,%edx
   10f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f11:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   10f15:	48 89 c6             	mov    %rax,%rsi
   10f18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10f1c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   10f22:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10f28:	89 d1                	mov    %edx,%ecx
   10f2a:	ba 80 02 00 00       	mov    $0x280,%edx
   10f2f:	48 89 c7             	mov    %rax,%rdi
   10f32:	e8 58 4b 00 00       	call   15a8f <mm_init_ema>
   10f37:	85 c0                	test   %eax,%eax
   10f39:	74 07                	je     10f42 <init_segment_emas+0x12d>
   10f3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10f40:	eb 22                	jmp    10f64 <init_segment_emas+0x14f>
   10f42:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   10f46:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
   10f4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f4f:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   10f53:	0f b7 c0             	movzwl %ax,%eax
   10f56:	39 45 d0             	cmp    %eax,-0x30(%rbp)
   10f59:	0f 82 1c ff ff ff    	jb     10e7b <init_segment_emas+0x66>
   10f5f:	b8 00 00 00 00       	mov    $0x0,%eax
   10f64:	c9                   	leave  
   10f65:	c3                   	ret    

0000000000010f66 <__cxa_atexit>:
   10f66:	f3 0f 1e fa          	endbr64 
   10f6a:	55                   	push   %rbp
   10f6b:	48 89 e5             	mov    %rsp,%rbp
   10f6e:	48 83 ec 40          	sub    $0x40,%rsp
   10f72:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10f76:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10f7a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10f7e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10f85:	00 00 
   10f87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10f8b:	31 c0                	xor    %eax,%eax
   10f8d:	48 8b 05 d4 a7 04 00 	mov    0x4a7d4(%rip),%rax        # 5b768 <g_exit_function_cookie>
   10f94:	48 85 c0             	test   %rax,%rax
   10f97:	0f 94 c0             	sete   %al
   10f9a:	0f b6 c0             	movzbl %al,%eax
   10f9d:	48 85 c0             	test   %rax,%rax
   10fa0:	74 5f                	je     11001 <__cxa_atexit+0x9b>
   10fa2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10fa9:	00 
   10faa:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10fae:	be 08 00 00 00       	mov    $0x8,%esi
   10fb3:	48 89 c7             	mov    %rax,%rdi
   10fb6:	e8 cc c4 ff ff       	call   d487 <sgx_read_rand>
   10fbb:	85 c0                	test   %eax,%eax
   10fbd:	74 0a                	je     10fc9 <__cxa_atexit+0x63>
   10fbf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10fc4:	e9 e1 00 00 00       	jmp    110aa <__cxa_atexit+0x144>
   10fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fcd:	48 85 c0             	test   %rax,%rax
   10fd0:	74 d8                	je     10faa <__cxa_atexit+0x44>
   10fd2:	48 8d 3d 87 a7 04 00 	lea    0x4a787(%rip),%rdi        # 5b760 <g_exit_function_lock>
   10fd9:	e8 4e 61 00 00       	call   1712c <sgx_spin_lock>
   10fde:	48 8b 05 83 a7 04 00 	mov    0x4a783(%rip),%rax        # 5b768 <g_exit_function_cookie>
   10fe5:	48 85 c0             	test   %rax,%rax
   10fe8:	75 0b                	jne    10ff5 <__cxa_atexit+0x8f>
   10fea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fee:	48 89 05 73 a7 04 00 	mov    %rax,0x4a773(%rip)        # 5b768 <g_exit_function_cookie>
   10ff5:	48 8d 3d 64 a7 04 00 	lea    0x4a764(%rip),%rdi        # 5b760 <g_exit_function_lock>
   10ffc:	e8 c6 61 00 00       	call   171c7 <sgx_spin_unlock>
   11001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11005:	be 00 00 00 00       	mov    $0x0,%esi
   1100a:	48 89 c7             	mov    %rax,%rdi
   1100d:	e8 95 c1 ff ff       	call   d1a7 <sgx_is_within_enclave>
   11012:	85 c0                	test   %eax,%eax
   11014:	75 0a                	jne    11020 <__cxa_atexit+0xba>
   11016:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1101b:	e9 8a 00 00 00       	jmp    110aa <__cxa_atexit+0x144>
   11020:	bf 20 00 00 00       	mov    $0x20,%edi
   11025:	e8 8d c4 00 00       	call   1d4b7 <dlmalloc>
   1102a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1102e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11033:	75 07                	jne    1103c <__cxa_atexit+0xd6>
   11035:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1103a:	eb 6e                	jmp    110aa <__cxa_atexit+0x144>
   1103c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11040:	48 8b 05 21 a7 04 00 	mov    0x4a721(%rip),%rax        # 5b768 <g_exit_function_cookie>
   11047:	48 31 c2             	xor    %rax,%rdx
   1104a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1104e:	48 89 10             	mov    %rdx,(%rax)
   11051:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11055:	48 8b 05 0c a7 04 00 	mov    0x4a70c(%rip),%rax        # 5b768 <g_exit_function_cookie>
   1105c:	48 31 c2             	xor    %rax,%rdx
   1105f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11063:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11067:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1106b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1106f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   11073:	48 8d 3d e6 a6 04 00 	lea    0x4a6e6(%rip),%rdi        # 5b760 <g_exit_function_lock>
   1107a:	e8 ad 60 00 00       	call   1712c <sgx_spin_lock>
   1107f:	48 8b 15 d2 a6 04 00 	mov    0x4a6d2(%rip),%rdx        # 5b758 <g_exit_function>
   11086:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1108a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1108e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11092:	48 89 05 bf a6 04 00 	mov    %rax,0x4a6bf(%rip)        # 5b758 <g_exit_function>
   11099:	48 8d 3d c0 a6 04 00 	lea    0x4a6c0(%rip),%rdi        # 5b760 <g_exit_function_lock>
   110a0:	e8 22 61 00 00       	call   171c7 <sgx_spin_unlock>
   110a5:	b8 00 00 00 00       	mov    $0x0,%eax
   110aa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   110ae:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   110b5:	00 00 
   110b7:	74 05                	je     110be <__cxa_atexit+0x158>
   110b9:	e8 c9 01 01 00       	call   21287 <__stack_chk_fail>
   110be:	c9                   	leave  
   110bf:	c3                   	ret    

00000000000110c0 <atexit>:
   110c0:	f3 0f 1e fa          	endbr64 
   110c4:	55                   	push   %rbp
   110c5:	48 89 e5             	mov    %rsp,%rbp
   110c8:	48 83 ec 10          	sub    $0x10,%rsp
   110cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110d0:	48 8b 15 59 7f 02 00 	mov    0x27f59(%rip),%rdx        # 39030 <__dso_handle>
   110d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110db:	be 00 00 00 00       	mov    $0x0,%esi
   110e0:	48 89 c7             	mov    %rax,%rdi
   110e3:	e8 7e fe ff ff       	call   10f66 <__cxa_atexit>
   110e8:	c9                   	leave  
   110e9:	c3                   	ret    

00000000000110ea <do_atexit_aux>:
   110ea:	f3 0f 1e fa          	endbr64 
   110ee:	55                   	push   %rbp
   110ef:	48 89 e5             	mov    %rsp,%rbp
   110f2:	48 83 ec 20          	sub    $0x20,%rsp
   110f6:	48 8b 05 5b a6 04 00 	mov    0x4a65b(%rip),%rax        # 5b758 <g_exit_function>
   110fd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11101:	48 c7 05 4c a6 04 00 	movq   $0x0,0x4a64c(%rip)        # 5b758 <g_exit_function>
   11108:	00 00 00 00 
   1110c:	eb 58                	jmp    11166 <do_atexit_aux+0x7c>
   1110e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11112:	48 8b 10             	mov    (%rax),%rdx
   11115:	48 8b 05 4c a6 04 00 	mov    0x4a64c(%rip),%rax        # 5b768 <g_exit_function_cookie>
   1111c:	48 31 d0             	xor    %rdx,%rax
   1111f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11123:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11127:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1112b:	48 8b 05 36 a6 04 00 	mov    0x4a636(%rip),%rax        # 5b768 <g_exit_function_cookie>
   11132:	48 31 d0             	xor    %rdx,%rax
   11135:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11139:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1113d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11141:	48 89 c7             	mov    %rax,%rdi
   11144:	ff d2                	call   *%rdx
   11146:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1114a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1114e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11152:	48 8b 40 18          	mov    0x18(%rax),%rax
   11156:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1115a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1115e:	48 89 c7             	mov    %rax,%rdi
   11161:	e8 4c ce 00 00       	call   1dfb2 <dlfree>
   11166:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1116b:	75 a1                	jne    1110e <do_atexit_aux+0x24>
   1116d:	90                   	nop
   1116e:	90                   	nop
   1116f:	c9                   	leave  
   11170:	c3                   	ret    

0000000000011171 <do_ctors_aux>:
   11171:	f3 0f 1e fa          	endbr64 
   11175:	55                   	push   %rbp
   11176:	48 89 e5             	mov    %rsp,%rbp
   11179:	48 83 ec 40          	sub    $0x40,%rsp
   1117d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11184:	00 00 
   11186:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1118a:	31 c0                	xor    %eax,%eax
   1118c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   11193:	00 
   11194:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1119b:	00 
   1119c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   111a3:	00 
   111a4:	e8 92 df 01 00       	call   2f13b <get_enclave_base>
   111a9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   111ad:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   111b1:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   111b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   111b9:	48 89 ce             	mov    %rcx,%rsi
   111bc:	48 89 c7             	mov    %rax,%rdi
   111bf:	e8 98 f6 ff ff       	call   1085c <elf_get_init_array>
   111c4:	85 c0                	test   %eax,%eax
   111c6:	75 5b                	jne    11223 <do_ctors_aux+0xb2>
   111c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111cc:	48 85 c0             	test   %rax,%rax
   111cf:	74 52                	je     11223 <do_ctors_aux+0xb2>
   111d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   111d5:	48 85 c0             	test   %rax,%rax
   111d8:	74 49                	je     11223 <do_ctors_aux+0xb2>
   111da:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   111de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   111e2:	48 01 d0             	add    %rdx,%rax
   111e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   111e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   111ed:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   111f1:	48 89 c2             	mov    %rax,%rdx
   111f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111f8:	48 01 d0             	add    %rdx,%rax
   111fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   111ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11203:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   11207:	eb 0e                	jmp    11217 <do_ctors_aux+0xa6>
   11209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1120d:	48 8b 00             	mov    (%rax),%rax
   11210:	ff d0                	call   *%rax
   11212:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
   11217:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1121b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1121f:	72 e8                	jb     11209 <do_ctors_aux+0x98>
   11221:	eb 01                	jmp    11224 <do_ctors_aux+0xb3>
   11223:	90                   	nop
   11224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11228:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1122f:	00 00 
   11231:	74 05                	je     11238 <do_ctors_aux+0xc7>
   11233:	e8 4f 00 01 00       	call   21287 <__stack_chk_fail>
   11238:	c9                   	leave  
   11239:	c3                   	ret    

000000000001123a <do_dtors_aux>:
   1123a:	f3 0f 1e fa          	endbr64 
   1123e:	55                   	push   %rbp
   1123f:	48 89 e5             	mov    %rsp,%rbp
   11242:	48 83 ec 40          	sub    $0x40,%rsp
   11246:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1124d:	00 00 
   1124f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11253:	31 c0                	xor    %eax,%eax
   11255:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1125c:	00 
   1125d:	e8 d9 de 01 00       	call   2f13b <get_enclave_base>
   11262:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11266:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1126a:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   1126e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11272:	48 89 ce             	mov    %rcx,%rsi
   11275:	48 89 c7             	mov    %rax,%rdi
   11278:	e8 00 f7 ff ff       	call   1097d <elf_get_uninit_array>
   1127d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11281:	48 85 c0             	test   %rax,%rax
   11284:	74 56                	je     112dc <do_dtors_aux+0xa2>
   11286:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1128a:	48 85 c0             	test   %rax,%rax
   1128d:	74 4d                	je     112dc <do_dtors_aux+0xa2>
   1128f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11293:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11297:	48 01 d0             	add    %rdx,%rax
   1129a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1129e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   112a2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   112a6:	48 89 c2             	mov    %rax,%rdx
   112a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112ad:	48 01 d0             	add    %rdx,%rax
   112b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   112b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   112b8:	48 83 e8 08          	sub    $0x8,%rax
   112bc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   112c0:	eb 0e                	jmp    112d0 <do_dtors_aux+0x96>
   112c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112c6:	48 8b 00             	mov    (%rax),%rax
   112c9:	ff d0                	call   *%rax
   112cb:	48 83 6d d8 08       	subq   $0x8,-0x28(%rbp)
   112d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112d4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   112d8:	73 e8                	jae    112c2 <do_dtors_aux+0x88>
   112da:	eb 01                	jmp    112dd <do_dtors_aux+0xa3>
   112dc:	90                   	nop
   112dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112e1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   112e8:	00 00 
   112ea:	74 05                	je     112f1 <do_dtors_aux+0xb7>
   112ec:	e8 96 ff 00 00       	call   21287 <__stack_chk_fail>
   112f1:	c9                   	leave  
   112f2:	c3                   	ret    

00000000000112f3 <init_global_object>:
   112f3:	f3 0f 1e fa          	endbr64 
   112f7:	55                   	push   %rbp
   112f8:	48 89 e5             	mov    %rsp,%rbp
   112fb:	e8 71 fe ff ff       	call   11171 <do_ctors_aux>
   11300:	90                   	nop
   11301:	5d                   	pop    %rbp
   11302:	c3                   	ret    

0000000000011303 <uninit_global_object>:
   11303:	f3 0f 1e fa          	endbr64 
   11307:	55                   	push   %rbp
   11308:	48 89 e5             	mov    %rsp,%rbp
   1130b:	e8 da fd ff ff       	call   110ea <do_atexit_aux>
   11310:	e8 25 ff ff ff       	call   1123a <do_dtors_aux>
   11315:	90                   	nop
   11316:	5d                   	pop    %rbp
   11317:	c3                   	ret    

0000000000011318 <__tls_get_addr>:
   11318:	f3 0f 1e fa          	endbr64 
   1131c:	55                   	push   %rbp
   1131d:	48 89 e5             	mov    %rsp,%rbp
   11320:	48 83 ec 20          	sub    $0x20,%rsp
   11324:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11328:	e8 59 de 01 00       	call   2f186 <get_thread_data>
   1132d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11331:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11335:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1133d:	48 8b 40 50          	mov    0x50(%rax),%rax
   11341:	48 01 d0             	add    %rdx,%rax
   11344:	c9                   	leave  
   11345:	c3                   	ret    

0000000000011346 <bit_array_new>:
   11346:	f3 0f 1e fa          	endbr64 
   1134a:	55                   	push   %rbp
   1134b:	48 89 e5             	mov    %rsp,%rbp
   1134e:	48 83 ec 20          	sub    $0x20,%rsp
   11352:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11356:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1135b:	75 0a                	jne    11367 <bit_array_new+0x21>
   1135d:	b8 00 00 00 00       	mov    $0x0,%eax
   11362:	e9 94 00 00 00       	jmp    113fb <bit_array_new+0xb5>
   11367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1136b:	48 83 c0 07          	add    $0x7,%rax
   1136f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11373:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11377:	76 07                	jbe    11380 <bit_array_new+0x3a>
   11379:	b8 00 00 00 00       	mov    $0x0,%eax
   1137e:	eb 7b                	jmp    113fb <bit_array_new+0xb5>
   11380:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11384:	48 83 c0 07          	add    $0x7,%rax
   11388:	48 c1 e8 03          	shr    $0x3,%rax
   1138c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11390:	bf 18 00 00 00       	mov    $0x18,%edi
   11395:	e8 8d 43 00 00       	call   15727 <emalloc>
   1139a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1139e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   113a3:	75 07                	jne    113ac <bit_array_new+0x66>
   113a5:	b8 00 00 00 00       	mov    $0x0,%eax
   113aa:	eb 4f                	jmp    113fb <bit_array_new+0xb5>
   113ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   113b4:	48 89 10             	mov    %rdx,(%rax)
   113b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   113bf:	48 89 50 08          	mov    %rdx,0x8(%rax)
   113c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   113c7:	48 89 c7             	mov    %rax,%rdi
   113ca:	e8 58 43 00 00       	call   15727 <emalloc>
   113cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   113d3:	48 89 42 10          	mov    %rax,0x10(%rdx)
   113d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113db:	48 8b 40 10          	mov    0x10(%rax),%rax
   113df:	48 85 c0             	test   %rax,%rax
   113e2:	75 13                	jne    113f7 <bit_array_new+0xb1>
   113e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113e8:	48 89 c7             	mov    %rax,%rdi
   113eb:	e8 22 45 00 00       	call   15912 <efree>
   113f0:	b8 00 00 00 00       	mov    $0x0,%eax
   113f5:	eb 04                	jmp    113fb <bit_array_new+0xb5>
   113f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113fb:	c9                   	leave  
   113fc:	c3                   	ret    

00000000000113fd <bit_array_new_set>:
   113fd:	f3 0f 1e fa          	endbr64 
   11401:	55                   	push   %rbp
   11402:	48 89 e5             	mov    %rsp,%rbp
   11405:	48 83 ec 20          	sub    $0x20,%rsp
   11409:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1140d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11411:	48 89 c7             	mov    %rax,%rdi
   11414:	e8 2d ff ff ff       	call   11346 <bit_array_new>
   11419:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1141d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11422:	75 07                	jne    1142b <bit_array_new_set+0x2e>
   11424:	b8 00 00 00 00       	mov    $0x0,%eax
   11429:	eb 20                	jmp    1144b <bit_array_new_set+0x4e>
   1142b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1142f:	48 8b 10             	mov    (%rax),%rdx
   11432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11436:	48 8b 40 10          	mov    0x10(%rax),%rax
   1143a:	be ff 00 00 00       	mov    $0xff,%esi
   1143f:	48 89 c7             	mov    %rax,%rdi
   11442:	e8 cc fc 00 00       	call   21113 <memset>
   11447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1144b:	c9                   	leave  
   1144c:	c3                   	ret    

000000000001144d <bit_array_new_reset>:
   1144d:	f3 0f 1e fa          	endbr64 
   11451:	55                   	push   %rbp
   11452:	48 89 e5             	mov    %rsp,%rbp
   11455:	48 83 ec 20          	sub    $0x20,%rsp
   11459:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1145d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11461:	48 89 c7             	mov    %rax,%rdi
   11464:	e8 dd fe ff ff       	call   11346 <bit_array_new>
   11469:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1146d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11472:	75 07                	jne    1147b <bit_array_new_reset+0x2e>
   11474:	b8 00 00 00 00       	mov    $0x0,%eax
   11479:	eb 20                	jmp    1149b <bit_array_new_reset+0x4e>
   1147b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1147f:	48 8b 10             	mov    (%rax),%rdx
   11482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11486:	48 8b 40 10          	mov    0x10(%rax),%rax
   1148a:	be 00 00 00 00       	mov    $0x0,%esi
   1148f:	48 89 c7             	mov    %rax,%rdi
   11492:	e8 7c fc 00 00       	call   21113 <memset>
   11497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1149b:	c9                   	leave  
   1149c:	c3                   	ret    

000000000001149d <bit_array_delete>:
   1149d:	f3 0f 1e fa          	endbr64 
   114a1:	55                   	push   %rbp
   114a2:	48 89 e5             	mov    %rsp,%rbp
   114a5:	48 83 ec 10          	sub    $0x10,%rsp
   114a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114b1:	48 8b 40 10          	mov    0x10(%rax),%rax
   114b5:	48 89 c7             	mov    %rax,%rdi
   114b8:	e8 55 44 00 00       	call   15912 <efree>
   114bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c1:	48 89 c7             	mov    %rax,%rdi
   114c4:	e8 49 44 00 00       	call   15912 <efree>
   114c9:	90                   	nop
   114ca:	c9                   	leave  
   114cb:	c3                   	ret    

00000000000114cc <bit_array_test>:
   114cc:	f3 0f 1e fa          	endbr64 
   114d0:	55                   	push   %rbp
   114d1:	48 89 e5             	mov    %rsp,%rbp
   114d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   114dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e0:	48 8b 40 10          	mov    0x10(%rax),%rax
   114e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114e8:	48 c1 ea 03          	shr    $0x3,%rdx
   114ec:	48 01 d0             	add    %rdx,%rax
   114ef:	0f b6 00             	movzbl (%rax),%eax
   114f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114f6:	83 e2 07             	and    $0x7,%edx
   114f9:	be 01 00 00 00       	mov    $0x1,%esi
   114fe:	89 d1                	mov    %edx,%ecx
   11500:	d3 e6                	shl    %cl,%esi
   11502:	89 f2                	mov    %esi,%edx
   11504:	21 d0                	and    %edx,%eax
   11506:	84 c0                	test   %al,%al
   11508:	0f 95 c0             	setne  %al
   1150b:	5d                   	pop    %rbp
   1150c:	c3                   	ret    

000000000001150d <set_mask>:
   1150d:	f3 0f 1e fa          	endbr64 
   11511:	55                   	push   %rbp
   11512:	48 89 e5             	mov    %rsp,%rbp
   11515:	48 83 ec 10          	sub    $0x10,%rsp
   11519:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1151d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11521:	48 83 7d f8 07       	cmpq   $0x7,-0x8(%rbp)
   11526:	76 1f                	jbe    11547 <set_mask+0x3a>
   11528:	48 8d 0d 15 fe 01 00 	lea    0x1fe15(%rip),%rcx        # 31344 <__func__.2623+0xf4>
   1152f:	48 8d 15 5a fe 01 00 	lea    0x1fe5a(%rip),%rdx        # 31390 <__func__.1568>
   11536:	be 67 00 00 00       	mov    $0x67,%esi
   1153b:	48 8d 3d 0c fe 01 00 	lea    0x1fe0c(%rip),%rdi        # 3134e <__func__.2623+0xfe>
   11542:	e8 92 57 00 00       	call   16cd9 <__assert>
   11547:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
   1154c:	76 1f                	jbe    1156d <set_mask+0x60>
   1154e:	48 8d 0d 0d fe 01 00 	lea    0x1fe0d(%rip),%rcx        # 31362 <__func__.2623+0x112>
   11555:	48 8d 15 34 fe 01 00 	lea    0x1fe34(%rip),%rdx        # 31390 <__func__.1568>
   1155c:	be 68 00 00 00       	mov    $0x68,%esi
   11561:	48 8d 3d e6 fd 01 00 	lea    0x1fde6(%rip),%rdi        # 3134e <__func__.2623+0xfe>
   11568:	e8 6c 57 00 00       	call   16cd9 <__assert>
   1156d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11571:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11575:	48 01 d0             	add    %rdx,%rax
   11578:	48 83 f8 08          	cmp    $0x8,%rax
   1157c:	76 1f                	jbe    1159d <set_mask+0x90>
   1157e:	48 8d 0d ee fd 01 00 	lea    0x1fdee(%rip),%rcx        # 31373 <__func__.2623+0x123>
   11585:	48 8d 15 04 fe 01 00 	lea    0x1fe04(%rip),%rdx        # 31390 <__func__.1568>
   1158c:	be 69 00 00 00       	mov    $0x69,%esi
   11591:	48 8d 3d b6 fd 01 00 	lea    0x1fdb6(%rip),%rdi        # 3134e <__func__.2623+0xfe>
   11598:	e8 3c 57 00 00       	call   16cd9 <__assert>
   1159d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   115a1:	ba 01 00 00 00       	mov    $0x1,%edx
   115a6:	89 c1                	mov    %eax,%ecx
   115a8:	d3 e2                	shl    %cl,%edx
   115aa:	89 d0                	mov    %edx,%eax
   115ac:	8d 50 ff             	lea    -0x1(%rax),%edx
   115af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115b3:	89 c1                	mov    %eax,%ecx
   115b5:	d3 e2                	shl    %cl,%edx
   115b7:	89 d0                	mov    %edx,%eax
   115b9:	c9                   	leave  
   115ba:	c3                   	ret    

00000000000115bb <bit_array_test_range>:
   115bb:	f3 0f 1e fa          	endbr64 
   115bf:	55                   	push   %rbp
   115c0:	48 89 e5             	mov    %rsp,%rbp
   115c3:	48 83 ec 50          	sub    $0x50,%rsp
   115c7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   115cb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   115cf:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   115d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   115d7:	48 c1 e8 03          	shr    $0x3,%rax
   115db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   115df:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   115e3:	83 e0 07             	and    $0x7,%eax
   115e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   115ea:	b8 08 00 00 00       	mov    $0x8,%eax
   115ef:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   115f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   115f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   115fb:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   115ff:	77 44                	ja     11645 <bit_array_test_range+0x8a>
   11601:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   11605:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11609:	48 89 d6             	mov    %rdx,%rsi
   1160c:	48 89 c7             	mov    %rax,%rdi
   1160f:	e8 f9 fe ff ff       	call   1150d <set_mask>
   11614:	88 45 df             	mov    %al,-0x21(%rbp)
   11617:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1161b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1161f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11623:	48 01 d0             	add    %rdx,%rax
   11626:	0f b6 00             	movzbl (%rax),%eax
   11629:	22 45 df             	and    -0x21(%rbp),%al
   1162c:	38 45 df             	cmp    %al,-0x21(%rbp)
   1162f:	74 0a                	je     1163b <bit_array_test_range+0x80>
   11631:	b8 00 00 00 00       	mov    $0x0,%eax
   11636:	e9 c6 00 00 00       	jmp    11701 <bit_array_test_range+0x146>
   1163b:	b8 01 00 00 00       	mov    $0x1,%eax
   11640:	e9 bc 00 00 00       	jmp    11701 <bit_array_test_range+0x146>
   11645:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11649:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1164d:	48 89 d6             	mov    %rdx,%rsi
   11650:	48 89 c7             	mov    %rax,%rdi
   11653:	e8 b5 fe ff ff       	call   1150d <set_mask>
   11658:	88 45 de             	mov    %al,-0x22(%rbp)
   1165b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1165f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11663:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11667:	48 01 d0             	add    %rdx,%rax
   1166a:	0f b6 00             	movzbl (%rax),%eax
   1166d:	22 45 de             	and    -0x22(%rbp),%al
   11670:	38 45 de             	cmp    %al,-0x22(%rbp)
   11673:	74 0a                	je     1167f <bit_array_test_range+0xc4>
   11675:	b8 00 00 00 00       	mov    $0x0,%eax
   1167a:	e9 82 00 00 00       	jmp    11701 <bit_array_test_range+0x146>
   1167f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11683:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   11687:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1168b:	eb 27                	jmp    116b4 <bit_array_test_range+0xf9>
   1168d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11691:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11695:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   1169a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1169e:	48 01 d0             	add    %rdx,%rax
   116a1:	0f b6 00             	movzbl (%rax),%eax
   116a4:	3c ff                	cmp    $0xff,%al
   116a6:	74 07                	je     116af <bit_array_test_range+0xf4>
   116a8:	b8 00 00 00 00       	mov    $0x0,%eax
   116ad:	eb 52                	jmp    11701 <bit_array_test_range+0x146>
   116af:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   116b4:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   116b9:	77 d2                	ja     1168d <bit_array_test_range+0xd2>
   116bb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   116c0:	74 3a                	je     116fc <bit_array_test_range+0x141>
   116c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116c6:	48 89 c6             	mov    %rax,%rsi
   116c9:	bf 00 00 00 00       	mov    $0x0,%edi
   116ce:	e8 3a fe ff ff       	call   1150d <set_mask>
   116d3:	88 45 de             	mov    %al,-0x22(%rbp)
   116d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   116da:	48 8b 50 10          	mov    0x10(%rax),%rdx
   116de:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   116e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   116e7:	48 01 d0             	add    %rdx,%rax
   116ea:	0f b6 00             	movzbl (%rax),%eax
   116ed:	22 45 de             	and    -0x22(%rbp),%al
   116f0:	38 45 de             	cmp    %al,-0x22(%rbp)
   116f3:	74 07                	je     116fc <bit_array_test_range+0x141>
   116f5:	b8 00 00 00 00       	mov    $0x0,%eax
   116fa:	eb 05                	jmp    11701 <bit_array_test_range+0x146>
   116fc:	b8 01 00 00 00       	mov    $0x1,%eax
   11701:	c9                   	leave  
   11702:	c3                   	ret    

0000000000011703 <bit_array_test_range_any>:
   11703:	f3 0f 1e fa          	endbr64 
   11707:	55                   	push   %rbp
   11708:	48 89 e5             	mov    %rsp,%rbp
   1170b:	48 83 ec 50          	sub    $0x50,%rsp
   1170f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11713:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   11717:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1171b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1171f:	48 c1 e8 03          	shr    $0x3,%rax
   11723:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11727:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1172b:	83 e0 07             	and    $0x7,%eax
   1172e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11732:	b8 08 00 00 00       	mov    $0x8,%eax
   11737:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   1173b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1173f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11743:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   11747:	77 43                	ja     1178c <bit_array_test_range_any+0x89>
   11749:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1174d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11751:	48 89 d6             	mov    %rdx,%rsi
   11754:	48 89 c7             	mov    %rax,%rdi
   11757:	e8 b1 fd ff ff       	call   1150d <set_mask>
   1175c:	88 45 df             	mov    %al,-0x21(%rbp)
   1175f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11763:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11767:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1176b:	48 01 d0             	add    %rdx,%rax
   1176e:	0f b6 00             	movzbl (%rax),%eax
   11771:	22 45 df             	and    -0x21(%rbp),%al
   11774:	84 c0                	test   %al,%al
   11776:	74 0a                	je     11782 <bit_array_test_range_any+0x7f>
   11778:	b8 01 00 00 00       	mov    $0x1,%eax
   1177d:	e9 c4 00 00 00       	jmp    11846 <bit_array_test_range_any+0x143>
   11782:	b8 00 00 00 00       	mov    $0x0,%eax
   11787:	e9 ba 00 00 00       	jmp    11846 <bit_array_test_range_any+0x143>
   1178c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11790:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11794:	48 89 d6             	mov    %rdx,%rsi
   11797:	48 89 c7             	mov    %rax,%rdi
   1179a:	e8 6e fd ff ff       	call   1150d <set_mask>
   1179f:	88 45 de             	mov    %al,-0x22(%rbp)
   117a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   117a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   117aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   117ae:	48 01 d0             	add    %rdx,%rax
   117b1:	0f b6 00             	movzbl (%rax),%eax
   117b4:	22 45 de             	and    -0x22(%rbp),%al
   117b7:	84 c0                	test   %al,%al
   117b9:	74 0a                	je     117c5 <bit_array_test_range_any+0xc2>
   117bb:	b8 01 00 00 00       	mov    $0x1,%eax
   117c0:	e9 81 00 00 00       	jmp    11846 <bit_array_test_range_any+0x143>
   117c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   117c9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   117cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   117d1:	eb 27                	jmp    117fa <bit_array_test_range_any+0xf7>
   117d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   117d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   117db:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   117e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   117e4:	48 01 d0             	add    %rdx,%rax
   117e7:	0f b6 00             	movzbl (%rax),%eax
   117ea:	84 c0                	test   %al,%al
   117ec:	74 07                	je     117f5 <bit_array_test_range_any+0xf2>
   117ee:	b8 01 00 00 00       	mov    $0x1,%eax
   117f3:	eb 51                	jmp    11846 <bit_array_test_range_any+0x143>
   117f5:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   117fa:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   117ff:	77 d2                	ja     117d3 <bit_array_test_range_any+0xd0>
   11801:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   11806:	74 39                	je     11841 <bit_array_test_range_any+0x13e>
   11808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1180c:	48 89 c6             	mov    %rax,%rsi
   1180f:	bf 00 00 00 00       	mov    $0x0,%edi
   11814:	e8 f4 fc ff ff       	call   1150d <set_mask>
   11819:	88 45 de             	mov    %al,-0x22(%rbp)
   1181c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11820:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11824:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   11829:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1182d:	48 01 d0             	add    %rdx,%rax
   11830:	0f b6 00             	movzbl (%rax),%eax
   11833:	22 45 de             	and    -0x22(%rbp),%al
   11836:	84 c0                	test   %al,%al
   11838:	74 07                	je     11841 <bit_array_test_range_any+0x13e>
   1183a:	b8 01 00 00 00       	mov    $0x1,%eax
   1183f:	eb 05                	jmp    11846 <bit_array_test_range_any+0x143>
   11841:	b8 00 00 00 00       	mov    $0x0,%eax
   11846:	c9                   	leave  
   11847:	c3                   	ret    

0000000000011848 <bit_array_set>:
   11848:	f3 0f 1e fa          	endbr64 
   1184c:	55                   	push   %rbp
   1184d:	48 89 e5             	mov    %rsp,%rbp
   11850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11854:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1185c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11860:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11864:	48 c1 e8 03          	shr    $0x3,%rax
   11868:	48 01 c2             	add    %rax,%rdx
   1186b:	0f b6 32             	movzbl (%rdx),%esi
   1186e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11872:	83 e2 07             	and    $0x7,%edx
   11875:	bf 01 00 00 00       	mov    $0x1,%edi
   1187a:	89 d1                	mov    %edx,%ecx
   1187c:	d3 e7                	shl    %cl,%edi
   1187e:	89 fa                	mov    %edi,%edx
   11880:	89 d1                	mov    %edx,%ecx
   11882:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11886:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1188a:	48 01 d0             	add    %rdx,%rax
   1188d:	09 ce                	or     %ecx,%esi
   1188f:	89 f2                	mov    %esi,%edx
   11891:	88 10                	mov    %dl,(%rax)
   11893:	90                   	nop
   11894:	5d                   	pop    %rbp
   11895:	c3                   	ret    

0000000000011896 <bit_array_set_range>:
   11896:	f3 0f 1e fa          	endbr64 
   1189a:	55                   	push   %rbp
   1189b:	48 89 e5             	mov    %rsp,%rbp
   1189e:	48 83 ec 50          	sub    $0x50,%rsp
   118a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   118a6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   118aa:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   118ae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   118b2:	48 c1 e8 03          	shr    $0x3,%rax
   118b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   118ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   118be:	83 e0 07             	and    $0x7,%eax
   118c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   118c5:	b8 08 00 00 00       	mov    $0x8,%eax
   118ca:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   118ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   118d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   118d6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   118da:	77 41                	ja     1191d <bit_array_set_range+0x87>
   118dc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   118e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   118e4:	48 89 d6             	mov    %rdx,%rsi
   118e7:	48 89 c7             	mov    %rax,%rdi
   118ea:	e8 1e fc ff ff       	call   1150d <set_mask>
   118ef:	88 45 df             	mov    %al,-0x21(%rbp)
   118f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   118f6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   118fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118fe:	48 01 d0             	add    %rdx,%rax
   11901:	0f b6 00             	movzbl (%rax),%eax
   11904:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11908:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1190c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11910:	48 01 ca             	add    %rcx,%rdx
   11913:	0a 45 df             	or     -0x21(%rbp),%al
   11916:	88 02                	mov    %al,(%rdx)
   11918:	e9 b2 00 00 00       	jmp    119cf <bit_array_set_range+0x139>
   1191d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11921:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11925:	48 89 d6             	mov    %rdx,%rsi
   11928:	48 89 c7             	mov    %rax,%rdi
   1192b:	e8 dd fb ff ff       	call   1150d <set_mask>
   11930:	88 45 de             	mov    %al,-0x22(%rbp)
   11933:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11937:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1193b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1193f:	48 01 d0             	add    %rdx,%rax
   11942:	0f b6 00             	movzbl (%rax),%eax
   11945:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11949:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1194d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11951:	48 01 ca             	add    %rcx,%rdx
   11954:	0a 45 de             	or     -0x22(%rbp),%al
   11957:	88 02                	mov    %al,(%rdx)
   11959:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1195d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   11961:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11965:	eb 1c                	jmp    11983 <bit_array_set_range+0xed>
   11967:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1196b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1196f:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   11974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11978:	48 01 d0             	add    %rdx,%rax
   1197b:	c6 00 ff             	movb   $0xff,(%rax)
   1197e:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   11983:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   11988:	77 dd                	ja     11967 <bit_array_set_range+0xd1>
   1198a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1198f:	74 3d                	je     119ce <bit_array_set_range+0x138>
   11991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11995:	48 89 c6             	mov    %rax,%rsi
   11998:	bf 00 00 00 00       	mov    $0x0,%edi
   1199d:	e8 6b fb ff ff       	call   1150d <set_mask>
   119a2:	88 45 de             	mov    %al,-0x22(%rbp)
   119a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   119a9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   119ad:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   119b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119b6:	48 01 c2             	add    %rax,%rdx
   119b9:	0f b6 12             	movzbl (%rdx),%edx
   119bc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   119c0:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   119c4:	48 01 c1             	add    %rax,%rcx
   119c7:	89 d0                	mov    %edx,%eax
   119c9:	0a 45 de             	or     -0x22(%rbp),%al
   119cc:	88 01                	mov    %al,(%rcx)
   119ce:	90                   	nop
   119cf:	c9                   	leave  
   119d0:	c3                   	ret    

00000000000119d1 <bit_array_set_all>:
   119d1:	f3 0f 1e fa          	endbr64 
   119d5:	55                   	push   %rbp
   119d6:	48 89 e5             	mov    %rsp,%rbp
   119d9:	48 83 ec 10          	sub    $0x10,%rsp
   119dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119e5:	48 8b 10             	mov    (%rax),%rdx
   119e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119ec:	48 8b 40 10          	mov    0x10(%rax),%rax
   119f0:	be ff 00 00 00       	mov    $0xff,%esi
   119f5:	48 89 c7             	mov    %rax,%rdi
   119f8:	e8 16 f7 00 00       	call   21113 <memset>
   119fd:	90                   	nop
   119fe:	c9                   	leave  
   119ff:	c3                   	ret    

0000000000011a00 <clear_mask>:
   11a00:	f3 0f 1e fa          	endbr64 
   11a04:	55                   	push   %rbp
   11a05:	48 89 e5             	mov    %rsp,%rbp
   11a08:	48 83 ec 10          	sub    $0x10,%rsp
   11a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11a14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a1c:	48 89 d6             	mov    %rdx,%rsi
   11a1f:	48 89 c7             	mov    %rax,%rdi
   11a22:	e8 e6 fa ff ff       	call   1150d <set_mask>
   11a27:	f7 d0                	not    %eax
   11a29:	c9                   	leave  
   11a2a:	c3                   	ret    

0000000000011a2b <bit_array_reset_range>:
   11a2b:	f3 0f 1e fa          	endbr64 
   11a2f:	55                   	push   %rbp
   11a30:	48 89 e5             	mov    %rsp,%rbp
   11a33:	48 83 ec 50          	sub    $0x50,%rsp
   11a37:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11a3b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   11a3f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   11a43:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11a47:	48 c1 e8 03          	shr    $0x3,%rax
   11a4b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11a4f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11a53:	83 e0 07             	and    $0x7,%eax
   11a56:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a5a:	b8 08 00 00 00       	mov    $0x8,%eax
   11a5f:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   11a63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a67:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11a6b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   11a6f:	77 41                	ja     11ab2 <bit_array_reset_range+0x87>
   11a71:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   11a75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a79:	48 89 d6             	mov    %rdx,%rsi
   11a7c:	48 89 c7             	mov    %rax,%rdi
   11a7f:	e8 7c ff ff ff       	call   11a00 <clear_mask>
   11a84:	88 45 df             	mov    %al,-0x21(%rbp)
   11a87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11a8b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11a8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a93:	48 01 d0             	add    %rdx,%rax
   11a96:	0f b6 00             	movzbl (%rax),%eax
   11a99:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11a9d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   11aa1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11aa5:	48 01 ca             	add    %rcx,%rdx
   11aa8:	22 45 df             	and    -0x21(%rbp),%al
   11aab:	88 02                	mov    %al,(%rdx)
   11aad:	e9 b2 00 00 00       	jmp    11b64 <bit_array_reset_range+0x139>
   11ab2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11ab6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11aba:	48 89 d6             	mov    %rdx,%rsi
   11abd:	48 89 c7             	mov    %rax,%rdi
   11ac0:	e8 3b ff ff ff       	call   11a00 <clear_mask>
   11ac5:	88 45 de             	mov    %al,-0x22(%rbp)
   11ac8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11acc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11ad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ad4:	48 01 d0             	add    %rdx,%rax
   11ad7:	0f b6 00             	movzbl (%rax),%eax
   11ada:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ade:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   11ae2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11ae6:	48 01 ca             	add    %rcx,%rdx
   11ae9:	22 45 de             	and    -0x22(%rbp),%al
   11aec:	88 02                	mov    %al,(%rdx)
   11aee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11af2:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   11af6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11afa:	eb 1c                	jmp    11b18 <bit_array_reset_range+0xed>
   11afc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11b00:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11b04:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   11b09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b0d:	48 01 d0             	add    %rdx,%rax
   11b10:	c6 00 00             	movb   $0x0,(%rax)
   11b13:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
   11b18:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
   11b1d:	77 dd                	ja     11afc <bit_array_reset_range+0xd1>
   11b1f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   11b24:	74 3d                	je     11b63 <bit_array_reset_range+0x138>
   11b26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b2a:	48 89 c6             	mov    %rax,%rsi
   11b2d:	bf 00 00 00 00       	mov    $0x0,%edi
   11b32:	e8 c9 fe ff ff       	call   11a00 <clear_mask>
   11b37:	88 45 de             	mov    %al,-0x22(%rbp)
   11b3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11b3e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11b42:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   11b47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b4b:	48 01 c2             	add    %rax,%rdx
   11b4e:	0f b6 12             	movzbl (%rdx),%edx
   11b51:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   11b55:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   11b59:	48 01 c1             	add    %rax,%rcx
   11b5c:	89 d0                	mov    %edx,%eax
   11b5e:	22 45 de             	and    -0x22(%rbp),%al
   11b61:	88 01                	mov    %al,(%rcx)
   11b63:	90                   	nop
   11b64:	c9                   	leave  
   11b65:	c3                   	ret    

0000000000011b66 <bit_array_reset_all>:
   11b66:	f3 0f 1e fa          	endbr64 
   11b6a:	55                   	push   %rbp
   11b6b:	48 89 e5             	mov    %rsp,%rbp
   11b6e:	48 83 ec 10          	sub    $0x10,%rsp
   11b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b7a:	48 8b 10             	mov    (%rax),%rdx
   11b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b81:	48 8b 40 10          	mov    0x10(%rax),%rax
   11b85:	be 00 00 00 00       	mov    $0x0,%esi
   11b8a:	48 89 c7             	mov    %rax,%rdi
   11b8d:	e8 81 f5 00 00       	call   21113 <memset>
   11b92:	90                   	nop
   11b93:	c9                   	leave  
   11b94:	c3                   	ret    

0000000000011b95 <bit_array_reattach>:
   11b95:	f3 0f 1e fa          	endbr64 
   11b99:	55                   	push   %rbp
   11b9a:	48 89 e5             	mov    %rsp,%rbp
   11b9d:	48 83 ec 30          	sub    $0x30,%rsp
   11ba1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ba5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11ba9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bb1:	48 8b 40 10          	mov    0x10(%rax),%rax
   11bb5:	48 85 c0             	test   %rax,%rax
   11bb8:	74 10                	je     11bca <bit_array_reattach+0x35>
   11bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bbe:	48 8b 40 10          	mov    0x10(%rax),%rax
   11bc2:	48 89 c7             	mov    %rax,%rdi
   11bc5:	e8 48 3d 00 00       	call   15912 <efree>
   11bca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bce:	48 83 c0 07          	add    $0x7,%rax
   11bd2:	48 c1 e8 03          	shr    $0x3,%rax
   11bd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11bda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bde:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11be2:	48 89 10             	mov    %rdx,(%rax)
   11be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11be9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11bed:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11bf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bf5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11bf9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   11bfd:	90                   	nop
   11bfe:	c9                   	leave  
   11bff:	c3                   	ret    

0000000000011c00 <bit_array_split>:
   11c00:	f3 0f 1e fa          	endbr64 
   11c04:	55                   	push   %rbp
   11c05:	48 89 e5             	mov    %rsp,%rbp
   11c08:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   11c0c:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   11c10:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   11c14:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   11c18:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   11c1c:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   11c21:	75 20                	jne    11c43 <bit_array_split+0x43>
   11c23:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11c27:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11c2e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11c32:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11c36:	48 89 10             	mov    %rdx,(%rax)
   11c39:	b8 00 00 00 00       	mov    $0x0,%eax
   11c3e:	e9 de 02 00 00       	jmp    11f21 <bit_array_split+0x321>
   11c43:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11c47:	48 8b 40 08          	mov    0x8(%rax),%rax
   11c4b:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   11c4f:	72 20                	jb     11c71 <bit_array_split+0x71>
   11c51:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11c55:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11c59:	48 89 10             	mov    %rdx,(%rax)
   11c5c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11c60:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11c67:	b8 00 00 00 00       	mov    $0x0,%eax
   11c6c:	e9 b0 02 00 00       	jmp    11f21 <bit_array_split+0x321>
   11c71:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11c75:	48 c1 e8 03          	shr    $0x3,%rax
   11c79:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11c7d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11c81:	83 e0 07             	and    $0x7,%eax
   11c84:	88 45 ac             	mov    %al,-0x54(%rbp)
   11c87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11c8b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11c92:	00 
   11c93:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11c97:	48 01 d0             	add    %rdx,%rax
   11c9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   11c9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11ca2:	48 83 c0 07          	add    $0x7,%rax
   11ca6:	48 c1 e8 03          	shr    $0x3,%rax
   11caa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11cae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11cb2:	48 8b 40 08          	mov    0x8(%rax),%rax
   11cb6:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   11cba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11cbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cc2:	48 89 c7             	mov    %rax,%rdi
   11cc5:	e8 5d 3a 00 00       	call   15727 <emalloc>
   11cca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11cce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11cd3:	75 0a                	jne    11cdf <bit_array_split+0xdf>
   11cd5:	b8 0c 00 00 00       	mov    $0xc,%eax
   11cda:	e9 42 02 00 00       	jmp    11f21 <bit_array_split+0x321>
   11cdf:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   11ce6:	00 
   11ce7:	eb 24                	jmp    11d0d <bit_array_split+0x10d>
   11ce9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11ced:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11cf1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11cf5:	48 01 d0             	add    %rdx,%rax
   11cf8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11cfc:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   11d00:	48 01 ca             	add    %rcx,%rdx
   11d03:	0f b6 00             	movzbl (%rax),%eax
   11d06:	88 02                	mov    %al,(%rdx)
   11d08:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   11d0d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11d11:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   11d15:	72 d2                	jb     11ce9 <bit_array_split+0xe9>
   11d17:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
   11d1b:	74 3a                	je     11d57 <bit_array_split+0x157>
   11d1d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11d21:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11d25:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11d29:	48 01 d0             	add    %rdx,%rax
   11d2c:	0f b6 10             	movzbl (%rax),%edx
   11d2f:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11d33:	be 01 00 00 00       	mov    $0x1,%esi
   11d38:	89 c1                	mov    %eax,%ecx
   11d3a:	d3 e6                	shl    %cl,%esi
   11d3c:	89 f0                	mov    %esi,%eax
   11d3e:	83 e8 01             	sub    $0x1,%eax
   11d41:	21 d0                	and    %edx,%eax
   11d43:	88 45 ad             	mov    %al,-0x53(%rbp)
   11d46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11d4a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11d4e:	48 01 c2             	add    %rax,%rdx
   11d51:	0f b6 45 ad          	movzbl -0x53(%rbp),%eax
   11d55:	88 02                	mov    %al,(%rdx)
   11d57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d5b:	48 89 c7             	mov    %rax,%rdi
   11d5e:	e8 e3 f5 ff ff       	call   11346 <bit_array_new>
   11d63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11d67:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11d6c:	75 16                	jne    11d84 <bit_array_split+0x184>
   11d6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d72:	48 89 c7             	mov    %rax,%rdi
   11d75:	e8 98 3b 00 00       	call   15912 <efree>
   11d7a:	b8 0c 00 00 00       	mov    $0xc,%eax
   11d7f:	e9 9d 01 00 00       	jmp    11f21 <bit_array_split+0x321>
   11d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d88:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11d8c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11d90:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11d94:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   11d9b:	00 
   11d9c:	c6 45 ae 00          	movb   $0x0,-0x52(%rbp)
   11da0:	c6 45 af 00          	movb   $0x0,-0x51(%rbp)
   11da4:	eb 7b                	jmp    11e21 <bit_array_split+0x221>
   11da6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11daa:	48 8b 48 10          	mov    0x10(%rax),%rcx
   11dae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11db2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11db6:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   11dba:	48 01 c8             	add    %rcx,%rax
   11dbd:	0f b6 00             	movzbl (%rax),%eax
   11dc0:	0f b6 d0             	movzbl %al,%edx
   11dc3:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11dc7:	89 c1                	mov    %eax,%ecx
   11dc9:	d3 fa                	sar    %cl,%edx
   11dcb:	89 d0                	mov    %edx,%eax
   11dcd:	88 45 ae             	mov    %al,-0x52(%rbp)
   11dd0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11dd4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11dd8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11ddc:	48 01 d0             	add    %rdx,%rax
   11ddf:	0f b6 00             	movzbl (%rax),%eax
   11de2:	0f b6 d0             	movzbl %al,%edx
   11de5:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11de9:	b9 08 00 00 00       	mov    $0x8,%ecx
   11dee:	29 c1                	sub    %eax,%ecx
   11df0:	89 c8                	mov    %ecx,%eax
   11df2:	89 c1                	mov    %eax,%ecx
   11df4:	d3 e2                	shl    %cl,%edx
   11df6:	89 d0                	mov    %edx,%eax
   11df8:	88 45 af             	mov    %al,-0x51(%rbp)
   11dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dff:	48 8b 48 10          	mov    0x10(%rax),%rcx
   11e03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e07:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11e0b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11e0f:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   11e13:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   11e17:	0a 45 af             	or     -0x51(%rbp),%al
   11e1a:	88 02                	mov    %al,(%rdx)
   11e1c:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   11e21:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   11e26:	0f 87 7a ff ff ff    	ja     11da6 <bit_array_split+0x1a6>
   11e2c:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11e30:	ba 08 00 00 00       	mov    $0x8,%edx
   11e35:	29 c2                	sub    %eax,%edx
   11e37:	89 d0                	mov    %edx,%eax
   11e39:	0f b6 c0             	movzbl %al,%eax
   11e3c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   11e40:	76 6f                	jbe    11eb1 <bit_array_split+0x2b1>
   11e42:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11e46:	48 8b 48 10          	mov    0x10(%rax),%rcx
   11e4a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11e4e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11e52:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   11e56:	48 01 c8             	add    %rcx,%rax
   11e59:	0f b6 00             	movzbl (%rax),%eax
   11e5c:	0f b6 d0             	movzbl %al,%edx
   11e5f:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11e63:	89 c1                	mov    %eax,%ecx
   11e65:	d3 fa                	sar    %cl,%edx
   11e67:	89 d0                	mov    %edx,%eax
   11e69:	88 45 ae             	mov    %al,-0x52(%rbp)
   11e6c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11e70:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11e74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11e78:	48 01 d0             	add    %rdx,%rax
   11e7b:	0f b6 00             	movzbl (%rax),%eax
   11e7e:	0f b6 d0             	movzbl %al,%edx
   11e81:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11e85:	b9 08 00 00 00       	mov    $0x8,%ecx
   11e8a:	29 c1                	sub    %eax,%ecx
   11e8c:	89 c8                	mov    %ecx,%eax
   11e8e:	89 c1                	mov    %eax,%ecx
   11e90:	d3 e2                	shl    %cl,%edx
   11e92:	89 d0                	mov    %edx,%eax
   11e94:	88 45 af             	mov    %al,-0x51(%rbp)
   11e97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e9b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11e9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ea3:	48 01 c2             	add    %rax,%rdx
   11ea6:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   11eaa:	0a 45 af             	or     -0x51(%rbp),%al
   11ead:	88 02                	mov    %al,(%rdx)
   11eaf:	eb 3e                	jmp    11eef <bit_array_split+0x2ef>
   11eb1:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   11eb6:	74 37                	je     11eef <bit_array_split+0x2ef>
   11eb8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11ebc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11ec0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11ec4:	48 01 d0             	add    %rdx,%rax
   11ec7:	0f b6 00             	movzbl (%rax),%eax
   11eca:	0f b6 d0             	movzbl %al,%edx
   11ecd:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
   11ed1:	89 c1                	mov    %eax,%ecx
   11ed3:	d3 fa                	sar    %cl,%edx
   11ed5:	89 d0                	mov    %edx,%eax
   11ed7:	88 45 ae             	mov    %al,-0x52(%rbp)
   11eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ede:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11ee2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ee6:	48 01 c2             	add    %rax,%rdx
   11ee9:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
   11eed:	88 02                	mov    %al,(%rdx)
   11eef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11ef3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   11ef7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11efb:	48 89 ce             	mov    %rcx,%rsi
   11efe:	48 89 c7             	mov    %rax,%rdi
   11f01:	e8 8f fc ff ff       	call   11b95 <bit_array_reattach>
   11f06:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11f0a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11f0e:	48 89 10             	mov    %rdx,(%rax)
   11f11:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11f15:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f19:	48 89 10             	mov    %rdx,(%rax)
   11f1c:	b8 00 00 00 00       	mov    $0x0,%eax
   11f21:	c9                   	leave  
   11f22:	c3                   	ret    

0000000000011f23 <is_within_user_range>:
   11f23:	f3 0f 1e fa          	endbr64 
   11f27:	55                   	push   %rbp
   11f28:	48 89 e5             	mov    %rsp,%rbp
   11f2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f3b:	48 01 d0             	add    %rdx,%rax
   11f3e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11f42:	76 07                	jbe    11f4b <is_within_user_range+0x28>
   11f44:	b8 00 00 00 00       	mov    $0x0,%eax
   11f49:	eb 33                	jmp    11f7e <is_within_user_range+0x5b>
   11f4b:	48 8b 05 76 a0 05 00 	mov    0x5a076(%rip),%rax        # 6bfc8 <mm_user_base>
   11f52:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11f56:	72 1e                	jb     11f76 <is_within_user_range+0x53>
   11f58:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f60:	48 01 c2             	add    %rax,%rdx
   11f63:	48 8b 05 66 a0 05 00 	mov    0x5a066(%rip),%rax        # 6bfd0 <mm_user_end>
   11f6a:	48 39 c2             	cmp    %rax,%rdx
   11f6d:	77 07                	ja     11f76 <is_within_user_range+0x53>
   11f6f:	b8 01 00 00 00       	mov    $0x1,%eax
   11f74:	eb 05                	jmp    11f7b <is_within_user_range+0x58>
   11f76:	b8 00 00 00 00       	mov    $0x0,%eax
   11f7b:	83 e0 01             	and    $0x1,%eax
   11f7e:	5d                   	pop    %rbp
   11f7f:	c3                   	ret    

0000000000011f80 <is_within_rts_range>:
   11f80:	f3 0f 1e fa          	endbr64 
   11f84:	55                   	push   %rbp
   11f85:	48 89 e5             	mov    %rsp,%rbp
   11f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f98:	48 01 d0             	add    %rdx,%rax
   11f9b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11f9f:	76 07                	jbe    11fa8 <is_within_rts_range+0x28>
   11fa1:	b8 00 00 00 00       	mov    $0x0,%eax
   11fa6:	eb 33                	jmp    11fdb <is_within_rts_range+0x5b>
   11fa8:	48 8b 05 21 a0 05 00 	mov    0x5a021(%rip),%rax        # 6bfd0 <mm_user_end>
   11faf:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11fb3:	73 17                	jae    11fcc <is_within_rts_range+0x4c>
   11fb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11fb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11fbd:	48 01 c2             	add    %rax,%rdx
   11fc0:	48 8b 05 01 a0 05 00 	mov    0x5a001(%rip),%rax        # 6bfc8 <mm_user_base>
   11fc7:	48 39 c2             	cmp    %rax,%rdx
   11fca:	77 07                	ja     11fd3 <is_within_rts_range+0x53>
   11fcc:	b8 01 00 00 00       	mov    $0x1,%eax
   11fd1:	eb 05                	jmp    11fd8 <is_within_rts_range+0x58>
   11fd3:	b8 00 00 00 00       	mov    $0x0,%eax
   11fd8:	83 e0 01             	and    $0x1,%eax
   11fdb:	5d                   	pop    %rbp
   11fdc:	c3                   	ret    

0000000000011fdd <destroy_ema_root>:
   11fdd:	f3 0f 1e fa          	endbr64 
   11fe1:	55                   	push   %rbp
   11fe2:	48 89 e5             	mov    %rsp,%rbp
   11fe5:	48 83 ec 30          	sub    $0x30,%rsp
   11fe9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11fed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11ff1:	48 8b 00             	mov    (%rax),%rax
   11ff4:	48 8b 40 38          	mov    0x38(%rax),%rax
   11ff8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11ffc:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12003:	00 
   12004:	eb 25                	jmp    1202b <destroy_ema_root+0x4e>
   12006:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   1200b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1200f:	48 8b 40 38          	mov    0x38(%rax),%rax
   12013:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1201b:	48 89 c7             	mov    %rax,%rdi
   1201e:	e8 65 10 00 00       	call   13088 <ema_destroy>
   12023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12027:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1202b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1202f:	48 8b 00             	mov    (%rax),%rax
   12032:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12036:	75 ce                	jne    12006 <destroy_ema_root+0x29>
   12038:	90                   	nop
   12039:	90                   	nop
   1203a:	c9                   	leave  
   1203b:	c3                   	ret    

000000000001203c <ema_next>:
   1203c:	f3 0f 1e fa          	endbr64 
   12040:	55                   	push   %rbp
   12041:	48 89 e5             	mov    %rsp,%rbp
   12044:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1204c:	48 8b 40 38          	mov    0x38(%rax),%rax
   12050:	5d                   	pop    %rbp
   12051:	c3                   	ret    

0000000000012052 <get_ema_alloc_flags>:
   12052:	f3 0f 1e fa          	endbr64 
   12056:	55                   	push   %rbp
   12057:	48 89 e5             	mov    %rsp,%rbp
   1205a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1205e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12062:	8b 40 10             	mov    0x10(%rax),%eax
   12065:	5d                   	pop    %rbp
   12066:	c3                   	ret    

0000000000012067 <get_ema_si_flags>:
   12067:	f3 0f 1e fa          	endbr64 
   1206b:	55                   	push   %rbp
   1206c:	48 89 e5             	mov    %rsp,%rbp
   1206f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12077:	48 8b 40 18          	mov    0x18(%rax),%rax
   1207b:	5d                   	pop    %rbp
   1207c:	c3                   	ret    

000000000001207d <ema_fault_handler>:
   1207d:	f3 0f 1e fa          	endbr64 
   12081:	55                   	push   %rbp
   12082:	48 89 e5             	mov    %rsp,%rbp
   12085:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12089:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1208d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12092:	74 0f                	je     120a3 <ema_fault_handler+0x26>
   12094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12098:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1209c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   120a0:	48 89 10             	mov    %rdx,(%rax)
   120a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120a7:	48 8b 40 28          	mov    0x28(%rax),%rax
   120ab:	5d                   	pop    %rbp
   120ac:	c3                   	ret    

00000000000120ad <ema_clone>:
   120ad:	f3 0f 1e fa          	endbr64 
   120b1:	55                   	push   %rbp
   120b2:	48 89 e5             	mov    %rsp,%rbp
   120b5:	48 83 ec 10          	sub    $0x10,%rsp
   120b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   120c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   120c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120c9:	ba 48 00 00 00       	mov    $0x48,%edx
   120ce:	48 89 ce             	mov    %rcx,%rsi
   120d1:	48 89 c7             	mov    %rax,%rdi
   120d4:	e8 a6 ed 00 00       	call   20e7f <memcpy>
   120d9:	90                   	nop
   120da:	c9                   	leave  
   120db:	c3                   	ret    

00000000000120dc <ema_lower_than_addr>:
   120dc:	f3 0f 1e fa          	endbr64 
   120e0:	55                   	push   %rbp
   120e1:	48 89 e5             	mov    %rsp,%rbp
   120e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   120ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120f0:	48 8b 10             	mov    (%rax),%rdx
   120f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120f7:	48 8b 40 08          	mov    0x8(%rax),%rax
   120fb:	48 01 d0             	add    %rdx,%rax
   120fe:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12102:	0f 93 c0             	setae  %al
   12105:	5d                   	pop    %rbp
   12106:	c3                   	ret    

0000000000012107 <ema_higher_than_addr>:
   12107:	f3 0f 1e fa          	endbr64 
   1210b:	55                   	push   %rbp
   1210c:	48 89 e5             	mov    %rsp,%rbp
   1210f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12113:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1211b:	48 8b 00             	mov    (%rax),%rax
   1211e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12122:	0f 96 c0             	setbe  %al
   12125:	5d                   	pop    %rbp
   12126:	c3                   	ret    

0000000000012127 <ema_overlap_addr>:
   12127:	f3 0f 1e fa          	endbr64 
   1212b:	55                   	push   %rbp
   1212c:	48 89 e5             	mov    %rsp,%rbp
   1212f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12133:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1213b:	48 8b 00             	mov    (%rax),%rax
   1213e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12142:	72 1f                	jb     12163 <ema_overlap_addr+0x3c>
   12144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12148:	48 8b 10             	mov    (%rax),%rdx
   1214b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1214f:	48 8b 40 08          	mov    0x8(%rax),%rax
   12153:	48 01 d0             	add    %rdx,%rax
   12156:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1215a:	73 07                	jae    12163 <ema_overlap_addr+0x3c>
   1215c:	b8 01 00 00 00       	mov    $0x1,%eax
   12161:	eb 05                	jmp    12168 <ema_overlap_addr+0x41>
   12163:	b8 00 00 00 00       	mov    $0x0,%eax
   12168:	5d                   	pop    %rbp
   12169:	c3                   	ret    

000000000001216a <ema_set_eaccept_full>:
   1216a:	f3 0f 1e fa          	endbr64 
   1216e:	55                   	push   %rbp
   1216f:	48 89 e5             	mov    %rsp,%rbp
   12172:	48 83 ec 10          	sub    $0x10,%rsp
   12176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1217a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1217e:	48 8b 40 20          	mov    0x20(%rax),%rax
   12182:	48 85 c0             	test   %rax,%rax
   12185:	75 37                	jne    121be <ema_set_eaccept_full+0x54>
   12187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1218b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1218f:	48 c1 e8 0c          	shr    $0xc,%rax
   12193:	48 89 c7             	mov    %rax,%rdi
   12196:	e8 62 f2 ff ff       	call   113fd <bit_array_new_set>
   1219b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1219f:	48 89 42 20          	mov    %rax,0x20(%rdx)
   121a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121a7:	48 8b 40 20          	mov    0x20(%rax),%rax
   121ab:	48 85 c0             	test   %rax,%rax
   121ae:	75 07                	jne    121b7 <ema_set_eaccept_full+0x4d>
   121b0:	b8 0c 00 00 00       	mov    $0xc,%eax
   121b5:	eb 1c                	jmp    121d3 <ema_set_eaccept_full+0x69>
   121b7:	b8 00 00 00 00       	mov    $0x0,%eax
   121bc:	eb 15                	jmp    121d3 <ema_set_eaccept_full+0x69>
   121be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121c2:	48 8b 40 20          	mov    0x20(%rax),%rax
   121c6:	48 89 c7             	mov    %rax,%rdi
   121c9:	e8 03 f8 ff ff       	call   119d1 <bit_array_set_all>
   121ce:	b8 00 00 00 00       	mov    $0x0,%eax
   121d3:	c9                   	leave  
   121d4:	c3                   	ret    

00000000000121d5 <ema_clear_eaccept_full>:
   121d5:	f3 0f 1e fa          	endbr64 
   121d9:	55                   	push   %rbp
   121da:	48 89 e5             	mov    %rsp,%rbp
   121dd:	48 83 ec 10          	sub    $0x10,%rsp
   121e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121e9:	48 8b 40 20          	mov    0x20(%rax),%rax
   121ed:	48 85 c0             	test   %rax,%rax
   121f0:	75 37                	jne    12229 <ema_clear_eaccept_full+0x54>
   121f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121f6:	48 8b 40 08          	mov    0x8(%rax),%rax
   121fa:	48 c1 e8 0c          	shr    $0xc,%rax
   121fe:	48 89 c7             	mov    %rax,%rdi
   12201:	e8 47 f2 ff ff       	call   1144d <bit_array_new_reset>
   12206:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1220a:	48 89 42 20          	mov    %rax,0x20(%rdx)
   1220e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12212:	48 8b 40 20          	mov    0x20(%rax),%rax
   12216:	48 85 c0             	test   %rax,%rax
   12219:	75 07                	jne    12222 <ema_clear_eaccept_full+0x4d>
   1221b:	b8 0c 00 00 00       	mov    $0xc,%eax
   12220:	eb 1c                	jmp    1223e <ema_clear_eaccept_full+0x69>
   12222:	b8 00 00 00 00       	mov    $0x0,%eax
   12227:	eb 15                	jmp    1223e <ema_clear_eaccept_full+0x69>
   12229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1222d:	48 8b 40 20          	mov    0x20(%rax),%rax
   12231:	48 89 c7             	mov    %rax,%rdi
   12234:	e8 2d f9 ff ff       	call   11b66 <bit_array_reset_all>
   12239:	b8 00 00 00 00       	mov    $0x0,%eax
   1223e:	c9                   	leave  
   1223f:	c3                   	ret    

0000000000012240 <ema_set_eaccept>:
   12240:	f3 0f 1e fa          	endbr64 
   12244:	55                   	push   %rbp
   12245:	48 89 e5             	mov    %rsp,%rbp
   12248:	48 83 ec 30          	sub    $0x30,%rsp
   1224c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12250:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12254:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12258:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1225d:	75 0a                	jne    12269 <ema_set_eaccept+0x29>
   1225f:	b8 16 00 00 00       	mov    $0x16,%eax
   12264:	e9 f9 00 00 00       	jmp    12362 <ema_set_eaccept+0x122>
   12269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1226d:	48 8b 00             	mov    (%rax),%rax
   12270:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   12274:	73 1f                	jae    12295 <ema_set_eaccept+0x55>
   12276:	48 8d 0d 23 f1 01 00 	lea    0x1f123(%rip),%rcx        # 313a0 <__func__.1568+0x10>
   1227d:	48 8d 15 bc f2 01 00 	lea    0x1f2bc(%rip),%rdx        # 31540 <__func__.1838>
   12284:	be d1 00 00 00       	mov    $0xd1,%esi
   12289:	48 8d 3d 2a f1 01 00 	lea    0x1f12a(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   12290:	e8 44 4a 00 00       	call   16cd9 <__assert>
   12295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12299:	48 8b 10             	mov    (%rax),%rdx
   1229c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   122a4:	48 01 d0             	add    %rdx,%rax
   122a7:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   122ab:	76 1f                	jbe    122cc <ema_set_eaccept+0x8c>
   122ad:	48 8d 0d 14 f1 01 00 	lea    0x1f114(%rip),%rcx        # 313c8 <__func__.1568+0x38>
   122b4:	48 8d 15 85 f2 01 00 	lea    0x1f285(%rip),%rdx        # 31540 <__func__.1838>
   122bb:	be d2 00 00 00       	mov    $0xd2,%esi
   122c0:	48 8d 3d f3 f0 01 00 	lea    0x1f0f3(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   122c7:	e8 0d 4a 00 00       	call   16cd9 <__assert>
   122cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122d0:	48 8b 00             	mov    (%rax),%rax
   122d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   122d7:	48 29 c2             	sub    %rax,%rdx
   122da:	48 89 d0             	mov    %rdx,%rax
   122dd:	48 c1 e8 0c          	shr    $0xc,%rax
   122e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   122e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122e9:	48 8b 00             	mov    (%rax),%rax
   122ec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   122f0:	48 29 c2             	sub    %rax,%rdx
   122f3:	48 89 d0             	mov    %rdx,%rax
   122f6:	48 c1 e8 0c          	shr    $0xc,%rax
   122fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   122fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12302:	48 8b 40 20          	mov    0x20(%rax),%rax
   12306:	48 85 c0             	test   %rax,%rax
   12309:	75 30                	jne    1233b <ema_set_eaccept+0xfb>
   1230b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1230f:	48 8b 40 08          	mov    0x8(%rax),%rax
   12313:	48 c1 e8 0c          	shr    $0xc,%rax
   12317:	48 89 c7             	mov    %rax,%rdi
   1231a:	e8 2e f1 ff ff       	call   1144d <bit_array_new_reset>
   1231f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12323:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1232b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1232f:	48 85 c0             	test   %rax,%rax
   12332:	75 07                	jne    1233b <ema_set_eaccept+0xfb>
   12334:	b8 0c 00 00 00       	mov    $0xc,%eax
   12339:	eb 27                	jmp    12362 <ema_set_eaccept+0x122>
   1233b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1233f:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   12343:	48 89 c2             	mov    %rax,%rdx
   12346:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1234a:	48 8b 40 20          	mov    0x20(%rax),%rax
   1234e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12352:	48 89 ce             	mov    %rcx,%rsi
   12355:	48 89 c7             	mov    %rax,%rdi
   12358:	e8 39 f5 ff ff       	call   11896 <bit_array_set_range>
   1235d:	b8 00 00 00 00       	mov    $0x0,%eax
   12362:	c9                   	leave  
   12363:	c3                   	ret    

0000000000012364 <ema_page_committed>:
   12364:	f3 0f 1e fa          	endbr64 
   12368:	55                   	push   %rbp
   12369:	48 89 e5             	mov    %rsp,%rbp
   1236c:	48 83 ec 10          	sub    $0x10,%rsp
   12370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12378:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1237c:	25 ff 0f 00 00       	and    $0xfff,%eax
   12381:	48 85 c0             	test   %rax,%rax
   12384:	74 1f                	je     123a5 <ema_page_committed+0x41>
   12386:	48 8d 0d 60 f0 01 00 	lea    0x1f060(%rip),%rcx        # 313ed <__func__.1568+0x5d>
   1238d:	48 8d 15 bc f1 01 00 	lea    0x1f1bc(%rip),%rdx        # 31550 <__func__.1845>
   12394:	be e2 00 00 00       	mov    $0xe2,%esi
   12399:	48 8d 3d 1a f0 01 00 	lea    0x1f01a(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   123a0:	e8 34 49 00 00       	call   16cd9 <__assert>
   123a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a9:	48 8b 40 20          	mov    0x20(%rax),%rax
   123ad:	48 85 c0             	test   %rax,%rax
   123b0:	75 07                	jne    123b9 <ema_page_committed+0x55>
   123b2:	b8 00 00 00 00       	mov    $0x0,%eax
   123b7:	eb 2b                	jmp    123e4 <ema_page_committed+0x80>
   123b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123bd:	48 8b 00             	mov    (%rax),%rax
   123c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   123c4:	48 29 c2             	sub    %rax,%rdx
   123c7:	48 89 d0             	mov    %rdx,%rax
   123ca:	48 c1 e8 0c          	shr    $0xc,%rax
   123ce:	48 89 c2             	mov    %rax,%rdx
   123d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123d5:	48 8b 40 20          	mov    0x20(%rax),%rax
   123d9:	48 89 d6             	mov    %rdx,%rsi
   123dc:	48 89 c7             	mov    %rax,%rdi
   123df:	e8 e8 f0 ff ff       	call   114cc <bit_array_test>
   123e4:	c9                   	leave  
   123e5:	c3                   	ret    

00000000000123e6 <search_ema>:
   123e6:	f3 0f 1e fa          	endbr64 
   123ea:	55                   	push   %rbp
   123eb:	48 89 e5             	mov    %rsp,%rbp
   123ee:	48 83 ec 20          	sub    $0x20,%rsp
   123f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   123f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   123fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123fe:	48 8b 00             	mov    (%rax),%rax
   12401:	48 8b 40 38          	mov    0x38(%rax),%rax
   12405:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12409:	eb 29                	jmp    12434 <search_ema+0x4e>
   1240b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1240f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12413:	48 89 d6             	mov    %rdx,%rsi
   12416:	48 89 c7             	mov    %rax,%rdi
   12419:	e8 09 fd ff ff       	call   12127 <ema_overlap_addr>
   1241e:	84 c0                	test   %al,%al
   12420:	74 06                	je     12428 <search_ema+0x42>
   12422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12426:	eb 1e                	jmp    12446 <search_ema+0x60>
   12428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1242c:	48 8b 40 38          	mov    0x38(%rax),%rax
   12430:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12438:	48 8b 00             	mov    (%rax),%rax
   1243b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1243f:	75 ca                	jne    1240b <search_ema+0x25>
   12441:	b8 00 00 00 00       	mov    $0x0,%eax
   12446:	c9                   	leave  
   12447:	c3                   	ret    

0000000000012448 <insert_ema>:
   12448:	f3 0f 1e fa          	endbr64 
   1244c:	55                   	push   %rbp
   1244d:	48 89 e5             	mov    %rsp,%rbp
   12450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12454:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12458:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1245c:	48 8b 50 40          	mov    0x40(%rax),%rdx
   12460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12464:	48 89 50 40          	mov    %rdx,0x40(%rax)
   12468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1246c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12470:	48 89 50 38          	mov    %rdx,0x38(%rax)
   12474:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12478:	48 8b 40 40          	mov    0x40(%rax),%rax
   1247c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12480:	48 89 50 38          	mov    %rdx,0x38(%rax)
   12484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12488:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1248c:	48 89 50 40          	mov    %rdx,0x40(%rax)
   12490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12494:	5d                   	pop    %rbp
   12495:	c3                   	ret    

0000000000012496 <replace_ema>:
   12496:	f3 0f 1e fa          	endbr64 
   1249a:	55                   	push   %rbp
   1249b:	48 89 e5             	mov    %rsp,%rbp
   1249e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   124a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124aa:	48 8b 40 40          	mov    0x40(%rax),%rax
   124ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   124b2:	48 89 50 38          	mov    %rdx,0x38(%rax)
   124b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124ba:	48 8b 40 38          	mov    0x38(%rax),%rax
   124be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   124c2:	48 89 50 40          	mov    %rdx,0x40(%rax)
   124c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124ca:	48 8b 50 38          	mov    0x38(%rax),%rdx
   124ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124d2:	48 89 50 38          	mov    %rdx,0x38(%rax)
   124d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124da:	48 8b 50 40          	mov    0x40(%rax),%rdx
   124de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e2:	48 89 50 40          	mov    %rdx,0x40(%rax)
   124e6:	90                   	nop
   124e7:	5d                   	pop    %rbp
   124e8:	c3                   	ret    

00000000000124e9 <remove_ema>:
   124e9:	f3 0f 1e fa          	endbr64 
   124ed:	55                   	push   %rbp
   124ee:	48 89 e5             	mov    %rsp,%rbp
   124f1:	48 83 ec 10          	sub    $0x10,%rsp
   124f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   124fe:	75 06                	jne    12506 <remove_ema+0x1d>
   12500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12504:	eb 55                	jmp    1255b <remove_ema+0x72>
   12506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1250a:	48 8b 40 40          	mov    0x40(%rax),%rax
   1250e:	48 8b 40 38          	mov    0x38(%rax),%rax
   12512:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12516:	75 12                	jne    1252a <remove_ema+0x41>
   12518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1251c:	48 8b 40 38          	mov    0x38(%rax),%rax
   12520:	48 8b 40 40          	mov    0x40(%rax),%rax
   12524:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12528:	74 05                	je     1252f <remove_ema+0x46>
   1252a:	e8 fc cf 01 00       	call   2f52b <abort>
   1252f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12533:	48 8b 40 40          	mov    0x40(%rax),%rax
   12537:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1253b:	48 8b 52 38          	mov    0x38(%rdx),%rdx
   1253f:	48 89 50 38          	mov    %rdx,0x38(%rax)
   12543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12547:	48 8b 40 38          	mov    0x38(%rax),%rax
   1254b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1254f:	48 8b 52 40          	mov    0x40(%rdx),%rdx
   12553:	48 89 50 40          	mov    %rdx,0x40(%rax)
   12557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1255b:	c9                   	leave  
   1255c:	c3                   	ret    

000000000001255d <push_back_ema>:
   1255d:	f3 0f 1e fa          	endbr64 
   12561:	55                   	push   %rbp
   12562:	48 89 e5             	mov    %rsp,%rbp
   12565:	48 83 ec 10          	sub    $0x10,%rsp
   12569:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1256d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12575:	48 8b 10             	mov    (%rax),%rdx
   12578:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1257c:	48 89 d6             	mov    %rdx,%rsi
   1257f:	48 89 c7             	mov    %rax,%rdi
   12582:	e8 c1 fe ff ff       	call   12448 <insert_ema>
   12587:	90                   	nop
   12588:	c9                   	leave  
   12589:	c3                   	ret    

000000000001258a <search_ema_range>:
   1258a:	f3 0f 1e fa          	endbr64 
   1258e:	55                   	push   %rbp
   1258f:	48 89 e5             	mov    %rsp,%rbp
   12592:	48 83 ec 38          	sub    $0x38,%rsp
   12596:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1259a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1259e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   125a2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   125a6:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   125aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125ae:	48 8b 00             	mov    (%rax),%rax
   125b1:	48 8b 40 38          	mov    0x38(%rax),%rax
   125b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   125b9:	eb 0c                	jmp    125c7 <search_ema_range+0x3d>
   125bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125bf:	48 8b 40 38          	mov    0x38(%rax),%rax
   125c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   125c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125cb:	48 8b 00             	mov    (%rax),%rax
   125ce:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   125d2:	74 17                	je     125eb <search_ema_range+0x61>
   125d4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   125d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125dc:	48 89 d6             	mov    %rdx,%rsi
   125df:	48 89 c7             	mov    %rax,%rdi
   125e2:	e8 f5 fa ff ff       	call   120dc <ema_lower_than_addr>
   125e7:	84 c0                	test   %al,%al
   125e9:	75 d0                	jne    125bb <search_ema_range+0x31>
   125eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125ef:	48 8b 00             	mov    (%rax),%rax
   125f2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   125f6:	74 17                	je     1260f <search_ema_range+0x85>
   125f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   125fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12600:	48 89 d6             	mov    %rdx,%rsi
   12603:	48 89 c7             	mov    %rax,%rdi
   12606:	e8 fc fa ff ff       	call   12107 <ema_higher_than_addr>
   1260b:	84 c0                	test   %al,%al
   1260d:	74 1d                	je     1262c <search_ema_range+0xa2>
   1260f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12613:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1261a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1261e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12625:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1262a:	eb 50                	jmp    1267c <search_ema_range+0xf2>
   1262c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12630:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12634:	48 89 10             	mov    %rdx,(%rax)
   12637:	eb 0c                	jmp    12645 <search_ema_range+0xbb>
   12639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1263d:	48 8b 40 38          	mov    0x38(%rax),%rax
   12641:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12649:	48 8b 00             	mov    (%rax),%rax
   1264c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12650:	74 1a                	je     1266c <search_ema_range+0xe2>
   12652:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1265a:	48 89 d6             	mov    %rdx,%rsi
   1265d:	48 89 c7             	mov    %rax,%rdi
   12660:	e8 a2 fa ff ff       	call   12107 <ema_higher_than_addr>
   12665:	83 f0 01             	xor    $0x1,%eax
   12668:	84 c0                	test   %al,%al
   1266a:	75 cd                	jne    12639 <search_ema_range+0xaf>
   1266c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12670:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12674:	48 89 10             	mov    %rdx,(%rax)
   12677:	b8 00 00 00 00       	mov    $0x0,%eax
   1267c:	c9                   	leave  
   1267d:	c3                   	ret    

000000000001267e <ema_split>:
   1267e:	f3 0f 1e fa          	endbr64 
   12682:	55                   	push   %rbp
   12683:	48 89 e5             	mov    %rsp,%rbp
   12686:	48 83 ec 70          	sub    $0x70,%rsp
   1268a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1268e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   12692:	89 d0                	mov    %edx,%eax
   12694:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   12698:	88 45 9c             	mov    %al,-0x64(%rbp)
   1269b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   126a2:	00 00 
   126a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   126a8:	31 c0                	xor    %eax,%eax
   126aa:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   126ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   126b2:	48 89 d6             	mov    %rdx,%rsi
   126b5:	48 89 c7             	mov    %rax,%rdi
   126b8:	e8 6a fa ff ff       	call   12127 <ema_overlap_addr>
   126bd:	84 c0                	test   %al,%al
   126bf:	75 1f                	jne    126e0 <ema_split+0x62>
   126c1:	48 8d 0d 3d ed 01 00 	lea    0x1ed3d(%rip),%rcx        # 31405 <__func__.1568+0x75>
   126c8:	48 8d 15 99 ee 01 00 	lea    0x1ee99(%rip),%rdx        # 31568 <__func__.1889>
   126cf:	be 4f 01 00 00       	mov    $0x14f,%esi
   126d4:	48 8d 3d df ec 01 00 	lea    0x1ecdf(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   126db:	e8 f9 45 00 00       	call   16cd9 <__assert>
   126e0:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   126e5:	75 1f                	jne    12706 <ema_split+0x88>
   126e7:	48 8d 0d 33 ed 01 00 	lea    0x1ed33(%rip),%rcx        # 31421 <__func__.1568+0x91>
   126ee:	48 8d 15 73 ee 01 00 	lea    0x1ee73(%rip),%rdx        # 31568 <__func__.1889>
   126f5:	be 50 01 00 00       	mov    $0x150,%esi
   126fa:	48 8d 3d b9 ec 01 00 	lea    0x1ecb9(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   12701:	e8 d3 45 00 00       	call   16cd9 <__assert>
   12706:	bf 48 00 00 00       	mov    $0x48,%edi
   1270b:	e8 17 30 00 00       	call   15727 <emalloc>
   12710:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12714:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12719:	75 0a                	jne    12725 <ema_split+0xa7>
   1271b:	b8 0c 00 00 00       	mov    $0xc,%eax
   12720:	e9 70 01 00 00       	jmp    12895 <ema_split+0x217>
   12725:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   1272c:	00 
   1272d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   12734:	00 
   12735:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12739:	48 8b 40 20          	mov    0x20(%rax),%rax
   1273d:	48 85 c0             	test   %rax,%rax
   12740:	74 52                	je     12794 <ema_split+0x116>
   12742:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12746:	48 8b 00             	mov    (%rax),%rax
   12749:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1274d:	48 29 c2             	sub    %rax,%rdx
   12750:	48 89 d0             	mov    %rdx,%rax
   12753:	48 c1 e8 0c          	shr    $0xc,%rax
   12757:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1275b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1275f:	48 8b 40 20          	mov    0x20(%rax),%rax
   12763:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   12767:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1276b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1276f:	48 89 c7             	mov    %rax,%rdi
   12772:	e8 89 f4 ff ff       	call   11c00 <bit_array_split>
   12777:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1277a:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   1277e:	74 14                	je     12794 <ema_split+0x116>
   12780:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12784:	48 89 c7             	mov    %rax,%rdi
   12787:	e8 86 31 00 00       	call   15912 <efree>
   1278c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1278f:	e9 01 01 00 00       	jmp    12895 <ema_split+0x217>
   12794:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12798:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1279c:	48 89 d6             	mov    %rdx,%rsi
   1279f:	48 89 c7             	mov    %rax,%rdi
   127a2:	e8 06 f9 ff ff       	call   120ad <ema_clone>
   127a7:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   127ae:	00 
   127af:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   127b6:	00 
   127b7:	80 7d 9c 00          	cmpb   $0x0,-0x64(%rbp)
   127bb:	74 25                	je     127e2 <ema_split+0x164>
   127bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127c1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   127c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   127c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   127cd:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   127d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127d5:	48 89 d6             	mov    %rdx,%rsi
   127d8:	48 89 c7             	mov    %rax,%rdi
   127db:	e8 68 fc ff ff       	call   12448 <insert_ema>
   127e0:	eb 27                	jmp    12809 <ema_split+0x18b>
   127e2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   127e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   127ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   127f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   127f6:	48 8b 50 38          	mov    0x38(%rax),%rdx
   127fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127fe:	48 89 d6             	mov    %rdx,%rsi
   12801:	48 89 c7             	mov    %rax,%rdi
   12804:	e8 3f fc ff ff       	call   12448 <insert_ema>
   12809:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1280d:	48 8b 00             	mov    (%rax),%rax
   12810:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12814:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12818:	48 8b 40 08          	mov    0x8(%rax),%rax
   1281c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12820:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12824:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12828:	48 89 10             	mov    %rdx,(%rax)
   1282b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1282f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12833:	48 89 c2             	mov    %rax,%rdx
   12836:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1283a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1283e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12842:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12846:	48 89 10             	mov    %rdx,(%rax)
   12849:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1284d:	48 8b 40 08          	mov    0x8(%rax),%rax
   12851:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12855:	48 29 c2             	sub    %rax,%rdx
   12858:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1285c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12860:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12864:	48 8b 40 20          	mov    0x20(%rax),%rax
   12868:	48 85 c0             	test   %rax,%rax
   1286b:	74 18                	je     12885 <ema_split+0x207>
   1286d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   12871:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12875:	48 89 50 20          	mov    %rdx,0x20(%rax)
   12879:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1287d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12881:	48 89 50 20          	mov    %rdx,0x20(%rax)
   12885:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12889:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1288d:	48 89 10             	mov    %rdx,(%rax)
   12890:	b8 00 00 00 00       	mov    $0x0,%eax
   12895:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12899:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   128a0:	00 00 
   128a2:	74 05                	je     128a9 <ema_split+0x22b>
   128a4:	e8 de e9 00 00       	call   21287 <__stack_chk_fail>
   128a9:	c9                   	leave  
   128aa:	c3                   	ret    

00000000000128ab <ema_split_ex>:
   128ab:	f3 0f 1e fa          	endbr64 
   128af:	55                   	push   %rbp
   128b0:	48 89 e5             	mov    %rsp,%rbp
   128b3:	48 83 ec 40          	sub    $0x40,%rsp
   128b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   128bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   128bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   128c3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   128c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   128ce:	00 00 
   128d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   128d4:	31 c0                	xor    %eax,%eax
   128d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   128de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128e2:	48 8b 00             	mov    (%rax),%rax
   128e5:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   128e9:	76 3b                	jbe    12926 <ema_split_ex+0x7b>
   128eb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   128ef:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   128f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128f7:	48 89 d1             	mov    %rdx,%rcx
   128fa:	ba 00 00 00 00       	mov    $0x0,%edx
   128ff:	48 89 c7             	mov    %rax,%rdi
   12902:	e8 77 fd ff ff       	call   1267e <ema_split>
   12907:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1290a:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   1290e:	74 05                	je     12915 <ema_split_ex+0x6a>
   12910:	8b 45 e0             	mov    -0x20(%rbp),%eax
   12913:	eb 7c                	jmp    12991 <ema_split_ex+0xe6>
   12915:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12919:	48 85 c0             	test   %rax,%rax
   1291c:	74 08                	je     12926 <ema_split_ex+0x7b>
   1291e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12922:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12926:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1292d:	00 
   1292e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12932:	48 8b 10             	mov    (%rax),%rdx
   12935:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12939:	48 8b 40 08          	mov    0x8(%rax),%rax
   1293d:	48 01 d0             	add    %rdx,%rax
   12940:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   12944:	73 3b                	jae    12981 <ema_split_ex+0xd6>
   12946:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1294a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1294e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12952:	48 89 d1             	mov    %rdx,%rcx
   12955:	ba 01 00 00 00       	mov    $0x1,%edx
   1295a:	48 89 c7             	mov    %rax,%rdi
   1295d:	e8 1c fd ff ff       	call   1267e <ema_split>
   12962:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   12965:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   12969:	74 05                	je     12970 <ema_split_ex+0xc5>
   1296b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1296e:	eb 21                	jmp    12991 <ema_split_ex+0xe6>
   12970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12974:	48 85 c0             	test   %rax,%rax
   12977:	74 08                	je     12981 <ema_split_ex+0xd6>
   12979:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1297d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12981:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12985:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12989:	48 89 10             	mov    %rdx,(%rax)
   1298c:	b8 00 00 00 00       	mov    $0x0,%eax
   12991:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12995:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1299c:	00 00 
   1299e:	74 05                	je     129a5 <ema_split_ex+0xfa>
   129a0:	e8 e2 e8 00 00       	call   21287 <__stack_chk_fail>
   129a5:	c9                   	leave  
   129a6:	c3                   	ret    

00000000000129a7 <ema_aligned_end>:
   129a7:	f3 0f 1e fa          	endbr64 
   129ab:	55                   	push   %rbp
   129ac:	48 89 e5             	mov    %rsp,%rbp
   129af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   129b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129bb:	48 8b 10             	mov    (%rax),%rdx
   129be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129c2:	48 8b 40 08          	mov    0x8(%rax),%rax
   129c6:	48 01 d0             	add    %rdx,%rax
   129c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   129cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   129d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129d5:	48 01 d0             	add    %rdx,%rax
   129d8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   129dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   129e0:	48 f7 d8             	neg    %rax
   129e3:	48 21 d0             	and    %rdx,%rax
   129e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   129ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129ee:	5d                   	pop    %rbp
   129ef:	c3                   	ret    

00000000000129f0 <find_free_region>:
   129f0:	f3 0f 1e fa          	endbr64 
   129f4:	55                   	push   %rbp
   129f5:	48 89 e5             	mov    %rsp,%rbp
   129f8:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   129fc:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   12a00:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   12a04:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   12a08:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   12a0c:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
   12a10:	48 8d 05 71 66 02 00 	lea    0x26671(%rip),%rax        # 39088 <g_rts_ema_root>
   12a17:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   12a1b:	0f 94 c0             	sete   %al
   12a1e:	88 45 bf             	mov    %al,-0x41(%rbp)
   12a21:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12a25:	48 8b 00             	mov    (%rax),%rax
   12a28:	48 8b 40 38          	mov    0x38(%rax),%rax
   12a2c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12a30:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12a34:	48 8b 00             	mov    (%rax),%rax
   12a37:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12a3b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12a3f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12a46:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12a4a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12a51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a55:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12a59:	0f 85 84 01 00 00    	jne    12be3 <find_free_region+0x1f3>
   12a5f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   12a66:	00 
   12a67:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
   12a6b:	0f 84 11 01 00 00    	je     12b82 <find_free_region+0x192>
   12a71:	c6 45 be 00          	movb   $0x0,-0x42(%rbp)
   12a75:	48 8b 05 4c 95 05 00 	mov    0x5954c(%rip),%rax        # 6bfc8 <mm_user_base>
   12a7c:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   12a80:	77 2f                	ja     12ab1 <find_free_region+0xc1>
   12a82:	48 8b 05 3f 95 05 00 	mov    0x5953f(%rip),%rax        # 6bfc8 <mm_user_base>
   12a89:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
   12a8d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12a91:	48 f7 da             	neg    %rdx
   12a94:	48 21 d0             	and    %rdx,%rax
   12a97:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12a9b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a9f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12aa3:	48 89 d6             	mov    %rdx,%rsi
   12aa6:	48 89 c7             	mov    %rax,%rdi
   12aa9:	e8 bf a4 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   12aae:	88 45 be             	mov    %al,-0x42(%rbp)
   12ab1:	0f b6 45 be          	movzbl -0x42(%rbp),%eax
   12ab5:	83 f0 01             	xor    $0x1,%eax
   12ab8:	84 c0                	test   %al,%al
   12aba:	74 5b                	je     12b17 <find_free_region+0x127>
   12abc:	48 8b 15 0d 95 05 00 	mov    0x5950d(%rip),%rdx        # 6bfd0 <mm_user_end>
   12ac3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ac7:	48 01 d0             	add    %rdx,%rax
   12aca:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   12ace:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ad2:	48 f7 d8             	neg    %rax
   12ad5:	48 21 d0             	and    %rdx,%rax
   12ad8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12adc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12ae0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12ae4:	48 01 d0             	add    %rdx,%rax
   12ae7:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   12aeb:	77 1e                	ja     12b0b <find_free_region+0x11b>
   12aed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12af1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12af5:	48 89 d6             	mov    %rdx,%rsi
   12af8:	48 89 c7             	mov    %rax,%rdi
   12afb:	e8 6d a4 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   12b00:	84 c0                	test   %al,%al
   12b02:	74 07                	je     12b0b <find_free_region+0x11b>
   12b04:	b8 01 00 00 00       	mov    $0x1,%eax
   12b09:	eb 05                	jmp    12b10 <find_free_region+0x120>
   12b0b:	b8 00 00 00 00       	mov    $0x0,%eax
   12b10:	88 45 be             	mov    %al,-0x42(%rbp)
   12b13:	80 65 be 01          	andb   $0x1,-0x42(%rbp)
   12b17:	0f b6 45 be          	movzbl -0x42(%rbp),%eax
   12b1b:	83 f0 01             	xor    $0x1,%eax
   12b1e:	84 c0                	test   %al,%al
   12b20:	74 0a                	je     12b2c <find_free_region+0x13c>
   12b22:	b8 00 00 00 00       	mov    $0x0,%eax
   12b27:	e9 bd 02 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12b2c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12b30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12b34:	48 89 d6             	mov    %rdx,%rsi
   12b37:	48 89 c7             	mov    %rax,%rdi
   12b3a:	e8 41 f4 ff ff       	call   11f80 <is_within_rts_range>
   12b3f:	84 c0                	test   %al,%al
   12b41:	75 1f                	jne    12b62 <find_free_region+0x172>
   12b43:	48 8d 0d e6 e8 01 00 	lea    0x1e8e6(%rip),%rcx        # 31430 <__func__.1568+0xa0>
   12b4a:	48 8d 15 2f ea 01 00 	lea    0x1ea2f(%rip),%rdx        # 31580 <__func__.1926>
   12b51:	be c4 01 00 00       	mov    $0x1c4,%esi
   12b56:	48 8d 3d 5d e8 01 00 	lea    0x1e85d(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   12b5d:	e8 77 41 00 00       	call   16cd9 <__assert>
   12b62:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12b66:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12b6a:	48 89 10             	mov    %rdx,(%rax)
   12b6d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12b71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12b75:	48 89 10             	mov    %rdx,(%rax)
   12b78:	b8 01 00 00 00       	mov    $0x1,%eax
   12b7d:	e9 67 02 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12b82:	48 8b 15 3f 94 05 00 	mov    0x5943f(%rip),%rdx        # 6bfc8 <mm_user_base>
   12b89:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b8d:	48 01 d0             	add    %rdx,%rax
   12b90:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   12b94:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b98:	48 f7 d8             	neg    %rax
   12b9b:	48 21 d0             	and    %rdx,%rax
   12b9e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12ba2:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12ba6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12baa:	48 89 d6             	mov    %rdx,%rsi
   12bad:	48 89 c7             	mov    %rax,%rdi
   12bb0:	e8 6e f3 ff ff       	call   11f23 <is_within_user_range>
   12bb5:	84 c0                	test   %al,%al
   12bb7:	74 20                	je     12bd9 <find_free_region+0x1e9>
   12bb9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12bbd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12bc1:	48 89 10             	mov    %rdx,(%rax)
   12bc4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12bc8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12bcc:	48 89 10             	mov    %rdx,(%rax)
   12bcf:	b8 01 00 00 00       	mov    $0x1,%eax
   12bd4:	e9 10 02 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12bd9:	b8 00 00 00 00       	mov    $0x0,%eax
   12bde:	e9 06 02 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12be7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   12beb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12bef:	48 8b 40 38          	mov    0x38(%rax),%rax
   12bf3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12bf7:	e9 93 00 00 00       	jmp    12c8f <find_free_region+0x29f>
   12bfc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12c00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c04:	48 89 d6             	mov    %rdx,%rsi
   12c07:	48 89 c7             	mov    %rax,%rdi
   12c0a:	e8 98 fd ff ff       	call   129a7 <ema_aligned_end>
   12c0f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12c13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c17:	48 8b 00             	mov    (%rax),%rax
   12c1a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12c1e:	77 5b                	ja     12c7b <find_free_region+0x28b>
   12c20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c24:	48 8b 00             	mov    (%rax),%rax
   12c27:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   12c2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c33:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   12c37:	72 42                	jb     12c7b <find_free_region+0x28b>
   12c39:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   12c3d:	83 f0 01             	xor    $0x1,%eax
   12c40:	84 c0                	test   %al,%al
   12c42:	75 17                	jne    12c5b <find_free_region+0x26b>
   12c44:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12c48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c4c:	48 89 d6             	mov    %rdx,%rsi
   12c4f:	48 89 c7             	mov    %rax,%rdi
   12c52:	e8 29 f3 ff ff       	call   11f80 <is_within_rts_range>
   12c57:	84 c0                	test   %al,%al
   12c59:	74 20                	je     12c7b <find_free_region+0x28b>
   12c5b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12c5f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12c63:	48 89 10             	mov    %rdx,(%rax)
   12c66:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12c6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c6e:	48 89 10             	mov    %rdx,(%rax)
   12c71:	b8 01 00 00 00       	mov    $0x1,%eax
   12c76:	e9 6e 01 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12c7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c7f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   12c83:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c87:	48 8b 40 38          	mov    0x38(%rax),%rax
   12c8b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12c8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c93:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12c97:	0f 85 5f ff ff ff    	jne    12bfc <find_free_region+0x20c>
   12c9d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12ca1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12ca5:	48 89 d6             	mov    %rdx,%rsi
   12ca8:	48 89 c7             	mov    %rax,%rdi
   12cab:	e8 f7 fc ff ff       	call   129a7 <ema_aligned_end>
   12cb0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12cb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cb8:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12cbc:	48 89 d6             	mov    %rdx,%rsi
   12cbf:	48 89 c7             	mov    %rax,%rdi
   12cc2:	e8 a6 a2 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   12cc7:	84 c0                	test   %al,%al
   12cc9:	74 5f                	je     12d2a <find_free_region+0x33a>
   12ccb:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
   12ccf:	74 17                	je     12ce8 <find_free_region+0x2f8>
   12cd1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12cd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cd9:	48 89 d6             	mov    %rdx,%rsi
   12cdc:	48 89 c7             	mov    %rax,%rdi
   12cdf:	e8 9c f2 ff ff       	call   11f80 <is_within_rts_range>
   12ce4:	84 c0                	test   %al,%al
   12ce6:	75 22                	jne    12d0a <find_free_region+0x31a>
   12ce8:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   12cec:	83 f0 01             	xor    $0x1,%eax
   12cef:	84 c0                	test   %al,%al
   12cf1:	74 37                	je     12d2a <find_free_region+0x33a>
   12cf3:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12cf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cfb:	48 89 d6             	mov    %rdx,%rsi
   12cfe:	48 89 c7             	mov    %rax,%rdi
   12d01:	e8 1d f2 ff ff       	call   11f23 <is_within_user_range>
   12d06:	84 c0                	test   %al,%al
   12d08:	74 20                	je     12d2a <find_free_region+0x33a>
   12d0a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12d0e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12d12:	48 89 10             	mov    %rdx,(%rax)
   12d15:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12d19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d1d:	48 89 10             	mov    %rdx,(%rax)
   12d20:	b8 01 00 00 00       	mov    $0x1,%eax
   12d25:	e9 bf 00 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d2e:	48 8b 00             	mov    (%rax),%rax
   12d31:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   12d35:	76 0a                	jbe    12d41 <find_free_region+0x351>
   12d37:	b8 00 00 00 00       	mov    $0x0,%eax
   12d3c:	e9 a8 00 00 00       	jmp    12de9 <find_free_region+0x3f9>
   12d41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d45:	48 8b 00             	mov    (%rax),%rax
   12d48:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
   12d4c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12d50:	48 f7 da             	neg    %rdx
   12d53:	48 21 d0             	and    %rdx,%rax
   12d56:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12d5a:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
   12d5e:	83 f0 01             	xor    $0x1,%eax
   12d61:	84 c0                	test   %al,%al
   12d63:	74 34                	je     12d99 <find_free_region+0x3a9>
   12d65:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12d69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d6d:	48 89 d6             	mov    %rdx,%rsi
   12d70:	48 89 c7             	mov    %rax,%rdi
   12d73:	e8 ab f1 ff ff       	call   11f23 <is_within_user_range>
   12d78:	84 c0                	test   %al,%al
   12d7a:	74 68                	je     12de4 <find_free_region+0x3f4>
   12d7c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12d80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d84:	48 89 10             	mov    %rdx,(%rax)
   12d87:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12d8b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12d8f:	48 89 10             	mov    %rdx,(%rax)
   12d92:	b8 01 00 00 00       	mov    $0x1,%eax
   12d97:	eb 50                	jmp    12de9 <find_free_region+0x3f9>
   12d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d9d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12da1:	48 89 d6             	mov    %rdx,%rsi
   12da4:	48 89 c7             	mov    %rax,%rdi
   12da7:	e8 c1 a1 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   12dac:	84 c0                	test   %al,%al
   12dae:	74 34                	je     12de4 <find_free_region+0x3f4>
   12db0:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   12db4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12db8:	48 89 d6             	mov    %rdx,%rsi
   12dbb:	48 89 c7             	mov    %rax,%rdi
   12dbe:	e8 bd f1 ff ff       	call   11f80 <is_within_rts_range>
   12dc3:	84 c0                	test   %al,%al
   12dc5:	74 1d                	je     12de4 <find_free_region+0x3f4>
   12dc7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12dcb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12dcf:	48 89 10             	mov    %rdx,(%rax)
   12dd2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12dd6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12dda:	48 89 10             	mov    %rdx,(%rax)
   12ddd:	b8 01 00 00 00       	mov    $0x1,%eax
   12de2:	eb 05                	jmp    12de9 <find_free_region+0x3f9>
   12de4:	b8 00 00 00 00       	mov    $0x0,%eax
   12de9:	c9                   	leave  
   12dea:	c3                   	ret    

0000000000012deb <find_free_region_at>:
   12deb:	f3 0f 1e fa          	endbr64 
   12def:	55                   	push   %rbp
   12df0:	48 89 e5             	mov    %rsp,%rbp
   12df3:	48 83 ec 30          	sub    $0x30,%rsp
   12df7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12dfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12dff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12e03:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12e07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12e0f:	48 89 d6             	mov    %rdx,%rsi
   12e12:	48 89 c7             	mov    %rax,%rdi
   12e15:	e8 53 a1 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   12e1a:	83 f0 01             	xor    $0x1,%eax
   12e1d:	84 c0                	test   %al,%al
   12e1f:	74 15                	je     12e36 <find_free_region_at+0x4b>
   12e21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12e25:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12e2c:	b8 00 00 00 00       	mov    $0x0,%eax
   12e31:	e9 08 01 00 00       	jmp    12f3e <find_free_region_at+0x153>
   12e36:	48 8d 05 4b 62 02 00 	lea    0x2624b(%rip),%rax        # 39088 <g_rts_ema_root>
   12e3d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12e41:	0f 94 c0             	sete   %al
   12e44:	88 45 f7             	mov    %al,-0x9(%rbp)
   12e47:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
   12e4b:	74 1a                	je     12e67 <find_free_region_at+0x7c>
   12e4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12e51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e55:	48 89 d6             	mov    %rdx,%rsi
   12e58:	48 89 c7             	mov    %rax,%rdi
   12e5b:	e8 20 f1 ff ff       	call   11f80 <is_within_rts_range>
   12e60:	83 f0 01             	xor    $0x1,%eax
   12e63:	84 c0                	test   %al,%al
   12e65:	75 25                	jne    12e8c <find_free_region_at+0xa1>
   12e67:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
   12e6b:	83 f0 01             	xor    $0x1,%eax
   12e6e:	84 c0                	test   %al,%al
   12e70:	74 2f                	je     12ea1 <find_free_region_at+0xb6>
   12e72:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12e76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e7a:	48 89 d6             	mov    %rdx,%rsi
   12e7d:	48 89 c7             	mov    %rax,%rdi
   12e80:	e8 9e f0 ff ff       	call   11f23 <is_within_user_range>
   12e85:	83 f0 01             	xor    $0x1,%eax
   12e88:	84 c0                	test   %al,%al
   12e8a:	74 15                	je     12ea1 <find_free_region_at+0xb6>
   12e8c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12e90:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12e97:	b8 00 00 00 00       	mov    $0x0,%eax
   12e9c:	e9 9d 00 00 00       	jmp    12f3e <find_free_region_at+0x153>
   12ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ea5:	48 8b 00             	mov    (%rax),%rax
   12ea8:	48 8b 40 38          	mov    0x38(%rax),%rax
   12eac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12eb0:	eb 4d                	jmp    12eff <find_free_region_at+0x114>
   12eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb6:	48 8b 00             	mov    (%rax),%rax
   12eb9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12ebd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12ec1:	48 01 ca             	add    %rcx,%rdx
   12ec4:	48 39 d0             	cmp    %rdx,%rax
   12ec7:	72 12                	jb     12edb <find_free_region_at+0xf0>
   12ec9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12ecd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12ed1:	48 89 10             	mov    %rdx,(%rax)
   12ed4:	b8 01 00 00 00       	mov    $0x1,%eax
   12ed9:	eb 63                	jmp    12f3e <find_free_region_at+0x153>
   12edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12edf:	48 8b 10             	mov    (%rax),%rdx
   12ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ee6:	48 8b 40 08          	mov    0x8(%rax),%rax
   12eea:	48 01 d0             	add    %rdx,%rax
   12eed:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   12ef1:	72 1b                	jb     12f0e <find_free_region_at+0x123>
   12ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ef7:	48 8b 40 38          	mov    0x38(%rax),%rax
   12efb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12eff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f03:	48 8b 00             	mov    (%rax),%rax
   12f06:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12f0a:	75 a6                	jne    12eb2 <find_free_region_at+0xc7>
   12f0c:	eb 01                	jmp    12f0f <find_free_region_at+0x124>
   12f0e:	90                   	nop
   12f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f13:	48 8b 00             	mov    (%rax),%rax
   12f16:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12f1a:	75 12                	jne    12f2e <find_free_region_at+0x143>
   12f1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12f20:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f24:	48 89 10             	mov    %rdx,(%rax)
   12f27:	b8 01 00 00 00       	mov    $0x1,%eax
   12f2c:	eb 10                	jmp    12f3e <find_free_region_at+0x153>
   12f2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12f32:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12f39:	b8 00 00 00 00       	mov    $0x0,%eax
   12f3e:	c9                   	leave  
   12f3f:	c3                   	ret    

0000000000012f40 <ema_new>:
   12f40:	f3 0f 1e fa          	endbr64 
   12f44:	55                   	push   %rbp
   12f45:	48 89 e5             	mov    %rsp,%rbp
   12f48:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   12f4f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   12f53:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   12f57:	89 55 8c             	mov    %edx,-0x74(%rbp)
   12f5a:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   12f5e:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
   12f65:	4c 89 8d 70 ff ff ff 	mov    %r9,-0x90(%rbp)
   12f6c:	48 8b 45 10          	mov    0x10(%rbp),%rax
   12f70:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   12f77:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12f7e:	00 00 
   12f80:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12f84:	31 c0                	xor    %eax,%eax
   12f86:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f8a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   12f8e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12f92:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12f96:	8b 45 8c             	mov    -0x74(%rbp),%eax
   12f99:	89 45 c0             	mov    %eax,-0x40(%rbp)
   12f9c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   12fa0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   12fa4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   12fab:	00 
   12fac:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12fb3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12fb7:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12fbe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12fc2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   12fc9:	00 
   12fca:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12fd1:	00 
   12fd2:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   12fd9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   12fdd:	48 89 d6             	mov    %rdx,%rsi
   12fe0:	48 89 c7             	mov    %rax,%rdi
   12fe3:	e8 60 f4 ff ff       	call   12448 <insert_ema>
   12fe8:	bf 48 00 00 00       	mov    $0x48,%edi
   12fed:	e8 35 27 00 00       	call   15727 <emalloc>
   12ff2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   12ff6:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   12ffb:	74 64                	je     13061 <ema_new+0x121>
   12ffd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13001:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   13005:	48 89 10             	mov    %rdx,(%rax)
   13008:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1300c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13010:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13014:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13018:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1301c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   13020:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13024:	48 89 50 20          	mov    %rdx,0x20(%rax)
   13028:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1302c:	48 89 50 28          	mov    %rdx,0x28(%rax)
   13030:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13034:	48 89 50 30          	mov    %rdx,0x30(%rax)
   13038:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1303c:	48 89 50 38          	mov    %rdx,0x38(%rax)
   13040:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13044:	48 89 50 40          	mov    %rdx,0x40(%rax)
   13048:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   1304c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13050:	48 89 d6             	mov    %rdx,%rsi
   13053:	48 89 c7             	mov    %rax,%rdi
   13056:	e8 3b f4 ff ff       	call   12496 <replace_ema>
   1305b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1305f:	eb 11                	jmp    13072 <ema_new+0x132>
   13061:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   13065:	48 89 c7             	mov    %rax,%rdi
   13068:	e8 7c f4 ff ff       	call   124e9 <remove_ema>
   1306d:	b8 00 00 00 00       	mov    $0x0,%eax
   13072:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13076:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1307d:	00 00 
   1307f:	74 05                	je     13086 <ema_new+0x146>
   13081:	e8 01 e2 00 00       	call   21287 <__stack_chk_fail>
   13086:	c9                   	leave  
   13087:	c3                   	ret    

0000000000013088 <ema_destroy>:
   13088:	f3 0f 1e fa          	endbr64 
   1308c:	55                   	push   %rbp
   1308d:	48 89 e5             	mov    %rsp,%rbp
   13090:	48 83 ec 10          	sub    $0x10,%rsp
   13094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1309c:	48 89 c7             	mov    %rax,%rdi
   1309f:	e8 45 f4 ff ff       	call   124e9 <remove_ema>
   130a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130a8:	48 8b 40 20          	mov    0x20(%rax),%rax
   130ac:	48 85 c0             	test   %rax,%rax
   130af:	74 10                	je     130c1 <ema_destroy+0x39>
   130b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130b5:	48 8b 40 20          	mov    0x20(%rax),%rax
   130b9:	48 89 c7             	mov    %rax,%rdi
   130bc:	e8 dc e3 ff ff       	call   1149d <bit_array_delete>
   130c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130c5:	48 89 c7             	mov    %rax,%rdi
   130c8:	e8 45 28 00 00       	call   15912 <efree>
   130cd:	90                   	nop
   130ce:	c9                   	leave  
   130cf:	c3                   	ret    

00000000000130d0 <eaccept_range_forward>:
   130d0:	f3 0f 1e fa          	endbr64 
   130d4:	55                   	push   %rbp
   130d5:	48 89 e5             	mov    %rsp,%rbp
   130d8:	48 83 ec 20          	sub    $0x20,%rsp
   130dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   130e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   130e8:	eb 24                	jmp    1310e <eaccept_range_forward+0x3e>
   130ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   130ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130f2:	48 89 d6             	mov    %rdx,%rsi
   130f5:	48 89 c7             	mov    %rax,%rdi
   130f8:	e8 b6 c3 01 00       	call   2f4b3 <do_eaccept>
   130fd:	85 c0                	test   %eax,%eax
   130ff:	74 05                	je     13106 <eaccept_range_forward+0x36>
   13101:	e8 25 c4 01 00       	call   2f52b <abort>
   13106:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
   1310d:	00 
   1310e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13112:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13116:	72 d2                	jb     130ea <eaccept_range_forward+0x1a>
   13118:	b8 00 00 00 00       	mov    $0x0,%eax
   1311d:	c9                   	leave  
   1311e:	c3                   	ret    

000000000001311f <eaccept_range_backward>:
   1311f:	f3 0f 1e fa          	endbr64 
   13123:	55                   	push   %rbp
   13124:	48 89 e5             	mov    %rsp,%rbp
   13127:	48 83 ec 20          	sub    $0x20,%rsp
   1312b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1312f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13133:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13137:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1313b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1313f:	72 1f                	jb     13160 <eaccept_range_backward+0x41>
   13141:	48 8d 0d 07 e3 01 00 	lea    0x1e307(%rip),%rcx        # 3144f <__func__.1568+0xbf>
   13148:	48 8d 15 51 e4 01 00 	lea    0x1e451(%rip),%rdx        # 315a0 <__func__.1973>
   1314f:	be 7a 02 00 00       	mov    $0x27a,%esi
   13154:	48 8d 3d 5f e2 01 00 	lea    0x1e25f(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   1315b:	e8 79 3b 00 00       	call   16cd9 <__assert>
   13160:	48 81 6d e8 00 10 00 	subq   $0x1000,-0x18(%rbp)
   13167:	00 
   13168:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1316c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13170:	48 89 d6             	mov    %rdx,%rsi
   13173:	48 89 c7             	mov    %rax,%rdi
   13176:	e8 38 c3 01 00       	call   2f4b3 <do_eaccept>
   1317b:	85 c0                	test   %eax,%eax
   1317d:	74 05                	je     13184 <eaccept_range_backward+0x65>
   1317f:	e8 a7 c3 01 00       	call   2f52b <abort>
   13184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13188:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1318c:	77 d2                	ja     13160 <eaccept_range_backward+0x41>
   1318e:	b8 00 00 00 00       	mov    $0x0,%eax
   13193:	c9                   	leave  
   13194:	c3                   	ret    

0000000000013195 <do_commit>:
   13195:	f3 0f 1e fa          	endbr64 
   13199:	55                   	push   %rbp
   1319a:	48 89 e5             	mov    %rsp,%rbp
   1319d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   131a1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   131a8:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   131ad:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   131b2:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   131b7:	89 c8                	mov    %ecx,%eax
   131b9:	88 44 24 14          	mov    %al,0x14(%rsp)
   131bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   131c4:	00 00 
   131c6:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   131cd:	00 
   131ce:	31 c0                	xor    %eax,%eax
   131d0:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   131d5:	b8 00 00 00 00       	mov    $0x0,%eax
   131da:	b9 08 00 00 00       	mov    $0x8,%ecx
   131df:	48 89 d7             	mov    %rdx,%rdi
   131e2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   131e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   131ea:	48 83 c8 08          	or     $0x8,%rax
   131ee:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   131f3:	c7 44 24 3c ff ff ff 	movl   $0xffffffff,0x3c(%rsp)
   131fa:	ff 
   131fb:	80 7c 24 14 00       	cmpb   $0x0,0x14(%rsp)
   13200:	74 28                	je     1322a <do_commit+0x95>
   13202:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   13207:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1320c:	48 01 c2             	add    %rax,%rdx
   1320f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   13214:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   13219:	48 89 ce             	mov    %rcx,%rsi
   1321c:	48 89 c7             	mov    %rax,%rdi
   1321f:	e8 fb fe ff ff       	call   1311f <eaccept_range_backward>
   13224:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   13228:	eb 26                	jmp    13250 <do_commit+0xbb>
   1322a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1322f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13234:	48 01 c2             	add    %rax,%rdx
   13237:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1323c:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   13241:	48 89 ce             	mov    %rcx,%rsi
   13244:	48 89 c7             	mov    %rax,%rdi
   13247:	e8 84 fe ff ff       	call   130d0 <eaccept_range_forward>
   1324c:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   13250:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
   13254:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1325b:	00 
   1325c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   13263:	00 00 
   13265:	74 05                	je     1326c <do_commit+0xd7>
   13267:	e8 1b e0 00 00       	call   21287 <__stack_chk_fail>
   1326c:	c9                   	leave  
   1326d:	c3                   	ret    

000000000001326e <ema_do_commit>:
   1326e:	f3 0f 1e fa          	endbr64 
   13272:	55                   	push   %rbp
   13273:	48 89 e5             	mov    %rsp,%rbp
   13276:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   1327a:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   13281:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   13286:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1328b:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   13290:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13297:	00 00 
   13299:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   132a0:	00 
   132a1:	31 c0                	xor    %eax,%eax
   132a3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   132a8:	48 8b 40 20          	mov    0x20(%rax),%rax
   132ac:	48 85 c0             	test   %rax,%rax
   132af:	75 1f                	jne    132d0 <ema_do_commit+0x62>
   132b1:	48 8d 0d a3 e1 01 00 	lea    0x1e1a3(%rip),%rcx        # 3145b <__func__.1568+0xcb>
   132b8:	48 8d 15 f9 e2 01 00 	lea    0x1e2f9(%rip),%rdx        # 315b8 <__func__.1989>
   132bf:	be 97 02 00 00       	mov    $0x297,%esi
   132c4:	48 8d 3d ef e0 01 00 	lea    0x1e0ef(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   132cb:	e8 09 3a 00 00       	call   16cd9 <__assert>
   132d0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   132d5:	48 8b 00             	mov    (%rax),%rax
   132d8:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   132dd:	48 0f 43 44 24 40    	cmovae 0x40(%rsp),%rax
   132e3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   132e8:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   132ed:	48 8b 10             	mov    (%rax),%rdx
   132f0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   132f5:	48 8b 40 08          	mov    0x8(%rax),%rax
   132f9:	48 01 d0             	add    %rdx,%rax
   132fc:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   13301:	48 0f 46 44 24 38    	cmovbe 0x38(%rsp),%rax
   13307:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1330c:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   13313:	00 
   13314:	b8 00 00 00 00       	mov    $0x0,%eax
   13319:	b9 08 00 00 00       	mov    $0x8,%ecx
   1331e:	48 89 d7             	mov    %rdx,%rdi
   13321:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13324:	48 c7 84 24 80 00 00 	movq   $0x20b,0x80(%rsp)
   1332b:	00 0b 02 00 00 
   13330:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   13335:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1333a:	e9 87 00 00 00       	jmp    133c6 <ema_do_commit+0x158>
   1333f:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13344:	48 8b 00             	mov    (%rax),%rax
   13347:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   1334c:	48 29 c2             	sub    %rax,%rdx
   1334f:	48 89 d0             	mov    %rdx,%rax
   13352:	48 c1 e8 0c          	shr    $0xc,%rax
   13356:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1335b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13360:	48 8b 40 20          	mov    0x20(%rax),%rax
   13364:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   13369:	48 89 d6             	mov    %rdx,%rsi
   1336c:	48 89 c7             	mov    %rax,%rdi
   1336f:	e8 58 e1 ff ff       	call   114cc <bit_array_test>
   13374:	83 f0 01             	xor    $0x1,%eax
   13377:	84 c0                	test   %al,%al
   13379:	74 42                	je     133bd <ema_do_commit+0x14f>
   1337b:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   13380:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   13387:	00 
   13388:	48 89 d6             	mov    %rdx,%rsi
   1338b:	48 89 c7             	mov    %rax,%rdi
   1338e:	e8 20 c1 01 00       	call   2f4b3 <do_eaccept>
   13393:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   13397:	83 7c 24 5c 00       	cmpl   $0x0,0x5c(%rsp)
   1339c:	74 06                	je     133a4 <ema_do_commit+0x136>
   1339e:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   133a2:	eb 37                	jmp    133db <ema_do_commit+0x16d>
   133a4:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   133a9:	48 8b 40 20          	mov    0x20(%rax),%rax
   133ad:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   133b2:	48 89 d6             	mov    %rdx,%rsi
   133b5:	48 89 c7             	mov    %rax,%rdi
   133b8:	e8 8b e4 ff ff       	call   11848 <bit_array_set>
   133bd:	48 81 44 24 60 00 10 	addq   $0x1000,0x60(%rsp)
   133c4:	00 00 
   133c6:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   133cb:	48 3b 44 24 70       	cmp    0x70(%rsp),%rax
   133d0:	0f 82 69 ff ff ff    	jb     1333f <ema_do_commit+0xd1>
   133d6:	b8 00 00 00 00       	mov    $0x0,%eax
   133db:	48 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%rcx
   133e2:	00 
   133e3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   133ea:	00 00 
   133ec:	74 05                	je     133f3 <ema_do_commit+0x185>
   133ee:	e8 94 de 00 00       	call   21287 <__stack_chk_fail>
   133f3:	c9                   	leave  
   133f4:	c3                   	ret    

00000000000133f5 <ema_can_commit>:
   133f5:	f3 0f 1e fa          	endbr64 
   133f9:	55                   	push   %rbp
   133fa:	48 89 e5             	mov    %rsp,%rbp
   133fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13401:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13405:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13409:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1340d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13411:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13419:	48 8b 00             	mov    (%rax),%rax
   1341c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13420:	eb 7e                	jmp    134a0 <ema_can_commit+0xab>
   13422:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13426:	48 8b 00             	mov    (%rax),%rax
   13429:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1342d:	74 0a                	je     13439 <ema_can_commit+0x44>
   1342f:	b8 16 00 00 00       	mov    $0x16,%eax
   13434:	e9 8b 00 00 00       	jmp    134c4 <ema_can_commit+0xcf>
   13439:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1343d:	48 8b 40 18          	mov    0x18(%rax),%rax
   13441:	83 e0 02             	and    $0x2,%eax
   13444:	48 85 c0             	test   %rax,%rax
   13447:	75 07                	jne    13450 <ema_can_commit+0x5b>
   13449:	b8 0d 00 00 00       	mov    $0xd,%eax
   1344e:	eb 74                	jmp    134c4 <ema_can_commit+0xcf>
   13450:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13454:	48 8b 40 18          	mov    0x18(%rax),%rax
   13458:	25 00 02 00 00       	and    $0x200,%eax
   1345d:	48 85 c0             	test   %rax,%rax
   13460:	75 07                	jne    13469 <ema_can_commit+0x74>
   13462:	b8 0d 00 00 00       	mov    $0xd,%eax
   13467:	eb 5b                	jmp    134c4 <ema_can_commit+0xcf>
   13469:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1346d:	8b 40 10             	mov    0x10(%rax),%eax
   13470:	83 e0 01             	and    $0x1,%eax
   13473:	85 c0                	test   %eax,%eax
   13475:	74 07                	je     1347e <ema_can_commit+0x89>
   13477:	b8 0d 00 00 00       	mov    $0xd,%eax
   1347c:	eb 46                	jmp    134c4 <ema_can_commit+0xcf>
   1347e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13482:	48 8b 10             	mov    (%rax),%rdx
   13485:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13489:	48 8b 40 08          	mov    0x8(%rax),%rax
   1348d:	48 01 d0             	add    %rdx,%rax
   13490:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13494:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13498:	48 8b 40 38          	mov    0x38(%rax),%rax
   1349c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   134a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134a4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   134a8:	0f 85 74 ff ff ff    	jne    13422 <ema_can_commit+0x2d>
   134ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134b2:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   134b6:	73 07                	jae    134bf <ema_can_commit+0xca>
   134b8:	b8 16 00 00 00       	mov    $0x16,%eax
   134bd:	eb 05                	jmp    134c4 <ema_can_commit+0xcf>
   134bf:	b8 00 00 00 00       	mov    $0x0,%eax
   134c4:	5d                   	pop    %rbp
   134c5:	c3                   	ret    

00000000000134c6 <ema_do_commit_loop>:
   134c6:	f3 0f 1e fa          	endbr64 
   134ca:	55                   	push   %rbp
   134cb:	48 89 e5             	mov    %rsp,%rbp
   134ce:	48 83 ec 40          	sub    $0x40,%rsp
   134d2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   134d6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   134da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   134de:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   134e2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   134e6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   134ea:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   134ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   134f2:	48 89 c7             	mov    %rax,%rdi
   134f5:	e8 fb fe ff ff       	call   133f5 <ema_can_commit>
   134fa:	89 45 ec             	mov    %eax,-0x14(%rbp)
   134fd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   13501:	74 05                	je     13508 <ema_do_commit_loop+0x42>
   13503:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13506:	eb 58                	jmp    13560 <ema_do_commit_loop+0x9a>
   13508:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1350c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13510:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   13517:	00 
   13518:	eb 39                	jmp    13553 <ema_do_commit_loop+0x8d>
   1351a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1351e:	48 8b 40 38          	mov    0x38(%rax),%rax
   13522:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13526:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1352a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1352e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13532:	48 89 ce             	mov    %rcx,%rsi
   13535:	48 89 c7             	mov    %rax,%rdi
   13538:	e8 31 fd ff ff       	call   1326e <ema_do_commit>
   1353d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   13540:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   13544:	74 05                	je     1354b <ema_do_commit_loop+0x85>
   13546:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13549:	eb 15                	jmp    13560 <ema_do_commit_loop+0x9a>
   1354b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1354f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13557:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1355b:	75 bd                	jne    1351a <ema_do_commit_loop+0x54>
   1355d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13560:	c9                   	leave  
   13561:	c3                   	ret    

0000000000013562 <ema_do_uncommit_real>:
   13562:	f3 0f 1e fa          	endbr64 
   13566:	55                   	push   %rbp
   13567:	48 89 e5             	mov    %rsp,%rbp
   1356a:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   1356e:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   13575:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   1357a:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   1357f:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   13584:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   13588:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1358f:	00 00 
   13591:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   13598:	00 
   13599:	31 c0                	xor    %eax,%eax
   1359b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   135a0:	48 8b 40 18          	mov    0x18(%rax),%rax
   135a4:	25 00 ff 00 00       	and    $0xff00,%eax
   135a9:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
   135ad:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   135b2:	8b 40 10             	mov    0x10(%rax),%eax
   135b5:	25 ff 00 00 00       	and    $0xff,%eax
   135ba:	89 44 24 50          	mov    %eax,0x50(%rsp)
   135be:	8b 44 24 50          	mov    0x50(%rsp),%eax
   135c2:	83 e0 01             	and    $0x1,%eax
   135c5:	85 c0                	test   %eax,%eax
   135c7:	74 0a                	je     135d3 <ema_do_uncommit_real+0x71>
   135c9:	b8 00 00 00 00       	mov    $0x0,%eax
   135ce:	e9 5d 02 00 00       	jmp    13830 <ema_do_uncommit_real+0x2ce>
   135d3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   135d8:	48 8b 40 20          	mov    0x20(%rax),%rax
   135dc:	48 85 c0             	test   %rax,%rax
   135df:	75 1f                	jne    13600 <ema_do_uncommit_real+0x9e>
   135e1:	48 8d 0d 73 de 01 00 	lea    0x1de73(%rip),%rcx        # 3145b <__func__.1568+0xcb>
   135e8:	48 8d 15 e1 df 01 00 	lea    0x1dfe1(%rip),%rdx        # 315d0 <__func__.2030>
   135ef:	be e8 02 00 00       	mov    $0x2e8,%esi
   135f4:	48 8d 3d bf dd 01 00 	lea    0x1ddbf(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   135fb:	e8 d9 36 00 00       	call   16cd9 <__assert>
   13600:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   13607:	00 
   13608:	b8 00 00 00 00       	mov    $0x0,%eax
   1360d:	b9 08 00 00 00       	mov    $0x8,%ecx
   13612:	48 89 d7             	mov    %rdx,%rdi
   13615:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13618:	48 c7 84 24 80 00 00 	movq   $0x410,0x80(%rsp)
   1361f:	00 10 04 00 00 
   13624:	e9 ef 01 00 00       	jmp    13818 <ema_do_uncommit_real+0x2b6>
   13629:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1362e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   13633:	eb 42                	jmp    13677 <ema_do_uncommit_real+0x115>
   13635:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1363a:	48 8b 00             	mov    (%rax),%rax
   1363d:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   13642:	48 29 c2             	sub    %rax,%rdx
   13645:	48 89 d0             	mov    %rdx,%rax
   13648:	48 c1 e8 0c          	shr    $0xc,%rax
   1364c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   13651:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13656:	48 8b 40 20          	mov    0x20(%rax),%rax
   1365a:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   1365f:	48 89 d6             	mov    %rdx,%rsi
   13662:	48 89 c7             	mov    %rax,%rdi
   13665:	e8 62 de ff ff       	call   114cc <bit_array_test>
   1366a:	84 c0                	test   %al,%al
   1366c:	75 17                	jne    13685 <ema_do_uncommit_real+0x123>
   1366e:	48 81 44 24 58 00 10 	addq   $0x1000,0x58(%rsp)
   13675:	00 00 
   13677:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1367c:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   13681:	72 b2                	jb     13635 <ema_do_uncommit_real+0xd3>
   13683:	eb 01                	jmp    13686 <ema_do_uncommit_real+0x124>
   13685:	90                   	nop
   13686:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1368b:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   13690:	0f 84 94 01 00 00    	je     1382a <ema_do_uncommit_real+0x2c8>
   13696:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1369b:	48 05 00 10 00 00    	add    $0x1000,%rax
   136a1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   136a6:	eb 42                	jmp    136ea <ema_do_uncommit_real+0x188>
   136a8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   136ad:	48 8b 00             	mov    (%rax),%rax
   136b0:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   136b5:	48 29 c2             	sub    %rax,%rdx
   136b8:	48 89 d0             	mov    %rdx,%rax
   136bb:	48 c1 e8 0c          	shr    $0xc,%rax
   136bf:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   136c4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   136c9:	48 8b 40 20          	mov    0x20(%rax),%rax
   136cd:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   136d2:	48 89 d6             	mov    %rdx,%rsi
   136d5:	48 89 c7             	mov    %rax,%rdi
   136d8:	e8 ef dd ff ff       	call   114cc <bit_array_test>
   136dd:	84 c0                	test   %al,%al
   136df:	74 17                	je     136f8 <ema_do_uncommit_real+0x196>
   136e1:	48 81 44 24 60 00 10 	addq   $0x1000,0x60(%rsp)
   136e8:	00 00 
   136ea:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   136ef:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   136f4:	72 b2                	jb     136a8 <ema_do_uncommit_real+0x146>
   136f6:	eb 01                	jmp    136f9 <ema_do_uncommit_real+0x197>
   136f8:	90                   	nop
   136f9:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   136fe:	48 3b 44 24 58       	cmp    0x58(%rsp),%rax
   13703:	77 1f                	ja     13724 <ema_do_uncommit_real+0x1c2>
   13705:	48 8d 0d 61 dd 01 00 	lea    0x1dd61(%rip),%rcx        # 3146d <__func__.1568+0xdd>
   1370c:	48 8d 15 bd de 01 00 	lea    0x1debd(%rip),%rdx        # 315d0 <__func__.2030>
   13713:	be 09 03 00 00       	mov    $0x309,%esi
   13718:	48 8d 3d 9b dc 01 00 	lea    0x1dc9b(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   1371f:	e8 b5 35 00 00       	call   16cd9 <__assert>
   13724:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   13729:	48 2b 44 24 58       	sub    0x58(%rsp),%rax
   1372e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13733:	8b 44 24 24          	mov    0x24(%rsp),%eax
   13737:	80 cc 04             	or     $0x4,%ah
   1373a:	89 c1                	mov    %eax,%ecx
   1373c:	8b 44 24 24          	mov    0x24(%rsp),%eax
   13740:	0b 44 24 4c          	or     0x4c(%rsp),%eax
   13744:	89 c2                	mov    %eax,%edx
   13746:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   1374b:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   13750:	48 89 c7             	mov    %rax,%rdi
   13753:	e8 a9 95 ff ff       	call   cd01 <sgx_mm_modify_ocall>
   13758:	89 44 24 54          	mov    %eax,0x54(%rsp)
   1375c:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   13761:	74 0a                	je     1376d <ema_do_uncommit_real+0x20b>
   13763:	b8 0e 00 00 00       	mov    $0xe,%eax
   13768:	e9 c3 00 00 00       	jmp    13830 <ema_do_uncommit_real+0x2ce>
   1376d:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   13772:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   13777:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1377e:	00 
   1377f:	48 89 ce             	mov    %rcx,%rsi
   13782:	48 89 c7             	mov    %rax,%rdi
   13785:	e8 46 f9 ff ff       	call   130d0 <eaccept_range_forward>
   1378a:	89 44 24 54          	mov    %eax,0x54(%rsp)
   1378e:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   13793:	74 09                	je     1379e <ema_do_uncommit_real+0x23c>
   13795:	8b 44 24 54          	mov    0x54(%rsp),%eax
   13799:	e9 92 00 00 00       	jmp    13830 <ema_do_uncommit_real+0x2ce>
   1379e:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   137a3:	48 c1 e8 0c          	shr    $0xc,%rax
   137a7:	48 89 c2             	mov    %rax,%rdx
   137aa:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   137af:	48 8b 00             	mov    (%rax),%rax
   137b2:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   137b7:	48 29 c1             	sub    %rax,%rcx
   137ba:	48 89 c8             	mov    %rcx,%rax
   137bd:	48 c1 e8 0c          	shr    $0xc,%rax
   137c1:	48 89 c1             	mov    %rax,%rcx
   137c4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   137c9:	48 8b 40 20          	mov    0x20(%rax),%rax
   137cd:	48 89 ce             	mov    %rcx,%rsi
   137d0:	48 89 c7             	mov    %rax,%rdi
   137d3:	e8 53 e2 ff ff       	call   11a2b <bit_array_reset_range>
   137d8:	8b 44 24 24          	mov    0x24(%rsp),%eax
   137dc:	80 cc 04             	or     $0x4,%ah
   137df:	89 c1                	mov    %eax,%ecx
   137e1:	8b 44 24 24          	mov    0x24(%rsp),%eax
   137e5:	80 cc 04             	or     $0x4,%ah
   137e8:	89 c2                	mov    %eax,%edx
   137ea:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   137ef:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   137f4:	48 89 c7             	mov    %rax,%rdi
   137f7:	e8 05 95 ff ff       	call   cd01 <sgx_mm_modify_ocall>
   137fc:	89 44 24 54          	mov    %eax,0x54(%rsp)
   13800:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   13805:	74 07                	je     1380e <ema_do_uncommit_real+0x2ac>
   13807:	b8 0e 00 00 00       	mov    $0xe,%eax
   1380c:	eb 22                	jmp    13830 <ema_do_uncommit_real+0x2ce>
   1380e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   13813:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   13818:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1381d:	48 3b 44 24 28       	cmp    0x28(%rsp),%rax
   13822:	0f 82 01 fe ff ff    	jb     13629 <ema_do_uncommit_real+0xc7>
   13828:	eb 01                	jmp    1382b <ema_do_uncommit_real+0x2c9>
   1382a:	90                   	nop
   1382b:	b8 00 00 00 00       	mov    $0x0,%eax
   13830:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
   13837:	00 
   13838:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1383f:	00 00 
   13841:	74 05                	je     13848 <ema_do_uncommit_real+0x2e6>
   13843:	e8 3f da 00 00       	call   21287 <__stack_chk_fail>
   13848:	c9                   	leave  
   13849:	c3                   	ret    

000000000001384a <ema_do_uncommit>:
   1384a:	f3 0f 1e fa          	endbr64 
   1384e:	55                   	push   %rbp
   1384f:	48 89 e5             	mov    %rsp,%rbp
   13852:	48 83 ec 40          	sub    $0x40,%rsp
   13856:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1385a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1385e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13862:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13866:	48 8b 00             	mov    (%rax),%rax
   13869:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1386d:	48 0f 43 45 d0       	cmovae -0x30(%rbp),%rax
   13872:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13876:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1387a:	48 8b 10             	mov    (%rax),%rdx
   1387d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13881:	48 8b 40 08          	mov    0x8(%rax),%rax
   13885:	48 01 d0             	add    %rdx,%rax
   13888:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1388c:	48 0f 46 45 c8       	cmovbe -0x38(%rbp),%rax
   13891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13895:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13899:	48 8b 40 18          	mov    0x18(%rax),%rax
   1389d:	83 e0 07             	and    $0x7,%eax
   138a0:	89 45 ec             	mov    %eax,-0x14(%rbp)
   138a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   138a7:	75 19                	jne    138c2 <ema_do_uncommit+0x78>
   138a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   138ad:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   138b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   138b5:	b9 01 00 00 00       	mov    $0x1,%ecx
   138ba:	48 89 c7             	mov    %rax,%rdi
   138bd:	e8 af 05 00 00       	call   13e71 <ema_modify_permissions>
   138c2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   138c5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   138c9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   138cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   138d1:	48 89 c7             	mov    %rax,%rdi
   138d4:	e8 89 fc ff ff       	call   13562 <ema_do_uncommit_real>
   138d9:	c9                   	leave  
   138da:	c3                   	ret    

00000000000138db <ema_can_uncommit>:
   138db:	f3 0f 1e fa          	endbr64 
   138df:	55                   	push   %rbp
   138e0:	48 89 e5             	mov    %rsp,%rbp
   138e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   138e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   138eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   138ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   138f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138f7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   138fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138ff:	48 8b 00             	mov    (%rax),%rax
   13902:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13906:	eb 4b                	jmp    13953 <ema_can_uncommit+0x78>
   13908:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1390c:	48 8b 00             	mov    (%rax),%rax
   1390f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   13913:	74 07                	je     1391c <ema_can_uncommit+0x41>
   13915:	b8 16 00 00 00       	mov    $0x16,%eax
   1391a:	eb 57                	jmp    13973 <ema_can_uncommit+0x98>
   1391c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13920:	8b 40 10             	mov    0x10(%rax),%eax
   13923:	83 e0 01             	and    $0x1,%eax
   13926:	85 c0                	test   %eax,%eax
   13928:	74 07                	je     13931 <ema_can_uncommit+0x56>
   1392a:	b8 0d 00 00 00       	mov    $0xd,%eax
   1392f:	eb 42                	jmp    13973 <ema_can_uncommit+0x98>
   13931:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13935:	48 8b 10             	mov    (%rax),%rdx
   13938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1393c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13940:	48 01 d0             	add    %rdx,%rax
   13943:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13947:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1394b:	48 8b 40 38          	mov    0x38(%rax),%rax
   1394f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13953:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13957:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1395b:	75 ab                	jne    13908 <ema_can_uncommit+0x2d>
   1395d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13961:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   13965:	73 07                	jae    1396e <ema_can_uncommit+0x93>
   13967:	b8 16 00 00 00       	mov    $0x16,%eax
   1396c:	eb 05                	jmp    13973 <ema_can_uncommit+0x98>
   1396e:	b8 00 00 00 00       	mov    $0x0,%eax
   13973:	5d                   	pop    %rbp
   13974:	c3                   	ret    

0000000000013975 <ema_do_uncommit_loop>:
   13975:	f3 0f 1e fa          	endbr64 
   13979:	55                   	push   %rbp
   1397a:	48 89 e5             	mov    %rsp,%rbp
   1397d:	48 83 ec 40          	sub    $0x40,%rsp
   13981:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13985:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13989:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1398d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   13991:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13995:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13999:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   1399d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139a1:	48 89 c7             	mov    %rax,%rdi
   139a4:	e8 32 ff ff ff       	call   138db <ema_can_uncommit>
   139a9:	89 45 ec             	mov    %eax,-0x14(%rbp)
   139ac:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   139b0:	74 05                	je     139b7 <ema_do_uncommit_loop+0x42>
   139b2:	8b 45 ec             	mov    -0x14(%rbp),%eax
   139b5:	eb 58                	jmp    13a0f <ema_do_uncommit_loop+0x9a>
   139b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   139bf:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   139c6:	00 
   139c7:	eb 39                	jmp    13a02 <ema_do_uncommit_loop+0x8d>
   139c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   139cd:	48 8b 40 38          	mov    0x38(%rax),%rax
   139d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   139d5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   139d9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   139dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   139e1:	48 89 ce             	mov    %rcx,%rsi
   139e4:	48 89 c7             	mov    %rax,%rdi
   139e7:	e8 5e fe ff ff       	call   1384a <ema_do_uncommit>
   139ec:	89 45 ec             	mov    %eax,-0x14(%rbp)
   139ef:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   139f3:	74 05                	je     139fa <ema_do_uncommit_loop+0x85>
   139f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   139f8:	eb 15                	jmp    13a0f <ema_do_uncommit_loop+0x9a>
   139fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13a02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a06:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   13a0a:	75 bd                	jne    139c9 <ema_do_uncommit_loop+0x54>
   13a0c:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13a0f:	c9                   	leave  
   13a10:	c3                   	ret    

0000000000013a11 <ema_do_dealloc>:
   13a11:	f3 0f 1e fa          	endbr64 
   13a15:	55                   	push   %rbp
   13a16:	48 89 e5             	mov    %rsp,%rbp
   13a19:	48 83 ec 50          	sub    $0x50,%rsp
   13a1d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13a21:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13a25:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13a29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13a30:	00 00 
   13a32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13a36:	31 c0                	xor    %eax,%eax
   13a38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a3c:	8b 40 10             	mov    0x10(%rax),%eax
   13a3f:	25 ff 00 00 00       	and    $0xff,%eax
   13a44:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   13a47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a4b:	48 8b 00             	mov    (%rax),%rax
   13a4e:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   13a52:	48 0f 43 45 c0       	cmovae -0x40(%rbp),%rax
   13a57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13a5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a5f:	48 8b 10             	mov    (%rax),%rdx
   13a62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a66:	48 8b 40 08          	mov    0x8(%rax),%rax
   13a6a:	48 01 d0             	add    %rdx,%rax
   13a6d:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   13a71:	48 0f 46 45 b8       	cmovbe -0x48(%rbp),%rax
   13a76:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13a7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a7e:	48 8b 40 18          	mov    0x18(%rax),%rax
   13a82:	83 e0 07             	and    $0x7,%eax
   13a85:	89 45 d8             	mov    %eax,-0x28(%rbp)
   13a88:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   13a8f:	00 
   13a90:	c7 45 dc 0e 00 00 00 	movl   $0xe,-0x24(%rbp)
   13a97:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   13a9a:	83 e0 01             	and    $0x1,%eax
   13a9d:	85 c0                	test   %eax,%eax
   13a9f:	75 75                	jne    13b16 <ema_do_dealloc+0x105>
   13aa1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13aa5:	48 8b 40 20          	mov    0x20(%rax),%rax
   13aa9:	48 85 c0             	test   %rax,%rax
   13aac:	75 1f                	jne    13acd <ema_do_dealloc+0xbc>
   13aae:	48 8d 0d a6 d9 01 00 	lea    0x1d9a6(%rip),%rcx        # 3145b <__func__.1568+0xcb>
   13ab5:	48 8d 15 2c db 01 00 	lea    0x1db2c(%rip),%rdx        # 315e8 <__func__.2090>
   13abc:	be 64 03 00 00       	mov    $0x364,%esi
   13ac1:	48 8d 3d f2 d8 01 00 	lea    0x1d8f2(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   13ac8:	e8 0c 32 00 00       	call   16cd9 <__assert>
   13acd:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   13ad1:	75 19                	jne    13aec <ema_do_dealloc+0xdb>
   13ad3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13ad7:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   13adb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13adf:	b9 01 00 00 00       	mov    $0x1,%ecx
   13ae4:	48 89 c7             	mov    %rax,%rdi
   13ae7:	e8 85 03 00 00       	call   13e71 <ema_modify_permissions>
   13aec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13af0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13af4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13af8:	b9 00 00 00 00       	mov    $0x0,%ecx
   13afd:	48 89 c7             	mov    %rax,%rdi
   13b00:	e8 5d fa ff ff       	call   13562 <ema_do_uncommit_real>
   13b05:	89 45 dc             	mov    %eax,-0x24(%rbp)
   13b08:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   13b0c:	74 0b                	je     13b19 <ema_do_dealloc+0x108>
   13b0e:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13b11:	e9 f9 00 00 00       	jmp    13c0f <ema_do_dealloc+0x1fe>
   13b16:	90                   	nop
   13b17:	eb 01                	jmp    13b1a <ema_do_dealloc+0x109>
   13b19:	90                   	nop
   13b1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b1e:	48 8b 00             	mov    (%rax),%rax
   13b21:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13b25:	76 5d                	jbe    13b84 <ema_do_dealloc+0x173>
   13b27:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13b2b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13b2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b33:	48 89 d1             	mov    %rdx,%rcx
   13b36:	ba 00 00 00 00       	mov    $0x0,%edx
   13b3b:	48 89 c7             	mov    %rax,%rdi
   13b3e:	e8 3b eb ff ff       	call   1267e <ema_split>
   13b43:	89 45 dc             	mov    %eax,-0x24(%rbp)
   13b46:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   13b4a:	74 08                	je     13b54 <ema_do_dealloc+0x143>
   13b4c:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13b4f:	e9 bb 00 00 00       	jmp    13c0f <ema_do_dealloc+0x1fe>
   13b54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b58:	48 85 c0             	test   %rax,%rax
   13b5b:	75 1f                	jne    13b7c <ema_do_dealloc+0x16b>
   13b5d:	48 8d 0d 21 d9 01 00 	lea    0x1d921(%rip),%rcx        # 31485 <__func__.1568+0xf5>
   13b64:	48 8d 15 7d da 01 00 	lea    0x1da7d(%rip),%rdx        # 315e8 <__func__.2090>
   13b6b:	be 71 03 00 00       	mov    $0x371,%esi
   13b70:	48 8d 3d 43 d8 01 00 	lea    0x1d843(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   13b77:	e8 5d 31 00 00       	call   16cd9 <__assert>
   13b7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b80:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13b84:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   13b8b:	00 
   13b8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b90:	48 8b 10             	mov    (%rax),%rdx
   13b93:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b97:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b9b:	48 01 d0             	add    %rdx,%rax
   13b9e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   13ba2:	73 5a                	jae    13bfe <ema_do_dealloc+0x1ed>
   13ba4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13ba8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13bac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bb0:	48 89 d1             	mov    %rdx,%rcx
   13bb3:	ba 01 00 00 00       	mov    $0x1,%edx
   13bb8:	48 89 c7             	mov    %rax,%rdi
   13bbb:	e8 be ea ff ff       	call   1267e <ema_split>
   13bc0:	89 45 dc             	mov    %eax,-0x24(%rbp)
   13bc3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   13bc7:	74 05                	je     13bce <ema_do_dealloc+0x1bd>
   13bc9:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13bcc:	eb 41                	jmp    13c0f <ema_do_dealloc+0x1fe>
   13bce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13bd2:	48 85 c0             	test   %rax,%rax
   13bd5:	75 1f                	jne    13bf6 <ema_do_dealloc+0x1e5>
   13bd7:	48 8d 0d a7 d8 01 00 	lea    0x1d8a7(%rip),%rcx        # 31485 <__func__.1568+0xf5>
   13bde:	48 8d 15 03 da 01 00 	lea    0x1da03(%rip),%rdx        # 315e8 <__func__.2090>
   13be5:	be 7a 03 00 00       	mov    $0x37a,%esi
   13bea:	48 8d 3d c9 d7 01 00 	lea    0x1d7c9(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   13bf1:	e8 e3 30 00 00       	call   16cd9 <__assert>
   13bf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13bfa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13bfe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c02:	48 89 c7             	mov    %rax,%rdi
   13c05:	e8 7e f4 ff ff       	call   13088 <ema_destroy>
   13c0a:	b8 00 00 00 00       	mov    $0x0,%eax
   13c0f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13c13:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13c1a:	00 00 
   13c1c:	74 05                	je     13c23 <ema_do_dealloc+0x212>
   13c1e:	e8 64 d6 00 00       	call   21287 <__stack_chk_fail>
   13c23:	c9                   	leave  
   13c24:	c3                   	ret    

0000000000013c25 <ema_do_dealloc_loop>:
   13c25:	f3 0f 1e fa          	endbr64 
   13c29:	55                   	push   %rbp
   13c2a:	48 89 e5             	mov    %rsp,%rbp
   13c2d:	48 83 ec 40          	sub    $0x40,%rsp
   13c31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13c35:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13c39:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13c3d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   13c41:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   13c48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13c50:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   13c57:	00 
   13c58:	eb 39                	jmp    13c93 <ema_do_dealloc_loop+0x6e>
   13c5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c5e:	48 8b 40 38          	mov    0x38(%rax),%rax
   13c62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13c66:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13c6a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   13c6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c72:	48 89 ce             	mov    %rcx,%rsi
   13c75:	48 89 c7             	mov    %rax,%rdi
   13c78:	e8 94 fd ff ff       	call   13a11 <ema_do_dealloc>
   13c7d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   13c80:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   13c84:	74 05                	je     13c8b <ema_do_dealloc_loop+0x66>
   13c86:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13c89:	eb 15                	jmp    13ca0 <ema_do_dealloc_loop+0x7b>
   13c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13c93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c97:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   13c9b:	75 bd                	jne    13c5a <ema_do_dealloc_loop+0x35>
   13c9d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13ca0:	c9                   	leave  
   13ca1:	c3                   	ret    

0000000000013ca2 <ema_change_to_tcs>:
   13ca2:	f3 0f 1e fa          	endbr64 
   13ca6:	55                   	push   %rbp
   13ca7:	48 89 e5             	mov    %rsp,%rbp
   13caa:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   13cae:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   13cb5:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   13cba:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   13cbf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13cc6:	00 00 
   13cc8:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   13ccf:	00 
   13cd0:	31 c0                	xor    %eax,%eax
   13cd2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13cd7:	48 8b 40 18          	mov    0x18(%rax),%rax
   13cdb:	83 e0 07             	and    $0x7,%eax
   13cde:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   13ce2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13ce7:	48 8b 40 18          	mov    0x18(%rax),%rax
   13ceb:	25 00 ff 00 00       	and    $0xff00,%eax
   13cf0:	89 44 24 30          	mov    %eax,0x30(%rsp)
   13cf4:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   13cf9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13cfe:	48 89 d6             	mov    %rdx,%rsi
   13d01:	48 89 c7             	mov    %rax,%rdi
   13d04:	e8 5b e6 ff ff       	call   12364 <ema_page_committed>
   13d09:	83 f0 01             	xor    $0x1,%eax
   13d0c:	84 c0                	test   %al,%al
   13d0e:	74 0a                	je     13d1a <ema_change_to_tcs+0x78>
   13d10:	b8 0d 00 00 00       	mov    $0xd,%eax
   13d15:	e9 3d 01 00 00       	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13d1a:	81 7c 24 30 00 01 00 	cmpl   $0x100,0x30(%rsp)
   13d21:	00 
   13d22:	75 0a                	jne    13d2e <ema_change_to_tcs+0x8c>
   13d24:	b8 00 00 00 00       	mov    $0x0,%eax
   13d29:	e9 29 01 00 00       	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13d2e:	83 7c 24 2c 03       	cmpl   $0x3,0x2c(%rsp)
   13d33:	74 0a                	je     13d3f <ema_change_to_tcs+0x9d>
   13d35:	b8 0d 00 00 00       	mov    $0xd,%eax
   13d3a:	e9 18 01 00 00       	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13d3f:	81 7c 24 30 00 02 00 	cmpl   $0x200,0x30(%rsp)
   13d46:	00 
   13d47:	74 0a                	je     13d53 <ema_change_to_tcs+0xb1>
   13d49:	b8 0d 00 00 00       	mov    $0xd,%eax
   13d4e:	e9 04 01 00 00       	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13d53:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   13d57:	80 cc 01             	or     $0x1,%ah
   13d5a:	89 c1                	mov    %eax,%ecx
   13d5c:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   13d60:	0b 44 24 30          	or     0x30(%rsp),%eax
   13d64:	89 c2                	mov    %eax,%edx
   13d66:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13d6b:	be 00 10 00 00       	mov    $0x1000,%esi
   13d70:	48 89 c7             	mov    %rax,%rdi
   13d73:	e8 89 8f ff ff       	call   cd01 <sgx_mm_modify_ocall>
   13d78:	89 44 24 34          	mov    %eax,0x34(%rsp)
   13d7c:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   13d81:	74 0a                	je     13d8d <ema_change_to_tcs+0xeb>
   13d83:	b8 0e 00 00 00       	mov    $0xe,%eax
   13d88:	e9 ca 00 00 00       	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13d8d:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   13d92:	b8 00 00 00 00       	mov    $0x0,%eax
   13d97:	b9 08 00 00 00       	mov    $0x8,%ecx
   13d9c:	48 89 d7             	mov    %rdx,%rdi
   13d9f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13da2:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
   13da9:	00 00 
   13dab:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   13db0:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   13db5:	48 89 d6             	mov    %rdx,%rsi
   13db8:	48 89 c7             	mov    %rax,%rdi
   13dbb:	e8 f3 b6 01 00       	call   2f4b3 <do_eaccept>
   13dc0:	85 c0                	test   %eax,%eax
   13dc2:	74 05                	je     13dc9 <ema_change_to_tcs+0x127>
   13dc4:	e8 62 b7 01 00       	call   2f52b <abort>
   13dc9:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   13dd0:	00 00 
   13dd2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13dd7:	48 8d b8 00 10 00 00 	lea    0x1000(%rax),%rdi
   13dde:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   13de3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   13de8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13ded:	48 89 d1             	mov    %rdx,%rcx
   13df0:	48 89 fa             	mov    %rdi,%rdx
   13df3:	48 89 c7             	mov    %rax,%rdi
   13df6:	e8 b0 ea ff ff       	call   128ab <ema_split_ex>
   13dfb:	89 44 24 34          	mov    %eax,0x34(%rsp)
   13dff:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   13e04:	74 06                	je     13e0c <ema_change_to_tcs+0x16a>
   13e06:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13e0a:	eb 4b                	jmp    13e57 <ema_change_to_tcs+0x1b5>
   13e0c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13e11:	48 85 c0             	test   %rax,%rax
   13e14:	75 1f                	jne    13e35 <ema_change_to_tcs+0x193>
   13e16:	48 8d 0d 71 d6 01 00 	lea    0x1d671(%rip),%rcx        # 3148e <__func__.1568+0xfe>
   13e1d:	48 8d 15 dc d7 01 00 	lea    0x1d7dc(%rip),%rdx        # 31600 <__func__.2112>
   13e24:	be ba 03 00 00       	mov    $0x3ba,%esi
   13e29:	48 8d 3d 8a d5 01 00 	lea    0x1d58a(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   13e30:	e8 a4 2e 00 00       	call   16cd9 <__assert>
   13e35:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13e3a:	48 8b 40 18          	mov    0x18(%rax),%rax
   13e3e:	48 25 f8 00 ff ff    	and    $0xffffffffffff00f8,%rax
   13e44:	48 89 c2             	mov    %rax,%rdx
   13e47:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13e4c:	80 ce 01             	or     $0x1,%dh
   13e4f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   13e53:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13e57:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
   13e5e:	00 
   13e5f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13e66:	00 00 
   13e68:	74 05                	je     13e6f <ema_change_to_tcs+0x1cd>
   13e6a:	e8 18 d4 00 00       	call   21287 <__stack_chk_fail>
   13e6f:	c9                   	leave  
   13e70:	c3                   	ret    

0000000000013e71 <ema_modify_permissions>:
   13e71:	f3 0f 1e fa          	endbr64 
   13e75:	55                   	push   %rbp
   13e76:	48 89 e5             	mov    %rsp,%rbp
   13e79:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   13e7d:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   13e84:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   13e89:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   13e8e:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   13e93:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
   13e97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13e9e:	00 00 
   13ea0:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   13ea7:	00 
   13ea8:	31 c0                	xor    %eax,%eax
   13eaa:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13eaf:	48 8b 40 18          	mov    0x18(%rax),%rax
   13eb3:	83 e0 07             	and    $0x7,%eax
   13eb6:	89 44 24 58          	mov    %eax,0x58(%rsp)
   13eba:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13ebf:	48 8b 40 18          	mov    0x18(%rax),%rax
   13ec3:	25 00 ff 00 00       	and    $0xff00,%eax
   13ec8:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   13ecc:	8b 44 24 58          	mov    0x58(%rsp),%eax
   13ed0:	3b 44 24 34          	cmp    0x34(%rsp),%eax
   13ed4:	75 0a                	jne    13ee0 <ema_modify_permissions+0x6f>
   13ed6:	b8 00 00 00 00       	mov    $0x0,%eax
   13edb:	e9 93 02 00 00       	jmp    14173 <ema_modify_permissions+0x302>
   13ee0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13ee5:	48 8b 00             	mov    (%rax),%rax
   13ee8:	48 39 44 24 40       	cmp    %rax,0x40(%rsp)
   13eed:	48 0f 43 44 24 40    	cmovae 0x40(%rsp),%rax
   13ef3:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   13ef8:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13efd:	48 8b 10             	mov    (%rax),%rdx
   13f00:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13f05:	48 8b 40 08          	mov    0x8(%rax),%rax
   13f09:	48 01 d0             	add    %rdx,%rax
   13f0c:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   13f11:	48 0f 46 44 24 38    	cmovbe 0x38(%rsp),%rax
   13f17:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13f1c:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13f20:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   13f24:	89 c1                	mov    %eax,%ecx
   13f26:	8b 44 24 58          	mov    0x58(%rsp),%eax
   13f2a:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   13f2e:	89 c2                	mov    %eax,%edx
   13f30:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   13f35:	48 2b 44 24 70       	sub    0x70(%rsp),%rax
   13f3a:	48 89 c6             	mov    %rax,%rsi
   13f3d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   13f42:	48 89 c7             	mov    %rax,%rdi
   13f45:	e8 b7 8d ff ff       	call   cd01 <sgx_mm_modify_ocall>
   13f4a:	89 44 24 54          	mov    %eax,0x54(%rsp)
   13f4e:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   13f53:	74 0a                	je     13f5f <ema_modify_permissions+0xee>
   13f55:	b8 0e 00 00 00       	mov    $0xe,%eax
   13f5a:	e9 14 02 00 00       	jmp    14173 <ema_modify_permissions+0x302>
   13f5f:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   13f66:	00 
   13f67:	b8 00 00 00 00       	mov    $0x0,%eax
   13f6c:	b9 08 00 00 00       	mov    $0x8,%ecx
   13f71:	48 89 d7             	mov    %rdx,%rdi
   13f74:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13f77:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13f7b:	0d 20 02 00 00       	or     $0x220,%eax
   13f80:	48 98                	cltq   
   13f82:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   13f89:	00 
   13f8a:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   13f8f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   13f94:	eb 67                	jmp    13ffd <ema_modify_permissions+0x18c>
   13f96:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13f9a:	0b 44 24 58          	or     0x58(%rsp),%eax
   13f9e:	39 44 24 58          	cmp    %eax,0x58(%rsp)
   13fa2:	74 18                	je     13fbc <ema_modify_permissions+0x14b>
   13fa4:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   13fa9:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   13fb0:	00 
   13fb1:	48 89 d6             	mov    %rdx,%rsi
   13fb4:	48 89 c7             	mov    %rax,%rdi
   13fb7:	e8 33 b5 01 00       	call   2f4ef <do_emodpe>
   13fbc:	8b 44 24 34          	mov    0x34(%rsp),%eax
   13fc0:	83 e0 06             	and    $0x6,%eax
   13fc3:	83 f8 06             	cmp    $0x6,%eax
   13fc6:	74 2c                	je     13ff4 <ema_modify_permissions+0x183>
   13fc8:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   13fcd:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   13fd4:	00 
   13fd5:	48 89 d6             	mov    %rdx,%rsi
   13fd8:	48 89 c7             	mov    %rax,%rdi
   13fdb:	e8 d3 b4 01 00       	call   2f4b3 <do_eaccept>
   13fe0:	89 44 24 54          	mov    %eax,0x54(%rsp)
   13fe4:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   13fe9:	74 09                	je     13ff4 <ema_modify_permissions+0x183>
   13feb:	8b 44 24 54          	mov    0x54(%rsp),%eax
   13fef:	e9 7f 01 00 00       	jmp    14173 <ema_modify_permissions+0x302>
   13ff4:	48 81 44 24 68 00 10 	addq   $0x1000,0x68(%rsp)
   13ffb:	00 00 
   13ffd:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   14002:	48 3b 44 24 78       	cmp    0x78(%rsp),%rax
   14007:	72 8d                	jb     13f96 <ema_modify_permissions+0x125>
   14009:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1400e:	48 8b 00             	mov    (%rax),%rax
   14011:	48 39 44 24 70       	cmp    %rax,0x70(%rsp)
   14016:	76 6f                	jbe    14087 <ema_modify_permissions+0x216>
   14018:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   1401f:	00 00 
   14021:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
   14026:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1402b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   14030:	48 89 d1             	mov    %rdx,%rcx
   14033:	ba 00 00 00 00       	mov    $0x0,%edx
   14038:	48 89 c7             	mov    %rax,%rdi
   1403b:	e8 3e e6 ff ff       	call   1267e <ema_split>
   14040:	89 44 24 54          	mov    %eax,0x54(%rsp)
   14044:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   14049:	74 09                	je     14054 <ema_modify_permissions+0x1e3>
   1404b:	8b 44 24 54          	mov    0x54(%rsp),%eax
   1404f:	e9 1f 01 00 00       	jmp    14173 <ema_modify_permissions+0x302>
   14054:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   14059:	48 85 c0             	test   %rax,%rax
   1405c:	75 1f                	jne    1407d <ema_modify_permissions+0x20c>
   1405e:	48 8d 0d 20 d4 01 00 	lea    0x1d420(%rip),%rcx        # 31485 <__func__.1568+0xf5>
   14065:	48 8d 15 b4 d5 01 00 	lea    0x1d5b4(%rip),%rdx        # 31620 <__func__.2130>
   1406c:	be ea 03 00 00       	mov    $0x3ea,%esi
   14071:	48 8d 3d 42 d3 01 00 	lea    0x1d342(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   14078:	e8 5c 2c 00 00       	call   16cd9 <__assert>
   1407d:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   14082:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14087:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1408c:	48 8b 10             	mov    (%rax),%rdx
   1408f:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   14094:	48 8b 40 08          	mov    0x8(%rax),%rax
   14098:	48 01 d0             	add    %rdx,%rax
   1409b:	48 39 44 24 78       	cmp    %rax,0x78(%rsp)
   140a0:	73 6f                	jae    14111 <ema_modify_permissions+0x2a0>
   140a2:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   140a9:	00 00 
   140ab:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
   140b0:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   140b5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   140ba:	48 89 d1             	mov    %rdx,%rcx
   140bd:	ba 01 00 00 00       	mov    $0x1,%edx
   140c2:	48 89 c7             	mov    %rax,%rdi
   140c5:	e8 b4 e5 ff ff       	call   1267e <ema_split>
   140ca:	89 44 24 54          	mov    %eax,0x54(%rsp)
   140ce:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   140d3:	74 09                	je     140de <ema_modify_permissions+0x26d>
   140d5:	8b 44 24 54          	mov    0x54(%rsp),%eax
   140d9:	e9 95 00 00 00       	jmp    14173 <ema_modify_permissions+0x302>
   140de:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   140e3:	48 85 c0             	test   %rax,%rax
   140e6:	75 1f                	jne    14107 <ema_modify_permissions+0x296>
   140e8:	48 8d 0d 96 d3 01 00 	lea    0x1d396(%rip),%rcx        # 31485 <__func__.1568+0xf5>
   140ef:	48 8d 15 2a d5 01 00 	lea    0x1d52a(%rip),%rdx        # 31620 <__func__.2130>
   140f6:	be f3 03 00 00       	mov    $0x3f3,%esi
   140fb:	48 8d 3d b8 d2 01 00 	lea    0x1d2b8(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   14102:	e8 d2 2b 00 00       	call   16cd9 <__assert>
   14107:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1410c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14111:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   14116:	48 8b 40 18          	mov    0x18(%rax),%rax
   1411a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1411e:	48 89 c2             	mov    %rax,%rdx
   14121:	8b 44 24 34          	mov    0x34(%rsp),%eax
   14125:	48 98                	cltq   
   14127:	48 09 c2             	or     %rax,%rdx
   1412a:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1412f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   14133:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   14138:	75 35                	jne    1416f <ema_modify_permissions+0x2fe>
   1413a:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1413f:	48 2b 44 24 70       	sub    0x70(%rsp),%rax
   14144:	48 89 c6             	mov    %rax,%rsi
   14147:	8b 4c 24 5c          	mov    0x5c(%rsp),%ecx
   1414b:	8b 54 24 5c          	mov    0x5c(%rsp),%edx
   1414f:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   14154:	48 89 c7             	mov    %rax,%rdi
   14157:	e8 a5 8b ff ff       	call   cd01 <sgx_mm_modify_ocall>
   1415c:	89 44 24 54          	mov    %eax,0x54(%rsp)
   14160:	83 7c 24 54 00       	cmpl   $0x0,0x54(%rsp)
   14165:	74 08                	je     1416f <ema_modify_permissions+0x2fe>
   14167:	c7 44 24 54 0e 00 00 	movl   $0xe,0x54(%rsp)
   1416e:	00 
   1416f:	8b 44 24 54          	mov    0x54(%rsp),%eax
   14173:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
   1417a:	00 
   1417b:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   14182:	00 00 
   14184:	74 05                	je     1418b <ema_modify_permissions+0x31a>
   14186:	e8 fc d0 00 00       	call   21287 <__stack_chk_fail>
   1418b:	c9                   	leave  
   1418c:	c3                   	ret    

000000000001418d <ema_can_modify_permissions>:
   1418d:	f3 0f 1e fa          	endbr64 
   14191:	55                   	push   %rbp
   14192:	48 89 e5             	mov    %rsp,%rbp
   14195:	48 83 ec 50          	sub    $0x50,%rsp
   14199:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1419d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   141a1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   141a5:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   141a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   141ad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   141b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   141b5:	48 8b 00             	mov    (%rax),%rax
   141b8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   141bc:	e9 0f 01 00 00       	jmp    142d0 <ema_can_modify_permissions+0x143>
   141c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   141c5:	48 8b 00             	mov    (%rax),%rax
   141c8:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   141cc:	74 0a                	je     141d8 <ema_can_modify_permissions+0x4b>
   141ce:	b8 16 00 00 00       	mov    $0x16,%eax
   141d3:	e9 1c 01 00 00       	jmp    142f4 <ema_can_modify_permissions+0x167>
   141d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   141dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   141e0:	25 00 02 00 00       	and    $0x200,%eax
   141e5:	48 85 c0             	test   %rax,%rax
   141e8:	75 0a                	jne    141f4 <ema_can_modify_permissions+0x67>
   141ea:	b8 0d 00 00 00       	mov    $0xd,%eax
   141ef:	e9 00 01 00 00       	jmp    142f4 <ema_can_modify_permissions+0x167>
   141f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   141f8:	8b 40 10             	mov    0x10(%rax),%eax
   141fb:	83 e0 01             	and    $0x1,%eax
   141fe:	85 c0                	test   %eax,%eax
   14200:	74 0a                	je     1420c <ema_can_modify_permissions+0x7f>
   14202:	b8 0d 00 00 00       	mov    $0xd,%eax
   14207:	e9 e8 00 00 00       	jmp    142f4 <ema_can_modify_permissions+0x167>
   1420c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14210:	48 8b 00             	mov    (%rax),%rax
   14213:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   14217:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   1421c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14220:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14224:	48 8b 10             	mov    (%rax),%rdx
   14227:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1422b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1422f:	48 01 d0             	add    %rdx,%rax
   14232:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   14236:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   1423b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1423f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14243:	48 8b 00             	mov    (%rax),%rax
   14246:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1424a:	48 29 c2             	sub    %rax,%rdx
   1424d:	48 89 d0             	mov    %rdx,%rax
   14250:	48 c1 e8 0c          	shr    $0xc,%rax
   14254:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14258:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1425c:	48 8b 00             	mov    (%rax),%rax
   1425f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14263:	48 29 c2             	sub    %rax,%rdx
   14266:	48 89 d0             	mov    %rdx,%rax
   14269:	48 c1 e8 0c          	shr    $0xc,%rax
   1426d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14271:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14275:	48 8b 40 20          	mov    0x20(%rax),%rax
   14279:	48 85 c0             	test   %rax,%rax
   1427c:	74 29                	je     142a7 <ema_can_modify_permissions+0x11a>
   1427e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14282:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   14286:	48 89 c2             	mov    %rax,%rdx
   14289:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1428d:	48 8b 40 20          	mov    0x20(%rax),%rax
   14291:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14295:	48 89 ce             	mov    %rcx,%rsi
   14298:	48 89 c7             	mov    %rax,%rdi
   1429b:	e8 1b d3 ff ff       	call   115bb <bit_array_test_range>
   142a0:	83 f0 01             	xor    $0x1,%eax
   142a3:	84 c0                	test   %al,%al
   142a5:	74 07                	je     142ae <ema_can_modify_permissions+0x121>
   142a7:	b8 16 00 00 00       	mov    $0x16,%eax
   142ac:	eb 46                	jmp    142f4 <ema_can_modify_permissions+0x167>
   142ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   142b2:	48 8b 10             	mov    (%rax),%rdx
   142b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   142b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   142bd:	48 01 d0             	add    %rdx,%rax
   142c0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   142c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   142c8:	48 8b 40 38          	mov    0x38(%rax),%rax
   142cc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   142d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   142d4:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   142d8:	0f 85 e3 fe ff ff    	jne    141c1 <ema_can_modify_permissions+0x34>
   142de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142e2:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   142e6:	73 07                	jae    142ef <ema_can_modify_permissions+0x162>
   142e8:	b8 16 00 00 00       	mov    $0x16,%eax
   142ed:	eb 05                	jmp    142f4 <ema_can_modify_permissions+0x167>
   142ef:	b8 00 00 00 00       	mov    $0x0,%eax
   142f4:	c9                   	leave  
   142f5:	c3                   	ret    

00000000000142f6 <ema_modify_permissions_loop_nocheck>:
   142f6:	f3 0f 1e fa          	endbr64 
   142fa:	55                   	push   %rbp
   142fb:	48 89 e5             	mov    %rsp,%rbp
   142fe:	48 83 ec 50          	sub    $0x50,%rsp
   14302:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14306:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1430a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1430e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   14312:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)
   14316:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   1431d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14321:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14325:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1432c:	00 
   1432d:	eb 39                	jmp    14368 <ema_modify_permissions_loop_nocheck+0x72>
   1432f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14333:	48 8b 40 38          	mov    0x38(%rax),%rax
   14337:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1433b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
   1433e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14342:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   14346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1434a:	48 89 c7             	mov    %rax,%rdi
   1434d:	e8 1f fb ff ff       	call   13e71 <ema_modify_permissions>
   14352:	89 45 ec             	mov    %eax,-0x14(%rbp)
   14355:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   14359:	74 05                	je     14360 <ema_modify_permissions_loop_nocheck+0x6a>
   1435b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1435e:	eb 15                	jmp    14375 <ema_modify_permissions_loop_nocheck+0x7f>
   14360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14364:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14368:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1436c:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   14370:	75 bd                	jne    1432f <ema_modify_permissions_loop_nocheck+0x39>
   14372:	8b 45 ec             	mov    -0x14(%rbp),%eax
   14375:	c9                   	leave  
   14376:	c3                   	ret    

0000000000014377 <ema_modify_permissions_loop>:
   14377:	f3 0f 1e fa          	endbr64 
   1437b:	55                   	push   %rbp
   1437c:	48 89 e5             	mov    %rsp,%rbp
   1437f:	48 83 ec 40          	sub    $0x40,%rsp
   14383:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14387:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1438b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1438f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14393:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
   14397:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1439b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1439f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   143a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143a7:	48 89 c7             	mov    %rax,%rdi
   143aa:	e8 de fd ff ff       	call   1418d <ema_can_modify_permissions>
   143af:	89 45 fc             	mov    %eax,-0x4(%rbp)
   143b2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   143b6:	74 05                	je     143bd <ema_modify_permissions_loop+0x46>
   143b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   143bb:	eb 1e                	jmp    143db <ema_modify_permissions_loop+0x64>
   143bd:	8b 7d cc             	mov    -0x34(%rbp),%edi
   143c0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   143c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   143c8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   143cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143d0:	41 89 f8             	mov    %edi,%r8d
   143d3:	48 89 c7             	mov    %rax,%rdi
   143d6:	e8 1b ff ff ff       	call   142f6 <ema_modify_permissions_loop_nocheck>
   143db:	c9                   	leave  
   143dc:	c3                   	ret    

00000000000143dd <ema_can_commit_data>:
   143dd:	f3 0f 1e fa          	endbr64 
   143e1:	55                   	push   %rbp
   143e2:	48 89 e5             	mov    %rsp,%rbp
   143e5:	48 83 ec 50          	sub    $0x50,%rsp
   143e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   143ed:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   143f1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   143f5:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   143f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   143fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14401:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14405:	48 8b 00             	mov    (%rax),%rax
   14408:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1440c:	e9 42 01 00 00       	jmp    14553 <ema_can_commit_data+0x176>
   14411:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14415:	48 8b 00             	mov    (%rax),%rax
   14418:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1441c:	74 0a                	je     14428 <ema_can_commit_data+0x4b>
   1441e:	b8 16 00 00 00       	mov    $0x16,%eax
   14423:	e9 4f 01 00 00       	jmp    14577 <ema_can_commit_data+0x19a>
   14428:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1442c:	48 8b 40 18          	mov    0x18(%rax),%rax
   14430:	83 e0 02             	and    $0x2,%eax
   14433:	48 85 c0             	test   %rax,%rax
   14436:	75 0a                	jne    14442 <ema_can_commit_data+0x65>
   14438:	b8 0d 00 00 00       	mov    $0xd,%eax
   1443d:	e9 35 01 00 00       	jmp    14577 <ema_can_commit_data+0x19a>
   14442:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14446:	48 8b 40 18          	mov    0x18(%rax),%rax
   1444a:	25 00 02 00 00       	and    $0x200,%eax
   1444f:	48 85 c0             	test   %rax,%rax
   14452:	75 0a                	jne    1445e <ema_can_commit_data+0x81>
   14454:	b8 0d 00 00 00       	mov    $0xd,%eax
   14459:	e9 19 01 00 00       	jmp    14577 <ema_can_commit_data+0x19a>
   1445e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14462:	8b 40 10             	mov    0x10(%rax),%eax
   14465:	83 e0 01             	and    $0x1,%eax
   14468:	85 c0                	test   %eax,%eax
   1446a:	74 0a                	je     14476 <ema_can_commit_data+0x99>
   1446c:	b8 0d 00 00 00       	mov    $0xd,%eax
   14471:	e9 01 01 00 00       	jmp    14577 <ema_can_commit_data+0x19a>
   14476:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1447a:	8b 40 10             	mov    0x10(%rax),%eax
   1447d:	83 e0 04             	and    $0x4,%eax
   14480:	85 c0                	test   %eax,%eax
   14482:	75 0a                	jne    1448e <ema_can_commit_data+0xb1>
   14484:	b8 16 00 00 00       	mov    $0x16,%eax
   14489:	e9 e9 00 00 00       	jmp    14577 <ema_can_commit_data+0x19a>
   1448e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14492:	48 8b 40 20          	mov    0x20(%rax),%rax
   14496:	48 85 c0             	test   %rax,%rax
   14499:	0f 84 92 00 00 00    	je     14531 <ema_can_commit_data+0x154>
   1449f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144a3:	48 8b 00             	mov    (%rax),%rax
   144a6:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   144aa:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   144af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   144b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144b7:	48 8b 10             	mov    (%rax),%rdx
   144ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144be:	48 8b 40 08          	mov    0x8(%rax),%rax
   144c2:	48 01 d0             	add    %rdx,%rax
   144c5:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   144c9:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   144ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   144d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144d6:	48 8b 00             	mov    (%rax),%rax
   144d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   144dd:	48 29 c2             	sub    %rax,%rdx
   144e0:	48 89 d0             	mov    %rdx,%rax
   144e3:	48 c1 e8 0c          	shr    $0xc,%rax
   144e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   144eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144ef:	48 8b 00             	mov    (%rax),%rax
   144f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   144f6:	48 29 c2             	sub    %rax,%rdx
   144f9:	48 89 d0             	mov    %rdx,%rax
   144fc:	48 c1 e8 0c          	shr    $0xc,%rax
   14500:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14508:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
   1450c:	48 89 c2             	mov    %rax,%rdx
   1450f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14513:	48 8b 40 20          	mov    0x20(%rax),%rax
   14517:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1451b:	48 89 ce             	mov    %rcx,%rsi
   1451e:	48 89 c7             	mov    %rax,%rdi
   14521:	e8 dd d1 ff ff       	call   11703 <bit_array_test_range_any>
   14526:	84 c0                	test   %al,%al
   14528:	74 07                	je     14531 <ema_can_commit_data+0x154>
   1452a:	b8 0d 00 00 00       	mov    $0xd,%eax
   1452f:	eb 46                	jmp    14577 <ema_can_commit_data+0x19a>
   14531:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14535:	48 8b 10             	mov    (%rax),%rdx
   14538:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1453c:	48 8b 40 08          	mov    0x8(%rax),%rax
   14540:	48 01 d0             	add    %rdx,%rax
   14543:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   14547:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1454b:	48 8b 40 38          	mov    0x38(%rax),%rax
   1454f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14553:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14557:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1455b:	0f 85 b0 fe ff ff    	jne    14411 <ema_can_commit_data+0x34>
   14561:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14565:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   14569:	73 07                	jae    14572 <ema_can_commit_data+0x195>
   1456b:	b8 16 00 00 00       	mov    $0x16,%eax
   14570:	eb 05                	jmp    14577 <ema_can_commit_data+0x19a>
   14572:	b8 00 00 00 00       	mov    $0x0,%eax
   14577:	c9                   	leave  
   14578:	c3                   	ret    

0000000000014579 <ema_do_commit_data>:
   14579:	f3 0f 1e fa          	endbr64 
   1457d:	55                   	push   %rbp
   1457e:	48 89 e5             	mov    %rsp,%rbp
   14581:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   14585:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   1458c:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
   14591:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
   14596:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   1459b:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   145a0:	44 89 44 24 3c       	mov    %r8d,0x3c(%rsp)
   145a5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   145ac:	00 00 
   145ae:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   145b5:	00 
   145b6:	31 c0                	xor    %eax,%eax
   145b8:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   145bd:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   145c2:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   145c7:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   145cc:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   145d3:	00 
   145d4:	b8 00 00 00 00       	mov    $0x0,%eax
   145d9:	b9 08 00 00 00       	mov    $0x8,%ecx
   145de:	48 89 d7             	mov    %rdx,%rdi
   145e1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   145e4:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
   145e8:	80 cc 02             	or     $0x2,%ah
   145eb:	48 98                	cltq   
   145ed:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   145f4:	00 
   145f5:	eb 41                	jmp    14638 <ema_do_commit_data+0xbf>
   145f7:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   145fc:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
   14601:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   14608:	00 
   14609:	48 89 ce             	mov    %rcx,%rsi
   1460c:	48 89 c7             	mov    %rax,%rdi
   1460f:	e8 bd ae 01 00       	call   2f4d1 <do_eacceptcopy>
   14614:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
   14618:	83 7c 24 6c 00       	cmpl   $0x0,0x6c(%rsp)
   1461d:	74 07                	je     14626 <ema_do_commit_data+0xad>
   1461f:	b8 0e 00 00 00       	mov    $0xe,%eax
   14624:	eb 38                	jmp    1465e <ema_do_commit_data+0xe5>
   14626:	48 81 44 24 70 00 10 	addq   $0x1000,0x70(%rsp)
   1462d:	00 00 
   1462f:	48 81 44 24 78 00 10 	addq   $0x1000,0x78(%rsp)
   14636:	00 00 
   14638:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1463d:	48 3b 44 24 48       	cmp    0x48(%rsp),%rax
   14642:	72 b3                	jb     145f7 <ema_do_commit_data+0x7e>
   14644:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   14649:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1464e:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   14653:	48 89 ce             	mov    %rcx,%rsi
   14656:	48 89 c7             	mov    %rax,%rdi
   14659:	e8 e2 db ff ff       	call   12240 <ema_set_eaccept>
   1465e:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
   14665:	00 
   14666:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1466d:	00 00 
   1466f:	74 05                	je     14676 <ema_do_commit_data+0xfd>
   14671:	e8 11 cc 00 00       	call   21287 <__stack_chk_fail>
   14676:	c9                   	leave  
   14677:	c3                   	ret    

0000000000014678 <ema_do_commit_data_loop>:
   14678:	f3 0f 1e fa          	endbr64 
   1467c:	55                   	push   %rbp
   1467d:	48 89 e5             	mov    %rsp,%rbp
   14680:	48 83 ec 60          	sub    $0x60,%rsp
   14684:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14688:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1468c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14690:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   14694:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   14698:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
   1469c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   146a3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   146a7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   146ab:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   146af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146b3:	48 89 c7             	mov    %rax,%rdi
   146b6:	e8 22 fd ff ff       	call   143dd <ema_can_commit_data>
   146bb:	89 45 dc             	mov    %eax,-0x24(%rbp)
   146be:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   146c2:	74 08                	je     146cc <ema_do_commit_data_loop+0x54>
   146c4:	8b 45 dc             	mov    -0x24(%rbp),%eax
   146c7:	e9 c0 00 00 00       	jmp    1478c <ema_do_commit_data_loop+0x114>
   146cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146d0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   146d4:	e9 81 00 00 00       	jmp    1475a <ema_do_commit_data_loop+0xe2>
   146d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146dd:	48 8b 00             	mov    (%rax),%rax
   146e0:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   146e4:	48 0f 43 45 b8       	cmovae -0x48(%rbp),%rax
   146e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   146ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146f1:	48 8b 10             	mov    (%rax),%rdx
   146f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146f8:	48 8b 40 08          	mov    0x8(%rax),%rax
   146fc:	48 01 d0             	add    %rdx,%rax
   146ff:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   14703:	48 0f 46 45 b0       	cmovbe -0x50(%rbp),%rax
   14708:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1470c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14710:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
   14714:	48 89 c2             	mov    %rax,%rdx
   14717:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1471b:	48 01 d0             	add    %rdx,%rax
   1471e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14722:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   14725:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   14729:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1472d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   14731:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14735:	41 89 f8             	mov    %edi,%r8d
   14738:	48 89 c7             	mov    %rax,%rdi
   1473b:	e8 39 fe ff ff       	call   14579 <ema_do_commit_data>
   14740:	89 45 dc             	mov    %eax,-0x24(%rbp)
   14743:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   14747:	74 05                	je     1474e <ema_do_commit_data_loop+0xd6>
   14749:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1474c:	eb 3e                	jmp    1478c <ema_do_commit_data_loop+0x114>
   1474e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14752:	48 8b 40 38          	mov    0x38(%rax),%rax
   14756:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1475a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1475e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   14762:	0f 85 71 ff ff ff    	jne    146d9 <ema_do_commit_data_loop+0x61>
   14768:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   1476b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1476f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14773:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   14777:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1477b:	41 89 f8             	mov    %edi,%r8d
   1477e:	48 89 c7             	mov    %rax,%rdi
   14781:	e8 70 fb ff ff       	call   142f6 <ema_modify_permissions_loop_nocheck>
   14786:	89 45 dc             	mov    %eax,-0x24(%rbp)
   14789:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1478c:	c9                   	leave  
   1478d:	c3                   	ret    

000000000001478e <ema_realloc_from_reserve_range>:
   1478e:	f3 0f 1e fa          	endbr64 
   14792:	55                   	push   %rbp
   14793:	48 89 e5             	mov    %rsp,%rbp
   14796:	48 83 ec 70          	sub    $0x70,%rsp
   1479a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1479e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   147a2:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   147a6:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   147aa:	44 89 45 9c          	mov    %r8d,-0x64(%rbp)
   147ae:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
   147b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   147b6:	48 85 c0             	test   %rax,%rax
   147b9:	75 1f                	jne    147da <ema_realloc_from_reserve_range+0x4c>
   147bb:	48 8d 0d d0 cc 01 00 	lea    0x1ccd0(%rip),%rcx        # 31492 <__func__.1568+0x102>
   147c2:	48 8d 15 77 ce 01 00 	lea    0x1ce77(%rip),%rdx        # 31640 <__func__.2223>
   147c9:	be 9a 04 00 00       	mov    $0x49a,%esi
   147ce:	48 8d 3d e5 cb 01 00 	lea    0x1cbe5(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   147d5:	e8 ff 24 00 00       	call   16cd9 <__assert>
   147da:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   147de:	48 85 c0             	test   %rax,%rax
   147e1:	75 1f                	jne    14802 <ema_realloc_from_reserve_range+0x74>
   147e3:	48 8d 0d b6 cc 01 00 	lea    0x1ccb6(%rip),%rcx        # 314a0 <__func__.1568+0x110>
   147ea:	48 8d 15 4f ce 01 00 	lea    0x1ce4f(%rip),%rdx        # 31640 <__func__.2223>
   147f1:	be 9b 04 00 00       	mov    $0x49b,%esi
   147f6:	48 8d 3d bd cb 01 00 	lea    0x1cbbd(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   147fd:	e8 d7 24 00 00       	call   16cd9 <__assert>
   14802:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14806:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1480a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1480e:	48 8b 00             	mov    (%rax),%rax
   14811:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   14815:	77 1f                	ja     14836 <ema_realloc_from_reserve_range+0xa8>
   14817:	48 8d 0d 8f cc 01 00 	lea    0x1cc8f(%rip),%rcx        # 314ad <__func__.1568+0x11d>
   1481e:	48 8d 15 1b ce 01 00 	lea    0x1ce1b(%rip),%rdx        # 31640 <__func__.2223>
   14825:	be 9d 04 00 00       	mov    $0x49d,%esi
   1482a:	48 8d 3d 89 cb 01 00 	lea    0x1cb89(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   14831:	e8 a3 24 00 00       	call   16cd9 <__assert>
   14836:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1483a:	48 8b 40 40          	mov    0x40(%rax),%rax
   1483e:	48 8b 10             	mov    (%rax),%rdx
   14841:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14845:	48 8b 40 40          	mov    0x40(%rax),%rax
   14849:	48 8b 40 08          	mov    0x8(%rax),%rax
   1484d:	48 01 d0             	add    %rdx,%rax
   14850:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   14854:	72 1f                	jb     14875 <ema_realloc_from_reserve_range+0xe7>
   14856:	48 8d 0d 6b cc 01 00 	lea    0x1cc6b(%rip),%rcx        # 314c8 <__func__.1568+0x138>
   1485d:	48 8d 15 dc cd 01 00 	lea    0x1cddc(%rip),%rdx        # 31640 <__func__.2223>
   14864:	be 9e 04 00 00       	mov    $0x49e,%esi
   14869:	48 8d 3d 4a cb 01 00 	lea    0x1cb4a(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   14870:	e8 64 24 00 00       	call   16cd9 <__assert>
   14875:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14879:	48 8b 00             	mov    (%rax),%rax
   1487c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   14880:	eb 6d                	jmp    148ef <ema_realloc_from_reserve_range+0x161>
   14882:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14886:	48 89 c7             	mov    %rax,%rdi
   14889:	e8 08 10 00 00       	call   15896 <can_erealloc>
   1488e:	85 c0                	test   %eax,%eax
   14890:	75 0a                	jne    1489c <ema_realloc_from_reserve_range+0x10e>
   14892:	b8 00 00 00 00       	mov    $0x0,%eax
   14897:	e9 e4 01 00 00       	jmp    14a80 <ema_realloc_from_reserve_range+0x2f2>
   1489c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148a0:	48 8b 00             	mov    (%rax),%rax
   148a3:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   148a7:	74 0a                	je     148b3 <ema_realloc_from_reserve_range+0x125>
   148a9:	b8 00 00 00 00       	mov    $0x0,%eax
   148ae:	e9 cd 01 00 00       	jmp    14a80 <ema_realloc_from_reserve_range+0x2f2>
   148b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148b7:	8b 40 10             	mov    0x10(%rax),%eax
   148ba:	83 e0 01             	and    $0x1,%eax
   148bd:	85 c0                	test   %eax,%eax
   148bf:	74 24                	je     148e5 <ema_realloc_from_reserve_range+0x157>
   148c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148c5:	48 8b 10             	mov    (%rax),%rdx
   148c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148cc:	48 8b 40 08          	mov    0x8(%rax),%rax
   148d0:	48 01 d0             	add    %rdx,%rax
   148d3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   148d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148db:	48 8b 40 38          	mov    0x38(%rax),%rax
   148df:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   148e3:	eb 0a                	jmp    148ef <ema_realloc_from_reserve_range+0x161>
   148e5:	b8 00 00 00 00       	mov    $0x0,%eax
   148ea:	e9 91 01 00 00       	jmp    14a80 <ema_realloc_from_reserve_range+0x2f2>
   148ef:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   148f3:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   148f7:	75 89                	jne    14882 <ema_realloc_from_reserve_range+0xf4>
   148f9:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   14900:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14904:	48 8b 40 40          	mov    0x40(%rax),%rax
   14908:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1490c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14910:	48 8b 00             	mov    (%rax),%rax
   14913:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   14917:	76 49                	jbe    14962 <ema_realloc_from_reserve_range+0x1d4>
   14919:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1491d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14921:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14925:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   14929:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   1492d:	48 89 d1             	mov    %rdx,%rcx
   14930:	ba 00 00 00 00       	mov    $0x0,%edx
   14935:	48 89 c7             	mov    %rax,%rdi
   14938:	e8 41 dd ff ff       	call   1267e <ema_split>
   1493d:	89 45 cc             	mov    %eax,-0x34(%rbp)
   14940:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   14944:	74 0a                	je     14950 <ema_realloc_from_reserve_range+0x1c2>
   14946:	b8 00 00 00 00       	mov    $0x0,%eax
   1494b:	e9 30 01 00 00       	jmp    14a80 <ema_realloc_from_reserve_range+0x2f2>
   14950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14954:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14958:	75 08                	jne    14962 <ema_realloc_from_reserve_range+0x1d4>
   1495a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1495e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14962:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14966:	48 8b 10             	mov    (%rax),%rdx
   14969:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1496d:	48 8b 40 08          	mov    0x8(%rax),%rax
   14971:	48 01 d0             	add    %rdx,%rax
   14974:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
   14978:	73 2f                	jae    149a9 <ema_realloc_from_reserve_range+0x21b>
   1497a:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   1497e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   14982:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14986:	48 89 d1             	mov    %rdx,%rcx
   14989:	ba 00 00 00 00       	mov    $0x0,%edx
   1498e:	48 89 c7             	mov    %rax,%rdi
   14991:	e8 e8 dc ff ff       	call   1267e <ema_split>
   14996:	89 45 cc             	mov    %eax,-0x34(%rbp)
   14999:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1499d:	74 16                	je     149b5 <ema_realloc_from_reserve_range+0x227>
   1499f:	b8 00 00 00 00       	mov    $0x0,%eax
   149a4:	e9 d7 00 00 00       	jmp    14a80 <ema_realloc_from_reserve_range+0x2f2>
   149a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   149ad:	48 8b 40 38          	mov    0x38(%rax),%rax
   149b1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   149b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   149b9:	8b 40 10             	mov    0x10(%rax),%eax
   149bc:	83 e0 01             	and    $0x1,%eax
   149bf:	85 c0                	test   %eax,%eax
   149c1:	75 1f                	jne    149e2 <ema_realloc_from_reserve_range+0x254>
   149c3:	48 8d 0d 36 cb 01 00 	lea    0x1cb36(%rip),%rcx        # 31500 <__func__.1568+0x170>
   149ca:	48 8d 15 6f cc 01 00 	lea    0x1cc6f(%rip),%rdx        # 31640 <__func__.2223>
   149d1:	be c8 04 00 00       	mov    $0x4c8,%esi
   149d6:	48 8d 3d dd c9 01 00 	lea    0x1c9dd(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   149dd:	e8 f7 22 00 00       	call   16cd9 <__assert>
   149e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   149e6:	48 8b 40 20          	mov    0x20(%rax),%rax
   149ea:	48 85 c0             	test   %rax,%rax
   149ed:	74 1f                	je     14a0e <ema_realloc_from_reserve_range+0x280>
   149ef:	48 8d 0d 2f cb 01 00 	lea    0x1cb2f(%rip),%rcx        # 31525 <__func__.1568+0x195>
   149f6:	48 8d 15 43 cc 01 00 	lea    0x1cc43(%rip),%rdx        # 31640 <__func__.2223>
   149fd:	be c9 04 00 00       	mov    $0x4c9,%esi
   14a02:	48 8d 3d b1 c9 01 00 	lea    0x1c9b1(%rip),%rdi        # 313ba <__func__.1568+0x2a>
   14a09:	e8 cb 22 00 00       	call   16cd9 <__assert>
   14a0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14a12:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14a16:	eb 20                	jmp    14a38 <ema_realloc_from_reserve_range+0x2aa>
   14a18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a1c:	48 8b 40 38          	mov    0x38(%rax),%rax
   14a20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14a24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a28:	48 89 c7             	mov    %rax,%rdi
   14a2b:	e8 58 e6 ff ff       	call   13088 <ema_destroy>
   14a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a34:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14a38:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14a3c:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   14a40:	75 d6                	jne    14a18 <ema_realloc_from_reserve_range+0x28a>
   14a42:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   14a46:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14a4a:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   14a4e:	48 89 c6             	mov    %rax,%rsi
   14a51:	4c 8b 45 18          	mov    0x18(%rbp),%r8
   14a55:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   14a59:	8b 55 9c             	mov    -0x64(%rbp),%edx
   14a5c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14a60:	48 83 ec 08          	sub    $0x8,%rsp
   14a64:	57                   	push   %rdi
   14a65:	4d 89 c1             	mov    %r8,%r9
   14a68:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   14a6c:	48 89 c7             	mov    %rax,%rdi
   14a6f:	e8 cc e4 ff ff       	call   12f40 <ema_new>
   14a74:	48 83 c4 10          	add    $0x10,%rsp
   14a78:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14a7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a80:	c9                   	leave  
   14a81:	c3                   	ret    

0000000000014a82 <ema_do_alloc>:
   14a82:	f3 0f 1e fa          	endbr64 
   14a86:	55                   	push   %rbp
   14a87:	48 89 e5             	mov    %rsp,%rbp
   14a8a:	48 83 ec 30          	sub    $0x30,%rsp
   14a8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14a92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a96:	8b 40 10             	mov    0x10(%rax),%eax
   14a99:	89 45 e8             	mov    %eax,-0x18(%rbp)
   14a9c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   14a9f:	83 e0 01             	and    $0x1,%eax
   14aa2:	85 c0                	test   %eax,%eax
   14aa4:	74 0a                	je     14ab0 <ema_do_alloc+0x2e>
   14aa6:	b8 00 00 00 00       	mov    $0x0,%eax
   14aab:	e9 ca 00 00 00       	jmp    14b7a <ema_do_alloc+0xf8>
   14ab0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ab4:	48 8b 00             	mov    (%rax),%rax
   14ab7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14abb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14abf:	48 8b 40 08          	mov    0x8(%rax),%rax
   14ac3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14ac7:	8b 55 e8             	mov    -0x18(%rbp),%edx
   14aca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ace:	48 8b 40 18          	mov    0x18(%rax),%rax
   14ad2:	25 00 ff 00 00       	and    $0xff00,%eax
   14ad7:	89 c7                	mov    %eax,%edi
   14ad9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   14add:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ae1:	89 d1                	mov    %edx,%ecx
   14ae3:	89 fa                	mov    %edi,%edx
   14ae5:	48 89 c7             	mov    %rax,%rdi
   14ae8:	e8 62 81 ff ff       	call   cc4f <sgx_mm_alloc_ocall>
   14aed:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   14af0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   14af4:	74 0c                	je     14b02 <ema_do_alloc+0x80>
   14af6:	c7 45 e4 0e 00 00 00 	movl   $0xe,-0x1c(%rbp)
   14afd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14b00:	eb 78                	jmp    14b7a <ema_do_alloc+0xf8>
   14b02:	8b 45 e8             	mov    -0x18(%rbp),%eax
   14b05:	83 e0 02             	and    $0x2,%eax
   14b08:	85 c0                	test   %eax,%eax
   14b0a:	74 41                	je     14b4d <ema_do_alloc+0xcb>
   14b0c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   14b0f:	83 e0 10             	and    $0x10,%eax
   14b12:	85 c0                	test   %eax,%eax
   14b14:	0f 94 c0             	sete   %al
   14b17:	0f b6 c0             	movzbl %al,%eax
   14b1a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   14b1d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   14b21:	0f 95 c0             	setne  %al
   14b24:	0f b6 c8             	movzbl %al,%ecx
   14b27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b2b:	48 8b 50 18          	mov    0x18(%rax),%rdx
   14b2f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   14b33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14b37:	48 89 c7             	mov    %rax,%rdi
   14b3a:	e8 56 e6 ff ff       	call   13195 <do_commit>
   14b3f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   14b42:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   14b46:	74 05                	je     14b4d <ema_do_alloc+0xcb>
   14b48:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14b4b:	eb 2d                	jmp    14b7a <ema_do_alloc+0xf8>
   14b4d:	8b 45 e8             	mov    -0x18(%rbp),%eax
   14b50:	83 e0 02             	and    $0x2,%eax
   14b53:	85 c0                	test   %eax,%eax
   14b55:	74 11                	je     14b68 <ema_do_alloc+0xe6>
   14b57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b5b:	48 89 c7             	mov    %rax,%rdi
   14b5e:	e8 07 d6 ff ff       	call   1216a <ema_set_eaccept_full>
   14b63:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   14b66:	eb 0f                	jmp    14b77 <ema_do_alloc+0xf5>
   14b68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b6c:	48 89 c7             	mov    %rax,%rdi
   14b6f:	e8 61 d6 ff ff       	call   121d5 <ema_clear_eaccept_full>
   14b74:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   14b77:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14b7a:	c9                   	leave  
   14b7b:	c3                   	ret    

0000000000014b7c <payload_to_block>:
   14b7c:	f3 0f 1e fa          	endbr64 
   14b80:	55                   	push   %rbp
   14b81:	48 89 e5             	mov    %rsp,%rbp
   14b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b8c:	48 8b 05 5d 45 02 00 	mov    0x2455d(%rip),%rax        # 390f0 <header_size>
   14b93:	48 29 c2             	sub    %rax,%rdx
   14b96:	48 89 d0             	mov    %rdx,%rax
   14b99:	5d                   	pop    %rbp
   14b9a:	c3                   	ret    

0000000000014b9b <block_to_payload>:
   14b9b:	f3 0f 1e fa          	endbr64 
   14b9f:	55                   	push   %rbp
   14ba0:	48 89 e5             	mov    %rsp,%rbp
   14ba3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bab:	48 83 c0 08          	add    $0x8,%rax
   14baf:	5d                   	pop    %rbp
   14bb0:	c3                   	ret    

0000000000014bb1 <is_alloced>:
   14bb1:	f3 0f 1e fa          	endbr64 
   14bb5:	55                   	push   %rbp
   14bb6:	48 89 e5             	mov    %rsp,%rbp
   14bb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bc1:	48 8b 00             	mov    (%rax),%rax
   14bc4:	ba 01 00 00 00       	mov    $0x1,%edx
   14bc9:	48 21 d0             	and    %rdx,%rax
   14bcc:	48 85 c0             	test   %rax,%rax
   14bcf:	0f 95 c0             	setne  %al
   14bd2:	5d                   	pop    %rbp
   14bd3:	c3                   	ret    

0000000000014bd4 <block_size>:
   14bd4:	f3 0f 1e fa          	endbr64 
   14bd8:	55                   	push   %rbp
   14bd9:	48 89 e5             	mov    %rsp,%rbp
   14bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14be4:	48 8b 10             	mov    (%rax),%rdx
   14be7:	48 8b 05 0a 45 02 00 	mov    0x2450a(%rip),%rax        # 390f8 <size_mask>
   14bee:	48 21 d0             	and    %rdx,%rax
   14bf1:	5d                   	pop    %rbp
   14bf2:	c3                   	ret    

0000000000014bf3 <block_end>:
   14bf3:	f3 0f 1e fa          	endbr64 
   14bf7:	55                   	push   %rbp
   14bf8:	48 89 e5             	mov    %rsp,%rbp
   14bfb:	48 83 ec 08          	sub    $0x8,%rsp
   14bff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c07:	48 89 c7             	mov    %rax,%rdi
   14c0a:	e8 c5 ff ff ff       	call   14bd4 <block_size>
   14c0f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c13:	48 01 d0             	add    %rdx,%rax
   14c16:	c9                   	leave  
   14c17:	c3                   	ret    

0000000000014c18 <find_used_in_reserve>:
   14c18:	f3 0f 1e fa          	endbr64 
   14c1c:	55                   	push   %rbp
   14c1d:	48 89 e5             	mov    %rsp,%rbp
   14c20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c24:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14c28:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14c2d:	75 07                	jne    14c36 <find_used_in_reserve+0x1e>
   14c2f:	b8 00 00 00 00       	mov    $0x0,%eax
   14c34:	eb 5b                	jmp    14c91 <find_used_in_reserve+0x79>
   14c36:	48 8b 05 73 73 05 00 	mov    0x57373(%rip),%rax        # 6bfb0 <reserve_list>
   14c3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14c41:	eb 42                	jmp    14c85 <find_used_in_reserve+0x6d>
   14c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c47:	48 8b 00             	mov    (%rax),%rax
   14c4a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14c4e:	72 29                	jb     14c79 <find_used_in_reserve+0x61>
   14c50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14c54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c58:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   14c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c60:	48 8b 10             	mov    (%rax),%rdx
   14c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c67:	48 8b 40 10          	mov    0x10(%rax),%rax
   14c6b:	48 01 d0             	add    %rdx,%rax
   14c6e:	48 39 c1             	cmp    %rax,%rcx
   14c71:	77 06                	ja     14c79 <find_used_in_reserve+0x61>
   14c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c77:	eb 18                	jmp    14c91 <find_used_in_reserve+0x79>
   14c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c7d:	48 8b 40 18          	mov    0x18(%rax),%rax
   14c81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14c85:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14c8a:	75 b7                	jne    14c43 <find_used_in_reserve+0x2b>
   14c8c:	b8 00 00 00 00       	mov    $0x0,%eax
   14c91:	5d                   	pop    %rbp
   14c92:	c3                   	ret    

0000000000014c93 <get_list_idx>:
   14c93:	f3 0f 1e fa          	endbr64 
   14c97:	55                   	push   %rbp
   14c98:	48 89 e5             	mov    %rsp,%rbp
   14c9b:	48 83 ec 20          	sub    $0x20,%rsp
   14c9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ca7:	83 e0 07             	and    $0x7,%eax
   14caa:	48 85 c0             	test   %rax,%rax
   14cad:	74 1f                	je     14cce <get_list_idx+0x3b>
   14caf:	48 8d 0d c2 c9 01 00 	lea    0x1c9c2(%rip),%rcx        # 31678 <alloc_mask+0x8>
   14cb6:	48 8d 15 ab ca 01 00 	lea    0x1caab(%rip),%rdx        # 31768 <__func__.1563>
   14cbd:	be b9 00 00 00       	mov    $0xb9,%esi
   14cc2:	48 8d 3d d1 c9 01 00 	lea    0x1c9d1(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   14cc9:	e8 0b 20 00 00       	call   16cd9 <__assert>
   14cce:	48 83 7d e8 0f       	cmpq   $0xf,-0x18(%rbp)
   14cd3:	77 07                	ja     14cdc <get_list_idx+0x49>
   14cd5:	b8 00 00 00 00       	mov    $0x0,%eax
   14cda:	eb 3d                	jmp    14d19 <get_list_idx+0x86>
   14cdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ce0:	48 83 e8 10          	sub    $0x10,%rax
   14ce4:	48 c1 e8 03          	shr    $0x3,%rax
   14ce8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14cec:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
   14cf3:	00 
   14cf4:	76 1f                	jbe    14d15 <get_list_idx+0x82>
   14cf6:	48 8d 0d af c9 01 00 	lea    0x1c9af(%rip),%rcx        # 316ac <alloc_mask+0x3c>
   14cfd:	48 8d 15 64 ca 01 00 	lea    0x1ca64(%rip),%rdx        # 31768 <__func__.1563>
   14d04:	be bc 00 00 00       	mov    $0xbc,%esi
   14d09:	48 8d 3d 8a c9 01 00 	lea    0x1c98a(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   14d10:	e8 c4 1f 00 00       	call   16cd9 <__assert>
   14d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d19:	c9                   	leave  
   14d1a:	c3                   	ret    

0000000000014d1b <remove_from_list>:
   14d1b:	f3 0f 1e fa          	endbr64 
   14d1f:	55                   	push   %rbp
   14d20:	48 89 e5             	mov    %rsp,%rbp
   14d23:	48 83 ec 30          	sub    $0x30,%rsp
   14d27:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14d2b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14d2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d33:	48 89 c7             	mov    %rax,%rdi
   14d36:	e8 99 fe ff ff       	call   14bd4 <block_size>
   14d3b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14d3f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d43:	48 8b 00             	mov    (%rax),%rax
   14d46:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   14d4a:	75 33                	jne    14d7f <remove_from_list+0x64>
   14d4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d50:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14d54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d58:	48 89 10             	mov    %rdx,(%rax)
   14d5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d5f:	48 8b 00             	mov    (%rax),%rax
   14d62:	48 85 c0             	test   %rax,%rax
   14d65:	74 65                	je     14dcc <remove_from_list+0xb1>
   14d67:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
   14d6c:	76 5e                	jbe    14dcc <remove_from_list+0xb1>
   14d6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d72:	48 8b 00             	mov    (%rax),%rax
   14d75:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14d7c:	00 
   14d7d:	eb 4d                	jmp    14dcc <remove_from_list+0xb1>
   14d7f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14d86:	00 
   14d87:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
   14d8c:	76 0c                	jbe    14d9a <remove_from_list+0x7f>
   14d8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d92:	48 8b 40 10          	mov    0x10(%rax),%rax
   14d96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14d9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d9e:	48 8b 40 08          	mov    0x8(%rax),%rax
   14da2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14da6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14dab:	74 0c                	je     14db9 <remove_from_list+0x9e>
   14dad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14db1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14db5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14db9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14dbe:	74 0c                	je     14dcc <remove_from_list+0xb1>
   14dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14dc8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14dcc:	90                   	nop
   14dcd:	c9                   	leave  
   14dce:	c3                   	ret    

0000000000014dcf <remove_from_lists>:
   14dcf:	f3 0f 1e fa          	endbr64 
   14dd3:	55                   	push   %rbp
   14dd4:	48 89 e5             	mov    %rsp,%rbp
   14dd7:	48 83 ec 20          	sub    $0x20,%rsp
   14ddb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ddf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14de3:	48 89 c7             	mov    %rax,%rdi
   14de6:	e8 e9 fd ff ff       	call   14bd4 <block_size>
   14deb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14def:	b8 08 08 00 00       	mov    $0x808,%eax
   14df4:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14df8:	76 15                	jbe    14e0f <remove_from_lists+0x40>
   14dfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14dfe:	48 8d 35 9b 71 05 00 	lea    0x5719b(%rip),%rsi        # 6bfa0 <large_block_list>
   14e05:	48 89 c7             	mov    %rax,%rdi
   14e08:	e8 0e ff ff ff       	call   14d1b <remove_from_list>
   14e0d:	eb 35                	jmp    14e44 <remove_from_lists+0x75>
   14e0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e13:	48 89 c7             	mov    %rax,%rdi
   14e16:	e8 78 fe ff ff       	call   14c93 <get_list_idx>
   14e1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14e2a:	00 
   14e2b:	48 8d 05 6e 69 05 00 	lea    0x5696e(%rip),%rax        # 6b7a0 <exact_block_list>
   14e32:	48 01 c2             	add    %rax,%rdx
   14e35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e39:	48 89 d6             	mov    %rdx,%rsi
   14e3c:	48 89 c7             	mov    %rax,%rdi
   14e3f:	e8 d7 fe ff ff       	call   14d1b <remove_from_list>
   14e44:	90                   	nop
   14e45:	c9                   	leave  
   14e46:	c3                   	ret    

0000000000014e47 <prepend_to_list>:
   14e47:	f3 0f 1e fa          	endbr64 
   14e4b:	55                   	push   %rbp
   14e4c:	48 89 e5             	mov    %rsp,%rbp
   14e4f:	48 83 ec 10          	sub    $0x10,%rsp
   14e53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14e5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e5f:	48 8b 10             	mov    (%rax),%rdx
   14e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e66:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14e6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e6e:	48 8b 00             	mov    (%rax),%rax
   14e71:	48 85 c0             	test   %rax,%rax
   14e74:	74 24                	je     14e9a <prepend_to_list+0x53>
   14e76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e7a:	48 8b 00             	mov    (%rax),%rax
   14e7d:	48 89 c7             	mov    %rax,%rdi
   14e80:	e8 4f fd ff ff       	call   14bd4 <block_size>
   14e85:	48 83 f8 10          	cmp    $0x10,%rax
   14e89:	76 0f                	jbe    14e9a <prepend_to_list+0x53>
   14e8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e8f:	48 8b 00             	mov    (%rax),%rax
   14e92:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e96:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14e9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e9e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ea2:	48 89 10             	mov    %rdx,(%rax)
   14ea5:	90                   	nop
   14ea6:	c9                   	leave  
   14ea7:	c3                   	ret    

0000000000014ea8 <put_exact_block>:
   14ea8:	f3 0f 1e fa          	endbr64 
   14eac:	55                   	push   %rbp
   14ead:	48 89 e5             	mov    %rsp,%rbp
   14eb0:	48 83 ec 20          	sub    $0x20,%rsp
   14eb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ebc:	48 89 c7             	mov    %rax,%rdi
   14ebf:	e8 10 fd ff ff       	call   14bd4 <block_size>
   14ec4:	48 89 c7             	mov    %rax,%rdi
   14ec7:	e8 c7 fd ff ff       	call   14c93 <get_list_idx>
   14ecc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ed4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14edb:	00 
   14edc:	48 8d 05 bd 68 05 00 	lea    0x568bd(%rip),%rax        # 6b7a0 <exact_block_list>
   14ee3:	48 01 c2             	add    %rax,%rdx
   14ee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14eea:	48 89 d6             	mov    %rdx,%rsi
   14eed:	48 89 c7             	mov    %rax,%rdi
   14ef0:	e8 52 ff ff ff       	call   14e47 <prepend_to_list>
   14ef5:	48 8b 05 ac 70 05 00 	mov    0x570ac(%rip),%rax        # 6bfa8 <num_free_blocks>
   14efc:	48 83 c0 01          	add    $0x1,%rax
   14f00:	48 89 05 a1 70 05 00 	mov    %rax,0x570a1(%rip)        # 6bfa8 <num_free_blocks>
   14f07:	90                   	nop
   14f08:	c9                   	leave  
   14f09:	c3                   	ret    

0000000000014f0a <neighbor_right>:
   14f0a:	f3 0f 1e fa          	endbr64 
   14f0e:	55                   	push   %rbp
   14f0f:	48 89 e5             	mov    %rsp,%rbp
   14f12:	48 83 ec 28          	sub    $0x28,%rsp
   14f16:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14f1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f1e:	48 89 c7             	mov    %rax,%rdi
   14f21:	e8 cd fc ff ff       	call   14bf3 <block_end>
   14f26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   14f2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f2e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f32:	48 89 d6             	mov    %rdx,%rsi
   14f35:	48 89 c7             	mov    %rax,%rdi
   14f38:	e8 db fc ff ff       	call   14c18 <find_used_in_reserve>
   14f3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14f41:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14f46:	75 07                	jne    14f4f <neighbor_right+0x45>
   14f48:	b8 00 00 00 00       	mov    $0x0,%eax
   14f4d:	eb 56                	jmp    14fa5 <neighbor_right+0x9b>
   14f4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f53:	48 8b 10             	mov    (%rax),%rdx
   14f56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f5a:	48 8b 40 10          	mov    0x10(%rax),%rax
   14f5e:	48 01 d0             	add    %rdx,%rax
   14f61:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14f65:	75 07                	jne    14f6e <neighbor_right+0x64>
   14f67:	b8 00 00 00 00       	mov    $0x0,%eax
   14f6c:	eb 37                	jmp    14fa5 <neighbor_right+0x9b>
   14f6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f72:	48 89 c7             	mov    %rax,%rdi
   14f75:	e8 5a fc ff ff       	call   14bd4 <block_size>
   14f7a:	48 89 c2             	mov    %rax,%rdx
   14f7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f81:	48 89 d6             	mov    %rdx,%rsi
   14f84:	48 89 c7             	mov    %rax,%rdi
   14f87:	e8 8c fc ff ff       	call   14c18 <find_used_in_reserve>
   14f8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14f90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f94:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   14f98:	74 07                	je     14fa1 <neighbor_right+0x97>
   14f9a:	b8 00 00 00 00       	mov    $0x0,%eax
   14f9f:	eb 04                	jmp    14fa5 <neighbor_right+0x9b>
   14fa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fa5:	c9                   	leave  
   14fa6:	c3                   	ret    

0000000000014fa7 <possibly_merge>:
   14fa7:	f3 0f 1e fa          	endbr64 
   14fab:	55                   	push   %rbp
   14fac:	48 89 e5             	mov    %rsp,%rbp
   14faf:	48 83 ec 20          	sub    $0x20,%rsp
   14fb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14fb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fbb:	48 89 c7             	mov    %rax,%rdi
   14fbe:	e8 47 ff ff ff       	call   14f0a <neighbor_right>
   14fc3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14fc7:	eb 3b                	jmp    15004 <possibly_merge+0x5d>
   14fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fcd:	48 89 c7             	mov    %rax,%rdi
   14fd0:	e8 fa fd ff ff       	call   14dcf <remove_from_lists>
   14fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd9:	48 89 c7             	mov    %rax,%rdi
   14fdc:	e8 f3 fb ff ff       	call   14bd4 <block_size>
   14fe1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14fe5:	48 8b 12             	mov    (%rdx),%rdx
   14fe8:	48 01 c2             	add    %rax,%rdx
   14feb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fef:	48 89 10             	mov    %rdx,(%rax)
   14ff2:	48 8b 05 af 6f 05 00 	mov    0x56faf(%rip),%rax        # 6bfa8 <num_free_blocks>
   14ff9:	48 83 e8 01          	sub    $0x1,%rax
   14ffd:	48 89 05 a4 6f 05 00 	mov    %rax,0x56fa4(%rip)        # 6bfa8 <num_free_blocks>
   15004:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15009:	74 10                	je     1501b <possibly_merge+0x74>
   1500b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1500f:	48 89 c7             	mov    %rax,%rdi
   15012:	e8 9a fb ff ff       	call   14bb1 <is_alloced>
   15017:	84 c0                	test   %al,%al
   15019:	75 ae                	jne    14fc9 <possibly_merge+0x22>
   1501b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1501f:	c9                   	leave  
   15020:	c3                   	ret    

0000000000015021 <put_free_block>:
   15021:	f3 0f 1e fa          	endbr64 
   15025:	55                   	push   %rbp
   15026:	48 89 e5             	mov    %rsp,%rbp
   15029:	48 83 ec 10          	sub    $0x10,%rsp
   1502d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15035:	48 89 c7             	mov    %rax,%rdi
   15038:	e8 97 fb ff ff       	call   14bd4 <block_size>
   1503d:	ba 08 08 00 00       	mov    $0x808,%edx
   15042:	48 39 d0             	cmp    %rdx,%rax
   15045:	77 0e                	ja     15055 <put_free_block+0x34>
   15047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1504b:	48 89 c7             	mov    %rax,%rdi
   1504e:	e8 55 fe ff ff       	call   14ea8 <put_exact_block>
   15053:	eb 25                	jmp    1507a <put_free_block+0x59>
   15055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15059:	48 8d 35 40 6f 05 00 	lea    0x56f40(%rip),%rsi        # 6bfa0 <large_block_list>
   15060:	48 89 c7             	mov    %rax,%rdi
   15063:	e8 df fd ff ff       	call   14e47 <prepend_to_list>
   15068:	48 8b 05 39 6f 05 00 	mov    0x56f39(%rip),%rax        # 6bfa8 <num_free_blocks>
   1506f:	48 83 c0 01          	add    $0x1,%rax
   15073:	48 89 05 2e 6f 05 00 	mov    %rax,0x56f2e(%rip)        # 6bfa8 <num_free_blocks>
   1507a:	c9                   	leave  
   1507b:	c3                   	ret    

000000000001507c <split_free_block>:
   1507c:	f3 0f 1e fa          	endbr64 
   15080:	55                   	push   %rbp
   15081:	48 89 e5             	mov    %rsp,%rbp
   15084:	48 83 ec 20          	sub    $0x20,%rsp
   15088:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1508c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15094:	48 8b 00             	mov    (%rax),%rax
   15097:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1509b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1509f:	48 83 7d f0 0f       	cmpq   $0xf,-0x10(%rbp)
   150a4:	77 1f                	ja     150c5 <split_free_block+0x49>
   150a6:	48 8d 0d 1b c6 01 00 	lea    0x1c61b(%rip),%rcx        # 316c8 <alloc_mask+0x58>
   150ad:	48 8d 15 cc c6 01 00 	lea    0x1c6cc(%rip),%rdx        # 31780 <__func__.1606>
   150b4:	be 1f 01 00 00       	mov    $0x11f,%esi
   150b9:	48 8d 3d da c5 01 00 	lea    0x1c5da(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   150c0:	e8 14 1c 00 00       	call   16cd9 <__assert>
   150c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   150cd:	48 89 10             	mov    %rdx,(%rax)
   150d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   150d8:	48 01 d0             	add    %rdx,%rax
   150db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   150df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150e7:	48 89 10             	mov    %rdx,(%rax)
   150ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ee:	c9                   	leave  
   150ef:	c3                   	ret    

00000000000150f0 <get_exact_match>:
   150f0:	f3 0f 1e fa          	endbr64 
   150f4:	55                   	push   %rbp
   150f5:	48 89 e5             	mov    %rsp,%rbp
   150f8:	48 83 ec 20          	sub    $0x20,%rsp
   150fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15104:	48 89 c7             	mov    %rax,%rdi
   15107:	e8 87 fb ff ff       	call   14c93 <get_list_idx>
   1510c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15110:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15114:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1511b:	00 
   1511c:	48 8d 05 7d 66 05 00 	lea    0x5667d(%rip),%rax        # 6b7a0 <exact_block_list>
   15123:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   15127:	48 85 c0             	test   %rax,%rax
   1512a:	75 0a                	jne    15136 <get_exact_match+0x46>
   1512c:	b8 00 00 00 00       	mov    $0x0,%eax
   15131:	e9 92 00 00 00       	jmp    151c8 <get_exact_match+0xd8>
   15136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1513a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15141:	00 
   15142:	48 8d 05 57 66 05 00 	lea    0x56657(%rip),%rax        # 6b7a0 <exact_block_list>
   15149:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1514d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15155:	48 8b 40 08          	mov    0x8(%rax),%rax
   15159:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1515d:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   15164:	00 
   15165:	48 8d 15 34 66 05 00 	lea    0x56634(%rip),%rdx        # 6b7a0 <exact_block_list>
   1516c:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   15170:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15175:	74 3b                	je     151b2 <get_exact_match+0xc2>
   15177:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1517b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15182:	00 
   15183:	48 8d 05 16 66 05 00 	lea    0x56616(%rip),%rax        # 6b7a0 <exact_block_list>
   1518a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1518e:	48 85 c0             	test   %rax,%rax
   15191:	74 1f                	je     151b2 <get_exact_match+0xc2>
   15193:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15197:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1519e:	00 
   1519f:	48 8d 05 fa 65 05 00 	lea    0x565fa(%rip),%rax        # 6b7a0 <exact_block_list>
   151a6:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   151aa:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   151b1:	00 
   151b2:	48 8b 05 ef 6d 05 00 	mov    0x56def(%rip),%rax        # 6bfa8 <num_free_blocks>
   151b9:	48 83 e8 01          	sub    $0x1,%rax
   151bd:	48 89 05 e4 6d 05 00 	mov    %rax,0x56de4(%rip)        # 6bfa8 <num_free_blocks>
   151c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151c8:	c9                   	leave  
   151c9:	c3                   	ret    

00000000000151ca <get_free_block>:
   151ca:	f3 0f 1e fa          	endbr64 
   151ce:	55                   	push   %rbp
   151cf:	48 89 e5             	mov    %rsp,%rbp
   151d2:	48 83 ec 30          	sub    $0x30,%rsp
   151d6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   151da:	b8 08 08 00 00       	mov    $0x808,%eax
   151df:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   151e3:	77 11                	ja     151f6 <get_free_block+0x2c>
   151e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   151e9:	48 89 c7             	mov    %rax,%rdi
   151ec:	e8 ff fe ff ff       	call   150f0 <get_exact_match>
   151f1:	e9 e5 00 00 00       	jmp    152db <get_free_block+0x111>
   151f6:	48 8b 05 a3 6d 05 00 	mov    0x56da3(%rip),%rax        # 6bfa0 <large_block_list>
   151fd:	48 85 c0             	test   %rax,%rax
   15200:	75 0a                	jne    1520c <get_free_block+0x42>
   15202:	b8 00 00 00 00       	mov    $0x0,%eax
   15207:	e9 cf 00 00 00       	jmp    152db <get_free_block+0x111>
   1520c:	48 8b 05 8d 6d 05 00 	mov    0x56d8d(%rip),%rax        # 6bfa0 <large_block_list>
   15213:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15217:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1521e:	00 
   1521f:	eb 45                	jmp    15266 <get_free_block+0x9c>
   15221:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15225:	48 8b 00             	mov    (%rax),%rax
   15228:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1522c:	77 2c                	ja     1525a <get_free_block+0x90>
   1522e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15233:	75 0a                	jne    1523f <get_free_block+0x75>
   15235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15239:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1523d:	eb 1b                	jmp    1525a <get_free_block+0x90>
   1523f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15243:	48 8b 10             	mov    (%rax),%rdx
   15246:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1524a:	48 8b 00             	mov    (%rax),%rax
   1524d:	48 39 c2             	cmp    %rax,%rdx
   15250:	76 08                	jbe    1525a <get_free_block+0x90>
   15252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15256:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1525a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1525e:	48 8b 40 08          	mov    0x8(%rax),%rax
   15262:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15266:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1526b:	75 b4                	jne    15221 <get_free_block+0x57>
   1526d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15272:	75 07                	jne    1527b <get_free_block+0xb1>
   15274:	b8 00 00 00 00       	mov    $0x0,%eax
   15279:	eb 60                	jmp    152db <get_free_block+0x111>
   1527b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1527f:	48 8d 35 1a 6d 05 00 	lea    0x56d1a(%rip),%rsi        # 6bfa0 <large_block_list>
   15286:	48 89 c7             	mov    %rax,%rdi
   15289:	e8 8d fa ff ff       	call   14d1b <remove_from_list>
   1528e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15292:	48 8b 00             	mov    (%rax),%rax
   15295:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15299:	48 83 c2 10          	add    $0x10,%rdx
   1529d:	48 39 d0             	cmp    %rdx,%rax
   152a0:	72 23                	jb     152c5 <get_free_block+0xfb>
   152a2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   152a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   152aa:	48 89 d6             	mov    %rdx,%rsi
   152ad:	48 89 c7             	mov    %rax,%rdi
   152b0:	e8 c7 fd ff ff       	call   1507c <split_free_block>
   152b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   152b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152bd:	48 89 c7             	mov    %rax,%rdi
   152c0:	e8 5c fd ff ff       	call   15021 <put_free_block>
   152c5:	48 8b 05 dc 6c 05 00 	mov    0x56cdc(%rip),%rax        # 6bfa8 <num_free_blocks>
   152cc:	48 83 e8 01          	sub    $0x1,%rax
   152d0:	48 89 05 d1 6c 05 00 	mov    %rax,0x56cd1(%rip)        # 6bfa8 <num_free_blocks>
   152d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   152db:	c9                   	leave  
   152dc:	c3                   	ret    

00000000000152dd <get_large_block_end_at>:
   152dd:	f3 0f 1e fa          	endbr64 
   152e1:	55                   	push   %rbp
   152e2:	48 89 e5             	mov    %rsp,%rbp
   152e5:	48 83 ec 18          	sub    $0x18,%rsp
   152e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   152ed:	48 8b 05 ac 6c 05 00 	mov    0x56cac(%rip),%rax        # 6bfa0 <large_block_list>
   152f4:	48 85 c0             	test   %rax,%rax
   152f7:	75 07                	jne    15300 <get_large_block_end_at+0x23>
   152f9:	b8 00 00 00 00       	mov    $0x0,%eax
   152fe:	eb 52                	jmp    15352 <get_large_block_end_at+0x75>
   15300:	48 8b 05 99 6c 05 00 	mov    0x56c99(%rip),%rax        # 6bfa0 <large_block_list>
   15307:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1530b:	eb 39                	jmp    15346 <get_large_block_end_at+0x69>
   1530d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15311:	48 8b 10             	mov    (%rax),%rdx
   15314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15318:	48 01 d0             	add    %rdx,%rax
   1531b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1531f:	75 19                	jne    1533a <get_large_block_end_at+0x5d>
   15321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15325:	48 8d 35 74 6c 05 00 	lea    0x56c74(%rip),%rsi        # 6bfa0 <large_block_list>
   1532c:	48 89 c7             	mov    %rax,%rdi
   1532f:	e8 e7 f9 ff ff       	call   14d1b <remove_from_list>
   15334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15338:	eb 18                	jmp    15352 <get_large_block_end_at+0x75>
   1533a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1533e:	48 8b 40 08          	mov    0x8(%rax),%rax
   15342:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15346:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1534b:	75 c0                	jne    1530d <get_large_block_end_at+0x30>
   1534d:	b8 00 00 00 00       	mov    $0x0,%eax
   15352:	c9                   	leave  
   15353:	c3                   	ret    

0000000000015354 <merge_large_blocks_to_reserve>:
   15354:	f3 0f 1e fa          	endbr64 
   15358:	55                   	push   %rbp
   15359:	48 89 e5             	mov    %rsp,%rbp
   1535c:	48 83 ec 18          	sub    $0x18,%rsp
   15360:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15368:	48 8b 10             	mov    (%rax),%rdx
   1536b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1536f:	48 8b 40 10          	mov    0x10(%rax),%rax
   15373:	48 01 d0             	add    %rdx,%rax
   15376:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1537a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1537e:	48 89 c7             	mov    %rax,%rdi
   15381:	e8 57 ff ff ff       	call   152dd <get_large_block_end_at>
   15386:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1538a:	eb 2d                	jmp    153b9 <merge_large_blocks_to_reserve+0x65>
   1538c:	48 8b 05 15 6c 05 00 	mov    0x56c15(%rip),%rax        # 6bfa8 <num_free_blocks>
   15393:	48 83 e8 01          	sub    $0x1,%rax
   15397:	48 89 05 0a 6c 05 00 	mov    %rax,0x56c0a(%rip)        # 6bfa8 <num_free_blocks>
   1539e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153a2:	48 8b 00             	mov    (%rax),%rax
   153a5:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
   153a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   153ad:	48 89 c7             	mov    %rax,%rdi
   153b0:	e8 28 ff ff ff       	call   152dd <get_large_block_end_at>
   153b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   153b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   153be:	75 cc                	jne    1538c <merge_large_blocks_to_reserve+0x38>
   153c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153c4:	48 8b 00             	mov    (%rax),%rax
   153c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153cb:	48 29 c2             	sub    %rax,%rdx
   153ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   153d6:	90                   	nop
   153d7:	c9                   	leave  
   153d8:	c3                   	ret    

00000000000153d9 <new_reserve>:
   153d9:	f3 0f 1e fa          	endbr64 
   153dd:	55                   	push   %rbp
   153de:	48 89 e5             	mov    %rsp,%rbp
   153e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   153e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   153f1:	48 c7 45 f8 20 00 00 	movq   $0x20,-0x8(%rbp)
   153f8:	00 
   153f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   153fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15401:	48 01 c2             	add    %rax,%rdx
   15404:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15408:	48 89 10             	mov    %rdx,(%rax)
   1540b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1540f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15416:	00 
   15417:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1541b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1541f:	48 89 c2             	mov    %rax,%rdx
   15422:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15426:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1542a:	48 8b 15 7f 6b 05 00 	mov    0x56b7f(%rip),%rdx        # 6bfb0 <reserve_list>
   15431:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15435:	48 89 50 18          	mov    %rdx,0x18(%rax)
   15439:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1543d:	48 89 05 6c 6b 05 00 	mov    %rax,0x56b6c(%rip)        # 6bfb0 <reserve_list>
   15444:	90                   	nop
   15445:	5d                   	pop    %rbp
   15446:	c3                   	ret    

0000000000015447 <alloc_from_reserve>:
   15447:	f3 0f 1e fa          	endbr64 
   1544b:	55                   	push   %rbp
   1544c:	48 89 e5             	mov    %rsp,%rbp
   1544f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15453:	48 8b 05 56 6b 05 00 	mov    0x56b56(%rip),%rax        # 6bfb0 <reserve_list>
   1545a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1545e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   15465:	00 
   15466:	eb 57                	jmp    154bf <alloc_from_reserve+0x78>
   15468:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1546c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15474:	48 8b 40 10          	mov    0x10(%rax),%rax
   15478:	48 29 c2             	sub    %rax,%rdx
   1547b:	48 89 d0             	mov    %rdx,%rax
   1547e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   15482:	77 2f                	ja     154b3 <alloc_from_reserve+0x6c>
   15484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15488:	48 8b 10             	mov    (%rax),%rdx
   1548b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1548f:	48 8b 40 10          	mov    0x10(%rax),%rax
   15493:	48 01 d0             	add    %rdx,%rax
   15496:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1549a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1549e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   154a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154a6:	48 01 c2             	add    %rax,%rdx
   154a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
   154b1:	eb 13                	jmp    154c6 <alloc_from_reserve+0x7f>
   154b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154b7:	48 8b 40 18          	mov    0x18(%rax),%rax
   154bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   154bf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   154c4:	75 a2                	jne    15468 <alloc_from_reserve+0x21>
   154c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154ca:	5d                   	pop    %rbp
   154cb:	c3                   	ret    

00000000000154cc <add_reserve>:
   154cc:	f3 0f 1e fa          	endbr64 
   154d0:	55                   	push   %rbp
   154d1:	48 89 e5             	mov    %rsp,%rbp
   154d4:	48 83 ec 30          	sub    $0x30,%rsp
   154d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   154dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   154e3:	00 00 
   154e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   154e9:	31 c0                	xor    %eax,%eax
   154eb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   154f2:	00 
   154f3:	0f b6 05 be 6a 05 00 	movzbl 0x56abe(%rip),%eax        # 6bfb8 <adding_reserve>
   154fa:	84 c0                	test   %al,%al
   154fc:	74 0a                	je     15508 <add_reserve+0x3c>
   154fe:	b8 00 00 00 00       	mov    $0x0,%eax
   15503:	e9 0d 01 00 00       	jmp    15615 <add_reserve+0x149>
   15508:	48 8b 05 f1 3b 02 00 	mov    0x23bf1(%rip),%rax        # 39100 <reserve_size_increment>
   1550f:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   15513:	48 0f 43 45 d8       	cmovae -0x28(%rbp),%rax
   15518:	48 89 05 e1 3b 02 00 	mov    %rax,0x23be1(%rip)        # 39100 <reserve_size_increment>
   1551f:	c6 05 92 6a 05 00 01 	movb   $0x1,0x56a92(%rip)        # 6bfb8 <adding_reserve>
   15526:	b8 00 80 00 00       	mov    $0x8000,%eax
   1552b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   1552f:	48 8b 05 ca 3b 02 00 	mov    0x23bca(%rip),%rax        # 39100 <reserve_size_increment>
   15536:	48 01 d0             	add    %rdx,%rax
   15539:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1553d:	49 89 d1             	mov    %rdx,%r9
   15540:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   15546:	b9 00 00 00 00       	mov    $0x0,%ecx
   1554b:	ba 01 00 00 00       	mov    $0x1,%edx
   15550:	48 89 c6             	mov    %rax,%rsi
   15553:	bf 00 00 00 00       	mov    $0x0,%edi
   15558:	e8 4b 0c 00 00       	call   161a8 <sgx_mm_alloc>
   1555d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15560:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   15564:	0f 85 9a 00 00 00    	jne    15604 <add_reserve+0x138>
   1556a:	48 8b 05 8f 3b 02 00 	mov    0x23b8f(%rip),%rax        # 39100 <reserve_size_increment>
   15571:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15575:	48 89 d1             	mov    %rdx,%rcx
   15578:	ba 00 80 00 00       	mov    $0x8000,%edx
   1557d:	48 01 ca             	add    %rcx,%rdx
   15580:	48 89 d7             	mov    %rdx,%rdi
   15583:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15587:	49 89 d1             	mov    %rdx,%r9
   1558a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   15590:	b9 00 00 00 00       	mov    $0x0,%ecx
   15595:	ba 44 00 00 00       	mov    $0x44,%edx
   1559a:	48 89 c6             	mov    %rax,%rsi
   1559d:	e8 06 0c 00 00       	call   161a8 <sgx_mm_alloc>
   155a2:	89 45 ec             	mov    %eax,-0x14(%rbp)
   155a5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   155a9:	75 5c                	jne    15607 <add_reserve+0x13b>
   155ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   155b3:	48 89 d6             	mov    %rdx,%rsi
   155b6:	48 89 c7             	mov    %rax,%rdi
   155b9:	e8 35 0d 00 00       	call   162f3 <sgx_mm_commit>
   155be:	48 8b 15 3b 3b 02 00 	mov    0x23b3b(%rip),%rdx        # 39100 <reserve_size_increment>
   155c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155c9:	48 89 d6             	mov    %rdx,%rsi
   155cc:	48 89 c7             	mov    %rax,%rdi
   155cf:	e8 05 fe ff ff       	call   153d9 <new_reserve>
   155d4:	48 8b 05 25 3b 02 00 	mov    0x23b25(%rip),%rax        # 39100 <reserve_size_increment>
   155db:	48 01 c0             	add    %rax,%rax
   155de:	48 89 05 1b 3b 02 00 	mov    %rax,0x23b1b(%rip)        # 39100 <reserve_size_increment>
   155e5:	48 8b 05 14 3b 02 00 	mov    0x23b14(%rip),%rax        # 39100 <reserve_size_increment>
   155ec:	ba 00 00 00 10       	mov    $0x10000000,%edx
   155f1:	48 39 d0             	cmp    %rdx,%rax
   155f4:	76 14                	jbe    1560a <add_reserve+0x13e>
   155f6:	b8 00 00 00 10       	mov    $0x10000000,%eax
   155fb:	48 89 05 fe 3a 02 00 	mov    %rax,0x23afe(%rip)        # 39100 <reserve_size_increment>
   15602:	eb 07                	jmp    1560b <add_reserve+0x13f>
   15604:	90                   	nop
   15605:	eb 04                	jmp    1560b <add_reserve+0x13f>
   15607:	90                   	nop
   15608:	eb 01                	jmp    1560b <add_reserve+0x13f>
   1560a:	90                   	nop
   1560b:	c6 05 a6 69 05 00 00 	movb   $0x0,0x569a6(%rip)        # 6bfb8 <adding_reserve>
   15612:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15615:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15619:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   15620:	00 00 
   15622:	74 05                	je     15629 <add_reserve+0x15d>
   15624:	e8 5e bc 00 00       	call   21287 <__stack_chk_fail>
   15629:	c9                   	leave  
   1562a:	c3                   	ret    

000000000001562b <alloc_from_meta>:
   1562b:	f3 0f 1e fa          	endbr64 
   1562f:	55                   	push   %rbp
   15630:	48 89 e5             	mov    %rsp,%rbp
   15633:	48 83 ec 20          	sub    $0x20,%rsp
   15637:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1563b:	0f b6 05 76 69 05 00 	movzbl 0x56976(%rip),%eax        # 6bfb8 <adding_reserve>
   15642:	84 c0                	test   %al,%al
   15644:	75 1f                	jne    15665 <alloc_from_meta+0x3a>
   15646:	48 8d 0d 9c c0 01 00 	lea    0x1c09c(%rip),%rcx        # 316e9 <alloc_mask+0x79>
   1564d:	48 8d 15 4c c1 01 00 	lea    0x1c14c(%rip),%rdx        # 317a0 <__func__.1663>
   15654:	be be 01 00 00       	mov    $0x1be,%esi
   15659:	48 8d 3d 3a c0 01 00 	lea    0x1c03a(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   15660:	e8 74 16 00 00       	call   16cd9 <__assert>
   15665:	48 8b 15 14 61 05 00 	mov    0x56114(%rip),%rdx        # 6b780 <meta_used>
   1566c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15670:	48 01 d0             	add    %rdx,%rax
   15673:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
   15679:	76 07                	jbe    15682 <alloc_from_meta+0x57>
   1567b:	b8 00 00 00 00       	mov    $0x0,%eax
   15680:	eb 49                	jmp    156cb <alloc_from_meta+0xa0>
   15682:	48 8b 05 f7 60 05 00 	mov    0x560f7(%rip),%rax        # 6b780 <meta_used>
   15689:	48 8d 15 f0 60 04 00 	lea    0x460f0(%rip),%rdx        # 5b780 <meta_reserve>
   15690:	48 01 d0             	add    %rdx,%rax
   15693:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15697:	48 8b 15 e2 60 05 00 	mov    0x560e2(%rip),%rdx        # 6b780 <meta_used>
   1569e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156a2:	48 01 d0             	add    %rdx,%rax
   156a5:	48 89 05 d4 60 05 00 	mov    %rax,0x560d4(%rip)        # 6b780 <meta_used>
   156ac:	b8 01 00 00 00       	mov    $0x1,%eax
   156b1:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   156b5:	48 89 c2             	mov    %rax,%rdx
   156b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156bc:	48 89 10             	mov    %rdx,(%rax)
   156bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156c3:	48 89 c7             	mov    %rax,%rdi
   156c6:	e8 d0 f4 ff ff       	call   14b9b <block_to_payload>
   156cb:	c9                   	leave  
   156cc:	c3                   	ret    

00000000000156cd <emalloc_init>:
   156cd:	f3 0f 1e fa          	endbr64 
   156d1:	55                   	push   %rbp
   156d2:	48 89 e5             	mov    %rsp,%rbp
   156d5:	48 83 ec 10          	sub    $0x10,%rsp
   156d9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   156e0:	eb 20                	jmp    15702 <emalloc_init+0x35>
   156e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
   156e5:	48 98                	cltq   
   156e7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   156ee:	00 
   156ef:	48 8d 05 aa 60 05 00 	lea    0x560aa(%rip),%rax        # 6b7a0 <exact_block_list>
   156f6:	48 c7 04 02 00 00 00 	movq   $0x0,(%rdx,%rax,1)
   156fd:	00 
   156fe:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   15702:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
   15709:	7e d7                	jle    156e2 <emalloc_init+0x15>
   1570b:	bf 00 00 01 00       	mov    $0x10000,%edi
   15710:	e8 b7 fd ff ff       	call   154cc <add_reserve>
   15715:	85 c0                	test   %eax,%eax
   15717:	74 07                	je     15720 <emalloc_init+0x53>
   15719:	b8 0c 00 00 00       	mov    $0xc,%eax
   1571e:	eb 05                	jmp    15725 <emalloc_init+0x58>
   15720:	b8 00 00 00 00       	mov    $0x0,%eax
   15725:	c9                   	leave  
   15726:	c3                   	ret    

0000000000015727 <emalloc>:
   15727:	f3 0f 1e fa          	endbr64 
   1572b:	55                   	push   %rbp
   1572c:	48 89 e5             	mov    %rsp,%rbp
   1572f:	48 83 ec 30          	sub    $0x30,%rsp
   15733:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15737:	48 8b 15 b2 39 02 00 	mov    0x239b2(%rip),%rdx        # 390f0 <header_size>
   1573e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15742:	48 01 d0             	add    %rdx,%rax
   15745:	48 83 c0 07          	add    $0x7,%rax
   15749:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1574d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15751:	48 83 7d e8 0f       	cmpq   $0xf,-0x18(%rbp)
   15756:	77 08                	ja     15760 <emalloc+0x39>
   15758:	48 c7 45 e8 10 00 00 	movq   $0x10,-0x18(%rbp)
   1575f:	00 
   15760:	0f b6 05 51 68 05 00 	movzbl 0x56851(%rip),%eax        # 6bfb8 <adding_reserve>
   15767:	84 c0                	test   %al,%al
   15769:	74 11                	je     1577c <emalloc+0x55>
   1576b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1576f:	48 89 c7             	mov    %rax,%rdi
   15772:	e8 b4 fe ff ff       	call   1562b <alloc_from_meta>
   15777:	e9 b5 00 00 00       	jmp    15831 <emalloc+0x10a>
   1577c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15780:	48 89 c7             	mov    %rax,%rdi
   15783:	e8 42 fa ff ff       	call   151ca <get_free_block>
   15788:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1578c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15791:	74 21                	je     157b4 <emalloc+0x8d>
   15793:	b8 01 00 00 00       	mov    $0x1,%eax
   15798:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   1579c:	48 89 c2             	mov    %rax,%rdx
   1579f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157a3:	48 89 10             	mov    %rdx,(%rax)
   157a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157aa:	48 89 c7             	mov    %rax,%rdi
   157ad:	e8 e9 f3 ff ff       	call   14b9b <block_to_payload>
   157b2:	eb 7d                	jmp    15831 <emalloc+0x10a>
   157b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157b8:	48 89 c7             	mov    %rax,%rdi
   157bb:	e8 87 fc ff ff       	call   15447 <alloc_from_reserve>
   157c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   157c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   157c9:	75 47                	jne    15812 <emalloc+0xeb>
   157cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157cf:	48 05 1f 00 01 00    	add    $0x1001f,%rax
   157d5:	66 b8 00 00          	mov    $0x0,%ax
   157d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   157dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157e1:	48 89 c7             	mov    %rax,%rdi
   157e4:	e8 e3 fc ff ff       	call   154cc <add_reserve>
   157e9:	85 c0                	test   %eax,%eax
   157eb:	74 07                	je     157f4 <emalloc+0xcd>
   157ed:	b8 00 00 00 00       	mov    $0x0,%eax
   157f2:	eb 3d                	jmp    15831 <emalloc+0x10a>
   157f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157f8:	48 89 c7             	mov    %rax,%rdi
   157fb:	e8 47 fc ff ff       	call   15447 <alloc_from_reserve>
   15800:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15804:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15809:	75 07                	jne    15812 <emalloc+0xeb>
   1580b:	b8 00 00 00 00       	mov    $0x0,%eax
   15810:	eb 1f                	jmp    15831 <emalloc+0x10a>
   15812:	b8 01 00 00 00       	mov    $0x1,%eax
   15817:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   1581b:	48 89 c2             	mov    %rax,%rdx
   1581e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15822:	48 89 10             	mov    %rdx,(%rax)
   15825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15829:	48 89 c7             	mov    %rax,%rdi
   1582c:	e8 6a f3 ff ff       	call   14b9b <block_to_payload>
   15831:	c9                   	leave  
   15832:	c3                   	ret    

0000000000015833 <reconfigure_block>:
   15833:	f3 0f 1e fa          	endbr64 
   15837:	55                   	push   %rbp
   15838:	48 89 e5             	mov    %rsp,%rbp
   1583b:	48 83 ec 10          	sub    $0x10,%rsp
   1583f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15847:	48 8b 10             	mov    (%rax),%rdx
   1584a:	48 8b 05 a7 38 02 00 	mov    0x238a7(%rip),%rax        # 390f8 <size_mask>
   15851:	48 21 c2             	and    %rax,%rdx
   15854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15858:	48 89 10             	mov    %rdx,(%rax)
   1585b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1585f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15866:	00 
   15867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1586b:	48 8b 00             	mov    (%rax),%rax
   1586e:	48 83 f8 10          	cmp    $0x10,%rax
   15872:	76 0c                	jbe    15880 <reconfigure_block+0x4d>
   15874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15878:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1587f:	00 
   15880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15884:	48 89 c7             	mov    %rax,%rdi
   15887:	e8 1b f7 ff ff       	call   14fa7 <possibly_merge>
   1588c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15894:	c9                   	leave  
   15895:	c3                   	ret    

0000000000015896 <can_erealloc>:
   15896:	f3 0f 1e fa          	endbr64 
   1589a:	55                   	push   %rbp
   1589b:	48 89 e5             	mov    %rsp,%rbp
   1589e:	48 83 ec 28          	sub    $0x28,%rsp
   158a2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   158a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   158aa:	48 89 c7             	mov    %rax,%rdi
   158ad:	e8 ca f2 ff ff       	call   14b7c <payload_to_block>
   158b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   158b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   158be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158c2:	48 89 c7             	mov    %rax,%rdi
   158c5:	e8 0a f3 ff ff       	call   14bd4 <block_size>
   158ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   158ce:	0f b6 05 e3 66 05 00 	movzbl 0x566e3(%rip),%eax        # 6bfb8 <adding_reserve>
   158d5:	84 c0                	test   %al,%al
   158d7:	74 07                	je     158e0 <can_erealloc+0x4a>
   158d9:	b8 01 00 00 00       	mov    $0x1,%eax
   158de:	eb 30                	jmp    15910 <can_erealloc+0x7a>
   158e0:	48 8d 05 99 5e 05 00 	lea    0x55e99(%rip),%rax        # 6b780 <meta_used>
   158e7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   158eb:	73 1e                	jae    1590b <can_erealloc+0x75>
   158ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   158f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158f5:	48 01 c2             	add    %rax,%rdx
   158f8:	48 8d 05 81 5e 04 00 	lea    0x45e81(%rip),%rax        # 5b780 <meta_reserve>
   158ff:	48 39 c2             	cmp    %rax,%rdx
   15902:	76 07                	jbe    1590b <can_erealloc+0x75>
   15904:	b8 00 00 00 00       	mov    $0x0,%eax
   15909:	eb 05                	jmp    15910 <can_erealloc+0x7a>
   1590b:	b8 01 00 00 00       	mov    $0x1,%eax
   15910:	c9                   	leave  
   15911:	c3                   	ret    

0000000000015912 <efree>:
   15912:	f3 0f 1e fa          	endbr64 
   15916:	55                   	push   %rbp
   15917:	48 89 e5             	mov    %rsp,%rbp
   1591a:	48 83 ec 40          	sub    $0x40,%rsp
   1591e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15922:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15926:	48 89 c7             	mov    %rax,%rdi
   15929:	e8 4e f2 ff ff       	call   14b7c <payload_to_block>
   1592e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15932:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15936:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1593a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1593e:	48 89 c7             	mov    %rax,%rdi
   15941:	e8 8e f2 ff ff       	call   14bd4 <block_size>
   15946:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1594a:	48 8d 05 2f 5e 05 00 	lea    0x55e2f(%rip),%rax        # 6b780 <meta_used>
   15951:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   15955:	0f 83 92 00 00 00    	jae    159ed <efree+0xdb>
   1595b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1595f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15963:	48 01 c2             	add    %rax,%rdx
   15966:	48 8d 05 13 5e 04 00 	lea    0x45e13(%rip),%rax        # 5b780 <meta_reserve>
   1596d:	48 39 c2             	cmp    %rax,%rdx
   15970:	76 7b                	jbe    159ed <efree+0xdb>
   15972:	0f b6 05 3f 66 05 00 	movzbl 0x5663f(%rip),%eax        # 6bfb8 <adding_reserve>
   15979:	84 c0                	test   %al,%al
   1597b:	74 6b                	je     159e8 <efree+0xd6>
   1597d:	48 8d 05 fc 5d 04 00 	lea    0x45dfc(%rip),%rax        # 5b780 <meta_reserve>
   15984:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   15988:	73 1f                	jae    159a9 <efree+0x97>
   1598a:	48 8d 0d 67 bd 01 00 	lea    0x1bd67(%rip),%rcx        # 316f8 <alloc_mask+0x88>
   15991:	48 8d 15 18 be 01 00 	lea    0x1be18(%rip),%rdx        # 317b0 <__func__.1692>
   15998:	be 16 02 00 00       	mov    $0x216,%esi
   1599d:	48 8d 3d f6 bc 01 00 	lea    0x1bcf6(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   159a4:	e8 30 13 00 00       	call   16cd9 <__assert>
   159a9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   159ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159b1:	48 01 c2             	add    %rax,%rdx
   159b4:	48 8d 05 c5 5d 05 00 	lea    0x55dc5(%rip),%rax        # 6b780 <meta_used>
   159bb:	48 39 c2             	cmp    %rax,%rdx
   159be:	0f 86 c8 00 00 00    	jbe    15a8c <efree+0x17a>
   159c4:	48 8d 0d 55 bd 01 00 	lea    0x1bd55(%rip),%rcx        # 31720 <alloc_mask+0xb0>
   159cb:	48 8d 15 de bd 01 00 	lea    0x1bdde(%rip),%rdx        # 317b0 <__func__.1692>
   159d2:	be 17 02 00 00       	mov    $0x217,%esi
   159d7:	48 8d 3d bc bc 01 00 	lea    0x1bcbc(%rip),%rdi        # 3169a <alloc_mask+0x2a>
   159de:	e8 f6 12 00 00       	call   16cd9 <__assert>
   159e3:	e9 a4 00 00 00       	jmp    15a8c <efree+0x17a>
   159e8:	e8 3e 9b 01 00       	call   2f52b <abort>
   159ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   159f1:	48 89 c7             	mov    %rax,%rdi
   159f4:	e8 db f1 ff ff       	call   14bd4 <block_size>
   159f9:	48 89 c2             	mov    %rax,%rdx
   159fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a00:	48 89 d6             	mov    %rdx,%rsi
   15a03:	48 89 c7             	mov    %rax,%rdi
   15a06:	e8 0d f2 ff ff       	call   14c18 <find_used_in_reserve>
   15a0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15a0f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15a14:	75 05                	jne    15a1b <efree+0x109>
   15a16:	e8 10 9b 01 00       	call   2f52b <abort>
   15a1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a1f:	48 89 c7             	mov    %rax,%rdi
   15a22:	e8 0c fe ff ff       	call   15833 <reconfigure_block>
   15a27:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15a2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a2f:	48 89 c7             	mov    %rax,%rdi
   15a32:	e8 bc f1 ff ff       	call   14bf3 <block_end>
   15a37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15a3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a3f:	48 8b 00             	mov    (%rax),%rax
   15a42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15a46:	48 29 c2             	sub    %rax,%rdx
   15a49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a4d:	48 8b 40 10          	mov    0x10(%rax),%rax
   15a51:	48 39 c2             	cmp    %rax,%rdx
   15a54:	75 28                	jne    15a7e <efree+0x16c>
   15a56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a5a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a62:	48 8b 00             	mov    (%rax),%rax
   15a65:	48 29 c2             	sub    %rax,%rdx
   15a68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   15a70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a74:	48 89 c7             	mov    %rax,%rdi
   15a77:	e8 d8 f8 ff ff       	call   15354 <merge_large_blocks_to_reserve>
   15a7c:	eb 0f                	jmp    15a8d <efree+0x17b>
   15a7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a82:	48 89 c7             	mov    %rax,%rdi
   15a85:	e8 97 f5 ff ff       	call   15021 <put_free_block>
   15a8a:	eb 01                	jmp    15a8d <efree+0x17b>
   15a8c:	90                   	nop
   15a8d:	c9                   	leave  
   15a8e:	c3                   	ret    

0000000000015a8f <mm_init_ema>:
   15a8f:	f3 0f 1e fa          	endbr64 
   15a93:	55                   	push   %rbp
   15a94:	48 89 e5             	mov    %rsp,%rbp
   15a97:	48 83 ec 50          	sub    $0x50,%rsp
   15a9b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15a9f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15aa3:	89 55 cc             	mov    %edx,-0x34(%rbp)
   15aa6:	89 4d c8             	mov    %ecx,-0x38(%rbp)
   15aa9:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
   15aad:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
   15ab1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15ab8:	00 00 
   15aba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15abe:	31 c0                	xor    %eax,%eax
   15ac0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15ac4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ac8:	48 89 d6             	mov    %rdx,%rsi
   15acb:	48 89 c7             	mov    %rax,%rdi
   15ace:	e8 9a 74 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   15ad3:	83 f0 01             	xor    $0x1,%eax
   15ad6:	84 c0                	test   %al,%al
   15ad8:	74 0a                	je     15ae4 <mm_init_ema+0x55>
   15ada:	b8 0d 00 00 00       	mov    $0xd,%eax
   15adf:	e9 c7 00 00 00       	jmp    15bab <mm_init_ema+0x11c>
   15ae4:	8b 45 cc             	mov    -0x34(%rbp),%eax
   15ae7:	89 c0                	mov    %eax,%eax
   15ae9:	48 25 7e f8 ff ff    	and    $0xfffffffffffff87e,%rax
   15aef:	48 85 c0             	test   %rax,%rax
   15af2:	74 0a                	je     15afe <mm_init_ema+0x6f>
   15af4:	b8 16 00 00 00       	mov    $0x16,%eax
   15af9:	e9 ad 00 00 00       	jmp    15bab <mm_init_ema+0x11c>
   15afe:	8b 45 c8             	mov    -0x38(%rbp),%eax
   15b01:	83 e0 f8             	and    $0xfffffff8,%eax
   15b04:	85 c0                	test   %eax,%eax
   15b06:	74 0a                	je     15b12 <mm_init_ema+0x83>
   15b08:	b8 16 00 00 00       	mov    $0x16,%eax
   15b0d:	e9 99 00 00 00       	jmp    15bab <mm_init_ema+0x11c>
   15b12:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   15b19:	00 
   15b1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b1e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   15b22:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15b26:	48 89 c6             	mov    %rax,%rsi
   15b29:	48 8d 3d 58 35 02 00 	lea    0x23558(%rip),%rdi        # 39088 <g_rts_ema_root>
   15b30:	e8 b6 d2 ff ff       	call   12deb <find_free_region_at>
   15b35:	83 f0 01             	xor    $0x1,%eax
   15b38:	84 c0                	test   %al,%al
   15b3a:	74 07                	je     15b43 <mm_init_ema+0xb4>
   15b3c:	b8 16 00 00 00       	mov    $0x16,%eax
   15b41:	eb 68                	jmp    15bab <mm_init_ema+0x11c>
   15b43:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   15b47:	8b 45 cc             	mov    -0x34(%rbp),%eax
   15b4a:	25 00 ff 00 00       	and    $0xff00,%eax
   15b4f:	0b 45 c8             	or     -0x38(%rbp),%eax
   15b52:	48 63 c8             	movslq %eax,%rcx
   15b55:	8b 45 cc             	mov    -0x34(%rbp),%eax
   15b58:	0f b6 d0             	movzbl %al,%edx
   15b5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b5f:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
   15b63:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   15b67:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   15b6b:	48 83 ec 08          	sub    $0x8,%rsp
   15b6f:	57                   	push   %rdi
   15b70:	48 89 c7             	mov    %rax,%rdi
   15b73:	e8 c8 d3 ff ff       	call   12f40 <ema_new>
   15b78:	48 83 c4 10          	add    $0x10,%rsp
   15b7c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15b80:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15b85:	75 07                	jne    15b8e <mm_init_ema+0xff>
   15b87:	b8 0c 00 00 00       	mov    $0xc,%eax
   15b8c:	eb 1d                	jmp    15bab <mm_init_ema+0x11c>
   15b8e:	8b 45 cc             	mov    -0x34(%rbp),%eax
   15b91:	83 e0 01             	and    $0x1,%eax
   15b94:	85 c0                	test   %eax,%eax
   15b96:	74 07                	je     15b9f <mm_init_ema+0x110>
   15b98:	b8 00 00 00 00       	mov    $0x0,%eax
   15b9d:	eb 0c                	jmp    15bab <mm_init_ema+0x11c>
   15b9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ba3:	48 89 c7             	mov    %rax,%rdi
   15ba6:	e8 bf c5 ff ff       	call   1216a <ema_set_eaccept_full>
   15bab:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   15baf:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   15bb6:	00 00 
   15bb8:	74 05                	je     15bbf <mm_init_ema+0x130>
   15bba:	e8 c8 b6 00 00       	call   21287 <__stack_chk_fail>
   15bbf:	c9                   	leave  
   15bc0:	c3                   	ret    

0000000000015bc1 <mm_alloc>:
   15bc1:	f3 0f 1e fa          	endbr64 
   15bc5:	55                   	push   %rbp
   15bc6:	48 89 e5             	mov    %rsp,%rbp
   15bc9:	48 83 ec 30          	sub    $0x30,%rsp
   15bcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15bd1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15bd5:	89 55 ec             	mov    %edx,-0x14(%rbp)
   15bd8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   15bdc:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   15be0:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   15be4:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
   15be8:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   15bec:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15bf0:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15bf3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bfb:	48 83 ec 08          	sub    $0x8,%rsp
   15bff:	48 8d 3d 82 34 02 00 	lea    0x23482(%rip),%rdi        # 39088 <g_rts_ema_root>
   15c06:	57                   	push   %rdi
   15c07:	48 89 c7             	mov    %rax,%rdi
   15c0a:	e8 37 01 00 00       	call   15d46 <mm_alloc_internal>
   15c0f:	48 83 c4 10          	add    $0x10,%rsp
   15c13:	c9                   	leave  
   15c14:	c3                   	ret    

0000000000015c15 <mm_commit>:
   15c15:	f3 0f 1e fa          	endbr64 
   15c19:	55                   	push   %rbp
   15c1a:	48 89 e5             	mov    %rsp,%rbp
   15c1d:	48 83 ec 10          	sub    $0x10,%rsp
   15c21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15c2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c31:	48 8d 15 50 34 02 00 	lea    0x23450(%rip),%rdx        # 39088 <g_rts_ema_root>
   15c38:	48 89 ce             	mov    %rcx,%rsi
   15c3b:	48 89 c7             	mov    %rax,%rdi
   15c3e:	e8 cf 05 00 00       	call   16212 <mm_commit_internal>
   15c43:	c9                   	leave  
   15c44:	c3                   	ret    

0000000000015c45 <mm_uncommit>:
   15c45:	f3 0f 1e fa          	endbr64 
   15c49:	55                   	push   %rbp
   15c4a:	48 89 e5             	mov    %rsp,%rbp
   15c4d:	48 83 ec 10          	sub    $0x10,%rsp
   15c51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15c5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c61:	48 8d 15 20 34 02 00 	lea    0x23420(%rip),%rdx        # 39088 <g_rts_ema_root>
   15c68:	48 89 ce             	mov    %rcx,%rsi
   15c6b:	48 89 c7             	mov    %rax,%rdi
   15c6e:	e8 b0 06 00 00       	call   16323 <mm_uncommit_internal>
   15c73:	c9                   	leave  
   15c74:	c3                   	ret    

0000000000015c75 <mm_dealloc>:
   15c75:	f3 0f 1e fa          	endbr64 
   15c79:	55                   	push   %rbp
   15c7a:	48 89 e5             	mov    %rsp,%rbp
   15c7d:	48 83 ec 10          	sub    $0x10,%rsp
   15c81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c85:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15c8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c91:	48 8d 15 f0 33 02 00 	lea    0x233f0(%rip),%rdx        # 39088 <g_rts_ema_root>
   15c98:	48 89 ce             	mov    %rcx,%rsi
   15c9b:	48 89 c7             	mov    %rax,%rdi
   15c9e:	e8 91 07 00 00       	call   16434 <mm_dealloc_internal>
   15ca3:	c9                   	leave  
   15ca4:	c3                   	ret    

0000000000015ca5 <mm_commit_data>:
   15ca5:	f3 0f 1e fa          	endbr64 
   15ca9:	55                   	push   %rbp
   15caa:	48 89 e5             	mov    %rsp,%rbp
   15cad:	48 83 ec 20          	sub    $0x20,%rsp
   15cb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cb9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15cbd:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   15cc0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   15cc3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15cc7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ccf:	4c 8d 05 b2 33 02 00 	lea    0x233b2(%rip),%r8        # 39088 <g_rts_ema_root>
   15cd6:	48 89 c7             	mov    %rax,%rdi
   15cd9:	e8 67 08 00 00       	call   16545 <mm_commit_data_internal>
   15cde:	c9                   	leave  
   15cdf:	c3                   	ret    

0000000000015ce0 <mm_modify_type>:
   15ce0:	f3 0f 1e fa          	endbr64 
   15ce4:	55                   	push   %rbp
   15ce5:	48 89 e5             	mov    %rsp,%rbp
   15ce8:	48 83 ec 20          	sub    $0x20,%rsp
   15cec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cf4:	89 55 ec             	mov    %edx,-0x14(%rbp)
   15cf7:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15cfa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d02:	48 8d 0d 7f 33 02 00 	lea    0x2337f(%rip),%rcx        # 39088 <g_rts_ema_root>
   15d09:	48 89 c7             	mov    %rax,%rdi
   15d0c:	e8 f6 09 00 00       	call   16707 <mm_modify_type_internal>
   15d11:	c9                   	leave  
   15d12:	c3                   	ret    

0000000000015d13 <mm_modify_permissions>:
   15d13:	f3 0f 1e fa          	endbr64 
   15d17:	55                   	push   %rbp
   15d18:	48 89 e5             	mov    %rsp,%rbp
   15d1b:	48 83 ec 20          	sub    $0x20,%rsp
   15d1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15d27:	89 55 ec             	mov    %edx,-0x14(%rbp)
   15d2a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15d2d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d35:	48 8d 0d 4c 33 02 00 	lea    0x2334c(%rip),%rcx        # 39088 <g_rts_ema_root>
   15d3c:	48 89 c7             	mov    %rax,%rdi
   15d3f:	e8 4b 0b 00 00       	call   1688f <mm_modify_permissions_internal>
   15d44:	c9                   	leave  
   15d45:	c3                   	ret    

0000000000015d46 <mm_alloc_internal>:
   15d46:	f3 0f 1e fa          	endbr64 
   15d4a:	55                   	push   %rbp
   15d4b:	48 89 e5             	mov    %rsp,%rbp
   15d4e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   15d55:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   15d59:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   15d5d:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
   15d63:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   15d6a:	4c 89 85 68 ff ff ff 	mov    %r8,-0x98(%rbp)
   15d71:	4c 89 8d 60 ff ff ff 	mov    %r9,-0xa0(%rbp)
   15d78:	48 8b 45 10          	mov    0x10(%rbp),%rax
   15d7c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   15d83:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15d8a:	00 00 
   15d8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15d90:	31 c0                	xor    %eax,%eax
   15d92:	c7 45 a0 ff ff ff ff 	movl   $0xffffffff,-0x60(%rbp)
   15d99:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   15da0:	00 
   15da1:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   15da8:	00 
   15da9:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   15db0:	00 
   15db1:	c6 45 9c 00          	movb   $0x0,-0x64(%rbp)
   15db5:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   15dbb:	25 ff 00 00 00       	and    $0xff,%eax
   15dc0:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   15dc3:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   15dc6:	83 e0 07             	and    $0x7,%eax
   15dc9:	85 c0                	test   %eax,%eax
   15dcb:	75 0a                	jne    15dd7 <mm_alloc_internal+0x91>
   15dcd:	b8 16 00 00 00       	mov    $0x16,%eax
   15dd2:	e9 bb 03 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15dd7:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   15ddd:	48 98                	cltq   
   15ddf:	25 00 ff 00 00       	and    $0xff00,%eax
   15de4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   15de8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15dec:	80 e4 f8             	and    $0xf8,%ah
   15def:	48 85 c0             	test   %rax,%rax
   15df2:	74 0a                	je     15dfe <mm_alloc_internal+0xb8>
   15df4:	b8 16 00 00 00       	mov    $0x16,%eax
   15df9:	e9 94 03 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15dfe:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15e03:	75 08                	jne    15e0d <mm_alloc_internal+0xc7>
   15e05:	48 c7 45 d0 00 02 00 	movq   $0x200,-0x30(%rbp)
   15e0c:	00 
   15e0d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15e11:	25 ff 0f 00 00       	and    $0xfff,%eax
   15e16:	48 85 c0             	test   %rax,%rax
   15e19:	74 0a                	je     15e25 <mm_alloc_internal+0xdf>
   15e1b:	b8 16 00 00 00       	mov    $0x16,%eax
   15e20:	e9 6d 03 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15e25:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   15e2b:	c1 e8 18             	shr    $0x18,%eax
   15e2e:	88 45 9d             	mov    %al,-0x63(%rbp)
   15e31:	80 7d 9d 00          	cmpb   $0x0,-0x63(%rbp)
   15e35:	75 04                	jne    15e3b <mm_alloc_internal+0xf5>
   15e37:	c6 45 9d 0c          	movb   $0xc,-0x63(%rbp)
   15e3b:	80 7d 9d 0b          	cmpb   $0xb,-0x63(%rbp)
   15e3f:	77 0a                	ja     15e4b <mm_alloc_internal+0x105>
   15e41:	b8 16 00 00 00       	mov    $0x16,%eax
   15e46:	e9 47 03 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15e4b:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
   15e4f:	ba 01 00 00 00       	mov    $0x1,%edx
   15e54:	89 c1                	mov    %eax,%ecx
   15e56:	48 d3 e2             	shl    %cl,%rdx
   15e59:	48 89 d0             	mov    %rdx,%rax
   15e5c:	48 83 e8 01          	sub    $0x1,%rax
   15e60:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15e64:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15e68:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   15e6c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15e70:	48 23 45 e0          	and    -0x20(%rbp),%rax
   15e74:	48 85 c0             	test   %rax,%rax
   15e77:	74 0a                	je     15e83 <mm_alloc_internal+0x13d>
   15e79:	b8 16 00 00 00       	mov    $0x16,%eax
   15e7e:	e9 0f 03 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15e83:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   15e88:	74 24                	je     15eae <mm_alloc_internal+0x168>
   15e8a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   15e8e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15e92:	48 89 d6             	mov    %rdx,%rsi
   15e95:	48 89 c7             	mov    %rax,%rdi
   15e98:	e8 d0 70 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   15e9d:	83 f0 01             	xor    $0x1,%eax
   15ea0:	84 c0                	test   %al,%al
   15ea2:	74 0a                	je     15eae <mm_alloc_internal+0x168>
   15ea4:	b8 0d 00 00 00       	mov    $0xd,%eax
   15ea9:	e9 e4 02 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15eae:	48 8b 05 0b 61 05 00 	mov    0x5610b(%rip),%rax        # 6bfc0 <mm_lock>
   15eb5:	48 89 c7             	mov    %rax,%rdi
   15eb8:	e8 c8 6f ff ff       	call   ce85 <sgx_mm_mutex_lock>
   15ebd:	85 c0                	test   %eax,%eax
   15ebf:	74 0a                	je     15ecb <mm_alloc_internal+0x185>
   15ec1:	b8 0e 00 00 00       	mov    $0xe,%eax
   15ec6:	e9 c7 02 00 00       	jmp    16192 <mm_alloc_internal+0x44c>
   15ecb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ecf:	48 83 c8 03          	or     $0x3,%rax
   15ed3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15ed7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   15eda:	83 e0 01             	and    $0x1,%eax
   15edd:	85 c0                	test   %eax,%eax
   15edf:	74 08                	je     15ee9 <mm_alloc_internal+0x1a3>
   15ee1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   15ee8:	00 
   15ee9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15eed:	48 85 c0             	test   %rax,%rax
   15ef0:	0f 84 26 01 00 00    	je     1601c <mm_alloc_internal+0x2d6>
   15ef6:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   15ef9:	83 e0 40             	and    $0x40,%eax
   15efc:	85 c0                	test   %eax,%eax
   15efe:	0f 95 c0             	setne  %al
   15f01:	88 45 9e             	mov    %al,-0x62(%rbp)
   15f04:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   15f08:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15f0c:	48 01 d0             	add    %rdx,%rax
   15f0f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15f13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15f17:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15f1b:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   15f22:	00 
   15f23:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   15f2a:	00 
   15f2b:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
   15f2f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   15f33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15f37:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15f3b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   15f42:	49 89 f8             	mov    %rdi,%r8
   15f45:	48 89 c7             	mov    %rax,%rdi
   15f48:	e8 3d c6 ff ff       	call   1258a <search_ema_range>
   15f4d:	85 c0                	test   %eax,%eax
   15f4f:	0f 94 c0             	sete   %al
   15f52:	88 45 9f             	mov    %al,-0x61(%rbp)
   15f55:	80 7d 9f 00          	cmpb   $0x0,-0x61(%rbp)
   15f59:	0f 84 82 00 00 00    	je     15fe1 <mm_alloc_internal+0x29b>
   15f5f:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   15f63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15f67:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   15f6b:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   15f6e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15f72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15f76:	ff b5 68 ff ff ff    	push   -0x98(%rbp)
   15f7c:	ff b5 70 ff ff ff    	push   -0x90(%rbp)
   15f82:	4d 89 c1             	mov    %r8,%r9
   15f85:	41 89 f8             	mov    %edi,%r8d
   15f88:	48 89 c7             	mov    %rax,%rdi
   15f8b:	e8 fe e7 ff ff       	call   1478e <ema_realloc_from_reserve_range>
   15f90:	48 83 c4 10          	add    $0x10,%rsp
   15f94:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   15f98:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15f9d:	0f 85 69 01 00 00    	jne    1610c <mm_alloc_internal+0x3c6>
   15fa3:	80 7d 9e 00          	cmpb   $0x0,-0x62(%rbp)
   15fa7:	74 0c                	je     15fb5 <mm_alloc_internal+0x26f>
   15fa9:	c7 45 a0 11 00 00 00 	movl   $0x11,-0x60(%rbp)
   15fb0:	e9 cb 01 00 00       	jmp    16180 <mm_alloc_internal+0x43a>
   15fb5:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   15fb9:	83 f0 01             	xor    $0x1,%eax
   15fbc:	84 c0                	test   %al,%al
   15fbe:	75 5c                	jne    1601c <mm_alloc_internal+0x2d6>
   15fc0:	48 8d 0d ef b7 01 00 	lea    0x1b7ef(%rip),%rcx        # 317b6 <__func__.1692+0x6>
   15fc7:	48 8d 15 32 b8 01 00 	lea    0x1b832(%rip),%rdx        # 31800 <__func__.1574>
   15fce:	be 78 00 00 00       	mov    $0x78,%esi
   15fd3:	48 8d 3d e1 b7 01 00 	lea    0x1b7e1(%rip),%rdi        # 317bb <__func__.1692+0xb>
   15fda:	e8 fa 0c 00 00       	call   16cd9 <__assert>
   15fdf:	eb 3b                	jmp    1601c <mm_alloc_internal+0x2d6>
   15fe1:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   15fe5:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   15fe9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   15fed:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   15ff4:	48 89 c7             	mov    %rax,%rdi
   15ff7:	e8 ef cd ff ff       	call   12deb <find_free_region_at>
   15ffc:	88 45 9c             	mov    %al,-0x64(%rbp)
   15fff:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   16003:	83 f0 01             	xor    $0x1,%eax
   16006:	84 c0                	test   %al,%al
   16008:	74 12                	je     1601c <mm_alloc_internal+0x2d6>
   1600a:	80 7d 9e 00          	cmpb   $0x0,-0x62(%rbp)
   1600e:	74 0c                	je     1601c <mm_alloc_internal+0x2d6>
   16010:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%rbp)
   16017:	e9 64 01 00 00       	jmp    16180 <mm_alloc_internal+0x43a>
   1601c:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   16020:	83 f0 01             	xor    $0x1,%eax
   16023:	84 c0                	test   %al,%al
   16025:	74 38                	je     1605f <mm_alloc_internal+0x319>
   16027:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
   1602b:	ba 01 00 00 00       	mov    $0x1,%edx
   16030:	48 89 d7             	mov    %rdx,%rdi
   16033:	89 c1                	mov    %eax,%ecx
   16035:	48 d3 e7             	shl    %cl,%rdi
   16038:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1603c:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   16040:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   16044:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1604b:	49 89 c8             	mov    %rcx,%r8
   1604e:	48 89 d1             	mov    %rdx,%rcx
   16051:	48 89 fa             	mov    %rdi,%rdx
   16054:	48 89 c7             	mov    %rax,%rdi
   16057:	e8 94 c9 ff ff       	call   129f0 <find_free_region>
   1605c:	88 45 9c             	mov    %al,-0x64(%rbp)
   1605f:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
   16063:	83 f0 01             	xor    $0x1,%eax
   16066:	84 c0                	test   %al,%al
   16068:	74 0c                	je     16076 <mm_alloc_internal+0x330>
   1606a:	c7 45 a0 0c 00 00 00 	movl   $0xc,-0x60(%rbp)
   16071:	e9 0a 01 00 00       	jmp    16180 <mm_alloc_internal+0x43a>
   16076:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1607a:	48 85 c0             	test   %rax,%rax
   1607d:	75 1f                	jne    1609e <mm_alloc_internal+0x358>
   1607f:	48 8d 0d 46 b7 01 00 	lea    0x1b746(%rip),%rcx        # 317cc <__func__.1692+0x1c>
   16086:	48 8d 15 73 b7 01 00 	lea    0x1b773(%rip),%rdx        # 31800 <__func__.1574>
   1608d:	be 95 00 00 00       	mov    $0x95,%esi
   16092:	48 8d 3d 22 b7 01 00 	lea    0x1b722(%rip),%rdi        # 317bb <__func__.1692+0xb>
   16099:	e8 3b 0c 00 00       	call   16cd9 <__assert>
   1609e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   160a2:	48 85 c0             	test   %rax,%rax
   160a5:	75 1f                	jne    160c6 <mm_alloc_internal+0x380>
   160a7:	48 8d 0d 27 b7 01 00 	lea    0x1b727(%rip),%rcx        # 317d5 <__func__.1692+0x25>
   160ae:	48 8d 15 4b b7 01 00 	lea    0x1b74b(%rip),%rdx        # 31800 <__func__.1574>
   160b5:	be 96 00 00 00       	mov    $0x96,%esi
   160ba:	48 8d 3d fa b6 01 00 	lea    0x1b6fa(%rip),%rdi        # 317bb <__func__.1692+0xb>
   160c1:	e8 13 0c 00 00       	call   16cd9 <__assert>
   160c6:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   160ca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   160ce:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
   160d5:	4c 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%r8
   160dc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   160e0:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   160e3:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   160e7:	48 83 ec 08          	sub    $0x8,%rsp
   160eb:	57                   	push   %rdi
   160ec:	48 89 c7             	mov    %rax,%rdi
   160ef:	e8 4c ce ff ff       	call   12f40 <ema_new>
   160f4:	48 83 c4 10          	add    $0x10,%rsp
   160f8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   160fc:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16101:	75 0c                	jne    1610f <mm_alloc_internal+0x3c9>
   16103:	c7 45 a0 0c 00 00 00 	movl   $0xc,-0x60(%rbp)
   1610a:	eb 74                	jmp    16180 <mm_alloc_internal+0x43a>
   1610c:	90                   	nop
   1610d:	eb 01                	jmp    16110 <mm_alloc_internal+0x3ca>
   1610f:	90                   	nop
   16110:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16115:	75 1f                	jne    16136 <mm_alloc_internal+0x3f0>
   16117:	48 8d 0d c0 b6 01 00 	lea    0x1b6c0(%rip),%rcx        # 317de <__func__.1692+0x2e>
   1611e:	48 8d 15 db b6 01 00 	lea    0x1b6db(%rip),%rdx        # 31800 <__func__.1574>
   16125:	be a0 00 00 00       	mov    $0xa0,%esi
   1612a:	48 8d 3d 8a b6 01 00 	lea    0x1b68a(%rip),%rdi        # 317bb <__func__.1692+0xb>
   16131:	e8 a3 0b 00 00       	call   16cd9 <__assert>
   16136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1613a:	48 89 c7             	mov    %rax,%rdi
   1613d:	e8 40 e9 ff ff       	call   14a82 <ema_do_alloc>
   16142:	89 45 a0             	mov    %eax,-0x60(%rbp)
   16145:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16149:	75 24                	jne    1616f <mm_alloc_internal+0x429>
   1614b:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   16152:	00 
   16153:	74 11                	je     16166 <mm_alloc_internal+0x420>
   16155:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   16159:	48 89 c2             	mov    %rax,%rdx
   1615c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   16163:	48 89 10             	mov    %rdx,(%rax)
   16166:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
   1616d:	eb 11                	jmp    16180 <mm_alloc_internal+0x43a>
   1616f:	90                   	nop
   16170:	f3 0f 1e fa          	endbr64 
   16174:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16178:	48 89 c7             	mov    %rax,%rdi
   1617b:	e8 08 cf ff ff       	call   13088 <ema_destroy>
   16180:	48 8b 05 39 5e 05 00 	mov    0x55e39(%rip),%rax        # 6bfc0 <mm_lock>
   16187:	48 89 c7             	mov    %rax,%rdi
   1618a:	e8 44 6d ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   1618f:	8b 45 a0             	mov    -0x60(%rbp),%eax
   16192:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   16196:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1619d:	00 00 
   1619f:	74 05                	je     161a6 <mm_alloc_internal+0x460>
   161a1:	e8 e1 b0 00 00       	call   21287 <__stack_chk_fail>
   161a6:	c9                   	leave  
   161a7:	c3                   	ret    

00000000000161a8 <sgx_mm_alloc>:
   161a8:	f3 0f 1e fa          	endbr64 
   161ac:	55                   	push   %rbp
   161ad:	48 89 e5             	mov    %rsp,%rbp
   161b0:	48 83 ec 30          	sub    $0x30,%rsp
   161b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161bc:	89 55 ec             	mov    %edx,-0x14(%rbp)
   161bf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   161c3:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
   161c7:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
   161cb:	8b 45 ec             	mov    -0x14(%rbp),%eax
   161ce:	48 98                	cltq   
   161d0:	25 80 00 00 00       	and    $0x80,%eax
   161d5:	48 85 c0             	test   %rax,%rax
   161d8:	74 07                	je     161e1 <sgx_mm_alloc+0x39>
   161da:	b8 16 00 00 00       	mov    $0x16,%eax
   161df:	eb 2f                	jmp    16210 <sgx_mm_alloc+0x68>
   161e1:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
   161e5:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
   161e9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   161ed:	8b 55 ec             	mov    -0x14(%rbp),%edx
   161f0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   161f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161f8:	48 83 ec 08          	sub    $0x8,%rsp
   161fc:	48 8d 3d e5 2e 02 00 	lea    0x22ee5(%rip),%rdi        # 390e8 <g_user_ema_root>
   16203:	57                   	push   %rdi
   16204:	48 89 c7             	mov    %rax,%rdi
   16207:	e8 3a fb ff ff       	call   15d46 <mm_alloc_internal>
   1620c:	48 83 c4 10          	add    $0x10,%rsp
   16210:	c9                   	leave  
   16211:	c3                   	ret    

0000000000016212 <mm_commit_internal>:
   16212:	f3 0f 1e fa          	endbr64 
   16216:	55                   	push   %rbp
   16217:	48 89 e5             	mov    %rsp,%rbp
   1621a:	48 83 ec 50          	sub    $0x50,%rsp
   1621e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16222:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16226:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1622a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16231:	00 00 
   16233:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16237:	31 c0                	xor    %eax,%eax
   16239:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   16240:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16244:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16248:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1624c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16250:	48 01 d0             	add    %rdx,%rax
   16253:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16257:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1625e:	00 
   1625f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16266:	00 
   16267:	48 8b 05 52 5d 05 00 	mov    0x55d52(%rip),%rax        # 6bfc0 <mm_lock>
   1626e:	48 89 c7             	mov    %rax,%rdi
   16271:	e8 0f 6c ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16276:	85 c0                	test   %eax,%eax
   16278:	74 05                	je     1627f <mm_commit_internal+0x6d>
   1627a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1627d:	eb 5e                	jmp    162dd <mm_commit_internal+0xcb>
   1627f:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   16283:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   16287:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1628b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1628f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16293:	49 89 f8             	mov    %rdi,%r8
   16296:	48 89 c7             	mov    %rax,%rdi
   16299:	e8 ec c2 ff ff       	call   1258a <search_ema_range>
   1629e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   162a1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   162a5:	79 09                	jns    162b0 <mm_commit_internal+0x9e>
   162a7:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   162ae:	eb 1b                	jmp    162cb <mm_commit_internal+0xb9>
   162b0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   162b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   162bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   162c0:	48 89 c7             	mov    %rax,%rdi
   162c3:	e8 fe d1 ff ff       	call   134c6 <ema_do_commit_loop>
   162c8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   162cb:	48 8b 05 ee 5c 05 00 	mov    0x55cee(%rip),%rax        # 6bfc0 <mm_lock>
   162d2:	48 89 c7             	mov    %rax,%rdi
   162d5:	e8 f9 6b ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   162da:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   162dd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   162e1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   162e8:	00 00 
   162ea:	74 05                	je     162f1 <mm_commit_internal+0xdf>
   162ec:	e8 96 af 00 00       	call   21287 <__stack_chk_fail>
   162f1:	c9                   	leave  
   162f2:	c3                   	ret    

00000000000162f3 <sgx_mm_commit>:
   162f3:	f3 0f 1e fa          	endbr64 
   162f7:	55                   	push   %rbp
   162f8:	48 89 e5             	mov    %rsp,%rbp
   162fb:	48 83 ec 10          	sub    $0x10,%rsp
   162ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16303:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16307:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1630b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1630f:	48 8d 15 d2 2d 02 00 	lea    0x22dd2(%rip),%rdx        # 390e8 <g_user_ema_root>
   16316:	48 89 ce             	mov    %rcx,%rsi
   16319:	48 89 c7             	mov    %rax,%rdi
   1631c:	e8 f1 fe ff ff       	call   16212 <mm_commit_internal>
   16321:	c9                   	leave  
   16322:	c3                   	ret    

0000000000016323 <mm_uncommit_internal>:
   16323:	f3 0f 1e fa          	endbr64 
   16327:	55                   	push   %rbp
   16328:	48 89 e5             	mov    %rsp,%rbp
   1632b:	48 83 ec 50          	sub    $0x50,%rsp
   1632f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16333:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16337:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1633b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16342:	00 00 
   16344:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16348:	31 c0                	xor    %eax,%eax
   1634a:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   16351:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16355:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16359:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1635d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16361:	48 01 d0             	add    %rdx,%rax
   16364:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16368:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1636f:	00 
   16370:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16377:	00 
   16378:	48 8b 05 41 5c 05 00 	mov    0x55c41(%rip),%rax        # 6bfc0 <mm_lock>
   1637f:	48 89 c7             	mov    %rax,%rdi
   16382:	e8 fe 6a ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16387:	85 c0                	test   %eax,%eax
   16389:	74 05                	je     16390 <mm_uncommit_internal+0x6d>
   1638b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1638e:	eb 5e                	jmp    163ee <mm_uncommit_internal+0xcb>
   16390:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   16394:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   16398:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1639c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   163a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   163a4:	49 89 f8             	mov    %rdi,%r8
   163a7:	48 89 c7             	mov    %rax,%rdi
   163aa:	e8 db c1 ff ff       	call   1258a <search_ema_range>
   163af:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   163b2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   163b6:	79 09                	jns    163c1 <mm_uncommit_internal+0x9e>
   163b8:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   163bf:	eb 1b                	jmp    163dc <mm_uncommit_internal+0xb9>
   163c1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   163c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   163c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   163cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163d1:	48 89 c7             	mov    %rax,%rdi
   163d4:	e8 9c d5 ff ff       	call   13975 <ema_do_uncommit_loop>
   163d9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   163dc:	48 8b 05 dd 5b 05 00 	mov    0x55bdd(%rip),%rax        # 6bfc0 <mm_lock>
   163e3:	48 89 c7             	mov    %rax,%rdi
   163e6:	e8 e8 6a ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   163eb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   163ee:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   163f2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   163f9:	00 00 
   163fb:	74 05                	je     16402 <mm_uncommit_internal+0xdf>
   163fd:	e8 85 ae 00 00       	call   21287 <__stack_chk_fail>
   16402:	c9                   	leave  
   16403:	c3                   	ret    

0000000000016404 <sgx_mm_uncommit>:
   16404:	f3 0f 1e fa          	endbr64 
   16408:	55                   	push   %rbp
   16409:	48 89 e5             	mov    %rsp,%rbp
   1640c:	48 83 ec 10          	sub    $0x10,%rsp
   16410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16414:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16418:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1641c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16420:	48 8d 15 c1 2c 02 00 	lea    0x22cc1(%rip),%rdx        # 390e8 <g_user_ema_root>
   16427:	48 89 ce             	mov    %rcx,%rsi
   1642a:	48 89 c7             	mov    %rax,%rdi
   1642d:	e8 f1 fe ff ff       	call   16323 <mm_uncommit_internal>
   16432:	c9                   	leave  
   16433:	c3                   	ret    

0000000000016434 <mm_dealloc_internal>:
   16434:	f3 0f 1e fa          	endbr64 
   16438:	55                   	push   %rbp
   16439:	48 89 e5             	mov    %rsp,%rbp
   1643c:	48 83 ec 50          	sub    $0x50,%rsp
   16440:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16444:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16448:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1644c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16453:	00 00 
   16455:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16459:	31 c0                	xor    %eax,%eax
   1645b:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   16462:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16466:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1646a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1646e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16472:	48 01 d0             	add    %rdx,%rax
   16475:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16479:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16480:	00 
   16481:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16488:	00 
   16489:	48 8b 05 30 5b 05 00 	mov    0x55b30(%rip),%rax        # 6bfc0 <mm_lock>
   16490:	48 89 c7             	mov    %rax,%rdi
   16493:	e8 ed 69 ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16498:	85 c0                	test   %eax,%eax
   1649a:	74 05                	je     164a1 <mm_dealloc_internal+0x6d>
   1649c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1649f:	eb 5e                	jmp    164ff <mm_dealloc_internal+0xcb>
   164a1:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   164a5:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   164a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   164ad:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   164b1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   164b5:	49 89 f8             	mov    %rdi,%r8
   164b8:	48 89 c7             	mov    %rax,%rdi
   164bb:	e8 ca c0 ff ff       	call   1258a <search_ema_range>
   164c0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   164c3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   164c7:	79 09                	jns    164d2 <mm_dealloc_internal+0x9e>
   164c9:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   164d0:	eb 1b                	jmp    164ed <mm_dealloc_internal+0xb9>
   164d2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   164d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   164da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   164de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   164e2:	48 89 c7             	mov    %rax,%rdi
   164e5:	e8 3b d7 ff ff       	call   13c25 <ema_do_dealloc_loop>
   164ea:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   164ed:	48 8b 05 cc 5a 05 00 	mov    0x55acc(%rip),%rax        # 6bfc0 <mm_lock>
   164f4:	48 89 c7             	mov    %rax,%rdi
   164f7:	e8 d7 69 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   164fc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   164ff:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   16503:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1650a:	00 00 
   1650c:	74 05                	je     16513 <mm_dealloc_internal+0xdf>
   1650e:	e8 74 ad 00 00       	call   21287 <__stack_chk_fail>
   16513:	c9                   	leave  
   16514:	c3                   	ret    

0000000000016515 <sgx_mm_dealloc>:
   16515:	f3 0f 1e fa          	endbr64 
   16519:	55                   	push   %rbp
   1651a:	48 89 e5             	mov    %rsp,%rbp
   1651d:	48 83 ec 10          	sub    $0x10,%rsp
   16521:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16525:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16529:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1652d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16531:	48 8d 15 b0 2b 02 00 	lea    0x22bb0(%rip),%rdx        # 390e8 <g_user_ema_root>
   16538:	48 89 ce             	mov    %rcx,%rsi
   1653b:	48 89 c7             	mov    %rax,%rdi
   1653e:	e8 f1 fe ff ff       	call   16434 <mm_dealloc_internal>
   16543:	c9                   	leave  
   16544:	c3                   	ret    

0000000000016545 <mm_commit_data_internal>:
   16545:	f3 0f 1e fa          	endbr64 
   16549:	55                   	push   %rbp
   1654a:	48 89 e5             	mov    %rsp,%rbp
   1654d:	48 83 ec 60          	sub    $0x60,%rsp
   16551:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16555:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16559:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1655d:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
   16560:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   16564:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1656b:	00 00 
   1656d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16571:	31 c0                	xor    %eax,%eax
   16573:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   1657a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1657e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16582:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16586:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1658a:	48 01 d0             	add    %rdx,%rax
   1658d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16591:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16598:	00 
   16599:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   165a0:	00 
   165a1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   165a6:	75 0a                	jne    165b2 <mm_commit_data_internal+0x6d>
   165a8:	b8 16 00 00 00       	mov    $0x16,%eax
   165ad:	e9 04 01 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   165b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   165b6:	25 ff 0f 00 00       	and    $0xfff,%eax
   165bb:	48 85 c0             	test   %rax,%rax
   165be:	74 0a                	je     165ca <mm_commit_data_internal+0x85>
   165c0:	b8 16 00 00 00       	mov    $0x16,%eax
   165c5:	e9 ec 00 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   165ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165ce:	25 ff 0f 00 00       	and    $0xfff,%eax
   165d3:	48 85 c0             	test   %rax,%rax
   165d6:	74 0a                	je     165e2 <mm_commit_data_internal+0x9d>
   165d8:	b8 16 00 00 00       	mov    $0x16,%eax
   165dd:	e9 d4 00 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   165e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   165e6:	25 ff 0f 00 00       	and    $0xfff,%eax
   165eb:	48 85 c0             	test   %rax,%rax
   165ee:	74 0a                	je     165fa <mm_commit_data_internal+0xb5>
   165f0:	b8 16 00 00 00       	mov    $0x16,%eax
   165f5:	e9 bc 00 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   165fa:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   165fd:	83 e0 f8             	and    $0xfffffff8,%eax
   16600:	85 c0                	test   %eax,%eax
   16602:	74 0a                	je     1660e <mm_commit_data_internal+0xc9>
   16604:	b8 16 00 00 00       	mov    $0x16,%eax
   16609:	e9 a8 00 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   1660e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   16612:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16616:	48 89 d6             	mov    %rdx,%rsi
   16619:	48 89 c7             	mov    %rax,%rdi
   1661c:	e8 4c 69 ff ff       	call   cf6d <sgx_mm_is_within_enclave>
   16621:	83 f0 01             	xor    $0x1,%eax
   16624:	84 c0                	test   %al,%al
   16626:	74 0a                	je     16632 <mm_commit_data_internal+0xed>
   16628:	b8 16 00 00 00       	mov    $0x16,%eax
   1662d:	e9 84 00 00 00       	jmp    166b6 <mm_commit_data_internal+0x171>
   16632:	48 8b 05 87 59 05 00 	mov    0x55987(%rip),%rax        # 6bfc0 <mm_lock>
   16639:	48 89 c7             	mov    %rax,%rdi
   1663c:	e8 44 68 ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16641:	85 c0                	test   %eax,%eax
   16643:	74 05                	je     1664a <mm_commit_data_internal+0x105>
   16645:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   16648:	eb 6c                	jmp    166b6 <mm_commit_data_internal+0x171>
   1664a:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   1664e:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   16652:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16656:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1665a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1665e:	49 89 f8             	mov    %rdi,%r8
   16661:	48 89 c7             	mov    %rax,%rdi
   16664:	e8 21 bf ff ff       	call   1258a <search_ema_range>
   16669:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1666c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   16670:	79 09                	jns    1667b <mm_commit_data_internal+0x136>
   16672:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   16679:	eb 29                	jmp    166a4 <mm_commit_data_internal+0x15f>
   1667b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1667f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16683:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
   16687:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1668b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1668f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16693:	45 89 c1             	mov    %r8d,%r9d
   16696:	49 89 f8             	mov    %rdi,%r8
   16699:	48 89 c7             	mov    %rax,%rdi
   1669c:	e8 d7 df ff ff       	call   14678 <ema_do_commit_data_loop>
   166a1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   166a4:	48 8b 05 15 59 05 00 	mov    0x55915(%rip),%rax        # 6bfc0 <mm_lock>
   166ab:	48 89 c7             	mov    %rax,%rdi
   166ae:	e8 20 68 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   166b3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   166b6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   166ba:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   166c1:	00 00 
   166c3:	74 05                	je     166ca <mm_commit_data_internal+0x185>
   166c5:	e8 bd ab 00 00       	call   21287 <__stack_chk_fail>
   166ca:	c9                   	leave  
   166cb:	c3                   	ret    

00000000000166cc <sgx_mm_commit_data>:
   166cc:	f3 0f 1e fa          	endbr64 
   166d0:	55                   	push   %rbp
   166d1:	48 89 e5             	mov    %rsp,%rbp
   166d4:	48 83 ec 20          	sub    $0x20,%rsp
   166d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   166e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   166e4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   166e7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
   166ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   166ee:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   166f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166f6:	4c 8d 05 eb 29 02 00 	lea    0x229eb(%rip),%r8        # 390e8 <g_user_ema_root>
   166fd:	48 89 c7             	mov    %rax,%rdi
   16700:	e8 40 fe ff ff       	call   16545 <mm_commit_data_internal>
   16705:	c9                   	leave  
   16706:	c3                   	ret    

0000000000016707 <mm_modify_type_internal>:
   16707:	f3 0f 1e fa          	endbr64 
   1670b:	55                   	push   %rbp
   1670c:	48 89 e5             	mov    %rsp,%rbp
   1670f:	48 83 ec 50          	sub    $0x50,%rsp
   16713:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16717:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1671b:	89 55 bc             	mov    %edx,-0x44(%rbp)
   1671e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   16722:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16729:	00 00 
   1672b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1672f:	31 c0                	xor    %eax,%eax
   16731:	81 7d bc 00 01 00 00 	cmpl   $0x100,-0x44(%rbp)
   16738:	74 0a                	je     16744 <mm_modify_type_internal+0x3d>
   1673a:	b8 01 00 00 00       	mov    $0x1,%eax
   1673f:	e9 02 01 00 00       	jmp    16846 <mm_modify_type_internal+0x13f>
   16744:	48 81 7d c0 00 10 00 	cmpq   $0x1000,-0x40(%rbp)
   1674b:	00 
   1674c:	74 0a                	je     16758 <mm_modify_type_internal+0x51>
   1674e:	b8 16 00 00 00       	mov    $0x16,%eax
   16753:	e9 ee 00 00 00       	jmp    16846 <mm_modify_type_internal+0x13f>
   16758:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   1675f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16763:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16767:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1676b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1676f:	48 01 d0             	add    %rdx,%rax
   16772:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16776:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1677d:	00 
   1677e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16785:	00 
   16786:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1678a:	25 ff 0f 00 00       	and    $0xfff,%eax
   1678f:	48 85 c0             	test   %rax,%rax
   16792:	74 0a                	je     1679e <mm_modify_type_internal+0x97>
   16794:	b8 16 00 00 00       	mov    $0x16,%eax
   16799:	e9 a8 00 00 00       	jmp    16846 <mm_modify_type_internal+0x13f>
   1679e:	48 8b 05 1b 58 05 00 	mov    0x5581b(%rip),%rax        # 6bfc0 <mm_lock>
   167a5:	48 89 c7             	mov    %rax,%rdi
   167a8:	e8 d8 66 ff ff       	call   ce85 <sgx_mm_mutex_lock>
   167ad:	85 c0                	test   %eax,%eax
   167af:	74 08                	je     167b9 <mm_modify_type_internal+0xb2>
   167b1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   167b4:	e9 8d 00 00 00       	jmp    16846 <mm_modify_type_internal+0x13f>
   167b9:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   167bd:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   167c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   167c5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   167c9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   167cd:	49 89 f8             	mov    %rdi,%r8
   167d0:	48 89 c7             	mov    %rax,%rdi
   167d3:	e8 b2 bd ff ff       	call   1258a <search_ema_range>
   167d8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   167db:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   167df:	79 09                	jns    167ea <mm_modify_type_internal+0xe3>
   167e1:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   167e8:	eb 4a                	jmp    16834 <mm_modify_type_internal+0x12d>
   167ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167ee:	48 89 c7             	mov    %rax,%rdi
   167f1:	e8 46 b8 ff ff       	call   1203c <ema_next>
   167f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   167fa:	48 39 d0             	cmp    %rdx,%rax
   167fd:	74 1f                	je     1681e <mm_modify_type_internal+0x117>
   167ff:	48 8d 0d dd af 01 00 	lea    0x1afdd(%rip),%rcx        # 317e3 <__func__.1692+0x33>
   16806:	48 8d 15 13 b0 01 00 	lea    0x1b013(%rip),%rdx        # 31820 <__func__.1660>
   1680d:	be 4d 01 00 00       	mov    $0x14d,%esi
   16812:	48 8d 3d a2 af 01 00 	lea    0x1afa2(%rip),%rdi        # 317bb <__func__.1692+0xb>
   16819:	e8 bb 04 00 00       	call   16cd9 <__assert>
   1681e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16822:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16826:	48 89 d6             	mov    %rdx,%rsi
   16829:	48 89 c7             	mov    %rax,%rdi
   1682c:	e8 71 d4 ff ff       	call   13ca2 <ema_change_to_tcs>
   16831:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   16834:	48 8b 05 85 57 05 00 	mov    0x55785(%rip),%rax        # 6bfc0 <mm_lock>
   1683b:	48 89 c7             	mov    %rax,%rdi
   1683e:	e8 90 66 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   16843:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   16846:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1684a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16851:	00 00 
   16853:	74 05                	je     1685a <mm_modify_type_internal+0x153>
   16855:	e8 2d aa 00 00       	call   21287 <__stack_chk_fail>
   1685a:	c9                   	leave  
   1685b:	c3                   	ret    

000000000001685c <sgx_mm_modify_type>:
   1685c:	f3 0f 1e fa          	endbr64 
   16860:	55                   	push   %rbp
   16861:	48 89 e5             	mov    %rsp,%rbp
   16864:	48 83 ec 20          	sub    $0x20,%rsp
   16868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1686c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16870:	89 55 ec             	mov    %edx,-0x14(%rbp)
   16873:	8b 55 ec             	mov    -0x14(%rbp),%edx
   16876:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1687a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1687e:	48 8d 0d 63 28 02 00 	lea    0x22863(%rip),%rcx        # 390e8 <g_user_ema_root>
   16885:	48 89 c7             	mov    %rax,%rdi
   16888:	e8 7a fe ff ff       	call   16707 <mm_modify_type_internal>
   1688d:	c9                   	leave  
   1688e:	c3                   	ret    

000000000001688f <mm_modify_permissions_internal>:
   1688f:	f3 0f 1e fa          	endbr64 
   16893:	55                   	push   %rbp
   16894:	48 89 e5             	mov    %rsp,%rbp
   16897:	48 83 ec 50          	sub    $0x50,%rsp
   1689b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1689f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   168a3:	89 55 bc             	mov    %edx,-0x44(%rbp)
   168a6:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   168aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   168b1:	00 00 
   168b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   168b7:	31 c0                	xor    %eax,%eax
   168b9:	c7 45 d4 0e 00 00 00 	movl   $0xe,-0x2c(%rbp)
   168c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   168c4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   168c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   168d0:	48 01 d0             	add    %rdx,%rax
   168d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   168d7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   168dc:	75 0a                	jne    168e8 <mm_modify_permissions_internal+0x59>
   168de:	b8 16 00 00 00       	mov    $0x16,%eax
   168e3:	e9 da 00 00 00       	jmp    169c2 <mm_modify_permissions_internal+0x133>
   168e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   168ec:	25 ff 0f 00 00       	and    $0xfff,%eax
   168f1:	48 85 c0             	test   %rax,%rax
   168f4:	74 0a                	je     16900 <mm_modify_permissions_internal+0x71>
   168f6:	b8 16 00 00 00       	mov    $0x16,%eax
   168fb:	e9 c2 00 00 00       	jmp    169c2 <mm_modify_permissions_internal+0x133>
   16900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16904:	25 ff 0f 00 00       	and    $0xfff,%eax
   16909:	48 85 c0             	test   %rax,%rax
   1690c:	74 0a                	je     16918 <mm_modify_permissions_internal+0x89>
   1690e:	b8 16 00 00 00       	mov    $0x16,%eax
   16913:	e9 aa 00 00 00       	jmp    169c2 <mm_modify_permissions_internal+0x133>
   16918:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1691b:	83 e0 04             	and    $0x4,%eax
   1691e:	85 c0                	test   %eax,%eax
   16920:	74 14                	je     16936 <mm_modify_permissions_internal+0xa7>
   16922:	8b 45 bc             	mov    -0x44(%rbp),%eax
   16925:	83 e0 01             	and    $0x1,%eax
   16928:	85 c0                	test   %eax,%eax
   1692a:	75 0a                	jne    16936 <mm_modify_permissions_internal+0xa7>
   1692c:	b8 16 00 00 00       	mov    $0x16,%eax
   16931:	e9 8c 00 00 00       	jmp    169c2 <mm_modify_permissions_internal+0x133>
   16936:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1693d:	00 
   1693e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16945:	00 
   16946:	48 8b 05 73 56 05 00 	mov    0x55673(%rip),%rax        # 6bfc0 <mm_lock>
   1694d:	48 89 c7             	mov    %rax,%rdi
   16950:	e8 30 65 ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16955:	85 c0                	test   %eax,%eax
   16957:	74 05                	je     1695e <mm_modify_permissions_internal+0xcf>
   16959:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1695c:	eb 64                	jmp    169c2 <mm_modify_permissions_internal+0x133>
   1695e:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   16962:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
   16966:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1696a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1696e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   16972:	49 89 f8             	mov    %rdi,%r8
   16975:	48 89 c7             	mov    %rax,%rdi
   16978:	e8 0d bc ff ff       	call   1258a <search_ema_range>
   1697d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   16980:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   16984:	79 09                	jns    1698f <mm_modify_permissions_internal+0x100>
   16986:	c7 45 d4 16 00 00 00 	movl   $0x16,-0x2c(%rbp)
   1698d:	eb 21                	jmp    169b0 <mm_modify_permissions_internal+0x121>
   1698f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   16993:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16997:	8b 7d bc             	mov    -0x44(%rbp),%edi
   1699a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1699e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   169a2:	41 89 f8             	mov    %edi,%r8d
   169a5:	48 89 c7             	mov    %rax,%rdi
   169a8:	e8 ca d9 ff ff       	call   14377 <ema_modify_permissions_loop>
   169ad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   169b0:	48 8b 05 09 56 05 00 	mov    0x55609(%rip),%rax        # 6bfc0 <mm_lock>
   169b7:	48 89 c7             	mov    %rax,%rdi
   169ba:	e8 14 65 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   169bf:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   169c2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   169c6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   169cd:	00 00 
   169cf:	74 05                	je     169d6 <mm_modify_permissions_internal+0x147>
   169d1:	e8 b1 a8 00 00       	call   21287 <__stack_chk_fail>
   169d6:	c9                   	leave  
   169d7:	c3                   	ret    

00000000000169d8 <sgx_mm_modify_permissions>:
   169d8:	f3 0f 1e fa          	endbr64 
   169dc:	55                   	push   %rbp
   169dd:	48 89 e5             	mov    %rsp,%rbp
   169e0:	48 83 ec 20          	sub    $0x20,%rsp
   169e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   169ec:	89 55 ec             	mov    %edx,-0x14(%rbp)
   169ef:	8b 55 ec             	mov    -0x14(%rbp),%edx
   169f2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   169f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169fa:	48 8d 0d e7 26 02 00 	lea    0x226e7(%rip),%rcx        # 390e8 <g_user_ema_root>
   16a01:	48 89 c7             	mov    %rax,%rdi
   16a04:	e8 86 fe ff ff       	call   1688f <mm_modify_permissions_internal>
   16a09:	c9                   	leave  
   16a0a:	c3                   	ret    

0000000000016a0b <sgx_mm_enclave_pfhandler>:
   16a0b:	f3 0f 1e fa          	endbr64 
   16a0f:	55                   	push   %rbp
   16a10:	48 89 e5             	mov    %rsp,%rbp
   16a13:	48 83 ec 40          	sub    $0x40,%rsp
   16a17:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16a1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16a22:	00 00 
   16a24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16a28:	31 c0                	xor    %eax,%eax
   16a2a:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   16a31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a35:	48 8b 00             	mov    (%rax),%rax
   16a38:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   16a3e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16a42:	48 8b 05 77 55 05 00 	mov    0x55577(%rip),%rax        # 6bfc0 <mm_lock>
   16a49:	48 89 c7             	mov    %rax,%rdi
   16a4c:	e8 34 64 ff ff       	call   ce85 <sgx_mm_mutex_lock>
   16a51:	85 c0                	test   %eax,%eax
   16a53:	74 08                	je     16a5d <sgx_mm_enclave_pfhandler+0x52>
   16a55:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   16a58:	e9 d7 01 00 00       	jmp    16c34 <sgx_mm_enclave_pfhandler+0x229>
   16a5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a61:	48 89 c6             	mov    %rax,%rsi
   16a64:	48 8d 3d 7d 26 02 00 	lea    0x2267d(%rip),%rdi        # 390e8 <g_user_ema_root>
   16a6b:	e8 76 b9 ff ff       	call   123e6 <search_ema>
   16a70:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16a74:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16a7b:	00 
   16a7c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   16a83:	00 
   16a84:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16a89:	75 22                	jne    16aad <sgx_mm_enclave_pfhandler+0xa2>
   16a8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a8f:	48 89 c6             	mov    %rax,%rsi
   16a92:	48 8d 3d ef 25 02 00 	lea    0x225ef(%rip),%rdi        # 39088 <g_rts_ema_root>
   16a99:	e8 48 b9 ff ff       	call   123e6 <search_ema>
   16a9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16aa2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16aa7:	0f 84 74 01 00 00    	je     16c21 <sgx_mm_enclave_pfhandler+0x216>
   16aad:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   16ab1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ab5:	48 89 d6             	mov    %rdx,%rsi
   16ab8:	48 89 c7             	mov    %rax,%rdi
   16abb:	e8 bd b5 ff ff       	call   1207d <ema_fault_handler>
   16ac0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16ac4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16ac9:	74 28                	je     16af3 <sgx_mm_enclave_pfhandler+0xe8>
   16acb:	48 8b 05 ee 54 05 00 	mov    0x554ee(%rip),%rax        # 6bfc0 <mm_lock>
   16ad2:	48 89 c7             	mov    %rax,%rdi
   16ad5:	e8 f9 63 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   16ada:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16ade:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ae2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16ae6:	48 89 d6             	mov    %rdx,%rsi
   16ae9:	48 89 c7             	mov    %rax,%rdi
   16aec:	ff d1                	call   *%rcx
   16aee:	e9 41 01 00 00       	jmp    16c34 <sgx_mm_enclave_pfhandler+0x229>
   16af3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16af7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16afb:	48 89 d6             	mov    %rdx,%rsi
   16afe:	48 89 c7             	mov    %rax,%rdi
   16b01:	e8 5e b8 ff ff       	call   12364 <ema_page_committed>
   16b06:	84 c0                	test   %al,%al
   16b08:	74 5e                	je     16b68 <sgx_mm_enclave_pfhandler+0x15d>
   16b0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b0e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   16b12:	83 e0 02             	and    $0x2,%eax
   16b15:	84 c0                	test   %al,%al
   16b17:	75 14                	jne    16b2d <sgx_mm_enclave_pfhandler+0x122>
   16b19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b1d:	48 89 c7             	mov    %rax,%rdi
   16b20:	e8 42 b5 ff ff       	call   12067 <get_ema_si_flags>
   16b25:	83 e0 01             	and    $0x1,%eax
   16b28:	48 85 c0             	test   %rax,%rax
   16b2b:	74 23                	je     16b50 <sgx_mm_enclave_pfhandler+0x145>
   16b2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b31:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   16b35:	83 e0 02             	and    $0x2,%eax
   16b38:	84 c0                	test   %al,%al
   16b3a:	74 20                	je     16b5c <sgx_mm_enclave_pfhandler+0x151>
   16b3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b40:	48 89 c7             	mov    %rax,%rdi
   16b43:	e8 1f b5 ff ff       	call   12067 <get_ema_si_flags>
   16b48:	83 e0 02             	and    $0x2,%eax
   16b4b:	48 85 c0             	test   %rax,%rax
   16b4e:	75 0c                	jne    16b5c <sgx_mm_enclave_pfhandler+0x151>
   16b50:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   16b57:	e9 c6 00 00 00       	jmp    16c22 <sgx_mm_enclave_pfhandler+0x217>
   16b5c:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   16b63:	e9 ba 00 00 00       	jmp    16c22 <sgx_mm_enclave_pfhandler+0x217>
   16b68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b6c:	48 89 c7             	mov    %rax,%rdi
   16b6f:	e8 de b4 ff ff       	call   12052 <get_ema_alloc_flags>
   16b74:	83 e0 04             	and    $0x4,%eax
   16b77:	85 c0                	test   %eax,%eax
   16b79:	0f 84 8e 00 00 00    	je     16c0d <sgx_mm_enclave_pfhandler+0x202>
   16b7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b83:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   16b87:	83 e0 02             	and    $0x2,%eax
   16b8a:	84 c0                	test   %al,%al
   16b8c:	75 14                	jne    16ba2 <sgx_mm_enclave_pfhandler+0x197>
   16b8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b92:	48 89 c7             	mov    %rax,%rdi
   16b95:	e8 cd b4 ff ff       	call   12067 <get_ema_si_flags>
   16b9a:	83 e0 01             	and    $0x1,%eax
   16b9d:	48 85 c0             	test   %rax,%rax
   16ba0:	74 23                	je     16bc5 <sgx_mm_enclave_pfhandler+0x1ba>
   16ba2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ba6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
   16baa:	83 e0 02             	and    $0x2,%eax
   16bad:	84 c0                	test   %al,%al
   16baf:	74 1d                	je     16bce <sgx_mm_enclave_pfhandler+0x1c3>
   16bb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16bb5:	48 89 c7             	mov    %rax,%rdi
   16bb8:	e8 aa b4 ff ff       	call   12067 <get_ema_si_flags>
   16bbd:	83 e0 02             	and    $0x2,%eax
   16bc0:	48 85 c0             	test   %rax,%rax
   16bc3:	75 09                	jne    16bce <sgx_mm_enclave_pfhandler+0x1c3>
   16bc5:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   16bcc:	eb 54                	jmp    16c22 <sgx_mm_enclave_pfhandler+0x217>
   16bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bd2:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
   16bd9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16bdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16be1:	48 89 ce             	mov    %rcx,%rsi
   16be4:	48 89 c7             	mov    %rax,%rdi
   16be7:	e8 82 c6 ff ff       	call   1326e <ema_do_commit>
   16bec:	85 c0                	test   %eax,%eax
   16bee:	74 14                	je     16c04 <sgx_mm_enclave_pfhandler+0x1f9>
   16bf0:	48 8b 05 c9 53 05 00 	mov    0x553c9(%rip),%rax        # 6bfc0 <mm_lock>
   16bf7:	48 89 c7             	mov    %rax,%rdi
   16bfa:	e8 d4 62 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   16bff:	e8 27 89 01 00       	call   2f52b <abort>
   16c04:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%rbp)
   16c0b:	eb 15                	jmp    16c22 <sgx_mm_enclave_pfhandler+0x217>
   16c0d:	48 8b 05 ac 53 05 00 	mov    0x553ac(%rip),%rax        # 6bfc0 <mm_lock>
   16c14:	48 89 c7             	mov    %rax,%rdi
   16c17:	e8 b7 62 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   16c1c:	e8 0a 89 01 00       	call   2f52b <abort>
   16c21:	90                   	nop
   16c22:	48 8b 05 97 53 05 00 	mov    0x55397(%rip),%rax        # 6bfc0 <mm_lock>
   16c29:	48 89 c7             	mov    %rax,%rdi
   16c2c:	e8 a2 62 ff ff       	call   ced3 <sgx_mm_mutex_unlock>
   16c31:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   16c34:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   16c38:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16c3f:	00 00 
   16c41:	74 05                	je     16c48 <sgx_mm_enclave_pfhandler+0x23d>
   16c43:	e8 3f a6 00 00       	call   21287 <__stack_chk_fail>
   16c48:	c9                   	leave  
   16c49:	c3                   	ret    

0000000000016c4a <sgx_mm_init>:
   16c4a:	f3 0f 1e fa          	endbr64 
   16c4e:	55                   	push   %rbp
   16c4f:	48 89 e5             	mov    %rsp,%rbp
   16c52:	48 83 ec 10          	sub    $0x10,%rsp
   16c56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c5e:	e8 e8 61 ff ff       	call   ce4b <sgx_mm_mutex_create>
   16c63:	48 89 05 56 53 05 00 	mov    %rax,0x55356(%rip)        # 6bfc0 <mm_lock>
   16c6a:	48 8b 05 4f 53 05 00 	mov    0x5534f(%rip),%rax        # 6bfc0 <mm_lock>
   16c71:	48 85 c0             	test   %rax,%rax
   16c74:	75 07                	jne    16c7d <sgx_mm_init+0x33>
   16c76:	b8 0e 00 00 00       	mov    $0xe,%eax
   16c7b:	eb 35                	jmp    16cb2 <sgx_mm_init+0x68>
   16c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c81:	48 89 05 40 53 05 00 	mov    %rax,0x55340(%rip)        # 6bfc8 <mm_user_base>
   16c88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c8c:	48 89 05 3d 53 05 00 	mov    %rax,0x5533d(%rip)        # 6bfd0 <mm_user_end>
   16c93:	48 8d 3d 71 fd ff ff 	lea    -0x28f(%rip),%rdi        # 16a0b <sgx_mm_enclave_pfhandler>
   16c9a:	e8 14 61 ff ff       	call   cdb3 <sgx_mm_register_pfhandler>
   16c9f:	83 f0 01             	xor    $0x1,%eax
   16ca2:	84 c0                	test   %al,%al
   16ca4:	74 07                	je     16cad <sgx_mm_init+0x63>
   16ca6:	b8 0e 00 00 00       	mov    $0xe,%eax
   16cab:	eb 05                	jmp    16cb2 <sgx_mm_init+0x68>
   16cad:	e8 1b ea ff ff       	call   156cd <emalloc_init>
   16cb2:	c9                   	leave  
   16cb3:	c3                   	ret    
   16cb4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16cbb:	00 00 00 
   16cbe:	66 90                	xchg   %ax,%ax

0000000000016cc0 <alloca>:
   16cc0:	f3 0f 1e fa          	endbr64 
   16cc4:	5a                   	pop    %rdx
   16cc5:	48 89 e1             	mov    %rsp,%rcx
   16cc8:	48 83 c7 0f          	add    $0xf,%rdi
   16ccc:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   16cd0:	48 29 fc             	sub    %rdi,%rsp
   16cd3:	48 89 e0             	mov    %rsp,%rax
   16cd6:	3e ff e2             	notrack jmp *%rdx

0000000000016cd9 <__assert>:
   16cd9:	f3 0f 1e fa          	endbr64 
   16cdd:	55                   	push   %rbp
   16cde:	48 89 e5             	mov    %rsp,%rbp
   16ce1:	48 83 ec 20          	sub    $0x20,%rsp
   16ce5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ce9:	89 75 f4             	mov    %esi,-0xc(%rbp)
   16cec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16cf0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   16cf4:	e8 32 88 01 00       	call   2f52b <abort>

0000000000016cf9 <heap_init>:
   16cf9:	f3 0f 1e fa          	endbr64 
   16cfd:	55                   	push   %rbp
   16cfe:	48 89 e5             	mov    %rsp,%rbp
   16d01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16d09:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16d0d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
   16d10:	48 8b 05 01 11 02 00 	mov    0x21101(%rip),%rax        # 37e18 <heap_base>
   16d17:	48 85 c0             	test   %rax,%rax
   16d1a:	74 0a                	je     16d26 <heap_init+0x2d>
   16d1c:	b8 01 00 00 00       	mov    $0x1,%eax
   16d21:	e9 8c 00 00 00       	jmp    16db2 <heap_init+0xb9>
   16d26:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16d2b:	74 0e                	je     16d3b <heap_init+0x42>
   16d2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d31:	25 ff 0f 00 00       	and    $0xfff,%eax
   16d36:	48 85 c0             	test   %rax,%rax
   16d39:	74 07                	je     16d42 <heap_init+0x49>
   16d3b:	b8 01 00 00 00       	mov    $0x1,%eax
   16d40:	eb 70                	jmp    16db2 <heap_init+0xb9>
   16d42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d46:	25 ff 0f 00 00       	and    $0xfff,%eax
   16d4b:	48 85 c0             	test   %rax,%rax
   16d4e:	74 07                	je     16d57 <heap_init+0x5e>
   16d50:	b8 01 00 00 00       	mov    $0x1,%eax
   16d55:	eb 5b                	jmp    16db2 <heap_init+0xb9>
   16d57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d5b:	25 ff 0f 00 00       	and    $0xfff,%eax
   16d60:	48 85 c0             	test   %rax,%rax
   16d63:	74 07                	je     16d6c <heap_init+0x73>
   16d65:	b8 01 00 00 00       	mov    $0x1,%eax
   16d6a:	eb 46                	jmp    16db2 <heap_init+0xb9>
   16d6c:	48 8b 05 a5 10 02 00 	mov    0x210a5(%rip),%rax        # 37e18 <heap_base>
   16d73:	48 f7 d0             	not    %rax
   16d76:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   16d7a:	76 07                	jbe    16d83 <heap_init+0x8a>
   16d7c:	b8 01 00 00 00       	mov    $0x1,%eax
   16d81:	eb 2f                	jmp    16db2 <heap_init+0xb9>
   16d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d87:	48 89 05 8a 10 02 00 	mov    %rax,0x2108a(%rip)        # 37e18 <heap_base>
   16d8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d92:	48 89 05 87 10 02 00 	mov    %rax,0x21087(%rip)        # 37e20 <heap_size>
   16d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d9d:	48 89 05 8c 10 02 00 	mov    %rax,0x2108c(%rip)        # 37e30 <heap_min_size>
   16da4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   16da7:	89 05 7b 10 02 00    	mov    %eax,0x2107b(%rip)        # 37e28 <is_edmm_supported>
   16dad:	b8 00 00 00 00       	mov    $0x0,%eax
   16db2:	5d                   	pop    %rbp
   16db3:	c3                   	ret    

0000000000016db4 <sbrk>:
   16db4:	f3 0f 1e fa          	endbr64 
   16db8:	55                   	push   %rbp
   16db9:	48 89 e5             	mov    %rsp,%rbp
   16dbc:	48 83 ec 40          	sub    $0x40,%rsp
   16dc0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16dc4:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   16dcb:	00 
   16dcc:	48 8b 05 0d 52 05 00 	mov    0x5520d(%rip),%rax        # 6bfe0 <heap_used.2550>
   16dd3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16dd7:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   16dde:	00 
   16ddf:	48 8b 05 fa 51 05 00 	mov    0x551fa(%rip),%rax        # 6bfe0 <heap_used.2550>
   16de6:	25 ff 0f 00 00       	and    $0xfff,%eax
   16deb:	48 85 c0             	test   %rax,%rax
   16dee:	74 1f                	je     16e0f <sbrk+0x5b>
   16df0:	48 8d 0d 41 aa 01 00 	lea    0x1aa41(%rip),%rcx        # 31838 <__func__.1660+0x18>
   16df7:	48 8d 15 ab aa 01 00 	lea    0x1aaab(%rip),%rdx        # 318a9 <__func__.2555>
   16dfe:	be 51 00 00 00       	mov    $0x51,%esi
   16e03:	48 8d 3d 54 aa 01 00 	lea    0x1aa54(%rip),%rdi        # 3185e <__func__.1660+0x3e>
   16e0a:	e8 ca fe ff ff       	call   16cd9 <__assert>
   16e0f:	48 8b 05 02 10 02 00 	mov    0x21002(%rip),%rax        # 37e18 <heap_base>
   16e16:	48 85 c0             	test   %rax,%rax
   16e19:	75 0c                	jne    16e27 <sbrk+0x73>
   16e1b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   16e22:	e9 03 03 00 00       	jmp    1712a <sbrk+0x376>
   16e27:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16e2c:	0f 89 5c 01 00 00    	jns    16f8e <sbrk+0x1da>
   16e32:	48 f7 5d c8          	negq   -0x38(%rbp)
   16e36:	48 8b 15 a3 51 05 00 	mov    0x551a3(%rip),%rdx        # 6bfe0 <heap_used.2550>
   16e3d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16e41:	48 39 c2             	cmp    %rax,%rdx
   16e44:	73 0c                	jae    16e52 <sbrk+0x9e>
   16e46:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   16e4d:	e9 d8 02 00 00       	jmp    1712a <sbrk+0x376>
   16e52:	48 8b 15 87 51 05 00 	mov    0x55187(%rip),%rdx        # 6bfe0 <heap_used.2550>
   16e59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16e5d:	48 29 c2             	sub    %rax,%rdx
   16e60:	48 89 d0             	mov    %rdx,%rax
   16e63:	48 89 05 76 51 05 00 	mov    %rax,0x55176(%rip)        # 6bfe0 <heap_used.2550>
   16e6a:	48 8b 05 a7 0f 02 00 	mov    0x20fa7(%rip),%rax        # 37e18 <heap_base>
   16e71:	48 89 c2             	mov    %rax,%rdx
   16e74:	48 8b 05 65 51 05 00 	mov    0x55165(%rip),%rax        # 6bfe0 <heap_used.2550>
   16e7b:	48 01 d0             	add    %rdx,%rax
   16e7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16e82:	8b 05 a0 0f 02 00    	mov    0x20fa0(%rip),%eax        # 37e28 <is_edmm_supported>
   16e88:	85 c0                	test   %eax,%eax
   16e8a:	0f 84 f5 00 00 00    	je     16f85 <sbrk+0x1d1>
   16e90:	48 8b 05 99 0f 02 00 	mov    0x20f99(%rip),%rax        # 37e30 <heap_min_size>
   16e97:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   16e9b:	0f 86 e4 00 00 00    	jbe    16f85 <sbrk+0x1d1>
   16ea1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ea5:	25 ff 0f 00 00       	and    $0xfff,%eax
   16eaa:	48 85 c0             	test   %rax,%rax
   16ead:	74 1f                	je     16ece <sbrk+0x11a>
   16eaf:	48 8d 0d b3 a9 01 00 	lea    0x1a9b3(%rip),%rcx        # 31869 <__func__.1660+0x49>
   16eb6:	48 8d 15 ec a9 01 00 	lea    0x1a9ec(%rip),%rdx        # 318a9 <__func__.2555>
   16ebd:	be 66 00 00 00       	mov    $0x66,%esi
   16ec2:	48 8d 3d 95 a9 01 00 	lea    0x1a995(%rip),%rdi        # 3185e <__func__.1660+0x3e>
   16ec9:	e8 0b fe ff ff       	call   16cd9 <__assert>
   16ece:	48 8b 15 0b 51 05 00 	mov    0x5510b(%rip),%rdx        # 6bfe0 <heap_used.2550>
   16ed5:	48 8b 05 54 0f 02 00 	mov    0x20f54(%rip),%rax        # 37e30 <heap_min_size>
   16edc:	48 39 c2             	cmp    %rax,%rdx
   16edf:	76 12                	jbe    16ef3 <sbrk+0x13f>
   16ee1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ee5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16ee9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16eed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16ef1:	eb 2d                	jmp    16f20 <sbrk+0x16c>
   16ef3:	48 8b 05 1e 0f 02 00 	mov    0x20f1e(%rip),%rax        # 37e18 <heap_base>
   16efa:	48 89 c2             	mov    %rax,%rdx
   16efd:	48 8b 05 2c 0f 02 00 	mov    0x20f2c(%rip),%rax        # 37e30 <heap_min_size>
   16f04:	48 01 d0             	add    %rdx,%rax
   16f07:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16f0b:	48 8b 05 1e 0f 02 00 	mov    0x20f1e(%rip),%rax        # 37e30 <heap_min_size>
   16f12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f16:	48 29 c2             	sub    %rax,%rdx
   16f19:	48 89 d0             	mov    %rdx,%rax
   16f1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16f20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f24:	25 ff 0f 00 00       	and    $0xfff,%eax
   16f29:	48 85 c0             	test   %rax,%rax
   16f2c:	74 1f                	je     16f4d <sbrk+0x199>
   16f2e:	48 8d 0d 53 a9 01 00 	lea    0x1a953(%rip),%rcx        # 31888 <__func__.1660+0x68>
   16f35:	48 8d 15 6d a9 01 00 	lea    0x1a96d(%rip),%rdx        # 318a9 <__func__.2555>
   16f3c:	be 75 00 00 00       	mov    $0x75,%esi
   16f41:	48 8d 3d 16 a9 01 00 	lea    0x1a916(%rip),%rdi        # 3185e <__func__.1660+0x3e>
   16f48:	e8 8c fd ff ff       	call   16cd9 <__assert>
   16f4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16f51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16f55:	48 89 d6             	mov    %rdx,%rsi
   16f58:	48 89 c7             	mov    %rax,%rdi
   16f5b:	b8 00 00 00 00       	mov    $0x0,%eax
   16f60:	e8 e0 ec ff ff       	call   15c45 <mm_uncommit>
   16f65:	89 45 dc             	mov    %eax,-0x24(%rbp)
   16f68:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   16f6c:	74 17                	je     16f85 <sbrk+0x1d1>
   16f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f72:	48 89 05 67 50 05 00 	mov    %rax,0x55067(%rip)        # 6bfe0 <heap_used.2550>
   16f79:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   16f80:	e9 a5 01 00 00       	jmp    1712a <sbrk+0x376>
   16f85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f89:	e9 9c 01 00 00       	jmp    1712a <sbrk+0x376>
   16f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16f92:	48 f7 d0             	not    %rax
   16f95:	48 89 c2             	mov    %rax,%rdx
   16f98:	48 8b 05 41 50 05 00 	mov    0x55041(%rip),%rax        # 6bfe0 <heap_used.2550>
   16f9f:	48 39 c2             	cmp    %rax,%rdx
   16fa2:	72 1a                	jb     16fbe <sbrk+0x20a>
   16fa4:	48 8b 15 35 50 05 00 	mov    0x55035(%rip),%rdx        # 6bfe0 <heap_used.2550>
   16fab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16faf:	48 01 c2             	add    %rax,%rdx
   16fb2:	48 8b 05 67 0e 02 00 	mov    0x20e67(%rip),%rax        # 37e20 <heap_size>
   16fb9:	48 39 c2             	cmp    %rax,%rdx
   16fbc:	76 0c                	jbe    16fca <sbrk+0x216>
   16fbe:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   16fc5:	e9 60 01 00 00       	jmp    1712a <sbrk+0x376>
   16fca:	48 8b 05 47 0e 02 00 	mov    0x20e47(%rip),%rax        # 37e18 <heap_base>
   16fd1:	48 89 c2             	mov    %rax,%rdx
   16fd4:	48 8b 05 05 50 05 00 	mov    0x55005(%rip),%rax        # 6bfe0 <heap_used.2550>
   16fdb:	48 01 d0             	add    %rdx,%rax
   16fde:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16fe2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16fe7:	75 09                	jne    16ff2 <sbrk+0x23e>
   16fe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16fed:	e9 38 01 00 00       	jmp    1712a <sbrk+0x376>
   16ff2:	48 8b 15 e7 4f 05 00 	mov    0x54fe7(%rip),%rdx        # 6bfe0 <heap_used.2550>
   16ff9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ffd:	48 01 d0             	add    %rdx,%rax
   17000:	48 89 05 d9 4f 05 00 	mov    %rax,0x54fd9(%rip)        # 6bfe0 <heap_used.2550>
   17007:	48 8b 15 ca 4f 05 00 	mov    0x54fca(%rip),%rdx        # 6bfd8 <g_peak_heap_used>
   1700e:	48 8b 05 cb 4f 05 00 	mov    0x54fcb(%rip),%rax        # 6bfe0 <heap_used.2550>
   17015:	48 39 c2             	cmp    %rax,%rdx
   17018:	48 0f 43 c2          	cmovae %rdx,%rax
   1701c:	48 89 05 b5 4f 05 00 	mov    %rax,0x54fb5(%rip)        # 6bfd8 <g_peak_heap_used>
   17023:	8b 05 ff 0d 02 00    	mov    0x20dff(%rip),%eax        # 37e28 <is_edmm_supported>
   17029:	85 c0                	test   %eax,%eax
   1702b:	0f 84 f5 00 00 00    	je     17126 <sbrk+0x372>
   17031:	48 8b 15 a8 4f 05 00 	mov    0x54fa8(%rip),%rdx        # 6bfe0 <heap_used.2550>
   17038:	48 8b 05 f1 0d 02 00 	mov    0x20df1(%rip),%rax        # 37e30 <heap_min_size>
   1703f:	48 39 c2             	cmp    %rax,%rdx
   17042:	0f 86 de 00 00 00    	jbe    17126 <sbrk+0x372>
   17048:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1704c:	25 ff 0f 00 00       	and    $0xfff,%eax
   17051:	48 85 c0             	test   %rax,%rax
   17054:	74 1f                	je     17075 <sbrk+0x2c1>
   17056:	48 8d 0d 0c a8 01 00 	lea    0x1a80c(%rip),%rcx        # 31869 <__func__.1660+0x49>
   1705d:	48 8d 15 45 a8 01 00 	lea    0x1a845(%rip),%rdx        # 318a9 <__func__.2555>
   17064:	be 91 00 00 00       	mov    $0x91,%esi
   17069:	48 8d 3d ee a7 01 00 	lea    0x1a7ee(%rip),%rdi        # 3185e <__func__.1660+0x3e>
   17070:	e8 64 fc ff ff       	call   16cd9 <__assert>
   17075:	48 8b 05 b4 0d 02 00 	mov    0x20db4(%rip),%rax        # 37e30 <heap_min_size>
   1707c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17080:	76 12                	jbe    17094 <sbrk+0x2e0>
   17082:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17086:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1708a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1708e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17092:	eb 30                	jmp    170c4 <sbrk+0x310>
   17094:	48 8b 05 7d 0d 02 00 	mov    0x20d7d(%rip),%rax        # 37e18 <heap_base>
   1709b:	48 89 c2             	mov    %rax,%rdx
   1709e:	48 8b 05 8b 0d 02 00 	mov    0x20d8b(%rip),%rax        # 37e30 <heap_min_size>
   170a5:	48 01 d0             	add    %rdx,%rax
   170a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   170ac:	48 8b 15 2d 4f 05 00 	mov    0x54f2d(%rip),%rdx        # 6bfe0 <heap_used.2550>
   170b3:	48 8b 05 76 0d 02 00 	mov    0x20d76(%rip),%rax        # 37e30 <heap_min_size>
   170ba:	48 29 c2             	sub    %rax,%rdx
   170bd:	48 89 d0             	mov    %rdx,%rax
   170c0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   170c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170c8:	25 ff 0f 00 00       	and    $0xfff,%eax
   170cd:	48 85 c0             	test   %rax,%rax
   170d0:	74 1f                	je     170f1 <sbrk+0x33d>
   170d2:	48 8d 0d af a7 01 00 	lea    0x1a7af(%rip),%rcx        # 31888 <__func__.1660+0x68>
   170d9:	48 8d 15 c9 a7 01 00 	lea    0x1a7c9(%rip),%rdx        # 318a9 <__func__.2555>
   170e0:	be a1 00 00 00       	mov    $0xa1,%esi
   170e5:	48 8d 3d 72 a7 01 00 	lea    0x1a772(%rip),%rdi        # 3185e <__func__.1660+0x3e>
   170ec:	e8 e8 fb ff ff       	call   16cd9 <__assert>
   170f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   170f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   170f9:	48 89 d6             	mov    %rdx,%rsi
   170fc:	48 89 c7             	mov    %rax,%rdi
   170ff:	b8 00 00 00 00       	mov    $0x0,%eax
   17104:	e8 0c eb ff ff       	call   15c15 <mm_commit>
   17109:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1710c:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   17110:	74 14                	je     17126 <sbrk+0x372>
   17112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17116:	48 89 05 c3 4e 05 00 	mov    %rax,0x54ec3(%rip)        # 6bfe0 <heap_used.2550>
   1711d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17124:	eb 04                	jmp    1712a <sbrk+0x376>
   17126:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1712a:	c9                   	leave  
   1712b:	c3                   	ret    

000000000001712c <sgx_spin_lock>:
   1712c:	f3 0f 1e fa          	endbr64 
   17130:	55                   	push   %rbp
   17131:	48 89 e5             	mov    %rsp,%rbp
   17134:	48 83 ec 30          	sub    $0x30,%rsp
   17138:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1713c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17143:	00 00 
   17145:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17149:	31 c0                	xor    %eax,%eax
   1714b:	eb 3c                	jmp    17189 <sgx_spin_lock+0x5d>
   1714d:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
   17154:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   1715b:	eb 07                	jmp    17164 <sgx_spin_lock+0x38>
   1715d:	f3 90                	pause  
   1715f:	90                   	nop
   17160:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   17164:	8b 45 e8             	mov    -0x18(%rbp),%eax
   17167:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   1716a:	7c f1                	jl     1715d <sgx_spin_lock+0x31>
   1716c:	d1 65 e4             	shll   -0x1c(%rbp)
   1716f:	81 7d e4 00 04 00 00 	cmpl   $0x400,-0x1c(%rbp)
   17176:	7e 07                	jle    1717f <sgx_spin_lock+0x53>
   17178:	c7 45 e4 00 04 00 00 	movl   $0x400,-0x1c(%rbp)
   1717f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17183:	8b 00                	mov    (%rax),%eax
   17185:	85 c0                	test   %eax,%eax
   17187:	75 cb                	jne    17154 <sgx_spin_lock+0x28>
   17189:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1718d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17191:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   17198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1719c:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1719f:	f0 87 10             	lock xchg %edx,(%rax)
   171a2:	89 55 e0             	mov    %edx,-0x20(%rbp)
   171a5:	8b 45 e0             	mov    -0x20(%rbp),%eax
   171a8:	85 c0                	test   %eax,%eax
   171aa:	75 a1                	jne    1714d <sgx_spin_lock+0x21>
   171ac:	b8 00 00 00 00       	mov    $0x0,%eax
   171b1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   171b5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   171bc:	00 00 
   171be:	74 05                	je     171c5 <sgx_spin_lock+0x99>
   171c0:	e8 c2 a0 00 00       	call   21287 <__stack_chk_fail>
   171c5:	c9                   	leave  
   171c6:	c3                   	ret    

00000000000171c7 <sgx_spin_unlock>:
   171c7:	f3 0f 1e fa          	endbr64 
   171cb:	55                   	push   %rbp
   171cc:	48 89 e5             	mov    %rsp,%rbp
   171cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171d7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   171dd:	b8 00 00 00 00       	mov    $0x0,%eax
   171e2:	5d                   	pop    %rbp
   171e3:	c3                   	ret    

00000000000171e4 <vsnprintf>:
   171e4:	f3 0f 1e fa          	endbr64 
   171e8:	55                   	push   %rbp
   171e9:	48 89 e5             	mov    %rsp,%rbp
   171ec:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   171f3:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   171fa:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   17201:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   17208:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1720f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17216:	00 00 
   17218:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1721c:	31 c0                	xor    %eax,%eax
   1721e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17222:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   17226:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1722a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17231:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17235:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1723c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17240:	48 85 c0             	test   %rax,%rax
   17243:	74 0a                	je     1724f <vsnprintf+0x6b>
   17245:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17249:	48 83 c0 10          	add    $0x10,%rax
   1724d:	eb 05                	jmp    17254 <vsnprintf+0x70>
   1724f:	b8 00 00 00 00       	mov    $0x0,%eax
   17254:	ba 28 00 00 00       	mov    $0x28,%edx
   17259:	be 00 00 00 00       	mov    $0x0,%esi
   1725e:	48 89 c7             	mov    %rax,%rdi
   17261:	e8 ad 9e 00 00       	call   21113 <memset>
   17266:	b8 00 00 00 80       	mov    $0x80000000,%eax
   1726b:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   17272:	72 0b                	jb     1727f <vsnprintf+0x9b>
   17274:	48 c7 85 60 ff ff ff 	movq   $0x7fffffff,-0xa0(%rbp)
   1727b:	ff ff ff 7f 
   1727f:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   17286:	00 
   17287:	75 19                	jne    172a2 <vsnprintf+0xbe>
   17289:	48 8d 85 7b ff ff ff 	lea    -0x85(%rbp),%rax
   17290:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   17297:	48 c7 85 60 ff ff ff 	movq   $0x1,-0xa0(%rbp)
   1729e:	01 00 00 00 
   172a2:	66 c7 45 92 ff ff    	movw   $0xffff,-0x6e(%rbp)
   172a8:	66 c7 45 90 08 02    	movw   $0x208,-0x70(%rbp)
   172ae:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   172b5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   172b9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   172bd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   172c1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   172c8:	83 e8 01             	sub    $0x1,%eax
   172cb:	89 45 8c             	mov    %eax,-0x74(%rbp)
   172ce:	8b 45 8c             	mov    -0x74(%rbp),%eax
   172d1:	89 45 a0             	mov    %eax,-0x60(%rbp)
   172d4:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   172db:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
   172e2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   172e6:	48 89 ce             	mov    %rcx,%rsi
   172e9:	48 89 c7             	mov    %rax,%rdi
   172ec:	e8 b0 a8 00 00       	call   21ba1 <__vfprintf>
   172f1:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   172f7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   172fb:	c6 00 00             	movb   $0x0,(%rax)
   172fe:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   17304:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   17308:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1730f:	00 00 
   17311:	74 05                	je     17318 <vsnprintf+0x134>
   17313:	e8 6f 9f 00 00       	call   21287 <__stack_chk_fail>
   17318:	c9                   	leave  
   17319:	c3                   	ret    

000000000001731a <spin_acquire_lock>:
   1731a:	f3 0f 1e fa          	endbr64 
   1731e:	55                   	push   %rbp
   1731f:	48 89 e5             	mov    %rsp,%rbp
   17322:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17326:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1732d:	eb 04                	jmp    17333 <spin_acquire_lock+0x19>
   1732f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   17333:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17337:	8b 00                	mov    (%rax),%eax
   17339:	85 c0                	test   %eax,%eax
   1733b:	75 f2                	jne    1732f <spin_acquire_lock+0x15>
   1733d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17341:	b8 01 00 00 00       	mov    $0x1,%eax
   17346:	87 02                	xchg   %eax,(%rdx)
   17348:	85 c0                	test   %eax,%eax
   1734a:	75 e3                	jne    1732f <spin_acquire_lock+0x15>
   1734c:	b8 00 00 00 00       	mov    $0x0,%eax
   17351:	5d                   	pop    %rbp
   17352:	c3                   	ret    

0000000000017353 <segment_holding>:
   17353:	f3 0f 1e fa          	endbr64 
   17357:	55                   	push   %rbp
   17358:	48 89 e5             	mov    %rsp,%rbp
   1735b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1735f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17363:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17367:	48 05 78 03 00 00    	add    $0x378,%rax
   1736d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17375:	48 8b 00             	mov    (%rax),%rax
   17378:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1737c:	72 1e                	jb     1739c <segment_holding+0x49>
   1737e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17382:	48 8b 10             	mov    (%rax),%rdx
   17385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17389:	48 8b 40 08          	mov    0x8(%rax),%rax
   1738d:	48 01 d0             	add    %rdx,%rax
   17390:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   17394:	73 06                	jae    1739c <segment_holding+0x49>
   17396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1739a:	eb 18                	jmp    173b4 <segment_holding+0x61>
   1739c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173a0:	48 8b 40 10          	mov    0x10(%rax),%rax
   173a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   173a8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   173ad:	75 c2                	jne    17371 <segment_holding+0x1e>
   173af:	b8 00 00 00 00       	mov    $0x0,%eax
   173b4:	5d                   	pop    %rbp
   173b5:	c3                   	ret    

00000000000173b6 <has_segment_link>:
   173b6:	f3 0f 1e fa          	endbr64 
   173ba:	55                   	push   %rbp
   173bb:	48 89 e5             	mov    %rsp,%rbp
   173be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   173c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   173c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173ca:	48 05 78 03 00 00    	add    $0x378,%rax
   173d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   173d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   173d8:	48 8b 00             	mov    (%rax),%rax
   173db:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   173df:	72 1f                	jb     17400 <has_segment_link+0x4a>
   173e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   173e5:	48 8b 10             	mov    (%rax),%rdx
   173e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   173ec:	48 8b 40 08          	mov    0x8(%rax),%rax
   173f0:	48 01 d0             	add    %rdx,%rax
   173f3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   173f7:	73 07                	jae    17400 <has_segment_link+0x4a>
   173f9:	b8 01 00 00 00       	mov    $0x1,%eax
   173fe:	eb 18                	jmp    17418 <has_segment_link+0x62>
   17400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17404:	48 8b 40 10          	mov    0x10(%rax),%rax
   17408:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1740c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   17411:	75 c1                	jne    173d4 <has_segment_link+0x1e>
   17413:	b8 00 00 00 00       	mov    $0x0,%eax
   17418:	5d                   	pop    %rbp
   17419:	c3                   	ret    

000000000001741a <init_mparams>:
   1741a:	f3 0f 1e fa          	endbr64 
   1741e:	55                   	push   %rbp
   1741f:	48 89 e5             	mov    %rsp,%rbp
   17422:	48 83 ec 20          	sub    $0x20,%rsp
   17426:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1742d:	00 00 
   1742f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17433:	31 c0                	xor    %eax,%eax
   17435:	b8 01 00 00 00       	mov    $0x1,%eax
   1743a:	87 05 a8 4b 05 00    	xchg   %eax,0x54ba8(%rip)        # 6bfe8 <malloc_global_mutex>
   17440:	85 c0                	test   %eax,%eax
   17442:	74 0c                	je     17450 <init_mparams+0x36>
   17444:	48 8d 3d 9d 4b 05 00 	lea    0x54b9d(%rip),%rdi        # 6bfe8 <malloc_global_mutex>
   1744b:	e8 ca fe ff ff       	call   1731a <spin_acquire_lock>
   17450:	48 8b 05 a9 4b 05 00 	mov    0x54ba9(%rip),%rax        # 6c000 <mparams>
   17457:	48 85 c0             	test   %rax,%rax
   1745a:	0f 85 d1 00 00 00    	jne    17531 <init_mparams+0x117>
   17460:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)
   17467:	00 
   17468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1746c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17474:	48 83 e8 01          	sub    $0x1,%rax
   17478:	48 23 45 f0          	and    -0x10(%rbp),%rax
   1747c:	48 85 c0             	test   %rax,%rax
   1747f:	75 11                	jne    17492 <init_mparams+0x78>
   17481:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17485:	48 83 e8 01          	sub    $0x1,%rax
   17489:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1748d:	48 85 c0             	test   %rax,%rax
   17490:	74 05                	je     17497 <init_mparams+0x7d>
   17492:	e8 94 80 01 00       	call   2f52b <abort>
   17497:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1749b:	48 89 05 6e 4b 05 00 	mov    %rax,0x54b6e(%rip)        # 6c010 <mparams+0x10>
   174a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174a6:	48 89 05 5b 4b 05 00 	mov    %rax,0x54b5b(%rip)        # 6c008 <mparams+0x8>
   174ad:	48 c7 05 60 4b 05 00 	movq   $0xffffffffffffffff,0x54b60(%rip)        # 6c018 <mparams+0x18>
   174b4:	ff ff ff ff 
   174b8:	48 c7 05 5d 4b 05 00 	movq   $0x200000,0x54b5d(%rip)        # 6c020 <mparams+0x20>
   174bf:	00 00 20 00 
   174c3:	c7 05 5b 4b 05 00 02 	movl   $0x2,0x54b5b(%rip)        # 6c028 <mparams+0x28>
   174ca:	00 00 00 
   174cd:	8b 05 55 4b 05 00    	mov    0x54b55(%rip),%eax        # 6c028 <mparams+0x28>
   174d3:	89 05 d7 4e 05 00    	mov    %eax,0x54ed7(%rip)        # 6c3b0 <_gm_+0x370>
   174d9:	c7 05 d1 4e 05 00 00 	movl   $0x0,0x54ed1(%rip)        # 6c3b4 <_gm_+0x374>
   174e0:	00 00 00 
   174e3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   174e7:	be 08 00 00 00       	mov    $0x8,%esi
   174ec:	48 89 c7             	mov    %rax,%rdi
   174ef:	e8 93 5f ff ff       	call   d487 <sgx_read_rand>
   174f4:	85 c0                	test   %eax,%eax
   174f6:	74 05                	je     174fd <init_mparams+0xe3>
   174f8:	e8 2e 80 01 00       	call   2f52b <abort>
   174fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17501:	48 35 55 55 55 55    	xor    $0x55555555,%rax
   17507:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1750b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1750f:	48 83 c8 08          	or     $0x8,%rax
   17513:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17517:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1751b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1751f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17523:	48 8d 15 d6 4a 05 00 	lea    0x54ad6(%rip),%rdx        # 6c000 <mparams>
   1752a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1752e:	48 89 02             	mov    %rax,(%rdx)
   17531:	b8 00 00 00 00       	mov    $0x0,%eax
   17536:	89 05 ac 4a 05 00    	mov    %eax,0x54aac(%rip)        # 6bfe8 <malloc_global_mutex>
   1753c:	b8 01 00 00 00       	mov    $0x1,%eax
   17541:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   17545:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1754c:	00 00 
   1754e:	74 05                	je     17555 <init_mparams+0x13b>
   17550:	e8 32 9d 00 00       	call   21287 <__stack_chk_fail>
   17555:	c9                   	leave  
   17556:	c3                   	ret    

0000000000017557 <change_mparam>:
   17557:	f3 0f 1e fa          	endbr64 
   1755b:	55                   	push   %rbp
   1755c:	48 89 e5             	mov    %rsp,%rbp
   1755f:	48 83 ec 20          	sub    $0x20,%rsp
   17563:	89 7d ec             	mov    %edi,-0x14(%rbp)
   17566:	89 75 e8             	mov    %esi,-0x18(%rbp)
   17569:	48 8b 05 90 4a 05 00 	mov    0x54a90(%rip),%rax        # 6c000 <mparams>
   17570:	48 85 c0             	test   %rax,%rax
   17573:	75 07                	jne    1757c <change_mparam+0x25>
   17575:	e8 a0 fe ff ff       	call   1741a <init_mparams>
   1757a:	85 c0                	test   %eax,%eax
   1757c:	90                   	nop
   1757d:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
   17581:	74 07                	je     1758a <change_mparam+0x33>
   17583:	8b 45 e8             	mov    -0x18(%rbp),%eax
   17586:	48 98                	cltq   
   17588:	eb 07                	jmp    17591 <change_mparam+0x3a>
   1758a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17591:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17595:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   17599:	74 14                	je     175af <change_mparam+0x58>
   1759b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1759f:	79 69                	jns    1760a <change_mparam+0xb3>
   175a1:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   175a5:	74 51                	je     175f8 <change_mparam+0xa1>
   175a7:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   175ab:	74 14                	je     175c1 <change_mparam+0x6a>
   175ad:	eb 5b                	jmp    1760a <change_mparam+0xb3>
   175af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175b3:	48 89 05 66 4a 05 00 	mov    %rax,0x54a66(%rip)        # 6c020 <mparams+0x20>
   175ba:	b8 01 00 00 00       	mov    $0x1,%eax
   175bf:	eb 4e                	jmp    1760f <change_mparam+0xb8>
   175c1:	48 8b 05 40 4a 05 00 	mov    0x54a40(%rip),%rax        # 6c008 <mparams+0x8>
   175c8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   175cc:	72 23                	jb     175f1 <change_mparam+0x9a>
   175ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175d2:	48 83 e8 01          	sub    $0x1,%rax
   175d6:	48 23 45 f8          	and    -0x8(%rbp),%rax
   175da:	48 85 c0             	test   %rax,%rax
   175dd:	75 12                	jne    175f1 <change_mparam+0x9a>
   175df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175e3:	48 89 05 26 4a 05 00 	mov    %rax,0x54a26(%rip)        # 6c010 <mparams+0x10>
   175ea:	b8 01 00 00 00       	mov    $0x1,%eax
   175ef:	eb 1e                	jmp    1760f <change_mparam+0xb8>
   175f1:	b8 00 00 00 00       	mov    $0x0,%eax
   175f6:	eb 17                	jmp    1760f <change_mparam+0xb8>
   175f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175fc:	48 89 05 15 4a 05 00 	mov    %rax,0x54a15(%rip)        # 6c018 <mparams+0x18>
   17603:	b8 01 00 00 00       	mov    $0x1,%eax
   17608:	eb 05                	jmp    1760f <change_mparam+0xb8>
   1760a:	b8 00 00 00 00       	mov    $0x0,%eax
   1760f:	c9                   	leave  
   17610:	c3                   	ret    

0000000000017611 <do_check_any_chunk>:
   17611:	f3 0f 1e fa          	endbr64 
   17615:	55                   	push   %rbp
   17616:	48 89 e5             	mov    %rsp,%rbp
   17619:	48 83 ec 10          	sub    $0x10,%rsp
   1761d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17621:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17625:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17629:	48 83 c0 10          	add    $0x10,%rax
   1762d:	83 e0 0f             	and    $0xf,%eax
   17630:	48 85 c0             	test   %rax,%rax
   17633:	74 13                	je     17648 <do_check_any_chunk+0x37>
   17635:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17639:	48 8b 40 08          	mov    0x8(%rax),%rax
   1763d:	48 83 f8 0b          	cmp    $0xb,%rax
   17641:	74 05                	je     17648 <do_check_any_chunk+0x37>
   17643:	e8 e3 7e 01 00       	call   2f52b <abort>
   17648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1764c:	48 8b 40 18          	mov    0x18(%rax),%rax
   17650:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17654:	73 05                	jae    1765b <do_check_any_chunk+0x4a>
   17656:	e8 d0 7e 01 00       	call   2f52b <abort>
   1765b:	90                   	nop
   1765c:	c9                   	leave  
   1765d:	c3                   	ret    

000000000001765e <do_check_top_chunk>:
   1765e:	f3 0f 1e fa          	endbr64 
   17662:	55                   	push   %rbp
   17663:	48 89 e5             	mov    %rsp,%rbp
   17666:	48 83 ec 20          	sub    $0x20,%rsp
   1766a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1766e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17672:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1767a:	48 89 d6             	mov    %rdx,%rsi
   1767d:	48 89 c7             	mov    %rax,%rdi
   17680:	e8 ce fc ff ff       	call   17353 <segment_holding>
   17685:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17689:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1768d:	48 8b 40 08          	mov    0x8(%rax),%rax
   17691:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   17695:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17699:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1769e:	75 05                	jne    176a5 <do_check_top_chunk+0x47>
   176a0:	e8 86 7e 01 00       	call   2f52b <abort>
   176a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   176a9:	48 83 c0 10          	add    $0x10,%rax
   176ad:	83 e0 0f             	and    $0xf,%eax
   176b0:	48 85 c0             	test   %rax,%rax
   176b3:	74 13                	je     176c8 <do_check_top_chunk+0x6a>
   176b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   176b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   176bd:	48 83 f8 0b          	cmp    $0xb,%rax
   176c1:	74 05                	je     176c8 <do_check_top_chunk+0x6a>
   176c3:	e8 63 7e 01 00       	call   2f52b <abort>
   176c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   176cc:	48 8b 40 18          	mov    0x18(%rax),%rax
   176d0:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   176d4:	73 05                	jae    176db <do_check_top_chunk+0x7d>
   176d6:	e8 50 7e 01 00       	call   2f52b <abort>
   176db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   176df:	48 8b 40 10          	mov    0x10(%rax),%rax
   176e3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   176e7:	74 05                	je     176ee <do_check_top_chunk+0x90>
   176e9:	e8 3d 7e 01 00       	call   2f52b <abort>
   176ee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   176f3:	75 05                	jne    176fa <do_check_top_chunk+0x9c>
   176f5:	e8 31 7e 01 00       	call   2f52b <abort>
   176fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   176fe:	48 8b 10             	mov    (%rax),%rdx
   17701:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17705:	48 8b 40 08          	mov    0x8(%rax),%rax
   17709:	48 01 d0             	add    %rdx,%rax
   1770c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   17710:	48 83 e8 50          	sub    $0x50,%rax
   17714:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17718:	74 05                	je     1771f <do_check_top_chunk+0xc1>
   1771a:	e8 0c 7e 01 00       	call   2f52b <abort>
   1771f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17723:	48 8b 40 08          	mov    0x8(%rax),%rax
   17727:	83 e0 01             	and    $0x1,%eax
   1772a:	48 85 c0             	test   %rax,%rax
   1772d:	75 05                	jne    17734 <do_check_top_chunk+0xd6>
   1772f:	e8 f7 7d 01 00       	call   2f52b <abort>
   17734:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1773c:	48 01 d0             	add    %rdx,%rax
   1773f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17743:	83 e0 01             	and    $0x1,%eax
   17746:	48 85 c0             	test   %rax,%rax
   17749:	74 05                	je     17750 <do_check_top_chunk+0xf2>
   1774b:	e8 db 7d 01 00       	call   2f52b <abort>
   17750:	90                   	nop
   17751:	c9                   	leave  
   17752:	c3                   	ret    

0000000000017753 <do_check_mmapped_chunk>:
   17753:	f3 0f 1e fa          	endbr64 
   17757:	55                   	push   %rbp
   17758:	48 89 e5             	mov    %rsp,%rbp
   1775b:	48 83 ec 20          	sub    $0x20,%rsp
   1775f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17763:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17767:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1776b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1776f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17773:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17777:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1777b:	48 8b 10             	mov    (%rax),%rdx
   1777e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17782:	48 01 d0             	add    %rdx,%rax
   17785:	48 83 c0 20          	add    $0x20,%rax
   17789:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1778d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17791:	48 8b 40 08          	mov    0x8(%rax),%rax
   17795:	83 e0 03             	and    $0x3,%eax
   17798:	48 85 c0             	test   %rax,%rax
   1779b:	74 05                	je     177a2 <do_check_mmapped_chunk+0x4f>
   1779d:	e8 89 7d 01 00       	call   2f52b <abort>
   177a2:	e8 84 7d 01 00       	call   2f52b <abort>

00000000000177a7 <do_check_inuse_chunk>:
   177a7:	f3 0f 1e fa          	endbr64 
   177ab:	55                   	push   %rbp
   177ac:	48 89 e5             	mov    %rsp,%rbp
   177af:	48 83 ec 10          	sub    $0x10,%rsp
   177b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   177bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177c3:	48 89 d6             	mov    %rdx,%rsi
   177c6:	48 89 c7             	mov    %rax,%rdi
   177c9:	e8 43 fe ff ff       	call   17611 <do_check_any_chunk>
   177ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177d2:	48 8b 40 08          	mov    0x8(%rax),%rax
   177d6:	83 e0 03             	and    $0x3,%eax
   177d9:	48 83 f8 01          	cmp    $0x1,%rax
   177dd:	75 05                	jne    177e4 <do_check_inuse_chunk+0x3d>
   177df:	e8 47 7d 01 00       	call   2f52b <abort>
   177e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177e8:	48 8b 40 08          	mov    0x8(%rax),%rax
   177ec:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   177f0:	48 89 c2             	mov    %rax,%rdx
   177f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177f7:	48 01 d0             	add    %rdx,%rax
   177fa:	48 8b 40 08          	mov    0x8(%rax),%rax
   177fe:	83 e0 01             	and    $0x1,%eax
   17801:	48 85 c0             	test   %rax,%rax
   17804:	75 05                	jne    1780b <do_check_inuse_chunk+0x64>
   17806:	e8 20 7d 01 00       	call   2f52b <abort>
   1780b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1780f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17813:	83 e0 03             	and    $0x3,%eax
   17816:	48 85 c0             	test   %rax,%rax
   17819:	74 40                	je     1785b <do_check_inuse_chunk+0xb4>
   1781b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1781f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17823:	83 e0 01             	and    $0x1,%eax
   17826:	48 85 c0             	test   %rax,%rax
   17829:	75 30                	jne    1785b <do_check_inuse_chunk+0xb4>
   1782b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1782f:	48 8b 00             	mov    (%rax),%rax
   17832:	48 f7 d8             	neg    %rax
   17835:	48 89 c2             	mov    %rax,%rdx
   17838:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1783c:	48 01 d0             	add    %rdx,%rax
   1783f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17843:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17847:	48 89 c2             	mov    %rax,%rdx
   1784a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1784e:	48 8b 00             	mov    (%rax),%rax
   17851:	48 39 c2             	cmp    %rax,%rdx
   17854:	74 05                	je     1785b <do_check_inuse_chunk+0xb4>
   17856:	e8 d0 7c 01 00       	call   2f52b <abort>
   1785b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1785f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17863:	83 e0 03             	and    $0x3,%eax
   17866:	48 85 c0             	test   %rax,%rax
   17869:	75 13                	jne    1787e <do_check_inuse_chunk+0xd7>
   1786b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1786f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17873:	48 89 d6             	mov    %rdx,%rsi
   17876:	48 89 c7             	mov    %rax,%rdi
   17879:	e8 d5 fe ff ff       	call   17753 <do_check_mmapped_chunk>
   1787e:	90                   	nop
   1787f:	c9                   	leave  
   17880:	c3                   	ret    

0000000000017881 <do_check_free_chunk>:
   17881:	f3 0f 1e fa          	endbr64 
   17885:	55                   	push   %rbp
   17886:	48 89 e5             	mov    %rsp,%rbp
   17889:	48 83 ec 20          	sub    $0x20,%rsp
   1788d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17891:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17895:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17899:	48 8b 40 08          	mov    0x8(%rax),%rax
   1789d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   178a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   178a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   178a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   178ad:	48 01 d0             	add    %rdx,%rax
   178b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   178b4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   178b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178bc:	48 89 d6             	mov    %rdx,%rsi
   178bf:	48 89 c7             	mov    %rax,%rdi
   178c2:	e8 4a fd ff ff       	call   17611 <do_check_any_chunk>
   178c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   178cb:	48 8b 40 08          	mov    0x8(%rax),%rax
   178cf:	83 e0 03             	and    $0x3,%eax
   178d2:	48 83 f8 01          	cmp    $0x1,%rax
   178d6:	74 05                	je     178dd <do_check_free_chunk+0x5c>
   178d8:	e8 4e 7c 01 00       	call   2f52b <abort>
   178dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   178e1:	48 8b 40 08          	mov    0x8(%rax),%rax
   178e5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   178e9:	48 89 c2             	mov    %rax,%rdx
   178ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   178f0:	48 01 d0             	add    %rdx,%rax
   178f3:	48 8b 40 08          	mov    0x8(%rax),%rax
   178f7:	83 e0 01             	and    $0x1,%eax
   178fa:	48 85 c0             	test   %rax,%rax
   178fd:	74 05                	je     17904 <do_check_free_chunk+0x83>
   178ff:	e8 27 7c 01 00       	call   2f52b <abort>
   17904:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17908:	48 8b 40 08          	mov    0x8(%rax),%rax
   1790c:	83 e0 03             	and    $0x3,%eax
   1790f:	48 85 c0             	test   %rax,%rax
   17912:	75 05                	jne    17919 <do_check_free_chunk+0x98>
   17914:	e8 12 7c 01 00       	call   2f52b <abort>
   17919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1791d:	48 8b 40 20          	mov    0x20(%rax),%rax
   17921:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   17925:	0f 84 c8 00 00 00    	je     179f3 <do_check_free_chunk+0x172>
   1792b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1792f:	48 8b 40 28          	mov    0x28(%rax),%rax
   17933:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   17937:	0f 84 b6 00 00 00    	je     179f3 <do_check_free_chunk+0x172>
   1793d:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
   17942:	0f 86 9f 00 00 00    	jbe    179e7 <do_check_free_chunk+0x166>
   17948:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1794c:	83 e0 0f             	and    $0xf,%eax
   1794f:	48 85 c0             	test   %rax,%rax
   17952:	74 05                	je     17959 <do_check_free_chunk+0xd8>
   17954:	e8 d2 7b 01 00       	call   2f52b <abort>
   17959:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1795d:	48 83 c0 10          	add    $0x10,%rax
   17961:	83 e0 0f             	and    $0xf,%eax
   17964:	48 85 c0             	test   %rax,%rax
   17967:	74 05                	je     1796e <do_check_free_chunk+0xed>
   17969:	e8 bd 7b 01 00       	call   2f52b <abort>
   1796e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17972:	48 8b 00             	mov    (%rax),%rax
   17975:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17979:	74 05                	je     17980 <do_check_free_chunk+0xff>
   1797b:	e8 ab 7b 01 00       	call   2f52b <abort>
   17980:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17984:	48 8b 40 08          	mov    0x8(%rax),%rax
   17988:	83 e0 01             	and    $0x1,%eax
   1798b:	48 85 c0             	test   %rax,%rax
   1798e:	75 05                	jne    17995 <do_check_free_chunk+0x114>
   17990:	e8 96 7b 01 00       	call   2f52b <abort>
   17995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17999:	48 8b 40 28          	mov    0x28(%rax),%rax
   1799d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   179a1:	74 16                	je     179b9 <do_check_free_chunk+0x138>
   179a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a7:	48 8b 40 08          	mov    0x8(%rax),%rax
   179ab:	83 e0 03             	and    $0x3,%eax
   179ae:	48 83 f8 01          	cmp    $0x1,%rax
   179b2:	75 05                	jne    179b9 <do_check_free_chunk+0x138>
   179b4:	e8 72 7b 01 00       	call   2f52b <abort>
   179b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   179bd:	48 8b 40 10          	mov    0x10(%rax),%rax
   179c1:	48 8b 40 18          	mov    0x18(%rax),%rax
   179c5:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   179c9:	74 05                	je     179d0 <do_check_free_chunk+0x14f>
   179cb:	e8 5b 7b 01 00       	call   2f52b <abort>
   179d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   179d4:	48 8b 40 18          	mov    0x18(%rax),%rax
   179d8:	48 8b 40 10          	mov    0x10(%rax),%rax
   179dc:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   179e0:	74 11                	je     179f3 <do_check_free_chunk+0x172>
   179e2:	e8 44 7b 01 00       	call   2f52b <abort>
   179e7:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
   179ec:	74 05                	je     179f3 <do_check_free_chunk+0x172>
   179ee:	e8 38 7b 01 00       	call   2f52b <abort>
   179f3:	90                   	nop
   179f4:	c9                   	leave  
   179f5:	c3                   	ret    

00000000000179f6 <do_check_malloced_chunk>:
   179f6:	f3 0f 1e fa          	endbr64 
   179fa:	55                   	push   %rbp
   179fb:	48 89 e5             	mov    %rsp,%rbp
   179fe:	48 83 ec 30          	sub    $0x30,%rsp
   17a02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17a06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17a0a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17a0e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   17a13:	74 7e                	je     17a93 <do_check_malloced_chunk+0x9d>
   17a15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17a19:	48 83 e8 10          	sub    $0x10,%rax
   17a1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17a21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a25:	48 8b 40 08          	mov    0x8(%rax),%rax
   17a29:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   17a2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17a31:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17a35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a39:	48 89 d6             	mov    %rdx,%rsi
   17a3c:	48 89 c7             	mov    %rax,%rdi
   17a3f:	e8 63 fd ff ff       	call   177a7 <do_check_inuse_chunk>
   17a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a48:	83 e0 0f             	and    $0xf,%eax
   17a4b:	48 85 c0             	test   %rax,%rax
   17a4e:	74 05                	je     17a55 <do_check_malloced_chunk+0x5f>
   17a50:	e8 d6 7a 01 00       	call   2f52b <abort>
   17a55:	48 83 7d f8 1f       	cmpq   $0x1f,-0x8(%rbp)
   17a5a:	77 05                	ja     17a61 <do_check_malloced_chunk+0x6b>
   17a5c:	e8 ca 7a 01 00       	call   2f52b <abort>
   17a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a65:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17a69:	73 05                	jae    17a70 <do_check_malloced_chunk+0x7a>
   17a6b:	e8 bb 7a 01 00       	call   2f52b <abort>
   17a70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a74:	48 8b 40 08          	mov    0x8(%rax),%rax
   17a78:	83 e0 03             	and    $0x3,%eax
   17a7b:	48 85 c0             	test   %rax,%rax
   17a7e:	74 13                	je     17a93 <do_check_malloced_chunk+0x9d>
   17a80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a84:	48 83 c0 20          	add    $0x20,%rax
   17a88:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17a8c:	72 05                	jb     17a93 <do_check_malloced_chunk+0x9d>
   17a8e:	e8 98 7a 01 00       	call   2f52b <abort>
   17a93:	90                   	nop
   17a94:	c9                   	leave  
   17a95:	c3                   	ret    

0000000000017a96 <do_check_tree>:
   17a96:	f3 0f 1e fa          	endbr64 
   17a9a:	55                   	push   %rbp
   17a9b:	48 89 e5             	mov    %rsp,%rbp
   17a9e:	48 83 ec 40          	sub    $0x40,%rsp
   17aa2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17aa6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   17aaa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   17ab1:	00 
   17ab2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17ab6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17aba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17abe:	8b 40 38             	mov    0x38(%rax),%eax
   17ac1:	89 45 dc             	mov    %eax,-0x24(%rbp)
   17ac4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17ac8:	48 8b 40 08          	mov    0x8(%rax),%rax
   17acc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17ad0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ad8:	48 c1 e8 08          	shr    $0x8,%rax
   17adc:	89 45 e0             	mov    %eax,-0x20(%rbp)
   17adf:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   17ae3:	75 09                	jne    17aee <do_check_tree+0x58>
   17ae5:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   17aec:	eb 45                	jmp    17b33 <do_check_tree+0x9d>
   17aee:	81 7d e0 ff ff 00 00 	cmpl   $0xffff,-0x20(%rbp)
   17af5:	76 09                	jbe    17b00 <do_check_tree+0x6a>
   17af7:	c7 45 d8 1f 00 00 00 	movl   $0x1f,-0x28(%rbp)
   17afe:	eb 33                	jmp    17b33 <do_check_tree+0x9d>
   17b00:	0f bd 45 e0          	bsr    -0x20(%rbp),%eax
   17b04:	83 f0 1f             	xor    $0x1f,%eax
   17b07:	ba 1f 00 00 00       	mov    $0x1f,%edx
   17b0c:	29 c2                	sub    %eax,%edx
   17b0e:	89 d0                	mov    %edx,%eax
   17b10:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   17b13:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   17b16:	8d 34 00             	lea    (%rax,%rax,1),%esi
   17b19:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   17b1c:	83 c0 07             	add    $0x7,%eax
   17b1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17b23:	89 c1                	mov    %eax,%ecx
   17b25:	48 d3 ea             	shr    %cl,%rdx
   17b28:	48 89 d0             	mov    %rdx,%rax
   17b2b:	83 e0 01             	and    $0x1,%eax
   17b2e:	01 f0                	add    %esi,%eax
   17b30:	89 45 d8             	mov    %eax,-0x28(%rbp)
   17b33:	8b 45 dc             	mov    -0x24(%rbp),%eax
   17b36:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   17b39:	74 05                	je     17b40 <do_check_tree+0xaa>
   17b3b:	e8 eb 79 01 00       	call   2f52b <abort>
   17b40:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
   17b47:	00 
   17b48:	77 05                	ja     17b4f <do_check_tree+0xb9>
   17b4a:	e8 dc 79 01 00       	call   2f52b <abort>
   17b4f:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17b52:	d1 e8                	shr    %eax
   17b54:	83 c0 08             	add    $0x8,%eax
   17b57:	ba 01 00 00 00       	mov    $0x1,%edx
   17b5c:	89 c1                	mov    %eax,%ecx
   17b5e:	48 d3 e2             	shl    %cl,%rdx
   17b61:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17b64:	83 e0 01             	and    $0x1,%eax
   17b67:	48 89 c6             	mov    %rax,%rsi
   17b6a:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17b6d:	d1 e8                	shr    %eax
   17b6f:	83 c0 07             	add    $0x7,%eax
   17b72:	89 c1                	mov    %eax,%ecx
   17b74:	48 d3 e6             	shl    %cl,%rsi
   17b77:	48 89 f0             	mov    %rsi,%rax
   17b7a:	48 09 d0             	or     %rdx,%rax
   17b7d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17b81:	73 05                	jae    17b88 <do_check_tree+0xf2>
   17b83:	e8 a3 79 01 00       	call   2f52b <abort>
   17b88:	83 7d d8 1f          	cmpl   $0x1f,-0x28(%rbp)
   17b8c:	74 44                	je     17bd2 <do_check_tree+0x13c>
   17b8e:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17b91:	83 c0 01             	add    $0x1,%eax
   17b94:	d1 e8                	shr    %eax
   17b96:	83 c0 08             	add    $0x8,%eax
   17b99:	ba 01 00 00 00       	mov    $0x1,%edx
   17b9e:	89 c1                	mov    %eax,%ecx
   17ba0:	48 d3 e2             	shl    %cl,%rdx
   17ba3:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17ba6:	83 c0 01             	add    $0x1,%eax
   17ba9:	89 c0                	mov    %eax,%eax
   17bab:	83 e0 01             	and    $0x1,%eax
   17bae:	48 89 c6             	mov    %rax,%rsi
   17bb1:	8b 45 d8             	mov    -0x28(%rbp),%eax
   17bb4:	83 c0 01             	add    $0x1,%eax
   17bb7:	d1 e8                	shr    %eax
   17bb9:	83 c0 07             	add    $0x7,%eax
   17bbc:	89 c1                	mov    %eax,%ecx
   17bbe:	48 d3 e6             	shl    %cl,%rsi
   17bc1:	48 89 f0             	mov    %rsi,%rax
   17bc4:	48 09 d0             	or     %rdx,%rax
   17bc7:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17bcb:	72 05                	jb     17bd2 <do_check_tree+0x13c>
   17bcd:	e8 59 79 01 00       	call   2f52b <abort>
   17bd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17bd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17bda:	48 89 d6             	mov    %rdx,%rsi
   17bdd:	48 89 c7             	mov    %rax,%rdi
   17be0:	e8 2c fa ff ff       	call   17611 <do_check_any_chunk>
   17be5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17be9:	8b 40 38             	mov    0x38(%rax),%eax
   17bec:	39 45 dc             	cmp    %eax,-0x24(%rbp)
   17bef:	74 05                	je     17bf6 <do_check_tree+0x160>
   17bf1:	e8 35 79 01 00       	call   2f52b <abort>
   17bf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17bfa:	48 8b 40 08          	mov    0x8(%rax),%rax
   17bfe:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17c02:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   17c06:	74 05                	je     17c0d <do_check_tree+0x177>
   17c08:	e8 1e 79 01 00       	call   2f52b <abort>
   17c0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c11:	48 8b 40 08          	mov    0x8(%rax),%rax
   17c15:	83 e0 03             	and    $0x3,%eax
   17c18:	48 83 f8 01          	cmp    $0x1,%rax
   17c1c:	74 05                	je     17c23 <do_check_tree+0x18d>
   17c1e:	e8 08 79 01 00       	call   2f52b <abort>
   17c23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c27:	48 8b 40 08          	mov    0x8(%rax),%rax
   17c2b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17c2f:	48 89 c2             	mov    %rax,%rdx
   17c32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c36:	48 01 d0             	add    %rdx,%rax
   17c39:	48 8b 40 08          	mov    0x8(%rax),%rax
   17c3d:	83 e0 01             	and    $0x1,%eax
   17c40:	48 85 c0             	test   %rax,%rax
   17c43:	74 05                	je     17c4a <do_check_tree+0x1b4>
   17c45:	e8 e1 78 01 00       	call   2f52b <abort>
   17c4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c4e:	48 8b 40 10          	mov    0x10(%rax),%rax
   17c52:	48 8b 40 18          	mov    0x18(%rax),%rax
   17c56:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17c5a:	74 05                	je     17c61 <do_check_tree+0x1cb>
   17c5c:	e8 ca 78 01 00       	call   2f52b <abort>
   17c61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c65:	48 8b 40 18          	mov    0x18(%rax),%rax
   17c69:	48 8b 40 10          	mov    0x10(%rax),%rax
   17c6d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17c71:	74 05                	je     17c78 <do_check_tree+0x1e2>
   17c73:	e8 b3 78 01 00       	call   2f52b <abort>
   17c78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c7c:	48 8b 40 30          	mov    0x30(%rax),%rax
   17c80:	48 85 c0             	test   %rax,%rax
   17c83:	75 28                	jne    17cad <do_check_tree+0x217>
   17c85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c89:	48 8b 40 20          	mov    0x20(%rax),%rax
   17c8d:	48 85 c0             	test   %rax,%rax
   17c90:	74 05                	je     17c97 <do_check_tree+0x201>
   17c92:	e8 94 78 01 00       	call   2f52b <abort>
   17c97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c9b:	48 8b 40 28          	mov    0x28(%rax),%rax
   17c9f:	48 85 c0             	test   %rax,%rax
   17ca2:	0f 84 49 01 00 00    	je     17df1 <do_check_tree+0x35b>
   17ca8:	e8 7e 78 01 00       	call   2f52b <abort>
   17cad:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   17cb2:	74 05                	je     17cb9 <do_check_tree+0x223>
   17cb4:	e8 72 78 01 00       	call   2f52b <abort>
   17cb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cbd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17cc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cc5:	48 8b 40 30          	mov    0x30(%rax),%rax
   17cc9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17ccd:	75 05                	jne    17cd4 <do_check_tree+0x23e>
   17ccf:	e8 57 78 01 00       	call   2f52b <abort>
   17cd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cd8:	48 8b 40 30          	mov    0x30(%rax),%rax
   17cdc:	48 8b 40 20          	mov    0x20(%rax),%rax
   17ce0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17ce4:	74 28                	je     17d0e <do_check_tree+0x278>
   17ce6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cea:	48 8b 40 30          	mov    0x30(%rax),%rax
   17cee:	48 8b 40 28          	mov    0x28(%rax),%rax
   17cf2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17cf6:	74 16                	je     17d0e <do_check_tree+0x278>
   17cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cfc:	48 8b 40 30          	mov    0x30(%rax),%rax
   17d00:	48 8b 00             	mov    (%rax),%rax
   17d03:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17d07:	74 05                	je     17d0e <do_check_tree+0x278>
   17d09:	e8 1d 78 01 00       	call   2f52b <abort>
   17d0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d12:	48 8b 40 20          	mov    0x20(%rax),%rax
   17d16:	48 85 c0             	test   %rax,%rax
   17d19:	74 41                	je     17d5c <do_check_tree+0x2c6>
   17d1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d1f:	48 8b 40 20          	mov    0x20(%rax),%rax
   17d23:	48 8b 40 30          	mov    0x30(%rax),%rax
   17d27:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17d2b:	74 05                	je     17d32 <do_check_tree+0x29c>
   17d2d:	e8 f9 77 01 00       	call   2f52b <abort>
   17d32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d36:	48 8b 40 20          	mov    0x20(%rax),%rax
   17d3a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17d3e:	75 05                	jne    17d45 <do_check_tree+0x2af>
   17d40:	e8 e6 77 01 00       	call   2f52b <abort>
   17d45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d49:	48 8b 50 20          	mov    0x20(%rax),%rdx
   17d4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17d51:	48 89 d6             	mov    %rdx,%rsi
   17d54:	48 89 c7             	mov    %rax,%rdi
   17d57:	e8 3a fd ff ff       	call   17a96 <do_check_tree>
   17d5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d60:	48 8b 40 28          	mov    0x28(%rax),%rax
   17d64:	48 85 c0             	test   %rax,%rax
   17d67:	74 41                	je     17daa <do_check_tree+0x314>
   17d69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d6d:	48 8b 40 28          	mov    0x28(%rax),%rax
   17d71:	48 8b 40 30          	mov    0x30(%rax),%rax
   17d75:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17d79:	74 05                	je     17d80 <do_check_tree+0x2ea>
   17d7b:	e8 ab 77 01 00       	call   2f52b <abort>
   17d80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d84:	48 8b 40 28          	mov    0x28(%rax),%rax
   17d88:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17d8c:	75 05                	jne    17d93 <do_check_tree+0x2fd>
   17d8e:	e8 98 77 01 00       	call   2f52b <abort>
   17d93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d97:	48 8b 50 28          	mov    0x28(%rax),%rdx
   17d9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17d9f:	48 89 d6             	mov    %rdx,%rsi
   17da2:	48 89 c7             	mov    %rax,%rdi
   17da5:	e8 ec fc ff ff       	call   17a96 <do_check_tree>
   17daa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17dae:	48 8b 40 20          	mov    0x20(%rax),%rax
   17db2:	48 85 c0             	test   %rax,%rax
   17db5:	74 3a                	je     17df1 <do_check_tree+0x35b>
   17db7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17dbb:	48 8b 40 28          	mov    0x28(%rax),%rax
   17dbf:	48 85 c0             	test   %rax,%rax
   17dc2:	74 2d                	je     17df1 <do_check_tree+0x35b>
   17dc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17dc8:	48 8b 40 20          	mov    0x20(%rax),%rax
   17dcc:	48 8b 40 08          	mov    0x8(%rax),%rax
   17dd0:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17dd4:	48 89 c2             	mov    %rax,%rdx
   17dd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ddb:	48 8b 40 28          	mov    0x28(%rax),%rax
   17ddf:	48 8b 40 08          	mov    0x8(%rax),%rax
   17de3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17de7:	48 39 c2             	cmp    %rax,%rdx
   17dea:	72 05                	jb     17df1 <do_check_tree+0x35b>
   17dec:	e8 3a 77 01 00       	call   2f52b <abort>
   17df1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17df5:	48 8b 40 10          	mov    0x10(%rax),%rax
   17df9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17dfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17e01:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   17e05:	0f 85 c7 fd ff ff    	jne    17bd2 <do_check_tree+0x13c>
   17e0b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   17e10:	75 05                	jne    17e17 <do_check_tree+0x381>
   17e12:	e8 14 77 01 00       	call   2f52b <abort>
   17e17:	90                   	nop
   17e18:	c9                   	leave  
   17e19:	c3                   	ret    

0000000000017e1a <do_check_treebin>:
   17e1a:	f3 0f 1e fa          	endbr64 
   17e1e:	55                   	push   %rbp
   17e1f:	48 89 e5             	mov    %rsp,%rbp
   17e22:	48 83 ec 30          	sub    $0x30,%rsp
   17e26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17e2a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   17e2d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   17e30:	48 83 c0 4a          	add    $0x4a,%rax
   17e34:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17e3b:	00 
   17e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e40:	48 01 d0             	add    %rdx,%rax
   17e43:	48 83 c0 08          	add    $0x8,%rax
   17e47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17e4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17e4f:	48 8b 00             	mov    (%rax),%rax
   17e52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17e56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e5a:	8b 50 04             	mov    0x4(%rax),%edx
   17e5d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   17e60:	be 01 00 00 00       	mov    $0x1,%esi
   17e65:	89 c1                	mov    %eax,%ecx
   17e67:	d3 e6                	shl    %cl,%esi
   17e69:	89 f0                	mov    %esi,%eax
   17e6b:	21 d0                	and    %edx,%eax
   17e6d:	85 c0                	test   %eax,%eax
   17e6f:	0f 94 c0             	sete   %al
   17e72:	0f b6 c0             	movzbl %al,%eax
   17e75:	89 45 ec             	mov    %eax,-0x14(%rbp)
   17e78:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   17e7d:	75 0b                	jne    17e8a <do_check_treebin+0x70>
   17e7f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   17e83:	75 05                	jne    17e8a <do_check_treebin+0x70>
   17e85:	e8 a1 76 01 00       	call   2f52b <abort>
   17e8a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   17e8e:	75 13                	jne    17ea3 <do_check_treebin+0x89>
   17e90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17e94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e98:	48 89 d6             	mov    %rdx,%rsi
   17e9b:	48 89 c7             	mov    %rax,%rdi
   17e9e:	e8 f3 fb ff ff       	call   17a96 <do_check_tree>
   17ea3:	90                   	nop
   17ea4:	c9                   	leave  
   17ea5:	c3                   	ret    

0000000000017ea6 <do_check_smallbin>:
   17ea6:	f3 0f 1e fa          	endbr64 
   17eaa:	55                   	push   %rbp
   17eab:	48 89 e5             	mov    %rsp,%rbp
   17eae:	48 83 ec 40          	sub    $0x40,%rsp
   17eb2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17eb6:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   17eb9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   17ebc:	01 c0                	add    %eax,%eax
   17ebe:	89 c0                	mov    %eax,%eax
   17ec0:	48 83 c0 08          	add    $0x8,%rax
   17ec4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17ecb:	00 
   17ecc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17ed0:	48 01 d0             	add    %rdx,%rax
   17ed3:	48 83 c0 08          	add    $0x8,%rax
   17ed7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17edb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17edf:	48 8b 40 18          	mov    0x18(%rax),%rax
   17ee3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17ee7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17eeb:	8b 10                	mov    (%rax),%edx
   17eed:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   17ef0:	be 01 00 00 00       	mov    $0x1,%esi
   17ef5:	89 c1                	mov    %eax,%ecx
   17ef7:	d3 e6                	shl    %cl,%esi
   17ef9:	89 f0                	mov    %esi,%eax
   17efb:	21 d0                	and    %edx,%eax
   17efd:	85 c0                	test   %eax,%eax
   17eff:	0f 94 c0             	sete   %al
   17f02:	0f b6 c0             	movzbl %al,%eax
   17f05:	89 45 dc             	mov    %eax,-0x24(%rbp)
   17f08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f0c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17f10:	75 0b                	jne    17f1d <do_check_smallbin+0x77>
   17f12:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   17f16:	75 05                	jne    17f1d <do_check_smallbin+0x77>
   17f18:	e8 0e 76 01 00       	call   2f52b <abort>
   17f1d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   17f21:	0f 85 c2 00 00 00    	jne    17fe9 <do_check_smallbin+0x143>
   17f27:	e9 af 00 00 00       	jmp    17fdb <do_check_smallbin+0x135>
   17f2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f30:	48 8b 40 08          	mov    0x8(%rax),%rax
   17f34:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17f38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   17f3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17f40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17f44:	48 89 d6             	mov    %rdx,%rsi
   17f47:	48 89 c7             	mov    %rax,%rdi
   17f4a:	e8 32 f9 ff ff       	call   17881 <do_check_free_chunk>
   17f4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f53:	48 c1 e8 03          	shr    $0x3,%rax
   17f57:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
   17f5a:	74 05                	je     17f61 <do_check_smallbin+0xbb>
   17f5c:	e8 ca 75 01 00       	call   2f52b <abort>
   17f61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f65:	48 8b 40 18          	mov    0x18(%rax),%rax
   17f69:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17f6d:	74 25                	je     17f94 <do_check_smallbin+0xee>
   17f6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f73:	48 8b 40 18          	mov    0x18(%rax),%rax
   17f77:	48 8b 50 08          	mov    0x8(%rax),%rdx
   17f7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f7f:	48 8b 40 08          	mov    0x8(%rax),%rax
   17f83:	48 31 d0             	xor    %rdx,%rax
   17f86:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17f8a:	48 85 c0             	test   %rax,%rax
   17f8d:	74 05                	je     17f94 <do_check_smallbin+0xee>
   17f8f:	e8 97 75 01 00       	call   2f52b <abort>
   17f94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f98:	48 8b 40 08          	mov    0x8(%rax),%rax
   17f9c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   17fa0:	48 89 c2             	mov    %rax,%rdx
   17fa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17fa7:	48 01 d0             	add    %rdx,%rax
   17faa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fb2:	48 8b 40 08          	mov    0x8(%rax),%rax
   17fb6:	48 83 f8 0b          	cmp    $0xb,%rax
   17fba:	74 13                	je     17fcf <do_check_smallbin+0x129>
   17fbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17fc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17fc4:	48 89 d6             	mov    %rdx,%rsi
   17fc7:	48 89 c7             	mov    %rax,%rdi
   17fca:	e8 d8 f7 ff ff       	call   177a7 <do_check_inuse_chunk>
   17fcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17fd3:	48 8b 40 18          	mov    0x18(%rax),%rax
   17fd7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17fdb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17fdf:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17fe3:	0f 85 43 ff ff ff    	jne    17f2c <do_check_smallbin+0x86>
   17fe9:	90                   	nop
   17fea:	c9                   	leave  
   17feb:	c3                   	ret    

0000000000017fec <bin_find>:
   17fec:	f3 0f 1e fa          	endbr64 
   17ff0:	55                   	push   %rbp
   17ff1:	48 89 e5             	mov    %rsp,%rbp
   17ff4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   17ff8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   17ffc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18000:	48 8b 40 08          	mov    0x8(%rax),%rax
   18004:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18008:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1800c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18010:	48 c1 e8 03          	shr    $0x3,%rax
   18014:	48 83 f8 1f          	cmp    $0x1f,%rax
   18018:	0f 87 82 00 00 00    	ja     180a0 <bin_find+0xb4>
   1801e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18022:	48 c1 e8 03          	shr    $0x3,%rax
   18026:	89 45 cc             	mov    %eax,-0x34(%rbp)
   18029:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1802c:	01 c0                	add    %eax,%eax
   1802e:	89 c0                	mov    %eax,%eax
   18030:	48 83 c0 08          	add    $0x8,%rax
   18034:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1803b:	00 
   1803c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18040:	48 01 d0             	add    %rdx,%rax
   18043:	48 83 c0 08          	add    $0x8,%rax
   18047:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1804b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1804f:	8b 10                	mov    (%rax),%edx
   18051:	8b 45 cc             	mov    -0x34(%rbp),%eax
   18054:	be 01 00 00 00       	mov    $0x1,%esi
   18059:	89 c1                	mov    %eax,%ecx
   1805b:	d3 e6                	shl    %cl,%esi
   1805d:	89 f0                	mov    %esi,%eax
   1805f:	21 d0                	and    %edx,%eax
   18061:	85 c0                	test   %eax,%eax
   18063:	0f 84 64 01 00 00    	je     181cd <bin_find+0x1e1>
   18069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1806d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18071:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18075:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   18079:	75 0a                	jne    18085 <bin_find+0x99>
   1807b:	b8 01 00 00 00       	mov    $0x1,%eax
   18080:	e9 4d 01 00 00       	jmp    181d2 <bin_find+0x1e6>
   18085:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18089:	48 8b 40 10          	mov    0x10(%rax),%rax
   1808d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18091:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18095:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   18099:	75 d6                	jne    18071 <bin_find+0x85>
   1809b:	e9 2d 01 00 00       	jmp    181cd <bin_find+0x1e1>
   180a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   180a4:	48 c1 e8 08          	shr    $0x8,%rax
   180a8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   180ab:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   180af:	75 09                	jne    180ba <bin_find+0xce>
   180b1:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   180b8:	eb 45                	jmp    180ff <bin_find+0x113>
   180ba:	81 7d c4 ff ff 00 00 	cmpl   $0xffff,-0x3c(%rbp)
   180c1:	76 09                	jbe    180cc <bin_find+0xe0>
   180c3:	c7 45 c0 1f 00 00 00 	movl   $0x1f,-0x40(%rbp)
   180ca:	eb 33                	jmp    180ff <bin_find+0x113>
   180cc:	0f bd 45 c4          	bsr    -0x3c(%rbp),%eax
   180d0:	83 f0 1f             	xor    $0x1f,%eax
   180d3:	ba 1f 00 00 00       	mov    $0x1f,%edx
   180d8:	29 c2                	sub    %eax,%edx
   180da:	89 d0                	mov    %edx,%eax
   180dc:	89 45 c8             	mov    %eax,-0x38(%rbp)
   180df:	8b 45 c8             	mov    -0x38(%rbp),%eax
   180e2:	8d 34 00             	lea    (%rax,%rax,1),%esi
   180e5:	8b 45 c8             	mov    -0x38(%rbp),%eax
   180e8:	83 c0 07             	add    $0x7,%eax
   180eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   180ef:	89 c1                	mov    %eax,%ecx
   180f1:	48 d3 ea             	shr    %cl,%rdx
   180f4:	48 89 d0             	mov    %rdx,%rax
   180f7:	83 e0 01             	and    $0x1,%eax
   180fa:	01 f0                	add    %esi,%eax
   180fc:	89 45 c0             	mov    %eax,-0x40(%rbp)
   180ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18103:	8b 50 04             	mov    0x4(%rax),%edx
   18106:	8b 45 c0             	mov    -0x40(%rbp),%eax
   18109:	be 01 00 00 00       	mov    $0x1,%esi
   1810e:	89 c1                	mov    %eax,%ecx
   18110:	d3 e6                	shl    %cl,%esi
   18112:	89 f0                	mov    %esi,%eax
   18114:	21 d0                	and    %edx,%eax
   18116:	85 c0                	test   %eax,%eax
   18118:	0f 84 af 00 00 00    	je     181cd <bin_find+0x1e1>
   1811e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18122:	8b 55 c0             	mov    -0x40(%rbp),%edx
   18125:	48 83 c2 4a          	add    $0x4a,%rdx
   18129:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1812e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   18132:	83 7d c0 1f          	cmpl   $0x1f,-0x40(%rbp)
   18136:	74 10                	je     18148 <bin_find+0x15c>
   18138:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1813b:	d1 e8                	shr    %eax
   1813d:	ba 39 00 00 00       	mov    $0x39,%edx
   18142:	29 c2                	sub    %eax,%edx
   18144:	89 d0                	mov    %edx,%eax
   18146:	eb 05                	jmp    1814d <bin_find+0x161>
   18148:	b8 00 00 00 00       	mov    $0x0,%eax
   1814d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18151:	89 c1                	mov    %eax,%ecx
   18153:	48 d3 e2             	shl    %cl,%rdx
   18156:	48 89 d0             	mov    %rdx,%rax
   18159:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1815d:	eb 1f                	jmp    1817e <bin_find+0x192>
   1815f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18163:	48 c1 e8 3f          	shr    $0x3f,%rax
   18167:	48 89 c2             	mov    %rax,%rdx
   1816a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1816e:	48 83 c2 04          	add    $0x4,%rdx
   18172:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   18176:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1817a:	48 d1 65 e0          	shlq   -0x20(%rbp)
   1817e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   18183:	74 12                	je     18197 <bin_find+0x1ab>
   18185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18189:	48 8b 40 08          	mov    0x8(%rax),%rax
   1818d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18191:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18195:	75 c8                	jne    1815f <bin_find+0x173>
   18197:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1819c:	74 2f                	je     181cd <bin_find+0x1e1>
   1819e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   181a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181aa:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   181ae:	75 07                	jne    181b7 <bin_find+0x1cb>
   181b0:	b8 01 00 00 00       	mov    $0x1,%eax
   181b5:	eb 1b                	jmp    181d2 <bin_find+0x1e6>
   181b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181bb:	48 8b 40 10          	mov    0x10(%rax),%rax
   181bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   181c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181c7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   181cb:	75 d9                	jne    181a6 <bin_find+0x1ba>
   181cd:	b8 00 00 00 00       	mov    $0x0,%eax
   181d2:	5d                   	pop    %rbp
   181d3:	c3                   	ret    

00000000000181d4 <traverse_and_check>:
   181d4:	f3 0f 1e fa          	endbr64 
   181d8:	55                   	push   %rbp
   181d9:	48 89 e5             	mov    %rsp,%rbp
   181dc:	48 83 ec 30          	sub    $0x30,%rsp
   181e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   181e4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   181eb:	00 
   181ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181f0:	48 8b 40 28          	mov    0x28(%rax),%rax
   181f4:	48 85 c0             	test   %rax,%rax
   181f7:	0f 84 a4 01 00 00    	je     183a1 <traverse_and_check+0x1cd>
   181fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18201:	48 05 78 03 00 00    	add    $0x378,%rax
   18207:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1820b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1820f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18213:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18217:	48 01 d0             	add    %rdx,%rax
   1821a:	48 83 c0 50          	add    $0x50,%rax
   1821e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18222:	e9 6f 01 00 00       	jmp    18396 <traverse_and_check+0x1c2>
   18227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1822b:	48 8b 10             	mov    (%rax),%rdx
   1822e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18232:	48 8b 00             	mov    (%rax),%rax
   18235:	48 83 c0 10          	add    $0x10,%rax
   18239:	83 e0 0f             	and    $0xf,%eax
   1823c:	48 85 c0             	test   %rax,%rax
   1823f:	74 13                	je     18254 <traverse_and_check+0x80>
   18241:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18245:	48 8b 00             	mov    (%rax),%rax
   18248:	48 83 c0 10          	add    $0x10,%rax
   1824c:	48 f7 d8             	neg    %rax
   1824f:	83 e0 0f             	and    $0xf,%eax
   18252:	eb 05                	jmp    18259 <traverse_and_check+0x85>
   18254:	b8 00 00 00 00       	mov    $0x0,%eax
   18259:	48 01 d0             	add    %rdx,%rax
   1825c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18260:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   18267:	00 
   18268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1826c:	48 8b 40 08          	mov    0x8(%rax),%rax
   18270:	83 e0 01             	and    $0x1,%eax
   18273:	48 85 c0             	test   %rax,%rax
   18276:	0f 85 c9 00 00 00    	jne    18345 <traverse_and_check+0x171>
   1827c:	e8 aa 72 01 00       	call   2f52b <abort>
   18281:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18285:	48 8b 40 08          	mov    0x8(%rax),%rax
   18289:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1828d:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   18291:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18295:	48 8b 40 08          	mov    0x8(%rax),%rax
   18299:	83 e0 03             	and    $0x3,%eax
   1829c:	48 83 f8 01          	cmp    $0x1,%rax
   182a0:	74 31                	je     182d3 <traverse_and_check+0xff>
   182a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182aa:	48 89 d6             	mov    %rdx,%rsi
   182ad:	48 89 c7             	mov    %rax,%rdi
   182b0:	e8 37 fd ff ff       	call   17fec <bin_find>
   182b5:	85 c0                	test   %eax,%eax
   182b7:	74 05                	je     182be <traverse_and_check+0xea>
   182b9:	e8 6d 72 01 00       	call   2f52b <abort>
   182be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182c6:	48 89 d6             	mov    %rdx,%rsi
   182c9:	48 89 c7             	mov    %rax,%rdi
   182cc:	e8 d6 f4 ff ff       	call   177a7 <do_check_inuse_chunk>
   182d1:	eb 5a                	jmp    1832d <traverse_and_check+0x159>
   182d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182d7:	48 8b 40 20          	mov    0x20(%rax),%rax
   182db:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   182df:	74 1c                	je     182fd <traverse_and_check+0x129>
   182e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182e9:	48 89 d6             	mov    %rdx,%rsi
   182ec:	48 89 c7             	mov    %rax,%rdi
   182ef:	e8 f8 fc ff ff       	call   17fec <bin_find>
   182f4:	85 c0                	test   %eax,%eax
   182f6:	75 05                	jne    182fd <traverse_and_check+0x129>
   182f8:	e8 2e 72 01 00       	call   2f52b <abort>
   182fd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18302:	74 16                	je     1831a <traverse_and_check+0x146>
   18304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18308:	48 8b 40 08          	mov    0x8(%rax),%rax
   1830c:	83 e0 03             	and    $0x3,%eax
   1830f:	48 83 f8 01          	cmp    $0x1,%rax
   18313:	75 05                	jne    1831a <traverse_and_check+0x146>
   18315:	e8 11 72 01 00       	call   2f52b <abort>
   1831a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1831e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18322:	48 89 d6             	mov    %rdx,%rsi
   18325:	48 89 c7             	mov    %rax,%rdi
   18328:	e8 54 f5 ff ff       	call   17881 <do_check_free_chunk>
   1832d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18331:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18335:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18339:	48 8b 40 08          	mov    0x8(%rax),%rax
   1833d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18341:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   18345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18349:	48 8b 00             	mov    (%rax),%rax
   1834c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18350:	72 38                	jb     1838a <traverse_and_check+0x1b6>
   18352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18356:	48 8b 10             	mov    (%rax),%rdx
   18359:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1835d:	48 8b 40 08          	mov    0x8(%rax),%rax
   18361:	48 01 d0             	add    %rdx,%rax
   18364:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18368:	73 20                	jae    1838a <traverse_and_check+0x1b6>
   1836a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1836e:	48 8b 40 28          	mov    0x28(%rax),%rax
   18372:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18376:	74 12                	je     1838a <traverse_and_check+0x1b6>
   18378:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1837c:	48 8b 40 08          	mov    0x8(%rax),%rax
   18380:	48 83 f8 0b          	cmp    $0xb,%rax
   18384:	0f 85 f7 fe ff ff    	jne    18281 <traverse_and_check+0xad>
   1838a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1838e:	48 8b 40 10          	mov    0x10(%rax),%rax
   18392:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18396:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1839b:	0f 85 86 fe ff ff    	jne    18227 <traverse_and_check+0x53>
   183a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   183a5:	c9                   	leave  
   183a6:	c3                   	ret    

00000000000183a7 <do_check_malloc_state>:
   183a7:	f3 0f 1e fa          	endbr64 
   183ab:	55                   	push   %rbp
   183ac:	48 89 e5             	mov    %rsp,%rbp
   183af:	48 83 ec 20          	sub    $0x20,%rsp
   183b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   183b7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   183be:	eb 15                	jmp    183d5 <do_check_malloc_state+0x2e>
   183c0:	8b 55 f4             	mov    -0xc(%rbp),%edx
   183c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183c7:	89 d6                	mov    %edx,%esi
   183c9:	48 89 c7             	mov    %rax,%rdi
   183cc:	e8 d5 fa ff ff       	call   17ea6 <do_check_smallbin>
   183d1:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   183d5:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   183d9:	76 e5                	jbe    183c0 <do_check_malloc_state+0x19>
   183db:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   183e2:	eb 15                	jmp    183f9 <do_check_malloc_state+0x52>
   183e4:	8b 55 f4             	mov    -0xc(%rbp),%edx
   183e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183eb:	89 d6                	mov    %edx,%esi
   183ed:	48 89 c7             	mov    %rax,%rdi
   183f0:	e8 25 fa ff ff       	call   17e1a <do_check_treebin>
   183f5:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   183f9:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   183fd:	76 e5                	jbe    183e4 <do_check_malloc_state+0x3d>
   183ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18403:	48 8b 40 08          	mov    0x8(%rax),%rax
   18407:	48 85 c0             	test   %rax,%rax
   1840a:	74 6c                	je     18478 <do_check_malloc_state+0xd1>
   1840c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18410:	48 8b 50 20          	mov    0x20(%rax),%rdx
   18414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18418:	48 89 d6             	mov    %rdx,%rsi
   1841b:	48 89 c7             	mov    %rax,%rdi
   1841e:	e8 ee f1 ff ff       	call   17611 <do_check_any_chunk>
   18423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18427:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1842b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1842f:	48 8b 40 20          	mov    0x20(%rax),%rax
   18433:	48 8b 40 08          	mov    0x8(%rax),%rax
   18437:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1843b:	48 39 c2             	cmp    %rax,%rdx
   1843e:	74 05                	je     18445 <do_check_malloc_state+0x9e>
   18440:	e8 e6 70 01 00       	call   2f52b <abort>
   18445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18449:	48 8b 40 08          	mov    0x8(%rax),%rax
   1844d:	48 83 f8 1f          	cmp    $0x1f,%rax
   18451:	77 05                	ja     18458 <do_check_malloc_state+0xb1>
   18453:	e8 d3 70 01 00       	call   2f52b <abort>
   18458:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1845c:	48 8b 50 20          	mov    0x20(%rax),%rdx
   18460:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18464:	48 89 d6             	mov    %rdx,%rsi
   18467:	48 89 c7             	mov    %rax,%rdi
   1846a:	e8 7d fb ff ff       	call   17fec <bin_find>
   1846f:	85 c0                	test   %eax,%eax
   18471:	74 05                	je     18478 <do_check_malloc_state+0xd1>
   18473:	e8 b3 70 01 00       	call   2f52b <abort>
   18478:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1847c:	48 8b 40 28          	mov    0x28(%rax),%rax
   18480:	48 85 c0             	test   %rax,%rax
   18483:	74 49                	je     184ce <do_check_malloc_state+0x127>
   18485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18489:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1848d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18491:	48 89 d6             	mov    %rdx,%rsi
   18494:	48 89 c7             	mov    %rax,%rdi
   18497:	e8 c2 f1 ff ff       	call   1765e <do_check_top_chunk>
   1849c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184a0:	48 8b 40 10          	mov    0x10(%rax),%rax
   184a4:	48 85 c0             	test   %rax,%rax
   184a7:	75 05                	jne    184ae <do_check_malloc_state+0x107>
   184a9:	e8 7d 70 01 00       	call   2f52b <abort>
   184ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184b2:	48 8b 50 28          	mov    0x28(%rax),%rdx
   184b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184ba:	48 89 d6             	mov    %rdx,%rsi
   184bd:	48 89 c7             	mov    %rax,%rdi
   184c0:	e8 27 fb ff ff       	call   17fec <bin_find>
   184c5:	85 c0                	test   %eax,%eax
   184c7:	74 05                	je     184ce <do_check_malloc_state+0x127>
   184c9:	e8 5d 70 01 00       	call   2f52b <abort>
   184ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184d2:	48 89 c7             	mov    %rax,%rdi
   184d5:	e8 fa fc ff ff       	call   181d4 <traverse_and_check>
   184da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   184de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184e2:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   184e9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   184ed:	76 05                	jbe    184f4 <do_check_malloc_state+0x14d>
   184ef:	e8 37 70 01 00       	call   2f52b <abort>
   184f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184f8:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   184ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18503:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1850a:	48 39 c2             	cmp    %rax,%rdx
   1850d:	76 05                	jbe    18514 <do_check_malloc_state+0x16d>
   1850f:	e8 17 70 01 00       	call   2f52b <abort>
   18514:	90                   	nop
   18515:	c9                   	leave  
   18516:	c3                   	ret    

0000000000018517 <internal_mallinfo>:
   18517:	f3 0f 1e fa          	endbr64 
   1851b:	55                   	push   %rbp
   1851c:	48 89 e5             	mov    %rsp,%rbp
   1851f:	53                   	push   %rbx
   18520:	48 83 ec 78          	sub    $0x78,%rsp
   18524:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   18528:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   1852c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   18533:	00 
   18534:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1853b:	00 
   1853c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   18543:	00 
   18544:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1854b:	00 
   1854c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   18553:	00 
   18554:	48 8b 05 a5 3a 05 00 	mov    0x53aa5(%rip),%rax        # 6c000 <mparams>
   1855b:	48 85 c0             	test   %rax,%rax
   1855e:	75 07                	jne    18567 <internal_mallinfo+0x50>
   18560:	e8 b5 ee ff ff       	call   1741a <init_mparams>
   18565:	85 c0                	test   %eax,%eax
   18567:	90                   	nop
   18568:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1856c:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   18572:	83 e0 02             	and    $0x2,%eax
   18575:	85 c0                	test   %eax,%eax
   18577:	74 30                	je     185a9 <internal_mallinfo+0x92>
   18579:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1857d:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   18584:	b8 01 00 00 00       	mov    $0x1,%eax
   18589:	87 02                	xchg   %eax,(%rdx)
   1858b:	85 c0                	test   %eax,%eax
   1858d:	74 1a                	je     185a9 <internal_mallinfo+0x92>
   1858f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18593:	48 05 74 03 00 00    	add    $0x374,%rax
   18599:	48 89 c7             	mov    %rax,%rdi
   1859c:	e8 79 ed ff ff       	call   1731a <spin_acquire_lock>
   185a1:	85 c0                	test   %eax,%eax
   185a3:	0f 85 ad 01 00 00    	jne    18756 <internal_mallinfo+0x23f>
   185a9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   185ad:	48 89 c7             	mov    %rax,%rdi
   185b0:	e8 f2 fd ff ff       	call   183a7 <do_check_malloc_state>
   185b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   185b9:	48 8b 40 28          	mov    0x28(%rax),%rax
   185bd:	48 85 c0             	test   %rax,%rax
   185c0:	0f 84 6e 01 00 00    	je     18734 <internal_mallinfo+0x21d>
   185c6:	48 c7 45 90 01 00 00 	movq   $0x1,-0x70(%rbp)
   185cd:	00 
   185ce:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   185d2:	48 8b 40 10          	mov    0x10(%rax),%rax
   185d6:	48 83 c0 50          	add    $0x50,%rax
   185da:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   185de:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   185e2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   185e6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   185ea:	48 05 78 03 00 00    	add    $0x378,%rax
   185f0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   185f4:	e9 d2 00 00 00       	jmp    186cb <internal_mallinfo+0x1b4>
   185f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   185fd:	48 8b 10             	mov    (%rax),%rdx
   18600:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18604:	48 8b 00             	mov    (%rax),%rax
   18607:	48 83 c0 10          	add    $0x10,%rax
   1860b:	83 e0 0f             	and    $0xf,%eax
   1860e:	48 85 c0             	test   %rax,%rax
   18611:	74 13                	je     18626 <internal_mallinfo+0x10f>
   18613:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18617:	48 8b 00             	mov    (%rax),%rax
   1861a:	48 83 c0 10          	add    $0x10,%rax
   1861e:	48 f7 d8             	neg    %rax
   18621:	83 e0 0f             	and    $0xf,%eax
   18624:	eb 05                	jmp    1862b <internal_mallinfo+0x114>
   18626:	b8 00 00 00 00       	mov    $0x0,%eax
   1862b:	48 01 d0             	add    %rdx,%rax
   1862e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   18632:	eb 46                	jmp    1867a <internal_mallinfo+0x163>
   18634:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18638:	48 8b 40 08          	mov    0x8(%rax),%rax
   1863c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18640:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   18644:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18648:	48 01 45 a0          	add    %rax,-0x60(%rbp)
   1864c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18650:	48 8b 40 08          	mov    0x8(%rax),%rax
   18654:	83 e0 03             	and    $0x3,%eax
   18657:	48 83 f8 01          	cmp    $0x1,%rax
   1865b:	75 0d                	jne    1866a <internal_mallinfo+0x153>
   1865d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18661:	48 01 45 98          	add    %rax,-0x68(%rbp)
   18665:	48 83 45 90 01       	addq   $0x1,-0x70(%rbp)
   1866a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1866e:	48 8b 40 08          	mov    0x8(%rax),%rax
   18672:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18676:	48 01 45 b0          	add    %rax,-0x50(%rbp)
   1867a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1867e:	48 8b 00             	mov    (%rax),%rax
   18681:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   18685:	72 38                	jb     186bf <internal_mallinfo+0x1a8>
   18687:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1868b:	48 8b 10             	mov    (%rax),%rdx
   1868e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18692:	48 8b 40 08          	mov    0x8(%rax),%rax
   18696:	48 01 d0             	add    %rdx,%rax
   18699:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1869d:	73 20                	jae    186bf <internal_mallinfo+0x1a8>
   1869f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   186a3:	48 8b 40 28          	mov    0x28(%rax),%rax
   186a7:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   186ab:	74 12                	je     186bf <internal_mallinfo+0x1a8>
   186ad:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   186b1:	48 8b 40 08          	mov    0x8(%rax),%rax
   186b5:	48 83 f8 0b          	cmp    $0xb,%rax
   186b9:	0f 85 75 ff ff ff    	jne    18634 <internal_mallinfo+0x11d>
   186bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   186c3:	48 8b 40 10          	mov    0x10(%rax),%rax
   186c7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   186cb:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   186d0:	0f 85 23 ff ff ff    	jne    185f9 <internal_mallinfo+0xe2>
   186d6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   186da:	89 45 c0             	mov    %eax,-0x40(%rbp)
   186dd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   186e1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   186e4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   186e8:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   186ef:	89 c2                	mov    %eax,%edx
   186f1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   186f5:	29 c2                	sub    %eax,%edx
   186f7:	89 d0                	mov    %edx,%eax
   186f9:	89 45 d0             	mov    %eax,-0x30(%rbp)
   186fc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18700:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   18707:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1870a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1870e:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   18715:	89 c2                	mov    %eax,%edx
   18717:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1871b:	29 c2                	sub    %eax,%edx
   1871d:	89 d0                	mov    %edx,%eax
   1871f:	89 45 dc             	mov    %eax,-0x24(%rbp)
   18722:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18726:	89 45 e0             	mov    %eax,-0x20(%rbp)
   18729:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1872d:	48 8b 40 10          	mov    0x10(%rax),%rax
   18731:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   18734:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18738:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1873e:	83 e0 02             	and    $0x2,%eax
   18741:	85 c0                	test   %eax,%eax
   18743:	74 11                	je     18756 <internal_mallinfo+0x23f>
   18745:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18749:	48 05 74 03 00 00    	add    $0x374,%rax
   1874f:	ba 00 00 00 00       	mov    $0x0,%edx
   18754:	89 10                	mov    %edx,(%rax)
   18756:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1875a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1875e:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   18762:	48 89 08             	mov    %rcx,(%rax)
   18765:	48 89 58 08          	mov    %rbx,0x8(%rax)
   18769:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1876d:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   18771:	48 89 48 10          	mov    %rcx,0x10(%rax)
   18775:	48 89 58 18          	mov    %rbx,0x18(%rax)
   18779:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1877d:	48 89 50 20          	mov    %rdx,0x20(%rax)
   18781:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   18785:	48 83 c4 78          	add    $0x78,%rsp
   18789:	5b                   	pop    %rbx
   1878a:	5d                   	pop    %rbp
   1878b:	c3                   	ret    

000000000001878c <internal_malloc_stats>:
   1878c:	f3 0f 1e fa          	endbr64 
   18790:	55                   	push   %rbp
   18791:	48 89 e5             	mov    %rsp,%rbp
   18794:	48 83 ec 40          	sub    $0x40,%rsp
   18798:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1879c:	48 8b 05 5d 38 05 00 	mov    0x5385d(%rip),%rax        # 6c000 <mparams>
   187a3:	48 85 c0             	test   %rax,%rax
   187a6:	75 07                	jne    187af <internal_malloc_stats+0x23>
   187a8:	e8 6d ec ff ff       	call   1741a <init_mparams>
   187ad:	85 c0                	test   %eax,%eax
   187af:	90                   	nop
   187b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   187b4:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   187ba:	83 e0 02             	and    $0x2,%eax
   187bd:	85 c0                	test   %eax,%eax
   187bf:	74 30                	je     187f1 <internal_malloc_stats+0x65>
   187c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   187c5:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   187cc:	b8 01 00 00 00       	mov    $0x1,%eax
   187d1:	87 02                	xchg   %eax,(%rdx)
   187d3:	85 c0                	test   %eax,%eax
   187d5:	74 1a                	je     187f1 <internal_malloc_stats+0x65>
   187d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   187db:	48 05 74 03 00 00    	add    $0x374,%rax
   187e1:	48 89 c7             	mov    %rax,%rdi
   187e4:	e8 31 eb ff ff       	call   1731a <spin_acquire_lock>
   187e9:	85 c0                	test   %eax,%eax
   187eb:	0f 85 66 01 00 00    	jne    18957 <internal_malloc_stats+0x1cb>
   187f1:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   187f8:	00 
   187f9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   18800:	00 
   18801:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   18808:	00 
   18809:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1880d:	48 89 c7             	mov    %rax,%rdi
   18810:	e8 92 fb ff ff       	call   183a7 <do_check_malloc_state>
   18815:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18819:	48 8b 40 28          	mov    0x28(%rax),%rax
   1881d:	48 85 c0             	test   %rax,%rax
   18820:	0f 84 0f 01 00 00    	je     18935 <internal_malloc_stats+0x1a9>
   18826:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1882a:	48 05 78 03 00 00    	add    $0x378,%rax
   18830:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18834:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18838:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1883f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18843:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18847:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1884e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18852:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18856:	48 8b 40 10          	mov    0x10(%rax),%rax
   1885a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1885e:	48 29 c2             	sub    %rax,%rdx
   18861:	48 89 d0             	mov    %rdx,%rax
   18864:	48 83 e8 50          	sub    $0x50,%rax
   18868:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1886c:	e9 b9 00 00 00       	jmp    1892a <internal_malloc_stats+0x19e>
   18871:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18875:	48 8b 10             	mov    (%rax),%rdx
   18878:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1887c:	48 8b 00             	mov    (%rax),%rax
   1887f:	48 83 c0 10          	add    $0x10,%rax
   18883:	83 e0 0f             	and    $0xf,%eax
   18886:	48 85 c0             	test   %rax,%rax
   18889:	74 13                	je     1889e <internal_malloc_stats+0x112>
   1888b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1888f:	48 8b 00             	mov    (%rax),%rax
   18892:	48 83 c0 10          	add    $0x10,%rax
   18896:	48 f7 d8             	neg    %rax
   18899:	83 e0 0f             	and    $0xf,%eax
   1889c:	eb 05                	jmp    188a3 <internal_malloc_stats+0x117>
   1889e:	b8 00 00 00 00       	mov    $0x0,%eax
   188a3:	48 01 d0             	add    %rdx,%rax
   188a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   188aa:	eb 31                	jmp    188dd <internal_malloc_stats+0x151>
   188ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188b0:	48 8b 40 08          	mov    0x8(%rax),%rax
   188b4:	83 e0 03             	and    $0x3,%eax
   188b7:	48 83 f8 01          	cmp    $0x1,%rax
   188bb:	75 10                	jne    188cd <internal_malloc_stats+0x141>
   188bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188c1:	48 8b 40 08          	mov    0x8(%rax),%rax
   188c5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   188c9:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   188cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188d1:	48 8b 40 08          	mov    0x8(%rax),%rax
   188d5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   188d9:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   188dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   188e1:	48 8b 00             	mov    (%rax),%rax
   188e4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   188e8:	72 34                	jb     1891e <internal_malloc_stats+0x192>
   188ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   188ee:	48 8b 10             	mov    (%rax),%rdx
   188f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   188f5:	48 8b 40 08          	mov    0x8(%rax),%rax
   188f9:	48 01 d0             	add    %rdx,%rax
   188fc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   18900:	73 1c                	jae    1891e <internal_malloc_stats+0x192>
   18902:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18906:	48 8b 40 28          	mov    0x28(%rax),%rax
   1890a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1890e:	74 0e                	je     1891e <internal_malloc_stats+0x192>
   18910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18914:	48 8b 40 08          	mov    0x8(%rax),%rax
   18918:	48 83 f8 0b          	cmp    $0xb,%rax
   1891c:	75 8e                	jne    188ac <internal_malloc_stats+0x120>
   1891e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18922:	48 8b 40 10          	mov    0x10(%rax),%rax
   18926:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1892a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1892f:	0f 85 3c ff ff ff    	jne    18871 <internal_malloc_stats+0xe5>
   18935:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18939:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1893f:	83 e0 02             	and    $0x2,%eax
   18942:	85 c0                	test   %eax,%eax
   18944:	74 11                	je     18957 <internal_malloc_stats+0x1cb>
   18946:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1894a:	48 05 74 03 00 00    	add    $0x374,%rax
   18950:	ba 00 00 00 00       	mov    $0x0,%edx
   18955:	89 10                	mov    %edx,(%rax)
   18957:	90                   	nop
   18958:	c9                   	leave  
   18959:	c3                   	ret    

000000000001895a <mmap_alloc>:
   1895a:	f3 0f 1e fa          	endbr64 
   1895e:	55                   	push   %rbp
   1895f:	48 89 e5             	mov    %rsp,%rbp
   18962:	48 83 ec 40          	sub    $0x40,%rsp
   18966:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1896a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1896e:	48 8b 15 93 36 05 00 	mov    0x53693(%rip),%rdx        # 6c008 <mparams+0x8>
   18975:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18979:	48 01 d0             	add    %rdx,%rax
   1897c:	48 8d 50 3e          	lea    0x3e(%rax),%rdx
   18980:	48 8b 05 81 36 05 00 	mov    0x53681(%rip),%rax        # 6c008 <mparams+0x8>
   18987:	48 f7 d8             	neg    %rax
   1898a:	48 21 d0             	and    %rdx,%rax
   1898d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18991:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18995:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1899c:	48 85 c0             	test   %rax,%rax
   1899f:	74 42                	je     189e3 <mmap_alloc+0x89>
   189a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   189a5:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   189ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   189b0:	48 01 d0             	add    %rdx,%rax
   189b3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   189b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   189bb:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   189c2:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   189c6:	76 11                	jbe    189d9 <mmap_alloc+0x7f>
   189c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   189cc:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   189d3:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   189d7:	76 0a                	jbe    189e3 <mmap_alloc+0x89>
   189d9:	b8 00 00 00 00       	mov    $0x0,%eax
   189de:	e9 72 01 00 00       	jmp    18b55 <mmap_alloc+0x1fb>
   189e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   189e7:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   189eb:	0f 86 5f 01 00 00    	jbe    18b50 <mmap_alloc+0x1f6>
   189f1:	48 c7 45 e0 ff ff ff 	movq   $0xffffffffffffffff,-0x20(%rbp)
   189f8:	ff 
   189f9:	48 83 7d e0 ff       	cmpq   $0xffffffffffffffff,-0x20(%rbp)
   189fe:	0f 84 4c 01 00 00    	je     18b50 <mmap_alloc+0x1f6>
   18a04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18a08:	48 83 c0 10          	add    $0x10,%rax
   18a0c:	83 e0 0f             	and    $0xf,%eax
   18a0f:	48 85 c0             	test   %rax,%rax
   18a12:	74 10                	je     18a24 <mmap_alloc+0xca>
   18a14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18a18:	48 83 c0 10          	add    $0x10,%rax
   18a1c:	48 f7 d8             	neg    %rax
   18a1f:	83 e0 0f             	and    $0xf,%eax
   18a22:	eb 05                	jmp    18a29 <mmap_alloc+0xcf>
   18a24:	b8 00 00 00 00       	mov    $0x0,%eax
   18a29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18a2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18a31:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18a35:	48 83 e8 20          	sub    $0x20,%rax
   18a39:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18a3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18a41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a45:	48 01 d0             	add    %rdx,%rax
   18a48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18a54:	48 89 10             	mov    %rdx,(%rax)
   18a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18a5f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18a63:	48 8b 0d 96 35 05 00 	mov    0x53596(%rip),%rcx        # 6c000 <mparams>
   18a6a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18a6e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   18a72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18a76:	48 01 f0             	add    %rsi,%rax
   18a79:	48 31 ca             	xor    %rcx,%rdx
   18a7c:	48 89 10             	mov    %rdx,(%rax)
   18a7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18a83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18a87:	48 01 d0             	add    %rdx,%rax
   18a8a:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   18a91:	00 
   18a92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18a96:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a9e:	48 01 d0             	add    %rdx,%rax
   18aa1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   18aa8:	00 
   18aa9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18aad:	48 8b 40 18          	mov    0x18(%rax),%rax
   18ab1:	48 85 c0             	test   %rax,%rax
   18ab4:	74 0e                	je     18ac4 <mmap_alloc+0x16a>
   18ab6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18aba:	48 8b 40 18          	mov    0x18(%rax),%rax
   18abe:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   18ac2:	73 0c                	jae    18ad0 <mmap_alloc+0x176>
   18ac4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18ac8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18acc:	48 89 50 18          	mov    %rdx,0x18(%rax)
   18ad0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18ad4:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18adb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18adf:	48 01 c2             	add    %rax,%rdx
   18ae2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18ae6:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   18aed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18af1:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18af8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18afc:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   18b03:	48 39 c2             	cmp    %rax,%rdx
   18b06:	76 16                	jbe    18b1e <mmap_alloc+0x1c4>
   18b08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18b0c:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18b13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18b17:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   18b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b22:	48 83 c0 10          	add    $0x10,%rax
   18b26:	83 e0 0f             	and    $0xf,%eax
   18b29:	48 85 c0             	test   %rax,%rax
   18b2c:	74 05                	je     18b33 <mmap_alloc+0x1d9>
   18b2e:	e8 f8 69 01 00       	call   2f52b <abort>
   18b33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18b37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18b3b:	48 89 d6             	mov    %rdx,%rsi
   18b3e:	48 89 c7             	mov    %rax,%rdi
   18b41:	e8 0d ec ff ff       	call   17753 <do_check_mmapped_chunk>
   18b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b4a:	48 83 c0 10          	add    $0x10,%rax
   18b4e:	eb 05                	jmp    18b55 <mmap_alloc+0x1fb>
   18b50:	b8 00 00 00 00       	mov    $0x0,%eax
   18b55:	c9                   	leave  
   18b56:	c3                   	ret    

0000000000018b57 <mmap_resize>:
   18b57:	f3 0f 1e fa          	endbr64 
   18b5b:	55                   	push   %rbp
   18b5c:	48 89 e5             	mov    %rsp,%rbp
   18b5f:	48 83 ec 60          	sub    $0x60,%rsp
   18b63:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   18b67:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   18b6b:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   18b6f:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
   18b72:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18b76:	48 8b 40 08          	mov    0x8(%rax),%rax
   18b7a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   18b7e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   18b82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18b86:	48 c1 e8 03          	shr    $0x3,%rax
   18b8a:	48 83 f8 1f          	cmp    $0x1f,%rax
   18b8e:	77 0a                	ja     18b9a <mmap_resize+0x43>
   18b90:	b8 00 00 00 00       	mov    $0x0,%eax
   18b95:	e9 7d 01 00 00       	jmp    18d17 <mmap_resize+0x1c0>
   18b9a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18b9e:	48 83 c0 08          	add    $0x8,%rax
   18ba2:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   18ba6:	72 20                	jb     18bc8 <mmap_resize+0x71>
   18ba8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18bac:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   18bb0:	48 8b 15 59 34 05 00 	mov    0x53459(%rip),%rdx        # 6c010 <mparams+0x10>
   18bb7:	48 01 d2             	add    %rdx,%rdx
   18bba:	48 39 d0             	cmp    %rdx,%rax
   18bbd:	77 09                	ja     18bc8 <mmap_resize+0x71>
   18bbf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18bc3:	e9 4f 01 00 00       	jmp    18d17 <mmap_resize+0x1c0>
   18bc8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   18bcc:	48 8b 00             	mov    (%rax),%rax
   18bcf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18bd3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18bd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18bdb:	48 01 d0             	add    %rdx,%rax
   18bde:	48 83 c0 20          	add    $0x20,%rax
   18be2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   18be6:	48 8b 15 1b 34 05 00 	mov    0x5341b(%rip),%rdx        # 6c008 <mparams+0x8>
   18bed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18bf1:	48 01 d0             	add    %rdx,%rax
   18bf4:	48 8d 50 3e          	lea    0x3e(%rax),%rdx
   18bf8:	48 8b 05 09 34 05 00 	mov    0x53409(%rip),%rax        # 6c008 <mparams+0x8>
   18bff:	48 f7 d8             	neg    %rax
   18c02:	48 21 d0             	and    %rdx,%rax
   18c05:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18c09:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
   18c10:	ff 
   18c11:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
   18c16:	0f 84 f6 00 00 00    	je     18d12 <mmap_resize+0x1bb>
   18c1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18c24:	48 01 d0             	add    %rdx,%rax
   18c27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18c2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18c2f:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   18c33:	48 83 e8 20          	sub    $0x20,%rax
   18c37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18c3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18c3f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18c43:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18c47:	48 8b 0d b2 33 05 00 	mov    0x533b2(%rip),%rcx        # 6c000 <mparams>
   18c4e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   18c52:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c5a:	48 01 f0             	add    %rsi,%rax
   18c5d:	48 31 ca             	xor    %rcx,%rdx
   18c60:	48 89 10             	mov    %rdx,(%rax)
   18c63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c6b:	48 01 d0             	add    %rdx,%rax
   18c6e:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   18c75:	00 
   18c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c7a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18c82:	48 01 d0             	add    %rdx,%rax
   18c85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   18c8c:	00 
   18c8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18c91:	48 8b 40 18          	mov    0x18(%rax),%rax
   18c95:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   18c99:	73 0c                	jae    18ca7 <mmap_resize+0x150>
   18c9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18c9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ca3:	48 89 50 18          	mov    %rdx,0x18(%rax)
   18ca7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18cab:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18cb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18cb6:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   18cba:	48 01 c2             	add    %rax,%rdx
   18cbd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18cc1:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   18cc8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18ccc:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18cd3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18cd7:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   18cde:	48 39 c2             	cmp    %rax,%rdx
   18ce1:	76 16                	jbe    18cf9 <mmap_resize+0x1a2>
   18ce3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18ce7:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   18cee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18cf2:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   18cf9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18cfd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18d01:	48 89 d6             	mov    %rdx,%rsi
   18d04:	48 89 c7             	mov    %rax,%rdi
   18d07:	e8 47 ea ff ff       	call   17753 <do_check_mmapped_chunk>
   18d0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18d10:	eb 05                	jmp    18d17 <mmap_resize+0x1c0>
   18d12:	b8 00 00 00 00       	mov    $0x0,%eax
   18d17:	c9                   	leave  
   18d18:	c3                   	ret    

0000000000018d19 <init_top>:
   18d19:	f3 0f 1e fa          	endbr64 
   18d1d:	55                   	push   %rbp
   18d1e:	48 89 e5             	mov    %rsp,%rbp
   18d21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18d25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18d29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18d2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18d31:	48 83 c0 10          	add    $0x10,%rax
   18d35:	83 e0 0f             	and    $0xf,%eax
   18d38:	48 85 c0             	test   %rax,%rax
   18d3b:	74 10                	je     18d4d <init_top+0x34>
   18d3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18d41:	48 83 c0 10          	add    $0x10,%rax
   18d45:	48 f7 d8             	neg    %rax
   18d48:	83 e0 0f             	and    $0xf,%eax
   18d4b:	eb 05                	jmp    18d52 <init_top+0x39>
   18d4d:	b8 00 00 00 00       	mov    $0x0,%eax
   18d52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d5a:	48 01 45 e0          	add    %rax,-0x20(%rbp)
   18d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d62:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
   18d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d6a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18d6e:	48 89 50 28          	mov    %rdx,0x28(%rax)
   18d72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d76:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18d7a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   18d7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d82:	48 83 c8 01          	or     $0x1,%rax
   18d86:	48 89 c2             	mov    %rax,%rdx
   18d89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18d8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18d91:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18d95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d99:	48 01 d0             	add    %rdx,%rax
   18d9c:	48 c7 40 08 50 00 00 	movq   $0x50,0x8(%rax)
   18da3:	00 
   18da4:	48 8b 15 75 32 05 00 	mov    0x53275(%rip),%rdx        # 6c020 <mparams+0x20>
   18dab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18daf:	48 89 50 30          	mov    %rdx,0x30(%rax)
   18db3:	90                   	nop
   18db4:	5d                   	pop    %rbp
   18db5:	c3                   	ret    

0000000000018db6 <init_bins>:
   18db6:	f3 0f 1e fa          	endbr64 
   18dba:	55                   	push   %rbp
   18dbb:	48 89 e5             	mov    %rsp,%rbp
   18dbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18dc2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   18dc9:	eb 42                	jmp    18e0d <init_bins+0x57>
   18dcb:	8b 45 f4             	mov    -0xc(%rbp),%eax
   18dce:	01 c0                	add    %eax,%eax
   18dd0:	89 c0                	mov    %eax,%eax
   18dd2:	48 83 c0 08          	add    $0x8,%rax
   18dd6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18ddd:	00 
   18dde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18de2:	48 01 d0             	add    %rdx,%rax
   18de5:	48 83 c0 08          	add    $0x8,%rax
   18de9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18df1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18df5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   18df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dfd:	48 8b 50 18          	mov    0x18(%rax),%rdx
   18e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e05:	48 89 50 10          	mov    %rdx,0x10(%rax)
   18e09:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   18e0d:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   18e11:	76 b8                	jbe    18dcb <init_bins+0x15>
   18e13:	90                   	nop
   18e14:	90                   	nop
   18e15:	5d                   	pop    %rbp
   18e16:	c3                   	ret    

0000000000018e17 <prepend_alloc>:
   18e17:	f3 0f 1e fa          	endbr64 
   18e1b:	55                   	push   %rbp
   18e1c:	48 89 e5             	mov    %rsp,%rbp
   18e1f:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   18e26:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
   18e2d:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
   18e34:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   18e3b:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
   18e42:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   18e49:	48 83 c0 10          	add    $0x10,%rax
   18e4d:	83 e0 0f             	and    $0xf,%eax
   18e50:	48 85 c0             	test   %rax,%rax
   18e53:	74 16                	je     18e6b <prepend_alloc+0x54>
   18e55:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   18e5c:	48 83 c0 10          	add    $0x10,%rax
   18e60:	48 f7 d8             	neg    %rax
   18e63:	83 e0 0f             	and    $0xf,%eax
   18e66:	48 89 c2             	mov    %rax,%rdx
   18e69:	eb 05                	jmp    18e70 <prepend_alloc+0x59>
   18e6b:	ba 00 00 00 00       	mov    $0x0,%edx
   18e70:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   18e77:	48 01 d0             	add    %rdx,%rax
   18e7a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   18e81:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   18e88:	48 83 c0 10          	add    $0x10,%rax
   18e8c:	83 e0 0f             	and    $0xf,%eax
   18e8f:	48 85 c0             	test   %rax,%rax
   18e92:	74 16                	je     18eaa <prepend_alloc+0x93>
   18e94:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   18e9b:	48 83 c0 10          	add    $0x10,%rax
   18e9f:	48 f7 d8             	neg    %rax
   18ea2:	83 e0 0f             	and    $0xf,%eax
   18ea5:	48 89 c2             	mov    %rax,%rdx
   18ea8:	eb 05                	jmp    18eaf <prepend_alloc+0x98>
   18eaa:	ba 00 00 00 00       	mov    $0x0,%edx
   18eaf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   18eb6:	48 01 d0             	add    %rdx,%rax
   18eb9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   18ec0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18ec7:	48 2b 85 68 ff ff ff 	sub    -0x98(%rbp),%rax
   18ece:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   18ed5:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   18edc:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   18ee3:	48 01 d0             	add    %rdx,%rax
   18ee6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   18eed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   18ef4:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   18efb:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   18f02:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   18f09:	48 83 c8 03          	or     $0x3,%rax
   18f0d:	48 89 c2             	mov    %rax,%rdx
   18f10:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   18f17:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18f1b:	48 8b 0d de 30 05 00 	mov    0x530de(%rip),%rcx        # 6c000 <mparams>
   18f22:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   18f29:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   18f30:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   18f37:	48 01 f0             	add    %rsi,%rax
   18f3a:	48 31 ca             	xor    %rcx,%rdx
   18f3d:	48 89 10             	mov    %rdx,(%rax)
   18f40:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18f47:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   18f4e:	77 05                	ja     18f55 <prepend_alloc+0x13e>
   18f50:	e8 d6 65 01 00       	call   2f52b <abort>
   18f55:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18f5c:	48 8b 40 08          	mov    0x8(%rax),%rax
   18f60:	83 e0 01             	and    $0x1,%eax
   18f63:	48 85 c0             	test   %rax,%rax
   18f66:	75 05                	jne    18f6d <prepend_alloc+0x156>
   18f68:	e8 be 65 01 00       	call   2f52b <abort>
   18f6d:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
   18f74:	1f 
   18f75:	77 05                	ja     18f7c <prepend_alloc+0x165>
   18f77:	e8 af 65 01 00       	call   2f52b <abort>
   18f7c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18f83:	48 8b 40 28          	mov    0x28(%rax),%rax
   18f87:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   18f8e:	75 75                	jne    19005 <prepend_alloc+0x1ee>
   18f90:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18f97:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18f9b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   18fa2:	48 01 c2             	add    %rax,%rdx
   18fa5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18fac:	48 89 50 10          	mov    %rdx,0x10(%rax)
   18fb0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18fb7:	48 8b 40 10          	mov    0x10(%rax),%rax
   18fbb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18fbf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18fc6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   18fcd:	48 89 50 28          	mov    %rdx,0x28(%rax)
   18fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fd5:	48 83 c8 01          	or     $0x1,%rax
   18fd9:	48 89 c2             	mov    %rax,%rdx
   18fdc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   18fe3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18fe7:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   18fee:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18ff5:	48 89 d6             	mov    %rdx,%rsi
   18ff8:	48 89 c7             	mov    %rax,%rdi
   18ffb:	e8 5e e6 ff ff       	call   1765e <do_check_top_chunk>
   19000:	e9 95 0a 00 00       	jmp    19a9a <prepend_alloc+0xc83>
   19005:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1900c:	48 8b 40 20          	mov    0x20(%rax),%rax
   19010:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   19017:	75 71                	jne    1908a <prepend_alloc+0x273>
   19019:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19020:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19024:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1902b:	48 01 c2             	add    %rax,%rdx
   1902e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19035:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19039:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19040:	48 8b 40 08          	mov    0x8(%rax),%rax
   19044:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19048:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1904f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   19056:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1905a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1905e:	48 83 c8 01          	or     $0x1,%rax
   19062:	48 89 c2             	mov    %rax,%rdx
   19065:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1906c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19070:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   19077:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1907b:	48 01 c2             	add    %rax,%rdx
   1907e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19082:	48 89 02             	mov    %rax,(%rdx)
   19085:	e9 10 0a 00 00       	jmp    19a9a <prepend_alloc+0xc83>
   1908a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   19091:	48 8b 40 08          	mov    0x8(%rax),%rax
   19095:	83 e0 03             	and    $0x3,%eax
   19098:	48 83 f8 01          	cmp    $0x1,%rax
   1909c:	0f 85 70 05 00 00    	jne    19612 <prepend_alloc+0x7fb>
   190a2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   190a9:	48 8b 40 08          	mov    0x8(%rax),%rax
   190ad:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   190b1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   190b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   190b9:	48 c1 e8 03          	shr    $0x3,%rax
   190bd:	48 83 f8 1f          	cmp    $0x1f,%rax
   190c1:	0f 87 c6 01 00 00    	ja     1928d <prepend_alloc+0x476>
   190c7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   190ce:	48 8b 40 10          	mov    0x10(%rax),%rax
   190d2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   190d6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   190dd:	48 8b 40 18          	mov    0x18(%rax),%rax
   190e1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   190e5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   190e9:	48 c1 e8 03          	shr    $0x3,%rax
   190ed:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
   190f3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   190fa:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   190fe:	75 05                	jne    19105 <prepend_alloc+0x2ee>
   19100:	e8 26 64 01 00       	call   2f52b <abort>
   19105:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1910c:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   19110:	75 05                	jne    19117 <prepend_alloc+0x300>
   19112:	e8 14 64 01 00       	call   2f52b <abort>
   19117:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1911e:	48 8b 40 08          	mov    0x8(%rax),%rax
   19122:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   19126:	48 89 c2             	mov    %rax,%rdx
   19129:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1912f:	c1 e0 03             	shl    $0x3,%eax
   19132:	89 c0                	mov    %eax,%eax
   19134:	48 39 c2             	cmp    %rax,%rdx
   19137:	74 05                	je     1913e <prepend_alloc+0x327>
   19139:	e8 ed 63 01 00       	call   2f52b <abort>
   1913e:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   19144:	01 c0                	add    %eax,%eax
   19146:	89 c0                	mov    %eax,%eax
   19148:	48 83 c0 08          	add    $0x8,%rax
   1914c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19153:	00 
   19154:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1915b:	48 01 d0             	add    %rdx,%rax
   1915e:	48 83 c0 08          	add    $0x8,%rax
   19162:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   19166:	0f 94 c0             	sete   %al
   19169:	0f b6 c0             	movzbl %al,%eax
   1916c:	48 85 c0             	test   %rax,%rax
   1916f:	75 48                	jne    191b9 <prepend_alloc+0x3a2>
   19171:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19178:	48 8b 40 18          	mov    0x18(%rax),%rax
   1917c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   19180:	0f 93 c0             	setae  %al
   19183:	0f b6 c0             	movzbl %al,%eax
   19186:	48 85 c0             	test   %rax,%rax
   19189:	74 21                	je     191ac <prepend_alloc+0x395>
   1918b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1918f:	48 8b 40 18          	mov    0x18(%rax),%rax
   19193:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1919a:	0f 94 c0             	sete   %al
   1919d:	0f b6 c0             	movzbl %al,%eax
   191a0:	48 85 c0             	test   %rax,%rax
   191a3:	74 07                	je     191ac <prepend_alloc+0x395>
   191a5:	b8 01 00 00 00       	mov    $0x1,%eax
   191aa:	eb 05                	jmp    191b1 <prepend_alloc+0x39a>
   191ac:	b8 00 00 00 00       	mov    $0x0,%eax
   191b1:	85 c0                	test   %eax,%eax
   191b3:	0f 84 cf 00 00 00    	je     19288 <prepend_alloc+0x471>
   191b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   191bd:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   191c1:	75 2c                	jne    191ef <prepend_alloc+0x3d8>
   191c3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   191ca:	8b 10                	mov    (%rax),%edx
   191cc:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   191d2:	be 01 00 00 00       	mov    $0x1,%esi
   191d7:	89 c1                	mov    %eax,%ecx
   191d9:	d3 e6                	shl    %cl,%esi
   191db:	89 f0                	mov    %esi,%eax
   191dd:	f7 d0                	not    %eax
   191df:	21 c2                	and    %eax,%edx
   191e1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   191e8:	89 10                	mov    %edx,(%rax)
   191ea:	e9 0d 04 00 00       	jmp    195fc <prepend_alloc+0x7e5>
   191ef:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   191f5:	01 c0                	add    %eax,%eax
   191f7:	89 c0                	mov    %eax,%eax
   191f9:	48 83 c0 08          	add    $0x8,%rax
   191fd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19204:	00 
   19205:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1920c:	48 01 d0             	add    %rdx,%rax
   1920f:	48 83 c0 08          	add    $0x8,%rax
   19213:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   19217:	0f 94 c0             	sete   %al
   1921a:	0f b6 c0             	movzbl %al,%eax
   1921d:	48 85 c0             	test   %rax,%rax
   19220:	75 44                	jne    19266 <prepend_alloc+0x44f>
   19222:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19229:	48 8b 40 18          	mov    0x18(%rax),%rax
   1922d:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   19231:	0f 93 c0             	setae  %al
   19234:	0f b6 c0             	movzbl %al,%eax
   19237:	48 85 c0             	test   %rax,%rax
   1923a:	74 21                	je     1925d <prepend_alloc+0x446>
   1923c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19240:	48 8b 40 10          	mov    0x10(%rax),%rax
   19244:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1924b:	0f 94 c0             	sete   %al
   1924e:	0f b6 c0             	movzbl %al,%eax
   19251:	48 85 c0             	test   %rax,%rax
   19254:	74 07                	je     1925d <prepend_alloc+0x446>
   19256:	b8 01 00 00 00       	mov    $0x1,%eax
   1925b:	eb 05                	jmp    19262 <prepend_alloc+0x44b>
   1925d:	b8 00 00 00 00       	mov    $0x0,%eax
   19262:	85 c0                	test   %eax,%eax
   19264:	74 1d                	je     19283 <prepend_alloc+0x46c>
   19266:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1926a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1926e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19272:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19276:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1927a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1927e:	e9 79 03 00 00       	jmp    195fc <prepend_alloc+0x7e5>
   19283:	e8 a3 62 01 00       	call   2f52b <abort>
   19288:	e8 9e 62 01 00       	call   2f52b <abort>
   1928d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   19294:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   19298:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1929c:	48 8b 40 30          	mov    0x30(%rax),%rax
   192a0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   192a4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   192a8:	48 8b 40 18          	mov    0x18(%rax),%rax
   192ac:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   192b0:	0f 84 9e 00 00 00    	je     19354 <prepend_alloc+0x53d>
   192b6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   192ba:	48 8b 40 10          	mov    0x10(%rax),%rax
   192be:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   192c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   192c6:	48 8b 40 18          	mov    0x18(%rax),%rax
   192ca:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   192d1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   192d8:	48 8b 40 18          	mov    0x18(%rax),%rax
   192dc:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   192e0:	0f 93 c0             	setae  %al
   192e3:	0f b6 c0             	movzbl %al,%eax
   192e6:	48 85 c0             	test   %rax,%rax
   192e9:	74 1e                	je     19309 <prepend_alloc+0x4f2>
   192eb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   192ef:	48 8b 40 18          	mov    0x18(%rax),%rax
   192f3:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   192f7:	0f 94 c0             	sete   %al
   192fa:	0f b6 c0             	movzbl %al,%eax
   192fd:	48 85 c0             	test   %rax,%rax
   19300:	74 07                	je     19309 <prepend_alloc+0x4f2>
   19302:	b8 01 00 00 00       	mov    $0x1,%eax
   19307:	eb 05                	jmp    1930e <prepend_alloc+0x4f7>
   19309:	b8 00 00 00 00       	mov    $0x0,%eax
   1930e:	85 c0                	test   %eax,%eax
   19310:	74 3d                	je     1934f <prepend_alloc+0x538>
   19312:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19319:	48 8b 40 10          	mov    0x10(%rax),%rax
   1931d:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   19321:	0f 94 c0             	sete   %al
   19324:	0f b6 c0             	movzbl %al,%eax
   19327:	48 85 c0             	test   %rax,%rax
   1932a:	74 23                	je     1934f <prepend_alloc+0x538>
   1932c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19330:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   19337:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1933b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19342:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   19346:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1934a:	e9 f2 00 00 00       	jmp    19441 <prepend_alloc+0x62a>
   1934f:	e8 d7 61 01 00       	call   2f52b <abort>
   19354:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19358:	48 83 c0 28          	add    $0x28,%rax
   1935c:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   19363:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1936a:	48 8b 00             	mov    (%rax),%rax
   1936d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   19374:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1937b:	00 
   1937c:	75 4f                	jne    193cd <prepend_alloc+0x5b6>
   1937e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19382:	48 83 c0 20          	add    $0x20,%rax
   19386:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1938d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   19394:	48 8b 00             	mov    (%rax),%rax
   19397:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1939e:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   193a5:	00 
   193a6:	0f 84 95 00 00 00    	je     19441 <prepend_alloc+0x62a>
   193ac:	eb 1f                	jmp    193cd <prepend_alloc+0x5b6>
   193ae:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   193b5:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   193bc:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   193c3:	48 8b 00             	mov    (%rax),%rax
   193c6:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   193cd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   193d4:	48 83 c0 28          	add    $0x28,%rax
   193d8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   193df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   193e6:	48 8b 00             	mov    (%rax),%rax
   193e9:	48 85 c0             	test   %rax,%rax
   193ec:	75 c0                	jne    193ae <prepend_alloc+0x597>
   193ee:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   193f5:	48 83 c0 20          	add    $0x20,%rax
   193f9:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   19400:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   19407:	48 8b 00             	mov    (%rax),%rax
   1940a:	48 85 c0             	test   %rax,%rax
   1940d:	75 9f                	jne    193ae <prepend_alloc+0x597>
   1940f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19416:	48 8b 40 18          	mov    0x18(%rax),%rax
   1941a:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   19421:	0f 93 c0             	setae  %al
   19424:	0f b6 c0             	movzbl %al,%eax
   19427:	48 85 c0             	test   %rax,%rax
   1942a:	74 10                	je     1943c <prepend_alloc+0x625>
   1942c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   19433:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1943a:	eb 05                	jmp    19441 <prepend_alloc+0x62a>
   1943c:	e8 ea 60 01 00       	call   2f52b <abort>
   19441:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   19446:	0f 84 b0 01 00 00    	je     195fc <prepend_alloc+0x7e5>
   1944c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19450:	8b 40 38             	mov    0x38(%rax),%eax
   19453:	89 c0                	mov    %eax,%eax
   19455:	48 83 c0 4a          	add    $0x4a,%rax
   19459:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19460:	00 
   19461:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19468:	48 01 d0             	add    %rdx,%rax
   1946b:	48 83 c0 08          	add    $0x8,%rax
   1946f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   19473:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19477:	48 8b 00             	mov    (%rax),%rax
   1947a:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1947e:	75 46                	jne    194c6 <prepend_alloc+0x6af>
   19480:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19484:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1948b:	48 89 10             	mov    %rdx,(%rax)
   1948e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19492:	48 8b 00             	mov    (%rax),%rax
   19495:	48 85 c0             	test   %rax,%rax
   19498:	75 7b                	jne    19515 <prepend_alloc+0x6fe>
   1949a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   194a1:	8b 50 04             	mov    0x4(%rax),%edx
   194a4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   194a8:	8b 40 38             	mov    0x38(%rax),%eax
   194ab:	be 01 00 00 00       	mov    $0x1,%esi
   194b0:	89 c1                	mov    %eax,%ecx
   194b2:	d3 e6                	shl    %cl,%esi
   194b4:	89 f0                	mov    %esi,%eax
   194b6:	f7 d0                	not    %eax
   194b8:	21 c2                	and    %eax,%edx
   194ba:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   194c1:	89 50 04             	mov    %edx,0x4(%rax)
   194c4:	eb 4f                	jmp    19515 <prepend_alloc+0x6fe>
   194c6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   194cd:	48 8b 40 18          	mov    0x18(%rax),%rax
   194d1:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   194d5:	0f 93 c0             	setae  %al
   194d8:	0f b6 c0             	movzbl %al,%eax
   194db:	48 85 c0             	test   %rax,%rax
   194de:	74 30                	je     19510 <prepend_alloc+0x6f9>
   194e0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   194e4:	48 8b 40 20          	mov    0x20(%rax),%rax
   194e8:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   194ec:	75 11                	jne    194ff <prepend_alloc+0x6e8>
   194ee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   194f2:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   194f9:	48 89 50 20          	mov    %rdx,0x20(%rax)
   194fd:	eb 16                	jmp    19515 <prepend_alloc+0x6fe>
   194ff:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   19503:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1950a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1950e:	eb 05                	jmp    19515 <prepend_alloc+0x6fe>
   19510:	e8 16 60 01 00       	call   2f52b <abort>
   19515:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1951c:	00 
   1951d:	0f 84 d9 00 00 00    	je     195fc <prepend_alloc+0x7e5>
   19523:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1952a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1952e:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   19535:	0f 93 c0             	setae  %al
   19538:	0f b6 c0             	movzbl %al,%eax
   1953b:	48 85 c0             	test   %rax,%rax
   1953e:	0f 84 b3 00 00 00    	je     195f7 <prepend_alloc+0x7e0>
   19544:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1954b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1954f:	48 89 50 30          	mov    %rdx,0x30(%rax)
   19553:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19557:	48 8b 40 20          	mov    0x20(%rax),%rax
   1955b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1955f:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   19564:	74 3f                	je     195a5 <prepend_alloc+0x78e>
   19566:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1956d:	48 8b 40 18          	mov    0x18(%rax),%rax
   19571:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   19575:	0f 93 c0             	setae  %al
   19578:	0f b6 c0             	movzbl %al,%eax
   1957b:	48 85 c0             	test   %rax,%rax
   1957e:	74 20                	je     195a0 <prepend_alloc+0x789>
   19580:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19587:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1958b:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1958f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19593:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1959a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1959e:	eb 05                	jmp    195a5 <prepend_alloc+0x78e>
   195a0:	e8 86 5f 01 00       	call   2f52b <abort>
   195a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   195a9:	48 8b 40 28          	mov    0x28(%rax),%rax
   195ad:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   195b1:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   195b6:	74 44                	je     195fc <prepend_alloc+0x7e5>
   195b8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   195bf:	48 8b 40 18          	mov    0x18(%rax),%rax
   195c3:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   195c7:	0f 93 c0             	setae  %al
   195ca:	0f b6 c0             	movzbl %al,%eax
   195cd:	48 85 c0             	test   %rax,%rax
   195d0:	74 20                	je     195f2 <prepend_alloc+0x7db>
   195d2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   195d9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   195dd:	48 89 50 28          	mov    %rdx,0x28(%rax)
   195e1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   195e5:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   195ec:	48 89 50 30          	mov    %rdx,0x30(%rax)
   195f0:	eb 0a                	jmp    195fc <prepend_alloc+0x7e5>
   195f2:	e8 34 5f 01 00       	call   2f52b <abort>
   195f7:	e8 2f 5f 01 00       	call   2f52b <abort>
   195fc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   19600:	48 01 85 28 ff ff ff 	add    %rax,-0xd8(%rbp)
   19607:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1960b:	48 01 85 30 ff ff ff 	add    %rax,-0xd0(%rbp)
   19612:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   19619:	48 8b 40 08          	mov    0x8(%rax),%rax
   1961d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   19621:	48 89 c2             	mov    %rax,%rdx
   19624:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1962b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1962f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   19636:	48 83 c8 01          	or     $0x1,%rax
   1963a:	48 89 c2             	mov    %rax,%rdx
   1963d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19644:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19648:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1964f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   19656:	48 01 c2             	add    %rax,%rdx
   19659:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   19660:	48 89 02             	mov    %rax,(%rdx)
   19663:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1966a:	48 c1 e8 03          	shr    $0x3,%rax
   1966e:	48 83 f8 1f          	cmp    $0x1f,%rax
   19672:	0f 87 18 01 00 00    	ja     19790 <prepend_alloc+0x979>
   19678:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1967f:	48 c1 e8 03          	shr    $0x3,%rax
   19683:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   19689:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1968f:	01 c0                	add    %eax,%eax
   19691:	89 c0                	mov    %eax,%eax
   19693:	48 83 c0 08          	add    $0x8,%rax
   19697:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1969e:	00 
   1969f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   196a6:	48 01 d0             	add    %rdx,%rax
   196a9:	48 83 c0 08          	add    $0x8,%rax
   196ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   196b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   196b5:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   196bc:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
   196c3:	1f 
   196c4:	77 05                	ja     196cb <prepend_alloc+0x8b4>
   196c6:	e8 60 5e 01 00       	call   2f52b <abort>
   196cb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   196d2:	8b 10                	mov    (%rax),%edx
   196d4:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   196da:	be 01 00 00 00       	mov    $0x1,%esi
   196df:	89 c1                	mov    %eax,%ecx
   196e1:	d3 e6                	shl    %cl,%esi
   196e3:	89 f0                	mov    %esi,%eax
   196e5:	21 d0                	and    %edx,%eax
   196e7:	85 c0                	test   %eax,%eax
   196e9:	75 27                	jne    19712 <prepend_alloc+0x8fb>
   196eb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   196f2:	8b 10                	mov    (%rax),%edx
   196f4:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   196fa:	be 01 00 00 00       	mov    $0x1,%esi
   196ff:	89 c1                	mov    %eax,%ecx
   19701:	d3 e6                	shl    %cl,%esi
   19703:	89 f0                	mov    %esi,%eax
   19705:	09 c2                	or     %eax,%edx
   19707:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1970e:	89 10                	mov    %edx,(%rax)
   19710:	eb 37                	jmp    19749 <prepend_alloc+0x932>
   19712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19716:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1971a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19721:	48 8b 40 18          	mov    0x18(%rax),%rax
   19725:	48 39 c2             	cmp    %rax,%rdx
   19728:	0f 93 c0             	setae  %al
   1972b:	0f b6 c0             	movzbl %al,%eax
   1972e:	48 85 c0             	test   %rax,%rax
   19731:	74 11                	je     19744 <prepend_alloc+0x92d>
   19733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19737:	48 8b 40 10          	mov    0x10(%rax),%rax
   1973b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   19742:	eb 05                	jmp    19749 <prepend_alloc+0x932>
   19744:	e8 e2 5d 01 00       	call   2f52b <abort>
   19749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1974d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   19754:	48 89 50 10          	mov    %rdx,0x10(%rax)
   19758:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1975f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   19766:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1976a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19771:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   19778:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1977c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19783:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19787:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1978b:	e9 f1 02 00 00       	jmp    19a81 <prepend_alloc+0xc6a>
   19790:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19797:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1979b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   197a2:	48 c1 e8 08          	shr    $0x8,%rax
   197a6:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   197ac:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
   197b3:	75 0c                	jne    197c1 <prepend_alloc+0x9aa>
   197b5:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
   197bc:	00 00 00 
   197bf:	eb 5d                	jmp    1981e <prepend_alloc+0xa07>
   197c1:	81 bd 1c ff ff ff ff 	cmpl   $0xffff,-0xe4(%rbp)
   197c8:	ff 00 00 
   197cb:	76 0c                	jbe    197d9 <prepend_alloc+0x9c2>
   197cd:	c7 85 14 ff ff ff 1f 	movl   $0x1f,-0xec(%rbp)
   197d4:	00 00 00 
   197d7:	eb 45                	jmp    1981e <prepend_alloc+0xa07>
   197d9:	0f bd 85 1c ff ff ff 	bsr    -0xe4(%rbp),%eax
   197e0:	83 f0 1f             	xor    $0x1f,%eax
   197e3:	ba 1f 00 00 00       	mov    $0x1f,%edx
   197e8:	29 c2                	sub    %eax,%edx
   197ea:	89 d0                	mov    %edx,%eax
   197ec:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
   197f2:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   197f8:	8d 34 00             	lea    (%rax,%rax,1),%esi
   197fb:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   19801:	83 c0 07             	add    $0x7,%eax
   19804:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1980b:	89 c1                	mov    %eax,%ecx
   1980d:	48 d3 ea             	shr    %cl,%rdx
   19810:	48 89 d0             	mov    %rdx,%rax
   19813:	83 e0 01             	and    $0x1,%eax
   19816:	01 f0                	add    %esi,%eax
   19818:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
   1981e:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   19824:	48 83 c0 4a          	add    $0x4a,%rax
   19828:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1982f:	00 
   19830:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19837:	48 01 d0             	add    %rdx,%rax
   1983a:	48 83 c0 08          	add    $0x8,%rax
   1983e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   19842:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19846:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   1984c:	89 50 38             	mov    %edx,0x38(%rax)
   1984f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19853:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1985a:	00 
   1985b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1985f:	48 8b 50 28          	mov    0x28(%rax),%rdx
   19863:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19867:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1986b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19872:	8b 50 04             	mov    0x4(%rax),%edx
   19875:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1987b:	be 01 00 00 00       	mov    $0x1,%esi
   19880:	89 c1                	mov    %eax,%ecx
   19882:	d3 e6                	shl    %cl,%esi
   19884:	89 f0                	mov    %esi,%eax
   19886:	21 d0                	and    %edx,%eax
   19888:	85 c0                	test   %eax,%eax
   1988a:	75 5f                	jne    198eb <prepend_alloc+0xad4>
   1988c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19893:	8b 50 04             	mov    0x4(%rax),%edx
   19896:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   1989c:	be 01 00 00 00       	mov    $0x1,%esi
   198a1:	89 c1                	mov    %eax,%ecx
   198a3:	d3 e6                	shl    %cl,%esi
   198a5:	89 f0                	mov    %esi,%eax
   198a7:	09 c2                	or     %eax,%edx
   198a9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   198b0:	89 50 04             	mov    %edx,0x4(%rax)
   198b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   198b7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   198bb:	48 89 10             	mov    %rdx,(%rax)
   198be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   198c6:	48 89 50 30          	mov    %rdx,0x30(%rax)
   198ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   198d2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   198d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198da:	48 8b 50 18          	mov    0x18(%rax),%rdx
   198de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198e2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   198e6:	e9 96 01 00 00       	jmp    19a81 <prepend_alloc+0xc6a>
   198eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   198ef:	48 8b 00             	mov    (%rax),%rax
   198f2:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   198f9:	83 bd 14 ff ff ff 1f 	cmpl   $0x1f,-0xec(%rbp)
   19900:	74 13                	je     19915 <prepend_alloc+0xafe>
   19902:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   19908:	d1 e8                	shr    %eax
   1990a:	ba 39 00 00 00       	mov    $0x39,%edx
   1990f:	29 c2                	sub    %eax,%edx
   19911:	89 d0                	mov    %edx,%eax
   19913:	eb 05                	jmp    1991a <prepend_alloc+0xb03>
   19915:	b8 00 00 00 00       	mov    $0x0,%eax
   1991a:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   19921:	89 c1                	mov    %eax,%ecx
   19923:	48 d3 e2             	shl    %cl,%rdx
   19926:	48 89 d0             	mov    %rdx,%rax
   19929:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   19930:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   19937:	48 8b 40 08          	mov    0x8(%rax),%rax
   1993b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1993f:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
   19946:	0f 84 a2 00 00 00    	je     199ee <prepend_alloc+0xbd7>
   1994c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   19953:	48 c1 e8 3f          	shr    $0x3f,%rax
   19957:	48 83 c0 04          	add    $0x4,%rax
   1995b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19962:	00 
   19963:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1996a:	48 01 d0             	add    %rdx,%rax
   1996d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19971:	48 d1 a5 60 ff ff ff 	shlq   -0xa0(%rbp)
   19978:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1997c:	48 8b 00             	mov    (%rax),%rax
   1997f:	48 85 c0             	test   %rax,%rax
   19982:	74 10                	je     19994 <prepend_alloc+0xb7d>
   19984:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19988:	48 8b 00             	mov    (%rax),%rax
   1998b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   19992:	eb 9c                	jmp    19930 <prepend_alloc+0xb19>
   19994:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1999b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1999f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   199a3:	0f 93 c0             	setae  %al
   199a6:	0f b6 c0             	movzbl %al,%eax
   199a9:	48 85 c0             	test   %rax,%rax
   199ac:	74 3b                	je     199e9 <prepend_alloc+0xbd2>
   199ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   199b2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   199b6:	48 89 10             	mov    %rdx,(%rax)
   199b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199bd:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   199c4:	48 89 50 30          	mov    %rdx,0x30(%rax)
   199c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199cc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   199d0:	48 89 50 18          	mov    %rdx,0x18(%rax)
   199d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199d8:	48 8b 50 18          	mov    0x18(%rax),%rdx
   199dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199e0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   199e4:	e9 98 00 00 00       	jmp    19a81 <prepend_alloc+0xc6a>
   199e9:	e8 3d 5b 01 00       	call   2f52b <abort>
   199ee:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   199f5:	48 8b 40 10          	mov    0x10(%rax),%rax
   199f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   199fd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19a04:	48 8b 40 18          	mov    0x18(%rax),%rax
   19a08:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)
   19a0f:	0f 93 c0             	setae  %al
   19a12:	0f b6 c0             	movzbl %al,%eax
   19a15:	48 85 c0             	test   %rax,%rax
   19a18:	74 62                	je     19a7c <prepend_alloc+0xc65>
   19a1a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19a21:	48 8b 40 18          	mov    0x18(%rax),%rax
   19a25:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   19a29:	0f 93 c0             	setae  %al
   19a2c:	0f b6 c0             	movzbl %al,%eax
   19a2f:	48 85 c0             	test   %rax,%rax
   19a32:	74 48                	je     19a7c <prepend_alloc+0xc65>
   19a34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a38:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19a3c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19a40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a44:	48 8b 50 18          	mov    0x18(%rax),%rdx
   19a48:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   19a4f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   19a53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19a57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19a5b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   19a5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19a63:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   19a6a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19a6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19a72:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   19a79:	00 
   19a7a:	eb 05                	jmp    19a81 <prepend_alloc+0xc6a>
   19a7c:	e8 aa 5a 01 00       	call   2f52b <abort>
   19a81:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   19a88:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19a8f:	48 89 d6             	mov    %rdx,%rsi
   19a92:	48 89 c7             	mov    %rax,%rdi
   19a95:	e8 e7 dd ff ff       	call   17881 <do_check_free_chunk>
   19a9a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   19aa1:	48 8d 48 10          	lea    0x10(%rax),%rcx
   19aa5:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   19aac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19ab3:	48 89 ce             	mov    %rcx,%rsi
   19ab6:	48 89 c7             	mov    %rax,%rdi
   19ab9:	e8 38 df ff ff       	call   179f6 <do_check_malloced_chunk>
   19abe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   19ac5:	48 83 c0 10          	add    $0x10,%rax
   19ac9:	c9                   	leave  
   19aca:	c3                   	ret    

0000000000019acb <add_segment>:
   19acb:	f3 0f 1e fa          	endbr64 
   19acf:	55                   	push   %rbp
   19ad0:	48 89 e5             	mov    %rsp,%rbp
   19ad3:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   19ada:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   19ae1:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
   19ae8:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   19aef:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
   19af5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19afc:	48 8b 40 28          	mov    0x28(%rax),%rax
   19b00:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   19b07:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   19b0e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19b15:	48 89 d6             	mov    %rdx,%rsi
   19b18:	48 89 c7             	mov    %rax,%rdi
   19b1b:	e8 33 d8 ff ff       	call   17353 <segment_holding>
   19b20:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   19b27:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   19b2e:	48 8b 10             	mov    (%rax),%rdx
   19b31:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   19b38:	48 8b 40 08          	mov    0x8(%rax),%rax
   19b3c:	48 01 d0             	add    %rdx,%rax
   19b3f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   19b46:	48 c7 85 78 ff ff ff 	movq   $0x30,-0x88(%rbp)
   19b4d:	30 00 00 00 
   19b51:	48 c7 c0 d1 ff ff ff 	mov    $0xffffffffffffffd1,%rax
   19b58:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
   19b5f:	48 89 c2             	mov    %rax,%rdx
   19b62:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   19b69:	48 01 d0             	add    %rdx,%rax
   19b6c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   19b70:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   19b74:	48 83 c0 10          	add    $0x10,%rax
   19b78:	83 e0 0f             	and    $0xf,%eax
   19b7b:	48 85 c0             	test   %rax,%rax
   19b7e:	74 10                	je     19b90 <add_segment+0xc5>
   19b80:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   19b84:	48 83 c0 10          	add    $0x10,%rax
   19b88:	48 f7 d8             	neg    %rax
   19b8b:	83 e0 0f             	and    $0xf,%eax
   19b8e:	eb 05                	jmp    19b95 <add_segment+0xca>
   19b90:	b8 00 00 00 00       	mov    $0x0,%eax
   19b95:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   19b99:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   19b9d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19ba1:	48 01 d0             	add    %rdx,%rax
   19ba4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   19ba8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   19baf:	48 83 c0 20          	add    $0x20,%rax
   19bb3:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   19bb7:	73 09                	jae    19bc2 <add_segment+0xf7>
   19bb9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   19bc0:	eb 04                	jmp    19bc6 <add_segment+0xfb>
   19bc2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   19bc6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   19bca:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19bce:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   19bd2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19bd6:	48 83 c0 10          	add    $0x10,%rax
   19bda:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   19bde:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   19be2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19be9:	48 01 d0             	add    %rdx,%rax
   19bec:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   19bf0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19bf4:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   19bfb:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
   19c02:	00 00 00 
   19c05:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   19c0c:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   19c10:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   19c17:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19c1e:	48 89 ce             	mov    %rcx,%rsi
   19c21:	48 89 c7             	mov    %rax,%rdi
   19c24:	e8 f0 f0 ff ff       	call   18d19 <init_top>
   19c29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19c2d:	83 e0 0f             	and    $0xf,%eax
   19c30:	48 85 c0             	test   %rax,%rax
   19c33:	74 05                	je     19c3a <add_segment+0x16f>
   19c35:	e8 f1 58 01 00       	call   2f52b <abort>
   19c3a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19c41:	48 83 c8 03          	or     $0x3,%rax
   19c45:	48 89 c2             	mov    %rax,%rdx
   19c48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19c4c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19c50:	48 8b 0d a9 23 05 00 	mov    0x523a9(%rip),%rcx        # 6c000 <mparams>
   19c57:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   19c5e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   19c62:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19c69:	48 01 f0             	add    %rsi,%rax
   19c6c:	48 31 ca             	xor    %rcx,%rdx
   19c6f:	48 89 10             	mov    %rdx,(%rax)
   19c72:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   19c76:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
   19c7d:	48 8b 86 78 03 00 00 	mov    0x378(%rsi),%rax
   19c84:	48 8b 96 80 03 00 00 	mov    0x380(%rsi),%rdx
   19c8b:	48 89 01             	mov    %rax,(%rcx)
   19c8e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   19c92:	48 8b 86 88 03 00 00 	mov    0x388(%rsi),%rax
   19c99:	48 8b 96 90 03 00 00 	mov    0x390(%rsi),%rdx
   19ca0:	48 89 41 10          	mov    %rax,0x10(%rcx)
   19ca4:	48 89 51 18          	mov    %rdx,0x18(%rcx)
   19ca8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19caf:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   19cb6:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
   19cbd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19cc4:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   19ccb:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
   19cd2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19cd9:	8b 95 04 ff ff ff    	mov    -0xfc(%rbp),%edx
   19cdf:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
   19ce5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19cec:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   19cf0:	48 89 90 88 03 00 00 	mov    %rdx,0x388(%rax)
   19cf7:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   19cfe:	48 83 c0 08          	add    $0x8,%rax
   19d02:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   19d06:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   19d0d:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
   19d14:	00 
   19d15:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
   19d1c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19d20:	48 83 c0 08          	add    $0x8,%rax
   19d24:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   19d2b:	76 0d                	jbe    19d3a <add_segment+0x26f>
   19d2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19d31:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   19d38:	eb bd                	jmp    19cf7 <add_segment+0x22c>
   19d3a:	90                   	nop
   19d3b:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
   19d42:	7f 05                	jg     19d49 <add_segment+0x27e>
   19d44:	e8 e2 57 01 00       	call   2f52b <abort>
   19d49:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19d4d:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
   19d54:	0f 84 5f 04 00 00    	je     1a1b9 <add_segment+0x6ee>
   19d5a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   19d61:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   19d65:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19d69:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
   19d70:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   19d74:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19d78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d7c:	48 01 d0             	add    %rdx,%rax
   19d7f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   19d83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19d87:	48 8b 40 08          	mov    0x8(%rax),%rax
   19d8b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   19d8f:	48 89 c2             	mov    %rax,%rdx
   19d92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19d96:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19d9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d9e:	48 83 c8 01          	or     $0x1,%rax
   19da2:	48 89 c2             	mov    %rax,%rdx
   19da5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19da9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19dad:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19db1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19db5:	48 01 c2             	add    %rax,%rdx
   19db8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19dbc:	48 89 02             	mov    %rax,(%rdx)
   19dbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19dc3:	48 c1 e8 03          	shr    $0x3,%rax
   19dc7:	48 83 f8 1f          	cmp    $0x1f,%rax
   19dcb:	0f 87 06 01 00 00    	ja     19ed7 <add_segment+0x40c>
   19dd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19dd5:	48 c1 e8 03          	shr    $0x3,%rax
   19dd9:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   19ddf:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   19de5:	01 c0                	add    %eax,%eax
   19de7:	89 c0                	mov    %eax,%eax
   19de9:	48 83 c0 08          	add    $0x8,%rax
   19ded:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19df4:	00 
   19df5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19dfc:	48 01 d0             	add    %rdx,%rax
   19dff:	48 83 c0 08          	add    $0x8,%rax
   19e03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e0b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   19e12:	48 83 7d c8 1f       	cmpq   $0x1f,-0x38(%rbp)
   19e17:	77 05                	ja     19e1e <add_segment+0x353>
   19e19:	e8 0d 57 01 00       	call   2f52b <abort>
   19e1e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19e25:	8b 10                	mov    (%rax),%edx
   19e27:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   19e2d:	be 01 00 00 00       	mov    $0x1,%esi
   19e32:	89 c1                	mov    %eax,%ecx
   19e34:	d3 e6                	shl    %cl,%esi
   19e36:	89 f0                	mov    %esi,%eax
   19e38:	21 d0                	and    %edx,%eax
   19e3a:	85 c0                	test   %eax,%eax
   19e3c:	75 27                	jne    19e65 <add_segment+0x39a>
   19e3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19e45:	8b 10                	mov    (%rax),%edx
   19e47:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   19e4d:	be 01 00 00 00       	mov    $0x1,%esi
   19e52:	89 c1                	mov    %eax,%ecx
   19e54:	d3 e6                	shl    %cl,%esi
   19e56:	89 f0                	mov    %esi,%eax
   19e58:	09 c2                	or     %eax,%edx
   19e5a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19e61:	89 10                	mov    %edx,(%rax)
   19e63:	eb 37                	jmp    19e9c <add_segment+0x3d1>
   19e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e69:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19e6d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19e74:	48 8b 40 18          	mov    0x18(%rax),%rax
   19e78:	48 39 c2             	cmp    %rax,%rdx
   19e7b:	0f 93 c0             	setae  %al
   19e7e:	0f b6 c0             	movzbl %al,%eax
   19e81:	48 85 c0             	test   %rax,%rax
   19e84:	74 11                	je     19e97 <add_segment+0x3cc>
   19e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e8a:	48 8b 40 10          	mov    0x10(%rax),%rax
   19e8e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   19e95:	eb 05                	jmp    19e9c <add_segment+0x3d1>
   19e97:	e8 8f 56 01 00       	call   2f52b <abort>
   19e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ea0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19ea4:	48 89 50 10          	mov    %rdx,0x10(%rax)
   19ea8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   19eaf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19eb3:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19eb7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19ebb:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   19ec2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   19ec6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19eca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19ece:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19ed2:	e9 e2 02 00 00       	jmp    1a1b9 <add_segment+0x6ee>
   19ed7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19edb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   19edf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19ee3:	48 c1 e8 08          	shr    $0x8,%rax
   19ee7:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   19eed:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%rbp)
   19ef4:	75 0c                	jne    19f02 <add_segment+0x437>
   19ef6:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
   19efd:	00 00 00 
   19f00:	eb 5a                	jmp    19f5c <add_segment+0x491>
   19f02:	81 bd 34 ff ff ff ff 	cmpl   $0xffff,-0xcc(%rbp)
   19f09:	ff 00 00 
   19f0c:	76 0c                	jbe    19f1a <add_segment+0x44f>
   19f0e:	c7 85 30 ff ff ff 1f 	movl   $0x1f,-0xd0(%rbp)
   19f15:	00 00 00 
   19f18:	eb 42                	jmp    19f5c <add_segment+0x491>
   19f1a:	0f bd 85 34 ff ff ff 	bsr    -0xcc(%rbp),%eax
   19f21:	83 f0 1f             	xor    $0x1f,%eax
   19f24:	ba 1f 00 00 00       	mov    $0x1f,%edx
   19f29:	29 c2                	sub    %eax,%edx
   19f2b:	89 d0                	mov    %edx,%eax
   19f2d:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
   19f33:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   19f39:	8d 34 00             	lea    (%rax,%rax,1),%esi
   19f3c:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   19f42:	83 c0 07             	add    $0x7,%eax
   19f45:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19f49:	89 c1                	mov    %eax,%ecx
   19f4b:	48 d3 ea             	shr    %cl,%rdx
   19f4e:	48 89 d0             	mov    %rdx,%rax
   19f51:	83 e0 01             	and    $0x1,%eax
   19f54:	01 f0                	add    %esi,%eax
   19f56:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   19f5c:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   19f62:	48 83 c0 4a          	add    $0x4a,%rax
   19f66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19f6d:	00 
   19f6e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19f75:	48 01 d0             	add    %rdx,%rax
   19f78:	48 83 c0 08          	add    $0x8,%rax
   19f7c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f84:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   19f8a:	89 50 38             	mov    %edx,0x38(%rax)
   19f8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f91:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   19f98:	00 
   19f99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f9d:	48 8b 50 28          	mov    0x28(%rax),%rdx
   19fa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fa5:	48 89 50 20          	mov    %rdx,0x20(%rax)
   19fa9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19fb0:	8b 50 04             	mov    0x4(%rax),%edx
   19fb3:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   19fb9:	be 01 00 00 00       	mov    $0x1,%esi
   19fbe:	89 c1                	mov    %eax,%ecx
   19fc0:	d3 e6                	shl    %cl,%esi
   19fc2:	89 f0                	mov    %esi,%eax
   19fc4:	21 d0                	and    %edx,%eax
   19fc6:	85 c0                	test   %eax,%eax
   19fc8:	75 5f                	jne    1a029 <add_segment+0x55e>
   19fca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19fd1:	8b 50 04             	mov    0x4(%rax),%edx
   19fd4:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   19fda:	be 01 00 00 00       	mov    $0x1,%esi
   19fdf:	89 c1                	mov    %eax,%ecx
   19fe1:	d3 e6                	shl    %cl,%esi
   19fe3:	89 f0                	mov    %esi,%eax
   19fe5:	09 c2                	or     %eax,%edx
   19fe7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   19fee:	89 50 04             	mov    %edx,0x4(%rax)
   19ff1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ff5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19ff9:	48 89 10             	mov    %rdx,(%rax)
   19ffc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a000:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a004:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1a008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a00c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a010:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a014:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a018:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1a01c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a020:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1a024:	e9 90 01 00 00       	jmp    1a1b9 <add_segment+0x6ee>
   1a029:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a02d:	48 8b 00             	mov    (%rax),%rax
   1a030:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1a037:	83 bd 30 ff ff ff 1f 	cmpl   $0x1f,-0xd0(%rbp)
   1a03e:	74 13                	je     1a053 <add_segment+0x588>
   1a040:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1a046:	d1 e8                	shr    %eax
   1a048:	ba 39 00 00 00       	mov    $0x39,%edx
   1a04d:	29 c2                	sub    %eax,%edx
   1a04f:	89 d0                	mov    %edx,%eax
   1a051:	eb 05                	jmp    1a058 <add_segment+0x58d>
   1a053:	b8 00 00 00 00       	mov    $0x0,%eax
   1a058:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a05c:	89 c1                	mov    %eax,%ecx
   1a05e:	48 d3 e2             	shl    %cl,%rdx
   1a061:	48 89 d0             	mov    %rdx,%rax
   1a064:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1a06b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a072:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a076:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a07a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1a07e:	0f 84 a2 00 00 00    	je     1a126 <add_segment+0x65b>
   1a084:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1a08b:	48 c1 e8 3f          	shr    $0x3f,%rax
   1a08f:	48 83 c0 04          	add    $0x4,%rax
   1a093:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a09a:	00 
   1a09b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a0a2:	48 01 d0             	add    %rdx,%rax
   1a0a5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a0a9:	48 d1 a5 58 ff ff ff 	shlq   -0xa8(%rbp)
   1a0b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0b4:	48 8b 00             	mov    (%rax),%rax
   1a0b7:	48 85 c0             	test   %rax,%rax
   1a0ba:	74 10                	je     1a0cc <add_segment+0x601>
   1a0bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0c0:	48 8b 00             	mov    (%rax),%rax
   1a0c3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1a0ca:	eb 9f                	jmp    1a06b <add_segment+0x5a0>
   1a0cc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1a0d3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a0d7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1a0db:	0f 93 c0             	setae  %al
   1a0de:	0f b6 c0             	movzbl %al,%eax
   1a0e1:	48 85 c0             	test   %rax,%rax
   1a0e4:	74 3b                	je     1a121 <add_segment+0x656>
   1a0e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0ea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a0ee:	48 89 10             	mov    %rdx,(%rax)
   1a0f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a0f5:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a0fc:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1a100:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a104:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a108:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a10c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a110:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1a114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a118:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1a11c:	e9 98 00 00 00       	jmp    1a1b9 <add_segment+0x6ee>
   1a121:	e8 05 54 01 00       	call   2f52b <abort>
   1a126:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a12d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a131:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a135:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1a13c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a140:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1a147:	0f 93 c0             	setae  %al
   1a14a:	0f b6 c0             	movzbl %al,%eax
   1a14d:	48 85 c0             	test   %rax,%rax
   1a150:	74 62                	je     1a1b4 <add_segment+0x6e9>
   1a152:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1a159:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a15d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1a161:	0f 93 c0             	setae  %al
   1a164:	0f b6 c0             	movzbl %al,%eax
   1a167:	48 85 c0             	test   %rax,%rax
   1a16a:	74 48                	je     1a1b4 <add_segment+0x6e9>
   1a16c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a170:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a174:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a178:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a17c:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1a180:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a187:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1a18b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a18f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a193:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1a197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a19b:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a1a2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a1a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a1aa:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1a1b1:	00 
   1a1b2:	eb 05                	jmp    1a1b9 <add_segment+0x6ee>
   1a1b4:	e8 72 53 01 00       	call   2f52b <abort>
   1a1b9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1a1c0:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a1c4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1a1cb:	48 89 d6             	mov    %rdx,%rsi
   1a1ce:	48 89 c7             	mov    %rax,%rdi
   1a1d1:	e8 88 d4 ff ff       	call   1765e <do_check_top_chunk>
   1a1d6:	90                   	nop
   1a1d7:	c9                   	leave  
   1a1d8:	c3                   	ret    

000000000001a1d9 <sys_alloc>:
   1a1d9:	f3 0f 1e fa          	endbr64 
   1a1dd:	55                   	push   %rbp
   1a1de:	48 89 e5             	mov    %rsp,%rbp
   1a1e1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1a1e8:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   1a1ef:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
   1a1f6:	48 c7 85 60 ff ff ff 	movq   $0xffffffffffffffff,-0xa0(%rbp)
   1a1fd:	ff ff ff ff 
   1a201:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   1a208:	00 00 00 00 
   1a20c:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   1a213:	00 00 00 
   1a216:	48 8b 05 e3 1d 05 00 	mov    0x51de3(%rip),%rax        # 6c000 <mparams>
   1a21d:	48 85 c0             	test   %rax,%rax
   1a220:	75 07                	jne    1a229 <sys_alloc+0x50>
   1a222:	e8 f3 d1 ff ff       	call   1741a <init_mparams>
   1a227:	85 c0                	test   %eax,%eax
   1a229:	90                   	nop
   1a22a:	48 8b 15 df 1d 05 00 	mov    0x51ddf(%rip),%rdx        # 6c010 <mparams+0x10>
   1a231:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1a238:	48 01 d0             	add    %rdx,%rax
   1a23b:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1a23f:	48 8b 05 ca 1d 05 00 	mov    0x51dca(%rip),%rax        # 6c010 <mparams+0x10>
   1a246:	48 f7 d8             	neg    %rax
   1a249:	48 21 d0             	and    %rdx,%rax
   1a24c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1a250:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a254:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1a25b:	77 0a                	ja     1a267 <sys_alloc+0x8e>
   1a25d:	b8 00 00 00 00       	mov    $0x0,%eax
   1a262:	e9 41 09 00 00       	jmp    1aba8 <sys_alloc+0x9cf>
   1a267:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a26e:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1a275:	48 85 c0             	test   %rax,%rax
   1a278:	74 4b                	je     1a2c5 <sys_alloc+0xec>
   1a27a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a281:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1a288:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a28c:	48 01 d0             	add    %rdx,%rax
   1a28f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1a293:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a29a:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1a2a1:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1a2a5:	76 14                	jbe    1a2bb <sys_alloc+0xe2>
   1a2a7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a2ae:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1a2b5:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1a2b9:	76 0a                	jbe    1a2c5 <sys_alloc+0xec>
   1a2bb:	b8 00 00 00 00       	mov    $0x0,%eax
   1a2c0:	e9 e3 08 00 00       	jmp    1aba8 <sys_alloc+0x9cf>
   1a2c5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a2cc:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1a2d2:	83 e0 04             	and    $0x4,%eax
   1a2d5:	85 c0                	test   %eax,%eax
   1a2d7:	0f 85 37 03 00 00    	jne    1a614 <sys_alloc+0x43b>
   1a2dd:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
   1a2e4:	ff ff ff ff 
   1a2e8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a2ec:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1a2f3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a2fa:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a2fe:	48 85 c0             	test   %rax,%rax
   1a301:	74 1f                	je     1a322 <sys_alloc+0x149>
   1a303:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a30a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a30e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a315:	48 89 d6             	mov    %rdx,%rsi
   1a318:	48 89 c7             	mov    %rax,%rdi
   1a31b:	e8 33 d0 ff ff       	call   17353 <segment_holding>
   1a320:	eb 05                	jmp    1a327 <sys_alloc+0x14e>
   1a322:	b8 00 00 00 00       	mov    $0x0,%eax
   1a327:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1a32b:	b8 01 00 00 00       	mov    $0x1,%eax
   1a330:	87 05 b2 1c 05 00    	xchg   %eax,0x51cb2(%rip)        # 6bfe8 <malloc_global_mutex>
   1a336:	85 c0                	test   %eax,%eax
   1a338:	74 0c                	je     1a346 <sys_alloc+0x16d>
   1a33a:	48 8d 3d a7 1c 05 00 	lea    0x51ca7(%rip),%rdi        # 6bfe8 <malloc_global_mutex>
   1a341:	e8 d4 cf ff ff       	call   1731a <spin_acquire_lock>
   1a346:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1a34b:	0f 85 2f 01 00 00    	jne    1a480 <sys_alloc+0x2a7>
   1a351:	bf 00 00 00 00       	mov    $0x0,%edi
   1a356:	e8 59 ca ff ff       	call   16db4 <sbrk>
   1a35b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1a35f:	48 83 7d a0 ff       	cmpq   $0xffffffffffffffff,-0x60(%rbp)
   1a364:	0f 84 ad 01 00 00    	je     1a517 <sys_alloc+0x33e>
   1a36a:	48 8b 05 97 1c 05 00 	mov    0x51c97(%rip),%rax        # 6c008 <mparams+0x8>
   1a371:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1a375:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a379:	48 21 d0             	and    %rdx,%rax
   1a37c:	48 85 c0             	test   %rax,%rax
   1a37f:	74 30                	je     1a3b1 <sys_alloc+0x1d8>
   1a381:	48 8b 15 80 1c 05 00 	mov    0x51c80(%rip),%rdx        # 6c008 <mparams+0x8>
   1a388:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a38c:	48 01 d0             	add    %rdx,%rax
   1a38f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1a393:	48 8b 05 6e 1c 05 00 	mov    0x51c6e(%rip),%rax        # 6c008 <mparams+0x8>
   1a39a:	48 f7 d8             	neg    %rax
   1a39d:	48 21 c2             	and    %rax,%rdx
   1a3a0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a3a4:	48 29 c2             	sub    %rax,%rdx
   1a3a7:	48 89 d0             	mov    %rdx,%rax
   1a3aa:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
   1a3b1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a3b8:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1a3bf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a3c6:	48 01 d0             	add    %rdx,%rax
   1a3c9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1a3cd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a3d4:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1a3db:	0f 86 36 01 00 00    	jbe    1a517 <sys_alloc+0x33e>
   1a3e1:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1a3e8:	ff ff 7f 
   1a3eb:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1a3f2:	0f 87 1f 01 00 00    	ja     1a517 <sys_alloc+0x33e>
   1a3f8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a3ff:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1a406:	48 85 c0             	test   %rax,%rax
   1a409:	74 30                	je     1a43b <sys_alloc+0x262>
   1a40b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a412:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1a419:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1a41d:	0f 86 f4 00 00 00    	jbe    1a517 <sys_alloc+0x33e>
   1a423:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a42a:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
   1a431:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1a435:	0f 87 dc 00 00 00    	ja     1a517 <sys_alloc+0x33e>
   1a43b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a442:	48 89 c7             	mov    %rax,%rdi
   1a445:	e8 6a c9 ff ff       	call   16db4 <sbrk>
   1a44a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1a451:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a458:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1a45c:	0f 85 b5 00 00 00    	jne    1a517 <sys_alloc+0x33e>
   1a462:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a466:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a46d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a474:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1a47b:	e9 97 00 00 00       	jmp    1a517 <sys_alloc+0x33e>
   1a480:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a487:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a48b:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1a492:	48 29 c2             	sub    %rax,%rdx
   1a495:	48 8b 05 74 1b 05 00 	mov    0x51b74(%rip),%rax        # 6c010 <mparams+0x10>
   1a49c:	48 01 d0             	add    %rdx,%rax
   1a49f:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1a4a3:	48 8b 05 66 1b 05 00 	mov    0x51b66(%rip),%rax        # 6c010 <mparams+0x10>
   1a4aa:	48 f7 d8             	neg    %rax
   1a4ad:	48 21 d0             	and    %rdx,%rax
   1a4b0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1a4b7:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1a4be:	ff ff 7f 
   1a4c1:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1a4c8:	77 4d                	ja     1a517 <sys_alloc+0x33e>
   1a4ca:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a4d1:	48 89 c7             	mov    %rax,%rdi
   1a4d4:	e8 db c8 ff ff       	call   16db4 <sbrk>
   1a4d9:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1a4e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1a4e4:	48 8b 10             	mov    (%rax),%rdx
   1a4e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1a4eb:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a4ef:	48 01 d0             	add    %rdx,%rax
   1a4f2:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1a4f9:	75 1c                	jne    1a517 <sys_alloc+0x33e>
   1a4fb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a502:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a509:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a510:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1a517:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1a51e:	ff 
   1a51f:	0f 85 e4 00 00 00    	jne    1a609 <sys_alloc+0x430>
   1a525:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
   1a52c:	ff 
   1a52d:	0f 84 b0 00 00 00    	je     1a5e3 <sys_alloc+0x40a>
   1a533:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1a53a:	ff ff 7f 
   1a53d:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1a544:	0f 87 99 00 00 00    	ja     1a5e3 <sys_alloc+0x40a>
   1a54a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1a551:	48 83 c0 60          	add    $0x60,%rax
   1a555:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1a55c:	0f 83 81 00 00 00    	jae    1a5e3 <sys_alloc+0x40a>
   1a562:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1a569:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
   1a570:	48 89 c2             	mov    %rax,%rdx
   1a573:	48 8b 05 96 1a 05 00 	mov    0x51a96(%rip),%rax        # 6c010 <mparams+0x10>
   1a57a:	48 01 d0             	add    %rdx,%rax
   1a57d:	48 8d 50 5f          	lea    0x5f(%rax),%rdx
   1a581:	48 8b 05 88 1a 05 00 	mov    0x51a88(%rip),%rax        # 6c010 <mparams+0x10>
   1a588:	48 f7 d8             	neg    %rax
   1a58b:	48 21 d0             	and    %rdx,%rax
   1a58e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1a592:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1a599:	ff ff 7f 
   1a59c:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1a5a0:	77 41                	ja     1a5e3 <sys_alloc+0x40a>
   1a5a2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1a5a6:	48 89 c7             	mov    %rax,%rdi
   1a5a9:	e8 06 c8 ff ff       	call   16db4 <sbrk>
   1a5ae:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1a5b2:	48 83 7d b8 ff       	cmpq   $0xffffffffffffffff,-0x48(%rbp)
   1a5b7:	74 0d                	je     1a5c6 <sys_alloc+0x3ed>
   1a5b9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1a5bd:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
   1a5c4:	eb 1d                	jmp    1a5e3 <sys_alloc+0x40a>
   1a5c6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a5cd:	48 f7 d8             	neg    %rax
   1a5d0:	48 89 c7             	mov    %rax,%rdi
   1a5d3:	e8 dc c7 ff ff       	call   16db4 <sbrk>
   1a5d8:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
   1a5df:	ff ff ff ff 
   1a5e3:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
   1a5ea:	ff 
   1a5eb:	74 1c                	je     1a609 <sys_alloc+0x430>
   1a5ed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a5f4:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a5fb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a602:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1a609:	b8 00 00 00 00       	mov    $0x0,%eax
   1a60e:	89 05 d4 19 05 00    	mov    %eax,0x519d4(%rip)        # 6bfe8 <malloc_global_mutex>
   1a614:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1a61b:	ff 
   1a61c:	0f 85 b3 00 00 00    	jne    1a6d5 <sys_alloc+0x4fc>
   1a622:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1a629:	ff ff 7f 
   1a62c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1a630:	0f 87 9f 00 00 00    	ja     1a6d5 <sys_alloc+0x4fc>
   1a636:	48 c7 45 c0 ff ff ff 	movq   $0xffffffffffffffff,-0x40(%rbp)
   1a63d:	ff 
   1a63e:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,-0x38(%rbp)
   1a645:	ff 
   1a646:	b8 01 00 00 00       	mov    $0x1,%eax
   1a64b:	87 05 97 19 05 00    	xchg   %eax,0x51997(%rip)        # 6bfe8 <malloc_global_mutex>
   1a651:	85 c0                	test   %eax,%eax
   1a653:	74 0c                	je     1a661 <sys_alloc+0x488>
   1a655:	48 8d 3d 8c 19 05 00 	lea    0x5198c(%rip),%rdi        # 6bfe8 <malloc_global_mutex>
   1a65c:	e8 b9 cc ff ff       	call   1731a <spin_acquire_lock>
   1a661:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1a665:	48 89 c7             	mov    %rax,%rdi
   1a668:	e8 47 c7 ff ff       	call   16db4 <sbrk>
   1a66d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1a671:	bf 00 00 00 00       	mov    $0x0,%edi
   1a676:	e8 39 c7 ff ff       	call   16db4 <sbrk>
   1a67b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1a67f:	b8 00 00 00 00       	mov    $0x0,%eax
   1a684:	89 05 5e 19 05 00    	mov    %eax,0x5195e(%rip)        # 6bfe8 <malloc_global_mutex>
   1a68a:	48 83 7d c0 ff       	cmpq   $0xffffffffffffffff,-0x40(%rbp)
   1a68f:	74 44                	je     1a6d5 <sys_alloc+0x4fc>
   1a691:	48 83 7d c8 ff       	cmpq   $0xffffffffffffffff,-0x38(%rbp)
   1a696:	74 3d                	je     1a6d5 <sys_alloc+0x4fc>
   1a698:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a69c:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   1a6a0:	73 33                	jae    1a6d5 <sys_alloc+0x4fc>
   1a6a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a6a6:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
   1a6aa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1a6ae:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1a6b5:	48 83 c0 50          	add    $0x50,%rax
   1a6b9:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1a6bd:	76 16                	jbe    1a6d5 <sys_alloc+0x4fc>
   1a6bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a6c3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a6ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a6ce:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1a6d5:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
   1a6dc:	ff 
   1a6dd:	0f 84 b5 04 00 00    	je     1ab98 <sys_alloc+0x9bf>
   1a6e3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a6ea:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1a6f1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a6f8:	48 01 c2             	add    %rax,%rdx
   1a6fb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a702:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1a709:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a710:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1a717:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a71e:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
   1a725:	48 39 c2             	cmp    %rax,%rdx
   1a728:	76 1c                	jbe    1a746 <sys_alloc+0x56d>
   1a72a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a731:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
   1a738:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a73f:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
   1a746:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a74d:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a751:	48 85 c0             	test   %rax,%rax
   1a754:	0f 85 35 01 00 00    	jne    1a88f <sys_alloc+0x6b6>
   1a75a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a761:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a765:	48 85 c0             	test   %rax,%rax
   1a768:	74 14                	je     1a77e <sys_alloc+0x5a5>
   1a76a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a771:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a775:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1a77c:	73 12                	jae    1a790 <sys_alloc+0x5b7>
   1a77e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a785:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a78c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a790:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a797:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a79e:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
   1a7a5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a7ac:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a7b3:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
   1a7ba:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a7c1:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   1a7c7:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
   1a7cd:	48 8b 15 2c 18 05 00 	mov    0x5182c(%rip),%rdx        # 6c000 <mparams>
   1a7d4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a7db:	48 89 50 40          	mov    %rdx,0x40(%rax)
   1a7df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a7e6:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
   1a7ed:	ff 
   1a7ee:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a7f5:	48 89 c7             	mov    %rax,%rdi
   1a7f8:	e8 b9 e5 ff ff       	call   18db6 <init_bins>
   1a7fd:	48 8d 05 3c 18 05 00 	lea    0x5183c(%rip),%rax        # 6c040 <_gm_>
   1a804:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1a80b:	75 29                	jne    1a836 <sys_alloc+0x65d>
   1a80d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a814:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   1a818:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   1a81f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a826:	48 89 ce             	mov    %rcx,%rsi
   1a829:	48 89 c7             	mov    %rax,%rdi
   1a82c:	e8 e8 e4 ff ff       	call   18d19 <init_top>
   1a831:	e9 51 02 00 00       	jmp    1aa87 <sys_alloc+0x8ae>
   1a836:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a83d:	48 83 e8 10          	sub    $0x10,%rax
   1a841:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a845:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1a849:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1a84d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a854:	48 01 d0             	add    %rdx,%rax
   1a857:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a85b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a862:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a869:	48 01 d0             	add    %rdx,%rax
   1a86c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1a870:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
   1a874:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1a878:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a87f:	48 89 ce             	mov    %rcx,%rsi
   1a882:	48 89 c7             	mov    %rax,%rdi
   1a885:	e8 8f e4 ff ff       	call   18d19 <init_top>
   1a88a:	e9 f8 01 00 00       	jmp    1aa87 <sys_alloc+0x8ae>
   1a88f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a896:	48 05 78 03 00 00    	add    $0x378,%rax
   1a89c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1a8a0:	eb 0c                	jmp    1a8ae <sys_alloc+0x6d5>
   1a8a2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a8a6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a8aa:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1a8ae:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1a8b3:	74 1b                	je     1a8d0 <sys_alloc+0x6f7>
   1a8b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a8b9:	48 8b 10             	mov    (%rax),%rdx
   1a8bc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a8c0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a8c4:	48 01 d0             	add    %rdx,%rax
   1a8c7:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1a8ce:	75 d2                	jne    1a8a2 <sys_alloc+0x6c9>
   1a8d0:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1a8d5:	0f 84 a9 00 00 00    	je     1a984 <sys_alloc+0x7ab>
   1a8db:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a8df:	8b 40 18             	mov    0x18(%rax),%eax
   1a8e2:	83 e0 08             	and    $0x8,%eax
   1a8e5:	85 c0                	test   %eax,%eax
   1a8e7:	0f 85 97 00 00 00    	jne    1a984 <sys_alloc+0x7ab>
   1a8ed:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1a8f4:	0f 85 8a 00 00 00    	jne    1a984 <sys_alloc+0x7ab>
   1a8fa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a901:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a905:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a909:	48 8b 00             	mov    (%rax),%rax
   1a90c:	48 39 c2             	cmp    %rax,%rdx
   1a90f:	72 73                	jb     1a984 <sys_alloc+0x7ab>
   1a911:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a918:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1a91c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a920:	48 8b 08             	mov    (%rax),%rcx
   1a923:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a927:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a92b:	48 01 c8             	add    %rcx,%rax
   1a92e:	48 39 c2             	cmp    %rax,%rdx
   1a931:	73 51                	jae    1a984 <sys_alloc+0x7ab>
   1a933:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a937:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a93b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a942:	48 01 c2             	add    %rax,%rdx
   1a945:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a949:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1a94d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a954:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a958:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a95f:	48 01 c2             	add    %rax,%rdx
   1a962:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a969:	48 8b 48 28          	mov    0x28(%rax),%rcx
   1a96d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a974:	48 89 ce             	mov    %rcx,%rsi
   1a977:	48 89 c7             	mov    %rax,%rdi
   1a97a:	e8 9a e3 ff ff       	call   18d19 <init_top>
   1a97f:	e9 03 01 00 00       	jmp    1aa87 <sys_alloc+0x8ae>
   1a984:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a98b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a98f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1a996:	73 12                	jae    1a9aa <sys_alloc+0x7d1>
   1a998:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a99f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a9a6:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1a9aa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a9b1:	48 05 78 03 00 00    	add    $0x378,%rax
   1a9b7:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1a9bb:	eb 0c                	jmp    1a9c9 <sys_alloc+0x7f0>
   1a9bd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a9c1:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a9c5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1a9c9:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1a9ce:	74 1d                	je     1a9ed <sys_alloc+0x814>
   1a9d0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a9d4:	48 8b 00             	mov    (%rax),%rax
   1a9d7:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   1a9de:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a9e5:	48 01 ca             	add    %rcx,%rdx
   1a9e8:	48 39 d0             	cmp    %rdx,%rax
   1a9eb:	75 d0                	jne    1a9bd <sys_alloc+0x7e4>
   1a9ed:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   1a9f2:	74 70                	je     1aa64 <sys_alloc+0x88b>
   1a9f4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1a9f8:	8b 40 18             	mov    0x18(%rax),%eax
   1a9fb:	83 e0 08             	and    $0x8,%eax
   1a9fe:	85 c0                	test   %eax,%eax
   1aa00:	75 62                	jne    1aa64 <sys_alloc+0x88b>
   1aa02:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   1aa09:	75 59                	jne    1aa64 <sys_alloc+0x88b>
   1aa0b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aa0f:	48 8b 00             	mov    (%rax),%rax
   1aa12:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1aa16:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aa1a:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1aa21:	48 89 10             	mov    %rdx,(%rax)
   1aa24:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aa28:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1aa2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1aa33:	48 01 c2             	add    %rax,%rdx
   1aa36:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1aa3a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1aa3e:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1aa45:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1aa49:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
   1aa50:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aa57:	48 89 c7             	mov    %rax,%rdi
   1aa5a:	e8 b8 e3 ff ff       	call   18e17 <prepend_alloc>
   1aa5f:	e9 44 01 00 00       	jmp    1aba8 <sys_alloc+0x9cf>
   1aa64:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
   1aa6a:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1aa71:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
   1aa78:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aa7f:	48 89 c7             	mov    %rax,%rdi
   1aa82:	e8 44 f0 ff ff       	call   19acb <add_segment>
   1aa87:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aa8e:	48 8b 40 10          	mov    0x10(%rax),%rax
   1aa92:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1aa99:	0f 83 f9 00 00 00    	jae    1ab98 <sys_alloc+0x9bf>
   1aa9f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aaa6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1aaaa:	48 2b 85 40 ff ff ff 	sub    -0xc0(%rbp),%rax
   1aab1:	48 89 c2             	mov    %rax,%rdx
   1aab4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aabb:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1aabf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aac6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1aaca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1aace:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aad5:	48 8b 40 28          	mov    0x28(%rax),%rax
   1aad9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1aadd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1aae1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1aae8:	48 01 c2             	add    %rax,%rdx
   1aaeb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aaf2:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1aaf6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1aafd:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ab01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ab05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ab09:	48 83 c8 01          	or     $0x1,%rax
   1ab0d:	48 89 c2             	mov    %rax,%rdx
   1ab10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab14:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ab18:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ab1f:	48 83 c8 03          	or     $0x3,%rax
   1ab23:	48 89 c2             	mov    %rax,%rdx
   1ab26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab2a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ab2e:	48 8b 0d cb 14 05 00 	mov    0x514cb(%rip),%rcx        # 6c000 <mparams>
   1ab35:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1ab3c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1ab40:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ab47:	48 01 f0             	add    %rsi,%rax
   1ab4a:	48 31 ca             	xor    %rcx,%rdx
   1ab4d:	48 89 10             	mov    %rdx,(%rax)
   1ab50:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ab57:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1ab5b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ab62:	48 89 d6             	mov    %rdx,%rsi
   1ab65:	48 89 c7             	mov    %rax,%rdi
   1ab68:	e8 f1 ca ff ff       	call   1765e <do_check_top_chunk>
   1ab6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab71:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1ab75:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ab7c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ab83:	48 89 ce             	mov    %rcx,%rsi
   1ab86:	48 89 c7             	mov    %rax,%rdi
   1ab89:	e8 68 ce ff ff       	call   179f6 <do_check_malloced_chunk>
   1ab8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab92:	48 83 c0 10          	add    $0x10,%rax
   1ab96:	eb 10                	jmp    1aba8 <sys_alloc+0x9cf>
   1ab98:	e8 bc 6d 00 00       	call   21959 <__errno>
   1ab9d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1aba3:	b8 00 00 00 00       	mov    $0x0,%eax
   1aba8:	c9                   	leave  
   1aba9:	c3                   	ret    

000000000001abaa <release_unused_segments>:
   1abaa:	f3 0f 1e fa          	endbr64 
   1abae:	55                   	push   %rbp
   1abaf:	48 89 e5             	mov    %rsp,%rbp
   1abb2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1abb6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1abbd:	00 
   1abbe:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   1abc5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1abc9:	48 05 78 03 00 00    	add    $0x378,%rax
   1abcf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1abd3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1abd7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1abdb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1abdf:	eb 37                	jmp    1ac18 <release_unused_segments+0x6e>
   1abe1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abe5:	48 8b 00             	mov    (%rax),%rax
   1abe8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1abec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abf0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1abf4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1abf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abfc:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ac00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ac04:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   1ac08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac0c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1ac10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ac14:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ac18:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1ac1d:	75 c2                	jne    1abe1 <release_unused_segments+0x37>
   1ac1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac23:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
   1ac2a:	ff 
   1ac2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac2f:	5d                   	pop    %rbp
   1ac30:	c3                   	ret    

000000000001ac31 <sys_trim>:
   1ac31:	f3 0f 1e fa          	endbr64 
   1ac35:	55                   	push   %rbp
   1ac36:	48 89 e5             	mov    %rsp,%rbp
   1ac39:	48 83 ec 50          	sub    $0x50,%rsp
   1ac3d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1ac41:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1ac45:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1ac4c:	00 
   1ac4d:	48 8b 05 ac 13 05 00 	mov    0x513ac(%rip),%rax        # 6c000 <mparams>
   1ac54:	48 85 c0             	test   %rax,%rax
   1ac57:	75 07                	jne    1ac60 <sys_trim+0x2f>
   1ac59:	e8 bc c7 ff ff       	call   1741a <init_mparams>
   1ac5e:	85 c0                	test   %eax,%eax
   1ac60:	90                   	nop
   1ac61:	48 81 7d b0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x50(%rbp)
   1ac68:	ff 
   1ac69:	0f 87 df 01 00 00    	ja     1ae4e <sys_trim+0x21d>
   1ac6f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac73:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ac77:	48 85 c0             	test   %rax,%rax
   1ac7a:	0f 84 ce 01 00 00    	je     1ae4e <sys_trim+0x21d>
   1ac80:	48 83 45 b0 50       	addq   $0x50,-0x50(%rbp)
   1ac85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac89:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ac8d:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1ac91:	0f 83 8f 01 00 00    	jae    1ae26 <sys_trim+0x1f5>
   1ac97:	48 8b 05 72 13 05 00 	mov    0x51372(%rip),%rax        # 6c010 <mparams+0x10>
   1ac9e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1aca2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1aca6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1acaa:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
   1acae:	48 89 c2             	mov    %rax,%rdx
   1acb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1acb5:	48 01 d0             	add    %rdx,%rax
   1acb8:	48 83 e8 01          	sub    $0x1,%rax
   1acbc:	ba 00 00 00 00       	mov    $0x0,%edx
   1acc1:	48 f7 75 d8          	divq   -0x28(%rbp)
   1acc5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1acc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1accd:	48 0f af c2          	imul   %rdx,%rax
   1acd1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1acd5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1acd9:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1acdd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ace1:	48 89 d6             	mov    %rdx,%rsi
   1ace4:	48 89 c7             	mov    %rax,%rdi
   1ace7:	e8 67 c6 ff ff       	call   17353 <segment_holding>
   1acec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1acf0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1acf4:	8b 40 18             	mov    0x18(%rax),%eax
   1acf7:	83 e0 08             	and    $0x8,%eax
   1acfa:	85 c0                	test   %eax,%eax
   1acfc:	0f 85 ac 00 00 00    	jne    1adae <sys_trim+0x17d>
   1ad02:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1ad09:	ff ff 7f 
   1ad0c:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1ad10:	76 12                	jbe    1ad24 <sys_trim+0xf3>
   1ad12:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   1ad19:	00 00 80 
   1ad1c:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   1ad20:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1ad24:	b8 01 00 00 00       	mov    $0x1,%eax
   1ad29:	87 05 b9 12 05 00    	xchg   %eax,0x512b9(%rip)        # 6bfe8 <malloc_global_mutex>
   1ad2f:	85 c0                	test   %eax,%eax
   1ad31:	74 0c                	je     1ad3f <sys_trim+0x10e>
   1ad33:	48 8d 3d ae 12 05 00 	lea    0x512ae(%rip),%rdi        # 6bfe8 <malloc_global_mutex>
   1ad3a:	e8 db c5 ff ff       	call   1731a <spin_acquire_lock>
   1ad3f:	bf 00 00 00 00       	mov    $0x0,%edi
   1ad44:	e8 6b c0 ff ff       	call   16db4 <sbrk>
   1ad49:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ad4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ad51:	48 8b 10             	mov    (%rax),%rdx
   1ad54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ad58:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ad5c:	48 01 d0             	add    %rdx,%rax
   1ad5f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ad63:	75 3e                	jne    1ada3 <sys_trim+0x172>
   1ad65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ad69:	48 f7 d8             	neg    %rax
   1ad6c:	48 89 c7             	mov    %rax,%rdi
   1ad6f:	e8 40 c0 ff ff       	call   16db4 <sbrk>
   1ad74:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ad78:	bf 00 00 00 00       	mov    $0x0,%edi
   1ad7d:	e8 32 c0 ff ff       	call   16db4 <sbrk>
   1ad82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ad86:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
   1ad8b:	74 16                	je     1ada3 <sys_trim+0x172>
   1ad8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad91:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1ad95:	73 0c                	jae    1ada3 <sys_trim+0x172>
   1ad97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad9b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1ad9f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1ada3:	b8 00 00 00 00       	mov    $0x0,%eax
   1ada8:	89 05 3a 12 05 00    	mov    %eax,0x5123a(%rip)        # 6bfe8 <malloc_global_mutex>
   1adae:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1adb3:	74 71                	je     1ae26 <sys_trim+0x1f5>
   1adb5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adb9:	48 8b 40 08          	mov    0x8(%rax),%rax
   1adbd:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1adc1:	48 89 c2             	mov    %rax,%rdx
   1adc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adc8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1adcc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1add0:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
   1add7:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1addb:	48 89 c2             	mov    %rax,%rdx
   1adde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ade2:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
   1ade9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1aded:	48 8b 40 10          	mov    0x10(%rax),%rax
   1adf1:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
   1adf5:	48 89 c2             	mov    %rax,%rdx
   1adf8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1adfc:	48 8b 48 28          	mov    0x28(%rax),%rcx
   1ae00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae04:	48 89 ce             	mov    %rcx,%rsi
   1ae07:	48 89 c7             	mov    %rax,%rdi
   1ae0a:	e8 0a df ff ff       	call   18d19 <init_top>
   1ae0f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae13:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1ae17:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae1b:	48 89 d6             	mov    %rdx,%rsi
   1ae1e:	48 89 c7             	mov    %rax,%rdi
   1ae21:	e8 38 c8 ff ff       	call   1765e <do_check_top_chunk>
   1ae26:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1ae2b:	75 21                	jne    1ae4e <sys_trim+0x21d>
   1ae2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae31:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ae35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae39:	48 8b 40 30          	mov    0x30(%rax),%rax
   1ae3d:	48 39 c2             	cmp    %rax,%rdx
   1ae40:	76 0c                	jbe    1ae4e <sys_trim+0x21d>
   1ae42:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae46:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
   1ae4d:	ff 
   1ae4e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1ae53:	0f 95 c0             	setne  %al
   1ae56:	0f b6 c0             	movzbl %al,%eax
   1ae59:	c9                   	leave  
   1ae5a:	c3                   	ret    

000000000001ae5b <dispose_chunk>:
   1ae5b:	f3 0f 1e fa          	endbr64 
   1ae5f:	55                   	push   %rbp
   1ae60:	48 89 e5             	mov    %rsp,%rbp
   1ae63:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   1ae6a:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
   1ae71:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
   1ae78:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
   1ae7f:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1ae86:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1ae8d:	48 01 d0             	add    %rdx,%rax
   1ae90:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1ae97:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1ae9e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1aea2:	83 e0 01             	and    $0x1,%eax
   1aea5:	48 85 c0             	test   %rax,%rax
   1aea8:	0f 85 3f 07 00 00    	jne    1b5ed <dispose_chunk+0x792>
   1aeae:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1aeb5:	48 8b 00             	mov    (%rax),%rax
   1aeb8:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1aebf:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1aec6:	48 8b 40 08          	mov    0x8(%rax),%rax
   1aeca:	83 e0 03             	and    $0x3,%eax
   1aecd:	48 85 c0             	test   %rax,%rax
   1aed0:	75 21                	jne    1aef3 <dispose_chunk+0x98>
   1aed2:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1aed9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1aee0:	48 01 d0             	add    %rdx,%rax
   1aee3:	48 83 c0 20          	add    $0x20,%rax
   1aee7:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
   1aeee:	e9 9a 12 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1aef3:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1aefa:	48 f7 d8             	neg    %rax
   1aefd:	48 89 c2             	mov    %rax,%rdx
   1af00:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1af07:	48 01 d0             	add    %rdx,%rax
   1af0a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1af11:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1af18:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
   1af1f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1af26:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   1af2d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1af34:	48 8b 40 18          	mov    0x18(%rax),%rax
   1af38:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1af3f:	0f 93 c0             	setae  %al
   1af42:	0f b6 c0             	movzbl %al,%eax
   1af45:	48 85 c0             	test   %rax,%rax
   1af48:	0f 84 9a 06 00 00    	je     1b5e8 <dispose_chunk+0x78d>
   1af4e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1af55:	48 8b 40 20          	mov    0x20(%rax),%rax
   1af59:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1af60:	0f 84 06 06 00 00    	je     1b56c <dispose_chunk+0x711>
   1af66:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1af6d:	48 c1 e8 03          	shr    $0x3,%rax
   1af71:	48 83 f8 1f          	cmp    $0x1f,%rax
   1af75:	0f 87 f9 01 00 00    	ja     1b174 <dispose_chunk+0x319>
   1af7b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1af82:	48 8b 40 10          	mov    0x10(%rax),%rax
   1af86:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1af8d:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1af94:	48 8b 40 18          	mov    0x18(%rax),%rax
   1af98:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1af9f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1afa6:	48 c1 e8 03          	shr    $0x3,%rax
   1afaa:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   1afb0:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1afb7:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   1afbe:	75 05                	jne    1afc5 <dispose_chunk+0x16a>
   1afc0:	e8 66 45 01 00       	call   2f52b <abort>
   1afc5:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1afcc:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1afd3:	75 05                	jne    1afda <dispose_chunk+0x17f>
   1afd5:	e8 51 45 01 00       	call   2f52b <abort>
   1afda:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1afe1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1afe5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1afe9:	48 89 c2             	mov    %rax,%rdx
   1afec:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1aff2:	c1 e0 03             	shl    $0x3,%eax
   1aff5:	89 c0                	mov    %eax,%eax
   1aff7:	48 39 c2             	cmp    %rax,%rdx
   1affa:	74 05                	je     1b001 <dispose_chunk+0x1a6>
   1affc:	e8 2a 45 01 00       	call   2f52b <abort>
   1b001:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1b007:	01 c0                	add    %eax,%eax
   1b009:	89 c0                	mov    %eax,%eax
   1b00b:	48 83 c0 08          	add    $0x8,%rax
   1b00f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b016:	00 
   1b017:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b01e:	48 01 d0             	add    %rdx,%rax
   1b021:	48 83 c0 08          	add    $0x8,%rax
   1b025:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1b02c:	0f 94 c0             	sete   %al
   1b02f:	0f b6 c0             	movzbl %al,%eax
   1b032:	48 85 c0             	test   %rax,%rax
   1b035:	75 4e                	jne    1b085 <dispose_chunk+0x22a>
   1b037:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b03e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b042:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1b049:	0f 93 c0             	setae  %al
   1b04c:	0f b6 c0             	movzbl %al,%eax
   1b04f:	48 85 c0             	test   %rax,%rax
   1b052:	74 24                	je     1b078 <dispose_chunk+0x21d>
   1b054:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1b05b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b05f:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1b066:	0f 94 c0             	sete   %al
   1b069:	0f b6 c0             	movzbl %al,%eax
   1b06c:	48 85 c0             	test   %rax,%rax
   1b06f:	74 07                	je     1b078 <dispose_chunk+0x21d>
   1b071:	b8 01 00 00 00       	mov    $0x1,%eax
   1b076:	eb 05                	jmp    1b07d <dispose_chunk+0x222>
   1b078:	b8 00 00 00 00       	mov    $0x0,%eax
   1b07d:	85 c0                	test   %eax,%eax
   1b07f:	0f 84 ea 00 00 00    	je     1b16f <dispose_chunk+0x314>
   1b085:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1b08c:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1b093:	75 2c                	jne    1b0c1 <dispose_chunk+0x266>
   1b095:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b09c:	8b 10                	mov    (%rax),%edx
   1b09e:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1b0a4:	be 01 00 00 00       	mov    $0x1,%esi
   1b0a9:	89 c1                	mov    %eax,%ecx
   1b0ab:	d3 e6                	shl    %cl,%esi
   1b0ad:	89 f0                	mov    %esi,%eax
   1b0af:	f7 d0                	not    %eax
   1b0b1:	21 c2                	and    %eax,%edx
   1b0b3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b0ba:	89 10                	mov    %edx,(%rax)
   1b0bc:	e9 2c 05 00 00       	jmp    1b5ed <dispose_chunk+0x792>
   1b0c1:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1b0c7:	01 c0                	add    %eax,%eax
   1b0c9:	89 c0                	mov    %eax,%eax
   1b0cb:	48 83 c0 08          	add    $0x8,%rax
   1b0cf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b0d6:	00 
   1b0d7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b0de:	48 01 d0             	add    %rdx,%rax
   1b0e1:	48 83 c0 08          	add    $0x8,%rax
   1b0e5:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1b0ec:	0f 94 c0             	sete   %al
   1b0ef:	0f b6 c0             	movzbl %al,%eax
   1b0f2:	48 85 c0             	test   %rax,%rax
   1b0f5:	75 4a                	jne    1b141 <dispose_chunk+0x2e6>
   1b0f7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b0fe:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b102:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1b109:	0f 93 c0             	setae  %al
   1b10c:	0f b6 c0             	movzbl %al,%eax
   1b10f:	48 85 c0             	test   %rax,%rax
   1b112:	74 24                	je     1b138 <dispose_chunk+0x2dd>
   1b114:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1b11b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b11f:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1b126:	0f 94 c0             	sete   %al
   1b129:	0f b6 c0             	movzbl %al,%eax
   1b12c:	48 85 c0             	test   %rax,%rax
   1b12f:	74 07                	je     1b138 <dispose_chunk+0x2dd>
   1b131:	b8 01 00 00 00       	mov    $0x1,%eax
   1b136:	eb 05                	jmp    1b13d <dispose_chunk+0x2e2>
   1b138:	b8 00 00 00 00       	mov    $0x0,%eax
   1b13d:	85 c0                	test   %eax,%eax
   1b13f:	74 29                	je     1b16a <dispose_chunk+0x30f>
   1b141:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1b148:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1b14f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b153:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1b15a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1b161:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b165:	e9 83 04 00 00       	jmp    1b5ed <dispose_chunk+0x792>
   1b16a:	e8 bc 43 01 00       	call   2f52b <abort>
   1b16f:	e8 b7 43 01 00       	call   2f52b <abort>
   1b174:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1b17b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1b182:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b189:	48 8b 40 30          	mov    0x30(%rax),%rax
   1b18d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1b194:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b19b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b19f:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b1a6:	0f 84 b9 00 00 00    	je     1b265 <dispose_chunk+0x40a>
   1b1ac:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b1b3:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b1b7:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1b1be:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b1c5:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b1c9:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1b1d0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b1d7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b1db:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1b1e2:	0f 93 c0             	setae  %al
   1b1e5:	0f b6 c0             	movzbl %al,%eax
   1b1e8:	48 85 c0             	test   %rax,%rax
   1b1eb:	74 24                	je     1b211 <dispose_chunk+0x3b6>
   1b1ed:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1b1f4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b1f8:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b1ff:	0f 94 c0             	sete   %al
   1b202:	0f b6 c0             	movzbl %al,%eax
   1b205:	48 85 c0             	test   %rax,%rax
   1b208:	74 07                	je     1b211 <dispose_chunk+0x3b6>
   1b20a:	b8 01 00 00 00       	mov    $0x1,%eax
   1b20f:	eb 05                	jmp    1b216 <dispose_chunk+0x3bb>
   1b211:	b8 00 00 00 00       	mov    $0x0,%eax
   1b216:	85 c0                	test   %eax,%eax
   1b218:	74 46                	je     1b260 <dispose_chunk+0x405>
   1b21a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b221:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b225:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b22c:	0f 94 c0             	sete   %al
   1b22f:	0f b6 c0             	movzbl %al,%eax
   1b232:	48 85 c0             	test   %rax,%rax
   1b235:	74 29                	je     1b260 <dispose_chunk+0x405>
   1b237:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1b23e:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b245:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b249:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b250:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1b257:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b25b:	e9 f8 00 00 00       	jmp    1b358 <dispose_chunk+0x4fd>
   1b260:	e8 c6 42 01 00       	call   2f52b <abort>
   1b265:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b26c:	48 83 c0 28          	add    $0x28,%rax
   1b270:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1b277:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1b27e:	48 8b 00             	mov    (%rax),%rax
   1b281:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1b288:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1b28f:	00 
   1b290:	75 52                	jne    1b2e4 <dispose_chunk+0x489>
   1b292:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b299:	48 83 c0 20          	add    $0x20,%rax
   1b29d:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1b2a4:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1b2ab:	48 8b 00             	mov    (%rax),%rax
   1b2ae:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1b2b5:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1b2bc:	00 
   1b2bd:	0f 84 95 00 00 00    	je     1b358 <dispose_chunk+0x4fd>
   1b2c3:	eb 1f                	jmp    1b2e4 <dispose_chunk+0x489>
   1b2c5:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b2cc:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1b2d3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1b2da:	48 8b 00             	mov    (%rax),%rax
   1b2dd:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1b2e4:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b2eb:	48 83 c0 28          	add    $0x28,%rax
   1b2ef:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1b2f6:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b2fd:	48 8b 00             	mov    (%rax),%rax
   1b300:	48 85 c0             	test   %rax,%rax
   1b303:	75 c0                	jne    1b2c5 <dispose_chunk+0x46a>
   1b305:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b30c:	48 83 c0 20          	add    $0x20,%rax
   1b310:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1b317:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1b31e:	48 8b 00             	mov    (%rax),%rax
   1b321:	48 85 c0             	test   %rax,%rax
   1b324:	75 9f                	jne    1b2c5 <dispose_chunk+0x46a>
   1b326:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b32d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b331:	48 39 85 e8 fe ff ff 	cmp    %rax,-0x118(%rbp)
   1b338:	0f 93 c0             	setae  %al
   1b33b:	0f b6 c0             	movzbl %al,%eax
   1b33e:	48 85 c0             	test   %rax,%rax
   1b341:	74 10                	je     1b353 <dispose_chunk+0x4f8>
   1b343:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1b34a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b351:	eb 05                	jmp    1b358 <dispose_chunk+0x4fd>
   1b353:	e8 d3 41 01 00       	call   2f52b <abort>
   1b358:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1b35f:	00 
   1b360:	0f 84 87 02 00 00    	je     1b5ed <dispose_chunk+0x792>
   1b366:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b36d:	8b 40 38             	mov    0x38(%rax),%eax
   1b370:	89 c0                	mov    %eax,%eax
   1b372:	48 83 c0 4a          	add    $0x4a,%rax
   1b376:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b37d:	00 
   1b37e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b385:	48 01 d0             	add    %rdx,%rax
   1b388:	48 83 c0 08          	add    $0x8,%rax
   1b38c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1b393:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1b39a:	48 8b 00             	mov    (%rax),%rax
   1b39d:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b3a4:	75 53                	jne    1b3f9 <dispose_chunk+0x59e>
   1b3a6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1b3ad:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b3b4:	48 89 10             	mov    %rdx,(%rax)
   1b3b7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1b3be:	48 8b 00             	mov    (%rax),%rax
   1b3c1:	48 85 c0             	test   %rax,%rax
   1b3c4:	0f 85 8d 00 00 00    	jne    1b457 <dispose_chunk+0x5fc>
   1b3ca:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b3d1:	8b 50 04             	mov    0x4(%rax),%edx
   1b3d4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b3db:	8b 40 38             	mov    0x38(%rax),%eax
   1b3de:	be 01 00 00 00       	mov    $0x1,%esi
   1b3e3:	89 c1                	mov    %eax,%ecx
   1b3e5:	d3 e6                	shl    %cl,%esi
   1b3e7:	89 f0                	mov    %esi,%eax
   1b3e9:	f7 d0                	not    %eax
   1b3eb:	21 c2                	and    %eax,%edx
   1b3ed:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b3f4:	89 50 04             	mov    %edx,0x4(%rax)
   1b3f7:	eb 5e                	jmp    1b457 <dispose_chunk+0x5fc>
   1b3f9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b400:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b404:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1b40b:	0f 93 c0             	setae  %al
   1b40e:	0f b6 c0             	movzbl %al,%eax
   1b411:	48 85 c0             	test   %rax,%rax
   1b414:	74 3c                	je     1b452 <dispose_chunk+0x5f7>
   1b416:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b41d:	48 8b 40 20          	mov    0x20(%rax),%rax
   1b421:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1b428:	75 14                	jne    1b43e <dispose_chunk+0x5e3>
   1b42a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b431:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b438:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1b43c:	eb 19                	jmp    1b457 <dispose_chunk+0x5fc>
   1b43e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1b445:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b44c:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1b450:	eb 05                	jmp    1b457 <dispose_chunk+0x5fc>
   1b452:	e8 d4 40 01 00       	call   2f52b <abort>
   1b457:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1b45e:	00 
   1b45f:	0f 84 88 01 00 00    	je     1b5ed <dispose_chunk+0x792>
   1b465:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b46c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b470:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
   1b477:	0f 93 c0             	setae  %al
   1b47a:	0f b6 c0             	movzbl %al,%eax
   1b47d:	48 85 c0             	test   %rax,%rax
   1b480:	0f 84 e1 00 00 00    	je     1b567 <dispose_chunk+0x70c>
   1b486:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b48d:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1b494:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1b498:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b49f:	48 8b 40 20          	mov    0x20(%rax),%rax
   1b4a3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1b4aa:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1b4b1:	00 
   1b4b2:	74 48                	je     1b4fc <dispose_chunk+0x6a1>
   1b4b4:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b4bb:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b4bf:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1b4c6:	0f 93 c0             	setae  %al
   1b4c9:	0f b6 c0             	movzbl %al,%eax
   1b4cc:	48 85 c0             	test   %rax,%rax
   1b4cf:	74 26                	je     1b4f7 <dispose_chunk+0x69c>
   1b4d1:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b4d8:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1b4df:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1b4e3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1b4ea:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b4f1:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1b4f5:	eb 05                	jmp    1b4fc <dispose_chunk+0x6a1>
   1b4f7:	e8 2f 40 01 00       	call   2f52b <abort>
   1b4fc:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1b503:	48 8b 40 28          	mov    0x28(%rax),%rax
   1b507:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1b50e:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1b515:	00 
   1b516:	0f 84 d1 00 00 00    	je     1b5ed <dispose_chunk+0x792>
   1b51c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b523:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b527:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1b52e:	0f 93 c0             	setae  %al
   1b531:	0f b6 c0             	movzbl %al,%eax
   1b534:	48 85 c0             	test   %rax,%rax
   1b537:	74 29                	je     1b562 <dispose_chunk+0x707>
   1b539:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1b540:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1b547:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1b54b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1b552:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   1b559:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1b55d:	e9 8b 00 00 00       	jmp    1b5ed <dispose_chunk+0x792>
   1b562:	e8 c4 3f 01 00       	call   2f52b <abort>
   1b567:	e8 bf 3f 01 00       	call   2f52b <abort>
   1b56c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b573:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b577:	83 e0 03             	and    $0x3,%eax
   1b57a:	48 83 f8 03          	cmp    $0x3,%rax
   1b57e:	75 6d                	jne    1b5ed <dispose_chunk+0x792>
   1b580:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b587:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1b58e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b592:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b599:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b59d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1b5a1:	48 89 c2             	mov    %rax,%rdx
   1b5a4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b5ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b5af:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1b5b6:	48 83 c8 01          	or     $0x1,%rax
   1b5ba:	48 89 c2             	mov    %rax,%rdx
   1b5bd:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1b5c4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b5c8:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1b5cf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1b5d6:	48 01 c2             	add    %rax,%rdx
   1b5d9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1b5e0:	48 89 02             	mov    %rax,(%rdx)
   1b5e3:	e9 a5 0b 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1b5e8:	e8 3e 3f 01 00       	call   2f52b <abort>
   1b5ed:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b5f4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b5f8:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b5ff:	0f 93 c0             	setae  %al
   1b602:	0f b6 c0             	movzbl %al,%eax
   1b605:	48 85 c0             	test   %rax,%rax
   1b608:	0f 84 79 0b 00 00    	je     1c187 <dispose_chunk+0x132c>
   1b60e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b615:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b619:	83 e0 02             	and    $0x2,%eax
   1b61c:	48 85 c0             	test   %rax,%rax
   1b61f:	0f 85 f3 06 00 00    	jne    1bd18 <dispose_chunk+0xebd>
   1b625:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b62c:	48 8b 40 28          	mov    0x28(%rax),%rax
   1b630:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b637:	0f 85 92 00 00 00    	jne    1b6cf <dispose_chunk+0x874>
   1b63d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b644:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1b648:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1b64f:	48 01 c2             	add    %rax,%rdx
   1b652:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b659:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b65d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b664:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b668:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1b66c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b673:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1b67a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1b67e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b682:	48 83 c8 01          	or     $0x1,%rax
   1b686:	48 89 c2             	mov    %rax,%rdx
   1b689:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1b690:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b694:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b69b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1b69f:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1b6a6:	0f 85 e0 0a 00 00    	jne    1c18c <dispose_chunk+0x1331>
   1b6ac:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b6b3:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1b6ba:	00 
   1b6bb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b6c2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1b6c9:	00 
   1b6ca:	e9 bd 0a 00 00       	jmp    1c18c <dispose_chunk+0x1331>
   1b6cf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b6d6:	48 8b 40 20          	mov    0x20(%rax),%rax
   1b6da:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b6e1:	75 71                	jne    1b754 <dispose_chunk+0x8f9>
   1b6e3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b6ea:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1b6ee:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1b6f5:	48 01 c2             	add    %rax,%rdx
   1b6f8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b6ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b703:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b70a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b70e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1b712:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b719:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1b720:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1b724:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b728:	48 83 c8 01          	or     $0x1,%rax
   1b72c:	48 89 c2             	mov    %rax,%rdx
   1b72f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1b736:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b73a:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1b741:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b745:	48 01 c2             	add    %rax,%rdx
   1b748:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b74c:	48 89 02             	mov    %rax,(%rdx)
   1b74f:	e9 39 0a 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1b754:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b75b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b75f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b763:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1b767:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1b76b:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
   1b772:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1b776:	48 c1 e8 03          	shr    $0x3,%rax
   1b77a:	48 83 f8 1f          	cmp    $0x1f,%rax
   1b77e:	0f 87 c6 01 00 00    	ja     1b94a <dispose_chunk+0xaef>
   1b784:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b78b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b78f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1b793:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b79a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b79e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1b7a2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1b7a6:	48 c1 e8 03          	shr    $0x3,%rax
   1b7aa:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
   1b7b0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b7b7:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1b7bb:	75 05                	jne    1b7c2 <dispose_chunk+0x967>
   1b7bd:	e8 69 3d 01 00       	call   2f52b <abort>
   1b7c2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b7c9:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1b7cd:	75 05                	jne    1b7d4 <dispose_chunk+0x979>
   1b7cf:	e8 57 3d 01 00       	call   2f52b <abort>
   1b7d4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b7db:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b7df:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1b7e3:	48 89 c2             	mov    %rax,%rdx
   1b7e6:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1b7ec:	c1 e0 03             	shl    $0x3,%eax
   1b7ef:	89 c0                	mov    %eax,%eax
   1b7f1:	48 39 c2             	cmp    %rax,%rdx
   1b7f4:	74 05                	je     1b7fb <dispose_chunk+0x9a0>
   1b7f6:	e8 30 3d 01 00       	call   2f52b <abort>
   1b7fb:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1b801:	01 c0                	add    %eax,%eax
   1b803:	89 c0                	mov    %eax,%eax
   1b805:	48 83 c0 08          	add    $0x8,%rax
   1b809:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b810:	00 
   1b811:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b818:	48 01 d0             	add    %rdx,%rax
   1b81b:	48 83 c0 08          	add    $0x8,%rax
   1b81f:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1b823:	0f 94 c0             	sete   %al
   1b826:	0f b6 c0             	movzbl %al,%eax
   1b829:	48 85 c0             	test   %rax,%rax
   1b82c:	75 48                	jne    1b876 <dispose_chunk+0xa1b>
   1b82e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b835:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b839:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1b83d:	0f 93 c0             	setae  %al
   1b840:	0f b6 c0             	movzbl %al,%eax
   1b843:	48 85 c0             	test   %rax,%rax
   1b846:	74 21                	je     1b869 <dispose_chunk+0xa0e>
   1b848:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b84c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b850:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b857:	0f 94 c0             	sete   %al
   1b85a:	0f b6 c0             	movzbl %al,%eax
   1b85d:	48 85 c0             	test   %rax,%rax
   1b860:	74 07                	je     1b869 <dispose_chunk+0xa0e>
   1b862:	b8 01 00 00 00       	mov    $0x1,%eax
   1b867:	eb 05                	jmp    1b86e <dispose_chunk+0xa13>
   1b869:	b8 00 00 00 00       	mov    $0x0,%eax
   1b86e:	85 c0                	test   %eax,%eax
   1b870:	0f 84 cf 00 00 00    	je     1b945 <dispose_chunk+0xaea>
   1b876:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b87a:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1b87e:	75 2c                	jne    1b8ac <dispose_chunk+0xa51>
   1b880:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b887:	8b 10                	mov    (%rax),%edx
   1b889:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1b88f:	be 01 00 00 00       	mov    $0x1,%esi
   1b894:	89 c1                	mov    %eax,%ecx
   1b896:	d3 e6                	shl    %cl,%esi
   1b898:	89 f0                	mov    %esi,%eax
   1b89a:	f7 d0                	not    %eax
   1b89c:	21 c2                	and    %eax,%edx
   1b89e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b8a5:	89 10                	mov    %edx,(%rax)
   1b8a7:	e9 0d 04 00 00       	jmp    1bcb9 <dispose_chunk+0xe5e>
   1b8ac:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
   1b8b2:	01 c0                	add    %eax,%eax
   1b8b4:	89 c0                	mov    %eax,%eax
   1b8b6:	48 83 c0 08          	add    $0x8,%rax
   1b8ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b8c1:	00 
   1b8c2:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b8c9:	48 01 d0             	add    %rdx,%rax
   1b8cc:	48 83 c0 08          	add    $0x8,%rax
   1b8d0:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1b8d4:	0f 94 c0             	sete   %al
   1b8d7:	0f b6 c0             	movzbl %al,%eax
   1b8da:	48 85 c0             	test   %rax,%rax
   1b8dd:	75 44                	jne    1b923 <dispose_chunk+0xac8>
   1b8df:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b8e6:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b8ea:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1b8ee:	0f 93 c0             	setae  %al
   1b8f1:	0f b6 c0             	movzbl %al,%eax
   1b8f4:	48 85 c0             	test   %rax,%rax
   1b8f7:	74 21                	je     1b91a <dispose_chunk+0xabf>
   1b8f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b8fd:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b901:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1b908:	0f 94 c0             	sete   %al
   1b90b:	0f b6 c0             	movzbl %al,%eax
   1b90e:	48 85 c0             	test   %rax,%rax
   1b911:	74 07                	je     1b91a <dispose_chunk+0xabf>
   1b913:	b8 01 00 00 00       	mov    $0x1,%eax
   1b918:	eb 05                	jmp    1b91f <dispose_chunk+0xac4>
   1b91a:	b8 00 00 00 00       	mov    $0x0,%eax
   1b91f:	85 c0                	test   %eax,%eax
   1b921:	74 1d                	je     1b940 <dispose_chunk+0xae5>
   1b923:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b927:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1b92b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b92f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b933:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1b937:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1b93b:	e9 79 03 00 00       	jmp    1bcb9 <dispose_chunk+0xe5e>
   1b940:	e8 e6 3b 01 00       	call   2f52b <abort>
   1b945:	e8 e1 3b 01 00       	call   2f52b <abort>
   1b94a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1b951:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1b955:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b959:	48 8b 40 30          	mov    0x30(%rax),%rax
   1b95d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1b961:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b965:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b969:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b96d:	0f 84 9e 00 00 00    	je     1ba11 <dispose_chunk+0xbb6>
   1b973:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b977:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b97b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1b97f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1b983:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b987:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1b98e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1b995:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b999:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1b99d:	0f 93 c0             	setae  %al
   1b9a0:	0f b6 c0             	movzbl %al,%eax
   1b9a3:	48 85 c0             	test   %rax,%rax
   1b9a6:	74 1e                	je     1b9c6 <dispose_chunk+0xb6b>
   1b9a8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1b9ac:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b9b0:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b9b4:	0f 94 c0             	sete   %al
   1b9b7:	0f b6 c0             	movzbl %al,%eax
   1b9ba:	48 85 c0             	test   %rax,%rax
   1b9bd:	74 07                	je     1b9c6 <dispose_chunk+0xb6b>
   1b9bf:	b8 01 00 00 00       	mov    $0x1,%eax
   1b9c4:	eb 05                	jmp    1b9cb <dispose_chunk+0xb70>
   1b9c6:	b8 00 00 00 00       	mov    $0x0,%eax
   1b9cb:	85 c0                	test   %eax,%eax
   1b9cd:	74 3d                	je     1ba0c <dispose_chunk+0xbb1>
   1b9cf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1b9d6:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b9da:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1b9de:	0f 94 c0             	sete   %al
   1b9e1:	0f b6 c0             	movzbl %al,%eax
   1b9e4:	48 85 c0             	test   %rax,%rax
   1b9e7:	74 23                	je     1ba0c <dispose_chunk+0xbb1>
   1b9e9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1b9ed:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1b9f4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1b9f8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1b9ff:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1ba03:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1ba07:	e9 f2 00 00 00       	jmp    1bafe <dispose_chunk+0xca3>
   1ba0c:	e8 1a 3b 01 00       	call   2f52b <abort>
   1ba11:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ba15:	48 83 c0 28          	add    $0x28,%rax
   1ba19:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1ba20:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ba27:	48 8b 00             	mov    (%rax),%rax
   1ba2a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1ba31:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1ba38:	00 
   1ba39:	75 4f                	jne    1ba8a <dispose_chunk+0xc2f>
   1ba3b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ba3f:	48 83 c0 20          	add    $0x20,%rax
   1ba43:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1ba4a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ba51:	48 8b 00             	mov    (%rax),%rax
   1ba54:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1ba5b:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1ba62:	00 
   1ba63:	0f 84 95 00 00 00    	je     1bafe <dispose_chunk+0xca3>
   1ba69:	eb 1f                	jmp    1ba8a <dispose_chunk+0xc2f>
   1ba6b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ba72:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1ba79:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ba80:	48 8b 00             	mov    (%rax),%rax
   1ba83:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1ba8a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ba91:	48 83 c0 28          	add    $0x28,%rax
   1ba95:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1ba9c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1baa3:	48 8b 00             	mov    (%rax),%rax
   1baa6:	48 85 c0             	test   %rax,%rax
   1baa9:	75 c0                	jne    1ba6b <dispose_chunk+0xc10>
   1baab:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bab2:	48 83 c0 20          	add    $0x20,%rax
   1bab6:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1babd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1bac4:	48 8b 00             	mov    (%rax),%rax
   1bac7:	48 85 c0             	test   %rax,%rax
   1baca:	75 9f                	jne    1ba6b <dispose_chunk+0xc10>
   1bacc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bad3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bad7:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   1bade:	0f 93 c0             	setae  %al
   1bae1:	0f b6 c0             	movzbl %al,%eax
   1bae4:	48 85 c0             	test   %rax,%rax
   1bae7:	74 10                	je     1baf9 <dispose_chunk+0xc9e>
   1bae9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1baf0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1baf7:	eb 05                	jmp    1bafe <dispose_chunk+0xca3>
   1baf9:	e8 2d 3a 01 00       	call   2f52b <abort>
   1bafe:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1bb03:	0f 84 b0 01 00 00    	je     1bcb9 <dispose_chunk+0xe5e>
   1bb09:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bb0d:	8b 40 38             	mov    0x38(%rax),%eax
   1bb10:	89 c0                	mov    %eax,%eax
   1bb12:	48 83 c0 4a          	add    $0x4a,%rax
   1bb16:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bb1d:	00 
   1bb1e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bb25:	48 01 d0             	add    %rdx,%rax
   1bb28:	48 83 c0 08          	add    $0x8,%rax
   1bb2c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1bb30:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1bb34:	48 8b 00             	mov    (%rax),%rax
   1bb37:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1bb3b:	75 46                	jne    1bb83 <dispose_chunk+0xd28>
   1bb3d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1bb41:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1bb48:	48 89 10             	mov    %rdx,(%rax)
   1bb4b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1bb4f:	48 8b 00             	mov    (%rax),%rax
   1bb52:	48 85 c0             	test   %rax,%rax
   1bb55:	75 7b                	jne    1bbd2 <dispose_chunk+0xd77>
   1bb57:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bb5e:	8b 50 04             	mov    0x4(%rax),%edx
   1bb61:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bb65:	8b 40 38             	mov    0x38(%rax),%eax
   1bb68:	be 01 00 00 00       	mov    $0x1,%esi
   1bb6d:	89 c1                	mov    %eax,%ecx
   1bb6f:	d3 e6                	shl    %cl,%esi
   1bb71:	89 f0                	mov    %esi,%eax
   1bb73:	f7 d0                	not    %eax
   1bb75:	21 c2                	and    %eax,%edx
   1bb77:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bb7e:	89 50 04             	mov    %edx,0x4(%rax)
   1bb81:	eb 4f                	jmp    1bbd2 <dispose_chunk+0xd77>
   1bb83:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bb8a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bb8e:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1bb92:	0f 93 c0             	setae  %al
   1bb95:	0f b6 c0             	movzbl %al,%eax
   1bb98:	48 85 c0             	test   %rax,%rax
   1bb9b:	74 30                	je     1bbcd <dispose_chunk+0xd72>
   1bb9d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1bba1:	48 8b 40 20          	mov    0x20(%rax),%rax
   1bba5:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1bba9:	75 11                	jne    1bbbc <dispose_chunk+0xd61>
   1bbab:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1bbaf:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1bbb6:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1bbba:	eb 16                	jmp    1bbd2 <dispose_chunk+0xd77>
   1bbbc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1bbc0:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1bbc7:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1bbcb:	eb 05                	jmp    1bbd2 <dispose_chunk+0xd77>
   1bbcd:	e8 59 39 01 00       	call   2f52b <abort>
   1bbd2:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
   1bbd9:	00 
   1bbda:	0f 84 d9 00 00 00    	je     1bcb9 <dispose_chunk+0xe5e>
   1bbe0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bbe7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bbeb:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1bbf2:	0f 93 c0             	setae  %al
   1bbf5:	0f b6 c0             	movzbl %al,%eax
   1bbf8:	48 85 c0             	test   %rax,%rax
   1bbfb:	0f 84 b3 00 00 00    	je     1bcb4 <dispose_chunk+0xe59>
   1bc01:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bc08:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1bc0c:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bc10:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bc14:	48 8b 40 20          	mov    0x20(%rax),%rax
   1bc18:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1bc1c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1bc21:	74 3f                	je     1bc62 <dispose_chunk+0xe07>
   1bc23:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bc2a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bc2e:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1bc32:	0f 93 c0             	setae  %al
   1bc35:	0f b6 c0             	movzbl %al,%eax
   1bc38:	48 85 c0             	test   %rax,%rax
   1bc3b:	74 20                	je     1bc5d <dispose_chunk+0xe02>
   1bc3d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bc44:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1bc48:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1bc4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1bc50:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1bc57:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bc5b:	eb 05                	jmp    1bc62 <dispose_chunk+0xe07>
   1bc5d:	e8 c9 38 01 00       	call   2f52b <abort>
   1bc62:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1bc66:	48 8b 40 28          	mov    0x28(%rax),%rax
   1bc6a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1bc6e:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1bc73:	74 44                	je     1bcb9 <dispose_chunk+0xe5e>
   1bc75:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bc7c:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bc80:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1bc84:	0f 93 c0             	setae  %al
   1bc87:	0f b6 c0             	movzbl %al,%eax
   1bc8a:	48 85 c0             	test   %rax,%rax
   1bc8d:	74 20                	je     1bcaf <dispose_chunk+0xe54>
   1bc8f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bc96:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1bc9a:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1bc9e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1bca2:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1bca9:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bcad:	eb 0a                	jmp    1bcb9 <dispose_chunk+0xe5e>
   1bcaf:	e8 77 38 01 00       	call   2f52b <abort>
   1bcb4:	e8 72 38 01 00       	call   2f52b <abort>
   1bcb9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bcc0:	48 83 c8 01          	or     $0x1,%rax
   1bcc4:	48 89 c2             	mov    %rax,%rdx
   1bcc7:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1bcce:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bcd2:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1bcd9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bce0:	48 01 c2             	add    %rax,%rdx
   1bce3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bcea:	48 89 02             	mov    %rax,(%rdx)
   1bced:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bcf4:	48 8b 40 20          	mov    0x20(%rax),%rax
   1bcf8:	48 39 85 b0 fe ff ff 	cmp    %rax,-0x150(%rbp)
   1bcff:	75 68                	jne    1bd69 <dispose_chunk+0xf0e>
   1bd01:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bd08:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1bd0f:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bd13:	e9 75 04 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1bd18:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bd1f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1bd23:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1bd27:	48 89 c2             	mov    %rax,%rdx
   1bd2a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bd31:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bd35:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bd3c:	48 83 c8 01          	or     $0x1,%rax
   1bd40:	48 89 c2             	mov    %rax,%rdx
   1bd43:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1bd4a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1bd4e:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1bd55:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bd5c:	48 01 c2             	add    %rax,%rdx
   1bd5f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bd66:	48 89 02             	mov    %rax,(%rdx)
   1bd69:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bd70:	48 c1 e8 03          	shr    $0x3,%rax
   1bd74:	48 83 f8 1f          	cmp    $0x1f,%rax
   1bd78:	0f 87 18 01 00 00    	ja     1be96 <dispose_chunk+0x103b>
   1bd7e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bd85:	48 c1 e8 03          	shr    $0x3,%rax
   1bd89:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
   1bd8f:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1bd95:	01 c0                	add    %eax,%eax
   1bd97:	89 c0                	mov    %eax,%eax
   1bd99:	48 83 c0 08          	add    $0x8,%rax
   1bd9d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bda4:	00 
   1bda5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bdac:	48 01 d0             	add    %rdx,%rax
   1bdaf:	48 83 c0 08          	add    $0x8,%rax
   1bdb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1bdb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bdbb:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1bdc2:	48 83 bd a8 fe ff ff 	cmpq   $0x1f,-0x158(%rbp)
   1bdc9:	1f 
   1bdca:	77 05                	ja     1bdd1 <dispose_chunk+0xf76>
   1bdcc:	e8 5a 37 01 00       	call   2f52b <abort>
   1bdd1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bdd8:	8b 10                	mov    (%rax),%edx
   1bdda:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1bde0:	be 01 00 00 00       	mov    $0x1,%esi
   1bde5:	89 c1                	mov    %eax,%ecx
   1bde7:	d3 e6                	shl    %cl,%esi
   1bde9:	89 f0                	mov    %esi,%eax
   1bdeb:	21 d0                	and    %edx,%eax
   1bded:	85 c0                	test   %eax,%eax
   1bdef:	75 27                	jne    1be18 <dispose_chunk+0xfbd>
   1bdf1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bdf8:	8b 10                	mov    (%rax),%edx
   1bdfa:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1be00:	be 01 00 00 00       	mov    $0x1,%esi
   1be05:	89 c1                	mov    %eax,%ecx
   1be07:	d3 e6                	shl    %cl,%esi
   1be09:	89 f0                	mov    %esi,%eax
   1be0b:	09 c2                	or     %eax,%edx
   1be0d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1be14:	89 10                	mov    %edx,(%rax)
   1be16:	eb 37                	jmp    1be4f <dispose_chunk+0xff4>
   1be18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be1c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1be20:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1be27:	48 8b 40 18          	mov    0x18(%rax),%rax
   1be2b:	48 39 c2             	cmp    %rax,%rdx
   1be2e:	0f 93 c0             	setae  %al
   1be31:	0f b6 c0             	movzbl %al,%eax
   1be34:	48 85 c0             	test   %rax,%rax
   1be37:	74 11                	je     1be4a <dispose_chunk+0xfef>
   1be39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be3d:	48 8b 40 10          	mov    0x10(%rax),%rax
   1be41:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1be48:	eb 05                	jmp    1be4f <dispose_chunk+0xff4>
   1be4a:	e8 dc 36 01 00       	call   2f52b <abort>
   1be4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be53:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1be5a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1be5e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1be65:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
   1be6c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1be70:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1be77:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1be7e:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1be82:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1be89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1be8d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1be91:	e9 f7 02 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1be96:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1be9d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1bea1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1bea8:	48 c1 e8 08          	shr    $0x8,%rax
   1beac:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
   1beb2:	83 bd d4 fe ff ff 00 	cmpl   $0x0,-0x12c(%rbp)
   1beb9:	75 0c                	jne    1bec7 <dispose_chunk+0x106c>
   1bebb:	c7 85 c8 fe ff ff 00 	movl   $0x0,-0x138(%rbp)
   1bec2:	00 00 00 
   1bec5:	eb 5d                	jmp    1bf24 <dispose_chunk+0x10c9>
   1bec7:	81 bd d4 fe ff ff ff 	cmpl   $0xffff,-0x12c(%rbp)
   1bece:	ff 00 00 
   1bed1:	76 0c                	jbe    1bedf <dispose_chunk+0x1084>
   1bed3:	c7 85 c8 fe ff ff 1f 	movl   $0x1f,-0x138(%rbp)
   1beda:	00 00 00 
   1bedd:	eb 45                	jmp    1bf24 <dispose_chunk+0x10c9>
   1bedf:	0f bd 85 d4 fe ff ff 	bsr    -0x12c(%rbp),%eax
   1bee6:	83 f0 1f             	xor    $0x1f,%eax
   1bee9:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1beee:	29 c2                	sub    %eax,%edx
   1bef0:	89 d0                	mov    %edx,%eax
   1bef2:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
   1bef8:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
   1befe:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1bf01:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
   1bf07:	83 c0 07             	add    $0x7,%eax
   1bf0a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1bf11:	89 c1                	mov    %eax,%ecx
   1bf13:	48 d3 ea             	shr    %cl,%rdx
   1bf16:	48 89 d0             	mov    %rdx,%rax
   1bf19:	83 e0 01             	and    $0x1,%eax
   1bf1c:	01 f0                	add    %esi,%eax
   1bf1e:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
   1bf24:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1bf2a:	48 83 c0 4a          	add    $0x4a,%rax
   1bf2e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bf35:	00 
   1bf36:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bf3d:	48 01 d0             	add    %rdx,%rax
   1bf40:	48 83 c0 08          	add    $0x8,%rax
   1bf44:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1bf48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf4c:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
   1bf52:	89 50 38             	mov    %edx,0x38(%rax)
   1bf55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf59:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1bf60:	00 
   1bf61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf65:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1bf69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf6d:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1bf71:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bf78:	8b 50 04             	mov    0x4(%rax),%edx
   1bf7b:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1bf81:	be 01 00 00 00       	mov    $0x1,%esi
   1bf86:	89 c1                	mov    %eax,%ecx
   1bf88:	d3 e6                	shl    %cl,%esi
   1bf8a:	89 f0                	mov    %esi,%eax
   1bf8c:	21 d0                	and    %edx,%eax
   1bf8e:	85 c0                	test   %eax,%eax
   1bf90:	75 5f                	jne    1bff1 <dispose_chunk+0x1196>
   1bf92:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bf99:	8b 50 04             	mov    0x4(%rax),%edx
   1bf9c:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1bfa2:	be 01 00 00 00       	mov    $0x1,%esi
   1bfa7:	89 c1                	mov    %eax,%ecx
   1bfa9:	d3 e6                	shl    %cl,%esi
   1bfab:	89 f0                	mov    %esi,%eax
   1bfad:	09 c2                	or     %eax,%edx
   1bfaf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1bfb6:	89 50 04             	mov    %edx,0x4(%rax)
   1bfb9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bfbd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bfc1:	48 89 10             	mov    %rdx,(%rax)
   1bfc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfc8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1bfcc:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1bfd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfd4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bfd8:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1bfdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfe0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1bfe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfe8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1bfec:	e9 9c 01 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1bff1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bff5:	48 8b 00             	mov    (%rax),%rax
   1bff8:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1bfff:	83 bd c8 fe ff ff 1f 	cmpl   $0x1f,-0x138(%rbp)
   1c006:	74 13                	je     1c01b <dispose_chunk+0x11c0>
   1c008:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1c00e:	d1 e8                	shr    %eax
   1c010:	ba 39 00 00 00       	mov    $0x39,%edx
   1c015:	29 c2                	sub    %eax,%edx
   1c017:	89 d0                	mov    %edx,%eax
   1c019:	eb 05                	jmp    1c020 <dispose_chunk+0x11c5>
   1c01b:	b8 00 00 00 00       	mov    $0x0,%eax
   1c020:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   1c027:	89 c1                	mov    %eax,%ecx
   1c029:	48 d3 e2             	shl    %cl,%rdx
   1c02c:	48 89 d0             	mov    %rdx,%rax
   1c02f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1c036:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c03d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c041:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c045:	48 39 85 a8 fe ff ff 	cmp    %rax,-0x158(%rbp)
   1c04c:	0f 84 a2 00 00 00    	je     1c0f4 <dispose_chunk+0x1299>
   1c052:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1c059:	48 c1 e8 3f          	shr    $0x3f,%rax
   1c05d:	48 83 c0 04          	add    $0x4,%rax
   1c061:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c068:	00 
   1c069:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c070:	48 01 d0             	add    %rdx,%rax
   1c073:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c077:	48 d1 a5 20 ff ff ff 	shlq   -0xe0(%rbp)
   1c07e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c082:	48 8b 00             	mov    (%rax),%rax
   1c085:	48 85 c0             	test   %rax,%rax
   1c088:	74 10                	je     1c09a <dispose_chunk+0x123f>
   1c08a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c08e:	48 8b 00             	mov    (%rax),%rax
   1c091:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1c098:	eb 9c                	jmp    1c036 <dispose_chunk+0x11db>
   1c09a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1c0a1:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c0a5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1c0a9:	0f 93 c0             	setae  %al
   1c0ac:	0f b6 c0             	movzbl %al,%eax
   1c0af:	48 85 c0             	test   %rax,%rax
   1c0b2:	74 3b                	je     1c0ef <dispose_chunk+0x1294>
   1c0b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c0b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c0bc:	48 89 10             	mov    %rdx,(%rax)
   1c0bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c0c3:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1c0ca:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c0ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c0d2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c0d6:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c0da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c0de:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1c0e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c0e6:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c0ea:	e9 9e 00 00 00       	jmp    1c18d <dispose_chunk+0x1332>
   1c0ef:	e8 37 34 01 00       	call   2f52b <abort>
   1c0f4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c0fb:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c0ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1c103:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1c10a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c10e:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
   1c115:	0f 93 c0             	setae  %al
   1c118:	0f b6 c0             	movzbl %al,%eax
   1c11b:	48 85 c0             	test   %rax,%rax
   1c11e:	74 62                	je     1c182 <dispose_chunk+0x1327>
   1c120:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1c127:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c12b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1c12f:	0f 93 c0             	setae  %al
   1c132:	0f b6 c0             	movzbl %al,%eax
   1c135:	48 85 c0             	test   %rax,%rax
   1c138:	74 48                	je     1c182 <dispose_chunk+0x1327>
   1c13a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c13e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1c142:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c14a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1c14e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c155:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c159:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c15d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c161:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c169:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1c170:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c174:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c178:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1c17f:	00 
   1c180:	eb 0b                	jmp    1c18d <dispose_chunk+0x1332>
   1c182:	e8 a4 33 01 00       	call   2f52b <abort>
   1c187:	e8 9f 33 01 00       	call   2f52b <abort>
   1c18c:	90                   	nop
   1c18d:	c9                   	leave  
   1c18e:	c3                   	ret    

000000000001c18f <tmalloc_large>:
   1c18f:	f3 0f 1e fa          	endbr64 
   1c193:	55                   	push   %rbp
   1c194:	48 89 e5             	mov    %rsp,%rbp
   1c197:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   1c19e:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1c1a5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   1c1ac:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1c1b3:	00 00 00 00 
   1c1b7:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c1be:	48 f7 d8             	neg    %rax
   1c1c1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1c1c8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c1cf:	48 c1 e8 08          	shr    $0x8,%rax
   1c1d3:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
   1c1d9:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
   1c1e0:	75 0c                	jne    1c1ee <tmalloc_large+0x5f>
   1c1e2:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
   1c1e9:	00 00 00 
   1c1ec:	eb 5d                	jmp    1c24b <tmalloc_large+0xbc>
   1c1ee:	81 bd 14 ff ff ff ff 	cmpl   $0xffff,-0xec(%rbp)
   1c1f5:	ff 00 00 
   1c1f8:	76 0c                	jbe    1c206 <tmalloc_large+0x77>
   1c1fa:	c7 85 0c ff ff ff 1f 	movl   $0x1f,-0xf4(%rbp)
   1c201:	00 00 00 
   1c204:	eb 45                	jmp    1c24b <tmalloc_large+0xbc>
   1c206:	0f bd 85 14 ff ff ff 	bsr    -0xec(%rbp),%eax
   1c20d:	83 f0 1f             	xor    $0x1f,%eax
   1c210:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1c215:	29 c2                	sub    %eax,%edx
   1c217:	89 d0                	mov    %edx,%eax
   1c219:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
   1c21f:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1c225:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1c228:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
   1c22e:	83 c0 07             	add    $0x7,%eax
   1c231:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1c238:	89 c1                	mov    %eax,%ecx
   1c23a:	48 d3 ea             	shr    %cl,%rdx
   1c23d:	48 89 d0             	mov    %rdx,%rax
   1c240:	83 e0 01             	and    $0x1,%eax
   1c243:	01 f0                	add    %esi,%eax
   1c245:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
   1c24b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c252:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
   1c258:	48 83 c2 4a          	add    $0x4a,%rdx
   1c25c:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1c261:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c268:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1c26f:	00 
   1c270:	0f 84 05 01 00 00    	je     1c37b <tmalloc_large+0x1ec>
   1c276:	83 bd 0c ff ff ff 1f 	cmpl   $0x1f,-0xf4(%rbp)
   1c27d:	74 13                	je     1c292 <tmalloc_large+0x103>
   1c27f:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1c285:	d1 e8                	shr    %eax
   1c287:	ba 39 00 00 00       	mov    $0x39,%edx
   1c28c:	29 c2                	sub    %eax,%edx
   1c28e:	89 d0                	mov    %edx,%eax
   1c290:	eb 05                	jmp    1c297 <tmalloc_large+0x108>
   1c292:	b8 00 00 00 00       	mov    $0x0,%eax
   1c297:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1c29e:	89 c1                	mov    %eax,%ecx
   1c2a0:	48 d3 e2             	shl    %cl,%rdx
   1c2a3:	48 89 d0             	mov    %rdx,%rax
   1c2a6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1c2ad:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
   1c2b4:	00 00 00 00 
   1c2b8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c2bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c2c3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c2c7:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1c2ce:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1c2d2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1c2d6:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1c2dd:	73 23                	jae    1c302 <tmalloc_large+0x173>
   1c2df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c2e6:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1c2ed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1c2f1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1c2f8:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
   1c2ff:	00 
   1c300:	74 78                	je     1c37a <tmalloc_large+0x1eb>
   1c302:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c309:	48 8b 40 28          	mov    0x28(%rax),%rax
   1c30d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1c311:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1c318:	48 c1 e8 3f          	shr    $0x3f,%rax
   1c31c:	48 89 c2             	mov    %rax,%rdx
   1c31f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c326:	48 83 c2 04          	add    $0x4,%rdx
   1c32a:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1c32e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c335:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1c33a:	74 18                	je     1c354 <tmalloc_large+0x1c5>
   1c33c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c340:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
   1c347:	74 0b                	je     1c354 <tmalloc_large+0x1c5>
   1c349:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c34d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1c354:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1c35b:	00 
   1c35c:	75 10                	jne    1c36e <tmalloc_large+0x1df>
   1c35e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1c365:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c36c:	eb 0d                	jmp    1c37b <tmalloc_large+0x1ec>
   1c36e:	48 d1 a5 50 ff ff ff 	shlq   -0xb0(%rbp)
   1c375:	e9 3e ff ff ff       	jmp    1c2b8 <tmalloc_large+0x129>
   1c37a:	90                   	nop
   1c37b:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1c382:	00 
   1c383:	0f 85 14 01 00 00    	jne    1c49d <tmalloc_large+0x30e>
   1c389:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1c390:	00 
   1c391:	0f 85 06 01 00 00    	jne    1c49d <tmalloc_large+0x30e>
   1c397:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1c39d:	ba 01 00 00 00       	mov    $0x1,%edx
   1c3a2:	89 c1                	mov    %eax,%ecx
   1c3a4:	d3 e2                	shl    %cl,%edx
   1c3a6:	89 d0                	mov    %edx,%eax
   1c3a8:	8d 14 00             	lea    (%rax,%rax,1),%edx
   1c3ab:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
   1c3b1:	be 01 00 00 00       	mov    $0x1,%esi
   1c3b6:	89 c1                	mov    %eax,%ecx
   1c3b8:	d3 e6                	shl    %cl,%esi
   1c3ba:	89 f0                	mov    %esi,%eax
   1c3bc:	01 c0                	add    %eax,%eax
   1c3be:	f7 d8                	neg    %eax
   1c3c0:	09 c2                	or     %eax,%edx
   1c3c2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c3c9:	8b 40 04             	mov    0x4(%rax),%eax
   1c3cc:	21 d0                	and    %edx,%eax
   1c3ce:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   1c3d4:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
   1c3db:	0f 84 bc 00 00 00    	je     1c49d <tmalloc_large+0x30e>
   1c3e1:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1c3e7:	f7 d8                	neg    %eax
   1c3e9:	23 85 1c ff ff ff    	and    -0xe4(%rbp),%eax
   1c3ef:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
   1c3f5:	f3 0f bc 85 20 ff ff 	tzcnt  -0xe0(%rbp),%eax
   1c3fc:	ff 
   1c3fd:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   1c403:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1c409:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   1c40f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c416:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   1c41c:	48 83 c2 4a          	add    $0x4a,%rdx
   1c420:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1c425:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c42c:	eb 6f                	jmp    1c49d <tmalloc_large+0x30e>
   1c42e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c435:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c439:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c43d:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1c444:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c44c:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
   1c453:	73 19                	jae    1c46e <tmalloc_large+0x2df>
   1c455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c459:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1c460:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c467:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1c46e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c475:	48 8b 40 20          	mov    0x20(%rax),%rax
   1c479:	48 85 c0             	test   %rax,%rax
   1c47c:	74 0d                	je     1c48b <tmalloc_large+0x2fc>
   1c47e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c485:	48 8b 40 20          	mov    0x20(%rax),%rax
   1c489:	eb 0b                	jmp    1c496 <tmalloc_large+0x307>
   1c48b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1c492:	48 8b 40 28          	mov    0x28(%rax),%rax
   1c496:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1c49d:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1c4a4:	00 
   1c4a5:	75 87                	jne    1c42e <tmalloc_large+0x29f>
   1c4a7:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
   1c4ae:	00 
   1c4af:	0f 84 41 09 00 00    	je     1cdf6 <tmalloc_large+0xc67>
   1c4b5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c4bc:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c4c0:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
   1c4c7:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1c4ce:	0f 83 22 09 00 00    	jae    1cdf6 <tmalloc_large+0xc67>
   1c4d4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c4db:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c4df:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c4e6:	0f 93 c0             	setae  %al
   1c4e9:	0f b6 c0             	movzbl %al,%eax
   1c4ec:	48 85 c0             	test   %rax,%rax
   1c4ef:	0f 84 fc 08 00 00    	je     1cdf1 <tmalloc_large+0xc62>
   1c4f5:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1c4fc:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c503:	48 01 d0             	add    %rdx,%rax
   1c506:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1c50a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c511:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c515:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1c519:	48 89 c1             	mov    %rax,%rcx
   1c51c:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1c523:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c52a:	48 01 d0             	add    %rdx,%rax
   1c52d:	48 39 c1             	cmp    %rax,%rcx
   1c530:	74 05                	je     1c537 <tmalloc_large+0x3a8>
   1c532:	e8 f4 2f 01 00       	call   2f52b <abort>
   1c537:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c53e:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1c542:	0f 92 c0             	setb   %al
   1c545:	0f b6 c0             	movzbl %al,%eax
   1c548:	48 85 c0             	test   %rax,%rax
   1c54b:	0f 84 a0 08 00 00    	je     1cdf1 <tmalloc_large+0xc62>
   1c551:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c558:	48 8b 40 30          	mov    0x30(%rax),%rax
   1c55c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1c560:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c567:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c56b:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c572:	0f 84 aa 00 00 00    	je     1c622 <tmalloc_large+0x493>
   1c578:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c57f:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c583:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1c587:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c58e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c592:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c599:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c5a0:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c5a4:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1c5a8:	0f 93 c0             	setae  %al
   1c5ab:	0f b6 c0             	movzbl %al,%eax
   1c5ae:	48 85 c0             	test   %rax,%rax
   1c5b1:	74 21                	je     1c5d4 <tmalloc_large+0x445>
   1c5b3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c5b7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c5bb:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c5c2:	0f 94 c0             	sete   %al
   1c5c5:	0f b6 c0             	movzbl %al,%eax
   1c5c8:	48 85 c0             	test   %rax,%rax
   1c5cb:	74 07                	je     1c5d4 <tmalloc_large+0x445>
   1c5cd:	b8 01 00 00 00       	mov    $0x1,%eax
   1c5d2:	eb 05                	jmp    1c5d9 <tmalloc_large+0x44a>
   1c5d4:	b8 00 00 00 00       	mov    $0x0,%eax
   1c5d9:	85 c0                	test   %eax,%eax
   1c5db:	74 40                	je     1c61d <tmalloc_large+0x48e>
   1c5dd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c5e4:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c5e8:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c5ef:	0f 94 c0             	sete   %al
   1c5f2:	0f b6 c0             	movzbl %al,%eax
   1c5f5:	48 85 c0             	test   %rax,%rax
   1c5f8:	74 23                	je     1c61d <tmalloc_large+0x48e>
   1c5fa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1c5fe:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c605:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c609:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c610:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1c614:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1c618:	e9 f8 00 00 00       	jmp    1c715 <tmalloc_large+0x586>
   1c61d:	e8 09 2f 01 00       	call   2f52b <abort>
   1c622:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c629:	48 83 c0 28          	add    $0x28,%rax
   1c62d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1c634:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c63b:	48 8b 00             	mov    (%rax),%rax
   1c63e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c645:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1c64c:	00 
   1c64d:	75 52                	jne    1c6a1 <tmalloc_large+0x512>
   1c64f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c656:	48 83 c0 20          	add    $0x20,%rax
   1c65a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1c661:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c668:	48 8b 00             	mov    (%rax),%rax
   1c66b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c672:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1c679:	00 
   1c67a:	0f 84 95 00 00 00    	je     1c715 <tmalloc_large+0x586>
   1c680:	eb 1f                	jmp    1c6a1 <tmalloc_large+0x512>
   1c682:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1c689:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1c690:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c697:	48 8b 00             	mov    (%rax),%rax
   1c69a:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1c6a1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c6a8:	48 83 c0 28          	add    $0x28,%rax
   1c6ac:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1c6b3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1c6ba:	48 8b 00             	mov    (%rax),%rax
   1c6bd:	48 85 c0             	test   %rax,%rax
   1c6c0:	75 c0                	jne    1c682 <tmalloc_large+0x4f3>
   1c6c2:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c6c9:	48 83 c0 20          	add    $0x20,%rax
   1c6cd:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1c6d4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1c6db:	48 8b 00             	mov    (%rax),%rax
   1c6de:	48 85 c0             	test   %rax,%rax
   1c6e1:	75 9f                	jne    1c682 <tmalloc_large+0x4f3>
   1c6e3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c6ea:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c6ee:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1c6f5:	0f 93 c0             	setae  %al
   1c6f8:	0f b6 c0             	movzbl %al,%eax
   1c6fb:	48 85 c0             	test   %rax,%rax
   1c6fe:	74 10                	je     1c710 <tmalloc_large+0x581>
   1c700:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1c707:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1c70e:	eb 05                	jmp    1c715 <tmalloc_large+0x586>
   1c710:	e8 16 2e 01 00       	call   2f52b <abort>
   1c715:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1c71a:	0f 84 c6 01 00 00    	je     1c8e6 <tmalloc_large+0x757>
   1c720:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c727:	8b 40 38             	mov    0x38(%rax),%eax
   1c72a:	89 c0                	mov    %eax,%eax
   1c72c:	48 83 c0 4a          	add    $0x4a,%rax
   1c730:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c737:	00 
   1c738:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c73f:	48 01 d0             	add    %rdx,%rax
   1c742:	48 83 c0 08          	add    $0x8,%rax
   1c746:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1c74a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1c74e:	48 8b 00             	mov    (%rax),%rax
   1c751:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c758:	75 4d                	jne    1c7a7 <tmalloc_large+0x618>
   1c75a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1c75e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c765:	48 89 10             	mov    %rdx,(%rax)
   1c768:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1c76c:	48 8b 00             	mov    (%rax),%rax
   1c76f:	48 85 c0             	test   %rax,%rax
   1c772:	0f 85 81 00 00 00    	jne    1c7f9 <tmalloc_large+0x66a>
   1c778:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c77f:	8b 50 04             	mov    0x4(%rax),%edx
   1c782:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c789:	8b 40 38             	mov    0x38(%rax),%eax
   1c78c:	be 01 00 00 00       	mov    $0x1,%esi
   1c791:	89 c1                	mov    %eax,%ecx
   1c793:	d3 e6                	shl    %cl,%esi
   1c795:	89 f0                	mov    %esi,%eax
   1c797:	f7 d0                	not    %eax
   1c799:	21 c2                	and    %eax,%edx
   1c79b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c7a2:	89 50 04             	mov    %edx,0x4(%rax)
   1c7a5:	eb 52                	jmp    1c7f9 <tmalloc_large+0x66a>
   1c7a7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c7ae:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c7b2:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1c7b6:	0f 93 c0             	setae  %al
   1c7b9:	0f b6 c0             	movzbl %al,%eax
   1c7bc:	48 85 c0             	test   %rax,%rax
   1c7bf:	74 33                	je     1c7f4 <tmalloc_large+0x665>
   1c7c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c7c5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1c7c9:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1c7d0:	75 11                	jne    1c7e3 <tmalloc_large+0x654>
   1c7d2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c7d6:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c7dd:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1c7e1:	eb 16                	jmp    1c7f9 <tmalloc_large+0x66a>
   1c7e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1c7e7:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c7ee:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1c7f2:	eb 05                	jmp    1c7f9 <tmalloc_large+0x66a>
   1c7f4:	e8 32 2d 01 00       	call   2f52b <abort>
   1c7f9:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1c800:	00 
   1c801:	0f 84 df 00 00 00    	je     1c8e6 <tmalloc_large+0x757>
   1c807:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c80e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c812:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1c819:	0f 93 c0             	setae  %al
   1c81c:	0f b6 c0             	movzbl %al,%eax
   1c81f:	48 85 c0             	test   %rax,%rax
   1c822:	0f 84 b9 00 00 00    	je     1c8e1 <tmalloc_large+0x752>
   1c828:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c82f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1c833:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c837:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c83e:	48 8b 40 20          	mov    0x20(%rax),%rax
   1c842:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1c846:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1c84b:	74 3f                	je     1c88c <tmalloc_large+0x6fd>
   1c84d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c854:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c858:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1c85c:	0f 93 c0             	setae  %al
   1c85f:	0f b6 c0             	movzbl %al,%eax
   1c862:	48 85 c0             	test   %rax,%rax
   1c865:	74 20                	je     1c887 <tmalloc_large+0x6f8>
   1c867:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c86e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1c872:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1c876:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c87a:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c881:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c885:	eb 05                	jmp    1c88c <tmalloc_large+0x6fd>
   1c887:	e8 9f 2c 01 00       	call   2f52b <abort>
   1c88c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c893:	48 8b 40 28          	mov    0x28(%rax),%rax
   1c897:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1c89b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1c8a0:	74 44                	je     1c8e6 <tmalloc_large+0x757>
   1c8a2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c8a9:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c8ad:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1c8b1:	0f 93 c0             	setae  %al
   1c8b4:	0f b6 c0             	movzbl %al,%eax
   1c8b7:	48 85 c0             	test   %rax,%rax
   1c8ba:	74 20                	je     1c8dc <tmalloc_large+0x74d>
   1c8bc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1c8c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1c8c7:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1c8cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c8cf:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1c8d6:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1c8da:	eb 0a                	jmp    1c8e6 <tmalloc_large+0x757>
   1c8dc:	e8 4a 2c 01 00       	call   2f52b <abort>
   1c8e1:	e8 45 2c 01 00       	call   2f52b <abort>
   1c8e6:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
   1c8ed:	1f 
   1c8ee:	0f 87 99 00 00 00    	ja     1c98d <tmalloc_large+0x7fe>
   1c8f4:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1c8fb:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c902:	48 01 d0             	add    %rdx,%rax
   1c905:	48 83 c8 03          	or     $0x3,%rax
   1c909:	48 89 c2             	mov    %rax,%rdx
   1c90c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c913:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c917:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1c91e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c925:	48 01 c2             	add    %rax,%rdx
   1c928:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c92f:	48 01 d0             	add    %rdx,%rax
   1c932:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1c936:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1c93d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c944:	48 01 c1             	add    %rax,%rcx
   1c947:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c94e:	48 01 c8             	add    %rcx,%rax
   1c951:	48 83 ca 01          	or     $0x1,%rdx
   1c955:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c959:	48 8b 0d a0 f6 04 00 	mov    0x4f6a0(%rip),%rcx        # 6c000 <mparams>
   1c960:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1c967:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   1c96e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c975:	48 01 c6             	add    %rax,%rsi
   1c978:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c97f:	48 01 f0             	add    %rsi,%rax
   1c982:	48 31 ca             	xor    %rcx,%rdx
   1c985:	48 89 10             	mov    %rdx,(%rax)
   1c988:	e9 57 04 00 00       	jmp    1cde4 <tmalloc_large+0xc55>
   1c98d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c994:	48 83 c8 03          	or     $0x3,%rax
   1c998:	48 89 c2             	mov    %rax,%rdx
   1c99b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1c9a2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c9a6:	48 8b 0d 53 f6 04 00 	mov    0x4f653(%rip),%rcx        # 6c000 <mparams>
   1c9ad:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1c9b4:	48 8b b5 38 ff ff ff 	mov    -0xc8(%rbp),%rsi
   1c9bb:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1c9c2:	48 01 f0             	add    %rsi,%rax
   1c9c5:	48 31 ca             	xor    %rcx,%rdx
   1c9c8:	48 89 10             	mov    %rdx,(%rax)
   1c9cb:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c9d2:	48 83 c8 01          	or     $0x1,%rax
   1c9d6:	48 89 c2             	mov    %rax,%rdx
   1c9d9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1c9dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c9e1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1c9e5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c9ec:	48 01 c2             	add    %rax,%rdx
   1c9ef:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1c9f6:	48 89 02             	mov    %rax,(%rdx)
   1c9f9:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ca00:	48 c1 e8 03          	shr    $0x3,%rax
   1ca04:	48 83 f8 1f          	cmp    $0x1f,%rax
   1ca08:	0f 87 0c 01 00 00    	ja     1cb1a <tmalloc_large+0x98b>
   1ca0e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ca15:	48 c1 e8 03          	shr    $0x3,%rax
   1ca19:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   1ca1f:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1ca25:	01 c0                	add    %eax,%eax
   1ca27:	89 c0                	mov    %eax,%eax
   1ca29:	48 83 c0 08          	add    $0x8,%rax
   1ca2d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ca34:	00 
   1ca35:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ca3c:	48 01 d0             	add    %rdx,%rax
   1ca3f:	48 83 c0 08          	add    $0x8,%rax
   1ca43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ca47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ca4b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1ca52:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
   1ca59:	1f 
   1ca5a:	77 05                	ja     1ca61 <tmalloc_large+0x8d2>
   1ca5c:	e8 ca 2a 01 00       	call   2f52b <abort>
   1ca61:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ca68:	8b 10                	mov    (%rax),%edx
   1ca6a:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1ca70:	be 01 00 00 00       	mov    $0x1,%esi
   1ca75:	89 c1                	mov    %eax,%ecx
   1ca77:	d3 e6                	shl    %cl,%esi
   1ca79:	89 f0                	mov    %esi,%eax
   1ca7b:	21 d0                	and    %edx,%eax
   1ca7d:	85 c0                	test   %eax,%eax
   1ca7f:	75 27                	jne    1caa8 <tmalloc_large+0x919>
   1ca81:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ca88:	8b 10                	mov    (%rax),%edx
   1ca8a:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1ca90:	be 01 00 00 00       	mov    $0x1,%esi
   1ca95:	89 c1                	mov    %eax,%ecx
   1ca97:	d3 e6                	shl    %cl,%esi
   1ca99:	89 f0                	mov    %esi,%eax
   1ca9b:	09 c2                	or     %eax,%edx
   1ca9d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1caa4:	89 10                	mov    %edx,(%rax)
   1caa6:	eb 37                	jmp    1cadf <tmalloc_large+0x950>
   1caa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1caac:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1cab0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cab7:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cabb:	48 39 c2             	cmp    %rax,%rdx
   1cabe:	0f 93 c0             	setae  %al
   1cac1:	0f b6 c0             	movzbl %al,%eax
   1cac4:	48 85 c0             	test   %rax,%rax
   1cac7:	74 11                	je     1cada <tmalloc_large+0x94b>
   1cac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cacd:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cad1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1cad8:	eb 05                	jmp    1cadf <tmalloc_large+0x950>
   1cada:	e8 4c 2a 01 00       	call   2f52b <abort>
   1cadf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cae3:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1cae7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1caeb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1caf2:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1caf6:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cafa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cafe:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1cb05:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1cb09:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cb0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1cb11:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cb15:	e9 ca 02 00 00       	jmp    1cde4 <tmalloc_large+0xc55>
   1cb1a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cb1e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1cb22:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1cb29:	48 c1 e8 08          	shr    $0x8,%rax
   1cb2d:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   1cb33:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
   1cb3a:	75 0c                	jne    1cb48 <tmalloc_large+0x9b9>
   1cb3c:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   1cb43:	00 00 00 
   1cb46:	eb 5d                	jmp    1cba5 <tmalloc_large+0xa16>
   1cb48:	81 bd 2c ff ff ff ff 	cmpl   $0xffff,-0xd4(%rbp)
   1cb4f:	ff 00 00 
   1cb52:	76 0c                	jbe    1cb60 <tmalloc_large+0x9d1>
   1cb54:	c7 85 10 ff ff ff 1f 	movl   $0x1f,-0xf0(%rbp)
   1cb5b:	00 00 00 
   1cb5e:	eb 45                	jmp    1cba5 <tmalloc_large+0xa16>
   1cb60:	0f bd 85 2c ff ff ff 	bsr    -0xd4(%rbp),%eax
   1cb67:	83 f0 1f             	xor    $0x1f,%eax
   1cb6a:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1cb6f:	29 c2                	sub    %eax,%edx
   1cb71:	89 d0                	mov    %edx,%eax
   1cb73:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1cb79:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1cb7f:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1cb82:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1cb88:	83 c0 07             	add    $0x7,%eax
   1cb8b:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1cb92:	89 c1                	mov    %eax,%ecx
   1cb94:	48 d3 ea             	shr    %cl,%rdx
   1cb97:	48 89 d0             	mov    %rdx,%rax
   1cb9a:	83 e0 01             	and    $0x1,%eax
   1cb9d:	01 f0                	add    %esi,%eax
   1cb9f:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
   1cba5:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1cbab:	48 83 c0 4a          	add    $0x4a,%rax
   1cbaf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1cbb6:	00 
   1cbb7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cbbe:	48 01 d0             	add    %rdx,%rax
   1cbc1:	48 83 c0 08          	add    $0x8,%rax
   1cbc5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1cbc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cbcd:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
   1cbd3:	89 50 38             	mov    %edx,0x38(%rax)
   1cbd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cbda:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1cbe1:	00 
   1cbe2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cbe6:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1cbea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cbee:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1cbf2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cbf9:	8b 50 04             	mov    0x4(%rax),%edx
   1cbfc:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1cc02:	be 01 00 00 00       	mov    $0x1,%esi
   1cc07:	89 c1                	mov    %eax,%ecx
   1cc09:	d3 e6                	shl    %cl,%esi
   1cc0b:	89 f0                	mov    %esi,%eax
   1cc0d:	21 d0                	and    %edx,%eax
   1cc0f:	85 c0                	test   %eax,%eax
   1cc11:	75 5f                	jne    1cc72 <tmalloc_large+0xae3>
   1cc13:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cc1a:	8b 50 04             	mov    0x4(%rax),%edx
   1cc1d:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1cc23:	be 01 00 00 00       	mov    $0x1,%esi
   1cc28:	89 c1                	mov    %eax,%ecx
   1cc2a:	d3 e6                	shl    %cl,%esi
   1cc2c:	89 f0                	mov    %esi,%eax
   1cc2e:	09 c2                	or     %eax,%edx
   1cc30:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cc37:	89 50 04             	mov    %edx,0x4(%rax)
   1cc3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc3e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cc42:	48 89 10             	mov    %rdx,(%rax)
   1cc45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1cc4d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1cc51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc55:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cc59:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cc5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc61:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1cc65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc69:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1cc6d:	e9 72 01 00 00       	jmp    1cde4 <tmalloc_large+0xc55>
   1cc72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc76:	48 8b 00             	mov    (%rax),%rax
   1cc79:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1cc7d:	83 bd 10 ff ff ff 1f 	cmpl   $0x1f,-0xf0(%rbp)
   1cc84:	74 13                	je     1cc99 <tmalloc_large+0xb0a>
   1cc86:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   1cc8c:	d1 e8                	shr    %eax
   1cc8e:	ba 39 00 00 00       	mov    $0x39,%edx
   1cc93:	29 c2                	sub    %eax,%edx
   1cc95:	89 d0                	mov    %edx,%eax
   1cc97:	eb 05                	jmp    1cc9e <tmalloc_large+0xb0f>
   1cc99:	b8 00 00 00 00       	mov    $0x0,%eax
   1cc9e:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1cca5:	89 c1                	mov    %eax,%ecx
   1cca7:	48 d3 e2             	shl    %cl,%rdx
   1ccaa:	48 89 d0             	mov    %rdx,%rax
   1ccad:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1ccb1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ccb5:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ccb9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ccbd:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1ccc4:	0f 84 93 00 00 00    	je     1cd5d <tmalloc_large+0xbce>
   1ccca:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ccce:	48 c1 e8 3f          	shr    $0x3f,%rax
   1ccd2:	48 83 c0 04          	add    $0x4,%rax
   1ccd6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ccdd:	00 
   1ccde:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cce2:	48 01 d0             	add    %rdx,%rax
   1cce5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1cce9:	48 d1 65 88          	shlq   -0x78(%rbp)
   1cced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ccf1:	48 8b 00             	mov    (%rax),%rax
   1ccf4:	48 85 c0             	test   %rax,%rax
   1ccf7:	74 0d                	je     1cd06 <tmalloc_large+0xb77>
   1ccf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ccfd:	48 8b 00             	mov    (%rax),%rax
   1cd00:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1cd04:	eb ab                	jmp    1ccb1 <tmalloc_large+0xb22>
   1cd06:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cd0d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cd11:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1cd15:	0f 93 c0             	setae  %al
   1cd18:	0f b6 c0             	movzbl %al,%eax
   1cd1b:	48 85 c0             	test   %rax,%rax
   1cd1e:	74 38                	je     1cd58 <tmalloc_large+0xbc9>
   1cd20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cd24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cd28:	48 89 10             	mov    %rdx,(%rax)
   1cd2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cd2f:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1cd33:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1cd37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cd3b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cd3f:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cd43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cd47:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1cd4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cd4f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1cd53:	e9 8c 00 00 00       	jmp    1cde4 <tmalloc_large+0xc55>
   1cd58:	e8 ce 27 01 00       	call   2f52b <abort>
   1cd5d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cd61:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cd65:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1cd69:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cd70:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cd74:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1cd78:	0f 93 c0             	setae  %al
   1cd7b:	0f b6 c0             	movzbl %al,%eax
   1cd7e:	48 85 c0             	test   %rax,%rax
   1cd81:	74 5c                	je     1cddf <tmalloc_large+0xc50>
   1cd83:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cd8a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cd8e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1cd92:	0f 93 c0             	setae  %al
   1cd95:	0f b6 c0             	movzbl %al,%eax
   1cd98:	48 85 c0             	test   %rax,%rax
   1cd9b:	74 42                	je     1cddf <tmalloc_large+0xc50>
   1cd9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cda1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cda5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cda9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cdad:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1cdb1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cdb5:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1cdb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cdbd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1cdc1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1cdc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cdc9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1cdcd:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1cdd1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cdd5:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1cddc:	00 
   1cddd:	eb 05                	jmp    1cde4 <tmalloc_large+0xc55>
   1cddf:	e8 47 27 01 00       	call   2f52b <abort>
   1cde4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1cdeb:	48 83 c0 10          	add    $0x10,%rax
   1cdef:	eb 0a                	jmp    1cdfb <tmalloc_large+0xc6c>
   1cdf1:	e8 35 27 01 00       	call   2f52b <abort>
   1cdf6:	b8 00 00 00 00       	mov    $0x0,%eax
   1cdfb:	c9                   	leave  
   1cdfc:	c3                   	ret    

000000000001cdfd <tmalloc_small>:
   1cdfd:	f3 0f 1e fa          	endbr64 
   1ce01:	55                   	push   %rbp
   1ce02:	48 89 e5             	mov    %rsp,%rbp
   1ce05:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   1ce0c:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   1ce13:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   1ce1a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1ce21:	8b 50 04             	mov    0x4(%rax),%edx
   1ce24:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1ce2b:	8b 40 04             	mov    0x4(%rax),%eax
   1ce2e:	f7 d8                	neg    %eax
   1ce30:	21 d0                	and    %edx,%eax
   1ce32:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   1ce38:	f3 0f bc 85 68 ff ff 	tzcnt  -0x98(%rbp),%eax
   1ce3f:	ff 
   1ce40:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   1ce46:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   1ce4c:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   1ce52:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1ce59:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
   1ce5f:	48 83 c2 4a          	add    $0x4a,%rdx
   1ce63:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
   1ce68:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1ce6f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ce76:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1ce7a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ce81:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ce85:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ce89:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1ce90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1ce94:	eb 37                	jmp    1cecd <tmalloc_small+0xd0>
   1ce96:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ce9d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cea1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1cea5:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1ceac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ceb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ceb4:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
   1ceb8:	73 13                	jae    1cecd <tmalloc_small+0xd0>
   1ceba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cebe:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1cec2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1cec9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1cecd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ced4:	48 8b 40 20          	mov    0x20(%rax),%rax
   1ced8:	48 85 c0             	test   %rax,%rax
   1cedb:	74 0d                	je     1ceea <tmalloc_small+0xed>
   1cedd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1cee4:	48 8b 40 20          	mov    0x20(%rax),%rax
   1cee8:	eb 0b                	jmp    1cef5 <tmalloc_small+0xf8>
   1ceea:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1cef1:	48 8b 40 28          	mov    0x28(%rax),%rax
   1cef5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1cefc:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   1cf03:	00 
   1cf04:	75 90                	jne    1ce96 <tmalloc_small+0x99>
   1cf06:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1cf0d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cf11:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1cf15:	0f 93 c0             	setae  %al
   1cf18:	0f b6 c0             	movzbl %al,%eax
   1cf1b:	48 85 c0             	test   %rax,%rax
   1cf1e:	0f 84 8c 05 00 00    	je     1d4b0 <tmalloc_small+0x6b3>
   1cf24:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1cf28:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1cf2f:	48 01 d0             	add    %rdx,%rax
   1cf32:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1cf36:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf3a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cf3e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1cf42:	48 89 c1             	mov    %rax,%rcx
   1cf45:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1cf49:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1cf50:	48 01 d0             	add    %rdx,%rax
   1cf53:	48 39 c1             	cmp    %rax,%rcx
   1cf56:	74 05                	je     1cf5d <tmalloc_small+0x160>
   1cf58:	e8 ce 25 01 00       	call   2f52b <abort>
   1cf5d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf61:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1cf65:	0f 92 c0             	setb   %al
   1cf68:	0f b6 c0             	movzbl %al,%eax
   1cf6b:	48 85 c0             	test   %rax,%rax
   1cf6e:	0f 84 3c 05 00 00    	je     1d4b0 <tmalloc_small+0x6b3>
   1cf74:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf78:	48 8b 40 30          	mov    0x30(%rax),%rax
   1cf7c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1cf80:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf84:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cf88:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1cf8c:	0f 84 92 00 00 00    	je     1d024 <tmalloc_small+0x227>
   1cf92:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cf96:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cf9a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1cf9e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cfa2:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cfa6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1cfaa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1cfb1:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cfb5:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1cfb9:	0f 93 c0             	setae  %al
   1cfbc:	0f b6 c0             	movzbl %al,%eax
   1cfbf:	48 85 c0             	test   %rax,%rax
   1cfc2:	74 1e                	je     1cfe2 <tmalloc_small+0x1e5>
   1cfc4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cfc8:	48 8b 40 18          	mov    0x18(%rax),%rax
   1cfcc:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1cfd0:	0f 94 c0             	sete   %al
   1cfd3:	0f b6 c0             	movzbl %al,%eax
   1cfd6:	48 85 c0             	test   %rax,%rax
   1cfd9:	74 07                	je     1cfe2 <tmalloc_small+0x1e5>
   1cfdb:	b8 01 00 00 00       	mov    $0x1,%eax
   1cfe0:	eb 05                	jmp    1cfe7 <tmalloc_small+0x1ea>
   1cfe2:	b8 00 00 00 00       	mov    $0x0,%eax
   1cfe7:	85 c0                	test   %eax,%eax
   1cfe9:	74 34                	je     1d01f <tmalloc_small+0x222>
   1cfeb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1cfef:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cff3:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1cff7:	0f 94 c0             	sete   %al
   1cffa:	0f b6 c0             	movzbl %al,%eax
   1cffd:	48 85 c0             	test   %rax,%rax
   1d000:	74 1d                	je     1d01f <tmalloc_small+0x222>
   1d002:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d006:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d00a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d00e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d012:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1d016:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d01a:	e9 b2 00 00 00       	jmp    1d0d1 <tmalloc_small+0x2d4>
   1d01f:	e8 07 25 01 00       	call   2f52b <abort>
   1d024:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d028:	48 83 c0 28          	add    $0x28,%rax
   1d02c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1d030:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d034:	48 8b 00             	mov    (%rax),%rax
   1d037:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1d03b:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1d040:	75 33                	jne    1d075 <tmalloc_small+0x278>
   1d042:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d046:	48 83 c0 20          	add    $0x20,%rax
   1d04a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1d04e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d052:	48 8b 00             	mov    (%rax),%rax
   1d055:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1d059:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1d05e:	74 71                	je     1d0d1 <tmalloc_small+0x2d4>
   1d060:	eb 13                	jmp    1d075 <tmalloc_small+0x278>
   1d062:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d066:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1d06a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d06e:	48 8b 00             	mov    (%rax),%rax
   1d071:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1d075:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d079:	48 83 c0 28          	add    $0x28,%rax
   1d07d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1d081:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d085:	48 8b 00             	mov    (%rax),%rax
   1d088:	48 85 c0             	test   %rax,%rax
   1d08b:	75 d5                	jne    1d062 <tmalloc_small+0x265>
   1d08d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d091:	48 83 c0 20          	add    $0x20,%rax
   1d095:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1d099:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d09d:	48 8b 00             	mov    (%rax),%rax
   1d0a0:	48 85 c0             	test   %rax,%rax
   1d0a3:	75 bd                	jne    1d062 <tmalloc_small+0x265>
   1d0a5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d0ac:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d0b0:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1d0b4:	0f 93 c0             	setae  %al
   1d0b7:	0f b6 c0             	movzbl %al,%eax
   1d0ba:	48 85 c0             	test   %rax,%rax
   1d0bd:	74 0d                	je     1d0cc <tmalloc_small+0x2cf>
   1d0bf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d0c3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1d0ca:	eb 05                	jmp    1d0d1 <tmalloc_small+0x2d4>
   1d0cc:	e8 5a 24 01 00       	call   2f52b <abort>
   1d0d1:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   1d0d6:	0f 84 92 01 00 00    	je     1d26e <tmalloc_small+0x471>
   1d0dc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d0e0:	8b 40 38             	mov    0x38(%rax),%eax
   1d0e3:	89 c0                	mov    %eax,%eax
   1d0e5:	48 83 c0 4a          	add    $0x4a,%rax
   1d0e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d0f0:	00 
   1d0f1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d0f8:	48 01 d0             	add    %rdx,%rax
   1d0fb:	48 83 c0 08          	add    $0x8,%rax
   1d0ff:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1d103:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d107:	48 8b 00             	mov    (%rax),%rax
   1d10a:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1d10e:	75 43                	jne    1d153 <tmalloc_small+0x356>
   1d110:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d114:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d118:	48 89 10             	mov    %rdx,(%rax)
   1d11b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d11f:	48 8b 00             	mov    (%rax),%rax
   1d122:	48 85 c0             	test   %rax,%rax
   1d125:	75 75                	jne    1d19c <tmalloc_small+0x39f>
   1d127:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d12e:	8b 50 04             	mov    0x4(%rax),%edx
   1d131:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d135:	8b 40 38             	mov    0x38(%rax),%eax
   1d138:	be 01 00 00 00       	mov    $0x1,%esi
   1d13d:	89 c1                	mov    %eax,%ecx
   1d13f:	d3 e6                	shl    %cl,%esi
   1d141:	89 f0                	mov    %esi,%eax
   1d143:	f7 d0                	not    %eax
   1d145:	21 c2                	and    %eax,%edx
   1d147:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d14e:	89 50 04             	mov    %edx,0x4(%rax)
   1d151:	eb 49                	jmp    1d19c <tmalloc_small+0x39f>
   1d153:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d15a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d15e:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1d162:	0f 93 c0             	setae  %al
   1d165:	0f b6 c0             	movzbl %al,%eax
   1d168:	48 85 c0             	test   %rax,%rax
   1d16b:	74 2a                	je     1d197 <tmalloc_small+0x39a>
   1d16d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d171:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d175:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   1d179:	75 0e                	jne    1d189 <tmalloc_small+0x38c>
   1d17b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d17f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d183:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1d187:	eb 13                	jmp    1d19c <tmalloc_small+0x39f>
   1d189:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d18d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d191:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1d195:	eb 05                	jmp    1d19c <tmalloc_small+0x39f>
   1d197:	e8 8f 23 01 00       	call   2f52b <abort>
   1d19c:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1d1a1:	0f 84 c7 00 00 00    	je     1d26e <tmalloc_small+0x471>
   1d1a7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d1ae:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d1b2:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1d1b6:	0f 93 c0             	setae  %al
   1d1b9:	0f b6 c0             	movzbl %al,%eax
   1d1bc:	48 85 c0             	test   %rax,%rax
   1d1bf:	0f 84 a4 00 00 00    	je     1d269 <tmalloc_small+0x46c>
   1d1c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d1c9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1d1cd:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1d1d1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d1d5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d1d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1d1dd:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1d1e2:	74 39                	je     1d21d <tmalloc_small+0x420>
   1d1e4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d1eb:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d1ef:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1d1f3:	0f 93 c0             	setae  %al
   1d1f6:	0f b6 c0             	movzbl %al,%eax
   1d1f9:	48 85 c0             	test   %rax,%rax
   1d1fc:	74 1a                	je     1d218 <tmalloc_small+0x41b>
   1d1fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d202:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d206:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1d20a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d20e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d212:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1d216:	eb 05                	jmp    1d21d <tmalloc_small+0x420>
   1d218:	e8 0e 23 01 00       	call   2f52b <abort>
   1d21d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d221:	48 8b 40 28          	mov    0x28(%rax),%rax
   1d225:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1d229:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1d22e:	74 3e                	je     1d26e <tmalloc_small+0x471>
   1d230:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d237:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d23b:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1d23f:	0f 93 c0             	setae  %al
   1d242:	0f b6 c0             	movzbl %al,%eax
   1d245:	48 85 c0             	test   %rax,%rax
   1d248:	74 1a                	je     1d264 <tmalloc_small+0x467>
   1d24a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1d24e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d252:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1d256:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d25a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d25e:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1d262:	eb 0a                	jmp    1d26e <tmalloc_small+0x471>
   1d264:	e8 c2 22 01 00       	call   2f52b <abort>
   1d269:	e8 bd 22 01 00       	call   2f52b <abort>
   1d26e:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   1d273:	0f 87 81 00 00 00    	ja     1d2fa <tmalloc_small+0x4fd>
   1d279:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1d27d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d284:	48 01 d0             	add    %rdx,%rax
   1d287:	48 83 c8 03          	or     $0x3,%rax
   1d28b:	48 89 c2             	mov    %rax,%rdx
   1d28e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d292:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d296:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1d29a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d2a1:	48 01 c2             	add    %rax,%rdx
   1d2a4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d2a8:	48 01 d0             	add    %rdx,%rax
   1d2ab:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1d2af:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   1d2b3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d2ba:	48 01 c1             	add    %rax,%rcx
   1d2bd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d2c1:	48 01 c8             	add    %rcx,%rax
   1d2c4:	48 83 ca 01          	or     $0x1,%rdx
   1d2c8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d2cc:	48 8b 0d 2d ed 04 00 	mov    0x4ed2d(%rip),%rcx        # 6c000 <mparams>
   1d2d3:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1d2da:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
   1d2de:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d2e5:	48 01 c6             	add    %rax,%rsi
   1d2e8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d2ec:	48 01 f0             	add    %rsi,%rax
   1d2ef:	48 31 ca             	xor    %rcx,%rdx
   1d2f2:	48 89 10             	mov    %rdx,(%rax)
   1d2f5:	e9 ac 01 00 00       	jmp    1d4a6 <tmalloc_small+0x6a9>
   1d2fa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d301:	48 83 c8 03          	or     $0x3,%rax
   1d305:	48 89 c2             	mov    %rax,%rdx
   1d308:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d30c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d310:	48 8b 0d e9 ec 04 00 	mov    0x4ece9(%rip),%rcx        # 6c000 <mparams>
   1d317:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1d31e:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   1d322:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d329:	48 01 f0             	add    %rsi,%rax
   1d32c:	48 31 ca             	xor    %rcx,%rdx
   1d32f:	48 89 10             	mov    %rdx,(%rax)
   1d332:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1d336:	48 83 c8 01          	or     $0x1,%rax
   1d33a:	48 89 c2             	mov    %rax,%rdx
   1d33d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1d341:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d345:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1d349:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1d34d:	48 01 c2             	add    %rax,%rdx
   1d350:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1d354:	48 89 02             	mov    %rax,(%rdx)
   1d357:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d35e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d362:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d366:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d36a:	48 c1 e8 03          	shr    $0x3,%rax
   1d36e:	48 83 f8 1f          	cmp    $0x1f,%rax
   1d372:	76 05                	jbe    1d379 <tmalloc_small+0x57c>
   1d374:	e8 b2 21 01 00       	call   2f52b <abort>
   1d379:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1d37e:	0f 84 04 01 00 00    	je     1d488 <tmalloc_small+0x68b>
   1d384:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d38b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d38f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1d393:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d397:	48 c1 e8 03          	shr    $0x3,%rax
   1d39b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   1d3a1:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1d3a7:	01 c0                	add    %eax,%eax
   1d3a9:	89 c0                	mov    %eax,%eax
   1d3ab:	48 83 c0 08          	add    $0x8,%rax
   1d3af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d3b6:	00 
   1d3b7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d3be:	48 01 d0             	add    %rdx,%rax
   1d3c1:	48 83 c0 08          	add    $0x8,%rax
   1d3c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d3c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d3cd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1d3d1:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)
   1d3d6:	77 05                	ja     1d3dd <tmalloc_small+0x5e0>
   1d3d8:	e8 4e 21 01 00       	call   2f52b <abort>
   1d3dd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d3e4:	8b 10                	mov    (%rax),%edx
   1d3e6:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1d3ec:	be 01 00 00 00       	mov    $0x1,%esi
   1d3f1:	89 c1                	mov    %eax,%ecx
   1d3f3:	d3 e6                	shl    %cl,%esi
   1d3f5:	89 f0                	mov    %esi,%eax
   1d3f7:	21 d0                	and    %edx,%eax
   1d3f9:	85 c0                	test   %eax,%eax
   1d3fb:	75 27                	jne    1d424 <tmalloc_small+0x627>
   1d3fd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d404:	8b 10                	mov    (%rax),%edx
   1d406:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   1d40c:	be 01 00 00 00       	mov    $0x1,%esi
   1d411:	89 c1                	mov    %eax,%ecx
   1d413:	d3 e6                	shl    %cl,%esi
   1d415:	89 f0                	mov    %esi,%eax
   1d417:	09 c2                	or     %eax,%edx
   1d419:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d420:	89 10                	mov    %edx,(%rax)
   1d422:	eb 34                	jmp    1d458 <tmalloc_small+0x65b>
   1d424:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d428:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1d42c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d433:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d437:	48 39 c2             	cmp    %rax,%rdx
   1d43a:	0f 93 c0             	setae  %al
   1d43d:	0f b6 c0             	movzbl %al,%eax
   1d440:	48 85 c0             	test   %rax,%rax
   1d443:	74 0e                	je     1d453 <tmalloc_small+0x656>
   1d445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d449:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d44d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1d451:	eb 05                	jmp    1d458 <tmalloc_small+0x65b>
   1d453:	e8 d3 20 01 00       	call   2f52b <abort>
   1d458:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d45c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d460:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d464:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d468:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d46c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d470:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d474:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1d478:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d47c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d480:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d484:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d488:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d48f:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1d493:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d497:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d49e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1d4a2:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1d4a6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1d4aa:	48 83 c0 10          	add    $0x10,%rax
   1d4ae:	eb 05                	jmp    1d4b5 <tmalloc_small+0x6b8>
   1d4b0:	e8 76 20 01 00       	call   2f52b <abort>
   1d4b5:	c9                   	leave  
   1d4b6:	c3                   	ret    

000000000001d4b7 <dlmalloc>:
   1d4b7:	f3 0f 1e fa          	endbr64 
   1d4bb:	55                   	push   %rbp
   1d4bc:	48 89 e5             	mov    %rsp,%rbp
   1d4bf:	53                   	push   %rbx
   1d4c0:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   1d4c7:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1d4ce:	48 8b 05 2b eb 04 00 	mov    0x4eb2b(%rip),%rax        # 6c000 <mparams>
   1d4d5:	48 85 c0             	test   %rax,%rax
   1d4d8:	75 07                	jne    1d4e1 <dlmalloc+0x2a>
   1d4da:	e8 3b 9f ff ff       	call   1741a <init_mparams>
   1d4df:	85 c0                	test   %eax,%eax
   1d4e1:	90                   	nop
   1d4e2:	8b 05 c8 ee 04 00    	mov    0x4eec8(%rip),%eax        # 6c3b0 <_gm_+0x370>
   1d4e8:	83 e0 02             	and    $0x2,%eax
   1d4eb:	85 c0                	test   %eax,%eax
   1d4ed:	74 23                	je     1d512 <dlmalloc+0x5b>
   1d4ef:	b8 01 00 00 00       	mov    $0x1,%eax
   1d4f4:	87 05 ba ee 04 00    	xchg   %eax,0x4eeba(%rip)        # 6c3b4 <_gm_+0x374>
   1d4fa:	85 c0                	test   %eax,%eax
   1d4fc:	74 14                	je     1d512 <dlmalloc+0x5b>
   1d4fe:	48 8d 3d af ee 04 00 	lea    0x4eeaf(%rip),%rdi        # 6c3b4 <_gm_+0x374>
   1d505:	e8 10 9e ff ff       	call   1731a <spin_acquire_lock>
   1d50a:	85 c0                	test   %eax,%eax
   1d50c:	0f 85 91 0a 00 00    	jne    1dfa3 <dlmalloc+0xaec>
   1d512:	48 81 bd 18 ff ff ff 	cmpq   $0xe0,-0xe8(%rbp)
   1d519:	e0 00 00 00 
   1d51d:	0f 87 12 07 00 00    	ja     1dc35 <dlmalloc+0x77e>
   1d523:	48 83 bd 18 ff ff ff 	cmpq   $0xe,-0xe8(%rbp)
   1d52a:	0e 
   1d52b:	76 11                	jbe    1d53e <dlmalloc+0x87>
   1d52d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1d534:	48 83 c0 1f          	add    $0x1f,%rax
   1d538:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1d53c:	eb 05                	jmp    1d543 <dlmalloc+0x8c>
   1d53e:	b8 20 00 00 00       	mov    $0x20,%eax
   1d543:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1d54a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d551:	48 c1 e8 03          	shr    $0x3,%rax
   1d555:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   1d55b:	8b 15 df ea 04 00    	mov    0x4eadf(%rip),%edx        # 6c040 <_gm_>
   1d561:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d567:	89 c1                	mov    %eax,%ecx
   1d569:	d3 ea                	shr    %cl,%edx
   1d56b:	89 d0                	mov    %edx,%eax
   1d56d:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1d573:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1d579:	83 e0 03             	and    $0x3,%eax
   1d57c:	85 c0                	test   %eax,%eax
   1d57e:	0f 84 d3 01 00 00    	je     1d757 <dlmalloc+0x2a0>
   1d584:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1d58a:	83 e0 01             	and    $0x1,%eax
   1d58d:	85 c0                	test   %eax,%eax
   1d58f:	0f 94 c0             	sete   %al
   1d592:	0f b6 c0             	movzbl %al,%eax
   1d595:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   1d59b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d5a1:	01 c0                	add    %eax,%eax
   1d5a3:	89 c0                	mov    %eax,%eax
   1d5a5:	48 83 c0 08          	add    $0x8,%rax
   1d5a9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d5b0:	00 
   1d5b1:	48 8d 05 88 ea 04 00 	lea    0x4ea88(%rip),%rax        # 6c040 <_gm_>
   1d5b8:	48 01 d0             	add    %rdx,%rax
   1d5bb:	48 83 c0 08          	add    $0x8,%rax
   1d5bf:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1d5c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d5c7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d5cb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1d5cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d5d3:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d5d7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1d5db:	48 89 c2             	mov    %rax,%rdx
   1d5de:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d5e4:	c1 e0 03             	shl    $0x3,%eax
   1d5e7:	89 c0                	mov    %eax,%eax
   1d5e9:	48 39 c2             	cmp    %rax,%rdx
   1d5ec:	74 05                	je     1d5f3 <dlmalloc+0x13c>
   1d5ee:	e8 38 1f 01 00       	call   2f52b <abort>
   1d5f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d5f7:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d5fb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1d5ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d603:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   1d607:	75 05                	jne    1d60e <dlmalloc+0x157>
   1d609:	e8 1d 1f 01 00       	call   2f52b <abort>
   1d60e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d612:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1d616:	75 05                	jne    1d61d <dlmalloc+0x166>
   1d618:	e8 0e 1f 01 00       	call   2f52b <abort>
   1d61d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d621:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d625:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1d629:	48 89 c2             	mov    %rax,%rdx
   1d62c:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d632:	c1 e0 03             	shl    $0x3,%eax
   1d635:	89 c0                	mov    %eax,%eax
   1d637:	48 39 c2             	cmp    %rax,%rdx
   1d63a:	74 05                	je     1d641 <dlmalloc+0x18a>
   1d63c:	e8 ea 1e 01 00       	call   2f52b <abort>
   1d641:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d645:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
   1d649:	75 23                	jne    1d66e <dlmalloc+0x1b7>
   1d64b:	8b 15 ef e9 04 00    	mov    0x4e9ef(%rip),%edx        # 6c040 <_gm_>
   1d651:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d657:	be 01 00 00 00       	mov    $0x1,%esi
   1d65c:	89 c1                	mov    %eax,%ecx
   1d65e:	d3 e6                	shl    %cl,%esi
   1d660:	89 f0                	mov    %esi,%eax
   1d662:	f7 d0                	not    %eax
   1d664:	21 d0                	and    %edx,%eax
   1d666:	89 05 d4 e9 04 00    	mov    %eax,0x4e9d4(%rip)        # 6c040 <_gm_>
   1d66c:	eb 4c                	jmp    1d6ba <dlmalloc+0x203>
   1d66e:	48 8b 05 e3 e9 04 00 	mov    0x4e9e3(%rip),%rax        # 6c058 <_gm_+0x18>
   1d675:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1d679:	0f 93 c0             	setae  %al
   1d67c:	0f b6 c0             	movzbl %al,%eax
   1d67f:	48 85 c0             	test   %rax,%rax
   1d682:	74 31                	je     1d6b5 <dlmalloc+0x1fe>
   1d684:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1d688:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d68c:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1d690:	0f 94 c0             	sete   %al
   1d693:	0f b6 c0             	movzbl %al,%eax
   1d696:	48 85 c0             	test   %rax,%rax
   1d699:	74 1a                	je     1d6b5 <dlmalloc+0x1fe>
   1d69b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1d69f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1d6a3:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d6a7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1d6ab:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1d6af:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d6b3:	eb 05                	jmp    1d6ba <dlmalloc+0x203>
   1d6b5:	e8 71 1e 01 00       	call   2f52b <abort>
   1d6ba:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d6c0:	c1 e0 03             	shl    $0x3,%eax
   1d6c3:	83 c8 03             	or     $0x3,%eax
   1d6c6:	89 c2                	mov    %eax,%edx
   1d6c8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d6cc:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d6d0:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d6d6:	c1 e0 03             	shl    $0x3,%eax
   1d6d9:	89 c2                	mov    %eax,%edx
   1d6db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d6df:	48 01 d0             	add    %rdx,%rax
   1d6e2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1d6e6:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d6ec:	c1 e0 03             	shl    $0x3,%eax
   1d6ef:	89 c1                	mov    %eax,%ecx
   1d6f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d6f5:	48 01 c8             	add    %rcx,%rax
   1d6f8:	48 83 ca 01          	or     $0x1,%rdx
   1d6fc:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d700:	48 8b 15 f9 e8 04 00 	mov    0x4e8f9(%rip),%rdx        # 6c000 <mparams>
   1d707:	48 8d 0d 32 e9 04 00 	lea    0x4e932(%rip),%rcx        # 6c040 <_gm_>
   1d70e:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d714:	c1 e0 03             	shl    $0x3,%eax
   1d717:	89 c6                	mov    %eax,%esi
   1d719:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d71d:	48 01 f0             	add    %rsi,%rax
   1d720:	48 31 ca             	xor    %rcx,%rdx
   1d723:	48 89 10             	mov    %rdx,(%rax)
   1d726:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1d72a:	48 83 c0 10          	add    $0x10,%rax
   1d72e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1d735:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1d73c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1d743:	48 89 c6             	mov    %rax,%rsi
   1d746:	48 8d 3d f3 e8 04 00 	lea    0x4e8f3(%rip),%rdi        # 6c040 <_gm_>
   1d74d:	e8 a4 a2 ff ff       	call   179f6 <do_check_malloced_chunk>
   1d752:	e9 d8 07 00 00       	jmp    1df2f <dlmalloc+0xa78>
   1d757:	48 8b 05 ea e8 04 00 	mov    0x4e8ea(%rip),%rax        # 6c048 <_gm_+0x8>
   1d75e:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1d765:	0f 86 4d 05 00 00    	jbe    1dcb8 <dlmalloc+0x801>
   1d76b:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   1d772:	0f 84 62 04 00 00    	je     1dbda <dlmalloc+0x723>
   1d778:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d77e:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   1d784:	89 c1                	mov    %eax,%ecx
   1d786:	d3 e2                	shl    %cl,%edx
   1d788:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d78e:	be 01 00 00 00       	mov    $0x1,%esi
   1d793:	89 c1                	mov    %eax,%ecx
   1d795:	d3 e6                	shl    %cl,%esi
   1d797:	89 f0                	mov    %esi,%eax
   1d799:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1d79c:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1d7a2:	bf 01 00 00 00       	mov    $0x1,%edi
   1d7a7:	89 c1                	mov    %eax,%ecx
   1d7a9:	d3 e7                	shl    %cl,%edi
   1d7ab:	89 f8                	mov    %edi,%eax
   1d7ad:	01 c0                	add    %eax,%eax
   1d7af:	f7 d8                	neg    %eax
   1d7b1:	09 f0                	or     %esi,%eax
   1d7b3:	21 d0                	and    %edx,%eax
   1d7b5:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   1d7bb:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   1d7c1:	f7 d8                	neg    %eax
   1d7c3:	23 85 34 ff ff ff    	and    -0xcc(%rbp),%eax
   1d7c9:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
   1d7cf:	f3 0f bc 85 38 ff ff 	tzcnt  -0xc8(%rbp),%eax
   1d7d6:	ff 
   1d7d7:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   1d7dd:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1d7e3:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1d7e9:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d7ef:	01 c0                	add    %eax,%eax
   1d7f1:	89 c0                	mov    %eax,%eax
   1d7f3:	48 83 c0 08          	add    $0x8,%rax
   1d7f7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d7fe:	00 
   1d7ff:	48 8d 05 3a e8 04 00 	lea    0x4e83a(%rip),%rax        # 6c040 <_gm_>
   1d806:	48 01 d0             	add    %rdx,%rax
   1d809:	48 83 c0 08          	add    $0x8,%rax
   1d80d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1d814:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1d81b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d81f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1d826:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d82d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d831:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1d835:	48 89 c2             	mov    %rax,%rdx
   1d838:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d83e:	c1 e0 03             	shl    $0x3,%eax
   1d841:	89 c0                	mov    %eax,%eax
   1d843:	48 39 c2             	cmp    %rax,%rdx
   1d846:	74 05                	je     1d84d <dlmalloc+0x396>
   1d848:	e8 de 1c 01 00       	call   2f52b <abort>
   1d84d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d854:	48 8b 40 10          	mov    0x10(%rax),%rax
   1d858:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1d85f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d866:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
   1d86d:	75 05                	jne    1d874 <dlmalloc+0x3bd>
   1d86f:	e8 b7 1c 01 00       	call   2f52b <abort>
   1d874:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d87b:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1d882:	75 05                	jne    1d889 <dlmalloc+0x3d2>
   1d884:	e8 a2 1c 01 00       	call   2f52b <abort>
   1d889:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d890:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d894:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1d898:	48 89 c2             	mov    %rax,%rdx
   1d89b:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d8a1:	c1 e0 03             	shl    $0x3,%eax
   1d8a4:	89 c0                	mov    %eax,%eax
   1d8a6:	48 39 c2             	cmp    %rax,%rdx
   1d8a9:	74 05                	je     1d8b0 <dlmalloc+0x3f9>
   1d8ab:	e8 7b 1c 01 00       	call   2f52b <abort>
   1d8b0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1d8b7:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1d8be:	75 23                	jne    1d8e3 <dlmalloc+0x42c>
   1d8c0:	8b 15 7a e7 04 00    	mov    0x4e77a(%rip),%edx        # 6c040 <_gm_>
   1d8c6:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d8cc:	be 01 00 00 00       	mov    $0x1,%esi
   1d8d1:	89 c1                	mov    %eax,%ecx
   1d8d3:	d3 e6                	shl    %cl,%esi
   1d8d5:	89 f0                	mov    %esi,%eax
   1d8d7:	f7 d0                	not    %eax
   1d8d9:	21 d0                	and    %edx,%eax
   1d8db:	89 05 5f e7 04 00    	mov    %eax,0x4e75f(%rip)        # 6c040 <_gm_>
   1d8e1:	eb 61                	jmp    1d944 <dlmalloc+0x48d>
   1d8e3:	48 8b 05 6e e7 04 00 	mov    0x4e76e(%rip),%rax        # 6c058 <_gm_+0x18>
   1d8ea:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1d8f1:	0f 93 c0             	setae  %al
   1d8f4:	0f b6 c0             	movzbl %al,%eax
   1d8f7:	48 85 c0             	test   %rax,%rax
   1d8fa:	74 43                	je     1d93f <dlmalloc+0x488>
   1d8fc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1d903:	48 8b 40 18          	mov    0x18(%rax),%rax
   1d907:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1d90e:	0f 94 c0             	sete   %al
   1d911:	0f b6 c0             	movzbl %al,%eax
   1d914:	48 85 c0             	test   %rax,%rax
   1d917:	74 26                	je     1d93f <dlmalloc+0x488>
   1d919:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1d920:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1d927:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1d92b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1d932:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1d939:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1d93d:	eb 05                	jmp    1d944 <dlmalloc+0x48d>
   1d93f:	e8 e7 1b 01 00       	call   2f52b <abort>
   1d944:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d94a:	c1 e0 03             	shl    $0x3,%eax
   1d94d:	89 c0                	mov    %eax,%eax
   1d94f:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1d956:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1d95d:	48 83 bd 78 ff ff ff 	cmpq   $0x1f,-0x88(%rbp)
   1d964:	1f 
   1d965:	77 7d                	ja     1d9e4 <dlmalloc+0x52d>
   1d967:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d96d:	c1 e0 03             	shl    $0x3,%eax
   1d970:	83 c8 03             	or     $0x3,%eax
   1d973:	89 c2                	mov    %eax,%edx
   1d975:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d97c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d980:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d986:	c1 e0 03             	shl    $0x3,%eax
   1d989:	89 c2                	mov    %eax,%edx
   1d98b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d992:	48 01 d0             	add    %rdx,%rax
   1d995:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1d999:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d99f:	c1 e0 03             	shl    $0x3,%eax
   1d9a2:	89 c1                	mov    %eax,%ecx
   1d9a4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d9ab:	48 01 c8             	add    %rcx,%rax
   1d9ae:	48 83 ca 01          	or     $0x1,%rdx
   1d9b2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d9b6:	48 8b 15 43 e6 04 00 	mov    0x4e643(%rip),%rdx        # 6c000 <mparams>
   1d9bd:	48 8d 0d 7c e6 04 00 	lea    0x4e67c(%rip),%rcx        # 6c040 <_gm_>
   1d9c4:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1d9ca:	c1 e0 03             	shl    $0x3,%eax
   1d9cd:	89 c6                	mov    %eax,%esi
   1d9cf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d9d6:	48 01 f0             	add    %rsi,%rax
   1d9d9:	48 31 ca             	xor    %rcx,%rdx
   1d9dc:	48 89 10             	mov    %rdx,(%rax)
   1d9df:	e9 c2 01 00 00       	jmp    1dba6 <dlmalloc+0x6ef>
   1d9e4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d9eb:	48 83 c8 03          	or     $0x3,%rax
   1d9ef:	48 89 c2             	mov    %rax,%rdx
   1d9f2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1d9f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1d9fd:	48 8b 15 fc e5 04 00 	mov    0x4e5fc(%rip),%rdx        # 6c000 <mparams>
   1da04:	48 8d 35 35 e6 04 00 	lea    0x4e635(%rip),%rsi        # 6c040 <_gm_>
   1da0b:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
   1da12:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1da19:	48 01 c8             	add    %rcx,%rax
   1da1c:	48 31 f2             	xor    %rsi,%rdx
   1da1f:	48 89 10             	mov    %rdx,(%rax)
   1da22:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1da29:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1da30:	48 01 d0             	add    %rdx,%rax
   1da33:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1da37:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1da3e:	48 83 c8 01          	or     $0x1,%rax
   1da42:	48 89 c2             	mov    %rax,%rdx
   1da45:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1da49:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1da4d:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1da51:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1da58:	48 01 c2             	add    %rax,%rdx
   1da5b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1da62:	48 89 02             	mov    %rax,(%rdx)
   1da65:	48 8b 05 dc e5 04 00 	mov    0x4e5dc(%rip),%rax        # 6c048 <_gm_+0x8>
   1da6c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1da70:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1da74:	48 c1 e8 03          	shr    $0x3,%rax
   1da78:	48 83 f8 1f          	cmp    $0x1f,%rax
   1da7c:	76 05                	jbe    1da83 <dlmalloc+0x5cc>
   1da7e:	e8 a8 1a 01 00       	call   2f52b <abort>
   1da83:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   1da88:	0f 84 ff 00 00 00    	je     1db8d <dlmalloc+0x6d6>
   1da8e:	48 8b 05 cb e5 04 00 	mov    0x4e5cb(%rip),%rax        # 6c060 <_gm_+0x20>
   1da95:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1da99:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1da9d:	48 c1 e8 03          	shr    $0x3,%rax
   1daa1:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   1daa7:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1daad:	01 c0                	add    %eax,%eax
   1daaf:	89 c0                	mov    %eax,%eax
   1dab1:	48 83 c0 08          	add    $0x8,%rax
   1dab5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1dabc:	00 
   1dabd:	48 8d 05 7c e5 04 00 	lea    0x4e57c(%rip),%rax        # 6c040 <_gm_>
   1dac4:	48 01 d0             	add    %rdx,%rax
   1dac7:	48 83 c0 08          	add    $0x8,%rax
   1dacb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1dacf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1dad3:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1dada:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
   1dadf:	77 05                	ja     1dae6 <dlmalloc+0x62f>
   1dae1:	e8 45 1a 01 00       	call   2f52b <abort>
   1dae6:	8b 15 54 e5 04 00    	mov    0x4e554(%rip),%edx        # 6c040 <_gm_>
   1daec:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1daf2:	be 01 00 00 00       	mov    $0x1,%esi
   1daf7:	89 c1                	mov    %eax,%ecx
   1daf9:	d3 e6                	shl    %cl,%esi
   1dafb:	89 f0                	mov    %esi,%eax
   1dafd:	21 d0                	and    %edx,%eax
   1daff:	85 c0                	test   %eax,%eax
   1db01:	75 21                	jne    1db24 <dlmalloc+0x66d>
   1db03:	8b 15 37 e5 04 00    	mov    0x4e537(%rip),%edx        # 6c040 <_gm_>
   1db09:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1db0f:	be 01 00 00 00       	mov    $0x1,%esi
   1db14:	89 c1                	mov    %eax,%ecx
   1db16:	d3 e6                	shl    %cl,%esi
   1db18:	89 f0                	mov    %esi,%eax
   1db1a:	09 d0                	or     %edx,%eax
   1db1c:	89 05 1e e5 04 00    	mov    %eax,0x4e51e(%rip)        # 6c040 <_gm_>
   1db22:	eb 33                	jmp    1db57 <dlmalloc+0x6a0>
   1db24:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1db28:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1db2c:	48 8b 05 25 e5 04 00 	mov    0x4e525(%rip),%rax        # 6c058 <_gm_+0x18>
   1db33:	48 39 c2             	cmp    %rax,%rdx
   1db36:	0f 93 c0             	setae  %al
   1db39:	0f b6 c0             	movzbl %al,%eax
   1db3c:	48 85 c0             	test   %rax,%rax
   1db3f:	74 11                	je     1db52 <dlmalloc+0x69b>
   1db41:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1db45:	48 8b 40 10          	mov    0x10(%rax),%rax
   1db49:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1db50:	eb 05                	jmp    1db57 <dlmalloc+0x6a0>
   1db52:	e8 d4 19 01 00       	call   2f52b <abort>
   1db57:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1db5b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1db5f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1db63:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1db6a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1db6e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1db72:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1db76:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1db7d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1db81:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1db85:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1db89:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1db8d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1db94:	48 89 05 ad e4 04 00 	mov    %rax,0x4e4ad(%rip)        # 6c048 <_gm_+0x8>
   1db9b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1db9f:	48 89 05 ba e4 04 00 	mov    %rax,0x4e4ba(%rip)        # 6c060 <_gm_+0x20>
   1dba6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1dbad:	48 83 c0 10          	add    $0x10,%rax
   1dbb1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1dbb8:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1dbbf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1dbc6:	48 89 c6             	mov    %rax,%rsi
   1dbc9:	48 8d 3d 70 e4 04 00 	lea    0x4e470(%rip),%rdi        # 6c040 <_gm_>
   1dbd0:	e8 21 9e ff ff       	call   179f6 <do_check_malloced_chunk>
   1dbd5:	e9 55 03 00 00       	jmp    1df2f <dlmalloc+0xa78>
   1dbda:	8b 05 64 e4 04 00    	mov    0x4e464(%rip),%eax        # 6c044 <_gm_+0x4>
   1dbe0:	85 c0                	test   %eax,%eax
   1dbe2:	0f 84 d0 00 00 00    	je     1dcb8 <dlmalloc+0x801>
   1dbe8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dbef:	48 89 c6             	mov    %rax,%rsi
   1dbf2:	48 8d 3d 47 e4 04 00 	lea    0x4e447(%rip),%rdi        # 6c040 <_gm_>
   1dbf9:	e8 ff f1 ff ff       	call   1cdfd <tmalloc_small>
   1dbfe:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1dc05:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1dc0c:	00 
   1dc0d:	0f 84 a5 00 00 00    	je     1dcb8 <dlmalloc+0x801>
   1dc13:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1dc1a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1dc21:	48 89 c6             	mov    %rax,%rsi
   1dc24:	48 8d 3d 15 e4 04 00 	lea    0x4e415(%rip),%rdi        # 6c040 <_gm_>
   1dc2b:	e8 c6 9d ff ff       	call   179f6 <do_check_malloced_chunk>
   1dc30:	e9 fa 02 00 00       	jmp    1df2f <dlmalloc+0xa78>
   1dc35:	48 81 bd 18 ff ff ff 	cmpq   $0xffffffffffffff7f,-0xe8(%rbp)
   1dc3c:	7f ff ff ff 
   1dc40:	76 0d                	jbe    1dc4f <dlmalloc+0x798>
   1dc42:	48 c7 85 50 ff ff ff 	movq   $0xffffffffffffffff,-0xb0(%rbp)
   1dc49:	ff ff ff ff 
   1dc4d:	eb 69                	jmp    1dcb8 <dlmalloc+0x801>
   1dc4f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1dc56:	48 83 c0 1f          	add    $0x1f,%rax
   1dc5a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1dc5e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1dc65:	8b 05 d9 e3 04 00    	mov    0x4e3d9(%rip),%eax        # 6c044 <_gm_+0x4>
   1dc6b:	85 c0                	test   %eax,%eax
   1dc6d:	74 49                	je     1dcb8 <dlmalloc+0x801>
   1dc6f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dc76:	48 89 c6             	mov    %rax,%rsi
   1dc79:	48 8d 3d c0 e3 04 00 	lea    0x4e3c0(%rip),%rdi        # 6c040 <_gm_>
   1dc80:	e8 0a e5 ff ff       	call   1c18f <tmalloc_large>
   1dc85:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1dc8c:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1dc93:	00 
   1dc94:	74 22                	je     1dcb8 <dlmalloc+0x801>
   1dc96:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1dc9d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1dca4:	48 89 c6             	mov    %rax,%rsi
   1dca7:	48 8d 3d 92 e3 04 00 	lea    0x4e392(%rip),%rdi        # 6c040 <_gm_>
   1dcae:	e8 43 9d ff ff       	call   179f6 <do_check_malloced_chunk>
   1dcb3:	e9 77 02 00 00       	jmp    1df2f <dlmalloc+0xa78>
   1dcb8:	48 8b 05 89 e3 04 00 	mov    0x4e389(%rip),%rax        # 6c048 <_gm_+0x8>
   1dcbf:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1dcc6:	0f 87 58 01 00 00    	ja     1de24 <dlmalloc+0x96d>
   1dccc:	48 8b 05 75 e3 04 00 	mov    0x4e375(%rip),%rax        # 6c048 <_gm_+0x8>
   1dcd3:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1dcda:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1dcde:	48 8b 05 7b e3 04 00 	mov    0x4e37b(%rip),%rax        # 6c060 <_gm_+0x20>
   1dce5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1dce9:	48 83 7d d0 1f       	cmpq   $0x1f,-0x30(%rbp)
   1dcee:	0f 86 8a 00 00 00    	jbe    1dd7e <dlmalloc+0x8c7>
   1dcf4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1dcf8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dcff:	48 01 d0             	add    %rdx,%rax
   1dd02:	48 89 05 57 e3 04 00 	mov    %rax,0x4e357(%rip)        # 6c060 <_gm_+0x20>
   1dd09:	48 8b 05 50 e3 04 00 	mov    0x4e350(%rip),%rax        # 6c060 <_gm_+0x20>
   1dd10:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1dd14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dd18:	48 89 05 29 e3 04 00 	mov    %rax,0x4e329(%rip)        # 6c048 <_gm_+0x8>
   1dd1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dd23:	48 83 c8 01          	or     $0x1,%rax
   1dd27:	48 89 c2             	mov    %rax,%rdx
   1dd2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dd2e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1dd32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1dd36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dd3a:	48 01 c2             	add    %rax,%rdx
   1dd3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dd41:	48 89 02             	mov    %rax,(%rdx)
   1dd44:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dd4b:	48 83 c8 03          	or     $0x3,%rax
   1dd4f:	48 89 c2             	mov    %rax,%rdx
   1dd52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd56:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1dd5a:	48 8b 15 9f e2 04 00 	mov    0x4e29f(%rip),%rdx        # 6c000 <mparams>
   1dd61:	48 8d 35 d8 e2 04 00 	lea    0x4e2d8(%rip),%rsi        # 6c040 <_gm_>
   1dd68:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1dd6c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dd73:	48 01 c8             	add    %rcx,%rax
   1dd76:	48 31 f2             	xor    %rsi,%rdx
   1dd79:	48 89 10             	mov    %rdx,(%rax)
   1dd7c:	eb 75                	jmp    1ddf3 <dlmalloc+0x93c>
   1dd7e:	48 8b 05 c3 e2 04 00 	mov    0x4e2c3(%rip),%rax        # 6c048 <_gm_+0x8>
   1dd85:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1dd89:	48 c7 05 b4 e2 04 00 	movq   $0x0,0x4e2b4(%rip)        # 6c048 <_gm_+0x8>
   1dd90:	00 00 00 00 
   1dd94:	48 c7 05 c1 e2 04 00 	movq   $0x0,0x4e2c1(%rip)        # 6c060 <_gm_+0x20>
   1dd9b:	00 00 00 00 
   1dd9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1dda3:	48 83 c8 03          	or     $0x3,%rax
   1dda7:	48 89 c2             	mov    %rax,%rdx
   1ddaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddae:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ddb2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ddb6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ddba:	48 01 d0             	add    %rdx,%rax
   1ddbd:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1ddc1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1ddc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ddc9:	48 01 c8             	add    %rcx,%rax
   1ddcc:	48 83 ca 01          	or     $0x1,%rdx
   1ddd0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ddd4:	48 8b 15 25 e2 04 00 	mov    0x4e225(%rip),%rdx        # 6c000 <mparams>
   1dddb:	48 8d 35 5e e2 04 00 	lea    0x4e25e(%rip),%rsi        # 6c040 <_gm_>
   1dde2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1dde6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ddea:	48 01 c8             	add    %rcx,%rax
   1dded:	48 31 f2             	xor    %rsi,%rdx
   1ddf0:	48 89 10             	mov    %rdx,(%rax)
   1ddf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddf7:	48 83 c0 10          	add    $0x10,%rax
   1ddfb:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1de02:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1de09:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1de10:	48 89 c6             	mov    %rax,%rsi
   1de13:	48 8d 3d 26 e2 04 00 	lea    0x4e226(%rip),%rdi        # 6c040 <_gm_>
   1de1a:	e8 d7 9b ff ff       	call   179f6 <do_check_malloced_chunk>
   1de1f:	e9 0b 01 00 00       	jmp    1df2f <dlmalloc+0xa78>
   1de24:	48 8b 05 25 e2 04 00 	mov    0x4e225(%rip),%rax        # 6c050 <_gm_+0x10>
   1de2b:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1de32:	0f 83 da 00 00 00    	jae    1df12 <dlmalloc+0xa5b>
   1de38:	48 8b 05 11 e2 04 00 	mov    0x4e211(%rip),%rax        # 6c050 <_gm_+0x10>
   1de3f:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
   1de46:	48 89 05 03 e2 04 00 	mov    %rax,0x4e203(%rip)        # 6c050 <_gm_+0x10>
   1de4d:	48 8b 05 fc e1 04 00 	mov    0x4e1fc(%rip),%rax        # 6c050 <_gm_+0x10>
   1de54:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1de58:	48 8b 05 09 e2 04 00 	mov    0x4e209(%rip),%rax        # 6c068 <_gm_+0x28>
   1de5f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1de63:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1de67:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1de6e:	48 01 d0             	add    %rdx,%rax
   1de71:	48 89 05 f0 e1 04 00 	mov    %rax,0x4e1f0(%rip)        # 6c068 <_gm_+0x28>
   1de78:	48 8b 05 e9 e1 04 00 	mov    0x4e1e9(%rip),%rax        # 6c068 <_gm_+0x28>
   1de7f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1de83:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1de87:	48 83 c8 01          	or     $0x1,%rax
   1de8b:	48 89 c2             	mov    %rax,%rdx
   1de8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1de92:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1de96:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1de9d:	48 83 c8 03          	or     $0x3,%rax
   1dea1:	48 89 c2             	mov    %rax,%rdx
   1dea4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1dea8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1deac:	48 8b 15 4d e1 04 00 	mov    0x4e14d(%rip),%rdx        # 6c000 <mparams>
   1deb3:	48 8d 35 86 e1 04 00 	lea    0x4e186(%rip),%rsi        # 6c040 <_gm_>
   1deba:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1debe:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dec5:	48 01 c8             	add    %rcx,%rax
   1dec8:	48 31 f2             	xor    %rsi,%rdx
   1decb:	48 89 10             	mov    %rdx,(%rax)
   1dece:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ded2:	48 83 c0 10          	add    $0x10,%rax
   1ded6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1dedd:	48 8b 05 84 e1 04 00 	mov    0x4e184(%rip),%rax        # 6c068 <_gm_+0x28>
   1dee4:	48 89 c6             	mov    %rax,%rsi
   1dee7:	48 8d 3d 52 e1 04 00 	lea    0x4e152(%rip),%rdi        # 6c040 <_gm_>
   1deee:	e8 6b 97 ff ff       	call   1765e <do_check_top_chunk>
   1def3:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1defa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1df01:	48 89 c6             	mov    %rax,%rsi
   1df04:	48 8d 3d 35 e1 04 00 	lea    0x4e135(%rip),%rdi        # 6c040 <_gm_>
   1df0b:	e8 e6 9a ff ff       	call   179f6 <do_check_malloced_chunk>
   1df10:	eb 1d                	jmp    1df2f <dlmalloc+0xa78>
   1df12:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1df19:	48 89 c6             	mov    %rax,%rsi
   1df1c:	48 8d 3d 1d e1 04 00 	lea    0x4e11d(%rip),%rdi        # 6c040 <_gm_>
   1df23:	e8 b1 c2 ff ff       	call   1a1d9 <sys_alloc>
   1df28:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1df2f:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1df36:	00 
   1df37:	74 49                	je     1df82 <dlmalloc+0xacb>
   1df39:	e8 c1 11 ff ff       	call   f0ff <get_heap_base>
   1df3e:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1df45:	72 36                	jb     1df7d <dlmalloc+0xac6>
   1df47:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1df4e:	48 f7 d0             	not    %rax
   1df51:	48 39 85 18 ff ff ff 	cmp    %rax,-0xe8(%rbp)
   1df58:	77 23                	ja     1df7d <dlmalloc+0xac6>
   1df5a:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1df61:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1df68:	48 01 d0             	add    %rdx,%rax
   1df6b:	48 89 c3             	mov    %rax,%rbx
   1df6e:	bf 00 00 00 00       	mov    $0x0,%edi
   1df73:	e8 3c 8e ff ff       	call   16db4 <sbrk>
   1df78:	48 39 c3             	cmp    %rax,%rbx
   1df7b:	76 05                	jbe    1df82 <dlmalloc+0xacb>
   1df7d:	e8 a9 15 01 00       	call   2f52b <abort>
   1df82:	8b 05 28 e4 04 00    	mov    0x4e428(%rip),%eax        # 6c3b0 <_gm_+0x370>
   1df88:	83 e0 02             	and    $0x2,%eax
   1df8b:	85 c0                	test   %eax,%eax
   1df8d:	74 0b                	je     1df9a <dlmalloc+0xae3>
   1df8f:	b8 00 00 00 00       	mov    $0x0,%eax
   1df94:	89 05 1a e4 04 00    	mov    %eax,0x4e41a(%rip)        # 6c3b4 <_gm_+0x374>
   1df9a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1dfa1:	eb 05                	jmp    1dfa8 <dlmalloc+0xaf1>
   1dfa3:	b8 00 00 00 00       	mov    $0x0,%eax
   1dfa8:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   1dfaf:	5b                   	pop    %rbx
   1dfb0:	5d                   	pop    %rbp
   1dfb1:	c3                   	ret    

000000000001dfb2 <dlfree>:
   1dfb2:	f3 0f 1e fa          	endbr64 
   1dfb6:	55                   	push   %rbp
   1dfb7:	48 89 e5             	mov    %rsp,%rbp
   1dfba:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
   1dfc1:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   1dfc8:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
   1dfcf:	00 
   1dfd0:	0f 84 ff 14 00 00    	je     1f4d5 <dlfree+0x1523>
   1dfd6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1dfdd:	48 83 e8 10          	sub    $0x10,%rax
   1dfe1:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   1dfe8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1dfef:	48 8b 40 08          	mov    0x8(%rax),%rax
   1dff3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1dff7:	48 89 c2             	mov    %rax,%rdx
   1dffa:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e001:	48 01 d0             	add    %rdx,%rax
   1e004:	48 8b 10             	mov    (%rax),%rdx
   1e007:	48 8b 05 f2 df 04 00 	mov    0x4dff2(%rip),%rax        # 6c000 <mparams>
   1e00e:	48 31 d0             	xor    %rdx,%rax
   1e011:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1e018:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e01f:	48 8b 50 40          	mov    0x40(%rax),%rdx
   1e023:	48 8b 05 d6 df 04 00 	mov    0x4dfd6(%rip),%rax        # 6c000 <mparams>
   1e02a:	48 39 c2             	cmp    %rax,%rdx
   1e02d:	74 05                	je     1e034 <dlfree+0x82>
   1e02f:	e8 f7 14 01 00       	call   2f52b <abort>
   1e034:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e03b:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1e041:	83 e0 02             	and    $0x2,%eax
   1e044:	85 c0                	test   %eax,%eax
   1e046:	74 36                	je     1e07e <dlfree+0xcc>
   1e048:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e04f:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   1e056:	b8 01 00 00 00       	mov    $0x1,%eax
   1e05b:	87 02                	xchg   %eax,(%rdx)
   1e05d:	85 c0                	test   %eax,%eax
   1e05f:	74 1d                	je     1e07e <dlfree+0xcc>
   1e061:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e068:	48 05 74 03 00 00    	add    $0x374,%rax
   1e06e:	48 89 c7             	mov    %rax,%rdi
   1e071:	e8 a4 92 ff ff       	call   1731a <spin_acquire_lock>
   1e076:	85 c0                	test   %eax,%eax
   1e078:	0f 85 57 14 00 00    	jne    1f4d5 <dlfree+0x1523>
   1e07e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e085:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e08c:	48 89 d6             	mov    %rdx,%rsi
   1e08f:	48 89 c7             	mov    %rax,%rdi
   1e092:	e8 10 97 ff ff       	call   177a7 <do_check_inuse_chunk>
   1e097:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e09e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e0a2:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1e0a9:	0f 93 c0             	setae  %al
   1e0ac:	0f b6 c0             	movzbl %al,%eax
   1e0af:	48 85 c0             	test   %rax,%rax
   1e0b2:	0f 84 e8 13 00 00    	je     1f4a0 <dlfree+0x14ee>
   1e0b8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e0bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e0c3:	83 e0 03             	and    $0x3,%eax
   1e0c6:	48 83 f8 01          	cmp    $0x1,%rax
   1e0ca:	0f 95 c0             	setne  %al
   1e0cd:	0f b6 c0             	movzbl %al,%eax
   1e0d0:	48 85 c0             	test   %rax,%rax
   1e0d3:	0f 84 c7 13 00 00    	je     1f4a0 <dlfree+0x14ee>
   1e0d9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e0e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e0e4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1e0e8:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   1e0ef:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e0f6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e0fd:	48 01 d0             	add    %rdx,%rax
   1e100:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1e107:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e10e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e112:	83 e0 01             	and    $0x1,%eax
   1e115:	48 85 c0             	test   %rax,%rax
   1e118:	0f 85 3a 07 00 00    	jne    1e858 <dlfree+0x8a6>
   1e11e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e125:	48 8b 00             	mov    (%rax),%rax
   1e128:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1e12f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e136:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e13a:	83 e0 03             	and    $0x3,%eax
   1e13d:	48 85 c0             	test   %rax,%rax
   1e140:	75 21                	jne    1e163 <dlfree+0x1b1>
   1e142:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1e149:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e150:	48 01 d0             	add    %rdx,%rax
   1e153:	48 83 c0 20          	add    $0x20,%rax
   1e157:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   1e15e:	e9 4a 13 00 00       	jmp    1f4ad <dlfree+0x14fb>
   1e163:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1e16a:	48 f7 d8             	neg    %rax
   1e16d:	48 89 c2             	mov    %rax,%rdx
   1e170:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e177:	48 01 d0             	add    %rdx,%rax
   1e17a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1e181:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1e188:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   1e18f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1e196:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
   1e19d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e1a4:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e1a8:	48 39 85 38 ff ff ff 	cmp    %rax,-0xc8(%rbp)
   1e1af:	0f 93 c0             	setae  %al
   1e1b2:	0f b6 c0             	movzbl %al,%eax
   1e1b5:	48 85 c0             	test   %rax,%rax
   1e1b8:	0f 84 e5 12 00 00    	je     1f4a3 <dlfree+0x14f1>
   1e1be:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e1c5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e1c9:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1e1d0:	0f 84 06 06 00 00    	je     1e7dc <dlfree+0x82a>
   1e1d6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1e1dd:	48 c1 e8 03          	shr    $0x3,%rax
   1e1e1:	48 83 f8 1f          	cmp    $0x1f,%rax
   1e1e5:	0f 87 f9 01 00 00    	ja     1e3e4 <dlfree+0x432>
   1e1eb:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e1f2:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e1f6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1e1fd:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e204:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e208:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1e20f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1e216:	48 c1 e8 03          	shr    $0x3,%rax
   1e21a:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
   1e220:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e227:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
   1e22e:	75 05                	jne    1e235 <dlfree+0x283>
   1e230:	e8 f6 12 01 00       	call   2f52b <abort>
   1e235:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e23c:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1e243:	75 05                	jne    1e24a <dlfree+0x298>
   1e245:	e8 e1 12 01 00       	call   2f52b <abort>
   1e24a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e251:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e255:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1e259:	48 89 c2             	mov    %rax,%rdx
   1e25c:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   1e262:	c1 e0 03             	shl    $0x3,%eax
   1e265:	89 c0                	mov    %eax,%eax
   1e267:	48 39 c2             	cmp    %rax,%rdx
   1e26a:	74 05                	je     1e271 <dlfree+0x2bf>
   1e26c:	e8 ba 12 01 00       	call   2f52b <abort>
   1e271:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   1e277:	01 c0                	add    %eax,%eax
   1e279:	89 c0                	mov    %eax,%eax
   1e27b:	48 83 c0 08          	add    $0x8,%rax
   1e27f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e286:	00 
   1e287:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e28e:	48 01 d0             	add    %rdx,%rax
   1e291:	48 83 c0 08          	add    $0x8,%rax
   1e295:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1e29c:	0f 94 c0             	sete   %al
   1e29f:	0f b6 c0             	movzbl %al,%eax
   1e2a2:	48 85 c0             	test   %rax,%rax
   1e2a5:	75 4e                	jne    1e2f5 <dlfree+0x343>
   1e2a7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e2ae:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e2b2:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1e2b9:	0f 93 c0             	setae  %al
   1e2bc:	0f b6 c0             	movzbl %al,%eax
   1e2bf:	48 85 c0             	test   %rax,%rax
   1e2c2:	74 24                	je     1e2e8 <dlfree+0x336>
   1e2c4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1e2cb:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e2cf:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1e2d6:	0f 94 c0             	sete   %al
   1e2d9:	0f b6 c0             	movzbl %al,%eax
   1e2dc:	48 85 c0             	test   %rax,%rax
   1e2df:	74 07                	je     1e2e8 <dlfree+0x336>
   1e2e1:	b8 01 00 00 00       	mov    $0x1,%eax
   1e2e6:	eb 05                	jmp    1e2ed <dlfree+0x33b>
   1e2e8:	b8 00 00 00 00       	mov    $0x0,%eax
   1e2ed:	85 c0                	test   %eax,%eax
   1e2ef:	0f 84 ea 00 00 00    	je     1e3df <dlfree+0x42d>
   1e2f5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1e2fc:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
   1e303:	75 2c                	jne    1e331 <dlfree+0x37f>
   1e305:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e30c:	8b 10                	mov    (%rax),%edx
   1e30e:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   1e314:	be 01 00 00 00       	mov    $0x1,%esi
   1e319:	89 c1                	mov    %eax,%ecx
   1e31b:	d3 e6                	shl    %cl,%esi
   1e31d:	89 f0                	mov    %esi,%eax
   1e31f:	f7 d0                	not    %eax
   1e321:	21 c2                	and    %eax,%edx
   1e323:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e32a:	89 10                	mov    %edx,(%rax)
   1e32c:	e9 27 05 00 00       	jmp    1e858 <dlfree+0x8a6>
   1e331:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
   1e337:	01 c0                	add    %eax,%eax
   1e339:	89 c0                	mov    %eax,%eax
   1e33b:	48 83 c0 08          	add    $0x8,%rax
   1e33f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e346:	00 
   1e347:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e34e:	48 01 d0             	add    %rdx,%rax
   1e351:	48 83 c0 08          	add    $0x8,%rax
   1e355:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1e35c:	0f 94 c0             	sete   %al
   1e35f:	0f b6 c0             	movzbl %al,%eax
   1e362:	48 85 c0             	test   %rax,%rax
   1e365:	75 4a                	jne    1e3b1 <dlfree+0x3ff>
   1e367:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e36e:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e372:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   1e379:	0f 93 c0             	setae  %al
   1e37c:	0f b6 c0             	movzbl %al,%eax
   1e37f:	48 85 c0             	test   %rax,%rax
   1e382:	74 24                	je     1e3a8 <dlfree+0x3f6>
   1e384:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1e38b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e38f:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1e396:	0f 94 c0             	sete   %al
   1e399:	0f b6 c0             	movzbl %al,%eax
   1e39c:	48 85 c0             	test   %rax,%rax
   1e39f:	74 07                	je     1e3a8 <dlfree+0x3f6>
   1e3a1:	b8 01 00 00 00       	mov    $0x1,%eax
   1e3a6:	eb 05                	jmp    1e3ad <dlfree+0x3fb>
   1e3a8:	b8 00 00 00 00       	mov    $0x0,%eax
   1e3ad:	85 c0                	test   %eax,%eax
   1e3af:	74 29                	je     1e3da <dlfree+0x428>
   1e3b1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1e3b8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1e3bf:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e3c3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1e3ca:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1e3d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e3d5:	e9 7e 04 00 00       	jmp    1e858 <dlfree+0x8a6>
   1e3da:	e8 4c 11 01 00       	call   2f52b <abort>
   1e3df:	e8 47 11 01 00       	call   2f52b <abort>
   1e3e4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e3eb:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1e3f2:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e3f9:	48 8b 40 30          	mov    0x30(%rax),%rax
   1e3fd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1e404:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e40b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e40f:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1e416:	0f 84 b9 00 00 00    	je     1e4d5 <dlfree+0x523>
   1e41c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e423:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e427:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1e42e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e435:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e439:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e440:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e447:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e44b:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
   1e452:	0f 93 c0             	setae  %al
   1e455:	0f b6 c0             	movzbl %al,%eax
   1e458:	48 85 c0             	test   %rax,%rax
   1e45b:	74 24                	je     1e481 <dlfree+0x4cf>
   1e45d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1e464:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e468:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1e46f:	0f 94 c0             	sete   %al
   1e472:	0f b6 c0             	movzbl %al,%eax
   1e475:	48 85 c0             	test   %rax,%rax
   1e478:	74 07                	je     1e481 <dlfree+0x4cf>
   1e47a:	b8 01 00 00 00       	mov    $0x1,%eax
   1e47f:	eb 05                	jmp    1e486 <dlfree+0x4d4>
   1e481:	b8 00 00 00 00       	mov    $0x0,%eax
   1e486:	85 c0                	test   %eax,%eax
   1e488:	74 46                	je     1e4d0 <dlfree+0x51e>
   1e48a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e491:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e495:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1e49c:	0f 94 c0             	sete   %al
   1e49f:	0f b6 c0             	movzbl %al,%eax
   1e4a2:	48 85 c0             	test   %rax,%rax
   1e4a5:	74 29                	je     1e4d0 <dlfree+0x51e>
   1e4a7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1e4ae:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e4b5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1e4b9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e4c0:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1e4c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e4cb:	e9 f8 00 00 00       	jmp    1e5c8 <dlfree+0x616>
   1e4d0:	e8 56 10 01 00       	call   2f52b <abort>
   1e4d5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e4dc:	48 83 c0 28          	add    $0x28,%rax
   1e4e0:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1e4e7:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1e4ee:	48 8b 00             	mov    (%rax),%rax
   1e4f1:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e4f8:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   1e4ff:	00 
   1e500:	75 52                	jne    1e554 <dlfree+0x5a2>
   1e502:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e509:	48 83 c0 20          	add    $0x20,%rax
   1e50d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1e514:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1e51b:	48 8b 00             	mov    (%rax),%rax
   1e51e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e525:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   1e52c:	00 
   1e52d:	0f 84 95 00 00 00    	je     1e5c8 <dlfree+0x616>
   1e533:	eb 1f                	jmp    1e554 <dlfree+0x5a2>
   1e535:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1e53c:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1e543:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1e54a:	48 8b 00             	mov    (%rax),%rax
   1e54d:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e554:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e55b:	48 83 c0 28          	add    $0x28,%rax
   1e55f:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1e566:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1e56d:	48 8b 00             	mov    (%rax),%rax
   1e570:	48 85 c0             	test   %rax,%rax
   1e573:	75 c0                	jne    1e535 <dlfree+0x583>
   1e575:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e57c:	48 83 c0 20          	add    $0x20,%rax
   1e580:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1e587:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1e58e:	48 8b 00             	mov    (%rax),%rax
   1e591:	48 85 c0             	test   %rax,%rax
   1e594:	75 9f                	jne    1e535 <dlfree+0x583>
   1e596:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e59d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e5a1:	48 39 85 e0 fe ff ff 	cmp    %rax,-0x120(%rbp)
   1e5a8:	0f 93 c0             	setae  %al
   1e5ab:	0f b6 c0             	movzbl %al,%eax
   1e5ae:	48 85 c0             	test   %rax,%rax
   1e5b1:	74 10                	je     1e5c3 <dlfree+0x611>
   1e5b3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1e5ba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e5c1:	eb 05                	jmp    1e5c8 <dlfree+0x616>
   1e5c3:	e8 63 0f 01 00       	call   2f52b <abort>
   1e5c8:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
   1e5cf:	00 
   1e5d0:	0f 84 82 02 00 00    	je     1e858 <dlfree+0x8a6>
   1e5d6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e5dd:	8b 40 38             	mov    0x38(%rax),%eax
   1e5e0:	89 c0                	mov    %eax,%eax
   1e5e2:	48 83 c0 4a          	add    $0x4a,%rax
   1e5e6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e5ed:	00 
   1e5ee:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e5f5:	48 01 d0             	add    %rdx,%rax
   1e5f8:	48 83 c0 08          	add    $0x8,%rax
   1e5fc:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1e603:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1e60a:	48 8b 00             	mov    (%rax),%rax
   1e60d:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1e614:	75 53                	jne    1e669 <dlfree+0x6b7>
   1e616:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1e61d:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e624:	48 89 10             	mov    %rdx,(%rax)
   1e627:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1e62e:	48 8b 00             	mov    (%rax),%rax
   1e631:	48 85 c0             	test   %rax,%rax
   1e634:	0f 85 8d 00 00 00    	jne    1e6c7 <dlfree+0x715>
   1e63a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e641:	8b 50 04             	mov    0x4(%rax),%edx
   1e644:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e64b:	8b 40 38             	mov    0x38(%rax),%eax
   1e64e:	be 01 00 00 00       	mov    $0x1,%esi
   1e653:	89 c1                	mov    %eax,%ecx
   1e655:	d3 e6                	shl    %cl,%esi
   1e657:	89 f0                	mov    %esi,%eax
   1e659:	f7 d0                	not    %eax
   1e65b:	21 c2                	and    %eax,%edx
   1e65d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e664:	89 50 04             	mov    %edx,0x4(%rax)
   1e667:	eb 5e                	jmp    1e6c7 <dlfree+0x715>
   1e669:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e670:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e674:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1e67b:	0f 93 c0             	setae  %al
   1e67e:	0f b6 c0             	movzbl %al,%eax
   1e681:	48 85 c0             	test   %rax,%rax
   1e684:	74 3c                	je     1e6c2 <dlfree+0x710>
   1e686:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e68d:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e691:	48 39 85 40 ff ff ff 	cmp    %rax,-0xc0(%rbp)
   1e698:	75 14                	jne    1e6ae <dlfree+0x6fc>
   1e69a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e6a1:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e6a8:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e6ac:	eb 19                	jmp    1e6c7 <dlfree+0x715>
   1e6ae:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1e6b5:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e6bc:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1e6c0:	eb 05                	jmp    1e6c7 <dlfree+0x715>
   1e6c2:	e8 64 0e 01 00       	call   2f52b <abort>
   1e6c7:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
   1e6ce:	00 
   1e6cf:	0f 84 83 01 00 00    	je     1e858 <dlfree+0x8a6>
   1e6d5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e6dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e6e0:	48 39 85 d8 fe ff ff 	cmp    %rax,-0x128(%rbp)
   1e6e7:	0f 93 c0             	setae  %al
   1e6ea:	0f b6 c0             	movzbl %al,%eax
   1e6ed:	48 85 c0             	test   %rax,%rax
   1e6f0:	0f 84 e1 00 00 00    	je     1e7d7 <dlfree+0x825>
   1e6f6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e6fd:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1e704:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e708:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e70f:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e713:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1e71a:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   1e721:	00 
   1e722:	74 48                	je     1e76c <dlfree+0x7ba>
   1e724:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e72b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e72f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1e736:	0f 93 c0             	setae  %al
   1e739:	0f b6 c0             	movzbl %al,%eax
   1e73c:	48 85 c0             	test   %rax,%rax
   1e73f:	74 26                	je     1e767 <dlfree+0x7b5>
   1e741:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e748:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1e74f:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e753:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1e75a:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e761:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e765:	eb 05                	jmp    1e76c <dlfree+0x7ba>
   1e767:	e8 bf 0d 01 00       	call   2f52b <abort>
   1e76c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e773:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e777:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1e77e:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1e785:	00 
   1e786:	0f 84 cc 00 00 00    	je     1e858 <dlfree+0x8a6>
   1e78c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e793:	48 8b 40 18          	mov    0x18(%rax),%rax
   1e797:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   1e79e:	0f 93 c0             	setae  %al
   1e7a1:	0f b6 c0             	movzbl %al,%eax
   1e7a4:	48 85 c0             	test   %rax,%rax
   1e7a7:	74 29                	je     1e7d2 <dlfree+0x820>
   1e7a9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e7b0:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1e7b7:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1e7bb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1e7c2:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e7c9:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1e7cd:	e9 86 00 00 00       	jmp    1e858 <dlfree+0x8a6>
   1e7d2:	e8 54 0d 01 00       	call   2f52b <abort>
   1e7d7:	e8 4f 0d 01 00       	call   2f52b <abort>
   1e7dc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e7e3:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e7e7:	83 e0 03             	and    $0x3,%eax
   1e7ea:	48 83 f8 03          	cmp    $0x3,%rax
   1e7ee:	75 68                	jne    1e858 <dlfree+0x8a6>
   1e7f0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e7f7:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1e7fe:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e802:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e809:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e80d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1e811:	48 89 c2             	mov    %rax,%rdx
   1e814:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e81b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e81f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e826:	48 83 c8 01          	or     $0x1,%rax
   1e82a:	48 89 c2             	mov    %rax,%rdx
   1e82d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e834:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e838:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e83f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e846:	48 01 c2             	add    %rax,%rdx
   1e849:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e850:	48 89 02             	mov    %rax,(%rdx)
   1e853:	e9 55 0c 00 00       	jmp    1f4ad <dlfree+0x14fb>
   1e858:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e85f:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
   1e866:	0f 92 c0             	setb   %al
   1e869:	0f b6 c0             	movzbl %al,%eax
   1e86c:	48 85 c0             	test   %rax,%rax
   1e86f:	0f 84 2b 0c 00 00    	je     1f4a0 <dlfree+0x14ee>
   1e875:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e87c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e880:	83 e0 01             	and    $0x1,%eax
   1e883:	48 85 c0             	test   %rax,%rax
   1e886:	0f 95 c0             	setne  %al
   1e889:	0f b6 c0             	movzbl %al,%eax
   1e88c:	48 85 c0             	test   %rax,%rax
   1e88f:	0f 84 0b 0c 00 00    	je     1f4a0 <dlfree+0x14ee>
   1e895:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e89c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e8a0:	83 e0 02             	and    $0x2,%eax
   1e8a3:	48 85 c0             	test   %rax,%rax
   1e8a6:	0f 85 18 07 00 00    	jne    1efc4 <dlfree+0x1012>
   1e8ac:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e8b3:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e8b7:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1e8be:	0f 85 b7 00 00 00    	jne    1e97b <dlfree+0x9c9>
   1e8c4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e8cb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1e8cf:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e8d6:	48 01 c2             	add    %rax,%rdx
   1e8d9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e8e0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1e8e4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e8eb:	48 8b 40 10          	mov    0x10(%rax),%rax
   1e8ef:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e8f3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e8fa:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e901:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1e905:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e909:	48 83 c8 01          	or     $0x1,%rax
   1e90d:	48 89 c2             	mov    %rax,%rdx
   1e910:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e917:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e91b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e922:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e926:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1e92d:	75 1e                	jne    1e94d <dlfree+0x99b>
   1e92f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e936:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1e93d:	00 
   1e93e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e945:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1e94c:	00 
   1e94d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e954:	48 8b 40 30          	mov    0x30(%rax),%rax
   1e958:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   1e95c:	0f 86 47 0b 00 00    	jbe    1f4a9 <dlfree+0x14f7>
   1e962:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e969:	be 00 00 00 00       	mov    $0x0,%esi
   1e96e:	48 89 c7             	mov    %rax,%rdi
   1e971:	e8 bb c2 ff ff       	call   1ac31 <sys_trim>
   1e976:	e9 2e 0b 00 00       	jmp    1f4a9 <dlfree+0x14f7>
   1e97b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e982:	48 8b 40 20          	mov    0x20(%rax),%rax
   1e986:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1e98d:	75 71                	jne    1ea00 <dlfree+0xa4e>
   1e98f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e996:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1e99a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1e9a1:	48 01 c2             	add    %rax,%rdx
   1e9a4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e9ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e9af:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e9b6:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e9ba:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1e9be:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1e9c5:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e9cc:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1e9d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e9d4:	48 83 c8 01          	or     $0x1,%rax
   1e9d8:	48 89 c2             	mov    %rax,%rdx
   1e9db:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1e9e2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e9e6:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1e9ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e9f1:	48 01 c2             	add    %rax,%rdx
   1e9f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e9f8:	48 89 02             	mov    %rax,(%rdx)
   1e9fb:	e9 ad 0a 00 00       	jmp    1f4ad <dlfree+0x14fb>
   1ea00:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea07:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ea0b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ea0f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1ea13:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ea17:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
   1ea1e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ea22:	48 c1 e8 03          	shr    $0x3,%rax
   1ea26:	48 83 f8 1f          	cmp    $0x1f,%rax
   1ea2a:	0f 87 c6 01 00 00    	ja     1ebf6 <dlfree+0xc44>
   1ea30:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea37:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ea3b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1ea3f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea46:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ea4a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1ea4e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ea52:	48 c1 e8 03          	shr    $0x3,%rax
   1ea56:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
   1ea5c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea63:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1ea67:	75 05                	jne    1ea6e <dlfree+0xabc>
   1ea69:	e8 bd 0a 01 00       	call   2f52b <abort>
   1ea6e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea75:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1ea79:	75 05                	jne    1ea80 <dlfree+0xace>
   1ea7b:	e8 ab 0a 01 00       	call   2f52b <abort>
   1ea80:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ea87:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ea8b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1ea8f:	48 89 c2             	mov    %rax,%rdx
   1ea92:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   1ea98:	c1 e0 03             	shl    $0x3,%eax
   1ea9b:	89 c0                	mov    %eax,%eax
   1ea9d:	48 39 c2             	cmp    %rax,%rdx
   1eaa0:	74 05                	je     1eaa7 <dlfree+0xaf5>
   1eaa2:	e8 84 0a 01 00       	call   2f52b <abort>
   1eaa7:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   1eaad:	01 c0                	add    %eax,%eax
   1eaaf:	89 c0                	mov    %eax,%eax
   1eab1:	48 83 c0 08          	add    $0x8,%rax
   1eab5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1eabc:	00 
   1eabd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eac4:	48 01 d0             	add    %rdx,%rax
   1eac7:	48 83 c0 08          	add    $0x8,%rax
   1eacb:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1eacf:	0f 94 c0             	sete   %al
   1ead2:	0f b6 c0             	movzbl %al,%eax
   1ead5:	48 85 c0             	test   %rax,%rax
   1ead8:	75 48                	jne    1eb22 <dlfree+0xb70>
   1eada:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eae1:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eae5:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1eae9:	0f 93 c0             	setae  %al
   1eaec:	0f b6 c0             	movzbl %al,%eax
   1eaef:	48 85 c0             	test   %rax,%rax
   1eaf2:	74 21                	je     1eb15 <dlfree+0xb63>
   1eaf4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1eaf8:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eafc:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1eb03:	0f 94 c0             	sete   %al
   1eb06:	0f b6 c0             	movzbl %al,%eax
   1eb09:	48 85 c0             	test   %rax,%rax
   1eb0c:	74 07                	je     1eb15 <dlfree+0xb63>
   1eb0e:	b8 01 00 00 00       	mov    $0x1,%eax
   1eb13:	eb 05                	jmp    1eb1a <dlfree+0xb68>
   1eb15:	b8 00 00 00 00       	mov    $0x0,%eax
   1eb1a:	85 c0                	test   %eax,%eax
   1eb1c:	0f 84 cf 00 00 00    	je     1ebf1 <dlfree+0xc3f>
   1eb22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1eb26:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
   1eb2a:	75 2c                	jne    1eb58 <dlfree+0xba6>
   1eb2c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eb33:	8b 10                	mov    (%rax),%edx
   1eb35:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   1eb3b:	be 01 00 00 00       	mov    $0x1,%esi
   1eb40:	89 c1                	mov    %eax,%ecx
   1eb42:	d3 e6                	shl    %cl,%esi
   1eb44:	89 f0                	mov    %esi,%eax
   1eb46:	f7 d0                	not    %eax
   1eb48:	21 c2                	and    %eax,%edx
   1eb4a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eb51:	89 10                	mov    %edx,(%rax)
   1eb53:	e9 0d 04 00 00       	jmp    1ef65 <dlfree+0xfb3>
   1eb58:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
   1eb5e:	01 c0                	add    %eax,%eax
   1eb60:	89 c0                	mov    %eax,%eax
   1eb62:	48 83 c0 08          	add    $0x8,%rax
   1eb66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1eb6d:	00 
   1eb6e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eb75:	48 01 d0             	add    %rdx,%rax
   1eb78:	48 83 c0 08          	add    $0x8,%rax
   1eb7c:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1eb80:	0f 94 c0             	sete   %al
   1eb83:	0f b6 c0             	movzbl %al,%eax
   1eb86:	48 85 c0             	test   %rax,%rax
   1eb89:	75 44                	jne    1ebcf <dlfree+0xc1d>
   1eb8b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eb92:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eb96:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   1eb9a:	0f 93 c0             	setae  %al
   1eb9d:	0f b6 c0             	movzbl %al,%eax
   1eba0:	48 85 c0             	test   %rax,%rax
   1eba3:	74 21                	je     1ebc6 <dlfree+0xc14>
   1eba5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1eba9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ebad:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   1ebb4:	0f 94 c0             	sete   %al
   1ebb7:	0f b6 c0             	movzbl %al,%eax
   1ebba:	48 85 c0             	test   %rax,%rax
   1ebbd:	74 07                	je     1ebc6 <dlfree+0xc14>
   1ebbf:	b8 01 00 00 00       	mov    $0x1,%eax
   1ebc4:	eb 05                	jmp    1ebcb <dlfree+0xc19>
   1ebc6:	b8 00 00 00 00       	mov    $0x0,%eax
   1ebcb:	85 c0                	test   %eax,%eax
   1ebcd:	74 1d                	je     1ebec <dlfree+0xc3a>
   1ebcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ebd3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1ebd7:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1ebdb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ebdf:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1ebe3:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1ebe7:	e9 79 03 00 00       	jmp    1ef65 <dlfree+0xfb3>
   1ebec:	e8 3a 09 01 00       	call   2f52b <abort>
   1ebf1:	e8 35 09 01 00       	call   2f52b <abort>
   1ebf6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ebfd:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1ec01:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ec05:	48 8b 40 30          	mov    0x30(%rax),%rax
   1ec09:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1ec0d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ec11:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ec15:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ec19:	0f 84 9e 00 00 00    	je     1ecbd <dlfree+0xd0b>
   1ec1f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ec23:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ec27:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1ec2b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ec2f:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ec33:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1ec3a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ec41:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ec45:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1ec49:	0f 93 c0             	setae  %al
   1ec4c:	0f b6 c0             	movzbl %al,%eax
   1ec4f:	48 85 c0             	test   %rax,%rax
   1ec52:	74 1e                	je     1ec72 <dlfree+0xcc0>
   1ec54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ec58:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ec5c:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ec60:	0f 94 c0             	sete   %al
   1ec63:	0f b6 c0             	movzbl %al,%eax
   1ec66:	48 85 c0             	test   %rax,%rax
   1ec69:	74 07                	je     1ec72 <dlfree+0xcc0>
   1ec6b:	b8 01 00 00 00       	mov    $0x1,%eax
   1ec70:	eb 05                	jmp    1ec77 <dlfree+0xcc5>
   1ec72:	b8 00 00 00 00       	mov    $0x0,%eax
   1ec77:	85 c0                	test   %eax,%eax
   1ec79:	74 3d                	je     1ecb8 <dlfree+0xd06>
   1ec7b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ec82:	48 8b 40 10          	mov    0x10(%rax),%rax
   1ec86:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ec8a:	0f 94 c0             	sete   %al
   1ec8d:	0f b6 c0             	movzbl %al,%eax
   1ec90:	48 85 c0             	test   %rax,%rax
   1ec93:	74 23                	je     1ecb8 <dlfree+0xd06>
   1ec95:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ec99:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1eca0:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1eca4:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ecab:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1ecaf:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1ecb3:	e9 f2 00 00 00       	jmp    1edaa <dlfree+0xdf8>
   1ecb8:	e8 6e 08 01 00       	call   2f52b <abort>
   1ecbd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ecc1:	48 83 c0 28          	add    $0x28,%rax
   1ecc5:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1eccc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ecd3:	48 8b 00             	mov    (%rax),%rax
   1ecd6:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1ecdd:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   1ece4:	00 
   1ece5:	75 4f                	jne    1ed36 <dlfree+0xd84>
   1ece7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1eceb:	48 83 c0 20          	add    $0x20,%rax
   1ecef:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1ecf6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ecfd:	48 8b 00             	mov    (%rax),%rax
   1ed00:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1ed07:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   1ed0e:	00 
   1ed0f:	0f 84 95 00 00 00    	je     1edaa <dlfree+0xdf8>
   1ed15:	eb 1f                	jmp    1ed36 <dlfree+0xd84>
   1ed17:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ed1e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   1ed25:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ed2c:	48 8b 00             	mov    (%rax),%rax
   1ed2f:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1ed36:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ed3d:	48 83 c0 28          	add    $0x28,%rax
   1ed41:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1ed48:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ed4f:	48 8b 00             	mov    (%rax),%rax
   1ed52:	48 85 c0             	test   %rax,%rax
   1ed55:	75 c0                	jne    1ed17 <dlfree+0xd65>
   1ed57:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ed5e:	48 83 c0 20          	add    $0x20,%rax
   1ed62:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1ed69:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ed70:	48 8b 00             	mov    (%rax),%rax
   1ed73:	48 85 c0             	test   %rax,%rax
   1ed76:	75 9f                	jne    1ed17 <dlfree+0xd65>
   1ed78:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ed7f:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ed83:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1ed8a:	0f 93 c0             	setae  %al
   1ed8d:	0f b6 c0             	movzbl %al,%eax
   1ed90:	48 85 c0             	test   %rax,%rax
   1ed93:	74 10                	je     1eda5 <dlfree+0xdf3>
   1ed95:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ed9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1eda3:	eb 05                	jmp    1edaa <dlfree+0xdf8>
   1eda5:	e8 81 07 01 00       	call   2f52b <abort>
   1edaa:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1edaf:	0f 84 b0 01 00 00    	je     1ef65 <dlfree+0xfb3>
   1edb5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1edb9:	8b 40 38             	mov    0x38(%rax),%eax
   1edbc:	89 c0                	mov    %eax,%eax
   1edbe:	48 83 c0 4a          	add    $0x4a,%rax
   1edc2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1edc9:	00 
   1edca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1edd1:	48 01 d0             	add    %rdx,%rax
   1edd4:	48 83 c0 08          	add    $0x8,%rax
   1edd8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1eddc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ede0:	48 8b 00             	mov    (%rax),%rax
   1ede3:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ede7:	75 46                	jne    1ee2f <dlfree+0xe7d>
   1ede9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eded:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1edf4:	48 89 10             	mov    %rdx,(%rax)
   1edf7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1edfb:	48 8b 00             	mov    (%rax),%rax
   1edfe:	48 85 c0             	test   %rax,%rax
   1ee01:	75 7b                	jne    1ee7e <dlfree+0xecc>
   1ee03:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ee0a:	8b 50 04             	mov    0x4(%rax),%edx
   1ee0d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ee11:	8b 40 38             	mov    0x38(%rax),%eax
   1ee14:	be 01 00 00 00       	mov    $0x1,%esi
   1ee19:	89 c1                	mov    %eax,%ecx
   1ee1b:	d3 e6                	shl    %cl,%esi
   1ee1d:	89 f0                	mov    %esi,%eax
   1ee1f:	f7 d0                	not    %eax
   1ee21:	21 c2                	and    %eax,%edx
   1ee23:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ee2a:	89 50 04             	mov    %edx,0x4(%rax)
   1ee2d:	eb 4f                	jmp    1ee7e <dlfree+0xecc>
   1ee2f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ee36:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ee3a:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1ee3e:	0f 93 c0             	setae  %al
   1ee41:	0f b6 c0             	movzbl %al,%eax
   1ee44:	48 85 c0             	test   %rax,%rax
   1ee47:	74 30                	je     1ee79 <dlfree+0xec7>
   1ee49:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ee4d:	48 8b 40 20          	mov    0x20(%rax),%rax
   1ee51:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   1ee55:	75 11                	jne    1ee68 <dlfree+0xeb6>
   1ee57:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ee5b:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ee62:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1ee66:	eb 16                	jmp    1ee7e <dlfree+0xecc>
   1ee68:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ee6c:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ee73:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1ee77:	eb 05                	jmp    1ee7e <dlfree+0xecc>
   1ee79:	e8 ad 06 01 00       	call   2f52b <abort>
   1ee7e:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   1ee85:	00 
   1ee86:	0f 84 d9 00 00 00    	je     1ef65 <dlfree+0xfb3>
   1ee8c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ee93:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ee97:	48 39 85 f0 fe ff ff 	cmp    %rax,-0x110(%rbp)
   1ee9e:	0f 93 c0             	setae  %al
   1eea1:	0f b6 c0             	movzbl %al,%eax
   1eea4:	48 85 c0             	test   %rax,%rax
   1eea7:	0f 84 b3 00 00 00    	je     1ef60 <dlfree+0xfae>
   1eead:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1eeb4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1eeb8:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1eebc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1eec0:	48 8b 40 20          	mov    0x20(%rax),%rax
   1eec4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1eec8:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1eecd:	74 3f                	je     1ef0e <dlfree+0xf5c>
   1eecf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1eed6:	48 8b 40 18          	mov    0x18(%rax),%rax
   1eeda:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
   1eede:	0f 93 c0             	setae  %al
   1eee1:	0f b6 c0             	movzbl %al,%eax
   1eee4:	48 85 c0             	test   %rax,%rax
   1eee7:	74 20                	je     1ef09 <dlfree+0xf57>
   1eee9:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1eef0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1eef4:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1eef8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1eefc:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ef03:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1ef07:	eb 05                	jmp    1ef0e <dlfree+0xf5c>
   1ef09:	e8 1d 06 01 00       	call   2f52b <abort>
   1ef0e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ef12:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ef16:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1ef1a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1ef1f:	74 44                	je     1ef65 <dlfree+0xfb3>
   1ef21:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1ef28:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ef2c:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   1ef30:	0f 93 c0             	setae  %al
   1ef33:	0f b6 c0             	movzbl %al,%eax
   1ef36:	48 85 c0             	test   %rax,%rax
   1ef39:	74 20                	je     1ef5b <dlfree+0xfa9>
   1ef3b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1ef42:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1ef46:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1ef4a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1ef4e:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ef55:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1ef59:	eb 0a                	jmp    1ef65 <dlfree+0xfb3>
   1ef5b:	e8 cb 05 01 00       	call   2f52b <abort>
   1ef60:	e8 c6 05 01 00       	call   2f52b <abort>
   1ef65:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1ef6c:	48 83 c8 01          	or     $0x1,%rax
   1ef70:	48 89 c2             	mov    %rax,%rdx
   1ef73:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1ef7a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ef7e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1ef85:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1ef8c:	48 01 c2             	add    %rax,%rdx
   1ef8f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1ef96:	48 89 02             	mov    %rax,(%rdx)
   1ef99:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1efa0:	48 8b 40 20          	mov    0x20(%rax),%rax
   1efa4:	48 39 85 c8 fe ff ff 	cmp    %rax,-0x138(%rbp)
   1efab:	75 68                	jne    1f015 <dlfree+0x1063>
   1efad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1efb4:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1efbb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1efbf:	e9 e9 04 00 00       	jmp    1f4ad <dlfree+0x14fb>
   1efc4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1efcb:	48 8b 40 08          	mov    0x8(%rax),%rax
   1efcf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1efd3:	48 89 c2             	mov    %rax,%rdx
   1efd6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1efdd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1efe1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1efe8:	48 83 c8 01          	or     $0x1,%rax
   1efec:	48 89 c2             	mov    %rax,%rdx
   1efef:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1eff6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1effa:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1f001:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1f008:	48 01 c2             	add    %rax,%rdx
   1f00b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1f012:	48 89 02             	mov    %rax,(%rdx)
   1f015:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1f01c:	48 c1 e8 03          	shr    $0x3,%rax
   1f020:	48 83 f8 1f          	cmp    $0x1f,%rax
   1f024:	0f 87 31 01 00 00    	ja     1f15b <dlfree+0x11a9>
   1f02a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1f031:	48 c1 e8 03          	shr    $0x3,%rax
   1f035:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
   1f03b:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   1f041:	01 c0                	add    %eax,%eax
   1f043:	89 c0                	mov    %eax,%eax
   1f045:	48 83 c0 08          	add    $0x8,%rax
   1f049:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f050:	00 
   1f051:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f058:	48 01 d0             	add    %rdx,%rax
   1f05b:	48 83 c0 08          	add    $0x8,%rax
   1f05f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f067:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1f06e:	48 83 bd d0 fe ff ff 	cmpq   $0x1f,-0x130(%rbp)
   1f075:	1f 
   1f076:	77 05                	ja     1f07d <dlfree+0x10cb>
   1f078:	e8 ae 04 01 00       	call   2f52b <abort>
   1f07d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f084:	8b 10                	mov    (%rax),%edx
   1f086:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   1f08c:	be 01 00 00 00       	mov    $0x1,%esi
   1f091:	89 c1                	mov    %eax,%ecx
   1f093:	d3 e6                	shl    %cl,%esi
   1f095:	89 f0                	mov    %esi,%eax
   1f097:	21 d0                	and    %edx,%eax
   1f099:	85 c0                	test   %eax,%eax
   1f09b:	75 27                	jne    1f0c4 <dlfree+0x1112>
   1f09d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f0a4:	8b 10                	mov    (%rax),%edx
   1f0a6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   1f0ac:	be 01 00 00 00       	mov    $0x1,%esi
   1f0b1:	89 c1                	mov    %eax,%ecx
   1f0b3:	d3 e6                	shl    %cl,%esi
   1f0b5:	89 f0                	mov    %esi,%eax
   1f0b7:	09 c2                	or     %eax,%edx
   1f0b9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f0c0:	89 10                	mov    %edx,(%rax)
   1f0c2:	eb 37                	jmp    1f0fb <dlfree+0x1149>
   1f0c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f0c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f0cc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f0d3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f0d7:	48 39 c2             	cmp    %rax,%rdx
   1f0da:	0f 93 c0             	setae  %al
   1f0dd:	0f b6 c0             	movzbl %al,%eax
   1f0e0:	48 85 c0             	test   %rax,%rax
   1f0e3:	74 11                	je     1f0f6 <dlfree+0x1144>
   1f0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f0e9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f0ed:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1f0f4:	eb 05                	jmp    1f0fb <dlfree+0x1149>
   1f0f6:	e8 30 04 01 00       	call   2f52b <abort>
   1f0fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f0ff:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1f106:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f10a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f111:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1f118:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f11c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1f123:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1f12a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f12e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1f135:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1f139:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f13d:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1f144:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f14b:	48 89 d6             	mov    %rdx,%rsi
   1f14e:	48 89 c7             	mov    %rax,%rdi
   1f151:	e8 2b 87 ff ff       	call   17881 <do_check_free_chunk>
   1f156:	e9 51 03 00 00       	jmp    1f4ac <dlfree+0x14fa>
   1f15b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   1f162:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f166:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   1f16d:	48 c1 e8 08          	shr    $0x8,%rax
   1f171:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
   1f177:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
   1f17e:	75 0c                	jne    1f18c <dlfree+0x11da>
   1f180:	c7 85 b0 fe ff ff 00 	movl   $0x0,-0x150(%rbp)
   1f187:	00 00 00 
   1f18a:	eb 5d                	jmp    1f1e9 <dlfree+0x1237>
   1f18c:	81 bd bc fe ff ff ff 	cmpl   $0xffff,-0x144(%rbp)
   1f193:	ff 00 00 
   1f196:	76 0c                	jbe    1f1a4 <dlfree+0x11f2>
   1f198:	c7 85 b0 fe ff ff 1f 	movl   $0x1f,-0x150(%rbp)
   1f19f:	00 00 00 
   1f1a2:	eb 45                	jmp    1f1e9 <dlfree+0x1237>
   1f1a4:	0f bd 85 bc fe ff ff 	bsr    -0x144(%rbp),%eax
   1f1ab:	83 f0 1f             	xor    $0x1f,%eax
   1f1ae:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1f1b3:	29 c2                	sub    %eax,%edx
   1f1b5:	89 d0                	mov    %edx,%eax
   1f1b7:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   1f1bd:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   1f1c3:	8d 34 00             	lea    (%rax,%rax,1),%esi
   1f1c6:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
   1f1cc:	83 c0 07             	add    $0x7,%eax
   1f1cf:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1f1d6:	89 c1                	mov    %eax,%ecx
   1f1d8:	48 d3 ea             	shr    %cl,%rdx
   1f1db:	48 89 d0             	mov    %rdx,%rax
   1f1de:	83 e0 01             	and    $0x1,%eax
   1f1e1:	01 f0                	add    %esi,%eax
   1f1e3:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
   1f1e9:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   1f1ef:	48 83 c0 4a          	add    $0x4a,%rax
   1f1f3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f1fa:	00 
   1f1fb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f202:	48 01 d0             	add    %rdx,%rax
   1f205:	48 83 c0 08          	add    $0x8,%rax
   1f209:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f20d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f211:	8b 95 b0 fe ff ff    	mov    -0x150(%rbp),%edx
   1f217:	89 50 38             	mov    %edx,0x38(%rax)
   1f21a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f21e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1f225:	00 
   1f226:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f22a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1f22e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f232:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1f236:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f23d:	8b 50 04             	mov    0x4(%rax),%edx
   1f240:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   1f246:	be 01 00 00 00       	mov    $0x1,%esi
   1f24b:	89 c1                	mov    %eax,%ecx
   1f24d:	d3 e6                	shl    %cl,%esi
   1f24f:	89 f0                	mov    %esi,%eax
   1f251:	21 d0                	and    %edx,%eax
   1f253:	85 c0                	test   %eax,%eax
   1f255:	75 5f                	jne    1f2b6 <dlfree+0x1304>
   1f257:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f25e:	8b 50 04             	mov    0x4(%rax),%edx
   1f261:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   1f267:	be 01 00 00 00       	mov    $0x1,%esi
   1f26c:	89 c1                	mov    %eax,%ecx
   1f26e:	d3 e6                	shl    %cl,%esi
   1f270:	89 f0                	mov    %esi,%eax
   1f272:	09 c2                	or     %eax,%edx
   1f274:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f27b:	89 50 04             	mov    %edx,0x4(%rax)
   1f27e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f282:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f286:	48 89 10             	mov    %rdx,(%rax)
   1f289:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f28d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f291:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f299:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f29d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f2a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f2a5:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f2a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f2ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f2b1:	e9 96 01 00 00       	jmp    1f44c <dlfree+0x149a>
   1f2b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f2ba:	48 8b 00             	mov    (%rax),%rax
   1f2bd:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1f2c4:	83 bd b0 fe ff ff 1f 	cmpl   $0x1f,-0x150(%rbp)
   1f2cb:	74 13                	je     1f2e0 <dlfree+0x132e>
   1f2cd:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   1f2d3:	d1 e8                	shr    %eax
   1f2d5:	ba 39 00 00 00       	mov    $0x39,%edx
   1f2da:	29 c2                	sub    %eax,%edx
   1f2dc:	89 d0                	mov    %edx,%eax
   1f2de:	eb 05                	jmp    1f2e5 <dlfree+0x1333>
   1f2e0:	b8 00 00 00 00       	mov    $0x0,%eax
   1f2e5:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1f2ec:	89 c1                	mov    %eax,%ecx
   1f2ee:	48 d3 e2             	shl    %cl,%rdx
   1f2f1:	48 89 d0             	mov    %rdx,%rax
   1f2f4:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1f2fb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1f302:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f306:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f30a:	48 39 85 d0 fe ff ff 	cmp    %rax,-0x130(%rbp)
   1f311:	0f 84 a2 00 00 00    	je     1f3b9 <dlfree+0x1407>
   1f317:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1f31e:	48 c1 e8 3f          	shr    $0x3f,%rax
   1f322:	48 83 c0 04          	add    $0x4,%rax
   1f326:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1f32d:	00 
   1f32e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1f335:	48 01 d0             	add    %rdx,%rax
   1f338:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1f33c:	48 d1 a5 18 ff ff ff 	shlq   -0xe8(%rbp)
   1f343:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f347:	48 8b 00             	mov    (%rax),%rax
   1f34a:	48 85 c0             	test   %rax,%rax
   1f34d:	74 10                	je     1f35f <dlfree+0x13ad>
   1f34f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f353:	48 8b 00             	mov    (%rax),%rax
   1f356:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1f35d:	eb 9c                	jmp    1f2fb <dlfree+0x1349>
   1f35f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f366:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f36a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1f36e:	0f 93 c0             	setae  %al
   1f371:	0f b6 c0             	movzbl %al,%eax
   1f374:	48 85 c0             	test   %rax,%rax
   1f377:	74 3b                	je     1f3b4 <dlfree+0x1402>
   1f379:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f37d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f381:	48 89 10             	mov    %rdx,(%rax)
   1f384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f388:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1f38f:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1f393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f397:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f39b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f39f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f3a3:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f3a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f3ab:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f3af:	e9 98 00 00 00       	jmp    1f44c <dlfree+0x149a>
   1f3b4:	e8 72 01 01 00       	call   2f52b <abort>
   1f3b9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1f3c0:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f3c4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f3c8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f3cf:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f3d3:	48 39 85 10 ff ff ff 	cmp    %rax,-0xf0(%rbp)
   1f3da:	0f 93 c0             	setae  %al
   1f3dd:	0f b6 c0             	movzbl %al,%eax
   1f3e0:	48 85 c0             	test   %rax,%rax
   1f3e3:	74 62                	je     1f447 <dlfree+0x1495>
   1f3e5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f3ec:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f3f0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1f3f4:	0f 93 c0             	setae  %al
   1f3f7:	0f b6 c0             	movzbl %al,%eax
   1f3fa:	48 85 c0             	test   %rax,%rax
   1f3fd:	74 48                	je     1f447 <dlfree+0x1495>
   1f3ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f403:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f407:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f40b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f40f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1f413:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1f41a:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f41e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f422:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f426:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f42a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f42e:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1f435:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1f439:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f43d:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   1f444:	00 
   1f445:	eb 05                	jmp    1f44c <dlfree+0x149a>
   1f447:	e8 df 00 01 00       	call   2f52b <abort>
   1f44c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1f453:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f45a:	48 89 d6             	mov    %rdx,%rsi
   1f45d:	48 89 c7             	mov    %rax,%rdi
   1f460:	e8 1c 84 ff ff       	call   17881 <do_check_free_chunk>
   1f465:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f46c:	48 8b 40 38          	mov    0x38(%rax),%rax
   1f470:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1f474:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f47b:	48 89 50 38          	mov    %rdx,0x38(%rax)
   1f47f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f486:	48 8b 40 38          	mov    0x38(%rax),%rax
   1f48a:	48 85 c0             	test   %rax,%rax
   1f48d:	75 1d                	jne    1f4ac <dlfree+0x14fa>
   1f48f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f496:	48 89 c7             	mov    %rax,%rdi
   1f499:	e8 0c b7 ff ff       	call   1abaa <release_unused_segments>
   1f49e:	eb 0c                	jmp    1f4ac <dlfree+0x14fa>
   1f4a0:	90                   	nop
   1f4a1:	eb 01                	jmp    1f4a4 <dlfree+0x14f2>
   1f4a3:	90                   	nop
   1f4a4:	e8 82 00 01 00       	call   2f52b <abort>
   1f4a9:	90                   	nop
   1f4aa:	eb 01                	jmp    1f4ad <dlfree+0x14fb>
   1f4ac:	90                   	nop
   1f4ad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f4b4:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   1f4ba:	83 e0 02             	and    $0x2,%eax
   1f4bd:	85 c0                	test   %eax,%eax
   1f4bf:	74 14                	je     1f4d5 <dlfree+0x1523>
   1f4c1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1f4c8:	48 05 74 03 00 00    	add    $0x374,%rax
   1f4ce:	ba 00 00 00 00       	mov    $0x0,%edx
   1f4d3:	89 10                	mov    %edx,(%rax)
   1f4d5:	c9                   	leave  
   1f4d6:	c3                   	ret    

000000000001f4d7 <calloc>:
   1f4d7:	f3 0f 1e fa          	endbr64 
   1f4db:	55                   	push   %rbp
   1f4dc:	48 89 e5             	mov    %rsp,%rbp
   1f4df:	48 83 ec 20          	sub    $0x20,%rsp
   1f4e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f4e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f4eb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1f4f2:	00 
   1f4f3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1f4f8:	74 39                	je     1f533 <calloc+0x5c>
   1f4fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f4fe:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
   1f503:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1f507:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f50b:	48 0b 45 e0          	or     -0x20(%rbp),%rax
   1f50f:	66 b8 00 00          	mov    $0x0,%ax
   1f513:	48 85 c0             	test   %rax,%rax
   1f516:	74 1b                	je     1f533 <calloc+0x5c>
   1f518:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f51c:	ba 00 00 00 00       	mov    $0x0,%edx
   1f521:	48 f7 75 e8          	divq   -0x18(%rbp)
   1f525:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1f529:	74 08                	je     1f533 <calloc+0x5c>
   1f52b:	48 c7 45 f0 ff ff ff 	movq   $0xffffffffffffffff,-0x10(%rbp)
   1f532:	ff 
   1f533:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f537:	48 89 c7             	mov    %rax,%rdi
   1f53a:	e8 78 df ff ff       	call   1d4b7 <dlmalloc>
   1f53f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f543:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1f548:	74 15                	je     1f55f <calloc+0x88>
   1f54a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f552:	be 00 00 00 00       	mov    $0x0,%esi
   1f557:	48 89 c7             	mov    %rax,%rdi
   1f55a:	e8 b4 1b 00 00       	call   21113 <memset>
   1f55f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f563:	c9                   	leave  
   1f564:	c3                   	ret    

000000000001f565 <try_realloc_chunk>:
   1f565:	f3 0f 1e fa          	endbr64 
   1f569:	55                   	push   %rbp
   1f56a:	48 89 e5             	mov    %rsp,%rbp
   1f56d:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   1f574:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
   1f57b:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
   1f582:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   1f589:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)
   1f58f:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
   1f596:	00 00 00 00 
   1f59a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f5a1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f5a5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1f5a9:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1f5b0:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f5b7:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f5be:	48 01 d0             	add    %rdx,%rax
   1f5c1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1f5c8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f5cf:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f5d3:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   1f5da:	0f 93 c0             	setae  %al
   1f5dd:	0f b6 c0             	movzbl %al,%eax
   1f5e0:	48 85 c0             	test   %rax,%rax
   1f5e3:	74 24                	je     1f609 <try_realloc_chunk+0xa4>
   1f5e5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f5ec:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f5f0:	83 e0 03             	and    $0x3,%eax
   1f5f3:	48 83 f8 01          	cmp    $0x1,%rax
   1f5f7:	0f 95 c0             	setne  %al
   1f5fa:	0f b6 c0             	movzbl %al,%eax
   1f5fd:	48 85 c0             	test   %rax,%rax
   1f600:	74 07                	je     1f609 <try_realloc_chunk+0xa4>
   1f602:	b8 01 00 00 00       	mov    $0x1,%eax
   1f607:	eb 05                	jmp    1f60e <try_realloc_chunk+0xa9>
   1f609:	b8 00 00 00 00       	mov    $0x0,%eax
   1f60e:	85 c0                	test   %eax,%eax
   1f610:	74 20                	je     1f632 <try_realloc_chunk+0xcd>
   1f612:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f619:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
   1f620:	0f 92 c0             	setb   %al
   1f623:	0f b6 c0             	movzbl %al,%eax
   1f626:	48 85 c0             	test   %rax,%rax
   1f629:	74 07                	je     1f632 <try_realloc_chunk+0xcd>
   1f62b:	b8 01 00 00 00       	mov    $0x1,%eax
   1f630:	eb 05                	jmp    1f637 <try_realloc_chunk+0xd2>
   1f632:	b8 00 00 00 00       	mov    $0x0,%eax
   1f637:	85 c0                	test   %eax,%eax
   1f639:	0f 84 ec 0c 00 00    	je     2032b <try_realloc_chunk+0xdc6>
   1f63f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1f646:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f64a:	83 e0 01             	and    $0x1,%eax
   1f64d:	48 85 c0             	test   %rax,%rax
   1f650:	0f 95 c0             	setne  %al
   1f653:	0f b6 c0             	movzbl %al,%eax
   1f656:	48 85 c0             	test   %rax,%rax
   1f659:	0f 84 cc 0c 00 00    	je     2032b <try_realloc_chunk+0xdc6>
   1f65f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f666:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f66a:	83 e0 03             	and    $0x3,%eax
   1f66d:	48 85 c0             	test   %rax,%rax
   1f670:	75 2f                	jne    1f6a1 <try_realloc_chunk+0x13c>
   1f672:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
   1f678:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   1f67f:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1f686:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f68d:	48 89 c7             	mov    %rax,%rdi
   1f690:	e8 c2 94 ff ff       	call   18b57 <mmap_resize>
   1f695:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1f69c:	e9 8f 0c 00 00       	jmp    20330 <try_realloc_chunk+0xdcb>
   1f6a1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f6a8:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
   1f6af:	0f 82 55 01 00 00    	jb     1f80a <try_realloc_chunk+0x2a5>
   1f6b5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f6bc:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   1f6c3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1f6c7:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
   1f6cc:	0f 86 25 01 00 00    	jbe    1f7f7 <try_realloc_chunk+0x292>
   1f6d2:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f6d9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f6e0:	48 01 d0             	add    %rdx,%rax
   1f6e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f6e7:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f6ee:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f6f2:	83 e0 01             	and    $0x1,%eax
   1f6f5:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   1f6fc:	48 83 c8 02          	or     $0x2,%rax
   1f700:	48 89 c2             	mov    %rax,%rdx
   1f703:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f70a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f70e:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f715:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f71c:	48 01 d0             	add    %rdx,%rax
   1f71f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1f723:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   1f72a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f731:	48 01 c8             	add    %rcx,%rax
   1f734:	48 83 ca 01          	or     $0x1,%rdx
   1f738:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f73c:	48 8b 0d bd c8 04 00 	mov    0x4c8bd(%rip),%rcx        # 6c000 <mparams>
   1f743:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1f74a:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1f751:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f758:	48 01 f0             	add    %rsi,%rax
   1f75b:	48 31 ca             	xor    %rcx,%rdx
   1f75e:	48 89 10             	mov    %rdx,(%rax)
   1f761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f765:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f769:	83 e0 01             	and    $0x1,%eax
   1f76c:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   1f770:	48 83 c8 02          	or     $0x2,%rax
   1f774:	48 89 c2             	mov    %rax,%rdx
   1f777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f77b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f77f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1f783:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f787:	48 01 d0             	add    %rdx,%rax
   1f78a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1f78e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1f792:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f796:	48 01 c8             	add    %rcx,%rax
   1f799:	48 83 ca 01          	or     $0x1,%rdx
   1f79d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f7a1:	48 8b 0d 58 c8 04 00 	mov    0x4c858(%rip),%rcx        # 6c000 <mparams>
   1f7a8:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1f7af:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1f7b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f7b7:	48 01 f0             	add    %rsi,%rax
   1f7ba:	48 31 ca             	xor    %rcx,%rdx
   1f7bd:	48 89 10             	mov    %rdx,(%rax)
   1f7c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f7c4:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1f7c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f7cc:	48 83 c0 10          	add    $0x10,%rax
   1f7d0:	be 00 00 00 00       	mov    $0x0,%esi
   1f7d5:	48 89 c7             	mov    %rax,%rdi
   1f7d8:	e8 36 19 00 00       	call   21113 <memset>
   1f7dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f7e1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1f7e5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f7ec:	48 89 ce             	mov    %rcx,%rsi
   1f7ef:	48 89 c7             	mov    %rax,%rdi
   1f7f2:	e8 64 b6 ff ff       	call   1ae5b <dispose_chunk>
   1f7f7:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f7fe:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1f805:	e9 26 0b 00 00       	jmp    20330 <try_realloc_chunk+0xdcb>
   1f80a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f811:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f815:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1f81c:	0f 85 1d 01 00 00    	jne    1f93f <try_realloc_chunk+0x3da>
   1f822:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f829:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f82d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f834:	48 01 d0             	add    %rdx,%rax
   1f837:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1f83e:	0f 83 ec 0a 00 00    	jae    20330 <try_realloc_chunk+0xdcb>
   1f844:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f84b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f84f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1f856:	48 01 d0             	add    %rdx,%rax
   1f859:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f85d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f861:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   1f868:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f86c:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f873:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f87a:	48 01 d0             	add    %rdx,%rax
   1f87d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f881:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f888:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f88c:	83 e0 01             	and    $0x1,%eax
   1f88f:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   1f896:	48 83 c8 02          	or     $0x2,%rax
   1f89a:	48 89 c2             	mov    %rax,%rdx
   1f89d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f8a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f8a8:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f8af:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f8b6:	48 01 d0             	add    %rdx,%rax
   1f8b9:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1f8bd:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   1f8c4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f8cb:	48 01 c8             	add    %rcx,%rax
   1f8ce:	48 83 ca 01          	or     $0x1,%rdx
   1f8d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f8d6:	48 8b 0d 23 c7 04 00 	mov    0x4c723(%rip),%rcx        # 6c000 <mparams>
   1f8dd:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1f8e4:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1f8eb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f8f2:	48 01 f0             	add    %rsi,%rax
   1f8f5:	48 31 ca             	xor    %rcx,%rdx
   1f8f8:	48 89 10             	mov    %rdx,(%rax)
   1f8fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f8ff:	48 83 c8 01          	or     $0x1,%rax
   1f903:	48 89 c2             	mov    %rax,%rdx
   1f906:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f90a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f90e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f915:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f919:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1f91d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f924:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f928:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f92c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f933:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1f93a:	e9 f1 09 00 00       	jmp    20330 <try_realloc_chunk+0xdcb>
   1f93f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f946:	48 8b 40 20          	mov    0x20(%rax),%rax
   1f94a:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1f951:	0f 85 fc 01 00 00    	jne    1fb53 <try_realloc_chunk+0x5ee>
   1f957:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1f95e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f962:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1f966:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1f96d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1f971:	48 01 d0             	add    %rdx,%rax
   1f974:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1f97b:	0f 87 af 09 00 00    	ja     20330 <try_realloc_chunk+0xdcb>
   1f981:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1f988:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1f98c:	48 01 d0             	add    %rdx,%rax
   1f98f:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   1f996:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1f99a:	48 83 7d b8 1f       	cmpq   $0x1f,-0x48(%rbp)
   1f99f:	0f 86 fd 00 00 00    	jbe    1faa2 <try_realloc_chunk+0x53d>
   1f9a5:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f9ac:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f9b3:	48 01 d0             	add    %rdx,%rax
   1f9b6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1f9ba:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1f9be:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f9c2:	48 01 d0             	add    %rdx,%rax
   1f9c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1f9c9:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f9d0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f9d4:	83 e0 01             	and    $0x1,%eax
   1f9d7:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   1f9de:	48 83 c8 02          	or     $0x2,%rax
   1f9e2:	48 89 c2             	mov    %rax,%rdx
   1f9e5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1f9ec:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1f9f0:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1f9f7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1f9fe:	48 01 d0             	add    %rdx,%rax
   1fa01:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1fa05:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   1fa0c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1fa13:	48 01 c8             	add    %rcx,%rax
   1fa16:	48 83 ca 01          	or     $0x1,%rdx
   1fa1a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fa1e:	48 8b 0d db c5 04 00 	mov    0x4c5db(%rip),%rcx        # 6c000 <mparams>
   1fa25:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1fa2c:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1fa33:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1fa3a:	48 01 f0             	add    %rsi,%rax
   1fa3d:	48 31 ca             	xor    %rcx,%rdx
   1fa40:	48 89 10             	mov    %rdx,(%rax)
   1fa43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fa47:	48 83 c8 01          	or     $0x1,%rax
   1fa4b:	48 89 c2             	mov    %rax,%rdx
   1fa4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1fa52:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fa56:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fa5a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fa5e:	48 01 c2             	add    %rax,%rdx
   1fa61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1fa65:	48 89 02             	mov    %rax,(%rdx)
   1fa68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1fa6c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fa70:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1fa74:	48 89 c2             	mov    %rax,%rdx
   1fa77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1fa7b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fa7f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fa86:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1fa8a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fa8e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fa95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fa99:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1fa9d:	e9 9e 00 00 00       	jmp    1fb40 <try_realloc_chunk+0x5db>
   1faa2:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1faa9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1faad:	48 01 d0             	add    %rdx,%rax
   1fab0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1fab4:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1fabb:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fabf:	83 e0 01             	and    $0x1,%eax
   1fac2:	48 0b 45 c0          	or     -0x40(%rbp),%rax
   1fac6:	48 83 c8 02          	or     $0x2,%rax
   1faca:	48 89 c2             	mov    %rax,%rdx
   1facd:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1fad4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fad8:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   1fadf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1fae3:	48 01 d0             	add    %rdx,%rax
   1fae6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1faea:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   1faf1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1faf5:	48 01 c8             	add    %rcx,%rax
   1faf8:	48 83 ca 01          	or     $0x1,%rdx
   1fafc:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1fb00:	48 8b 0d f9 c4 04 00 	mov    0x4c4f9(%rip),%rcx        # 6c000 <mparams>
   1fb07:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   1fb0e:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   1fb15:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1fb19:	48 01 f0             	add    %rsi,%rax
   1fb1c:	48 31 ca             	xor    %rcx,%rdx
   1fb1f:	48 89 10             	mov    %rdx,(%rax)
   1fb22:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fb29:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1fb30:	00 
   1fb31:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fb38:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1fb3f:	00 
   1fb40:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1fb47:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1fb4e:	e9 dd 07 00 00       	jmp    20330 <try_realloc_chunk+0xdcb>
   1fb53:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fb5a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fb5e:	83 e0 02             	and    $0x2,%eax
   1fb61:	48 85 c0             	test   %rax,%rax
   1fb64:	0f 85 c6 07 00 00    	jne    20330 <try_realloc_chunk+0xdcb>
   1fb6a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fb71:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fb75:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fb79:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1fb80:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1fb87:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fb8e:	48 01 d0             	add    %rdx,%rax
   1fb91:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
   1fb98:	0f 87 92 07 00 00    	ja     20330 <try_realloc_chunk+0xdcb>
   1fb9e:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1fba5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fbac:	48 01 d0             	add    %rdx,%rax
   1fbaf:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   1fbb6:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1fbbd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fbc4:	48 c1 e8 03          	shr    $0x3,%rax
   1fbc8:	48 83 f8 1f          	cmp    $0x1f,%rax
   1fbcc:	0f 87 c9 01 00 00    	ja     1fd9b <try_realloc_chunk+0x836>
   1fbd2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fbd9:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fbdd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1fbe1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fbe8:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fbec:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1fbf0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fbf7:	48 c1 e8 03          	shr    $0x3,%rax
   1fbfb:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
   1fc01:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fc08:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
   1fc0c:	75 05                	jne    1fc13 <try_realloc_chunk+0x6ae>
   1fc0e:	e8 18 f9 00 00       	call   2f52b <abort>
   1fc13:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fc1a:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   1fc1e:	75 05                	jne    1fc25 <try_realloc_chunk+0x6c0>
   1fc20:	e8 06 f9 00 00       	call   2f52b <abort>
   1fc25:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fc2c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1fc30:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   1fc34:	48 89 c2             	mov    %rax,%rdx
   1fc37:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1fc3d:	c1 e0 03             	shl    $0x3,%eax
   1fc40:	89 c0                	mov    %eax,%eax
   1fc42:	48 39 c2             	cmp    %rax,%rdx
   1fc45:	74 05                	je     1fc4c <try_realloc_chunk+0x6e7>
   1fc47:	e8 df f8 00 00       	call   2f52b <abort>
   1fc4c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1fc52:	01 c0                	add    %eax,%eax
   1fc54:	89 c0                	mov    %eax,%eax
   1fc56:	48 83 c0 08          	add    $0x8,%rax
   1fc5a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fc61:	00 
   1fc62:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fc69:	48 01 d0             	add    %rdx,%rax
   1fc6c:	48 83 c0 08          	add    $0x8,%rax
   1fc70:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1fc74:	0f 94 c0             	sete   %al
   1fc77:	0f b6 c0             	movzbl %al,%eax
   1fc7a:	48 85 c0             	test   %rax,%rax
   1fc7d:	75 48                	jne    1fcc7 <try_realloc_chunk+0x762>
   1fc7f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fc86:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fc8a:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
   1fc8e:	0f 93 c0             	setae  %al
   1fc91:	0f b6 c0             	movzbl %al,%eax
   1fc94:	48 85 c0             	test   %rax,%rax
   1fc97:	74 21                	je     1fcba <try_realloc_chunk+0x755>
   1fc99:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1fc9d:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fca1:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1fca8:	0f 94 c0             	sete   %al
   1fcab:	0f b6 c0             	movzbl %al,%eax
   1fcae:	48 85 c0             	test   %rax,%rax
   1fcb1:	74 07                	je     1fcba <try_realloc_chunk+0x755>
   1fcb3:	b8 01 00 00 00       	mov    $0x1,%eax
   1fcb8:	eb 05                	jmp    1fcbf <try_realloc_chunk+0x75a>
   1fcba:	b8 00 00 00 00       	mov    $0x0,%eax
   1fcbf:	85 c0                	test   %eax,%eax
   1fcc1:	0f 84 cf 00 00 00    	je     1fd96 <try_realloc_chunk+0x831>
   1fcc7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1fccb:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
   1fccf:	75 2c                	jne    1fcfd <try_realloc_chunk+0x798>
   1fcd1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fcd8:	8b 10                	mov    (%rax),%edx
   1fcda:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1fce0:	be 01 00 00 00       	mov    $0x1,%esi
   1fce5:	89 c1                	mov    %eax,%ecx
   1fce7:	d3 e6                	shl    %cl,%esi
   1fce9:	89 f0                	mov    %esi,%eax
   1fceb:	f7 d0                	not    %eax
   1fced:	21 c2                	and    %eax,%edx
   1fcef:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fcf6:	89 10                	mov    %edx,(%rax)
   1fcf8:	e9 71 04 00 00       	jmp    2016e <try_realloc_chunk+0xc09>
   1fcfd:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
   1fd03:	01 c0                	add    %eax,%eax
   1fd05:	89 c0                	mov    %eax,%eax
   1fd07:	48 83 c0 08          	add    $0x8,%rax
   1fd0b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fd12:	00 
   1fd13:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fd1a:	48 01 d0             	add    %rdx,%rax
   1fd1d:	48 83 c0 08          	add    $0x8,%rax
   1fd21:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1fd25:	0f 94 c0             	sete   %al
   1fd28:	0f b6 c0             	movzbl %al,%eax
   1fd2b:	48 85 c0             	test   %rax,%rax
   1fd2e:	75 44                	jne    1fd74 <try_realloc_chunk+0x80f>
   1fd30:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fd37:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fd3b:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
   1fd3f:	0f 93 c0             	setae  %al
   1fd42:	0f b6 c0             	movzbl %al,%eax
   1fd45:	48 85 c0             	test   %rax,%rax
   1fd48:	74 21                	je     1fd6b <try_realloc_chunk+0x806>
   1fd4a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1fd4e:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fd52:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
   1fd59:	0f 94 c0             	sete   %al
   1fd5c:	0f b6 c0             	movzbl %al,%eax
   1fd5f:	48 85 c0             	test   %rax,%rax
   1fd62:	74 07                	je     1fd6b <try_realloc_chunk+0x806>
   1fd64:	b8 01 00 00 00       	mov    $0x1,%eax
   1fd69:	eb 05                	jmp    1fd70 <try_realloc_chunk+0x80b>
   1fd6b:	b8 00 00 00 00       	mov    $0x0,%eax
   1fd70:	85 c0                	test   %eax,%eax
   1fd72:	74 1d                	je     1fd91 <try_realloc_chunk+0x82c>
   1fd74:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1fd78:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1fd7c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1fd80:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1fd84:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1fd88:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1fd8c:	e9 dd 03 00 00       	jmp    2016e <try_realloc_chunk+0xc09>
   1fd91:	e8 95 f7 00 00       	call   2f52b <abort>
   1fd96:	e8 90 f7 00 00       	call   2f52b <abort>
   1fd9b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1fda2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1fda9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fdb0:	48 8b 40 30          	mov    0x30(%rax),%rax
   1fdb4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1fdbb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fdc2:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fdc6:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1fdcd:	0f 84 b9 00 00 00    	je     1fe8c <try_realloc_chunk+0x927>
   1fdd3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fdda:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fdde:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1fde5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fdec:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fdf0:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1fdf7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fdfe:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fe02:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
   1fe09:	0f 93 c0             	setae  %al
   1fe0c:	0f b6 c0             	movzbl %al,%eax
   1fe0f:	48 85 c0             	test   %rax,%rax
   1fe12:	74 24                	je     1fe38 <try_realloc_chunk+0x8d3>
   1fe14:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fe1b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1fe1f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1fe26:	0f 94 c0             	sete   %al
   1fe29:	0f b6 c0             	movzbl %al,%eax
   1fe2c:	48 85 c0             	test   %rax,%rax
   1fe2f:	74 07                	je     1fe38 <try_realloc_chunk+0x8d3>
   1fe31:	b8 01 00 00 00       	mov    $0x1,%eax
   1fe36:	eb 05                	jmp    1fe3d <try_realloc_chunk+0x8d8>
   1fe38:	b8 00 00 00 00       	mov    $0x0,%eax
   1fe3d:	85 c0                	test   %eax,%eax
   1fe3f:	74 46                	je     1fe87 <try_realloc_chunk+0x922>
   1fe41:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1fe48:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fe4c:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1fe53:	0f 94 c0             	sete   %al
   1fe56:	0f b6 c0             	movzbl %al,%eax
   1fe59:	48 85 c0             	test   %rax,%rax
   1fe5c:	74 29                	je     1fe87 <try_realloc_chunk+0x922>
   1fe5e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fe65:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1fe6c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1fe70:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1fe77:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1fe7e:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1fe82:	e9 f8 00 00 00       	jmp    1ff7f <try_realloc_chunk+0xa1a>
   1fe87:	e8 9f f6 00 00       	call   2f52b <abort>
   1fe8c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fe93:	48 83 c0 28          	add    $0x28,%rax
   1fe97:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1fe9e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1fea5:	48 8b 00             	mov    (%rax),%rax
   1fea8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1feaf:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   1feb6:	00 
   1feb7:	75 52                	jne    1ff0b <try_realloc_chunk+0x9a6>
   1feb9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1fec0:	48 83 c0 20          	add    $0x20,%rax
   1fec4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1fecb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1fed2:	48 8b 00             	mov    (%rax),%rax
   1fed5:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1fedc:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   1fee3:	00 
   1fee4:	0f 84 95 00 00 00    	je     1ff7f <try_realloc_chunk+0xa1a>
   1feea:	eb 1f                	jmp    1ff0b <try_realloc_chunk+0x9a6>
   1feec:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1fef3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1fefa:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1ff01:	48 8b 00             	mov    (%rax),%rax
   1ff04:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1ff0b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ff12:	48 83 c0 28          	add    $0x28,%rax
   1ff16:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1ff1d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ff24:	48 8b 00             	mov    (%rax),%rax
   1ff27:	48 85 c0             	test   %rax,%rax
   1ff2a:	75 c0                	jne    1feec <try_realloc_chunk+0x987>
   1ff2c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1ff33:	48 83 c0 20          	add    $0x20,%rax
   1ff37:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1ff3e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ff45:	48 8b 00             	mov    (%rax),%rax
   1ff48:	48 85 c0             	test   %rax,%rax
   1ff4b:	75 9f                	jne    1feec <try_realloc_chunk+0x987>
   1ff4d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ff54:	48 8b 40 18          	mov    0x18(%rax),%rax
   1ff58:	48 39 85 30 ff ff ff 	cmp    %rax,-0xd0(%rbp)
   1ff5f:	0f 93 c0             	setae  %al
   1ff62:	0f b6 c0             	movzbl %al,%eax
   1ff65:	48 85 c0             	test   %rax,%rax
   1ff68:	74 10                	je     1ff7a <try_realloc_chunk+0xa15>
   1ff6a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1ff71:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ff78:	eb 05                	jmp    1ff7f <try_realloc_chunk+0xa1a>
   1ff7a:	e8 ac f5 00 00       	call   2f52b <abort>
   1ff7f:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1ff86:	00 
   1ff87:	0f 84 e1 01 00 00    	je     2016e <try_realloc_chunk+0xc09>
   1ff8d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1ff94:	8b 40 38             	mov    0x38(%rax),%eax
   1ff97:	89 c0                	mov    %eax,%eax
   1ff99:	48 83 c0 4a          	add    $0x4a,%rax
   1ff9d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ffa4:	00 
   1ffa5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1ffac:	48 01 d0             	add    %rdx,%rax
   1ffaf:	48 83 c0 08          	add    $0x8,%rax
   1ffb3:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1ffba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffc1:	48 8b 00             	mov    (%rax),%rax
   1ffc4:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   1ffcb:	75 53                	jne    20020 <try_realloc_chunk+0xabb>
   1ffcd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffd4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1ffdb:	48 89 10             	mov    %rdx,(%rax)
   1ffde:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ffe5:	48 8b 00             	mov    (%rax),%rax
   1ffe8:	48 85 c0             	test   %rax,%rax
   1ffeb:	0f 85 8d 00 00 00    	jne    2007e <try_realloc_chunk+0xb19>
   1fff1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1fff8:	8b 50 04             	mov    0x4(%rax),%edx
   1fffb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   20002:	8b 40 38             	mov    0x38(%rax),%eax
   20005:	be 01 00 00 00       	mov    $0x1,%esi
   2000a:	89 c1                	mov    %eax,%ecx
   2000c:	d3 e6                	shl    %cl,%esi
   2000e:	89 f0                	mov    %esi,%eax
   20010:	f7 d0                	not    %eax
   20012:	21 c2                	and    %eax,%edx
   20014:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2001b:	89 50 04             	mov    %edx,0x4(%rax)
   2001e:	eb 5e                	jmp    2007e <try_realloc_chunk+0xb19>
   20020:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   20027:	48 8b 40 18          	mov    0x18(%rax),%rax
   2002b:	48 39 85 68 ff ff ff 	cmp    %rax,-0x98(%rbp)
   20032:	0f 93 c0             	setae  %al
   20035:	0f b6 c0             	movzbl %al,%eax
   20038:	48 85 c0             	test   %rax,%rax
   2003b:	74 3c                	je     20079 <try_realloc_chunk+0xb14>
   2003d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20044:	48 8b 40 20          	mov    0x20(%rax),%rax
   20048:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)
   2004f:	75 14                	jne    20065 <try_realloc_chunk+0xb00>
   20051:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20058:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   2005f:	48 89 50 20          	mov    %rdx,0x20(%rax)
   20063:	eb 19                	jmp    2007e <try_realloc_chunk+0xb19>
   20065:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   2006c:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   20073:	48 89 50 28          	mov    %rdx,0x28(%rax)
   20077:	eb 05                	jmp    2007e <try_realloc_chunk+0xb19>
   20079:	e8 ad f4 00 00       	call   2f52b <abort>
   2007e:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   20085:	00 
   20086:	0f 84 e2 00 00 00    	je     2016e <try_realloc_chunk+0xc09>
   2008c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   20093:	48 8b 40 18          	mov    0x18(%rax),%rax
   20097:	48 39 85 28 ff ff ff 	cmp    %rax,-0xd8(%rbp)
   2009e:	0f 93 c0             	setae  %al
   200a1:	0f b6 c0             	movzbl %al,%eax
   200a4:	48 85 c0             	test   %rax,%rax
   200a7:	0f 84 bc 00 00 00    	je     20169 <try_realloc_chunk+0xc04>
   200ad:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   200b4:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   200bb:	48 89 50 30          	mov    %rdx,0x30(%rax)
   200bf:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   200c6:	48 8b 40 20          	mov    0x20(%rax),%rax
   200ca:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   200ce:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
   200d3:	74 3f                	je     20114 <try_realloc_chunk+0xbaf>
   200d5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   200dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   200e0:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
   200e4:	0f 93 c0             	setae  %al
   200e7:	0f b6 c0             	movzbl %al,%eax
   200ea:	48 85 c0             	test   %rax,%rax
   200ed:	74 20                	je     2010f <try_realloc_chunk+0xbaa>
   200ef:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   200f6:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   200fa:	48 89 50 20          	mov    %rdx,0x20(%rax)
   200fe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20102:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   20109:	48 89 50 30          	mov    %rdx,0x30(%rax)
   2010d:	eb 05                	jmp    20114 <try_realloc_chunk+0xbaf>
   2010f:	e8 17 f4 00 00       	call   2f52b <abort>
   20114:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   2011b:	48 8b 40 28          	mov    0x28(%rax),%rax
   2011f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   20123:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   20128:	74 44                	je     2016e <try_realloc_chunk+0xc09>
   2012a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   20131:	48 8b 40 18          	mov    0x18(%rax),%rax
   20135:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
   20139:	0f 93 c0             	setae  %al
   2013c:	0f b6 c0             	movzbl %al,%eax
   2013f:	48 85 c0             	test   %rax,%rax
   20142:	74 20                	je     20164 <try_realloc_chunk+0xbff>
   20144:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2014b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   2014f:	48 89 50 28          	mov    %rdx,0x28(%rax)
   20153:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   20157:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   2015e:	48 89 50 30          	mov    %rdx,0x30(%rax)
   20162:	eb 0a                	jmp    2016e <try_realloc_chunk+0xc09>
   20164:	e8 c2 f3 00 00       	call   2f52b <abort>
   20169:	e8 bd f3 00 00       	call   2f52b <abort>
   2016e:	48 83 bd 58 ff ff ff 	cmpq   $0x1f,-0xa8(%rbp)
   20175:	1f 
   20176:	0f 87 88 00 00 00    	ja     20204 <try_realloc_chunk+0xc9f>
   2017c:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   20183:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2018a:	48 01 d0             	add    %rdx,%rax
   2018d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   20191:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20198:	48 8b 40 08          	mov    0x8(%rax),%rax
   2019c:	83 e0 01             	and    $0x1,%eax
   2019f:	48 0b 45 a8          	or     -0x58(%rbp),%rax
   201a3:	48 83 c8 02          	or     $0x2,%rax
   201a7:	48 89 c2             	mov    %rax,%rdx
   201aa:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   201b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   201b5:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   201bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   201c0:	48 01 d0             	add    %rdx,%rax
   201c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   201c7:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   201ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   201d2:	48 01 c8             	add    %rcx,%rax
   201d5:	48 83 ca 01          	or     $0x1,%rdx
   201d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   201dd:	48 8b 0d 1c be 04 00 	mov    0x4be1c(%rip),%rcx        # 6c000 <mparams>
   201e4:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   201eb:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   201f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   201f6:	48 01 f0             	add    %rsi,%rax
   201f9:	48 31 ca             	xor    %rcx,%rdx
   201fc:	48 89 10             	mov    %rdx,(%rax)
   201ff:	e9 17 01 00 00       	jmp    2031b <try_realloc_chunk+0xdb6>
   20204:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   2020b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20212:	48 01 d0             	add    %rdx,%rax
   20215:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   20219:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20220:	48 8b 40 08          	mov    0x8(%rax),%rax
   20224:	83 e0 01             	and    $0x1,%eax
   20227:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
   2022e:	48 83 c8 02          	or     $0x2,%rax
   20232:	48 89 c2             	mov    %rax,%rdx
   20235:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2023c:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20240:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
   20247:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2024e:	48 01 d0             	add    %rdx,%rax
   20251:	48 8b 50 08          	mov    0x8(%rax),%rdx
   20255:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
   2025c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20263:	48 01 c8             	add    %rcx,%rax
   20266:	48 83 ca 01          	or     $0x1,%rdx
   2026a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2026e:	48 8b 0d 8b bd 04 00 	mov    0x4bd8b(%rip),%rcx        # 6c000 <mparams>
   20275:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   2027c:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   20283:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2028a:	48 01 f0             	add    %rsi,%rax
   2028d:	48 31 ca             	xor    %rcx,%rdx
   20290:	48 89 10             	mov    %rdx,(%rax)
   20293:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20297:	48 8b 40 08          	mov    0x8(%rax),%rax
   2029b:	83 e0 01             	and    $0x1,%eax
   2029e:	48 0b 85 58 ff ff ff 	or     -0xa8(%rbp),%rax
   202a5:	48 83 c8 02          	or     $0x2,%rax
   202a9:	48 89 c2             	mov    %rax,%rdx
   202ac:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   202b0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   202b4:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   202b8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   202bf:	48 01 d0             	add    %rdx,%rax
   202c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   202c6:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   202ca:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   202d1:	48 01 c8             	add    %rcx,%rax
   202d4:	48 83 ca 01          	or     $0x1,%rdx
   202d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   202dc:	48 8b 0d 1d bd 04 00 	mov    0x4bd1d(%rip),%rcx        # 6c000 <mparams>
   202e3:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   202ea:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   202ee:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   202f5:	48 01 f0             	add    %rsi,%rax
   202f8:	48 31 ca             	xor    %rcx,%rdx
   202fb:	48 89 10             	mov    %rdx,(%rax)
   202fe:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   20305:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   20309:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   20310:	48 89 ce             	mov    %rcx,%rsi
   20313:	48 89 c7             	mov    %rax,%rdi
   20316:	e8 40 ab ff ff       	call   1ae5b <dispose_chunk>
   2031b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20322:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   20329:	eb 05                	jmp    20330 <try_realloc_chunk+0xdcb>
   2032b:	e8 fb f1 00 00       	call   2f52b <abort>
   20330:	90                   	nop
   20331:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20338:	c9                   	leave  
   20339:	c3                   	ret    

000000000002033a <internal_memalign>:
   2033a:	f3 0f 1e fa          	endbr64 
   2033e:	55                   	push   %rbp
   2033f:	48 89 e5             	mov    %rsp,%rbp
   20342:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   20349:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   2034d:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   20351:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   20358:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   2035f:	00 
   20360:	48 83 7d 80 1f       	cmpq   $0x1f,-0x80(%rbp)
   20365:	77 08                	ja     2036f <internal_memalign+0x35>
   20367:	48 c7 45 80 20 00 00 	movq   $0x20,-0x80(%rbp)
   2036e:	00 
   2036f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20373:	48 83 e8 01          	sub    $0x1,%rax
   20377:	48 23 45 80          	and    -0x80(%rbp),%rax
   2037b:	48 85 c0             	test   %rax,%rax
   2037e:	74 20                	je     203a0 <internal_memalign+0x66>
   20380:	48 c7 45 a0 20 00 00 	movq   $0x20,-0x60(%rbp)
   20387:	00 
   20388:	eb 04                	jmp    2038e <internal_memalign+0x54>
   2038a:	48 d1 65 a0          	shlq   -0x60(%rbp)
   2038e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20392:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
   20396:	72 f2                	jb     2038a <internal_memalign+0x50>
   20398:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2039c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   203a0:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   203a7:	48 2b 45 80          	sub    -0x80(%rbp),%rax
   203ab:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
   203b2:	72 1b                	jb     203cf <internal_memalign+0x95>
   203b4:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   203b9:	0f 84 da 03 00 00    	je     20799 <internal_memalign+0x45f>
   203bf:	e8 95 15 00 00       	call   21959 <__errno>
   203c4:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   203ca:	e9 ca 03 00 00       	jmp    20799 <internal_memalign+0x45f>
   203cf:	48 83 bd 78 ff ff ff 	cmpq   $0xe,-0x88(%rbp)
   203d6:	0e 
   203d7:	76 11                	jbe    203ea <internal_memalign+0xb0>
   203d9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   203e0:	48 83 c0 1f          	add    $0x1f,%rax
   203e4:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   203e8:	eb 05                	jmp    203ef <internal_memalign+0xb5>
   203ea:	b8 20 00 00 00       	mov    $0x20,%eax
   203ef:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   203f3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   203f7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   203fb:	48 01 d0             	add    %rdx,%rax
   203fe:	48 83 c0 10          	add    $0x10,%rax
   20402:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   20406:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2040a:	48 89 c7             	mov    %rax,%rdi
   2040d:	e8 a5 d0 ff ff       	call   1d4b7 <dlmalloc>
   20412:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   20416:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2041b:	0f 84 78 03 00 00    	je     20799 <internal_memalign+0x45f>
   20421:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20425:	48 83 e8 10          	sub    $0x10,%rax
   20429:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2042d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   20431:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   20437:	83 e0 02             	and    $0x2,%eax
   2043a:	85 c0                	test   %eax,%eax
   2043c:	74 36                	je     20474 <internal_memalign+0x13a>
   2043e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   20442:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   20449:	b8 01 00 00 00       	mov    $0x1,%eax
   2044e:	87 02                	xchg   %eax,(%rdx)
   20450:	85 c0                	test   %eax,%eax
   20452:	74 20                	je     20474 <internal_memalign+0x13a>
   20454:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   20458:	48 05 74 03 00 00    	add    $0x374,%rax
   2045e:	48 89 c7             	mov    %rax,%rdi
   20461:	e8 b4 6e ff ff       	call   1731a <spin_acquire_lock>
   20466:	85 c0                	test   %eax,%eax
   20468:	74 0a                	je     20474 <internal_memalign+0x13a>
   2046a:	b8 00 00 00 00       	mov    $0x0,%eax
   2046f:	e9 29 03 00 00       	jmp    2079d <internal_memalign+0x463>
   20474:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20478:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2047c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20480:	48 21 d0             	and    %rdx,%rax
   20483:	48 85 c0             	test   %rax,%rax
   20486:	0f 84 7c 01 00 00    	je     20608 <internal_memalign+0x2ce>
   2048c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   20490:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   20494:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20498:	48 01 d0             	add    %rdx,%rax
   2049b:	48 89 c2             	mov    %rax,%rdx
   2049e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   204a2:	48 f7 d8             	neg    %rax
   204a5:	48 21 d0             	and    %rdx,%rax
   204a8:	48 83 e8 10          	sub    $0x10,%rax
   204ac:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   204b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   204b4:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   204b8:	48 83 f8 1f          	cmp    $0x1f,%rax
   204bc:	77 0d                	ja     204cb <internal_memalign+0x191>
   204be:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   204c2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   204c6:	48 01 d0             	add    %rdx,%rax
   204c9:	eb 04                	jmp    204cf <internal_memalign+0x195>
   204cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   204cf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   204d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   204d7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   204db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   204df:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   204e3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   204e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   204eb:	48 8b 40 08          	mov    0x8(%rax),%rax
   204ef:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   204f3:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   204f7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   204fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   204ff:	48 8b 40 08          	mov    0x8(%rax),%rax
   20503:	83 e0 03             	and    $0x3,%eax
   20506:	48 85 c0             	test   %rax,%rax
   20509:	75 26                	jne    20531 <internal_memalign+0x1f7>
   2050b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2050f:	48 8b 10             	mov    (%rax),%rdx
   20512:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20516:	48 01 c2             	add    %rax,%rdx
   20519:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2051d:	48 89 10             	mov    %rdx,(%rax)
   20520:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20524:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20528:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2052c:	e9 cf 00 00 00       	jmp    20600 <internal_memalign+0x2c6>
   20531:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20535:	48 8b 40 08          	mov    0x8(%rax),%rax
   20539:	83 e0 01             	and    $0x1,%eax
   2053c:	48 0b 45 e0          	or     -0x20(%rbp),%rax
   20540:	48 83 c8 02          	or     $0x2,%rax
   20544:	48 89 c2             	mov    %rax,%rdx
   20547:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2054b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2054f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   20553:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20557:	48 01 d0             	add    %rdx,%rax
   2055a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2055e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   20562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20566:	48 01 c8             	add    %rcx,%rax
   20569:	48 83 ca 01          	or     $0x1,%rdx
   2056d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20571:	48 8b 0d 88 ba 04 00 	mov    0x4ba88(%rip),%rcx        # 6c000 <mparams>
   20578:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   2057c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   20580:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20584:	48 01 f0             	add    %rsi,%rax
   20587:	48 31 ca             	xor    %rcx,%rdx
   2058a:	48 89 10             	mov    %rdx,(%rax)
   2058d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20591:	48 8b 40 08          	mov    0x8(%rax),%rax
   20595:	83 e0 01             	and    $0x1,%eax
   20598:	48 0b 45 d8          	or     -0x28(%rbp),%rax
   2059c:	48 83 c8 02          	or     $0x2,%rax
   205a0:	48 89 c2             	mov    %rax,%rdx
   205a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   205a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
   205ab:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   205af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   205b3:	48 01 d0             	add    %rdx,%rax
   205b6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   205ba:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   205be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   205c2:	48 01 c8             	add    %rcx,%rax
   205c5:	48 83 ca 01          	or     $0x1,%rdx
   205c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   205cd:	48 8b 0d 2c ba 04 00 	mov    0x4ba2c(%rip),%rcx        # 6c000 <mparams>
   205d4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   205d8:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   205dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   205e0:	48 01 f0             	add    %rsi,%rax
   205e3:	48 31 ca             	xor    %rcx,%rdx
   205e6:	48 89 10             	mov    %rdx,(%rax)
   205e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   205ed:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   205f1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   205f5:	48 89 ce             	mov    %rcx,%rsi
   205f8:	48 89 c7             	mov    %rax,%rdi
   205fb:	e8 5b a8 ff ff       	call   1ae5b <dispose_chunk>
   20600:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20604:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   20608:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2060c:	48 8b 40 08          	mov    0x8(%rax),%rax
   20610:	83 e0 03             	and    $0x3,%eax
   20613:	48 85 c0             	test   %rax,%rax
   20616:	0f 84 0c 01 00 00    	je     20728 <internal_memalign+0x3ee>
   2061c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20620:	48 8b 40 08          	mov    0x8(%rax),%rax
   20624:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20628:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2062c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   20630:	48 83 c0 20          	add    $0x20,%rax
   20634:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   20638:	0f 86 ea 00 00 00    	jbe    20728 <internal_memalign+0x3ee>
   2063e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20642:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
   20646:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2064a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2064e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   20652:	48 01 d0             	add    %rdx,%rax
   20655:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20659:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2065d:	48 8b 40 08          	mov    0x8(%rax),%rax
   20661:	83 e0 01             	and    $0x1,%eax
   20664:	48 0b 45 b0          	or     -0x50(%rbp),%rax
   20668:	48 83 c8 02          	or     $0x2,%rax
   2066c:	48 89 c2             	mov    %rax,%rdx
   2066f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20673:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20677:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2067b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2067f:	48 01 d0             	add    %rdx,%rax
   20682:	48 8b 50 08          	mov    0x8(%rax),%rdx
   20686:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   2068a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2068e:	48 01 c8             	add    %rcx,%rax
   20691:	48 83 ca 01          	or     $0x1,%rdx
   20695:	48 89 50 08          	mov    %rdx,0x8(%rax)
   20699:	48 8b 0d 60 b9 04 00 	mov    0x4b960(%rip),%rcx        # 6c000 <mparams>
   206a0:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   206a4:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   206a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   206ac:	48 01 f0             	add    %rsi,%rax
   206af:	48 31 ca             	xor    %rcx,%rdx
   206b2:	48 89 10             	mov    %rdx,(%rax)
   206b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   206b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   206bd:	83 e0 01             	and    $0x1,%eax
   206c0:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   206c4:	48 83 c8 02          	or     $0x2,%rax
   206c8:	48 89 c2             	mov    %rax,%rdx
   206cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   206cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
   206d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   206d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   206db:	48 01 d0             	add    %rdx,%rax
   206de:	48 8b 50 08          	mov    0x8(%rax),%rdx
   206e2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   206e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   206ea:	48 01 c8             	add    %rcx,%rax
   206ed:	48 83 ca 01          	or     $0x1,%rdx
   206f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   206f5:	48 8b 0d 04 b9 04 00 	mov    0x4b904(%rip),%rcx        # 6c000 <mparams>
   206fc:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   20700:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   20704:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20708:	48 01 f0             	add    %rsi,%rax
   2070b:	48 31 ca             	xor    %rcx,%rdx
   2070e:	48 89 10             	mov    %rdx,(%rax)
   20711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20715:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   20719:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2071d:	48 89 ce             	mov    %rcx,%rsi
   20720:	48 89 c7             	mov    %rax,%rdi
   20723:	e8 33 a7 ff ff       	call   1ae5b <dispose_chunk>
   20728:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2072c:	48 83 c0 10          	add    $0x10,%rax
   20730:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   20734:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20738:	48 8b 40 08          	mov    0x8(%rax),%rax
   2073c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20740:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
   20744:	76 05                	jbe    2074b <internal_memalign+0x411>
   20746:	e8 e0 ed 00 00       	call   2f52b <abort>
   2074b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   2074f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   20753:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   20757:	48 21 d0             	and    %rdx,%rax
   2075a:	48 85 c0             	test   %rax,%rax
   2075d:	74 05                	je     20764 <internal_memalign+0x42a>
   2075f:	e8 c7 ed 00 00       	call   2f52b <abort>
   20764:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   20768:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2076c:	48 89 d6             	mov    %rdx,%rsi
   2076f:	48 89 c7             	mov    %rax,%rdi
   20772:	e8 30 70 ff ff       	call   177a7 <do_check_inuse_chunk>
   20777:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2077b:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   20781:	83 e0 02             	and    $0x2,%eax
   20784:	85 c0                	test   %eax,%eax
   20786:	74 11                	je     20799 <internal_memalign+0x45f>
   20788:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2078c:	48 05 74 03 00 00    	add    $0x374,%rax
   20792:	ba 00 00 00 00       	mov    $0x0,%edx
   20797:	89 10                	mov    %edx,(%rax)
   20799:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2079d:	c9                   	leave  
   2079e:	c3                   	ret    

000000000002079f <dlrealloc>:
   2079f:	f3 0f 1e fa          	endbr64 
   207a3:	55                   	push   %rbp
   207a4:	48 89 e5             	mov    %rsp,%rbp
   207a7:	48 83 ec 40          	sub    $0x40,%rsp
   207ab:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   207af:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   207b3:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   207ba:	00 
   207bb:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   207c0:	75 15                	jne    207d7 <dlrealloc+0x38>
   207c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   207c6:	48 89 c7             	mov    %rax,%rdi
   207c9:	e8 e9 cc ff ff       	call   1d4b7 <dlmalloc>
   207ce:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   207d2:	e9 b3 01 00 00       	jmp    2098a <dlrealloc+0x1eb>
   207d7:	48 81 7d c0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x40(%rbp)
   207de:	ff 
   207df:	76 10                	jbe    207f1 <dlrealloc+0x52>
   207e1:	e8 73 11 00 00       	call   21959 <__errno>
   207e6:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   207ec:	e9 99 01 00 00       	jmp    2098a <dlrealloc+0x1eb>
   207f1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   207f6:	75 11                	jne    20809 <dlrealloc+0x6a>
   207f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   207fc:	48 89 c7             	mov    %rax,%rdi
   207ff:	e8 ae d7 ff ff       	call   1dfb2 <dlfree>
   20804:	e9 81 01 00 00       	jmp    2098a <dlrealloc+0x1eb>
   20809:	48 83 7d c0 0e       	cmpq   $0xe,-0x40(%rbp)
   2080e:	76 0e                	jbe    2081e <dlrealloc+0x7f>
   20810:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20814:	48 83 c0 1f          	add    $0x1f,%rax
   20818:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   2081c:	eb 05                	jmp    20823 <dlrealloc+0x84>
   2081e:	b8 20 00 00 00       	mov    $0x20,%eax
   20823:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20827:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2082b:	48 83 e8 10          	sub    $0x10,%rax
   2082f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   20833:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20837:	48 8b 40 08          	mov    0x8(%rax),%rax
   2083b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2083f:	48 89 c2             	mov    %rax,%rdx
   20842:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20846:	48 01 d0             	add    %rdx,%rax
   20849:	48 8b 10             	mov    (%rax),%rdx
   2084c:	48 8b 05 ad b7 04 00 	mov    0x4b7ad(%rip),%rax        # 6c000 <mparams>
   20853:	48 31 d0             	xor    %rdx,%rax
   20856:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2085a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2085e:	48 8b 50 40          	mov    0x40(%rax),%rdx
   20862:	48 8b 05 97 b7 04 00 	mov    0x4b797(%rip),%rax        # 6c000 <mparams>
   20869:	48 39 c2             	cmp    %rax,%rdx
   2086c:	74 05                	je     20873 <dlrealloc+0xd4>
   2086e:	e8 b8 ec 00 00       	call   2f52b <abort>
   20873:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20877:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   2087d:	83 e0 02             	and    $0x2,%eax
   20880:	85 c0                	test   %eax,%eax
   20882:	74 30                	je     208b4 <dlrealloc+0x115>
   20884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20888:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
   2088f:	b8 01 00 00 00       	mov    $0x1,%eax
   20894:	87 02                	xchg   %eax,(%rdx)
   20896:	85 c0                	test   %eax,%eax
   20898:	74 1a                	je     208b4 <dlrealloc+0x115>
   2089a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2089e:	48 05 74 03 00 00    	add    $0x374,%rax
   208a4:	48 89 c7             	mov    %rax,%rdi
   208a7:	e8 6e 6a ff ff       	call   1731a <spin_acquire_lock>
   208ac:	85 c0                	test   %eax,%eax
   208ae:	0f 85 d6 00 00 00    	jne    2098a <dlrealloc+0x1eb>
   208b4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   208b8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   208bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   208c0:	b9 01 00 00 00       	mov    $0x1,%ecx
   208c5:	48 89 c7             	mov    %rax,%rdi
   208c8:	e8 98 ec ff ff       	call   1f565 <try_realloc_chunk>
   208cd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   208d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   208d5:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
   208db:	83 e0 02             	and    $0x2,%eax
   208de:	85 c0                	test   %eax,%eax
   208e0:	74 11                	je     208f3 <dlrealloc+0x154>
   208e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   208e6:	48 05 74 03 00 00    	add    $0x374,%rax
   208ec:	ba 00 00 00 00       	mov    $0x0,%edx
   208f1:	89 10                	mov    %edx,(%rax)
   208f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   208f8:	74 21                	je     2091b <dlrealloc+0x17c>
   208fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   208fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20902:	48 89 d6             	mov    %rdx,%rsi
   20905:	48 89 c7             	mov    %rax,%rdi
   20908:	e8 9a 6e ff ff       	call   177a7 <do_check_inuse_chunk>
   2090d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20911:	48 83 c0 10          	add    $0x10,%rax
   20915:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   20919:	eb 6f                	jmp    2098a <dlrealloc+0x1eb>
   2091b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2091f:	48 89 c7             	mov    %rax,%rdi
   20922:	e8 90 cb ff ff       	call   1d4b7 <dlmalloc>
   20927:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2092b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   20930:	74 58                	je     2098a <dlrealloc+0x1eb>
   20932:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20936:	48 8b 40 08          	mov    0x8(%rax),%rax
   2093a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2093e:	48 83 e8 10          	sub    $0x10,%rax
   20942:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2094a:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
   2094e:	48 0f 46 45 c0       	cmovbe -0x40(%rbp),%rax
   20953:	48 89 c2             	mov    %rax,%rdx
   20956:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   2095a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2095e:	48 89 ce             	mov    %rcx,%rsi
   20961:	48 89 c7             	mov    %rax,%rdi
   20964:	e8 16 05 00 00       	call   20e7f <memcpy>
   20969:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2096d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20971:	be 00 00 00 00       	mov    $0x0,%esi
   20976:	48 89 c7             	mov    %rax,%rdi
   20979:	e8 95 07 00 00       	call   21113 <memset>
   2097e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20982:	48 89 c7             	mov    %rax,%rdi
   20985:	e8 28 d6 ff ff       	call   1dfb2 <dlfree>
   2098a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2098e:	c9                   	leave  
   2098f:	c3                   	ret    

0000000000020990 <dlmemalign>:
   20990:	f3 0f 1e fa          	endbr64 
   20994:	55                   	push   %rbp
   20995:	48 89 e5             	mov    %rsp,%rbp
   20998:	48 83 ec 10          	sub    $0x10,%rsp
   2099c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   209a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   209a4:	48 83 7d f8 10       	cmpq   $0x10,-0x8(%rbp)
   209a9:	77 0e                	ja     209b9 <dlmemalign+0x29>
   209ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   209af:	48 89 c7             	mov    %rax,%rdi
   209b2:	e8 00 cb ff ff       	call   1d4b7 <dlmalloc>
   209b7:	eb 17                	jmp    209d0 <dlmemalign+0x40>
   209b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   209bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209c1:	48 89 c6             	mov    %rax,%rsi
   209c4:	48 8d 3d 75 b6 04 00 	lea    0x4b675(%rip),%rdi        # 6c040 <_gm_>
   209cb:	e8 6a f9 ff ff       	call   2033a <internal_memalign>
   209d0:	c9                   	leave  
   209d1:	c3                   	ret    

00000000000209d2 <dlposix_memalign>:
   209d2:	f3 0f 1e fa          	endbr64 
   209d6:	55                   	push   %rbp
   209d7:	48 89 e5             	mov    %rsp,%rbp
   209da:	48 83 ec 40          	sub    $0x40,%rsp
   209de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   209e2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   209e6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   209ea:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   209f1:	00 
   209f2:	48 83 7d d0 10       	cmpq   $0x10,-0x30(%rbp)
   209f7:	75 12                	jne    20a0b <dlposix_memalign+0x39>
   209f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   209fd:	48 89 c7             	mov    %rax,%rdi
   20a00:	e8 b2 ca ff ff       	call   1d4b7 <dlmalloc>
   20a05:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20a09:	eb 78                	jmp    20a83 <dlposix_memalign+0xb1>
   20a0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a0f:	48 c1 e8 03          	shr    $0x3,%rax
   20a13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20a17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a1b:	83 e0 07             	and    $0x7,%eax
   20a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20a22:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20a27:	75 18                	jne    20a41 <dlposix_memalign+0x6f>
   20a29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   20a2e:	74 11                	je     20a41 <dlposix_memalign+0x6f>
   20a30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20a34:	48 83 e8 01          	sub    $0x1,%rax
   20a38:	48 23 45 f0          	and    -0x10(%rbp),%rax
   20a3c:	48 85 c0             	test   %rax,%rax
   20a3f:	74 07                	je     20a48 <dlposix_memalign+0x76>
   20a41:	b8 16 00 00 00       	mov    $0x16,%eax
   20a46:	eb 59                	jmp    20aa1 <dlposix_memalign+0xcf>
   20a48:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   20a4f:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   20a53:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   20a57:	77 2a                	ja     20a83 <dlposix_memalign+0xb1>
   20a59:	48 83 7d d0 1f       	cmpq   $0x1f,-0x30(%rbp)
   20a5e:	77 08                	ja     20a68 <dlposix_memalign+0x96>
   20a60:	48 c7 45 d0 20 00 00 	movq   $0x20,-0x30(%rbp)
   20a67:	00 
   20a68:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20a6c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a70:	48 89 c6             	mov    %rax,%rsi
   20a73:	48 8d 3d c6 b5 04 00 	lea    0x4b5c6(%rip),%rdi        # 6c040 <_gm_>
   20a7a:	e8 bb f8 ff ff       	call   2033a <internal_memalign>
   20a7f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20a83:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   20a88:	75 07                	jne    20a91 <dlposix_memalign+0xbf>
   20a8a:	b8 0c 00 00 00       	mov    $0xc,%eax
   20a8f:	eb 10                	jmp    20aa1 <dlposix_memalign+0xcf>
   20a91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20a99:	48 89 10             	mov    %rdx,(%rax)
   20a9c:	b8 00 00 00 00       	mov    $0x0,%eax
   20aa1:	c9                   	leave  
   20aa2:	c3                   	ret    

0000000000020aa3 <dlmallinfo>:
   20aa3:	f3 0f 1e fa          	endbr64 
   20aa7:	55                   	push   %rbp
   20aa8:	48 89 e5             	mov    %rsp,%rbp
   20aab:	48 83 ec 20          	sub    $0x20,%rsp
   20aaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20ab3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20aba:	00 00 
   20abc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20ac0:	31 c0                	xor    %eax,%eax
   20ac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ac6:	48 8d 35 73 b5 04 00 	lea    0x4b573(%rip),%rsi        # 6c040 <_gm_>
   20acd:	48 89 c7             	mov    %rax,%rdi
   20ad0:	e8 42 7a ff ff       	call   18517 <internal_mallinfo>
   20ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ad9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   20ae0:	00 00 
   20ae2:	74 05                	je     20ae9 <dlmallinfo+0x46>
   20ae4:	e8 9e 07 00 00       	call   21287 <__stack_chk_fail>
   20ae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20aed:	c9                   	leave  
   20aee:	c3                   	ret    

0000000000020aef <__memcpy>:
   20aef:	f3 0f 1e fa          	endbr64 
   20af3:	55                   	push   %rbp
   20af4:	48 89 e5             	mov    %rsp,%rbp
   20af7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20afb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   20aff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20b03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20b07:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20b0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20b0f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20b13:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   20b18:	0f 84 02 01 00 00    	je     20c20 <__memcpy+0x131>
   20b1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b22:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20b26:	0f 84 f4 00 00 00    	je     20c20 <__memcpy+0x131>
   20b2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20b30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b38:	48 0b 45 f8          	or     -0x8(%rbp),%rax
   20b3c:	83 e0 07             	and    $0x7,%eax
   20b3f:	48 85 c0             	test   %rax,%rax
   20b42:	74 68                	je     20bac <__memcpy+0xbd>
   20b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b48:	48 33 45 f8          	xor    -0x8(%rbp),%rax
   20b4c:	83 e0 07             	and    $0x7,%eax
   20b4f:	48 85 c0             	test   %rax,%rax
   20b52:	75 07                	jne    20b5b <__memcpy+0x6c>
   20b54:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   20b59:	77 0a                	ja     20b65 <__memcpy+0x76>
   20b5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20b63:	eb 16                	jmp    20b7b <__memcpy+0x8c>
   20b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20b69:	83 e0 07             	and    $0x7,%eax
   20b6c:	ba 08 00 00 00       	mov    $0x8,%edx
   20b71:	48 29 c2             	sub    %rax,%rdx
   20b74:	48 89 d0             	mov    %rdx,%rax
   20b77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20b7f:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   20b83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20b87:	48 8d 42 01          	lea    0x1(%rdx),%rax
   20b8b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b93:	48 8d 48 01          	lea    0x1(%rax),%rcx
   20b97:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   20b9b:	0f b6 12             	movzbl (%rdx),%edx
   20b9e:	88 10                	mov    %dl,(%rax)
   20ba0:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   20ba5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20baa:	75 d7                	jne    20b83 <__memcpy+0x94>
   20bac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20bb0:	48 c1 e8 03          	shr    $0x3,%rax
   20bb4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20bb8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20bbd:	74 24                	je     20be3 <__memcpy+0xf4>
   20bbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20bc3:	48 8b 10             	mov    (%rax),%rdx
   20bc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20bca:	48 89 10             	mov    %rdx,(%rax)
   20bcd:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   20bd2:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   20bd7:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   20bdc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20be1:	75 dc                	jne    20bbf <__memcpy+0xd0>
   20be3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20be7:	83 e0 07             	and    $0x7,%eax
   20bea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20bee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20bf3:	74 2e                	je     20c23 <__memcpy+0x134>
   20bf5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20bf9:	48 8d 42 01          	lea    0x1(%rdx),%rax
   20bfd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20c01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c05:	48 8d 48 01          	lea    0x1(%rax),%rcx
   20c09:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   20c0d:	0f b6 12             	movzbl (%rdx),%edx
   20c10:	88 10                	mov    %dl,(%rax)
   20c12:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   20c17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20c1c:	75 d7                	jne    20bf5 <__memcpy+0x106>
   20c1e:	eb 03                	jmp    20c23 <__memcpy+0x134>
   20c20:	90                   	nop
   20c21:	eb 01                	jmp    20c24 <__memcpy+0x135>
   20c23:	90                   	nop
   20c24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c28:	5d                   	pop    %rbp
   20c29:	c3                   	ret    

0000000000020c2a <memcpy_verw>:
   20c2a:	f3 0f 1e fa          	endbr64 
   20c2e:	55                   	push   %rbp
   20c2f:	48 89 e5             	mov    %rsp,%rbp
   20c32:	48 83 ec 40          	sub    $0x40,%rsp
   20c36:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20c3a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   20c3e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20c42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c46:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20c4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20c4e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20c52:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   20c57:	74 0e                	je     20c67 <memcpy_verw+0x3d>
   20c59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c5d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20c61:	0f 85 80 00 00 00    	jne    20ce7 <memcpy_verw+0xbd>
   20c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c6b:	e9 b5 00 00 00       	jmp    20d25 <memcpy_verw+0xfb>
   20c70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c74:	83 e0 07             	and    $0x7,%eax
   20c77:	48 85 c0             	test   %rax,%rax
   20c7a:	75 49                	jne    20cc5 <memcpy_verw+0x9b>
   20c7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20c80:	83 e0 07             	and    $0x7,%eax
   20c83:	48 85 c0             	test   %rax,%rax
   20c86:	75 3d                	jne    20cc5 <memcpy_verw+0x9b>
   20c88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20c8c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20c90:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20c94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20c98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20c9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ca0:	48 89 ce             	mov    %rcx,%rsi
   20ca3:	48 89 c7             	mov    %rax,%rdi
   20ca6:	e8 7c 00 00 00       	call   20d27 <memcpy_nochecks>
   20cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20caf:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   20cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20cb7:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   20cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20cbf:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   20cc3:	eb 22                	jmp    20ce7 <memcpy_verw+0xbd>
   20cc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20cc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ccd:	48 89 d6             	mov    %rdx,%rsi
   20cd0:	48 89 c7             	mov    %rax,%rdi
   20cd3:	e8 b8 72 00 00       	call   27f90 <__memcpy_verw>
   20cd8:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   20cdd:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   20ce2:	48 83 6d c8 01       	subq   $0x1,-0x38(%rbp)
   20ce7:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   20cec:	77 82                	ja     20c70 <memcpy_verw+0x46>
   20cee:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   20cf5:	eb 21                	jmp    20d18 <memcpy_verw+0xee>
   20cf7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cff:	48 89 d6             	mov    %rdx,%rsi
   20d02:	48 89 c7             	mov    %rax,%rdi
   20d05:	e8 86 72 00 00       	call   27f90 <__memcpy_verw>
   20d0a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   20d0f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   20d14:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   20d18:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   20d1b:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   20d1f:	77 d6                	ja     20cf7 <memcpy_verw+0xcd>
   20d21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20d25:	c9                   	leave  
   20d26:	c3                   	ret    

0000000000020d27 <memcpy_nochecks>:
   20d27:	f3 0f 1e fa          	endbr64 
   20d2b:	55                   	push   %rbp
   20d2c:	48 89 e5             	mov    %rsp,%rbp
   20d2f:	48 83 ec 18          	sub    $0x18,%rsp
   20d33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20d37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20d3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20d3f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20d43:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d4b:	48 89 ce             	mov    %rcx,%rsi
   20d4e:	48 89 c7             	mov    %rax,%rdi
   20d51:	e8 99 fd ff ff       	call   20aef <__memcpy>
   20d56:	c9                   	leave  
   20d57:	c3                   	ret    

0000000000020d58 <copy_external_memory>:
   20d58:	f3 0f 1e fa          	endbr64 
   20d5c:	55                   	push   %rbp
   20d5d:	48 89 e5             	mov    %rsp,%rbp
   20d60:	48 83 ec 50          	sub    $0x50,%rsp
   20d64:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   20d68:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   20d6c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   20d70:	89 c8                	mov    %ecx,%eax
   20d72:	88 45 b4             	mov    %al,-0x4c(%rbp)
   20d75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20d7c:	00 00 
   20d7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20d82:	31 c0                	xor    %eax,%eax
   20d84:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   20d8b:	00 
   20d8c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   20d93:	00 
   20d94:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20d98:	83 e0 07             	and    $0x7,%eax
   20d9b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   20d9e:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   20da5:	00 
   20da6:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   20dab:	0f 84 b7 00 00 00    	je     20e68 <copy_external_memory+0x110>
   20db1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   20db5:	75 07                	jne    20dbe <copy_external_memory+0x66>
   20db7:	48 83 7d b8 08       	cmpq   $0x8,-0x48(%rbp)
   20dbc:	74 6a                	je     20e28 <copy_external_memory+0xd0>
   20dbe:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20dc1:	48 f7 d8             	neg    %rax
   20dc4:	48 89 c2             	mov    %rax,%rdx
   20dc7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20dcb:	48 01 c2             	add    %rax,%rdx
   20dce:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20dd2:	48 89 d6             	mov    %rdx,%rsi
   20dd5:	48 89 c7             	mov    %rax,%rdi
   20dd8:	e8 d3 71 00 00       	call   27fb0 <__memcpy_8a>
   20ddd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   20de1:	74 35                	je     20e18 <copy_external_memory+0xc0>
   20de3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   20de6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20dea:	48 01 d0             	add    %rdx,%rax
   20ded:	48 83 f8 08          	cmp    $0x8,%rax
   20df1:	76 25                	jbe    20e18 <copy_external_memory+0xc0>
   20df3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20df6:	ba 08 00 00 00       	mov    $0x8,%edx
   20dfb:	48 29 c2             	sub    %rax,%rdx
   20dfe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20e02:	48 01 c2             	add    %rax,%rdx
   20e05:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20e09:	48 83 c0 08          	add    $0x8,%rax
   20e0d:	48 89 d6             	mov    %rdx,%rsi
   20e10:	48 89 c7             	mov    %rax,%rdi
   20e13:	e8 98 71 00 00       	call   27fb0 <__memcpy_8a>
   20e18:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   20e1b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   20e1f:	48 01 d0             	add    %rdx,%rax
   20e22:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20e26:	eb 08                	jmp    20e30 <copy_external_memory+0xd8>
   20e28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20e2c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20e30:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
   20e34:	74 19                	je     20e4f <copy_external_memory+0xf7>
   20e36:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   20e3a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   20e3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20e42:	48 89 ce             	mov    %rcx,%rsi
   20e45:	48 89 c7             	mov    %rax,%rdi
   20e48:	e8 dd fd ff ff       	call   20c2a <memcpy_verw>
   20e4d:	eb 1a                	jmp    20e69 <copy_external_memory+0x111>
   20e4f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   20e53:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   20e57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20e5b:	48 89 ce             	mov    %rcx,%rsi
   20e5e:	48 89 c7             	mov    %rax,%rdi
   20e61:	e8 c1 fe ff ff       	call   20d27 <memcpy_nochecks>
   20e66:	eb 01                	jmp    20e69 <copy_external_memory+0x111>
   20e68:	90                   	nop
   20e69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e6d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   20e74:	00 00 
   20e76:	74 05                	je     20e7d <copy_external_memory+0x125>
   20e78:	e8 0a 04 00 00       	call   21287 <__stack_chk_fail>
   20e7d:	c9                   	leave  
   20e7e:	c3                   	ret    

0000000000020e7f <memcpy>:
   20e7f:	f3 0f 1e fa          	endbr64 
   20e83:	55                   	push   %rbp
   20e84:	48 89 e5             	mov    %rsp,%rbp
   20e87:	48 83 ec 40          	sub    $0x40,%rsp
   20e8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20e8f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   20e93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20e97:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   20e9c:	74 0a                	je     20ea8 <memcpy+0x29>
   20e9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20ea2:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   20ea6:	75 09                	jne    20eb1 <memcpy+0x32>
   20ea8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20eac:	e9 5e 01 00 00       	jmp    2100f <memcpy+0x190>
   20eb1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20eb5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20eb9:	48 89 d6             	mov    %rdx,%rsi
   20ebc:	48 89 c7             	mov    %rax,%rdi
   20ebf:	e8 e3 c2 fe ff       	call   d1a7 <sgx_is_within_enclave>
   20ec4:	85 c0                	test   %eax,%eax
   20ec6:	0f 94 c0             	sete   %al
   20ec9:	88 45 e6             	mov    %al,-0x1a(%rbp)
   20ecc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20ed0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20ed4:	48 89 d6             	mov    %rdx,%rsi
   20ed7:	48 89 c7             	mov    %rax,%rdi
   20eda:	e8 c8 c2 fe ff       	call   d1a7 <sgx_is_within_enclave>
   20edf:	85 c0                	test   %eax,%eax
   20ee1:	0f 94 c0             	sete   %al
   20ee4:	88 45 e7             	mov    %al,-0x19(%rbp)
   20ee7:	0f b6 45 e6          	movzbl -0x1a(%rbp),%eax
   20eeb:	83 f0 01             	xor    $0x1,%eax
   20eee:	84 c0                	test   %al,%al
   20ef0:	74 3e                	je     20f30 <memcpy+0xb1>
   20ef2:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
   20ef6:	74 1c                	je     20f14 <memcpy+0x95>
   20ef8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20efc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   20f00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f04:	48 89 ce             	mov    %rcx,%rsi
   20f07:	48 89 c7             	mov    %rax,%rdi
   20f0a:	e8 1b fd ff ff       	call   20c2a <memcpy_verw>
   20f0f:	e9 fb 00 00 00       	jmp    2100f <memcpy+0x190>
   20f14:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20f18:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   20f1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f20:	48 89 ce             	mov    %rcx,%rsi
   20f23:	48 89 c7             	mov    %rax,%rdi
   20f26:	e8 fc fd ff ff       	call   20d27 <memcpy_nochecks>
   20f2b:	e9 df 00 00 00       	jmp    2100f <memcpy+0x190>
   20f30:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   20f37:	00 
   20f38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20f40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20f44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20f48:	e9 9b 00 00 00       	jmp    20fe8 <memcpy+0x169>
   20f4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20f51:	83 e0 07             	and    $0x7,%eax
   20f54:	48 85 c0             	test   %rax,%rax
   20f57:	75 49                	jne    20fa2 <memcpy+0x123>
   20f59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20f5d:	83 e0 07             	and    $0x7,%eax
   20f60:	48 85 c0             	test   %rax,%rax
   20f63:	75 3d                	jne    20fa2 <memcpy+0x123>
   20f65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20f69:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   20f6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20f71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20f75:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20f7d:	48 89 ce             	mov    %rcx,%rsi
   20f80:	48 89 c7             	mov    %rax,%rdi
   20f83:	e8 9f fd ff ff       	call   20d27 <memcpy_nochecks>
   20f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f8c:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   20f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f94:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   20f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f9c:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   20fa0:	eb 46                	jmp    20fe8 <memcpy+0x169>
   20fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20fa6:	83 e0 07             	and    $0x7,%eax
   20fa9:	ba 08 00 00 00       	mov    $0x8,%edx
   20fae:	48 29 c2             	sub    %rax,%rdx
   20fb1:	48 89 d0             	mov    %rdx,%rax
   20fb4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20fb8:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
   20fbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20fc0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   20fc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20fc8:	48 89 c7             	mov    %rax,%rdi
   20fcb:	e8 88 fd ff ff       	call   20d58 <copy_external_memory>
   20fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fd4:	48 01 45 f0          	add    %rax,-0x10(%rbp)
   20fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fdc:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   20fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fe4:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
   20fe8:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   20fed:	0f 87 5a ff ff ff    	ja     20f4d <memcpy+0xce>
   20ff3:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
   20ff7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20ffb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   20fff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21003:	48 89 c7             	mov    %rax,%rdi
   21006:	e8 4d fd ff ff       	call   20d58 <copy_external_memory>
   2100b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2100f:	c9                   	leave  
   21010:	c3                   	ret    

0000000000021011 <memset_verw>:
   21011:	f3 0f 1e fa          	endbr64 
   21015:	55                   	push   %rbp
   21016:	48 89 e5             	mov    %rsp,%rbp
   21019:	48 83 ec 40          	sub    $0x40,%rsp
   2101d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21021:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   21024:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   21028:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2102f:	00 00 
   21031:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21035:	31 c0                	xor    %eax,%eax
   21037:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2103b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2103f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   21044:	74 07                	je     2104d <memset_verw+0x3c>
   21046:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2104b:	75 09                	jne    21056 <memset_verw+0x45>
   2104d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21051:	e9 a7 00 00 00       	jmp    210fd <memset_verw+0xec>
   21056:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   21059:	88 45 e3             	mov    %al,-0x1d(%rbp)
   2105c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   21063:	00 
   21064:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   21067:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2106b:	ba 08 00 00 00       	mov    $0x8,%edx
   21070:	89 ce                	mov    %ecx,%esi
   21072:	48 89 c7             	mov    %rax,%rdi
   21075:	e8 99 00 00 00       	call   21113 <memset>
   2107a:	eb 48                	jmp    210c4 <memset_verw+0xb3>
   2107c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21080:	83 e0 07             	and    $0x7,%eax
   21083:	48 85 c0             	test   %rax,%rax
   21086:	75 1f                	jne    210a7 <memset_verw+0x96>
   21088:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   2108c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21090:	48 89 d6             	mov    %rdx,%rsi
   21093:	48 89 c7             	mov    %rax,%rdi
   21096:	e8 15 6f 00 00       	call   27fb0 <__memcpy_8a>
   2109b:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
   210a0:	48 83 6d c8 08       	subq   $0x8,-0x38(%rbp)
   210a5:	eb 1d                	jmp    210c4 <memset_verw+0xb3>
   210a7:	48 8d 55 e3          	lea    -0x1d(%rbp),%rdx
   210ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   210af:	48 89 d6             	mov    %rdx,%rsi
   210b2:	48 89 c7             	mov    %rax,%rdi
   210b5:	e8 d6 6e 00 00       	call   27f90 <__memcpy_verw>
   210ba:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   210bf:	48 83 6d c8 01       	subq   $0x1,-0x38(%rbp)
   210c4:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
   210c9:	77 b1                	ja     2107c <memset_verw+0x6b>
   210cb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   210d2:	eb 1c                	jmp    210f0 <memset_verw+0xdf>
   210d4:	48 8d 55 e3          	lea    -0x1d(%rbp),%rdx
   210d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   210dc:	48 89 d6             	mov    %rdx,%rsi
   210df:	48 89 c7             	mov    %rax,%rdi
   210e2:	e8 a9 6e 00 00       	call   27f90 <__memcpy_verw>
   210e7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   210ec:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   210f0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   210f3:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   210f7:	77 db                	ja     210d4 <memset_verw+0xc3>
   210f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   210fd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21101:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   21108:	00 00 
   2110a:	74 05                	je     21111 <memset_verw+0x100>
   2110c:	e8 76 01 00 00       	call   21287 <__stack_chk_fail>
   21111:	c9                   	leave  
   21112:	c3                   	ret    

0000000000021113 <memset>:
   21113:	f3 0f 1e fa          	endbr64 
   21117:	55                   	push   %rbp
   21118:	48 89 e5             	mov    %rsp,%rbp
   2111b:	48 83 ec 20          	sub    $0x20,%rsp
   2111f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21123:	89 75 f4             	mov    %esi,-0xc(%rbp)
   21126:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2112a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2112e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   21131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21135:	89 ce                	mov    %ecx,%esi
   21137:	48 89 c7             	mov    %rax,%rdi
   2113a:	e8 81 6e 00 00       	call   27fc0 <__memset>
   2113f:	c9                   	leave  
   21140:	c3                   	ret    

0000000000021141 <memset_s>:
   21141:	f3 0f 1e fa          	endbr64 
   21145:	55                   	push   %rbp
   21146:	48 89 e5             	mov    %rsp,%rbp
   21149:	48 83 ec 30          	sub    $0x30,%rsp
   2114d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21151:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21155:	89 55 dc             	mov    %edx,-0x24(%rbp)
   21158:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2115c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   21163:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   21168:	75 09                	jne    21173 <memset_s+0x32>
   2116a:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
   21171:	eb 33                	jmp    211a6 <memset_s+0x65>
   21173:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21177:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2117b:	76 0f                	jbe    2118c <memset_s+0x4b>
   2117d:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
   21184:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21188:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2118c:	4c 8b 05 75 7f 01 00 	mov    0x17f75(%rip),%r8        # 39108 <__memset_vp>
   21193:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   21197:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   2119a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2119e:	89 ce                	mov    %ecx,%esi
   211a0:	48 89 c7             	mov    %rax,%rdi
   211a3:	41 ff d0             	call   *%r8
   211a6:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   211aa:	75 07                	jne    211b3 <memset_s+0x72>
   211ac:	b8 00 00 00 00       	mov    $0x0,%eax
   211b1:	eb 0d                	jmp    211c0 <memset_s+0x7f>
   211b3:	e8 a1 07 00 00       	call   21959 <__errno>
   211b8:	8b 55 fc             	mov    -0x4(%rbp),%edx
   211bb:	89 10                	mov    %edx,(%rax)
   211bd:	8b 45 fc             	mov    -0x4(%rbp),%eax
   211c0:	c9                   	leave  
   211c1:	c3                   	ret    

00000000000211c2 <memset_verw_s>:
   211c2:	f3 0f 1e fa          	endbr64 
   211c6:	55                   	push   %rbp
   211c7:	48 89 e5             	mov    %rsp,%rbp
   211ca:	48 83 ec 30          	sub    $0x30,%rsp
   211ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   211d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   211d6:	89 55 dc             	mov    %edx,-0x24(%rbp)
   211d9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   211dd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   211e4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   211e9:	75 09                	jne    211f4 <memset_verw_s+0x32>
   211eb:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
   211f2:	eb 2e                	jmp    21222 <memset_verw_s+0x60>
   211f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   211f8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   211fc:	76 0f                	jbe    2120d <memset_verw_s+0x4b>
   211fe:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
   21205:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21209:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2120d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   21211:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   21214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21218:	89 ce                	mov    %ecx,%esi
   2121a:	48 89 c7             	mov    %rax,%rdi
   2121d:	e8 ef fd ff ff       	call   21011 <memset_verw>
   21222:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   21226:	75 07                	jne    2122f <memset_verw_s+0x6d>
   21228:	b8 00 00 00 00       	mov    $0x0,%eax
   2122d:	eb 0d                	jmp    2123c <memset_verw_s+0x7a>
   2122f:	e8 25 07 00 00       	call   21959 <__errno>
   21234:	8b 55 fc             	mov    -0x4(%rbp),%edx
   21237:	89 10                	mov    %edx,(%rax)
   21239:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2123c:	c9                   	leave  
   2123d:	c3                   	ret    

000000000002123e <tstdc_access_version_dummy1>:
   2123e:	f3 0f 1e fa          	endbr64 
   21242:	55                   	push   %rbp
   21243:	48 89 e5             	mov    %rsp,%rbp
   21246:	c6 05 c3 7e 01 00 73 	movb   $0x73,0x17ec3(%rip)        # 39110 <sgx_tstdc_version>
   2124d:	48 8d 05 bc 7e 01 00 	lea    0x17ebc(%rip),%rax        # 39110 <sgx_tstdc_version>
   21254:	5d                   	pop    %rbp
   21255:	c3                   	ret    

0000000000021256 <sgx_init_string_lib>:
   21256:	f3 0f 1e fa          	endbr64 
   2125a:	55                   	push   %rbp
   2125b:	48 89 e5             	mov    %rsp,%rbp
   2125e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21262:	b8 00 00 00 00       	mov    $0x0,%eax
   21267:	5d                   	pop    %rbp
   21268:	c3                   	ret    

0000000000021269 <strlen>:
   21269:	f3 0f 1e fa          	endbr64 
   2126d:	55                   	push   %rbp
   2126e:	48 89 e5             	mov    %rsp,%rbp
   21271:	48 83 ec 10          	sub    $0x10,%rsp
   21275:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2127d:	48 89 c7             	mov    %rax,%rdi
   21280:	e8 9b 6d 00 00       	call   28020 <_libc__strlen>
   21285:	c9                   	leave  
   21286:	c3                   	ret    

0000000000021287 <__stack_chk_fail>:
   21287:	f3 0f 1e fa          	endbr64 
   2128b:	55                   	push   %rbp
   2128c:	48 89 e5             	mov    %rsp,%rbp
   2128f:	e8 97 e2 00 00       	call   2f52b <abort>

0000000000021294 <__stack_chk_fail_local>:
   21294:	f3 0f 1e fa          	endbr64 
   21298:	55                   	push   %rbp
   21299:	48 89 e5             	mov    %rsp,%rbp
   2129c:	e8 e6 ff ff ff       	call   21287 <__stack_chk_fail>

00000000000212a1 <__intel_security_check_cookie>:
   212a1:	f3 0f 1e fa          	endbr64 
   212a5:	55                   	push   %rbp
   212a6:	48 89 e5             	mov    %rsp,%rbp
   212a9:	48 83 ec 10          	sub    $0x10,%rsp
   212ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   212b1:	48 8b 05 58 6b 01 00 	mov    0x16b58(%rip),%rax        # 37e10 <__intel_security_cookie>
   212b8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   212bc:	74 05                	je     212c3 <__intel_security_check_cookie+0x22>
   212be:	e8 68 e2 00 00       	call   2f52b <abort>
   212c3:	90                   	nop
   212c4:	c9                   	leave  
   212c5:	c3                   	ret    

00000000000212c6 <sgx_thread_spin_init>:
   212c6:	f3 0f 1e fa          	endbr64 
   212ca:	55                   	push   %rbp
   212cb:	48 89 e5             	mov    %rsp,%rbp
   212ce:	48 83 ec 10          	sub    $0x10,%rsp
   212d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   212d6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   212db:	74 15                	je     212f2 <sgx_thread_spin_init+0x2c>
   212dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   212e1:	be 18 00 00 00       	mov    $0x18,%esi
   212e6:	48 89 c7             	mov    %rax,%rdi
   212e9:	e8 b9 be fe ff       	call   d1a7 <sgx_is_within_enclave>
   212ee:	85 c0                	test   %eax,%eax
   212f0:	75 07                	jne    212f9 <sgx_thread_spin_init+0x33>
   212f2:	b8 01 00 00 00       	mov    $0x1,%eax
   212f7:	eb 05                	jmp    212fe <sgx_thread_spin_init+0x38>
   212f9:	b8 00 00 00 00       	mov    $0x0,%eax
   212fe:	84 c0                	test   %al,%al
   21300:	74 07                	je     21309 <sgx_thread_spin_init+0x43>
   21302:	b8 16 00 00 00       	mov    $0x16,%eax
   21307:	eb 27                	jmp    21330 <sgx_thread_spin_init+0x6a>
   21309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2130d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   21314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21318:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   2131f:	00 
   21320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21324:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   2132b:	b8 00 00 00 00       	mov    $0x0,%eax
   21330:	c9                   	leave  
   21331:	c3                   	ret    

0000000000021332 <sgx_thread_spin_destroy>:
   21332:	f3 0f 1e fa          	endbr64 
   21336:	55                   	push   %rbp
   21337:	48 89 e5             	mov    %rsp,%rbp
   2133a:	48 83 ec 10          	sub    $0x10,%rsp
   2133e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21342:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   21347:	74 15                	je     2135e <sgx_thread_spin_destroy+0x2c>
   21349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2134d:	be 18 00 00 00       	mov    $0x18,%esi
   21352:	48 89 c7             	mov    %rax,%rdi
   21355:	e8 4d be fe ff       	call   d1a7 <sgx_is_within_enclave>
   2135a:	85 c0                	test   %eax,%eax
   2135c:	75 07                	jne    21365 <sgx_thread_spin_destroy+0x33>
   2135e:	b8 01 00 00 00       	mov    $0x1,%eax
   21363:	eb 05                	jmp    2136a <sgx_thread_spin_destroy+0x38>
   21365:	b8 00 00 00 00       	mov    $0x0,%eax
   2136a:	84 c0                	test   %al,%al
   2136c:	74 07                	je     21375 <sgx_thread_spin_destroy+0x43>
   2136e:	b8 16 00 00 00       	mov    $0x16,%eax
   21373:	eb 54                	jmp    213c9 <sgx_thread_spin_destroy+0x97>
   21375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21379:	48 83 c0 08          	add    $0x8,%rax
   2137d:	48 89 c7             	mov    %rax,%rdi
   21380:	e8 a7 5d ff ff       	call   1712c <sgx_spin_lock>
   21385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21389:	48 8b 40 10          	mov    0x10(%rax),%rax
   2138d:	48 85 c0             	test   %rax,%rax
   21390:	74 17                	je     213a9 <sgx_thread_spin_destroy+0x77>
   21392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21396:	48 83 c0 08          	add    $0x8,%rax
   2139a:	48 89 c7             	mov    %rax,%rdi
   2139d:	e8 25 5e ff ff       	call   171c7 <sgx_spin_unlock>
   213a2:	b8 10 00 00 00       	mov    $0x10,%eax
   213a7:	eb 20                	jmp    213c9 <sgx_thread_spin_destroy+0x97>
   213a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   213ad:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   213b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   213b8:	48 83 c0 08          	add    $0x8,%rax
   213bc:	48 89 c7             	mov    %rax,%rdi
   213bf:	e8 03 5e ff ff       	call   171c7 <sgx_spin_unlock>
   213c4:	b8 00 00 00 00       	mov    $0x0,%eax
   213c9:	c9                   	leave  
   213ca:	c3                   	ret    

00000000000213cb <sgx_thread_spin_trylock>:
   213cb:	f3 0f 1e fa          	endbr64 
   213cf:	55                   	push   %rbp
   213d0:	48 89 e5             	mov    %rsp,%rbp
   213d3:	48 83 ec 20          	sub    $0x20,%rsp
   213d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   213db:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   213e0:	74 15                	je     213f7 <sgx_thread_spin_trylock+0x2c>
   213e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   213e6:	be 18 00 00 00       	mov    $0x18,%esi
   213eb:	48 89 c7             	mov    %rax,%rdi
   213ee:	e8 b4 bd fe ff       	call   d1a7 <sgx_is_within_enclave>
   213f3:	85 c0                	test   %eax,%eax
   213f5:	75 07                	jne    213fe <sgx_thread_spin_trylock+0x33>
   213f7:	b8 01 00 00 00       	mov    $0x1,%eax
   213fc:	eb 05                	jmp    21403 <sgx_thread_spin_trylock+0x38>
   213fe:	b8 00 00 00 00       	mov    $0x0,%eax
   21403:	84 c0                	test   %al,%al
   21405:	74 0a                	je     21411 <sgx_thread_spin_trylock+0x46>
   21407:	b8 16 00 00 00       	mov    $0x16,%eax
   2140c:	e9 a7 00 00 00       	jmp    214b8 <sgx_thread_spin_trylock+0xed>
   21411:	e8 70 dd 00 00       	call   2f186 <get_thread_data>
   21416:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2141a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2141e:	48 83 c0 08          	add    $0x8,%rax
   21422:	48 89 c7             	mov    %rax,%rdi
   21425:	e8 02 5d ff ff       	call   1712c <sgx_spin_lock>
   2142a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2142e:	48 8b 40 10          	mov    0x10(%rax),%rax
   21432:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   21436:	75 29                	jne    21461 <sgx_thread_spin_trylock+0x96>
   21438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2143c:	48 8b 00             	mov    (%rax),%rax
   2143f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   21443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21447:	48 89 10             	mov    %rdx,(%rax)
   2144a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2144e:	48 83 c0 08          	add    $0x8,%rax
   21452:	48 89 c7             	mov    %rax,%rdi
   21455:	e8 6d 5d ff ff       	call   171c7 <sgx_spin_unlock>
   2145a:	b8 00 00 00 00       	mov    $0x0,%eax
   2145f:	eb 57                	jmp    214b8 <sgx_thread_spin_trylock+0xed>
   21461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21465:	48 8b 40 10          	mov    0x10(%rax),%rax
   21469:	48 85 c0             	test   %rax,%rax
   2146c:	75 35                	jne    214a3 <sgx_thread_spin_trylock+0xd8>
   2146e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21472:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21476:	48 89 50 10          	mov    %rdx,0x10(%rax)
   2147a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2147e:	48 8b 00             	mov    (%rax),%rax
   21481:	48 8d 50 01          	lea    0x1(%rax),%rdx
   21485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21489:	48 89 10             	mov    %rdx,(%rax)
   2148c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21490:	48 83 c0 08          	add    $0x8,%rax
   21494:	48 89 c7             	mov    %rax,%rdi
   21497:	e8 2b 5d ff ff       	call   171c7 <sgx_spin_unlock>
   2149c:	b8 00 00 00 00       	mov    $0x0,%eax
   214a1:	eb 15                	jmp    214b8 <sgx_thread_spin_trylock+0xed>
   214a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   214a7:	48 83 c0 08          	add    $0x8,%rax
   214ab:	48 89 c7             	mov    %rax,%rdi
   214ae:	e8 14 5d ff ff       	call   171c7 <sgx_spin_unlock>
   214b3:	b8 10 00 00 00       	mov    $0x10,%eax
   214b8:	c9                   	leave  
   214b9:	c3                   	ret    

00000000000214ba <sgx_thread_spin_unlock>:
   214ba:	f3 0f 1e fa          	endbr64 
   214be:	55                   	push   %rbp
   214bf:	48 89 e5             	mov    %rsp,%rbp
   214c2:	48 83 ec 20          	sub    $0x20,%rsp
   214c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   214ca:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   214cf:	74 15                	je     214e6 <sgx_thread_spin_unlock+0x2c>
   214d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   214d5:	be 18 00 00 00       	mov    $0x18,%esi
   214da:	48 89 c7             	mov    %rax,%rdi
   214dd:	e8 c5 bc fe ff       	call   d1a7 <sgx_is_within_enclave>
   214e2:	85 c0                	test   %eax,%eax
   214e4:	75 07                	jne    214ed <sgx_thread_spin_unlock+0x33>
   214e6:	b8 01 00 00 00       	mov    $0x1,%eax
   214eb:	eb 05                	jmp    214f2 <sgx_thread_spin_unlock+0x38>
   214ed:	b8 00 00 00 00       	mov    $0x0,%eax
   214f2:	84 c0                	test   %al,%al
   214f4:	74 0a                	je     21500 <sgx_thread_spin_unlock+0x46>
   214f6:	b8 16 00 00 00       	mov    $0x16,%eax
   214fb:	e9 a6 00 00 00       	jmp    215a6 <sgx_thread_spin_unlock+0xec>
   21500:	e8 81 dc 00 00       	call   2f186 <get_thread_data>
   21505:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21509:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2150d:	48 83 c0 08          	add    $0x8,%rax
   21511:	48 89 c7             	mov    %rax,%rdi
   21514:	e8 13 5c ff ff       	call   1712c <sgx_spin_lock>
   21519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2151d:	48 8b 40 10          	mov    0x10(%rax),%rax
   21521:	48 85 c0             	test   %rax,%rax
   21524:	75 17                	jne    2153d <sgx_thread_spin_unlock+0x83>
   21526:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2152a:	48 83 c0 08          	add    $0x8,%rax
   2152e:	48 89 c7             	mov    %rax,%rdi
   21531:	e8 91 5c ff ff       	call   171c7 <sgx_spin_unlock>
   21536:	b8 01 00 00 00       	mov    $0x1,%eax
   2153b:	eb 69                	jmp    215a6 <sgx_thread_spin_unlock+0xec>
   2153d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21541:	48 8b 40 10          	mov    0x10(%rax),%rax
   21545:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   21549:	74 17                	je     21562 <sgx_thread_spin_unlock+0xa8>
   2154b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2154f:	48 83 c0 08          	add    $0x8,%rax
   21553:	48 89 c7             	mov    %rax,%rdi
   21556:	e8 6c 5c ff ff       	call   171c7 <sgx_spin_unlock>
   2155b:	b8 01 00 00 00       	mov    $0x1,%eax
   21560:	eb 44                	jmp    215a6 <sgx_thread_spin_unlock+0xec>
   21562:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21566:	48 8b 00             	mov    (%rax),%rax
   21569:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2156d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21571:	48 89 10             	mov    %rdx,(%rax)
   21574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21578:	48 8b 00             	mov    (%rax),%rax
   2157b:	48 85 c0             	test   %rax,%rax
   2157e:	0f 94 c0             	sete   %al
   21581:	84 c0                	test   %al,%al
   21583:	74 0c                	je     21591 <sgx_thread_spin_unlock+0xd7>
   21585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21589:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   21590:	00 
   21591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21595:	48 83 c0 08          	add    $0x8,%rax
   21599:	48 89 c7             	mov    %rax,%rdi
   2159c:	e8 26 5c ff ff       	call   171c7 <sgx_spin_unlock>
   215a1:	b8 00 00 00 00       	mov    $0x0,%eax
   215a6:	c9                   	leave  
   215a7:	c3                   	ret    

00000000000215a8 <memcpy_s>:
   215a8:	f3 0f 1e fa          	endbr64 
   215ac:	55                   	push   %rbp
   215ad:	48 89 e5             	mov    %rsp,%rbp
   215b0:	48 83 ec 30          	sub    $0x30,%rsp
   215b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   215b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   215bc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   215c0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   215c4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   215c9:	75 0a                	jne    215d5 <memcpy_s+0x2d>
   215cb:	b8 00 00 00 00       	mov    $0x0,%eax
   215d0:	e9 c1 00 00 00       	jmp    21696 <memcpy_s+0xee>
   215d5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   215da:	0f 95 c0             	setne  %al
   215dd:	0f b6 c0             	movzbl %al,%eax
   215e0:	89 45 f4             	mov    %eax,-0xc(%rbp)
   215e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   215e7:	75 15                	jne    215fe <memcpy_s+0x56>
   215e9:	e8 6b 03 00 00       	call   21959 <__errno>
   215ee:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   215f4:	b8 16 00 00 00       	mov    $0x16,%eax
   215f9:	e9 98 00 00 00       	jmp    21696 <memcpy_s+0xee>
   215fe:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   21603:	74 0a                	je     2160f <memcpy_s+0x67>
   21605:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21609:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   2160d:	73 6b                	jae    2167a <memcpy_s+0xd2>
   2160f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21617:	be 00 00 00 00       	mov    $0x0,%esi
   2161c:	48 89 c7             	mov    %rax,%rdi
   2161f:	e8 ef fa ff ff       	call   21113 <memset>
   21624:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   21629:	0f 95 c0             	setne  %al
   2162c:	0f b6 c0             	movzbl %al,%eax
   2162f:	89 45 f8             	mov    %eax,-0x8(%rbp)
   21632:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   21636:	75 12                	jne    2164a <memcpy_s+0xa2>
   21638:	e8 1c 03 00 00       	call   21959 <__errno>
   2163d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   21643:	b8 16 00 00 00       	mov    $0x16,%eax
   21648:	eb 4c                	jmp    21696 <memcpy_s+0xee>
   2164a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2164e:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   21652:	0f 93 c0             	setae  %al
   21655:	0f b6 c0             	movzbl %al,%eax
   21658:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2165b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2165f:	75 12                	jne    21673 <memcpy_s+0xcb>
   21661:	e8 f3 02 00 00       	call   21959 <__errno>
   21666:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   2166c:	b8 22 00 00 00       	mov    $0x22,%eax
   21671:	eb 23                	jmp    21696 <memcpy_s+0xee>
   21673:	b8 16 00 00 00       	mov    $0x16,%eax
   21678:	eb 1c                	jmp    21696 <memcpy_s+0xee>
   2167a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2167e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   21682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21686:	48 89 ce             	mov    %rcx,%rsi
   21689:	48 89 c7             	mov    %rax,%rdi
   2168c:	e8 ee f7 ff ff       	call   20e7f <memcpy>
   21691:	b8 00 00 00 00       	mov    $0x0,%eax
   21696:	c9                   	leave  
   21697:	c3                   	ret    

0000000000021698 <memcpy_verw_s>:
   21698:	f3 0f 1e fa          	endbr64 
   2169c:	55                   	push   %rbp
   2169d:	48 89 e5             	mov    %rsp,%rbp
   216a0:	48 83 ec 30          	sub    $0x30,%rsp
   216a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   216a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   216ac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   216b0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   216b4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   216b9:	75 0a                	jne    216c5 <memcpy_verw_s+0x2d>
   216bb:	b8 00 00 00 00       	mov    $0x0,%eax
   216c0:	e9 c1 00 00 00       	jmp    21786 <memcpy_verw_s+0xee>
   216c5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   216ca:	0f 95 c0             	setne  %al
   216cd:	0f b6 c0             	movzbl %al,%eax
   216d0:	89 45 f4             	mov    %eax,-0xc(%rbp)
   216d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   216d7:	75 15                	jne    216ee <memcpy_verw_s+0x56>
   216d9:	e8 7b 02 00 00       	call   21959 <__errno>
   216de:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   216e4:	b8 16 00 00 00       	mov    $0x16,%eax
   216e9:	e9 98 00 00 00       	jmp    21786 <memcpy_verw_s+0xee>
   216ee:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   216f3:	74 0a                	je     216ff <memcpy_verw_s+0x67>
   216f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   216f9:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   216fd:	73 6b                	jae    2176a <memcpy_verw_s+0xd2>
   216ff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21703:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21707:	be 00 00 00 00       	mov    $0x0,%esi
   2170c:	48 89 c7             	mov    %rax,%rdi
   2170f:	e8 fd f8 ff ff       	call   21011 <memset_verw>
   21714:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   21719:	0f 95 c0             	setne  %al
   2171c:	0f b6 c0             	movzbl %al,%eax
   2171f:	89 45 f8             	mov    %eax,-0x8(%rbp)
   21722:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   21726:	75 12                	jne    2173a <memcpy_verw_s+0xa2>
   21728:	e8 2c 02 00 00       	call   21959 <__errno>
   2172d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   21733:	b8 16 00 00 00       	mov    $0x16,%eax
   21738:	eb 4c                	jmp    21786 <memcpy_verw_s+0xee>
   2173a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2173e:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   21742:	0f 93 c0             	setae  %al
   21745:	0f b6 c0             	movzbl %al,%eax
   21748:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2174b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2174f:	75 12                	jne    21763 <memcpy_verw_s+0xcb>
   21751:	e8 03 02 00 00       	call   21959 <__errno>
   21756:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   2175c:	b8 22 00 00 00       	mov    $0x22,%eax
   21761:	eb 23                	jmp    21786 <memcpy_verw_s+0xee>
   21763:	b8 16 00 00 00       	mov    $0x16,%eax
   21768:	eb 1c                	jmp    21786 <memcpy_verw_s+0xee>
   2176a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2176e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   21772:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21776:	48 89 ce             	mov    %rcx,%rsi
   21779:	48 89 c7             	mov    %rax,%rdi
   2177c:	e8 a9 f4 ff ff       	call   20c2a <memcpy_verw>
   21781:	b8 00 00 00 00       	mov    $0x0,%eax
   21786:	c9                   	leave  
   21787:	c3                   	ret    

0000000000021788 <_setjmp>:
   21788:	f3 0f 1e fa          	endbr64 
   2178c:	50                   	push   %rax
   2178d:	53                   	push   %rbx
   2178e:	51                   	push   %rcx
   2178f:	52                   	push   %rdx
   21790:	56                   	push   %rsi
   21791:	57                   	push   %rdi
   21792:	41 50                	push   %r8
   21794:	41 51                	push   %r9
   21796:	41 52                	push   %r10
   21798:	41 53                	push   %r11
   2179a:	41 54                	push   %r12
   2179c:	41 55                	push   %r13
   2179e:	41 56                	push   %r14
   217a0:	41 57                	push   %r15
   217a2:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   217a9:	e8 f9 b9 fe ff       	call   d1a7 <sgx_is_within_enclave>
   217ae:	83 f8 00             	cmp    $0x0,%eax
   217b1:	74 60                	je     21813 <.crash>
   217b3:	41 5f                	pop    %r15
   217b5:	41 5e                	pop    %r14
   217b7:	41 5d                	pop    %r13
   217b9:	41 5c                	pop    %r12
   217bb:	41 5b                	pop    %r11
   217bd:	41 5a                	pop    %r10
   217bf:	41 59                	pop    %r9
   217c1:	41 58                	pop    %r8
   217c3:	5f                   	pop    %rdi
   217c4:	5e                   	pop    %rsi
   217c5:	5a                   	pop    %rdx
   217c6:	59                   	pop    %rcx
   217c7:	5b                   	pop    %rbx
   217c8:	58                   	pop    %rax
   217c9:	4c 8b 1c 24          	mov    (%rsp),%r11
   217cd:	48 89 1f             	mov    %rbx,(%rdi)
   217d0:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   217d4:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   217d8:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   217dc:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   217e0:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   217e4:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   217e8:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   217ec:	e8 a3 d9 00 00       	call   2f194 <get_stack_guard>
   217f1:	48 31 07             	xor    %rax,(%rdi)
   217f4:	48 31 47 08          	xor    %rax,0x8(%rdi)
   217f8:	48 31 47 10          	xor    %rax,0x10(%rdi)
   217fc:	48 31 47 18          	xor    %rax,0x18(%rdi)
   21800:	48 31 47 20          	xor    %rax,0x20(%rdi)
   21804:	48 31 47 28          	xor    %rax,0x28(%rdi)
   21808:	48 31 47 30          	xor    %rax,0x30(%rdi)
   2180c:	48 31 47 38          	xor    %rax,0x38(%rdi)
   21810:	31 c0                	xor    %eax,%eax
   21812:	c3                   	ret    

0000000000021813 <.crash>:
   21813:	0f 0b                	ud2    

0000000000021815 <_longjmp>:
   21815:	f3 0f 1e fa          	endbr64 
   21819:	50                   	push   %rax
   2181a:	53                   	push   %rbx
   2181b:	51                   	push   %rcx
   2181c:	52                   	push   %rdx
   2181d:	56                   	push   %rsi
   2181e:	57                   	push   %rdi
   2181f:	41 50                	push   %r8
   21821:	41 51                	push   %r9
   21823:	41 52                	push   %r10
   21825:	41 53                	push   %r11
   21827:	41 54                	push   %r12
   21829:	41 55                	push   %r13
   2182b:	41 56                	push   %r14
   2182d:	41 57                	push   %r15
   2182f:	57                   	push   %rdi
   21830:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   21837:	e8 6b b9 fe ff       	call   d1a7 <sgx_is_within_enclave>
   2183c:	83 f8 00             	cmp    $0x0,%eax
   2183f:	74 d2                	je     21813 <.crash>
   21841:	5f                   	pop    %rdi
   21842:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   21846:	e8 49 d9 00 00       	call   2f194 <get_stack_guard>
   2184b:	48 31 c2             	xor    %rax,%rdx
   2184e:	52                   	push   %rdx
   2184f:	5f                   	pop    %rdi
   21850:	e8 8a dc fe ff       	call   f4df <is_valid_sp>
   21855:	83 f8 00             	cmp    $0x0,%eax
   21858:	74 b9                	je     21813 <.crash>
   2185a:	41 5f                	pop    %r15
   2185c:	41 5e                	pop    %r14
   2185e:	41 5d                	pop    %r13
   21860:	41 5c                	pop    %r12
   21862:	41 5b                	pop    %r11
   21864:	41 5a                	pop    %r10
   21866:	41 59                	pop    %r9
   21868:	41 58                	pop    %r8
   2186a:	5f                   	pop    %rdi
   2186b:	5e                   	pop    %rsi
   2186c:	5a                   	pop    %rdx
   2186d:	59                   	pop    %rcx
   2186e:	5b                   	pop    %rbx
   2186f:	58                   	pop    %rax
   21870:	89 f0                	mov    %esi,%eax
   21872:	48 8b 1f             	mov    (%rdi),%rbx
   21875:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   21879:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   2187d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   21881:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   21885:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   21889:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   2188d:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   21891:	50                   	push   %rax
   21892:	e8 fd d8 00 00       	call   2f194 <get_stack_guard>
   21897:	48 31 c3             	xor    %rax,%rbx
   2189a:	48 31 c6             	xor    %rax,%rsi
   2189d:	49 31 c4             	xor    %rax,%r12
   218a0:	49 31 c5             	xor    %rax,%r13
   218a3:	49 31 c6             	xor    %rax,%r14
   218a6:	49 31 c7             	xor    %rax,%r15
   218a9:	48 31 c2             	xor    %rax,%rdx
   218ac:	48 31 c1             	xor    %rax,%rcx
   218af:	58                   	pop    %rax
   218b0:	48 89 f5             	mov    %rsi,%rbp
   218b3:	48 89 0a             	mov    %rcx,(%rdx)
   218b6:	48 89 d4             	mov    %rdx,%rsp
   218b9:	85 c0                	test   %eax,%eax
   218bb:	75 02                	jne    218bf <_longjmp+0xaa>
   218bd:	ff c0                	inc    %eax
   218bf:	c3                   	ret    

00000000000218c0 <rsrv_mem_init>:
   218c0:	f3 0f 1e fa          	endbr64 
   218c4:	55                   	push   %rbp
   218c5:	48 89 e5             	mov    %rsp,%rbp
   218c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   218cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   218d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   218d4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   218d9:	74 0e                	je     218e9 <rsrv_mem_init+0x29>
   218db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218df:	25 ff 0f 00 00       	and    $0xfff,%eax
   218e4:	48 85 c0             	test   %rax,%rax
   218e7:	74 07                	je     218f0 <rsrv_mem_init+0x30>
   218e9:	b8 01 00 00 00       	mov    $0x1,%eax
   218ee:	eb 67                	jmp    21957 <rsrv_mem_init+0x97>
   218f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218f4:	25 ff 0f 00 00       	and    $0xfff,%eax
   218f9:	48 85 c0             	test   %rax,%rax
   218fc:	74 07                	je     21905 <rsrv_mem_init+0x45>
   218fe:	b8 01 00 00 00       	mov    $0x1,%eax
   21903:	eb 52                	jmp    21957 <rsrv_mem_init+0x97>
   21905:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21909:	25 ff 0f 00 00       	and    $0xfff,%eax
   2190e:	48 85 c0             	test   %rax,%rax
   21911:	74 07                	je     2191a <rsrv_mem_init+0x5a>
   21913:	b8 01 00 00 00       	mov    $0x1,%eax
   21918:	eb 3d                	jmp    21957 <rsrv_mem_init+0x97>
   2191a:	48 8b 05 17 65 01 00 	mov    0x16517(%rip),%rax        # 37e38 <rsrv_mem_base>
   21921:	48 f7 d0             	not    %rax
   21924:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   21928:	76 07                	jbe    21931 <rsrv_mem_init+0x71>
   2192a:	b8 01 00 00 00       	mov    $0x1,%eax
   2192f:	eb 26                	jmp    21957 <rsrv_mem_init+0x97>
   21931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21935:	48 89 05 fc 64 01 00 	mov    %rax,0x164fc(%rip)        # 37e38 <rsrv_mem_base>
   2193c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21940:	48 89 05 f9 64 01 00 	mov    %rax,0x164f9(%rip)        # 37e40 <rsrv_mem_size>
   21947:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2194b:	48 89 05 f6 64 01 00 	mov    %rax,0x164f6(%rip)        # 37e48 <rsrv_mem_min_size>
   21952:	b8 00 00 00 00       	mov    $0x0,%eax
   21957:	5d                   	pop    %rbp
   21958:	c3                   	ret    

0000000000021959 <__errno>:
   21959:	f3 0f 1e fa          	endbr64 
   2195d:	55                   	push   %rbp
   2195e:	48 89 e5             	mov    %rsp,%rbp
   21961:	e8 35 da fe ff       	call   f39b <get_errno_addr>
   21966:	5d                   	pop    %rbp
   21967:	c3                   	ret    

0000000000021968 <__sprint>:
   21968:	f3 0f 1e fa          	endbr64 
   2196c:	55                   	push   %rbp
   2196d:	48 89 e5             	mov    %rsp,%rbp
   21970:	48 83 ec 20          	sub    $0x20,%rsp
   21974:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21978:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2197c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21980:	8b 40 0c             	mov    0xc(%rax),%eax
   21983:	85 c0                	test   %eax,%eax
   21985:	75 12                	jne    21999 <__sprint+0x31>
   21987:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2198b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   21992:	b8 00 00 00 00       	mov    $0x0,%eax
   21997:	eb 2f                	jmp    219c8 <__sprint+0x60>
   21999:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2199d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   219a1:	48 89 d6             	mov    %rdx,%rsi
   219a4:	48 89 c7             	mov    %rax,%rdi
   219a7:	e8 fa a3 00 00       	call   2bda6 <__sfvwrite>
   219ac:	89 45 fc             	mov    %eax,-0x4(%rbp)
   219af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   219b3:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   219ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   219be:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   219c5:	8b 45 fc             	mov    -0x4(%rbp),%eax
   219c8:	c9                   	leave  
   219c9:	c3                   	ret    

00000000000219ca <__wcsconv>:
   219ca:	f3 0f 1e fa          	endbr64 
   219ce:	55                   	push   %rbp
   219cf:	48 89 e5             	mov    %rsp,%rbp
   219d2:	48 83 ec 50          	sub    $0x50,%rsp
   219d6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   219da:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   219dd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   219e4:	00 00 
   219e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   219ea:	31 c0                	xor    %eax,%eax
   219ec:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   219f0:	79 5f                	jns    21a51 <__wcsconv+0x87>
   219f2:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   219f6:	ba 08 00 00 00       	mov    $0x8,%edx
   219fb:	be 00 00 00 00       	mov    $0x0,%esi
   21a00:	48 89 c7             	mov    %rax,%rdi
   21a03:	e8 0b f7 ff ff       	call   21113 <memset>
   21a08:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21a0c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   21a10:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   21a14:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   21a18:	48 89 d1             	mov    %rdx,%rcx
   21a1b:	ba 00 00 00 00       	mov    $0x0,%edx
   21a20:	48 89 c6             	mov    %rax,%rsi
   21a23:	bf 00 00 00 00       	mov    $0x0,%edi
   21a28:	e8 cd a1 00 00       	call   2bbfa <wcsrtombs>
   21a2d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   21a31:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   21a36:	0f 85 bc 00 00 00    	jne    21af8 <__wcsconv+0x12e>
   21a3c:	e8 18 ff ff ff       	call   21959 <__errno>
   21a41:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   21a47:	b8 00 00 00 00       	mov    $0x0,%eax
   21a4c:	e9 3a 01 00 00       	jmp    21b8b <__wcsconv+0x1c1>
   21a51:	83 7d b4 7f          	cmpl   $0x7f,-0x4c(%rbp)
   21a55:	7f 0e                	jg     21a65 <__wcsconv+0x9b>
   21a57:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   21a5a:	48 98                	cltq   
   21a5c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   21a60:	e9 93 00 00 00       	jmp    21af8 <__wcsconv+0x12e>
   21a65:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   21a6c:	00 
   21a6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21a71:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   21a75:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   21a79:	ba 08 00 00 00       	mov    $0x8,%edx
   21a7e:	be 00 00 00 00       	mov    $0x0,%esi
   21a83:	48 89 c7             	mov    %rax,%rdi
   21a86:	e8 88 f6 ff ff       	call   21113 <memset>
   21a8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21a8f:	48 8d 50 04          	lea    0x4(%rax),%rdx
   21a93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   21a97:	8b 08                	mov    (%rax),%ecx
   21a99:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   21a9d:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
   21aa1:	89 ce                	mov    %ecx,%esi
   21aa3:	48 89 c7             	mov    %rax,%rdi
   21aa6:	e8 ed a0 00 00       	call   2bb98 <wcrtomb>
   21aab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   21aaf:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   21ab4:	74 26                	je     21adc <__wcsconv+0x112>
   21ab6:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   21abb:	74 1f                	je     21adc <__wcsconv+0x112>
   21abd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   21ac1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21ac5:	48 01 c2             	add    %rax,%rdx
   21ac8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   21acb:	48 98                	cltq   
   21acd:	48 39 c2             	cmp    %rax,%rdx
   21ad0:	77 0a                	ja     21adc <__wcsconv+0x112>
   21ad2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21ad6:	48 01 45 d0          	add    %rax,-0x30(%rbp)
   21ada:	eb af                	jmp    21a8b <__wcsconv+0xc1>
   21adc:	48 83 7d d8 ff       	cmpq   $0xffffffffffffffff,-0x28(%rbp)
   21ae1:	75 15                	jne    21af8 <__wcsconv+0x12e>
   21ae3:	e8 71 fe ff ff       	call   21959 <__errno>
   21ae8:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   21aee:	b8 00 00 00 00       	mov    $0x0,%eax
   21af3:	e9 93 00 00 00       	jmp    21b8b <__wcsconv+0x1c1>
   21af8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21afc:	48 83 c0 01          	add    $0x1,%rax
   21b00:	48 89 c7             	mov    %rax,%rdi
   21b03:	e8 af b9 ff ff       	call   1d4b7 <dlmalloc>
   21b08:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   21b0c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   21b11:	75 07                	jne    21b1a <__wcsconv+0x150>
   21b13:	b8 00 00 00 00       	mov    $0x0,%eax
   21b18:	eb 71                	jmp    21b8b <__wcsconv+0x1c1>
   21b1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21b1e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   21b22:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   21b26:	ba 08 00 00 00       	mov    $0x8,%edx
   21b2b:	be 00 00 00 00       	mov    $0x0,%esi
   21b30:	48 89 c7             	mov    %rax,%rdi
   21b33:	e8 db f5 ff ff       	call   21113 <memset>
   21b38:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
   21b3c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   21b40:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   21b44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21b48:	48 89 c7             	mov    %rax,%rdi
   21b4b:	e8 aa a0 00 00       	call   2bbfa <wcsrtombs>
   21b50:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   21b54:	48 83 7d d0 ff       	cmpq   $0xffffffffffffffff,-0x30(%rbp)
   21b59:	75 1e                	jne    21b79 <__wcsconv+0x1af>
   21b5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21b5f:	48 89 c7             	mov    %rax,%rdi
   21b62:	e8 4b c4 ff ff       	call   1dfb2 <dlfree>
   21b67:	e8 ed fd ff ff       	call   21959 <__errno>
   21b6c:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   21b72:	b8 00 00 00 00       	mov    $0x0,%eax
   21b77:	eb 12                	jmp    21b8b <__wcsconv+0x1c1>
   21b79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21b7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21b81:	48 01 d0             	add    %rdx,%rax
   21b84:	c6 00 00             	movb   $0x0,(%rax)
   21b87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21b8b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21b8f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   21b96:	00 00 
   21b98:	74 05                	je     21b9f <__wcsconv+0x1d5>
   21b9a:	e8 e8 f6 ff ff       	call   21287 <__stack_chk_fail>
   21b9f:	c9                   	leave  
   21ba0:	c3                   	ret    

0000000000021ba1 <__vfprintf>:
   21ba1:	f3 0f 1e fa          	endbr64 
   21ba5:	55                   	push   %rbp
   21ba6:	48 89 e5             	mov    %rsp,%rbp
   21ba9:	48 81 ec d0 02 00 00 	sub    $0x2d0,%rsp
   21bb0:	48 89 bd 48 fd ff ff 	mov    %rdi,-0x2b8(%rbp)
   21bb7:	48 89 b5 40 fd ff ff 	mov    %rsi,-0x2c0(%rbp)
   21bbe:	48 89 95 38 fd ff ff 	mov    %rdx,-0x2c8(%rbp)
   21bc5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21bcc:	00 00 
   21bce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21bd2:	31 c0                	xor    %eax,%eax
   21bd4:	48 8d 05 d3 fc 00 00 	lea    0xfcd3(%rip),%rax        # 318ae <__func__.2555+0x5>
   21bdb:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
   21be2:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
   21be9:	00 00 00 00 
   21bed:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   21bf4:	48 8b 40 30          	mov    0x30(%rax),%rax
   21bf8:	48 85 c0             	test   %rax,%rax
   21bfb:	74 11                	je     21c0e <__vfprintf+0x6d>
   21bfd:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   21c04:	48 8b 40 30          	mov    0x30(%rax),%rax
   21c08:	48 83 c0 10          	add    $0x10,%rax
   21c0c:	eb 05                	jmp    21c13 <__vfprintf+0x72>
   21c0e:	b8 00 00 00 00       	mov    $0x0,%eax
   21c13:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
   21c1a:	48 83 bd 00 fe ff ff 	cmpq   $0x0,-0x200(%rbp)
   21c21:	00 
   21c22:	74 1c                	je     21c40 <__vfprintf+0x9f>
   21c24:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   21c2b:	8b 40 20             	mov    0x20(%rax),%eax
   21c2e:	85 c0                	test   %eax,%eax
   21c30:	75 0e                	jne    21c40 <__vfprintf+0x9f>
   21c32:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
   21c39:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
   21c40:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   21c47:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   21c4b:	98                   	cwtl   
   21c4c:	83 e0 1a             	and    $0x1a,%eax
   21c4f:	83 f8 0a             	cmp    $0xa,%eax
   21c52:	75 25                	jne    21c79 <__vfprintf+0xd8>
   21c54:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   21c5b:	0f b7 40 12          	movzwl 0x12(%rax),%eax
   21c5f:	66 85 c0             	test   %ax,%ax
   21c62:	78 15                	js     21c79 <__vfprintf+0xd8>
   21c64:	e8 f0 fc ff ff       	call   21959 <__errno>
   21c69:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   21c6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   21c74:	e9 87 43 00 00       	jmp    26000 <__vfprintf+0x445f>
   21c79:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   21c80:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   21c87:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   21c8e:	00 00 00 00 
   21c92:	c7 85 9c fd ff ff 01 	movl   $0x1,-0x264(%rbp)
   21c99:	00 00 00 
   21c9c:	48 8d 8d 68 fe ff ff 	lea    -0x198(%rbp),%rcx
   21ca3:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
   21caa:	48 8b 06             	mov    (%rsi),%rax
   21cad:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   21cb1:	48 89 01             	mov    %rax,(%rcx)
   21cb4:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   21cb8:	48 8b 46 10          	mov    0x10(%rsi),%rax
   21cbc:	48 89 41 10          	mov    %rax,0x10(%rcx)
   21cc0:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   21cc7:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   21cce:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   21cd5:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
   21cdc:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%rbp)
   21ce3:	00 00 00 
   21ce6:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   21ced:	00 00 00 
   21cf0:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
   21cf7:	00 00 00 
   21cfa:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   21d01:	00 00 00 00 
   21d05:	48 8d 85 58 fe ff ff 	lea    -0x1a8(%rbp),%rax
   21d0c:	ba 08 00 00 00       	mov    $0x8,%edx
   21d11:	be 00 00 00 00       	mov    $0x0,%esi
   21d16:	48 89 c7             	mov    %rax,%rdi
   21d19:	e8 f5 f3 ff ff       	call   21113 <memset>
   21d1e:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   21d25:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   21d2c:	eb 24                	jmp    21d52 <__vfprintf+0x1b1>
   21d2e:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   21d34:	48 98                	cltq   
   21d36:	48 01 85 c0 fd ff ff 	add    %rax,-0x240(%rbp)
   21d3d:	8b 85 58 fd ff ff    	mov    -0x2a8(%rbp),%eax
   21d43:	83 f8 25             	cmp    $0x25,%eax
   21d46:	75 0a                	jne    21d52 <__vfprintf+0x1b1>
   21d48:	48 83 ad c0 fd ff ff 	subq   $0x1,-0x240(%rbp)
   21d4f:	01 
   21d50:	eb 34                	jmp    21d86 <__vfprintf+0x1e5>
   21d52:	48 8d 95 58 fe ff ff 	lea    -0x1a8(%rbp),%rdx
   21d59:	48 8b b5 c0 fd ff ff 	mov    -0x240(%rbp),%rsi
   21d60:	48 8d 85 58 fd ff ff 	lea    -0x2a8(%rbp),%rax
   21d67:	48 89 d1             	mov    %rdx,%rcx
   21d6a:	ba 01 00 00 00       	mov    $0x1,%edx
   21d6f:	48 89 c7             	mov    %rax,%rdi
   21d72:	e8 c1 9c 00 00       	call   2ba38 <mbrtowc>
   21d77:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   21d7d:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   21d84:	7f a8                	jg     21d2e <__vfprintf+0x18d>
   21d86:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   21d8d:	48 3b 85 c8 fd ff ff 	cmp    -0x238(%rbp),%rax
   21d94:	0f 84 d3 00 00 00    	je     21e6d <__vfprintf+0x2cc>
   21d9a:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   21da1:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   21da8:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   21daf:	48 83 bd 08 fe ff ff 	cmpq   $0x0,-0x1f8(%rbp)
   21db6:	00 
   21db7:	0f 88 98 41 00 00    	js     25f55 <__vfprintf+0x43b4>
   21dbd:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   21dc2:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   21dc8:	48 98                	cltq   
   21dca:	48 39 85 08 fe ff ff 	cmp    %rax,-0x1f8(%rbp)
   21dd1:	0f 8f 7e 41 00 00    	jg     25f55 <__vfprintf+0x43b4>
   21dd7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   21dde:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   21de5:	48 89 10             	mov    %rdx,(%rax)
   21de8:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
   21def:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   21df6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   21dfa:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   21e00:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
   21e07:	01 d0                	add    %edx,%eax
   21e09:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   21e0f:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   21e16:	10 
   21e17:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   21e1d:	83 c0 01             	add    $0x1,%eax
   21e20:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   21e26:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   21e2c:	83 f8 07             	cmp    $0x7,%eax
   21e2f:	7e 2f                	jle    21e60 <__vfprintf+0x2bf>
   21e31:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   21e38:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   21e3f:	48 89 d6             	mov    %rdx,%rsi
   21e42:	48 89 c7             	mov    %rax,%rdi
   21e45:	e8 1e fb ff ff       	call   21968 <__sprint>
   21e4a:	85 c0                	test   %eax,%eax
   21e4c:	0f 85 89 40 00 00    	jne    25edb <__vfprintf+0x433a>
   21e52:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   21e59:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   21e60:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
   21e67:	01 85 74 fd ff ff    	add    %eax,-0x28c(%rbp)
   21e6d:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   21e74:	0f 8e 1c 40 00 00    	jle    25e96 <__vfprintf+0x42f5>
   21e7a:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   21e81:	01 
   21e82:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
   21e89:	00 00 00 
   21e8c:	c7 85 90 fd ff ff 00 	movl   $0x0,-0x270(%rbp)
   21e93:	00 00 00 
   21e96:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
   21e9d:	00 00 00 
   21ea0:	c7 85 7c fd ff ff ff 	movl   $0xffffffff,-0x284(%rbp)
   21ea7:	ff ff ff 
   21eaa:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   21eb1:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   21eb5:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   21ebc:	48 8d 50 01          	lea    0x1(%rax),%rdx
   21ec0:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   21ec7:	0f b6 00             	movzbl (%rax),%eax
   21eca:	0f be c0             	movsbl %al,%eax
   21ecd:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   21ed3:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   21ed9:	83 e8 20             	sub    $0x20,%eax
   21edc:	83 f8 5a             	cmp    $0x5a,%eax
   21edf:	0f 87 aa 2c 00 00    	ja     24b8f <__vfprintf+0x2fee>
   21ee5:	89 c0                	mov    %eax,%eax
   21ee7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21eee:	00 
   21eef:	48 8d 05 ee f9 00 00 	lea    0xf9ee(%rip),%rax        # 318e4 <__func__.2555+0x3b>
   21ef6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   21ef9:	48 98                	cltq   
   21efb:	48 8d 15 e2 f9 00 00 	lea    0xf9e2(%rip),%rdx        # 318e4 <__func__.2555+0x3b>
   21f02:	48 01 d0             	add    %rdx,%rax
   21f05:	3e ff e0             	notrack jmp *%rax
   21f08:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   21f0f:	84 c0                	test   %al,%al
   21f11:	75 a2                	jne    21eb5 <__vfprintf+0x314>
   21f13:	c6 85 56 fd ff ff 20 	movb   $0x20,-0x2aa(%rbp)
   21f1a:	eb 99                	jmp    21eb5 <__vfprintf+0x314>
   21f1c:	83 8d 70 fd ff ff 01 	orl    $0x1,-0x290(%rbp)
   21f23:	eb 90                	jmp    21eb5 <__vfprintf+0x314>
   21f25:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   21f2c:	00 00 00 
   21f2f:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   21f36:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   21f3d:	eb 72                	jmp    21fb1 <__vfprintf+0x410>
   21f3f:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   21f46:	cc cc 0c 
   21f49:	0f 8f 09 40 00 00    	jg     25f58 <__vfprintf+0x43b7>
   21f4f:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   21f55:	89 d0                	mov    %edx,%eax
   21f57:	c1 e0 02             	shl    $0x2,%eax
   21f5a:	01 d0                	add    %edx,%eax
   21f5c:	01 c0                	add    %eax,%eax
   21f5e:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   21f64:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   21f6b:	0f b6 00             	movzbl (%rax),%eax
   21f6e:	0f be c0             	movsbl %al,%eax
   21f71:	ba 30 00 00 00       	mov    $0x30,%edx
   21f76:	29 c2                	sub    %eax,%edx
   21f78:	89 d0                	mov    %edx,%eax
   21f7a:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   21f7f:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   21f85:	0f 8f d0 3f 00 00    	jg     25f5b <__vfprintf+0x43ba>
   21f8b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   21f92:	0f b6 00             	movzbl (%rax),%eax
   21f95:	0f be d0             	movsbl %al,%edx
   21f98:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   21f9e:	01 d0                	add    %edx,%eax
   21fa0:	83 e8 30             	sub    $0x30,%eax
   21fa3:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   21fa9:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   21fb0:	01 
   21fb1:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   21fb8:	0f b6 00             	movzbl (%rax),%eax
   21fbb:	0f be c0             	movsbl %al,%eax
   21fbe:	83 e8 30             	sub    $0x30,%eax
   21fc1:	83 f8 09             	cmp    $0x9,%eax
   21fc4:	0f 86 75 ff ff ff    	jbe    21f3f <__vfprintf+0x39e>
   21fca:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   21fd1:	0f b6 00             	movzbl (%rax),%eax
   21fd4:	3c 24                	cmp    $0x24,%al
   21fd6:	0f 85 13 01 00 00    	jne    220ef <__vfprintf+0x54e>
   21fdc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   21fe2:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%rbp)
   21fe8:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   21fef:	48 85 c0             	test   %rax,%rax
   21ff2:	75 32                	jne    22026 <__vfprintf+0x485>
   21ff4:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   21ffb:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   22002:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   22009:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   22010:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   22017:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   2201e:	48 89 c7             	mov    %rax,%rdi
   22021:	e8 f0 3f 00 00       	call   26016 <__find_arguments>
   22026:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   2202c:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   22032:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22039:	48 85 c0             	test   %rax,%rax
   2203c:	74 23                	je     22061 <__vfprintf+0x4c0>
   2203e:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22045:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2204b:	8d 50 01             	lea    0x1(%rax),%edx
   2204e:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22054:	48 98                	cltq   
   22056:	48 c1 e0 04          	shl    $0x4,%rax
   2205a:	48 01 c8             	add    %rcx,%rax
   2205d:	8b 00                	mov    (%rax),%eax
   2205f:	eb 61                	jmp    220c2 <__vfprintf+0x521>
   22061:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22068:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2206f:	8b 00                	mov    (%rax),%eax
   22071:	83 f8 2f             	cmp    $0x2f,%eax
   22074:	77 30                	ja     220a6 <__vfprintf+0x505>
   22076:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2207d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22081:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22088:	8b 00                	mov    (%rax),%eax
   2208a:	89 c0                	mov    %eax,%eax
   2208c:	48 01 d0             	add    %rdx,%rax
   2208f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22096:	8b 12                	mov    (%rdx),%edx
   22098:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2209b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   220a2:	89 0a                	mov    %ecx,(%rdx)
   220a4:	eb 1a                	jmp    220c0 <__vfprintf+0x51f>
   220a6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   220ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   220b1:	48 8d 48 08          	lea    0x8(%rax),%rcx
   220b5:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   220bc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   220c0:	8b 00                	mov    (%rax),%eax
   220c2:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   220c8:	8b 85 a4 fd ff ff    	mov    -0x25c(%rbp),%eax
   220ce:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   220d4:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   220db:	01 
   220dc:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   220e3:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   220ea:	e9 96 00 00 00       	jmp    22185 <__vfprintf+0x5e4>
   220ef:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   220f6:	48 85 c0             	test   %rax,%rax
   220f9:	74 23                	je     2211e <__vfprintf+0x57d>
   220fb:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22102:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22108:	8d 50 01             	lea    0x1(%rax),%edx
   2210b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22111:	48 98                	cltq   
   22113:	48 c1 e0 04          	shl    $0x4,%rax
   22117:	48 01 c8             	add    %rcx,%rax
   2211a:	8b 00                	mov    (%rax),%eax
   2211c:	eb 61                	jmp    2217f <__vfprintf+0x5de>
   2211e:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22125:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2212c:	8b 00                	mov    (%rax),%eax
   2212e:	83 f8 2f             	cmp    $0x2f,%eax
   22131:	77 30                	ja     22163 <__vfprintf+0x5c2>
   22133:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2213a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2213e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22145:	8b 00                	mov    (%rax),%eax
   22147:	89 c0                	mov    %eax,%eax
   22149:	48 01 d0             	add    %rdx,%rax
   2214c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22153:	8b 12                	mov    (%rdx),%edx
   22155:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22158:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2215f:	89 0a                	mov    %ecx,(%rdx)
   22161:	eb 1a                	jmp    2217d <__vfprintf+0x5dc>
   22163:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2216a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2216e:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22172:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22179:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2217d:	8b 00                	mov    (%rax),%eax
   2217f:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   22185:	83 bd 78 fd ff ff 00 	cmpl   $0x0,-0x288(%rbp)
   2218c:	78 05                	js     22193 <__vfprintf+0x5f2>
   2218e:	e9 22 fd ff ff       	jmp    21eb5 <__vfprintf+0x314>
   22193:	81 bd 78 fd ff ff 00 	cmpl   $0x80000000,-0x288(%rbp)
   2219a:	00 00 80 
   2219d:	0f 84 bb 3d 00 00    	je     25f5e <__vfprintf+0x43bd>
   221a3:	f7 9d 78 fd ff ff    	negl   -0x288(%rbp)
   221a9:	83 8d 70 fd ff ff 04 	orl    $0x4,-0x290(%rbp)
   221b0:	e9 00 fd ff ff       	jmp    21eb5 <__vfprintf+0x314>
   221b5:	c6 85 56 fd ff ff 2b 	movb   $0x2b,-0x2aa(%rbp)
   221bc:	e9 f4 fc ff ff       	jmp    21eb5 <__vfprintf+0x314>
   221c1:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   221c8:	48 8d 50 01          	lea    0x1(%rax),%rdx
   221cc:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   221d3:	0f b6 00             	movzbl (%rax),%eax
   221d6:	0f be c0             	movsbl %al,%eax
   221d9:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   221df:	83 bd 64 fd ff ff 2a 	cmpl   $0x2a,-0x29c(%rbp)
   221e6:	0f 85 7e 02 00 00    	jne    2246a <__vfprintf+0x8c9>
   221ec:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
   221f3:	00 00 00 
   221f6:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   221fd:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   22204:	eb 72                	jmp    22278 <__vfprintf+0x6d7>
   22206:	81 bd 6c fd ff ff cc 	cmpl   $0xccccccc,-0x294(%rbp)
   2220d:	cc cc 0c 
   22210:	0f 8f 4b 3d 00 00    	jg     25f61 <__vfprintf+0x43c0>
   22216:	8b 95 6c fd ff ff    	mov    -0x294(%rbp),%edx
   2221c:	89 d0                	mov    %edx,%eax
   2221e:	c1 e0 02             	shl    $0x2,%eax
   22221:	01 d0                	add    %edx,%eax
   22223:	01 c0                	add    %eax,%eax
   22225:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   2222b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   22232:	0f b6 00             	movzbl (%rax),%eax
   22235:	0f be c0             	movsbl %al,%eax
   22238:	ba 30 00 00 00       	mov    $0x30,%edx
   2223d:	29 c2                	sub    %eax,%edx
   2223f:	89 d0                	mov    %edx,%eax
   22241:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   22246:	39 85 6c fd ff ff    	cmp    %eax,-0x294(%rbp)
   2224c:	0f 8f 12 3d 00 00    	jg     25f64 <__vfprintf+0x43c3>
   22252:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   22259:	0f b6 00             	movzbl (%rax),%eax
   2225c:	0f be d0             	movsbl %al,%edx
   2225f:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   22265:	01 d0                	add    %edx,%eax
   22267:	83 e8 30             	sub    $0x30,%eax
   2226a:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   22270:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   22277:	01 
   22278:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2227f:	0f b6 00             	movzbl (%rax),%eax
   22282:	0f be c0             	movsbl %al,%eax
   22285:	83 e8 30             	sub    $0x30,%eax
   22288:	83 f8 09             	cmp    $0x9,%eax
   2228b:	0f 86 75 ff ff ff    	jbe    22206 <__vfprintf+0x665>
   22291:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   22298:	0f b6 00             	movzbl (%rax),%eax
   2229b:	3c 24                	cmp    $0x24,%al
   2229d:	0f 85 13 01 00 00    	jne    223b6 <__vfprintf+0x815>
   222a3:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   222a9:	89 85 a0 fd ff ff    	mov    %eax,-0x260(%rbp)
   222af:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   222b6:	48 85 c0             	test   %rax,%rax
   222b9:	75 32                	jne    222ed <__vfprintf+0x74c>
   222bb:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   222c2:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   222c9:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   222d0:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   222d7:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   222de:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   222e5:	48 89 c7             	mov    %rax,%rdi
   222e8:	e8 29 3d 00 00       	call   26016 <__find_arguments>
   222ed:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   222f3:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   222f9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22300:	48 85 c0             	test   %rax,%rax
   22303:	74 23                	je     22328 <__vfprintf+0x787>
   22305:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2230c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22312:	8d 50 01             	lea    0x1(%rax),%edx
   22315:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2231b:	48 98                	cltq   
   2231d:	48 c1 e0 04          	shl    $0x4,%rax
   22321:	48 01 c8             	add    %rcx,%rax
   22324:	8b 00                	mov    (%rax),%eax
   22326:	eb 61                	jmp    22389 <__vfprintf+0x7e8>
   22328:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2232f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22336:	8b 00                	mov    (%rax),%eax
   22338:	83 f8 2f             	cmp    $0x2f,%eax
   2233b:	77 30                	ja     2236d <__vfprintf+0x7cc>
   2233d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22344:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22348:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2234f:	8b 00                	mov    (%rax),%eax
   22351:	89 c0                	mov    %eax,%eax
   22353:	48 01 d0             	add    %rdx,%rax
   22356:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2235d:	8b 12                	mov    (%rdx),%edx
   2235f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22362:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22369:	89 0a                	mov    %ecx,(%rdx)
   2236b:	eb 1a                	jmp    22387 <__vfprintf+0x7e6>
   2236d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22374:	48 8b 40 08          	mov    0x8(%rax),%rax
   22378:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2237c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22383:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22387:	8b 00                	mov    (%rax),%eax
   22389:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2238f:	8b 85 a0 fd ff ff    	mov    -0x260(%rbp),%eax
   22395:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   2239b:	48 83 85 c8 fd ff ff 	addq   $0x1,-0x238(%rbp)
   223a2:	01 
   223a3:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   223aa:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   223b1:	e9 96 00 00 00       	jmp    2244c <__vfprintf+0x8ab>
   223b6:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   223bd:	48 85 c0             	test   %rax,%rax
   223c0:	74 23                	je     223e5 <__vfprintf+0x844>
   223c2:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   223c9:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   223cf:	8d 50 01             	lea    0x1(%rax),%edx
   223d2:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   223d8:	48 98                	cltq   
   223da:	48 c1 e0 04          	shl    $0x4,%rax
   223de:	48 01 c8             	add    %rcx,%rax
   223e1:	8b 00                	mov    (%rax),%eax
   223e3:	eb 61                	jmp    22446 <__vfprintf+0x8a5>
   223e5:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   223ec:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   223f3:	8b 00                	mov    (%rax),%eax
   223f5:	83 f8 2f             	cmp    $0x2f,%eax
   223f8:	77 30                	ja     2242a <__vfprintf+0x889>
   223fa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22401:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22405:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2240c:	8b 00                	mov    (%rax),%eax
   2240e:	89 c0                	mov    %eax,%eax
   22410:	48 01 d0             	add    %rdx,%rax
   22413:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2241a:	8b 12                	mov    (%rdx),%edx
   2241c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2241f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22426:	89 0a                	mov    %ecx,(%rdx)
   22428:	eb 1a                	jmp    22444 <__vfprintf+0x8a3>
   2242a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22431:	48 8b 40 08          	mov    0x8(%rax),%rax
   22435:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22439:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22440:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22444:	8b 00                	mov    (%rax),%eax
   22446:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2244c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   22451:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   22458:	0f 49 85 68 fd ff ff 	cmovns -0x298(%rbp),%eax
   2245f:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   22465:	e9 4b fa ff ff       	jmp    21eb5 <__vfprintf+0x314>
   2246a:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   22471:	00 00 00 
   22474:	eb 76                	jmp    224ec <__vfprintf+0x94b>
   22476:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   2247d:	cc cc 0c 
   22480:	0f 8f e1 3a 00 00    	jg     25f67 <__vfprintf+0x43c6>
   22486:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   2248c:	89 d0                	mov    %edx,%eax
   2248e:	c1 e0 02             	shl    $0x2,%eax
   22491:	01 d0                	add    %edx,%eax
   22493:	01 c0                	add    %eax,%eax
   22495:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   2249b:	b8 30 00 00 00       	mov    $0x30,%eax
   224a0:	2b 85 64 fd ff ff    	sub    -0x29c(%rbp),%eax
   224a6:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   224ab:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   224b1:	0f 8f b3 3a 00 00    	jg     25f6a <__vfprintf+0x43c9>
   224b7:	8b 95 64 fd ff ff    	mov    -0x29c(%rbp),%edx
   224bd:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   224c3:	01 d0                	add    %edx,%eax
   224c5:	83 e8 30             	sub    $0x30,%eax
   224c8:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   224ce:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   224d5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   224d9:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   224e0:	0f b6 00             	movzbl (%rax),%eax
   224e3:	0f be c0             	movsbl %al,%eax
   224e6:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   224ec:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   224f2:	83 e8 30             	sub    $0x30,%eax
   224f5:	83 f8 09             	cmp    $0x9,%eax
   224f8:	0f 86 78 ff ff ff    	jbe    22476 <__vfprintf+0x8d5>
   224fe:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   22505:	75 53                	jne    2255a <__vfprintf+0x9b9>
   22507:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2250d:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   22513:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2251a:	48 85 c0             	test   %rax,%rax
   2251d:	0f 85 92 f9 ff ff    	jne    21eb5 <__vfprintf+0x314>
   22523:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   2252a:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   22531:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   22538:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   2253f:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   22546:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   2254d:	48 89 c7             	mov    %rax,%rdi
   22550:	e8 c1 3a 00 00       	call   26016 <__find_arguments>
   22555:	e9 5b f9 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   2255a:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   22560:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   22566:	e9 68 f9 ff ff       	jmp    21ed3 <__vfprintf+0x332>
   2256b:	81 8d 70 fd ff ff 80 	orl    $0x80,-0x290(%rbp)
   22572:	00 00 00 
   22575:	e9 3b f9 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   2257a:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
   22581:	00 00 00 
   22584:	81 bd 68 fd ff ff cc 	cmpl   $0xccccccc,-0x298(%rbp)
   2258b:	cc cc 0c 
   2258e:	0f 8f d9 39 00 00    	jg     25f6d <__vfprintf+0x43cc>
   22594:	8b 95 68 fd ff ff    	mov    -0x298(%rbp),%edx
   2259a:	89 d0                	mov    %edx,%eax
   2259c:	c1 e0 02             	shl    $0x2,%eax
   2259f:	01 d0                	add    %edx,%eax
   225a1:	01 c0                	add    %eax,%eax
   225a3:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   225a9:	b8 30 00 00 00       	mov    $0x30,%eax
   225ae:	2b 85 64 fd ff ff    	sub    -0x29c(%rbp),%eax
   225b4:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   225b9:	39 85 68 fd ff ff    	cmp    %eax,-0x298(%rbp)
   225bf:	0f 8f ab 39 00 00    	jg     25f70 <__vfprintf+0x43cf>
   225c5:	8b 95 64 fd ff ff    	mov    -0x29c(%rbp),%edx
   225cb:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   225d1:	01 d0                	add    %edx,%eax
   225d3:	83 e8 30             	sub    $0x30,%eax
   225d6:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   225dc:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   225e3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   225e7:	48 89 95 c0 fd ff ff 	mov    %rdx,-0x240(%rbp)
   225ee:	0f b6 00             	movzbl (%rax),%eax
   225f1:	0f be c0             	movsbl %al,%eax
   225f4:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%rbp)
   225fa:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   22600:	83 e8 30             	sub    $0x30,%eax
   22603:	83 f8 09             	cmp    $0x9,%eax
   22606:	0f 86 78 ff ff ff    	jbe    22584 <__vfprintf+0x9e3>
   2260c:	83 bd 64 fd ff ff 24 	cmpl   $0x24,-0x29c(%rbp)
   22613:	75 53                	jne    22668 <__vfprintf+0xac7>
   22615:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2261b:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
   22621:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22628:	48 85 c0             	test   %rax,%rax
   2262b:	0f 85 84 f8 ff ff    	jne    21eb5 <__vfprintf+0x314>
   22631:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   22638:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
   2263f:	48 8d 8d b8 fd ff ff 	lea    -0x248(%rbp),%rcx
   22646:	48 8d 95 b0 fd ff ff 	lea    -0x250(%rbp),%rdx
   2264d:	48 8d b5 68 fe ff ff 	lea    -0x198(%rbp),%rsi
   22654:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
   2265b:	48 89 c7             	mov    %rax,%rdi
   2265e:	e8 b3 39 00 00       	call   26016 <__find_arguments>
   22663:	e9 4d f8 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   22668:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2266e:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   22674:	e9 5a f8 ff ff       	jmp    21ed3 <__vfprintf+0x332>
   22679:	83 8d 70 fd ff ff 08 	orl    $0x8,-0x290(%rbp)
   22680:	e9 30 f8 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   22685:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   2268c:	0f b6 00             	movzbl (%rax),%eax
   2268f:	3c 68                	cmp    $0x68,%al
   22691:	75 17                	jne    226aa <__vfprintf+0xb09>
   22693:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   2269a:	01 
   2269b:	81 8d 70 fd ff ff 00 	orl    $0x800,-0x290(%rbp)
   226a2:	08 00 00 
   226a5:	e9 0b f8 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226aa:	83 8d 70 fd ff ff 40 	orl    $0x40,-0x290(%rbp)
   226b1:	e9 ff f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226b6:	81 8d 70 fd ff ff 00 	orl    $0x1000,-0x290(%rbp)
   226bd:	10 00 00 
   226c0:	e9 f0 f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226c5:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   226cc:	0f b6 00             	movzbl (%rax),%eax
   226cf:	3c 6c                	cmp    $0x6c,%al
   226d1:	75 14                	jne    226e7 <__vfprintf+0xb46>
   226d3:	48 83 85 c0 fd ff ff 	addq   $0x1,-0x240(%rbp)
   226da:	01 
   226db:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   226e2:	e9 ce f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226e7:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   226ee:	e9 c2 f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226f3:	83 8d 70 fd ff ff 20 	orl    $0x20,-0x290(%rbp)
   226fa:	e9 b6 f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   226ff:	81 8d 70 fd ff ff 00 	orl    $0x200,-0x290(%rbp)
   22706:	02 00 00 
   22709:	e9 a7 f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   2270e:	81 8d 70 fd ff ff 00 	orl    $0x400,-0x290(%rbp)
   22715:	04 00 00 
   22718:	e9 98 f7 ff ff       	jmp    21eb5 <__vfprintf+0x314>
   2271d:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22723:	83 e0 10             	and    $0x10,%eax
   22726:	85 c0                	test   %eax,%eax
   22728:	0f 84 1b 01 00 00    	je     22849 <__vfprintf+0xca8>
   2272e:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   22735:	ba 08 00 00 00       	mov    $0x8,%edx
   2273a:	be 00 00 00 00       	mov    $0x0,%esi
   2273f:	48 89 c7             	mov    %rax,%rdi
   22742:	e8 cc e9 ff ff       	call   21113 <memset>
   22747:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2274e:	48 85 c0             	test   %rax,%rax
   22751:	74 25                	je     22778 <__vfprintf+0xbd7>
   22753:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2275a:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22760:	8d 50 01             	lea    0x1(%rax),%edx
   22763:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22769:	48 98                	cltq   
   2276b:	48 c1 e0 04          	shl    $0x4,%rax
   2276f:	48 01 c8             	add    %rcx,%rax
   22772:	8b 00                	mov    (%rax),%eax
   22774:	89 c1                	mov    %eax,%ecx
   22776:	eb 63                	jmp    227db <__vfprintf+0xc3a>
   22778:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2277f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22786:	8b 00                	mov    (%rax),%eax
   22788:	83 f8 2f             	cmp    $0x2f,%eax
   2278b:	77 30                	ja     227bd <__vfprintf+0xc1c>
   2278d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22794:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22798:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2279f:	8b 00                	mov    (%rax),%eax
   227a1:	89 c0                	mov    %eax,%eax
   227a3:	48 01 d0             	add    %rdx,%rax
   227a6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   227ad:	8b 12                	mov    (%rdx),%edx
   227af:	8d 4a 08             	lea    0x8(%rdx),%ecx
   227b2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   227b9:	89 0a                	mov    %ecx,(%rdx)
   227bb:	eb 1a                	jmp    227d7 <__vfprintf+0xc36>
   227bd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   227c4:	48 8b 40 08          	mov    0x8(%rax),%rax
   227c8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   227cc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   227d3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   227d7:	8b 00                	mov    (%rax),%eax
   227d9:	89 c1                	mov    %eax,%ecx
   227db:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
   227e2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   227e6:	89 ce                	mov    %ecx,%esi
   227e8:	48 89 c7             	mov    %rax,%rdi
   227eb:	e8 a8 93 00 00       	call   2bb98 <wcrtomb>
   227f0:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
   227f7:	48 83 bd 28 fe ff ff 	cmpq   $0xffffffffffffffff,-0x1d8(%rbp)
   227fe:	ff 
   227ff:	75 2b                	jne    2282c <__vfprintf+0xc8b>
   22801:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   22808:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2280c:	83 c8 40             	or     $0x40,%eax
   2280f:	89 c2                	mov    %eax,%edx
   22811:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   22818:	66 89 50 10          	mov    %dx,0x10(%rax)
   2281c:	e8 38 f1 ff ff       	call   21959 <__errno>
   22821:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   22827:	e9 0a 37 00 00       	jmp    25f36 <__vfprintf+0x4395>
   2282c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22830:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   22837:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   2283e:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   22844:	e9 b2 00 00 00       	jmp    228fb <__vfprintf+0xd5a>
   22849:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22850:	48 85 c0             	test   %rax,%rax
   22853:	74 25                	je     2287a <__vfprintf+0xcd9>
   22855:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2285c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22862:	8d 50 01             	lea    0x1(%rax),%edx
   22865:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2286b:	48 98                	cltq   
   2286d:	48 c1 e0 04          	shl    $0x4,%rax
   22871:	48 01 c8             	add    %rcx,%rax
   22874:	8b 00                	mov    (%rax),%eax
   22876:	89 c2                	mov    %eax,%edx
   22878:	eb 63                	jmp    228dd <__vfprintf+0xd3c>
   2287a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22881:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22888:	8b 00                	mov    (%rax),%eax
   2288a:	83 f8 2f             	cmp    $0x2f,%eax
   2288d:	77 30                	ja     228bf <__vfprintf+0xd1e>
   2288f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22896:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2289a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   228a1:	8b 00                	mov    (%rax),%eax
   228a3:	89 c0                	mov    %eax,%eax
   228a5:	48 01 d0             	add    %rdx,%rax
   228a8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   228af:	8b 12                	mov    (%rdx),%edx
   228b1:	8d 4a 08             	lea    0x8(%rdx),%ecx
   228b4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   228bb:	89 0a                	mov    %ecx,(%rdx)
   228bd:	eb 1a                	jmp    228d9 <__vfprintf+0xd38>
   228bf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   228c6:	48 8b 40 08          	mov    0x8(%rax),%rax
   228ca:	48 8d 48 08          	lea    0x8(%rax),%rcx
   228ce:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   228d5:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   228d9:	8b 00                	mov    (%rax),%eax
   228db:	89 c2                	mov    %eax,%edx
   228dd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   228e1:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   228e8:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   228ef:	88 10                	mov    %dl,(%rax)
   228f1:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   228f8:	00 00 00 
   228fb:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   22902:	e9 c5 22 00 00       	jmp    24bcc <__vfprintf+0x302b>
   22907:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   2290e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22914:	25 00 10 00 00       	and    $0x1000,%eax
   22919:	85 c0                	test   %eax,%eax
   2291b:	0f 84 9a 00 00 00    	je     229bb <__vfprintf+0xe1a>
   22921:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22928:	48 85 c0             	test   %rax,%rax
   2292b:	74 27                	je     22954 <__vfprintf+0xdb3>
   2292d:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22934:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2293a:	8d 50 01             	lea    0x1(%rax),%edx
   2293d:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22943:	48 98                	cltq   
   22945:	48 c1 e0 04          	shl    $0x4,%rax
   22949:	48 01 c8             	add    %rcx,%rax
   2294c:	48 8b 00             	mov    (%rax),%rax
   2294f:	e9 0f 05 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22954:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2295b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22962:	8b 00                	mov    (%rax),%eax
   22964:	83 f8 2f             	cmp    $0x2f,%eax
   22967:	77 30                	ja     22999 <__vfprintf+0xdf8>
   22969:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22970:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22974:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2297b:	8b 00                	mov    (%rax),%eax
   2297d:	89 c0                	mov    %eax,%eax
   2297f:	48 01 d0             	add    %rdx,%rax
   22982:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22989:	8b 12                	mov    (%rdx),%edx
   2298b:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2298e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22995:	89 0a                	mov    %ecx,(%rdx)
   22997:	eb 1a                	jmp    229b3 <__vfprintf+0xe12>
   22999:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   229a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   229a4:	48 8d 48 08          	lea    0x8(%rax),%rcx
   229a8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   229af:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   229b3:	48 8b 00             	mov    (%rax),%rax
   229b6:	e9 a8 04 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   229bb:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   229c1:	83 e0 20             	and    $0x20,%eax
   229c4:	85 c0                	test   %eax,%eax
   229c6:	0f 84 9a 00 00 00    	je     22a66 <__vfprintf+0xec5>
   229cc:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   229d3:	48 85 c0             	test   %rax,%rax
   229d6:	74 27                	je     229ff <__vfprintf+0xe5e>
   229d8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   229df:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   229e5:	8d 50 01             	lea    0x1(%rax),%edx
   229e8:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   229ee:	48 98                	cltq   
   229f0:	48 c1 e0 04          	shl    $0x4,%rax
   229f4:	48 01 c8             	add    %rcx,%rax
   229f7:	48 8b 00             	mov    (%rax),%rax
   229fa:	e9 64 04 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   229ff:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22a06:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22a0d:	8b 00                	mov    (%rax),%eax
   22a0f:	83 f8 2f             	cmp    $0x2f,%eax
   22a12:	77 30                	ja     22a44 <__vfprintf+0xea3>
   22a14:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22a1b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22a1f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22a26:	8b 00                	mov    (%rax),%eax
   22a28:	89 c0                	mov    %eax,%eax
   22a2a:	48 01 d0             	add    %rdx,%rax
   22a2d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22a34:	8b 12                	mov    (%rdx),%edx
   22a36:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22a39:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22a40:	89 0a                	mov    %ecx,(%rdx)
   22a42:	eb 1a                	jmp    22a5e <__vfprintf+0xebd>
   22a44:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22a4b:	48 8b 40 08          	mov    0x8(%rax),%rax
   22a4f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22a53:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22a5a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22a5e:	48 8b 00             	mov    (%rax),%rax
   22a61:	e9 fd 03 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22a66:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22a6c:	83 e0 10             	and    $0x10,%eax
   22a6f:	85 c0                	test   %eax,%eax
   22a71:	0f 84 9a 00 00 00    	je     22b11 <__vfprintf+0xf70>
   22a77:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22a7e:	48 85 c0             	test   %rax,%rax
   22a81:	74 27                	je     22aaa <__vfprintf+0xf09>
   22a83:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22a8a:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22a90:	8d 50 01             	lea    0x1(%rax),%edx
   22a93:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22a99:	48 98                	cltq   
   22a9b:	48 c1 e0 04          	shl    $0x4,%rax
   22a9f:	48 01 c8             	add    %rcx,%rax
   22aa2:	48 8b 00             	mov    (%rax),%rax
   22aa5:	e9 b9 03 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22aaa:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22ab1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22ab8:	8b 00                	mov    (%rax),%eax
   22aba:	83 f8 2f             	cmp    $0x2f,%eax
   22abd:	77 30                	ja     22aef <__vfprintf+0xf4e>
   22abf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22ac6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22aca:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22ad1:	8b 00                	mov    (%rax),%eax
   22ad3:	89 c0                	mov    %eax,%eax
   22ad5:	48 01 d0             	add    %rdx,%rax
   22ad8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22adf:	8b 12                	mov    (%rdx),%edx
   22ae1:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22ae4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22aeb:	89 0a                	mov    %ecx,(%rdx)
   22aed:	eb 1a                	jmp    22b09 <__vfprintf+0xf68>
   22aef:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22af6:	48 8b 40 08          	mov    0x8(%rax),%rax
   22afa:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22afe:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22b05:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22b09:	48 8b 00             	mov    (%rax),%rax
   22b0c:	e9 52 03 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22b11:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22b17:	25 00 02 00 00       	and    $0x200,%eax
   22b1c:	85 c0                	test   %eax,%eax
   22b1e:	0f 84 9a 00 00 00    	je     22bbe <__vfprintf+0x101d>
   22b24:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22b2b:	48 85 c0             	test   %rax,%rax
   22b2e:	74 27                	je     22b57 <__vfprintf+0xfb6>
   22b30:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22b37:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22b3d:	8d 50 01             	lea    0x1(%rax),%edx
   22b40:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22b46:	48 98                	cltq   
   22b48:	48 c1 e0 04          	shl    $0x4,%rax
   22b4c:	48 01 c8             	add    %rcx,%rax
   22b4f:	48 8b 00             	mov    (%rax),%rax
   22b52:	e9 0c 03 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22b57:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22b5e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22b65:	8b 00                	mov    (%rax),%eax
   22b67:	83 f8 2f             	cmp    $0x2f,%eax
   22b6a:	77 30                	ja     22b9c <__vfprintf+0xffb>
   22b6c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22b73:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22b77:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22b7e:	8b 00                	mov    (%rax),%eax
   22b80:	89 c0                	mov    %eax,%eax
   22b82:	48 01 d0             	add    %rdx,%rax
   22b85:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22b8c:	8b 12                	mov    (%rdx),%edx
   22b8e:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22b91:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22b98:	89 0a                	mov    %ecx,(%rdx)
   22b9a:	eb 1a                	jmp    22bb6 <__vfprintf+0x1015>
   22b9c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22ba3:	48 8b 40 08          	mov    0x8(%rax),%rax
   22ba7:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22bab:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22bb2:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22bb6:	48 8b 00             	mov    (%rax),%rax
   22bb9:	e9 a5 02 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22bbe:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22bc4:	25 00 04 00 00       	and    $0x400,%eax
   22bc9:	85 c0                	test   %eax,%eax
   22bcb:	0f 84 9a 00 00 00    	je     22c6b <__vfprintf+0x10ca>
   22bd1:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22bd8:	48 85 c0             	test   %rax,%rax
   22bdb:	74 27                	je     22c04 <__vfprintf+0x1063>
   22bdd:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22be4:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22bea:	8d 50 01             	lea    0x1(%rax),%edx
   22bed:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22bf3:	48 98                	cltq   
   22bf5:	48 c1 e0 04          	shl    $0x4,%rax
   22bf9:	48 01 c8             	add    %rcx,%rax
   22bfc:	48 8b 00             	mov    (%rax),%rax
   22bff:	e9 5f 02 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22c04:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22c0b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22c12:	8b 00                	mov    (%rax),%eax
   22c14:	83 f8 2f             	cmp    $0x2f,%eax
   22c17:	77 30                	ja     22c49 <__vfprintf+0x10a8>
   22c19:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22c20:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22c24:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22c2b:	8b 00                	mov    (%rax),%eax
   22c2d:	89 c0                	mov    %eax,%eax
   22c2f:	48 01 d0             	add    %rdx,%rax
   22c32:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22c39:	8b 12                	mov    (%rdx),%edx
   22c3b:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22c3e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22c45:	89 0a                	mov    %ecx,(%rdx)
   22c47:	eb 1a                	jmp    22c63 <__vfprintf+0x10c2>
   22c49:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22c50:	48 8b 40 08          	mov    0x8(%rax),%rax
   22c54:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22c58:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22c5f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22c63:	48 8b 00             	mov    (%rax),%rax
   22c66:	e9 f8 01 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22c6b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22c71:	83 e0 40             	and    $0x40,%eax
   22c74:	85 c0                	test   %eax,%eax
   22c76:	0f 84 a0 00 00 00    	je     22d1c <__vfprintf+0x117b>
   22c7c:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22c83:	48 85 c0             	test   %rax,%rax
   22c86:	74 2a                	je     22cb2 <__vfprintf+0x1111>
   22c88:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22c8f:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22c95:	8d 50 01             	lea    0x1(%rax),%edx
   22c98:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22c9e:	48 98                	cltq   
   22ca0:	48 c1 e0 04          	shl    $0x4,%rax
   22ca4:	48 01 c8             	add    %rcx,%rax
   22ca7:	8b 00                	mov    (%rax),%eax
   22ca9:	48 0f bf c0          	movswq %ax,%rax
   22cad:	e9 b1 01 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22cb2:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22cb9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22cc0:	8b 00                	mov    (%rax),%eax
   22cc2:	83 f8 2f             	cmp    $0x2f,%eax
   22cc5:	77 30                	ja     22cf7 <__vfprintf+0x1156>
   22cc7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22cce:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22cd2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22cd9:	8b 00                	mov    (%rax),%eax
   22cdb:	89 c0                	mov    %eax,%eax
   22cdd:	48 01 d0             	add    %rdx,%rax
   22ce0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22ce7:	8b 12                	mov    (%rdx),%edx
   22ce9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22cec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22cf3:	89 0a                	mov    %ecx,(%rdx)
   22cf5:	eb 1a                	jmp    22d11 <__vfprintf+0x1170>
   22cf7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22cfe:	48 8b 40 08          	mov    0x8(%rax),%rax
   22d02:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22d06:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22d0d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22d11:	8b 00                	mov    (%rax),%eax
   22d13:	48 0f bf c0          	movswq %ax,%rax
   22d17:	e9 47 01 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22d1c:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22d22:	25 00 08 00 00       	and    $0x800,%eax
   22d27:	85 c0                	test   %eax,%eax
   22d29:	0f 84 a0 00 00 00    	je     22dcf <__vfprintf+0x122e>
   22d2f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22d36:	48 85 c0             	test   %rax,%rax
   22d39:	74 2a                	je     22d65 <__vfprintf+0x11c4>
   22d3b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22d42:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22d48:	8d 50 01             	lea    0x1(%rax),%edx
   22d4b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22d51:	48 98                	cltq   
   22d53:	48 c1 e0 04          	shl    $0x4,%rax
   22d57:	48 01 c8             	add    %rcx,%rax
   22d5a:	8b 00                	mov    (%rax),%eax
   22d5c:	48 0f be c0          	movsbq %al,%rax
   22d60:	e9 fe 00 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22d65:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22d6c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22d73:	8b 00                	mov    (%rax),%eax
   22d75:	83 f8 2f             	cmp    $0x2f,%eax
   22d78:	77 30                	ja     22daa <__vfprintf+0x1209>
   22d7a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22d81:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22d85:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22d8c:	8b 00                	mov    (%rax),%eax
   22d8e:	89 c0                	mov    %eax,%eax
   22d90:	48 01 d0             	add    %rdx,%rax
   22d93:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22d9a:	8b 12                	mov    (%rdx),%edx
   22d9c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22d9f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22da6:	89 0a                	mov    %ecx,(%rdx)
   22da8:	eb 1a                	jmp    22dc4 <__vfprintf+0x1223>
   22daa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22db1:	48 8b 40 08          	mov    0x8(%rax),%rax
   22db5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22db9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22dc0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22dc4:	8b 00                	mov    (%rax),%eax
   22dc6:	48 0f be c0          	movsbq %al,%rax
   22dca:	e9 94 00 00 00       	jmp    22e63 <__vfprintf+0x12c2>
   22dcf:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22dd6:	48 85 c0             	test   %rax,%rax
   22dd9:	74 25                	je     22e00 <__vfprintf+0x125f>
   22ddb:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22de2:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22de8:	8d 50 01             	lea    0x1(%rax),%edx
   22deb:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22df1:	48 98                	cltq   
   22df3:	48 c1 e0 04          	shl    $0x4,%rax
   22df7:	48 01 c8             	add    %rcx,%rax
   22dfa:	8b 00                	mov    (%rax),%eax
   22dfc:	48 98                	cltq   
   22dfe:	eb 63                	jmp    22e63 <__vfprintf+0x12c2>
   22e00:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22e07:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22e0e:	8b 00                	mov    (%rax),%eax
   22e10:	83 f8 2f             	cmp    $0x2f,%eax
   22e13:	77 30                	ja     22e45 <__vfprintf+0x12a4>
   22e15:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22e1c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22e20:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22e27:	8b 00                	mov    (%rax),%eax
   22e29:	89 c0                	mov    %eax,%eax
   22e2b:	48 01 d0             	add    %rdx,%rax
   22e2e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22e35:	8b 12                	mov    (%rdx),%edx
   22e37:	8d 4a 08             	lea    0x8(%rdx),%ecx
   22e3a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22e41:	89 0a                	mov    %ecx,(%rdx)
   22e43:	eb 1a                	jmp    22e5f <__vfprintf+0x12be>
   22e45:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22e4c:	48 8b 40 08          	mov    0x8(%rax),%rax
   22e50:	48 8d 48 08          	lea    0x8(%rax),%rcx
   22e54:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22e5b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22e5f:	8b 00                	mov    (%rax),%eax
   22e61:	48 98                	cltq   
   22e63:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   22e6a:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   22e71:	48 85 c0             	test   %rax,%rax
   22e74:	79 0e                	jns    22e84 <__vfprintf+0x12e3>
   22e76:	48 f7 9d e0 fd ff ff 	negq   -0x220(%rbp)
   22e7d:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   22e84:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   22e8b:	00 00 00 
   22e8e:	e9 f5 1a 00 00       	jmp    24988 <__vfprintf+0x2de7>
   22e93:	83 bd 64 fd ff ff 61 	cmpl   $0x61,-0x29c(%rbp)
   22e9a:	75 1b                	jne    22eb7 <__vfprintf+0x1316>
   22e9c:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   22ea0:	48 8d 05 89 ed 00 00 	lea    0xed89(%rip),%rax        # 31c30 <xdigs_lower.3343>
   22ea7:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   22eae:	c6 85 57 fd ff ff 70 	movb   $0x70,-0x2a9(%rbp)
   22eb5:	eb 19                	jmp    22ed0 <__vfprintf+0x132f>
   22eb7:	c6 45 87 58          	movb   $0x58,-0x79(%rbp)
   22ebb:	48 8d 05 7e ed 00 00 	lea    0xed7e(%rip),%rax        # 31c40 <xdigs_upper.3344>
   22ec2:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   22ec9:	c6 85 57 fd ff ff 50 	movb   $0x50,-0x2a9(%rbp)
   22ed0:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   22ed7:	78 07                	js     22ee0 <__vfprintf+0x133f>
   22ed9:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   22ee0:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   22ee7:	00 
   22ee8:	74 0f                	je     22ef9 <__vfprintf+0x1358>
   22eea:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   22ef1:	48 89 c7             	mov    %rax,%rdi
   22ef4:	e8 7b 54 00 00       	call   28374 <__freedtoa>
   22ef9:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   22eff:	83 e0 08             	and    $0x8,%eax
   22f02:	85 c0                	test   %eax,%eax
   22f04:	0f 84 d2 00 00 00    	je     22fdc <__vfprintf+0x143b>
   22f0a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22f11:	48 85 c0             	test   %rax,%rax
   22f14:	74 23                	je     22f39 <__vfprintf+0x1398>
   22f16:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22f1d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22f23:	8d 50 01             	lea    0x1(%rax),%edx
   22f26:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22f2c:	48 98                	cltq   
   22f2e:	48 c1 e0 04          	shl    $0x4,%rax
   22f32:	48 01 c8             	add    %rcx,%rax
   22f35:	db 28                	fldt   (%rax)
   22f37:	eb 2b                	jmp    22f64 <__vfprintf+0x13c3>
   22f39:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   22f40:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   22f47:	48 8b 40 08          	mov    0x8(%rax),%rax
   22f4b:	48 83 c0 0f          	add    $0xf,%rax
   22f4f:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   22f53:	48 8d 48 10          	lea    0x10(%rax),%rcx
   22f57:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   22f5e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   22f62:	db 28                	fldt   (%rax)
   22f64:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   22f6a:	db ad 30 fe ff ff    	fldt   -0x1d0(%rbp)
   22f70:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   22f77:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   22f7e:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   22f85:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   22f8b:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   22f92:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   22f97:	db 3c 24             	fstpt  (%rsp)
   22f9a:	49 89 f8             	mov    %rdi,%r8
   22f9d:	48 89 c7             	mov    %rax,%rdi
   22fa0:	e8 25 72 00 00       	call   2a1ca <__hldtoa>
   22fa5:	48 83 c4 10          	add    $0x10,%rsp
   22fa9:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   22fb0:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   22fb7:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   22fbe:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   22fc5:	00 
   22fc6:	0f 85 14 01 00 00    	jne    230e0 <__vfprintf+0x153f>
   22fcc:	e8 88 e9 ff ff       	call   21959 <__errno>
   22fd1:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   22fd7:	e9 5a 2f 00 00       	jmp    25f36 <__vfprintf+0x4395>
   22fdc:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   22fe3:	48 85 c0             	test   %rax,%rax
   22fe6:	74 25                	je     2300d <__vfprintf+0x146c>
   22fe8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   22fef:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   22ff5:	8d 50 01             	lea    0x1(%rax),%edx
   22ff8:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   22ffe:	48 98                	cltq   
   23000:	48 c1 e0 04          	shl    $0x4,%rax
   23004:	48 01 c8             	add    %rcx,%rax
   23007:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2300b:	eb 69                	jmp    23076 <__vfprintf+0x14d5>
   2300d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23014:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2301b:	8b 40 04             	mov    0x4(%rax),%eax
   2301e:	3d af 00 00 00       	cmp    $0xaf,%eax
   23023:	77 33                	ja     23058 <__vfprintf+0x14b7>
   23025:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2302c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23030:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23037:	8b 40 04             	mov    0x4(%rax),%eax
   2303a:	89 c0                	mov    %eax,%eax
   2303c:	48 01 d0             	add    %rdx,%rax
   2303f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23046:	8b 52 04             	mov    0x4(%rdx),%edx
   23049:	8d 4a 10             	lea    0x10(%rdx),%ecx
   2304c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23053:	89 4a 04             	mov    %ecx,0x4(%rdx)
   23056:	eb 1a                	jmp    23072 <__vfprintf+0x14d1>
   23058:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2305f:	48 8b 40 08          	mov    0x8(%rax),%rax
   23063:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23067:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2306e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23072:	f2 0f 10 00          	movsd  (%rax),%xmm0
   23076:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   2307d:	ff 
   2307e:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   23085:	4c 8d 85 a8 fd ff ff 	lea    -0x258(%rbp),%r8
   2308c:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   23093:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   2309a:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   230a0:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   230a7:	66 48 0f 6e c0       	movq   %rax,%xmm0
   230ac:	e8 c7 6d 00 00       	call   29e78 <__hdtoa>
   230b1:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   230b8:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   230bf:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   230c6:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   230cd:	00 
   230ce:	75 10                	jne    230e0 <__vfprintf+0x153f>
   230d0:	e8 84 e8 ff ff       	call   21959 <__errno>
   230d5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   230db:	e9 56 2e 00 00       	jmp    25f36 <__vfprintf+0x4395>
   230e0:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   230e7:	79 14                	jns    230fd <__vfprintf+0x155c>
   230e9:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   230f0:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   230f7:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   230fd:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   23103:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   23108:	0f 85 ae 02 00 00    	jne    233bc <__vfprintf+0x181b>
   2310e:	c6 45 87 00          	movb   $0x0,-0x79(%rbp)
   23112:	e9 a5 02 00 00       	jmp    233bc <__vfprintf+0x181b>
   23117:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   2311d:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   23123:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   2312a:	79 0c                	jns    23138 <__vfprintf+0x1597>
   2312c:	c7 85 7c fd ff ff 07 	movl   $0x7,-0x284(%rbp)
   23133:	00 00 00 
   23136:	eb 37                	jmp    2316f <__vfprintf+0x15ce>
   23138:	83 85 7c fd ff ff 01 	addl   $0x1,-0x284(%rbp)
   2313f:	eb 2e                	jmp    2316f <__vfprintf+0x15ce>
   23141:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   23148:	eb 25                	jmp    2316f <__vfprintf+0x15ce>
   2314a:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   23150:	83 e8 02             	sub    $0x2,%eax
   23153:	88 85 57 fd ff ff    	mov    %al,-0x2a9(%rbp)
   23159:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   23160:	75 0c                	jne    2316e <__vfprintf+0x15cd>
   23162:	c7 85 7c fd ff ff 01 	movl   $0x1,-0x284(%rbp)
   23169:	00 00 00 
   2316c:	eb 01                	jmp    2316f <__vfprintf+0x15ce>
   2316e:	90                   	nop
   2316f:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   23176:	79 0a                	jns    23182 <__vfprintf+0x15e1>
   23178:	c7 85 7c fd ff ff 06 	movl   $0x6,-0x284(%rbp)
   2317f:	00 00 00 
   23182:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   23189:	00 
   2318a:	74 0f                	je     2319b <__vfprintf+0x15fa>
   2318c:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   23193:	48 89 c7             	mov    %rax,%rdi
   23196:	e8 d9 51 00 00       	call   28374 <__freedtoa>
   2319b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   231a1:	83 e0 08             	and    $0x8,%eax
   231a4:	85 c0                	test   %eax,%eax
   231a6:	0f 84 dd 00 00 00    	je     23289 <__vfprintf+0x16e8>
   231ac:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   231b3:	48 85 c0             	test   %rax,%rax
   231b6:	74 23                	je     231db <__vfprintf+0x163a>
   231b8:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   231bf:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   231c5:	8d 50 01             	lea    0x1(%rax),%edx
   231c8:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   231ce:	48 98                	cltq   
   231d0:	48 c1 e0 04          	shl    $0x4,%rax
   231d4:	48 01 c8             	add    %rcx,%rax
   231d7:	db 28                	fldt   (%rax)
   231d9:	eb 2b                	jmp    23206 <__vfprintf+0x1665>
   231db:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   231e2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   231e9:	48 8b 40 08          	mov    0x8(%rax),%rax
   231ed:	48 83 c0 0f          	add    $0xf,%rax
   231f1:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   231f5:	48 8d 48 10          	lea    0x10(%rax),%rcx
   231f9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23200:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23204:	db 28                	fldt   (%rax)
   23206:	db bd 30 fe ff ff    	fstpt  -0x1d0(%rbp)
   2320c:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   23213:	74 08                	je     2321d <__vfprintf+0x167c>
   23215:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   2321b:	eb 06                	jmp    23223 <__vfprintf+0x1682>
   2321d:	41 ba 03 00 00 00    	mov    $0x3,%r10d
   23223:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   2322a:	48 8d b5 5c fd ff ff 	lea    -0x2a4(%rbp),%rsi
   23231:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
   23238:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   2323e:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
   23245:	49 89 f9             	mov    %rdi,%r9
   23248:	49 89 f0             	mov    %rsi,%r8
   2324b:	44 89 d6             	mov    %r10d,%esi
   2324e:	48 89 c7             	mov    %rax,%rdi
   23251:	e8 90 72 00 00       	call   2a4e6 <__ldtoa>
   23256:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2325d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   23264:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   2326b:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   23272:	00 
   23273:	0f 85 47 01 00 00    	jne    233c0 <__vfprintf+0x181f>
   23279:	e8 db e6 ff ff       	call   21959 <__errno>
   2327e:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   23284:	e9 ad 2c 00 00       	jmp    25f36 <__vfprintf+0x4395>
   23289:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23290:	48 85 c0             	test   %rax,%rax
   23293:	74 25                	je     232ba <__vfprintf+0x1719>
   23295:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2329c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   232a2:	8d 50 01             	lea    0x1(%rax),%edx
   232a5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   232ab:	48 98                	cltq   
   232ad:	48 c1 e0 04          	shl    $0x4,%rax
   232b1:	48 01 c8             	add    %rcx,%rax
   232b4:	f2 0f 10 00          	movsd  (%rax),%xmm0
   232b8:	eb 69                	jmp    23323 <__vfprintf+0x1782>
   232ba:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   232c1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   232c8:	8b 40 04             	mov    0x4(%rax),%eax
   232cb:	3d af 00 00 00       	cmp    $0xaf,%eax
   232d0:	77 33                	ja     23305 <__vfprintf+0x1764>
   232d2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   232d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   232dd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   232e4:	8b 40 04             	mov    0x4(%rax),%eax
   232e7:	89 c0                	mov    %eax,%eax
   232e9:	48 01 d0             	add    %rdx,%rax
   232ec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   232f3:	8b 52 04             	mov    0x4(%rdx),%edx
   232f6:	8d 4a 10             	lea    0x10(%rdx),%ecx
   232f9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23300:	89 4a 04             	mov    %ecx,0x4(%rdx)
   23303:	eb 1a                	jmp    2331f <__vfprintf+0x177e>
   23305:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2330c:	48 8b 40 08          	mov    0x8(%rax),%rax
   23310:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23314:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2331b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2331f:	f2 0f 10 00          	movsd  (%rax),%xmm0
   23323:	f2 0f 11 85 30 fe ff 	movsd  %xmm0,-0x1d0(%rbp)
   2332a:	ff 
   2332b:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   23332:	74 08                	je     2333c <__vfprintf+0x179b>
   23334:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   2333a:	eb 06                	jmp    23342 <__vfprintf+0x17a1>
   2333c:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   23342:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   23349:	48 8d bd a8 fd ff ff 	lea    -0x258(%rbp),%rdi
   23350:	48 8d 8d 5c fd ff ff 	lea    -0x2a4(%rbp),%rcx
   23357:	48 8d 95 60 fd ff ff 	lea    -0x2a0(%rbp),%rdx
   2335e:	8b b5 7c fd ff ff    	mov    -0x284(%rbp),%esi
   23364:	49 89 f8             	mov    %rdi,%r8
   23367:	44 89 cf             	mov    %r9d,%edi
   2336a:	66 48 0f 6e c0       	movq   %rax,%xmm0
   2336f:	e8 50 53 00 00       	call   286c4 <__dtoa>
   23374:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2337b:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   23382:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   23389:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   23390:	00 
   23391:	75 10                	jne    233a3 <__vfprintf+0x1802>
   23393:	e8 c1 e5 ff ff       	call   21959 <__errno>
   23398:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2339e:	e9 93 2b 00 00       	jmp    25f36 <__vfprintf+0x4395>
   233a3:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   233a9:	3d 0f 27 00 00       	cmp    $0x270f,%eax
   233ae:	75 0f                	jne    233bf <__vfprintf+0x181e>
   233b0:	c7 85 60 fd ff ff ff 	movl   $0x7fffffff,-0x2a0(%rbp)
   233b7:	ff ff 7f 
   233ba:	eb 04                	jmp    233c0 <__vfprintf+0x181f>
   233bc:	90                   	nop
   233bd:	eb 01                	jmp    233c0 <__vfprintf+0x181f>
   233bf:	90                   	nop
   233c0:	8b 85 5c fd ff ff    	mov    -0x2a4(%rbp),%eax
   233c6:	85 c0                	test   %eax,%eax
   233c8:	74 07                	je     233d1 <__vfprintf+0x1830>
   233ca:	c6 85 56 fd ff ff 2d 	movb   $0x2d,-0x2aa(%rbp)
   233d1:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   233d7:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
   233dc:	75 70                	jne    2344e <__vfprintf+0x18ad>
   233de:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   233e5:	0f b6 00             	movzbl (%rax),%eax
   233e8:	3c 4e                	cmp    $0x4e,%al
   233ea:	75 29                	jne    23415 <__vfprintf+0x1874>
   233ec:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   233f3:	7e 09                	jle    233fe <__vfprintf+0x185d>
   233f5:	48 8d 05 b4 e4 00 00 	lea    0xe4b4(%rip),%rax        # 318b0 <__func__.2555+0x7>
   233fc:	eb 07                	jmp    23405 <__vfprintf+0x1864>
   233fe:	48 8d 05 af e4 00 00 	lea    0xe4af(%rip),%rax        # 318b4 <__func__.2555+0xb>
   23405:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   2340c:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   23413:	eb 20                	jmp    23435 <__vfprintf+0x1894>
   23415:	83 bd 64 fd ff ff 60 	cmpl   $0x60,-0x29c(%rbp)
   2341c:	7e 09                	jle    23427 <__vfprintf+0x1886>
   2341e:	48 8d 05 93 e4 00 00 	lea    0xe493(%rip),%rax        # 318b8 <__func__.2555+0xf>
   23425:	eb 07                	jmp    2342e <__vfprintf+0x188d>
   23427:	48 8d 05 8e e4 00 00 	lea    0xe48e(%rip),%rax        # 318bc <__func__.2555+0x13>
   2342e:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   23435:	c7 85 98 fd ff ff 03 	movl   $0x3,-0x268(%rbp)
   2343c:	00 00 00 
   2343f:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   23446:	ff ff ff 
   23449:	e9 7e 17 00 00       	jmp    24bcc <__vfprintf+0x302b>
   2344e:	81 8d 70 fd ff ff 00 	orl    $0x100,-0x290(%rbp)
   23455:	01 00 00 
   23458:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   2345f:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   23466:	89 85 88 fd ff ff    	mov    %eax,-0x278(%rbp)
   2346c:	83 bd 64 fd ff ff 67 	cmpl   $0x67,-0x29c(%rbp)
   23473:	74 09                	je     2347e <__vfprintf+0x18dd>
   23475:	83 bd 64 fd ff ff 47 	cmpl   $0x47,-0x29c(%rbp)
   2347c:	75 7f                	jne    234fd <__vfprintf+0x195c>
   2347e:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   23484:	83 f8 fd             	cmp    $0xfffffffd,%eax
   23487:	7c 5b                	jl     234e4 <__vfprintf+0x1943>
   23489:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   2348f:	39 85 7c fd ff ff    	cmp    %eax,-0x284(%rbp)
   23495:	7c 4d                	jl     234e4 <__vfprintf+0x1943>
   23497:	c6 85 57 fd ff ff 00 	movb   $0x0,-0x2a9(%rbp)
   2349e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   234a4:	83 e0 01             	and    $0x1,%eax
   234a7:	85 c0                	test   %eax,%eax
   234a9:	74 0e                	je     234b9 <__vfprintf+0x1918>
   234ab:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   234b1:	29 85 7c fd ff ff    	sub    %eax,-0x284(%rbp)
   234b7:	eb 16                	jmp    234cf <__vfprintf+0x192e>
   234b9:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   234bf:	8b 95 88 fd ff ff    	mov    -0x278(%rbp),%edx
   234c5:	29 c2                	sub    %eax,%edx
   234c7:	89 d0                	mov    %edx,%eax
   234c9:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   234cf:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   234d6:	79 25                	jns    234fd <__vfprintf+0x195c>
   234d8:	c7 85 7c fd ff ff 00 	movl   $0x0,-0x284(%rbp)
   234df:	00 00 00 
   234e2:	eb 19                	jmp    234fd <__vfprintf+0x195c>
   234e4:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   234ea:	83 e0 01             	and    $0x1,%eax
   234ed:	85 c0                	test   %eax,%eax
   234ef:	75 0c                	jne    234fd <__vfprintf+0x195c>
   234f1:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   234f7:	89 85 7c fd ff ff    	mov    %eax,-0x284(%rbp)
   234fd:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   23504:	74 5e                	je     23564 <__vfprintf+0x19c3>
   23506:	0f be 95 57 fd ff ff 	movsbl -0x2a9(%rbp),%edx
   2350d:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   23513:	8d 48 ff             	lea    -0x1(%rax),%ecx
   23516:	48 8d 45 88          	lea    -0x78(%rbp),%rax
   2351a:	89 ce                	mov    %ecx,%esi
   2351c:	48 89 c7             	mov    %rax,%rdi
   2351f:	e8 00 49 00 00       	call   27e24 <exponent>
   23524:	89 85 80 fd ff ff    	mov    %eax,-0x280(%rbp)
   2352a:	8b 95 80 fd ff ff    	mov    -0x280(%rbp),%edx
   23530:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   23536:	01 d0                	add    %edx,%eax
   23538:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   2353e:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   23545:	7f 11                	jg     23558 <__vfprintf+0x19b7>
   23547:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2354d:	83 e0 01             	and    $0x1,%eax
   23550:	85 c0                	test   %eax,%eax
   23552:	0f 84 73 16 00 00    	je     24bcb <__vfprintf+0x302a>
   23558:	83 85 98 fd ff ff 01 	addl   $0x1,-0x268(%rbp)
   2355f:	e9 67 16 00 00       	jmp    24bcb <__vfprintf+0x302a>
   23564:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   2356a:	85 c0                	test   %eax,%eax
   2356c:	7e 0e                	jle    2357c <__vfprintf+0x19db>
   2356e:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   23574:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   2357a:	eb 0a                	jmp    23586 <__vfprintf+0x19e5>
   2357c:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   23583:	00 00 00 
   23586:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   2358d:	75 0d                	jne    2359c <__vfprintf+0x19fb>
   2358f:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23595:	83 e0 01             	and    $0x1,%eax
   23598:	85 c0                	test   %eax,%eax
   2359a:	74 17                	je     235b3 <__vfprintf+0x1a12>
   2359c:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   235a2:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   235a8:	01 d0                	add    %edx,%eax
   235aa:	83 c0 01             	add    $0x1,%eax
   235ad:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   235b3:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   235b9:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
   235bf:	e9 07 16 00 00       	jmp    24bcb <__vfprintf+0x302a>
   235c4:	e8 62 bf 00 00       	call   2f52b <abort>
   235c9:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   235d0:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   235d6:	25 00 10 00 00       	and    $0x1000,%eax
   235db:	85 c0                	test   %eax,%eax
   235dd:	0f 84 9a 00 00 00    	je     2367d <__vfprintf+0x1adc>
   235e3:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   235ea:	48 85 c0             	test   %rax,%rax
   235ed:	74 27                	je     23616 <__vfprintf+0x1a75>
   235ef:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   235f6:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   235fc:	8d 50 01             	lea    0x1(%rax),%edx
   235ff:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23605:	48 98                	cltq   
   23607:	48 c1 e0 04          	shl    $0x4,%rax
   2360b:	48 01 c8             	add    %rcx,%rax
   2360e:	48 8b 00             	mov    (%rax),%rax
   23611:	e9 0b 05 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23616:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2361d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23624:	8b 00                	mov    (%rax),%eax
   23626:	83 f8 2f             	cmp    $0x2f,%eax
   23629:	77 30                	ja     2365b <__vfprintf+0x1aba>
   2362b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23632:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23636:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2363d:	8b 00                	mov    (%rax),%eax
   2363f:	89 c0                	mov    %eax,%eax
   23641:	48 01 d0             	add    %rdx,%rax
   23644:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2364b:	8b 12                	mov    (%rdx),%edx
   2364d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23650:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23657:	89 0a                	mov    %ecx,(%rdx)
   23659:	eb 1a                	jmp    23675 <__vfprintf+0x1ad4>
   2365b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23662:	48 8b 40 08          	mov    0x8(%rax),%rax
   23666:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2366a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23671:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23675:	48 8b 00             	mov    (%rax),%rax
   23678:	e9 a4 04 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   2367d:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23683:	83 e0 20             	and    $0x20,%eax
   23686:	85 c0                	test   %eax,%eax
   23688:	0f 84 9a 00 00 00    	je     23728 <__vfprintf+0x1b87>
   2368e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23695:	48 85 c0             	test   %rax,%rax
   23698:	74 27                	je     236c1 <__vfprintf+0x1b20>
   2369a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   236a1:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   236a7:	8d 50 01             	lea    0x1(%rax),%edx
   236aa:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   236b0:	48 98                	cltq   
   236b2:	48 c1 e0 04          	shl    $0x4,%rax
   236b6:	48 01 c8             	add    %rcx,%rax
   236b9:	48 8b 00             	mov    (%rax),%rax
   236bc:	e9 60 04 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   236c1:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   236c8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   236cf:	8b 00                	mov    (%rax),%eax
   236d1:	83 f8 2f             	cmp    $0x2f,%eax
   236d4:	77 30                	ja     23706 <__vfprintf+0x1b65>
   236d6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   236dd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   236e1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   236e8:	8b 00                	mov    (%rax),%eax
   236ea:	89 c0                	mov    %eax,%eax
   236ec:	48 01 d0             	add    %rdx,%rax
   236ef:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   236f6:	8b 12                	mov    (%rdx),%edx
   236f8:	8d 4a 08             	lea    0x8(%rdx),%ecx
   236fb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23702:	89 0a                	mov    %ecx,(%rdx)
   23704:	eb 1a                	jmp    23720 <__vfprintf+0x1b7f>
   23706:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2370d:	48 8b 40 08          	mov    0x8(%rax),%rax
   23711:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23715:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2371c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23720:	48 8b 00             	mov    (%rax),%rax
   23723:	e9 f9 03 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23728:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2372e:	83 e0 10             	and    $0x10,%eax
   23731:	85 c0                	test   %eax,%eax
   23733:	0f 84 9a 00 00 00    	je     237d3 <__vfprintf+0x1c32>
   23739:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23740:	48 85 c0             	test   %rax,%rax
   23743:	74 27                	je     2376c <__vfprintf+0x1bcb>
   23745:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2374c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23752:	8d 50 01             	lea    0x1(%rax),%edx
   23755:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2375b:	48 98                	cltq   
   2375d:	48 c1 e0 04          	shl    $0x4,%rax
   23761:	48 01 c8             	add    %rcx,%rax
   23764:	48 8b 00             	mov    (%rax),%rax
   23767:	e9 b5 03 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   2376c:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23773:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2377a:	8b 00                	mov    (%rax),%eax
   2377c:	83 f8 2f             	cmp    $0x2f,%eax
   2377f:	77 30                	ja     237b1 <__vfprintf+0x1c10>
   23781:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23788:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2378c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23793:	8b 00                	mov    (%rax),%eax
   23795:	89 c0                	mov    %eax,%eax
   23797:	48 01 d0             	add    %rdx,%rax
   2379a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   237a1:	8b 12                	mov    (%rdx),%edx
   237a3:	8d 4a 08             	lea    0x8(%rdx),%ecx
   237a6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   237ad:	89 0a                	mov    %ecx,(%rdx)
   237af:	eb 1a                	jmp    237cb <__vfprintf+0x1c2a>
   237b1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   237b8:	48 8b 40 08          	mov    0x8(%rax),%rax
   237bc:	48 8d 48 08          	lea    0x8(%rax),%rcx
   237c0:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   237c7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   237cb:	48 8b 00             	mov    (%rax),%rax
   237ce:	e9 4e 03 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   237d3:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   237d9:	25 00 02 00 00       	and    $0x200,%eax
   237de:	85 c0                	test   %eax,%eax
   237e0:	0f 84 9a 00 00 00    	je     23880 <__vfprintf+0x1cdf>
   237e6:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   237ed:	48 85 c0             	test   %rax,%rax
   237f0:	74 27                	je     23819 <__vfprintf+0x1c78>
   237f2:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   237f9:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   237ff:	8d 50 01             	lea    0x1(%rax),%edx
   23802:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23808:	48 98                	cltq   
   2380a:	48 c1 e0 04          	shl    $0x4,%rax
   2380e:	48 01 c8             	add    %rcx,%rax
   23811:	48 8b 00             	mov    (%rax),%rax
   23814:	e9 08 03 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23819:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23820:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23827:	8b 00                	mov    (%rax),%eax
   23829:	83 f8 2f             	cmp    $0x2f,%eax
   2382c:	77 30                	ja     2385e <__vfprintf+0x1cbd>
   2382e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23835:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23839:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23840:	8b 00                	mov    (%rax),%eax
   23842:	89 c0                	mov    %eax,%eax
   23844:	48 01 d0             	add    %rdx,%rax
   23847:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2384e:	8b 12                	mov    (%rdx),%edx
   23850:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23853:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2385a:	89 0a                	mov    %ecx,(%rdx)
   2385c:	eb 1a                	jmp    23878 <__vfprintf+0x1cd7>
   2385e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23865:	48 8b 40 08          	mov    0x8(%rax),%rax
   23869:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2386d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23874:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23878:	48 8b 00             	mov    (%rax),%rax
   2387b:	e9 a1 02 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23880:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23886:	25 00 04 00 00       	and    $0x400,%eax
   2388b:	85 c0                	test   %eax,%eax
   2388d:	0f 84 9a 00 00 00    	je     2392d <__vfprintf+0x1d8c>
   23893:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2389a:	48 85 c0             	test   %rax,%rax
   2389d:	74 27                	je     238c6 <__vfprintf+0x1d25>
   2389f:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   238a6:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   238ac:	8d 50 01             	lea    0x1(%rax),%edx
   238af:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   238b5:	48 98                	cltq   
   238b7:	48 c1 e0 04          	shl    $0x4,%rax
   238bb:	48 01 c8             	add    %rcx,%rax
   238be:	48 8b 00             	mov    (%rax),%rax
   238c1:	e9 5b 02 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   238c6:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   238cd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   238d4:	8b 00                	mov    (%rax),%eax
   238d6:	83 f8 2f             	cmp    $0x2f,%eax
   238d9:	77 30                	ja     2390b <__vfprintf+0x1d6a>
   238db:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   238e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   238e6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   238ed:	8b 00                	mov    (%rax),%eax
   238ef:	89 c0                	mov    %eax,%eax
   238f1:	48 01 d0             	add    %rdx,%rax
   238f4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   238fb:	8b 12                	mov    (%rdx),%edx
   238fd:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23900:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23907:	89 0a                	mov    %ecx,(%rdx)
   23909:	eb 1a                	jmp    23925 <__vfprintf+0x1d84>
   2390b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23912:	48 8b 40 08          	mov    0x8(%rax),%rax
   23916:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2391a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23921:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23925:	48 8b 00             	mov    (%rax),%rax
   23928:	e9 f4 01 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   2392d:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23933:	83 e0 40             	and    $0x40,%eax
   23936:	85 c0                	test   %eax,%eax
   23938:	0f 84 9e 00 00 00    	je     239dc <__vfprintf+0x1e3b>
   2393e:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23945:	48 85 c0             	test   %rax,%rax
   23948:	74 29                	je     23973 <__vfprintf+0x1dd2>
   2394a:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23951:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23957:	8d 50 01             	lea    0x1(%rax),%edx
   2395a:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23960:	48 98                	cltq   
   23962:	48 c1 e0 04          	shl    $0x4,%rax
   23966:	48 01 c8             	add    %rcx,%rax
   23969:	8b 00                	mov    (%rax),%eax
   2396b:	0f b7 c0             	movzwl %ax,%eax
   2396e:	e9 ae 01 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23973:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2397a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23981:	8b 00                	mov    (%rax),%eax
   23983:	83 f8 2f             	cmp    $0x2f,%eax
   23986:	77 30                	ja     239b8 <__vfprintf+0x1e17>
   23988:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2398f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23993:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2399a:	8b 00                	mov    (%rax),%eax
   2399c:	89 c0                	mov    %eax,%eax
   2399e:	48 01 d0             	add    %rdx,%rax
   239a1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   239a8:	8b 12                	mov    (%rdx),%edx
   239aa:	8d 4a 08             	lea    0x8(%rdx),%ecx
   239ad:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   239b4:	89 0a                	mov    %ecx,(%rdx)
   239b6:	eb 1a                	jmp    239d2 <__vfprintf+0x1e31>
   239b8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   239bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   239c3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   239c7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   239ce:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   239d2:	8b 00                	mov    (%rax),%eax
   239d4:	0f b7 c0             	movzwl %ax,%eax
   239d7:	e9 45 01 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   239dc:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   239e2:	25 00 08 00 00       	and    $0x800,%eax
   239e7:	85 c0                	test   %eax,%eax
   239e9:	0f 84 9e 00 00 00    	je     23a8d <__vfprintf+0x1eec>
   239ef:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   239f6:	48 85 c0             	test   %rax,%rax
   239f9:	74 29                	je     23a24 <__vfprintf+0x1e83>
   239fb:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23a02:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23a08:	8d 50 01             	lea    0x1(%rax),%edx
   23a0b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23a11:	48 98                	cltq   
   23a13:	48 c1 e0 04          	shl    $0x4,%rax
   23a17:	48 01 c8             	add    %rcx,%rax
   23a1a:	8b 00                	mov    (%rax),%eax
   23a1c:	0f b6 c0             	movzbl %al,%eax
   23a1f:	e9 fd 00 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23a24:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23a2b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23a32:	8b 00                	mov    (%rax),%eax
   23a34:	83 f8 2f             	cmp    $0x2f,%eax
   23a37:	77 30                	ja     23a69 <__vfprintf+0x1ec8>
   23a39:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23a40:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23a44:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23a4b:	8b 00                	mov    (%rax),%eax
   23a4d:	89 c0                	mov    %eax,%eax
   23a4f:	48 01 d0             	add    %rdx,%rax
   23a52:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23a59:	8b 12                	mov    (%rdx),%edx
   23a5b:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23a5e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23a65:	89 0a                	mov    %ecx,(%rdx)
   23a67:	eb 1a                	jmp    23a83 <__vfprintf+0x1ee2>
   23a69:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23a70:	48 8b 40 08          	mov    0x8(%rax),%rax
   23a74:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23a78:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23a7f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23a83:	8b 00                	mov    (%rax),%eax
   23a85:	0f b6 c0             	movzbl %al,%eax
   23a88:	e9 94 00 00 00       	jmp    23b21 <__vfprintf+0x1f80>
   23a8d:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23a94:	48 85 c0             	test   %rax,%rax
   23a97:	74 25                	je     23abe <__vfprintf+0x1f1d>
   23a99:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23aa0:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23aa6:	8d 50 01             	lea    0x1(%rax),%edx
   23aa9:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23aaf:	48 98                	cltq   
   23ab1:	48 c1 e0 04          	shl    $0x4,%rax
   23ab5:	48 01 c8             	add    %rcx,%rax
   23ab8:	8b 00                	mov    (%rax),%eax
   23aba:	89 c0                	mov    %eax,%eax
   23abc:	eb 63                	jmp    23b21 <__vfprintf+0x1f80>
   23abe:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23ac5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23acc:	8b 00                	mov    (%rax),%eax
   23ace:	83 f8 2f             	cmp    $0x2f,%eax
   23ad1:	77 30                	ja     23b03 <__vfprintf+0x1f62>
   23ad3:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ada:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23ade:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ae5:	8b 00                	mov    (%rax),%eax
   23ae7:	89 c0                	mov    %eax,%eax
   23ae9:	48 01 d0             	add    %rdx,%rax
   23aec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23af3:	8b 12                	mov    (%rdx),%edx
   23af5:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23af8:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23aff:	89 0a                	mov    %ecx,(%rdx)
   23b01:	eb 1a                	jmp    23b1d <__vfprintf+0x1f7c>
   23b03:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23b0a:	48 8b 40 08          	mov    0x8(%rax),%rax
   23b0e:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23b12:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23b19:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23b1d:	8b 00                	mov    (%rax),%eax
   23b1f:	89 c0                	mov    %eax,%eax
   23b21:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   23b28:	c7 85 8c fd ff ff 00 	movl   $0x0,-0x274(%rbp)
   23b2f:	00 00 00 
   23b32:	e9 4a 0e 00 00       	jmp    24981 <__vfprintf+0x2de0>
   23b37:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23b3e:	48 85 c0             	test   %rax,%rax
   23b41:	74 24                	je     23b67 <__vfprintf+0x1fc6>
   23b43:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23b4a:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23b50:	8d 50 01             	lea    0x1(%rax),%edx
   23b53:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23b59:	48 98                	cltq   
   23b5b:	48 c1 e0 04          	shl    $0x4,%rax
   23b5f:	48 01 c8             	add    %rcx,%rax
   23b62:	48 8b 00             	mov    (%rax),%rax
   23b65:	eb 62                	jmp    23bc9 <__vfprintf+0x2028>
   23b67:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23b6e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23b75:	8b 00                	mov    (%rax),%eax
   23b77:	83 f8 2f             	cmp    $0x2f,%eax
   23b7a:	77 30                	ja     23bac <__vfprintf+0x200b>
   23b7c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23b83:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23b87:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23b8e:	8b 00                	mov    (%rax),%eax
   23b90:	89 c0                	mov    %eax,%eax
   23b92:	48 01 d0             	add    %rdx,%rax
   23b95:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23b9c:	8b 12                	mov    (%rdx),%edx
   23b9e:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23ba1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23ba8:	89 0a                	mov    %ecx,(%rdx)
   23baa:	eb 1a                	jmp    23bc6 <__vfprintf+0x2025>
   23bac:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23bb3:	48 8b 40 08          	mov    0x8(%rax),%rax
   23bb7:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23bbb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23bc2:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23bc6:	48 8b 00             	mov    (%rax),%rax
   23bc9:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   23bd0:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   23bd7:	00 00 00 
   23bda:	48 8d 05 4f e0 00 00 	lea    0xe04f(%rip),%rax        # 31c30 <xdigs_lower.3343>
   23be1:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   23be8:	c6 45 87 78          	movb   $0x78,-0x79(%rbp)
   23bec:	e9 90 0d 00 00       	jmp    24981 <__vfprintf+0x2de0>
   23bf1:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23bf7:	83 e0 10             	and    $0x10,%eax
   23bfa:	85 c0                	test   %eax,%eax
   23bfc:	0f 84 27 01 00 00    	je     23d29 <__vfprintf+0x2188>
   23c02:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   23c09:	00 
   23c0a:	74 1a                	je     23c26 <__vfprintf+0x2085>
   23c0c:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   23c13:	48 89 c7             	mov    %rax,%rdi
   23c16:	e8 97 a3 ff ff       	call   1dfb2 <dlfree>
   23c1b:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
   23c22:	00 00 00 00 
   23c26:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23c2d:	48 85 c0             	test   %rax,%rax
   23c30:	74 24                	je     23c56 <__vfprintf+0x20b5>
   23c32:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23c39:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23c3f:	8d 50 01             	lea    0x1(%rax),%edx
   23c42:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23c48:	48 98                	cltq   
   23c4a:	48 c1 e0 04          	shl    $0x4,%rax
   23c4e:	48 01 c8             	add    %rcx,%rax
   23c51:	48 8b 00             	mov    (%rax),%rax
   23c54:	eb 62                	jmp    23cb8 <__vfprintf+0x2117>
   23c56:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23c5d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23c64:	8b 00                	mov    (%rax),%eax
   23c66:	83 f8 2f             	cmp    $0x2f,%eax
   23c69:	77 30                	ja     23c9b <__vfprintf+0x20fa>
   23c6b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23c72:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23c76:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23c7d:	8b 00                	mov    (%rax),%eax
   23c7f:	89 c0                	mov    %eax,%eax
   23c81:	48 01 d0             	add    %rdx,%rax
   23c84:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23c8b:	8b 12                	mov    (%rdx),%edx
   23c8d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23c90:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23c97:	89 0a                	mov    %ecx,(%rdx)
   23c99:	eb 1a                	jmp    23cb5 <__vfprintf+0x2114>
   23c9b:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ca2:	48 8b 40 08          	mov    0x8(%rax),%rax
   23ca6:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23caa:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23cb1:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23cb5:	48 8b 00             	mov    (%rax),%rax
   23cb8:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
   23cbf:	48 83 bd 10 fe ff ff 	cmpq   $0x0,-0x1f0(%rbp)
   23cc6:	00 
   23cc7:	75 13                	jne    23cdc <__vfprintf+0x213b>
   23cc9:	48 8d 05 f0 db 00 00 	lea    0xdbf0(%rip),%rax        # 318c0 <__func__.2555+0x17>
   23cd0:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   23cd7:	e9 fe 00 00 00       	jmp    23dda <__vfprintf+0x2239>
   23cdc:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   23ce2:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
   23ce9:	89 d6                	mov    %edx,%esi
   23ceb:	48 89 c7             	mov    %rax,%rdi
   23cee:	e8 d7 dc ff ff       	call   219ca <__wcsconv>
   23cf3:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
   23cfa:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   23d01:	00 
   23d02:	75 12                	jne    23d16 <__vfprintf+0x2175>
   23d04:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   23d0b:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   23d11:	e9 20 22 00 00       	jmp    25f36 <__vfprintf+0x4395>
   23d16:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   23d1d:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   23d24:	e9 b1 00 00 00       	jmp    23dda <__vfprintf+0x2239>
   23d29:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23d30:	48 85 c0             	test   %rax,%rax
   23d33:	74 24                	je     23d59 <__vfprintf+0x21b8>
   23d35:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23d3c:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23d42:	8d 50 01             	lea    0x1(%rax),%edx
   23d45:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23d4b:	48 98                	cltq   
   23d4d:	48 c1 e0 04          	shl    $0x4,%rax
   23d51:	48 01 c8             	add    %rcx,%rax
   23d54:	48 8b 00             	mov    (%rax),%rax
   23d57:	eb 62                	jmp    23dbb <__vfprintf+0x221a>
   23d59:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23d60:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23d67:	8b 00                	mov    (%rax),%eax
   23d69:	83 f8 2f             	cmp    $0x2f,%eax
   23d6c:	77 30                	ja     23d9e <__vfprintf+0x21fd>
   23d6e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23d75:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23d79:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23d80:	8b 00                	mov    (%rax),%eax
   23d82:	89 c0                	mov    %eax,%eax
   23d84:	48 01 d0             	add    %rdx,%rax
   23d87:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23d8e:	8b 12                	mov    (%rdx),%edx
   23d90:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23d93:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23d9a:	89 0a                	mov    %ecx,(%rdx)
   23d9c:	eb 1a                	jmp    23db8 <__vfprintf+0x2217>
   23d9e:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23da5:	48 8b 40 08          	mov    0x8(%rax),%rax
   23da9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23dad:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23db4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23db8:	48 8b 00             	mov    (%rax),%rax
   23dbb:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   23dc2:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   23dc9:	00 
   23dca:	75 0e                	jne    23dda <__vfprintf+0x2239>
   23dcc:	48 8d 05 ed da 00 00 	lea    0xdaed(%rip),%rax        # 318c0 <__func__.2555+0x17>
   23dd3:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   23dda:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   23de1:	78 4c                	js     23e2f <__vfprintf+0x228e>
   23de3:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   23de9:	48 63 d0             	movslq %eax,%rdx
   23dec:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   23df3:	be 00 00 00 00       	mov    $0x0,%esi
   23df8:	48 89 c7             	mov    %rax,%rdi
   23dfb:	e8 8f 42 00 00       	call   2808f <memchr>
   23e00:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
   23e07:	48 83 bd 20 fe ff ff 	cmpq   $0x0,-0x1e0(%rbp)
   23e0e:	00 
   23e0f:	74 10                	je     23e21 <__vfprintf+0x2280>
   23e11:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   23e18:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   23e1f:	eb 06                	jmp    23e27 <__vfprintf+0x2286>
   23e21:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   23e27:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   23e2d:	eb 35                	jmp    23e64 <__vfprintf+0x22c3>
   23e2f:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   23e36:	48 89 c7             	mov    %rax,%rdi
   23e39:	e8 2b d4 ff ff       	call   21269 <strlen>
   23e3e:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
   23e45:	b8 00 00 00 80       	mov    $0x80000000,%eax
   23e4a:	48 39 85 18 fe ff ff 	cmp    %rax,-0x1e8(%rbp)
   23e51:	0f 83 1c 21 00 00    	jae    25f73 <__vfprintf+0x43d2>
   23e57:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
   23e5e:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   23e64:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   23e6b:	e9 5c 0d 00 00       	jmp    24bcc <__vfprintf+0x302b>
   23e70:	83 8d 70 fd ff ff 10 	orl    $0x10,-0x290(%rbp)
   23e77:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23e7d:	25 00 10 00 00       	and    $0x1000,%eax
   23e82:	85 c0                	test   %eax,%eax
   23e84:	0f 84 9a 00 00 00    	je     23f24 <__vfprintf+0x2383>
   23e8a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23e91:	48 85 c0             	test   %rax,%rax
   23e94:	74 27                	je     23ebd <__vfprintf+0x231c>
   23e96:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23e9d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23ea3:	8d 50 01             	lea    0x1(%rax),%edx
   23ea6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23eac:	48 98                	cltq   
   23eae:	48 c1 e0 04          	shl    $0x4,%rax
   23eb2:	48 01 c8             	add    %rcx,%rax
   23eb5:	48 8b 00             	mov    (%rax),%rax
   23eb8:	e9 0b 05 00 00       	jmp    243c8 <__vfprintf+0x2827>
   23ebd:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23ec4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ecb:	8b 00                	mov    (%rax),%eax
   23ecd:	83 f8 2f             	cmp    $0x2f,%eax
   23ed0:	77 30                	ja     23f02 <__vfprintf+0x2361>
   23ed2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ed9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23edd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23ee4:	8b 00                	mov    (%rax),%eax
   23ee6:	89 c0                	mov    %eax,%eax
   23ee8:	48 01 d0             	add    %rdx,%rax
   23eeb:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23ef2:	8b 12                	mov    (%rdx),%edx
   23ef4:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23ef7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23efe:	89 0a                	mov    %ecx,(%rdx)
   23f00:	eb 1a                	jmp    23f1c <__vfprintf+0x237b>
   23f02:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23f09:	48 8b 40 08          	mov    0x8(%rax),%rax
   23f0d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23f11:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23f18:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23f1c:	48 8b 00             	mov    (%rax),%rax
   23f1f:	e9 a4 04 00 00       	jmp    243c8 <__vfprintf+0x2827>
   23f24:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23f2a:	83 e0 20             	and    $0x20,%eax
   23f2d:	85 c0                	test   %eax,%eax
   23f2f:	0f 84 9a 00 00 00    	je     23fcf <__vfprintf+0x242e>
   23f35:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23f3c:	48 85 c0             	test   %rax,%rax
   23f3f:	74 27                	je     23f68 <__vfprintf+0x23c7>
   23f41:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23f48:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23f4e:	8d 50 01             	lea    0x1(%rax),%edx
   23f51:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   23f57:	48 98                	cltq   
   23f59:	48 c1 e0 04          	shl    $0x4,%rax
   23f5d:	48 01 c8             	add    %rcx,%rax
   23f60:	48 8b 00             	mov    (%rax),%rax
   23f63:	e9 60 04 00 00       	jmp    243c8 <__vfprintf+0x2827>
   23f68:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   23f6f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23f76:	8b 00                	mov    (%rax),%eax
   23f78:	83 f8 2f             	cmp    $0x2f,%eax
   23f7b:	77 30                	ja     23fad <__vfprintf+0x240c>
   23f7d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23f84:	48 8b 50 10          	mov    0x10(%rax),%rdx
   23f88:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23f8f:	8b 00                	mov    (%rax),%eax
   23f91:	89 c0                	mov    %eax,%eax
   23f93:	48 01 d0             	add    %rdx,%rax
   23f96:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23f9d:	8b 12                	mov    (%rdx),%edx
   23f9f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   23fa2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23fa9:	89 0a                	mov    %ecx,(%rdx)
   23fab:	eb 1a                	jmp    23fc7 <__vfprintf+0x2426>
   23fad:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   23fb4:	48 8b 40 08          	mov    0x8(%rax),%rax
   23fb8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23fbc:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   23fc3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23fc7:	48 8b 00             	mov    (%rax),%rax
   23fca:	e9 f9 03 00 00       	jmp    243c8 <__vfprintf+0x2827>
   23fcf:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   23fd5:	83 e0 10             	and    $0x10,%eax
   23fd8:	85 c0                	test   %eax,%eax
   23fda:	0f 84 9a 00 00 00    	je     2407a <__vfprintf+0x24d9>
   23fe0:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   23fe7:	48 85 c0             	test   %rax,%rax
   23fea:	74 27                	je     24013 <__vfprintf+0x2472>
   23fec:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   23ff3:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   23ff9:	8d 50 01             	lea    0x1(%rax),%edx
   23ffc:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24002:	48 98                	cltq   
   24004:	48 c1 e0 04          	shl    $0x4,%rax
   24008:	48 01 c8             	add    %rcx,%rax
   2400b:	48 8b 00             	mov    (%rax),%rax
   2400e:	e9 b5 03 00 00       	jmp    243c8 <__vfprintf+0x2827>
   24013:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2401a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24021:	8b 00                	mov    (%rax),%eax
   24023:	83 f8 2f             	cmp    $0x2f,%eax
   24026:	77 30                	ja     24058 <__vfprintf+0x24b7>
   24028:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2402f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24033:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2403a:	8b 00                	mov    (%rax),%eax
   2403c:	89 c0                	mov    %eax,%eax
   2403e:	48 01 d0             	add    %rdx,%rax
   24041:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24048:	8b 12                	mov    (%rdx),%edx
   2404a:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2404d:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24054:	89 0a                	mov    %ecx,(%rdx)
   24056:	eb 1a                	jmp    24072 <__vfprintf+0x24d1>
   24058:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2405f:	48 8b 40 08          	mov    0x8(%rax),%rax
   24063:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24067:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2406e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24072:	48 8b 00             	mov    (%rax),%rax
   24075:	e9 4e 03 00 00       	jmp    243c8 <__vfprintf+0x2827>
   2407a:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24080:	25 00 02 00 00       	and    $0x200,%eax
   24085:	85 c0                	test   %eax,%eax
   24087:	0f 84 9a 00 00 00    	je     24127 <__vfprintf+0x2586>
   2408d:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24094:	48 85 c0             	test   %rax,%rax
   24097:	74 27                	je     240c0 <__vfprintf+0x251f>
   24099:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   240a0:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   240a6:	8d 50 01             	lea    0x1(%rax),%edx
   240a9:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   240af:	48 98                	cltq   
   240b1:	48 c1 e0 04          	shl    $0x4,%rax
   240b5:	48 01 c8             	add    %rcx,%rax
   240b8:	48 8b 00             	mov    (%rax),%rax
   240bb:	e9 08 03 00 00       	jmp    243c8 <__vfprintf+0x2827>
   240c0:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   240c7:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   240ce:	8b 00                	mov    (%rax),%eax
   240d0:	83 f8 2f             	cmp    $0x2f,%eax
   240d3:	77 30                	ja     24105 <__vfprintf+0x2564>
   240d5:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   240dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   240e0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   240e7:	8b 00                	mov    (%rax),%eax
   240e9:	89 c0                	mov    %eax,%eax
   240eb:	48 01 d0             	add    %rdx,%rax
   240ee:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   240f5:	8b 12                	mov    (%rdx),%edx
   240f7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   240fa:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24101:	89 0a                	mov    %ecx,(%rdx)
   24103:	eb 1a                	jmp    2411f <__vfprintf+0x257e>
   24105:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2410c:	48 8b 40 08          	mov    0x8(%rax),%rax
   24110:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24114:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2411b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2411f:	48 8b 00             	mov    (%rax),%rax
   24122:	e9 a1 02 00 00       	jmp    243c8 <__vfprintf+0x2827>
   24127:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2412d:	25 00 04 00 00       	and    $0x400,%eax
   24132:	85 c0                	test   %eax,%eax
   24134:	0f 84 9a 00 00 00    	je     241d4 <__vfprintf+0x2633>
   2413a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24141:	48 85 c0             	test   %rax,%rax
   24144:	74 27                	je     2416d <__vfprintf+0x25cc>
   24146:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2414d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24153:	8d 50 01             	lea    0x1(%rax),%edx
   24156:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2415c:	48 98                	cltq   
   2415e:	48 c1 e0 04          	shl    $0x4,%rax
   24162:	48 01 c8             	add    %rcx,%rax
   24165:	48 8b 00             	mov    (%rax),%rax
   24168:	e9 5b 02 00 00       	jmp    243c8 <__vfprintf+0x2827>
   2416d:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24174:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2417b:	8b 00                	mov    (%rax),%eax
   2417d:	83 f8 2f             	cmp    $0x2f,%eax
   24180:	77 30                	ja     241b2 <__vfprintf+0x2611>
   24182:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24189:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2418d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24194:	8b 00                	mov    (%rax),%eax
   24196:	89 c0                	mov    %eax,%eax
   24198:	48 01 d0             	add    %rdx,%rax
   2419b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   241a2:	8b 12                	mov    (%rdx),%edx
   241a4:	8d 4a 08             	lea    0x8(%rdx),%ecx
   241a7:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   241ae:	89 0a                	mov    %ecx,(%rdx)
   241b0:	eb 1a                	jmp    241cc <__vfprintf+0x262b>
   241b2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   241b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   241bd:	48 8d 48 08          	lea    0x8(%rax),%rcx
   241c1:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   241c8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   241cc:	48 8b 00             	mov    (%rax),%rax
   241cf:	e9 f4 01 00 00       	jmp    243c8 <__vfprintf+0x2827>
   241d4:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   241da:	83 e0 40             	and    $0x40,%eax
   241dd:	85 c0                	test   %eax,%eax
   241df:	0f 84 9e 00 00 00    	je     24283 <__vfprintf+0x26e2>
   241e5:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   241ec:	48 85 c0             	test   %rax,%rax
   241ef:	74 29                	je     2421a <__vfprintf+0x2679>
   241f1:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   241f8:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   241fe:	8d 50 01             	lea    0x1(%rax),%edx
   24201:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24207:	48 98                	cltq   
   24209:	48 c1 e0 04          	shl    $0x4,%rax
   2420d:	48 01 c8             	add    %rcx,%rax
   24210:	8b 00                	mov    (%rax),%eax
   24212:	0f b7 c0             	movzwl %ax,%eax
   24215:	e9 ae 01 00 00       	jmp    243c8 <__vfprintf+0x2827>
   2421a:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24221:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24228:	8b 00                	mov    (%rax),%eax
   2422a:	83 f8 2f             	cmp    $0x2f,%eax
   2422d:	77 30                	ja     2425f <__vfprintf+0x26be>
   2422f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24236:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2423a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24241:	8b 00                	mov    (%rax),%eax
   24243:	89 c0                	mov    %eax,%eax
   24245:	48 01 d0             	add    %rdx,%rax
   24248:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2424f:	8b 12                	mov    (%rdx),%edx
   24251:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24254:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2425b:	89 0a                	mov    %ecx,(%rdx)
   2425d:	eb 1a                	jmp    24279 <__vfprintf+0x26d8>
   2425f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24266:	48 8b 40 08          	mov    0x8(%rax),%rax
   2426a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2426e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24275:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24279:	8b 00                	mov    (%rax),%eax
   2427b:	0f b7 c0             	movzwl %ax,%eax
   2427e:	e9 45 01 00 00       	jmp    243c8 <__vfprintf+0x2827>
   24283:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24289:	25 00 08 00 00       	and    $0x800,%eax
   2428e:	85 c0                	test   %eax,%eax
   24290:	0f 84 9e 00 00 00    	je     24334 <__vfprintf+0x2793>
   24296:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2429d:	48 85 c0             	test   %rax,%rax
   242a0:	74 29                	je     242cb <__vfprintf+0x272a>
   242a2:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   242a9:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   242af:	8d 50 01             	lea    0x1(%rax),%edx
   242b2:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   242b8:	48 98                	cltq   
   242ba:	48 c1 e0 04          	shl    $0x4,%rax
   242be:	48 01 c8             	add    %rcx,%rax
   242c1:	8b 00                	mov    (%rax),%eax
   242c3:	0f b6 c0             	movzbl %al,%eax
   242c6:	e9 fd 00 00 00       	jmp    243c8 <__vfprintf+0x2827>
   242cb:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   242d2:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   242d9:	8b 00                	mov    (%rax),%eax
   242db:	83 f8 2f             	cmp    $0x2f,%eax
   242de:	77 30                	ja     24310 <__vfprintf+0x276f>
   242e0:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   242e7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   242eb:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   242f2:	8b 00                	mov    (%rax),%eax
   242f4:	89 c0                	mov    %eax,%eax
   242f6:	48 01 d0             	add    %rdx,%rax
   242f9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24300:	8b 12                	mov    (%rdx),%edx
   24302:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24305:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2430c:	89 0a                	mov    %ecx,(%rdx)
   2430e:	eb 1a                	jmp    2432a <__vfprintf+0x2789>
   24310:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24317:	48 8b 40 08          	mov    0x8(%rax),%rax
   2431b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2431f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24326:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2432a:	8b 00                	mov    (%rax),%eax
   2432c:	0f b6 c0             	movzbl %al,%eax
   2432f:	e9 94 00 00 00       	jmp    243c8 <__vfprintf+0x2827>
   24334:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2433b:	48 85 c0             	test   %rax,%rax
   2433e:	74 25                	je     24365 <__vfprintf+0x27c4>
   24340:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24347:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2434d:	8d 50 01             	lea    0x1(%rax),%edx
   24350:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24356:	48 98                	cltq   
   24358:	48 c1 e0 04          	shl    $0x4,%rax
   2435c:	48 01 c8             	add    %rcx,%rax
   2435f:	8b 00                	mov    (%rax),%eax
   24361:	89 c0                	mov    %eax,%eax
   24363:	eb 63                	jmp    243c8 <__vfprintf+0x2827>
   24365:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2436c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24373:	8b 00                	mov    (%rax),%eax
   24375:	83 f8 2f             	cmp    $0x2f,%eax
   24378:	77 30                	ja     243aa <__vfprintf+0x2809>
   2437a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24381:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24385:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2438c:	8b 00                	mov    (%rax),%eax
   2438e:	89 c0                	mov    %eax,%eax
   24390:	48 01 d0             	add    %rdx,%rax
   24393:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2439a:	8b 12                	mov    (%rdx),%edx
   2439c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2439f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   243a6:	89 0a                	mov    %ecx,(%rdx)
   243a8:	eb 1a                	jmp    243c4 <__vfprintf+0x2823>
   243aa:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   243b1:	48 8b 40 08          	mov    0x8(%rax),%rax
   243b5:	48 8d 48 08          	lea    0x8(%rax),%rcx
   243b9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   243c0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   243c4:	8b 00                	mov    (%rax),%eax
   243c6:	89 c0                	mov    %eax,%eax
   243c8:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   243cf:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
   243d6:	00 00 00 
   243d9:	e9 a3 05 00 00       	jmp    24981 <__vfprintf+0x2de0>
   243de:	48 8d 05 5b d8 00 00 	lea    0xd85b(%rip),%rax        # 31c40 <xdigs_upper.3344>
   243e5:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   243ec:	eb 0e                	jmp    243fc <__vfprintf+0x285b>
   243ee:	48 8d 05 3b d8 00 00 	lea    0xd83b(%rip),%rax        # 31c30 <xdigs_lower.3343>
   243f5:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   243fc:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24402:	25 00 10 00 00       	and    $0x1000,%eax
   24407:	85 c0                	test   %eax,%eax
   24409:	0f 84 9a 00 00 00    	je     244a9 <__vfprintf+0x2908>
   2440f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24416:	48 85 c0             	test   %rax,%rax
   24419:	74 27                	je     24442 <__vfprintf+0x28a1>
   2441b:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24422:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24428:	8d 50 01             	lea    0x1(%rax),%edx
   2442b:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24431:	48 98                	cltq   
   24433:	48 c1 e0 04          	shl    $0x4,%rax
   24437:	48 01 c8             	add    %rcx,%rax
   2443a:	48 8b 00             	mov    (%rax),%rax
   2443d:	e9 0b 05 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24442:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24449:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24450:	8b 00                	mov    (%rax),%eax
   24452:	83 f8 2f             	cmp    $0x2f,%eax
   24455:	77 30                	ja     24487 <__vfprintf+0x28e6>
   24457:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2445e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24462:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24469:	8b 00                	mov    (%rax),%eax
   2446b:	89 c0                	mov    %eax,%eax
   2446d:	48 01 d0             	add    %rdx,%rax
   24470:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24477:	8b 12                	mov    (%rdx),%edx
   24479:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2447c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24483:	89 0a                	mov    %ecx,(%rdx)
   24485:	eb 1a                	jmp    244a1 <__vfprintf+0x2900>
   24487:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2448e:	48 8b 40 08          	mov    0x8(%rax),%rax
   24492:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24496:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2449d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   244a1:	48 8b 00             	mov    (%rax),%rax
   244a4:	e9 a4 04 00 00       	jmp    2494d <__vfprintf+0x2dac>
   244a9:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   244af:	83 e0 20             	and    $0x20,%eax
   244b2:	85 c0                	test   %eax,%eax
   244b4:	0f 84 9a 00 00 00    	je     24554 <__vfprintf+0x29b3>
   244ba:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   244c1:	48 85 c0             	test   %rax,%rax
   244c4:	74 27                	je     244ed <__vfprintf+0x294c>
   244c6:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   244cd:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   244d3:	8d 50 01             	lea    0x1(%rax),%edx
   244d6:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   244dc:	48 98                	cltq   
   244de:	48 c1 e0 04          	shl    $0x4,%rax
   244e2:	48 01 c8             	add    %rcx,%rax
   244e5:	48 8b 00             	mov    (%rax),%rax
   244e8:	e9 60 04 00 00       	jmp    2494d <__vfprintf+0x2dac>
   244ed:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   244f4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   244fb:	8b 00                	mov    (%rax),%eax
   244fd:	83 f8 2f             	cmp    $0x2f,%eax
   24500:	77 30                	ja     24532 <__vfprintf+0x2991>
   24502:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24509:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2450d:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24514:	8b 00                	mov    (%rax),%eax
   24516:	89 c0                	mov    %eax,%eax
   24518:	48 01 d0             	add    %rdx,%rax
   2451b:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24522:	8b 12                	mov    (%rdx),%edx
   24524:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24527:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2452e:	89 0a                	mov    %ecx,(%rdx)
   24530:	eb 1a                	jmp    2454c <__vfprintf+0x29ab>
   24532:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24539:	48 8b 40 08          	mov    0x8(%rax),%rax
   2453d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24541:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24548:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2454c:	48 8b 00             	mov    (%rax),%rax
   2454f:	e9 f9 03 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24554:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2455a:	83 e0 10             	and    $0x10,%eax
   2455d:	85 c0                	test   %eax,%eax
   2455f:	0f 84 9a 00 00 00    	je     245ff <__vfprintf+0x2a5e>
   24565:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   2456c:	48 85 c0             	test   %rax,%rax
   2456f:	74 27                	je     24598 <__vfprintf+0x29f7>
   24571:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24578:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2457e:	8d 50 01             	lea    0x1(%rax),%edx
   24581:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24587:	48 98                	cltq   
   24589:	48 c1 e0 04          	shl    $0x4,%rax
   2458d:	48 01 c8             	add    %rcx,%rax
   24590:	48 8b 00             	mov    (%rax),%rax
   24593:	e9 b5 03 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24598:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2459f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245a6:	8b 00                	mov    (%rax),%eax
   245a8:	83 f8 2f             	cmp    $0x2f,%eax
   245ab:	77 30                	ja     245dd <__vfprintf+0x2a3c>
   245ad:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   245b8:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245bf:	8b 00                	mov    (%rax),%eax
   245c1:	89 c0                	mov    %eax,%eax
   245c3:	48 01 d0             	add    %rdx,%rax
   245c6:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   245cd:	8b 12                	mov    (%rdx),%edx
   245cf:	8d 4a 08             	lea    0x8(%rdx),%ecx
   245d2:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   245d9:	89 0a                	mov    %ecx,(%rdx)
   245db:	eb 1a                	jmp    245f7 <__vfprintf+0x2a56>
   245dd:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   245e4:	48 8b 40 08          	mov    0x8(%rax),%rax
   245e8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   245ec:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   245f3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   245f7:	48 8b 00             	mov    (%rax),%rax
   245fa:	e9 4e 03 00 00       	jmp    2494d <__vfprintf+0x2dac>
   245ff:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24605:	25 00 02 00 00       	and    $0x200,%eax
   2460a:	85 c0                	test   %eax,%eax
   2460c:	0f 84 9a 00 00 00    	je     246ac <__vfprintf+0x2b0b>
   24612:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24619:	48 85 c0             	test   %rax,%rax
   2461c:	74 27                	je     24645 <__vfprintf+0x2aa4>
   2461e:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   24625:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   2462b:	8d 50 01             	lea    0x1(%rax),%edx
   2462e:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   24634:	48 98                	cltq   
   24636:	48 c1 e0 04          	shl    $0x4,%rax
   2463a:	48 01 c8             	add    %rcx,%rax
   2463d:	48 8b 00             	mov    (%rax),%rax
   24640:	e9 08 03 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24645:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   2464c:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24653:	8b 00                	mov    (%rax),%eax
   24655:	83 f8 2f             	cmp    $0x2f,%eax
   24658:	77 30                	ja     2468a <__vfprintf+0x2ae9>
   2465a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24661:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24665:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2466c:	8b 00                	mov    (%rax),%eax
   2466e:	89 c0                	mov    %eax,%eax
   24670:	48 01 d0             	add    %rdx,%rax
   24673:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2467a:	8b 12                	mov    (%rdx),%edx
   2467c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2467f:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24686:	89 0a                	mov    %ecx,(%rdx)
   24688:	eb 1a                	jmp    246a4 <__vfprintf+0x2b03>
   2468a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24691:	48 8b 40 08          	mov    0x8(%rax),%rax
   24695:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24699:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   246a0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   246a4:	48 8b 00             	mov    (%rax),%rax
   246a7:	e9 a1 02 00 00       	jmp    2494d <__vfprintf+0x2dac>
   246ac:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   246b2:	25 00 04 00 00       	and    $0x400,%eax
   246b7:	85 c0                	test   %eax,%eax
   246b9:	0f 84 9a 00 00 00    	je     24759 <__vfprintf+0x2bb8>
   246bf:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   246c6:	48 85 c0             	test   %rax,%rax
   246c9:	74 27                	je     246f2 <__vfprintf+0x2b51>
   246cb:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   246d2:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   246d8:	8d 50 01             	lea    0x1(%rax),%edx
   246db:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   246e1:	48 98                	cltq   
   246e3:	48 c1 e0 04          	shl    $0x4,%rax
   246e7:	48 01 c8             	add    %rcx,%rax
   246ea:	48 8b 00             	mov    (%rax),%rax
   246ed:	e9 5b 02 00 00       	jmp    2494d <__vfprintf+0x2dac>
   246f2:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   246f9:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24700:	8b 00                	mov    (%rax),%eax
   24702:	83 f8 2f             	cmp    $0x2f,%eax
   24705:	77 30                	ja     24737 <__vfprintf+0x2b96>
   24707:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2470e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24712:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24719:	8b 00                	mov    (%rax),%eax
   2471b:	89 c0                	mov    %eax,%eax
   2471d:	48 01 d0             	add    %rdx,%rax
   24720:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24727:	8b 12                	mov    (%rdx),%edx
   24729:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2472c:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24733:	89 0a                	mov    %ecx,(%rdx)
   24735:	eb 1a                	jmp    24751 <__vfprintf+0x2bb0>
   24737:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2473e:	48 8b 40 08          	mov    0x8(%rax),%rax
   24742:	48 8d 48 08          	lea    0x8(%rax),%rcx
   24746:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2474d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24751:	48 8b 00             	mov    (%rax),%rax
   24754:	e9 f4 01 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24759:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2475f:	83 e0 40             	and    $0x40,%eax
   24762:	85 c0                	test   %eax,%eax
   24764:	0f 84 9e 00 00 00    	je     24808 <__vfprintf+0x2c67>
   2476a:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24771:	48 85 c0             	test   %rax,%rax
   24774:	74 29                	je     2479f <__vfprintf+0x2bfe>
   24776:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2477d:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24783:	8d 50 01             	lea    0x1(%rax),%edx
   24786:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2478c:	48 98                	cltq   
   2478e:	48 c1 e0 04          	shl    $0x4,%rax
   24792:	48 01 c8             	add    %rcx,%rax
   24795:	8b 00                	mov    (%rax),%eax
   24797:	0f b7 c0             	movzwl %ax,%eax
   2479a:	e9 ae 01 00 00       	jmp    2494d <__vfprintf+0x2dac>
   2479f:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   247a6:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   247ad:	8b 00                	mov    (%rax),%eax
   247af:	83 f8 2f             	cmp    $0x2f,%eax
   247b2:	77 30                	ja     247e4 <__vfprintf+0x2c43>
   247b4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   247bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   247bf:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   247c6:	8b 00                	mov    (%rax),%eax
   247c8:	89 c0                	mov    %eax,%eax
   247ca:	48 01 d0             	add    %rdx,%rax
   247cd:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   247d4:	8b 12                	mov    (%rdx),%edx
   247d6:	8d 4a 08             	lea    0x8(%rdx),%ecx
   247d9:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   247e0:	89 0a                	mov    %ecx,(%rdx)
   247e2:	eb 1a                	jmp    247fe <__vfprintf+0x2c5d>
   247e4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   247eb:	48 8b 40 08          	mov    0x8(%rax),%rax
   247ef:	48 8d 48 08          	lea    0x8(%rax),%rcx
   247f3:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   247fa:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   247fe:	8b 00                	mov    (%rax),%eax
   24800:	0f b7 c0             	movzwl %ax,%eax
   24803:	e9 45 01 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24808:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2480e:	25 00 08 00 00       	and    $0x800,%eax
   24813:	85 c0                	test   %eax,%eax
   24815:	0f 84 9e 00 00 00    	je     248b9 <__vfprintf+0x2d18>
   2481b:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   24822:	48 85 c0             	test   %rax,%rax
   24825:	74 29                	je     24850 <__vfprintf+0x2caf>
   24827:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   2482e:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   24834:	8d 50 01             	lea    0x1(%rax),%edx
   24837:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   2483d:	48 98                	cltq   
   2483f:	48 c1 e0 04          	shl    $0x4,%rax
   24843:	48 01 c8             	add    %rcx,%rax
   24846:	8b 00                	mov    (%rax),%eax
   24848:	0f b6 c0             	movzbl %al,%eax
   2484b:	e9 fd 00 00 00       	jmp    2494d <__vfprintf+0x2dac>
   24850:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   24857:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2485e:	8b 00                	mov    (%rax),%eax
   24860:	83 f8 2f             	cmp    $0x2f,%eax
   24863:	77 30                	ja     24895 <__vfprintf+0x2cf4>
   24865:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2486c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24870:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24877:	8b 00                	mov    (%rax),%eax
   24879:	89 c0                	mov    %eax,%eax
   2487b:	48 01 d0             	add    %rdx,%rax
   2487e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24885:	8b 12                	mov    (%rdx),%edx
   24887:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2488a:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24891:	89 0a                	mov    %ecx,(%rdx)
   24893:	eb 1a                	jmp    248af <__vfprintf+0x2d0e>
   24895:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   2489c:	48 8b 40 08          	mov    0x8(%rax),%rax
   248a0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   248a4:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   248ab:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   248af:	8b 00                	mov    (%rax),%eax
   248b1:	0f b6 c0             	movzbl %al,%eax
   248b4:	e9 94 00 00 00       	jmp    2494d <__vfprintf+0x2dac>
   248b9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   248c0:	48 85 c0             	test   %rax,%rax
   248c3:	74 25                	je     248ea <__vfprintf+0x2d49>
   248c5:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
   248cc:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
   248d2:	8d 50 01             	lea    0x1(%rax),%edx
   248d5:	89 95 9c fd ff ff    	mov    %edx,-0x264(%rbp)
   248db:	48 98                	cltq   
   248dd:	48 c1 e0 04          	shl    $0x4,%rax
   248e1:	48 01 c8             	add    %rcx,%rax
   248e4:	8b 00                	mov    (%rax),%eax
   248e6:	89 c0                	mov    %eax,%eax
   248e8:	eb 63                	jmp    2494d <__vfprintf+0x2dac>
   248ea:	83 85 9c fd ff ff 01 	addl   $0x1,-0x264(%rbp)
   248f1:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   248f8:	8b 00                	mov    (%rax),%eax
   248fa:	83 f8 2f             	cmp    $0x2f,%eax
   248fd:	77 30                	ja     2492f <__vfprintf+0x2d8e>
   248ff:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24906:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2490a:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24911:	8b 00                	mov    (%rax),%eax
   24913:	89 c0                	mov    %eax,%eax
   24915:	48 01 d0             	add    %rdx,%rax
   24918:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2491f:	8b 12                	mov    (%rdx),%edx
   24921:	8d 4a 08             	lea    0x8(%rdx),%ecx
   24924:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   2492b:	89 0a                	mov    %ecx,(%rdx)
   2492d:	eb 1a                	jmp    24949 <__vfprintf+0x2da8>
   2492f:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
   24936:	48 8b 40 08          	mov    0x8(%rax),%rax
   2493a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2493e:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   24945:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   24949:	8b 00                	mov    (%rax),%eax
   2494b:	89 c0                	mov    %eax,%eax
   2494d:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   24954:	c7 85 8c fd ff ff 02 	movl   $0x2,-0x274(%rbp)
   2495b:	00 00 00 
   2495e:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24964:	83 e0 01             	and    $0x1,%eax
   24967:	85 c0                	test   %eax,%eax
   24969:	74 15                	je     24980 <__vfprintf+0x2ddf>
   2496b:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   24972:	00 
   24973:	74 0b                	je     24980 <__vfprintf+0x2ddf>
   24975:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   2497b:	88 45 87             	mov    %al,-0x79(%rbp)
   2497e:	eb 01                	jmp    24981 <__vfprintf+0x2de0>
   24980:	90                   	nop
   24981:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   24988:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   2498e:	89 85 90 fd ff ff    	mov    %eax,-0x270(%rbp)
   24994:	83 bd 90 fd ff ff 00 	cmpl   $0x0,-0x270(%rbp)
   2499b:	78 0a                	js     249a7 <__vfprintf+0x2e06>
   2499d:	81 a5 70 fd ff ff 7f 	andl   $0xffffff7f,-0x290(%rbp)
   249a4:	ff ff ff 
   249a7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   249ab:	48 83 c0 64          	add    $0x64,%rax
   249af:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   249b6:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   249bd:	00 
   249be:	75 0d                	jne    249cd <__vfprintf+0x2e2c>
   249c0:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   249c7:	0f 84 98 01 00 00    	je     24b65 <__vfprintf+0x2fc4>
   249cd:	83 bd 8c fd ff ff 02 	cmpl   $0x2,-0x274(%rbp)
   249d4:	0f 84 27 01 00 00    	je     24b01 <__vfprintf+0x2f60>
   249da:	83 bd 8c fd ff ff 02 	cmpl   $0x2,-0x274(%rbp)
   249e1:	0f 87 59 01 00 00    	ja     24b40 <__vfprintf+0x2f9f>
   249e7:	83 bd 8c fd ff ff 00 	cmpl   $0x0,-0x274(%rbp)
   249ee:	74 13                	je     24a03 <__vfprintf+0x2e62>
   249f0:	83 bd 8c fd ff ff 01 	cmpl   $0x1,-0x274(%rbp)
   249f7:	0f 84 da 00 00 00    	je     24ad7 <__vfprintf+0x2f36>
   249fd:	e9 3e 01 00 00       	jmp    24b40 <__vfprintf+0x2f9f>
   24a02:	90                   	nop
   24a03:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   24a0a:	83 e0 07             	and    $0x7,%eax
   24a0d:	83 c0 30             	add    $0x30,%eax
   24a10:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   24a17:	01 
   24a18:	89 c2                	mov    %eax,%edx
   24a1a:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24a21:	88 10                	mov    %dl,(%rax)
   24a23:	48 c1 ad e0 fd ff ff 	shrq   $0x3,-0x220(%rbp)
   24a2a:	03 
   24a2b:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   24a32:	00 
   24a33:	75 cd                	jne    24a02 <__vfprintf+0x2e61>
   24a35:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24a3b:	83 e0 01             	and    $0x1,%eax
   24a3e:	85 c0                	test   %eax,%eax
   24a40:	0f 84 22 01 00 00    	je     24b68 <__vfprintf+0x2fc7>
   24a46:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24a4d:	0f b6 00             	movzbl (%rax),%eax
   24a50:	3c 30                	cmp    $0x30,%al
   24a52:	0f 84 10 01 00 00    	je     24b68 <__vfprintf+0x2fc7>
   24a58:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   24a5f:	01 
   24a60:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24a67:	c6 00 30             	movb   $0x30,(%rax)
   24a6a:	e9 f9 00 00 00       	jmp    24b68 <__vfprintf+0x2fc7>
   24a6f:	48 8b 8d e0 fd ff ff 	mov    -0x220(%rbp),%rcx
   24a76:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   24a7d:	cc cc cc 
   24a80:	48 89 c8             	mov    %rcx,%rax
   24a83:	48 f7 e2             	mul    %rdx
   24a86:	48 c1 ea 03          	shr    $0x3,%rdx
   24a8a:	48 89 d0             	mov    %rdx,%rax
   24a8d:	48 c1 e0 02          	shl    $0x2,%rax
   24a91:	48 01 d0             	add    %rdx,%rax
   24a94:	48 01 c0             	add    %rax,%rax
   24a97:	48 29 c1             	sub    %rax,%rcx
   24a9a:	48 89 ca             	mov    %rcx,%rdx
   24a9d:	89 d0                	mov    %edx,%eax
   24a9f:	83 c0 30             	add    $0x30,%eax
   24aa2:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   24aa9:	01 
   24aaa:	89 c2                	mov    %eax,%edx
   24aac:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24ab3:	88 10                	mov    %dl,(%rax)
   24ab5:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   24abc:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   24ac3:	cc cc cc 
   24ac6:	48 f7 e2             	mul    %rdx
   24ac9:	48 89 d0             	mov    %rdx,%rax
   24acc:	48 c1 e8 03          	shr    $0x3,%rax
   24ad0:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
   24ad7:	48 83 bd e0 fd ff ff 	cmpq   $0x9,-0x220(%rbp)
   24ade:	09 
   24adf:	77 8e                	ja     24a6f <__vfprintf+0x2ece>
   24ae1:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   24ae8:	83 c0 30             	add    $0x30,%eax
   24aeb:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   24af2:	01 
   24af3:	89 c2                	mov    %eax,%edx
   24af5:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24afc:	88 10                	mov    %dl,(%rax)
   24afe:	eb 69                	jmp    24b69 <__vfprintf+0x2fc8>
   24b00:	90                   	nop
   24b01:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
   24b08:	83 e0 0f             	and    $0xf,%eax
   24b0b:	48 89 c2             	mov    %rax,%rdx
   24b0e:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   24b15:	48 01 d0             	add    %rdx,%rax
   24b18:	48 83 ad c8 fd ff ff 	subq   $0x1,-0x238(%rbp)
   24b1f:	01 
   24b20:	0f b6 10             	movzbl (%rax),%edx
   24b23:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24b2a:	88 10                	mov    %dl,(%rax)
   24b2c:	48 c1 ad e0 fd ff ff 	shrq   $0x4,-0x220(%rbp)
   24b33:	04 
   24b34:	48 83 bd e0 fd ff ff 	cmpq   $0x0,-0x220(%rbp)
   24b3b:	00 
   24b3c:	75 c2                	jne    24b00 <__vfprintf+0x2f5f>
   24b3e:	eb 29                	jmp    24b69 <__vfprintf+0x2fc8>
   24b40:	48 8d 05 80 cd 00 00 	lea    0xcd80(%rip),%rax        # 318c7 <__func__.2555+0x1e>
   24b47:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   24b4e:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24b55:	48 89 c7             	mov    %rax,%rdi
   24b58:	e8 0c c7 ff ff       	call   21269 <strlen>
   24b5d:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   24b63:	eb 28                	jmp    24b8d <__vfprintf+0x2fec>
   24b65:	90                   	nop
   24b66:	eb 01                	jmp    24b69 <__vfprintf+0x2fc8>
   24b68:	90                   	nop
   24b69:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24b6d:	48 83 c0 64          	add    $0x64,%rax
   24b71:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   24b78:	89 85 98 fd ff ff    	mov    %eax,-0x268(%rbp)
   24b7e:	83 bd 98 fd ff ff 64 	cmpl   $0x64,-0x268(%rbp)
   24b85:	7e 05                	jle    24b8c <__vfprintf+0x2feb>
   24b87:	e8 9f a9 00 00       	call   2f52b <abort>
   24b8c:	90                   	nop
   24b8d:	eb 3d                	jmp    24bcc <__vfprintf+0x302b>
   24b8f:	83 bd 64 fd ff ff 00 	cmpl   $0x0,-0x29c(%rbp)
   24b96:	0f 84 fd 12 00 00    	je     25e99 <__vfprintf+0x42f8>
   24b9c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24ba0:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
   24ba7:	8b 85 64 fd ff ff    	mov    -0x29c(%rbp),%eax
   24bad:	89 c2                	mov    %eax,%edx
   24baf:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   24bb6:	88 10                	mov    %dl,(%rax)
   24bb8:	c7 85 98 fd ff ff 01 	movl   $0x1,-0x268(%rbp)
   24bbf:	00 00 00 
   24bc2:	c6 85 56 fd ff ff 00 	movb   $0x0,-0x2aa(%rbp)
   24bc9:	eb 01                	jmp    24bcc <__vfprintf+0x302b>
   24bcb:	90                   	nop
   24bcc:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   24bd2:	39 85 98 fd ff ff    	cmp    %eax,-0x268(%rbp)
   24bd8:	0f 4d 85 98 fd ff ff 	cmovge -0x268(%rbp),%eax
   24bdf:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%rbp)
   24be5:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   24bec:	84 c0                	test   %al,%al
   24bee:	74 07                	je     24bf7 <__vfprintf+0x3056>
   24bf0:	83 85 94 fd ff ff 01 	addl   $0x1,-0x26c(%rbp)
   24bf7:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   24bfb:	84 c0                	test   %al,%al
   24bfd:	74 07                	je     24c06 <__vfprintf+0x3065>
   24bff:	83 85 94 fd ff ff 02 	addl   $0x2,-0x26c(%rbp)
   24c06:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24c0c:	25 84 00 00 00       	and    $0x84,%eax
   24c11:	85 c0                	test   %eax,%eax
   24c13:	0f 85 42 01 00 00    	jne    24d5b <__vfprintf+0x31ba>
   24c19:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   24c1f:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   24c25:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24c2b:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   24c32:	0f 8e 23 01 00 00    	jle    24d5b <__vfprintf+0x31ba>
   24c38:	e9 87 00 00 00       	jmp    24cc4 <__vfprintf+0x3123>
   24c3d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24c44:	48 8d 15 e5 44 01 00 	lea    0x144e5(%rip),%rdx        # 39130 <blanks.3341>
   24c4b:	48 89 10             	mov    %rdx,(%rax)
   24c4e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24c55:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   24c5c:	00 
   24c5d:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   24c63:	83 c0 10             	add    $0x10,%eax
   24c66:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24c6c:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24c73:	10 
   24c74:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24c7a:	83 c0 01             	add    $0x1,%eax
   24c7d:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24c83:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24c89:	83 f8 07             	cmp    $0x7,%eax
   24c8c:	7e 2f                	jle    24cbd <__vfprintf+0x311c>
   24c8e:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24c95:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24c9c:	48 89 d6             	mov    %rdx,%rsi
   24c9f:	48 89 c7             	mov    %rax,%rdi
   24ca2:	e8 c1 cc ff ff       	call   21968 <__sprint>
   24ca7:	85 c0                	test   %eax,%eax
   24ca9:	0f 85 2f 12 00 00    	jne    25ede <__vfprintf+0x433d>
   24caf:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24cb6:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24cbd:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   24cc4:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   24ccb:	0f 8f 6c ff ff ff    	jg     24c3d <__vfprintf+0x309c>
   24cd1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24cd8:	48 8d 15 51 44 01 00 	lea    0x14451(%rip),%rdx        # 39130 <blanks.3341>
   24cdf:	48 89 10             	mov    %rdx,(%rax)
   24ce2:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24ce8:	48 63 d0             	movslq %eax,%rdx
   24ceb:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24cf2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   24cf6:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   24cfc:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24d02:	01 d0                	add    %edx,%eax
   24d04:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24d0a:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24d11:	10 
   24d12:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24d18:	83 c0 01             	add    $0x1,%eax
   24d1b:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24d21:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24d27:	83 f8 07             	cmp    $0x7,%eax
   24d2a:	7e 2f                	jle    24d5b <__vfprintf+0x31ba>
   24d2c:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24d33:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24d3a:	48 89 d6             	mov    %rdx,%rsi
   24d3d:	48 89 c7             	mov    %rax,%rdi
   24d40:	e8 23 cc ff ff       	call   21968 <__sprint>
   24d45:	85 c0                	test   %eax,%eax
   24d47:	0f 85 94 11 00 00    	jne    25ee1 <__vfprintf+0x4340>
   24d4d:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24d54:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24d5b:	0f b6 85 56 fd ff ff 	movzbl -0x2aa(%rbp),%eax
   24d62:	84 c0                	test   %al,%al
   24d64:	0f 84 80 00 00 00    	je     24dea <__vfprintf+0x3249>
   24d6a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24d71:	48 8d 95 56 fd ff ff 	lea    -0x2aa(%rbp),%rdx
   24d78:	48 89 10             	mov    %rdx,(%rax)
   24d7b:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24d82:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   24d89:	00 
   24d8a:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   24d90:	83 c0 01             	add    $0x1,%eax
   24d93:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24d99:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24da0:	10 
   24da1:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24da7:	83 c0 01             	add    $0x1,%eax
   24daa:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24db0:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24db6:	83 f8 07             	cmp    $0x7,%eax
   24db9:	7e 2f                	jle    24dea <__vfprintf+0x3249>
   24dbb:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24dc2:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24dc9:	48 89 d6             	mov    %rdx,%rsi
   24dcc:	48 89 c7             	mov    %rax,%rdi
   24dcf:	e8 94 cb ff ff       	call   21968 <__sprint>
   24dd4:	85 c0                	test   %eax,%eax
   24dd6:	0f 85 08 11 00 00    	jne    25ee4 <__vfprintf+0x4343>
   24ddc:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24de3:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24dea:	0f b6 45 87          	movzbl -0x79(%rbp),%eax
   24dee:	84 c0                	test   %al,%al
   24df0:	0f 84 81 00 00 00    	je     24e77 <__vfprintf+0x32d6>
   24df6:	c6 45 86 30          	movb   $0x30,-0x7a(%rbp)
   24dfa:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24e01:	48 8d 55 86          	lea    -0x7a(%rbp),%rdx
   24e05:	48 89 10             	mov    %rdx,(%rax)
   24e08:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24e0f:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   24e16:	00 
   24e17:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   24e1d:	83 c0 02             	add    $0x2,%eax
   24e20:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24e26:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24e2d:	10 
   24e2e:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24e34:	83 c0 01             	add    $0x1,%eax
   24e37:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24e3d:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24e43:	83 f8 07             	cmp    $0x7,%eax
   24e46:	7e 2f                	jle    24e77 <__vfprintf+0x32d6>
   24e48:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24e4f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24e56:	48 89 d6             	mov    %rdx,%rsi
   24e59:	48 89 c7             	mov    %rax,%rdi
   24e5c:	e8 07 cb ff ff       	call   21968 <__sprint>
   24e61:	85 c0                	test   %eax,%eax
   24e63:	0f 85 7e 10 00 00    	jne    25ee7 <__vfprintf+0x4346>
   24e69:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24e70:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24e77:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   24e7d:	25 84 00 00 00       	and    $0x84,%eax
   24e82:	3d 80 00 00 00       	cmp    $0x80,%eax
   24e87:	0f 85 42 01 00 00    	jne    24fcf <__vfprintf+0x342e>
   24e8d:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   24e93:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   24e99:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24e9f:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   24ea6:	0f 8e 23 01 00 00    	jle    24fcf <__vfprintf+0x342e>
   24eac:	e9 87 00 00 00       	jmp    24f38 <__vfprintf+0x3397>
   24eb1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24eb8:	48 8d 15 81 42 01 00 	lea    0x14281(%rip),%rdx        # 39140 <zeroes.3342>
   24ebf:	48 89 10             	mov    %rdx,(%rax)
   24ec2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24ec9:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   24ed0:	00 
   24ed1:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   24ed7:	83 c0 10             	add    $0x10,%eax
   24eda:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24ee0:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24ee7:	10 
   24ee8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24eee:	83 c0 01             	add    $0x1,%eax
   24ef1:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24ef7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24efd:	83 f8 07             	cmp    $0x7,%eax
   24f00:	7e 2f                	jle    24f31 <__vfprintf+0x3390>
   24f02:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24f09:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24f10:	48 89 d6             	mov    %rdx,%rsi
   24f13:	48 89 c7             	mov    %rax,%rdi
   24f16:	e8 4d ca ff ff       	call   21968 <__sprint>
   24f1b:	85 c0                	test   %eax,%eax
   24f1d:	0f 85 c7 0f 00 00    	jne    25eea <__vfprintf+0x4349>
   24f23:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24f2a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24f31:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   24f38:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   24f3f:	0f 8f 6c ff ff ff    	jg     24eb1 <__vfprintf+0x3310>
   24f45:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24f4c:	48 8d 15 ed 41 01 00 	lea    0x141ed(%rip),%rdx        # 39140 <zeroes.3342>
   24f53:	48 89 10             	mov    %rdx,(%rax)
   24f56:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24f5c:	48 63 d0             	movslq %eax,%rdx
   24f5f:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24f66:	48 89 50 08          	mov    %rdx,0x8(%rax)
   24f6a:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   24f70:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   24f76:	01 d0                	add    %edx,%eax
   24f78:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   24f7e:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   24f85:	10 
   24f86:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24f8c:	83 c0 01             	add    $0x1,%eax
   24f8f:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   24f95:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   24f9b:	83 f8 07             	cmp    $0x7,%eax
   24f9e:	7e 2f                	jle    24fcf <__vfprintf+0x342e>
   24fa0:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   24fa7:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   24fae:	48 89 d6             	mov    %rdx,%rsi
   24fb1:	48 89 c7             	mov    %rax,%rdi
   24fb4:	e8 af c9 ff ff       	call   21968 <__sprint>
   24fb9:	85 c0                	test   %eax,%eax
   24fbb:	0f 85 2c 0f 00 00    	jne    25eed <__vfprintf+0x434c>
   24fc1:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   24fc8:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   24fcf:	8b 85 90 fd ff ff    	mov    -0x270(%rbp),%eax
   24fd5:	2b 85 98 fd ff ff    	sub    -0x268(%rbp),%eax
   24fdb:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   24fe1:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   24fe8:	0f 8e 23 01 00 00    	jle    25111 <__vfprintf+0x3570>
   24fee:	e9 87 00 00 00       	jmp    2507a <__vfprintf+0x34d9>
   24ff3:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   24ffa:	48 8d 15 3f 41 01 00 	lea    0x1413f(%rip),%rdx        # 39140 <zeroes.3342>
   25001:	48 89 10             	mov    %rdx,(%rax)
   25004:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2500b:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   25012:	00 
   25013:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25019:	83 c0 10             	add    $0x10,%eax
   2501c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25022:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25029:	10 
   2502a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25030:	83 c0 01             	add    $0x1,%eax
   25033:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25039:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2503f:	83 f8 07             	cmp    $0x7,%eax
   25042:	7e 2f                	jle    25073 <__vfprintf+0x34d2>
   25044:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2504b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25052:	48 89 d6             	mov    %rdx,%rsi
   25055:	48 89 c7             	mov    %rax,%rdi
   25058:	e8 0b c9 ff ff       	call   21968 <__sprint>
   2505d:	85 c0                	test   %eax,%eax
   2505f:	0f 85 8b 0e 00 00    	jne    25ef0 <__vfprintf+0x434f>
   25065:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2506c:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25073:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   2507a:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   25081:	0f 8f 6c ff ff ff    	jg     24ff3 <__vfprintf+0x3452>
   25087:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2508e:	48 8d 15 ab 40 01 00 	lea    0x140ab(%rip),%rdx        # 39140 <zeroes.3342>
   25095:	48 89 10             	mov    %rdx,(%rax)
   25098:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   2509e:	48 63 d0             	movslq %eax,%rdx
   250a1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   250a8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   250ac:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   250b2:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   250b8:	01 d0                	add    %edx,%eax
   250ba:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   250c0:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   250c7:	10 
   250c8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   250ce:	83 c0 01             	add    $0x1,%eax
   250d1:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   250d7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   250dd:	83 f8 07             	cmp    $0x7,%eax
   250e0:	7e 2f                	jle    25111 <__vfprintf+0x3570>
   250e2:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   250e9:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   250f0:	48 89 d6             	mov    %rdx,%rsi
   250f3:	48 89 c7             	mov    %rax,%rdi
   250f6:	e8 6d c8 ff ff       	call   21968 <__sprint>
   250fb:	85 c0                	test   %eax,%eax
   250fd:	0f 85 f0 0d 00 00    	jne    25ef3 <__vfprintf+0x4352>
   25103:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2510a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25111:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25117:	25 00 01 00 00       	and    $0x100,%eax
   2511c:	85 c0                	test   %eax,%eax
   2511e:	0f 85 93 00 00 00    	jne    251b7 <__vfprintf+0x3616>
   25124:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2512b:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   25132:	48 89 10             	mov    %rdx,(%rax)
   25135:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   2513b:	48 63 d0             	movslq %eax,%rdx
   2513e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25145:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25149:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   2514f:	8b 85 98 fd ff ff    	mov    -0x268(%rbp),%eax
   25155:	01 d0                	add    %edx,%eax
   25157:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2515d:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25164:	10 
   25165:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2516b:	83 c0 01             	add    $0x1,%eax
   2516e:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25174:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2517a:	83 f8 07             	cmp    $0x7,%eax
   2517d:	0f 8e 3b 0b 00 00    	jle    25cbe <__vfprintf+0x411d>
   25183:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2518a:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25191:	48 89 d6             	mov    %rdx,%rsi
   25194:	48 89 c7             	mov    %rax,%rdi
   25197:	e8 cc c7 ff ff       	call   21968 <__sprint>
   2519c:	85 c0                	test   %eax,%eax
   2519e:	0f 85 52 0d 00 00    	jne    25ef6 <__vfprintf+0x4355>
   251a4:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   251ab:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   251b2:	e9 07 0b 00 00       	jmp    25cbe <__vfprintf+0x411d>
   251b7:	80 bd 57 fd ff ff 00 	cmpb   $0x0,-0x2a9(%rbp)
   251be:	0f 85 59 07 00 00    	jne    2591d <__vfprintf+0x3d7c>
   251c4:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   251ca:	85 c0                	test   %eax,%eax
   251cc:	0f 8f 69 02 00 00    	jg     2543b <__vfprintf+0x389a>
   251d2:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   251d9:	48 8d 15 60 3f 01 00 	lea    0x13f60(%rip),%rdx        # 39140 <zeroes.3342>
   251e0:	48 89 10             	mov    %rdx,(%rax)
   251e3:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   251ea:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   251f1:	00 
   251f2:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   251f8:	83 c0 01             	add    $0x1,%eax
   251fb:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25201:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25208:	10 
   25209:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2520f:	83 c0 01             	add    $0x1,%eax
   25212:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25218:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2521e:	83 f8 07             	cmp    $0x7,%eax
   25221:	7e 2f                	jle    25252 <__vfprintf+0x36b1>
   25223:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2522a:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25231:	48 89 d6             	mov    %rdx,%rsi
   25234:	48 89 c7             	mov    %rax,%rdi
   25237:	e8 2c c7 ff ff       	call   21968 <__sprint>
   2523c:	85 c0                	test   %eax,%eax
   2523e:	0f 85 b5 0c 00 00    	jne    25ef9 <__vfprintf+0x4358>
   25244:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2524b:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25252:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25259:	75 11                	jne    2526c <__vfprintf+0x36cb>
   2525b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25261:	83 e0 01             	and    $0x1,%eax
   25264:	85 c0                	test   %eax,%eax
   25266:	0f 84 80 00 00 00    	je     252ec <__vfprintf+0x374b>
   2526c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25273:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   2527a:	48 89 10             	mov    %rdx,(%rax)
   2527d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25284:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   2528b:	00 
   2528c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25292:	83 c0 01             	add    $0x1,%eax
   25295:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2529b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   252a2:	10 
   252a3:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   252a9:	83 c0 01             	add    $0x1,%eax
   252ac:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   252b2:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   252b8:	83 f8 07             	cmp    $0x7,%eax
   252bb:	7e 2f                	jle    252ec <__vfprintf+0x374b>
   252bd:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   252c4:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   252cb:	48 89 d6             	mov    %rdx,%rsi
   252ce:	48 89 c7             	mov    %rax,%rdi
   252d1:	e8 92 c6 ff ff       	call   21968 <__sprint>
   252d6:	85 c0                	test   %eax,%eax
   252d8:	0f 85 1e 0c 00 00    	jne    25efc <__vfprintf+0x435b>
   252de:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   252e5:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   252ec:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   252f2:	f7 d8                	neg    %eax
   252f4:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   252fa:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   25301:	0f 8e 23 01 00 00    	jle    2542a <__vfprintf+0x3889>
   25307:	e9 87 00 00 00       	jmp    25393 <__vfprintf+0x37f2>
   2530c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25313:	48 8d 15 26 3e 01 00 	lea    0x13e26(%rip),%rdx        # 39140 <zeroes.3342>
   2531a:	48 89 10             	mov    %rdx,(%rax)
   2531d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25324:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   2532b:	00 
   2532c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25332:	83 c0 10             	add    $0x10,%eax
   25335:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   2533b:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25342:	10 
   25343:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25349:	83 c0 01             	add    $0x1,%eax
   2534c:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25352:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25358:	83 f8 07             	cmp    $0x7,%eax
   2535b:	7e 2f                	jle    2538c <__vfprintf+0x37eb>
   2535d:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25364:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   2536b:	48 89 d6             	mov    %rdx,%rsi
   2536e:	48 89 c7             	mov    %rax,%rdi
   25371:	e8 f2 c5 ff ff       	call   21968 <__sprint>
   25376:	85 c0                	test   %eax,%eax
   25378:	0f 85 81 0b 00 00    	jne    25eff <__vfprintf+0x435e>
   2537e:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25385:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2538c:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   25393:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   2539a:	0f 8f 6c ff ff ff    	jg     2530c <__vfprintf+0x376b>
   253a0:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   253a7:	48 8d 15 92 3d 01 00 	lea    0x13d92(%rip),%rdx        # 39140 <zeroes.3342>
   253ae:	48 89 10             	mov    %rdx,(%rax)
   253b1:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   253b7:	48 63 d0             	movslq %eax,%rdx
   253ba:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   253c1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   253c5:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   253cb:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   253d1:	01 d0                	add    %edx,%eax
   253d3:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   253d9:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   253e0:	10 
   253e1:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   253e7:	83 c0 01             	add    $0x1,%eax
   253ea:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   253f0:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   253f6:	83 f8 07             	cmp    $0x7,%eax
   253f9:	7e 2f                	jle    2542a <__vfprintf+0x3889>
   253fb:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25402:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25409:	48 89 d6             	mov    %rdx,%rsi
   2540c:	48 89 c7             	mov    %rax,%rdi
   2540f:	e8 54 c5 ff ff       	call   21968 <__sprint>
   25414:	85 c0                	test   %eax,%eax
   25416:	0f 85 e6 0a 00 00    	jne    25f02 <__vfprintf+0x4361>
   2541c:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25423:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   2542a:	8b 85 60 fd ff ff    	mov    -0x2a0(%rbp),%eax
   25430:	01 85 7c fd ff ff    	add    %eax,-0x284(%rbp)
   25436:	e9 c1 02 00 00       	jmp    256fc <__vfprintf+0x3b5b>
   2543b:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   25442:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   25449:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   2544f:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   25455:	3b 85 84 fd ff ff    	cmp    -0x27c(%rbp),%eax
   2545b:	7e 0c                	jle    25469 <__vfprintf+0x38c8>
   2545d:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   25463:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   25469:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   25470:	0f 8e 8a 00 00 00    	jle    25500 <__vfprintf+0x395f>
   25476:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2547d:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   25484:	48 89 10             	mov    %rdx,(%rax)
   25487:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   2548d:	48 63 d0             	movslq %eax,%rdx
   25490:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25497:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2549b:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   254a1:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   254a7:	01 d0                	add    %edx,%eax
   254a9:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   254af:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   254b6:	10 
   254b7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   254bd:	83 c0 01             	add    $0x1,%eax
   254c0:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   254c6:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   254cc:	83 f8 07             	cmp    $0x7,%eax
   254cf:	7e 2f                	jle    25500 <__vfprintf+0x395f>
   254d1:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   254d8:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   254df:	48 89 d6             	mov    %rdx,%rsi
   254e2:	48 89 c7             	mov    %rax,%rdi
   254e5:	e8 7e c4 ff ff       	call   21968 <__sprint>
   254ea:	85 c0                	test   %eax,%eax
   254ec:	0f 85 13 0a 00 00    	jne    25f05 <__vfprintf+0x4364>
   254f2:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   254f9:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25500:	b8 00 00 00 00       	mov    $0x0,%eax
   25505:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   2550c:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   25513:	8b 95 84 fd ff ff    	mov    -0x27c(%rbp),%edx
   25519:	29 c2                	sub    %eax,%edx
   2551b:	89 d0                	mov    %edx,%eax
   2551d:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   25523:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   2552a:	0f 8e 23 01 00 00    	jle    25653 <__vfprintf+0x3ab2>
   25530:	e9 87 00 00 00       	jmp    255bc <__vfprintf+0x3a1b>
   25535:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2553c:	48 8d 15 fd 3b 01 00 	lea    0x13bfd(%rip),%rdx        # 39140 <zeroes.3342>
   25543:	48 89 10             	mov    %rdx,(%rax)
   25546:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2554d:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   25554:	00 
   25555:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   2555b:	83 c0 10             	add    $0x10,%eax
   2555e:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25564:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   2556b:	10 
   2556c:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25572:	83 c0 01             	add    $0x1,%eax
   25575:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   2557b:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25581:	83 f8 07             	cmp    $0x7,%eax
   25584:	7e 2f                	jle    255b5 <__vfprintf+0x3a14>
   25586:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2558d:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25594:	48 89 d6             	mov    %rdx,%rsi
   25597:	48 89 c7             	mov    %rax,%rdi
   2559a:	e8 c9 c3 ff ff       	call   21968 <__sprint>
   2559f:	85 c0                	test   %eax,%eax
   255a1:	0f 85 61 09 00 00    	jne    25f08 <__vfprintf+0x4367>
   255a7:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   255ae:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   255b5:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   255bc:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   255c3:	0f 8f 6c ff ff ff    	jg     25535 <__vfprintf+0x3994>
   255c9:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   255d0:	48 8d 15 69 3b 01 00 	lea    0x13b69(%rip),%rdx        # 39140 <zeroes.3342>
   255d7:	48 89 10             	mov    %rdx,(%rax)
   255da:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   255e0:	48 63 d0             	movslq %eax,%rdx
   255e3:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   255ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
   255ee:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   255f4:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   255fa:	01 d0                	add    %edx,%eax
   255fc:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25602:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25609:	10 
   2560a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25610:	83 c0 01             	add    $0x1,%eax
   25613:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25619:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2561f:	83 f8 07             	cmp    $0x7,%eax
   25622:	7e 2f                	jle    25653 <__vfprintf+0x3ab2>
   25624:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2562b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25632:	48 89 d6             	mov    %rdx,%rsi
   25635:	48 89 c7             	mov    %rax,%rdi
   25638:	e8 2b c3 ff ff       	call   21968 <__sprint>
   2563d:	85 c0                	test   %eax,%eax
   2563f:	0f 85 c6 08 00 00    	jne    25f0b <__vfprintf+0x436a>
   25645:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2564c:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25653:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
   25659:	48 98                	cltq   
   2565b:	48 01 85 c8 fd ff ff 	add    %rax,-0x238(%rbp)
   25662:	83 bd 7c fd ff ff 00 	cmpl   $0x0,-0x284(%rbp)
   25669:	75 11                	jne    2567c <__vfprintf+0x3adb>
   2566b:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25671:	83 e0 01             	and    $0x1,%eax
   25674:	85 c0                	test   %eax,%eax
   25676:	0f 84 80 00 00 00    	je     256fc <__vfprintf+0x3b5b>
   2567c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25683:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   2568a:	48 89 10             	mov    %rdx,(%rax)
   2568d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25694:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   2569b:	00 
   2569c:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   256a2:	83 c0 01             	add    $0x1,%eax
   256a5:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   256ab:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   256b2:	10 
   256b3:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   256b9:	83 c0 01             	add    $0x1,%eax
   256bc:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   256c2:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   256c8:	83 f8 07             	cmp    $0x7,%eax
   256cb:	7e 2f                	jle    256fc <__vfprintf+0x3b5b>
   256cd:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   256d4:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   256db:	48 89 d6             	mov    %rdx,%rsi
   256de:	48 89 c7             	mov    %rax,%rdi
   256e1:	e8 82 c2 ff ff       	call   21968 <__sprint>
   256e6:	85 c0                	test   %eax,%eax
   256e8:	0f 85 20 08 00 00    	jne    25f0e <__vfprintf+0x436d>
   256ee:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   256f5:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   256fc:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
   25703:	48 2b 85 c8 fd ff ff 	sub    -0x238(%rbp),%rax
   2570a:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   25710:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   25716:	3b 85 7c fd ff ff    	cmp    -0x284(%rbp),%eax
   2571c:	7e 0c                	jle    2572a <__vfprintf+0x3b89>
   2571e:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   25724:	89 85 6c fd ff ff    	mov    %eax,-0x294(%rbp)
   2572a:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   25731:	0f 8e 8a 00 00 00    	jle    257c1 <__vfprintf+0x3c20>
   25737:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2573e:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   25745:	48 89 10             	mov    %rdx,(%rax)
   25748:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   2574e:	48 63 d0             	movslq %eax,%rdx
   25751:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25758:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2575c:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   25762:	8b 85 6c fd ff ff    	mov    -0x294(%rbp),%eax
   25768:	01 d0                	add    %edx,%eax
   2576a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25770:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25777:	10 
   25778:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2577e:	83 c0 01             	add    $0x1,%eax
   25781:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25787:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   2578d:	83 f8 07             	cmp    $0x7,%eax
   25790:	7e 2f                	jle    257c1 <__vfprintf+0x3c20>
   25792:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25799:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   257a0:	48 89 d6             	mov    %rdx,%rsi
   257a3:	48 89 c7             	mov    %rax,%rdi
   257a6:	e8 bd c1 ff ff       	call   21968 <__sprint>
   257ab:	85 c0                	test   %eax,%eax
   257ad:	0f 85 5e 07 00 00    	jne    25f11 <__vfprintf+0x4370>
   257b3:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   257ba:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   257c1:	b8 00 00 00 00       	mov    $0x0,%eax
   257c6:	83 bd 6c fd ff ff 00 	cmpl   $0x0,-0x294(%rbp)
   257cd:	0f 49 85 6c fd ff ff 	cmovns -0x294(%rbp),%eax
   257d4:	8b 95 7c fd ff ff    	mov    -0x284(%rbp),%edx
   257da:	29 c2                	sub    %eax,%edx
   257dc:	89 d0                	mov    %edx,%eax
   257de:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   257e4:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   257eb:	0f 8e cd 04 00 00    	jle    25cbe <__vfprintf+0x411d>
   257f1:	e9 87 00 00 00       	jmp    2587d <__vfprintf+0x3cdc>
   257f6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   257fd:	48 8d 15 3c 39 01 00 	lea    0x1393c(%rip),%rdx        # 39140 <zeroes.3342>
   25804:	48 89 10             	mov    %rdx,(%rax)
   25807:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   2580e:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   25815:	00 
   25816:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   2581c:	83 c0 10             	add    $0x10,%eax
   2581f:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25825:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   2582c:	10 
   2582d:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25833:	83 c0 01             	add    $0x1,%eax
   25836:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   2583c:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25842:	83 f8 07             	cmp    $0x7,%eax
   25845:	7e 2f                	jle    25876 <__vfprintf+0x3cd5>
   25847:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   2584e:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25855:	48 89 d6             	mov    %rdx,%rsi
   25858:	48 89 c7             	mov    %rax,%rdi
   2585b:	e8 08 c1 ff ff       	call   21968 <__sprint>
   25860:	85 c0                	test   %eax,%eax
   25862:	0f 85 ac 06 00 00    	jne    25f14 <__vfprintf+0x4373>
   25868:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   2586f:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25876:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   2587d:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   25884:	0f 8f 6c ff ff ff    	jg     257f6 <__vfprintf+0x3c55>
   2588a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25891:	48 8d 15 a8 38 01 00 	lea    0x138a8(%rip),%rdx        # 39140 <zeroes.3342>
   25898:	48 89 10             	mov    %rdx,(%rax)
   2589b:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   258a1:	48 63 d0             	movslq %eax,%rdx
   258a4:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   258ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
   258af:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   258b5:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   258bb:	01 d0                	add    %edx,%eax
   258bd:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   258c3:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   258ca:	10 
   258cb:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   258d1:	83 c0 01             	add    $0x1,%eax
   258d4:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   258da:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   258e0:	83 f8 07             	cmp    $0x7,%eax
   258e3:	0f 8e d5 03 00 00    	jle    25cbe <__vfprintf+0x411d>
   258e9:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   258f0:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   258f7:	48 89 d6             	mov    %rdx,%rsi
   258fa:	48 89 c7             	mov    %rax,%rdi
   258fd:	e8 66 c0 ff ff       	call   21968 <__sprint>
   25902:	85 c0                	test   %eax,%eax
   25904:	0f 85 0d 06 00 00    	jne    25f17 <__vfprintf+0x4376>
   2590a:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25911:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25918:	e9 a1 03 00 00       	jmp    25cbe <__vfprintf+0x411d>
   2591d:	83 bd 7c fd ff ff 01 	cmpl   $0x1,-0x284(%rbp)
   25924:	7f 11                	jg     25937 <__vfprintf+0x3d96>
   25926:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   2592c:	83 e0 01             	and    $0x1,%eax
   2592f:	85 c0                	test   %eax,%eax
   25931:	0f 84 7d 02 00 00    	je     25bb4 <__vfprintf+0x4013>
   25937:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   2593e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   25942:	48 89 95 c8 fd ff ff 	mov    %rdx,-0x238(%rbp)
   25949:	0f b6 00             	movzbl (%rax),%eax
   2594c:	88 45 90             	mov    %al,-0x70(%rbp)
   2594f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   25956:	0f b6 00             	movzbl (%rax),%eax
   25959:	88 45 91             	mov    %al,-0x6f(%rbp)
   2595c:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25963:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   25967:	48 89 10             	mov    %rdx,(%rax)
   2596a:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25971:	48 c7 40 08 02 00 00 	movq   $0x2,0x8(%rax)
   25978:	00 
   25979:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   2597f:	83 c0 02             	add    $0x2,%eax
   25982:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25988:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   2598f:	10 
   25990:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25996:	83 c0 01             	add    $0x1,%eax
   25999:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   2599f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   259a5:	83 f8 07             	cmp    $0x7,%eax
   259a8:	7e 2f                	jle    259d9 <__vfprintf+0x3e38>
   259aa:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   259b1:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   259b8:	48 89 d6             	mov    %rdx,%rsi
   259bb:	48 89 c7             	mov    %rax,%rdi
   259be:	e8 a5 bf ff ff       	call   21968 <__sprint>
   259c3:	85 c0                	test   %eax,%eax
   259c5:	0f 85 4f 05 00 00    	jne    25f1a <__vfprintf+0x4379>
   259cb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   259d2:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   259d9:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   259e0:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   259e7:	48 89 10             	mov    %rdx,(%rax)
   259ea:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   259f0:	83 e8 01             	sub    $0x1,%eax
   259f3:	48 63 d0             	movslq %eax,%rdx
   259f6:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   259fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25a01:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   25a07:	8b 85 88 fd ff ff    	mov    -0x278(%rbp),%eax
   25a0d:	01 d0                	add    %edx,%eax
   25a0f:	83 e8 01             	sub    $0x1,%eax
   25a12:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25a18:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25a1f:	10 
   25a20:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25a26:	83 c0 01             	add    $0x1,%eax
   25a29:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25a2f:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25a35:	83 f8 07             	cmp    $0x7,%eax
   25a38:	7e 2f                	jle    25a69 <__vfprintf+0x3ec8>
   25a3a:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25a41:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25a48:	48 89 d6             	mov    %rdx,%rsi
   25a4b:	48 89 c7             	mov    %rax,%rdi
   25a4e:	e8 15 bf ff ff       	call   21968 <__sprint>
   25a53:	85 c0                	test   %eax,%eax
   25a55:	0f 85 c2 04 00 00    	jne    25f1d <__vfprintf+0x437c>
   25a5b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25a62:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25a69:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
   25a6f:	2b 85 88 fd ff ff    	sub    -0x278(%rbp),%eax
   25a75:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   25a7b:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   25a82:	0f 8e ae 01 00 00    	jle    25c36 <__vfprintf+0x4095>
   25a88:	e9 87 00 00 00       	jmp    25b14 <__vfprintf+0x3f73>
   25a8d:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25a94:	48 8d 15 a5 36 01 00 	lea    0x136a5(%rip),%rdx        # 39140 <zeroes.3342>
   25a9b:	48 89 10             	mov    %rdx,(%rax)
   25a9e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25aa5:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   25aac:	00 
   25aad:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25ab3:	83 c0 10             	add    $0x10,%eax
   25ab6:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25abc:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25ac3:	10 
   25ac4:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25aca:	83 c0 01             	add    $0x1,%eax
   25acd:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25ad3:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25ad9:	83 f8 07             	cmp    $0x7,%eax
   25adc:	7e 2f                	jle    25b0d <__vfprintf+0x3f6c>
   25ade:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25ae5:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25aec:	48 89 d6             	mov    %rdx,%rsi
   25aef:	48 89 c7             	mov    %rax,%rdi
   25af2:	e8 71 be ff ff       	call   21968 <__sprint>
   25af7:	85 c0                	test   %eax,%eax
   25af9:	0f 85 21 04 00 00    	jne    25f20 <__vfprintf+0x437f>
   25aff:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25b06:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25b0d:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   25b14:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   25b1b:	0f 8f 6c ff ff ff    	jg     25a8d <__vfprintf+0x3eec>
   25b21:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25b28:	48 8d 15 11 36 01 00 	lea    0x13611(%rip),%rdx        # 39140 <zeroes.3342>
   25b2f:	48 89 10             	mov    %rdx,(%rax)
   25b32:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   25b38:	48 63 d0             	movslq %eax,%rdx
   25b3b:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25b42:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25b46:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   25b4c:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   25b52:	01 d0                	add    %edx,%eax
   25b54:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25b5a:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25b61:	10 
   25b62:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25b68:	83 c0 01             	add    $0x1,%eax
   25b6b:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25b71:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25b77:	83 f8 07             	cmp    $0x7,%eax
   25b7a:	0f 8e b6 00 00 00    	jle    25c36 <__vfprintf+0x4095>
   25b80:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25b87:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25b8e:	48 89 d6             	mov    %rdx,%rsi
   25b91:	48 89 c7             	mov    %rax,%rdi
   25b94:	e8 cf bd ff ff       	call   21968 <__sprint>
   25b99:	85 c0                	test   %eax,%eax
   25b9b:	0f 85 82 03 00 00    	jne    25f23 <__vfprintf+0x4382>
   25ba1:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25ba8:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25baf:	e9 82 00 00 00       	jmp    25c36 <__vfprintf+0x4095>
   25bb4:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25bbb:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
   25bc2:	48 89 10             	mov    %rdx,(%rax)
   25bc5:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25bcc:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
   25bd3:	00 
   25bd4:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25bda:	83 c0 01             	add    $0x1,%eax
   25bdd:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25be3:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25bea:	10 
   25beb:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25bf1:	83 c0 01             	add    $0x1,%eax
   25bf4:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25bfa:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25c00:	83 f8 07             	cmp    $0x7,%eax
   25c03:	7e 32                	jle    25c37 <__vfprintf+0x4096>
   25c05:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25c0c:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25c13:	48 89 d6             	mov    %rdx,%rsi
   25c16:	48 89 c7             	mov    %rax,%rdi
   25c19:	e8 4a bd ff ff       	call   21968 <__sprint>
   25c1e:	85 c0                	test   %eax,%eax
   25c20:	0f 85 00 03 00 00    	jne    25f26 <__vfprintf+0x4385>
   25c26:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25c2d:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25c34:	eb 01                	jmp    25c37 <__vfprintf+0x4096>
   25c36:	90                   	nop
   25c37:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25c3e:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   25c42:	48 89 10             	mov    %rdx,(%rax)
   25c45:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   25c4b:	48 63 d0             	movslq %eax,%rdx
   25c4e:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25c55:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25c59:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   25c5f:	8b 85 80 fd ff ff    	mov    -0x280(%rbp),%eax
   25c65:	01 d0                	add    %edx,%eax
   25c67:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25c6d:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25c74:	10 
   25c75:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25c7b:	83 c0 01             	add    $0x1,%eax
   25c7e:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25c84:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25c8a:	83 f8 07             	cmp    $0x7,%eax
   25c8d:	7e 2f                	jle    25cbe <__vfprintf+0x411d>
   25c8f:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25c96:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25c9d:	48 89 d6             	mov    %rdx,%rsi
   25ca0:	48 89 c7             	mov    %rax,%rdi
   25ca3:	e8 c0 bc ff ff       	call   21968 <__sprint>
   25ca8:	85 c0                	test   %eax,%eax
   25caa:	0f 85 79 02 00 00    	jne    25f29 <__vfprintf+0x4388>
   25cb0:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25cb7:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25cbe:	8b 85 70 fd ff ff    	mov    -0x290(%rbp),%eax
   25cc4:	83 e0 04             	and    $0x4,%eax
   25cc7:	85 c0                	test   %eax,%eax
   25cc9:	0f 84 42 01 00 00    	je     25e11 <__vfprintf+0x4270>
   25ccf:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   25cd5:	2b 85 94 fd ff ff    	sub    -0x26c(%rbp),%eax
   25cdb:	89 85 68 fd ff ff    	mov    %eax,-0x298(%rbp)
   25ce1:	83 bd 68 fd ff ff 00 	cmpl   $0x0,-0x298(%rbp)
   25ce8:	0f 8e 23 01 00 00    	jle    25e11 <__vfprintf+0x4270>
   25cee:	e9 87 00 00 00       	jmp    25d7a <__vfprintf+0x41d9>
   25cf3:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25cfa:	48 8d 15 2f 34 01 00 	lea    0x1342f(%rip),%rdx        # 39130 <blanks.3341>
   25d01:	48 89 10             	mov    %rdx,(%rax)
   25d04:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25d0b:	48 c7 40 08 10 00 00 	movq   $0x10,0x8(%rax)
   25d12:	00 
   25d13:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25d19:	83 c0 10             	add    $0x10,%eax
   25d1c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25d22:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25d29:	10 
   25d2a:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25d30:	83 c0 01             	add    $0x1,%eax
   25d33:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25d39:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25d3f:	83 f8 07             	cmp    $0x7,%eax
   25d42:	7e 2f                	jle    25d73 <__vfprintf+0x41d2>
   25d44:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25d4b:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25d52:	48 89 d6             	mov    %rdx,%rsi
   25d55:	48 89 c7             	mov    %rax,%rdi
   25d58:	e8 0b bc ff ff       	call   21968 <__sprint>
   25d5d:	85 c0                	test   %eax,%eax
   25d5f:	0f 85 c7 01 00 00    	jne    25f2c <__vfprintf+0x438b>
   25d65:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25d6c:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25d73:	83 ad 68 fd ff ff 10 	subl   $0x10,-0x298(%rbp)
   25d7a:	83 bd 68 fd ff ff 10 	cmpl   $0x10,-0x298(%rbp)
   25d81:	0f 8f 6c ff ff ff    	jg     25cf3 <__vfprintf+0x4152>
   25d87:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25d8e:	48 8d 15 9b 33 01 00 	lea    0x1339b(%rip),%rdx        # 39130 <blanks.3341>
   25d95:	48 89 10             	mov    %rdx,(%rax)
   25d98:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   25d9e:	48 63 d0             	movslq %eax,%rdx
   25da1:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   25da8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   25dac:	8b 95 4c fe ff ff    	mov    -0x1b4(%rbp),%edx
   25db2:	8b 85 68 fd ff ff    	mov    -0x298(%rbp),%eax
   25db8:	01 d0                	add    %edx,%eax
   25dba:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
   25dc0:	48 83 85 d0 fd ff ff 	addq   $0x10,-0x230(%rbp)
   25dc7:	10 
   25dc8:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25dce:	83 c0 01             	add    $0x1,%eax
   25dd1:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%rbp)
   25dd7:	8b 85 48 fe ff ff    	mov    -0x1b8(%rbp),%eax
   25ddd:	83 f8 07             	cmp    $0x7,%eax
   25de0:	7e 2f                	jle    25e11 <__vfprintf+0x4270>
   25de2:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25de9:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25df0:	48 89 d6             	mov    %rdx,%rsi
   25df3:	48 89 c7             	mov    %rax,%rdi
   25df6:	e8 6d bb ff ff       	call   21968 <__sprint>
   25dfb:	85 c0                	test   %eax,%eax
   25dfd:	0f 85 2c 01 00 00    	jne    25f2f <__vfprintf+0x438e>
   25e03:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25e0a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25e11:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   25e17:	3b 85 94 fd ff ff    	cmp    -0x26c(%rbp),%eax
   25e1d:	7d 0c                	jge    25e2b <__vfprintf+0x428a>
   25e1f:	8b 85 94 fd ff ff    	mov    -0x26c(%rbp),%eax
   25e25:	89 85 78 fd ff ff    	mov    %eax,-0x288(%rbp)
   25e2b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   25e30:	2b 85 74 fd ff ff    	sub    -0x28c(%rbp),%eax
   25e36:	39 85 78 fd ff ff    	cmp    %eax,-0x288(%rbp)
   25e3c:	0f 8f 34 01 00 00    	jg     25f76 <__vfprintf+0x43d5>
   25e42:	8b 85 78 fd ff ff    	mov    -0x288(%rbp),%eax
   25e48:	01 85 74 fd ff ff    	add    %eax,-0x28c(%rbp)
   25e4e:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25e54:	85 c0                	test   %eax,%eax
   25e56:	74 21                	je     25e79 <__vfprintf+0x42d8>
   25e58:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25e5f:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25e66:	48 89 d6             	mov    %rdx,%rsi
   25e69:	48 89 c7             	mov    %rax,%rdi
   25e6c:	e8 f7 ba ff ff       	call   21968 <__sprint>
   25e71:	85 c0                	test   %eax,%eax
   25e73:	0f 85 b9 00 00 00    	jne    25f32 <__vfprintf+0x4391>
   25e79:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   25e80:	00 00 00 
   25e83:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25e8a:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25e91:	e9 88 be ff ff       	jmp    21d1e <__vfprintf+0x17d>
   25e96:	90                   	nop
   25e97:	eb 01                	jmp    25e9a <__vfprintf+0x42f9>
   25e99:	90                   	nop
   25e9a:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
   25ea0:	85 c0                	test   %eax,%eax
   25ea2:	74 1d                	je     25ec1 <__vfprintf+0x4320>
   25ea4:	48 8d 95 40 fe ff ff 	lea    -0x1c0(%rbp),%rdx
   25eab:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25eb2:	48 89 d6             	mov    %rdx,%rsi
   25eb5:	48 89 c7             	mov    %rax,%rdi
   25eb8:	e8 ab ba ff ff       	call   21968 <__sprint>
   25ebd:	85 c0                	test   %eax,%eax
   25ebf:	75 74                	jne    25f35 <__vfprintf+0x4394>
   25ec1:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%rbp)
   25ec8:	00 00 00 
   25ecb:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   25ed2:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   25ed9:	eb 5b                	jmp    25f36 <__vfprintf+0x4395>
   25edb:	90                   	nop
   25edc:	eb 58                	jmp    25f36 <__vfprintf+0x4395>
   25ede:	90                   	nop
   25edf:	eb 55                	jmp    25f36 <__vfprintf+0x4395>
   25ee1:	90                   	nop
   25ee2:	eb 52                	jmp    25f36 <__vfprintf+0x4395>
   25ee4:	90                   	nop
   25ee5:	eb 4f                	jmp    25f36 <__vfprintf+0x4395>
   25ee7:	90                   	nop
   25ee8:	eb 4c                	jmp    25f36 <__vfprintf+0x4395>
   25eea:	90                   	nop
   25eeb:	eb 49                	jmp    25f36 <__vfprintf+0x4395>
   25eed:	90                   	nop
   25eee:	eb 46                	jmp    25f36 <__vfprintf+0x4395>
   25ef0:	90                   	nop
   25ef1:	eb 43                	jmp    25f36 <__vfprintf+0x4395>
   25ef3:	90                   	nop
   25ef4:	eb 40                	jmp    25f36 <__vfprintf+0x4395>
   25ef6:	90                   	nop
   25ef7:	eb 3d                	jmp    25f36 <__vfprintf+0x4395>
   25ef9:	90                   	nop
   25efa:	eb 3a                	jmp    25f36 <__vfprintf+0x4395>
   25efc:	90                   	nop
   25efd:	eb 37                	jmp    25f36 <__vfprintf+0x4395>
   25eff:	90                   	nop
   25f00:	eb 34                	jmp    25f36 <__vfprintf+0x4395>
   25f02:	90                   	nop
   25f03:	eb 31                	jmp    25f36 <__vfprintf+0x4395>
   25f05:	90                   	nop
   25f06:	eb 2e                	jmp    25f36 <__vfprintf+0x4395>
   25f08:	90                   	nop
   25f09:	eb 2b                	jmp    25f36 <__vfprintf+0x4395>
   25f0b:	90                   	nop
   25f0c:	eb 28                	jmp    25f36 <__vfprintf+0x4395>
   25f0e:	90                   	nop
   25f0f:	eb 25                	jmp    25f36 <__vfprintf+0x4395>
   25f11:	90                   	nop
   25f12:	eb 22                	jmp    25f36 <__vfprintf+0x4395>
   25f14:	90                   	nop
   25f15:	eb 1f                	jmp    25f36 <__vfprintf+0x4395>
   25f17:	90                   	nop
   25f18:	eb 1c                	jmp    25f36 <__vfprintf+0x4395>
   25f1a:	90                   	nop
   25f1b:	eb 19                	jmp    25f36 <__vfprintf+0x4395>
   25f1d:	90                   	nop
   25f1e:	eb 16                	jmp    25f36 <__vfprintf+0x4395>
   25f20:	90                   	nop
   25f21:	eb 13                	jmp    25f36 <__vfprintf+0x4395>
   25f23:	90                   	nop
   25f24:	eb 10                	jmp    25f36 <__vfprintf+0x4395>
   25f26:	90                   	nop
   25f27:	eb 0d                	jmp    25f36 <__vfprintf+0x4395>
   25f29:	90                   	nop
   25f2a:	eb 0a                	jmp    25f36 <__vfprintf+0x4395>
   25f2c:	90                   	nop
   25f2d:	eb 07                	jmp    25f36 <__vfprintf+0x4395>
   25f2f:	90                   	nop
   25f30:	eb 04                	jmp    25f36 <__vfprintf+0x4395>
   25f32:	90                   	nop
   25f33:	eb 01                	jmp    25f36 <__vfprintf+0x4395>
   25f35:	90                   	nop
   25f36:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
   25f3d:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   25f41:	98                   	cwtl   
   25f42:	83 e0 40             	and    $0x40,%eax
   25f45:	85 c0                	test   %eax,%eax
   25f47:	74 45                	je     25f8e <__vfprintf+0x43ed>
   25f49:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   25f50:	ff ff ff 
   25f53:	eb 39                	jmp    25f8e <__vfprintf+0x43ed>
   25f55:	90                   	nop
   25f56:	eb 1f                	jmp    25f77 <__vfprintf+0x43d6>
   25f58:	90                   	nop
   25f59:	eb 1c                	jmp    25f77 <__vfprintf+0x43d6>
   25f5b:	90                   	nop
   25f5c:	eb 19                	jmp    25f77 <__vfprintf+0x43d6>
   25f5e:	90                   	nop
   25f5f:	eb 16                	jmp    25f77 <__vfprintf+0x43d6>
   25f61:	90                   	nop
   25f62:	eb 13                	jmp    25f77 <__vfprintf+0x43d6>
   25f64:	90                   	nop
   25f65:	eb 10                	jmp    25f77 <__vfprintf+0x43d6>
   25f67:	90                   	nop
   25f68:	eb 0d                	jmp    25f77 <__vfprintf+0x43d6>
   25f6a:	90                   	nop
   25f6b:	eb 0a                	jmp    25f77 <__vfprintf+0x43d6>
   25f6d:	90                   	nop
   25f6e:	eb 07                	jmp    25f77 <__vfprintf+0x43d6>
   25f70:	90                   	nop
   25f71:	eb 04                	jmp    25f77 <__vfprintf+0x43d6>
   25f73:	90                   	nop
   25f74:	eb 01                	jmp    25f77 <__vfprintf+0x43d6>
   25f76:	90                   	nop
   25f77:	e8 dd b9 ff ff       	call   21959 <__errno>
   25f7c:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   25f82:	c7 85 74 fd ff ff ff 	movl   $0xffffffff,-0x28c(%rbp)
   25f89:	ff ff ff 
   25f8c:	eb 01                	jmp    25f8f <__vfprintf+0x43ee>
   25f8e:	90                   	nop
   25f8f:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
   25f96:	00 
   25f97:	74 0f                	je     25fa8 <__vfprintf+0x4407>
   25f99:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
   25fa0:	48 89 c7             	mov    %rax,%rdi
   25fa3:	e8 0a 80 ff ff       	call   1dfb2 <dlfree>
   25fa8:	48 83 bd d8 fd ff ff 	cmpq   $0x0,-0x228(%rbp)
   25faf:	00 
   25fb0:	74 0f                	je     25fc1 <__vfprintf+0x4420>
   25fb2:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   25fb9:	48 89 c7             	mov    %rax,%rdi
   25fbc:	e8 b3 23 00 00       	call   28374 <__freedtoa>
   25fc1:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25fc8:	48 85 c0             	test   %rax,%rax
   25fcb:	74 2d                	je     25ffa <__vfprintf+0x4459>
   25fcd:	48 8b 95 b0 fd ff ff 	mov    -0x250(%rbp),%rdx
   25fd4:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   25fdb:	48 39 c2             	cmp    %rax,%rdx
   25fde:	74 1a                	je     25ffa <__vfprintf+0x4459>
   25fe0:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
   25fe7:	48 89 c7             	mov    %rax,%rdi
   25fea:	e8 c3 7f ff ff       	call   1dfb2 <dlfree>
   25fef:	48 c7 85 b0 fd ff ff 	movq   $0x0,-0x250(%rbp)
   25ff6:	00 00 00 00 
   25ffa:	8b 85 74 fd ff ff    	mov    -0x28c(%rbp),%eax
   26000:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   26004:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   2600b:	00 00 
   2600d:	74 05                	je     26014 <__vfprintf+0x4473>
   2600f:	e8 73 b2 ff ff       	call   21287 <__stack_chk_fail>
   26014:	c9                   	leave  
   26015:	c3                   	ret    

0000000000026016 <__find_arguments>:
   26016:	f3 0f 1e fa          	endbr64 
   2601a:	55                   	push   %rbp
   2601b:	48 89 e5             	mov    %rsp,%rbp
   2601e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   26022:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   26026:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2602a:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   2602e:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   26032:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26039:	00 00 
   2603b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2603f:	31 c0                	xor    %eax,%eax
   26041:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   26048:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2604f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   26053:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   26057:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2605b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2605f:	c7 45 a0 08 00 00 00 	movl   $0x8,-0x60(%rbp)
   26066:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   2606d:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
   26074:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   26078:	ba 08 00 00 00       	mov    $0x8,%edx
   2607d:	be 00 00 00 00       	mov    $0x0,%esi
   26082:	48 89 c7             	mov    %rax,%rdi
   26085:	e8 89 b0 ff ff       	call   21113 <memset>
   2608a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2608e:	ba 08 00 00 00       	mov    $0x8,%edx
   26093:	be 00 00 00 00       	mov    $0x0,%esi
   26098:	48 89 c7             	mov    %rax,%rdi
   2609b:	e8 73 b0 ff ff       	call   21113 <memset>
   260a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   260a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   260a8:	eb 18                	jmp    260c2 <__find_arguments+0xac>
   260aa:	8b 45 ac             	mov    -0x54(%rbp),%eax
   260ad:	48 98                	cltq   
   260af:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   260b3:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   260b6:	83 f8 25             	cmp    $0x25,%eax
   260b9:	75 07                	jne    260c2 <__find_arguments+0xac>
   260bb:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
   260c0:	eb 25                	jmp    260e7 <__find_arguments+0xd1>
   260c2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   260c6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   260ca:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   260ce:	48 89 d1             	mov    %rdx,%rcx
   260d1:	ba 01 00 00 00       	mov    $0x1,%edx
   260d6:	48 89 c7             	mov    %rax,%rdi
   260d9:	e8 5a 59 00 00       	call   2ba38 <mbrtowc>
   260de:	89 45 ac             	mov    %eax,-0x54(%rbp)
   260e1:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   260e5:	7f c3                	jg     260aa <__find_arguments+0x94>
   260e7:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   260eb:	0f 8e be 11 00 00    	jle    272af <__find_arguments+0x1299>
   260f1:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   260f6:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   260fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26101:	48 8d 50 01          	lea    0x1(%rax),%rdx
   26105:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   26109:	0f b6 00             	movzbl (%rax),%eax
   2610c:	0f be c0             	movsbl %al,%eax
   2610f:	89 45 a8             	mov    %eax,-0x58(%rbp)
   26112:	8b 45 a8             	mov    -0x58(%rbp),%eax
   26115:	83 e8 20             	sub    $0x20,%eax
   26118:	83 f8 5a             	cmp    $0x5a,%eax
   2611b:	0f 87 56 11 00 00    	ja     27277 <__find_arguments+0x1261>
   26121:	89 c0                	mov    %eax,%eax
   26123:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2612a:	00 
   2612b:	48 8d 05 1e b9 00 00 	lea    0xb91e(%rip),%rax        # 31a50 <__func__.2555+0x1a7>
   26132:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   26135:	48 98                	cltq   
   26137:	48 8d 15 12 b9 00 00 	lea    0xb912(%rip),%rdx        # 31a50 <__func__.2555+0x1a7>
   2613e:	48 01 d0             	add    %rdx,%rax
   26141:	3e ff e0             	notrack jmp *%rax
   26144:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   2614b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2614f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   26153:	eb 57                	jmp    261ac <__find_arguments+0x196>
   26155:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   2615c:	0f 8f 09 1b 00 00    	jg     27c6b <__find_arguments+0x1c55>
   26162:	8b 55 b0             	mov    -0x50(%rbp),%edx
   26165:	89 d0                	mov    %edx,%eax
   26167:	c1 e0 02             	shl    $0x2,%eax
   2616a:	01 d0                	add    %edx,%eax
   2616c:	01 c0                	add    %eax,%eax
   2616e:	89 45 b0             	mov    %eax,-0x50(%rbp)
   26171:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26175:	0f b6 00             	movzbl (%rax),%eax
   26178:	0f be c0             	movsbl %al,%eax
   2617b:	ba 30 00 00 00       	mov    $0x30,%edx
   26180:	29 c2                	sub    %eax,%edx
   26182:	89 d0                	mov    %edx,%eax
   26184:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   26189:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   2618c:	0f 8f dc 1a 00 00    	jg     27c6e <__find_arguments+0x1c58>
   26192:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26196:	0f b6 00             	movzbl (%rax),%eax
   26199:	0f be d0             	movsbl %al,%edx
   2619c:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2619f:	01 d0                	add    %edx,%eax
   261a1:	83 e8 30             	sub    $0x30,%eax
   261a4:	89 45 b0             	mov    %eax,-0x50(%rbp)
   261a7:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   261ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   261b0:	0f b6 00             	movzbl (%rax),%eax
   261b3:	0f be c0             	movsbl %al,%eax
   261b6:	83 e8 30             	sub    $0x30,%eax
   261b9:	83 f8 09             	cmp    $0x9,%eax
   261bc:	76 97                	jbe    26155 <__find_arguments+0x13f>
   261be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   261c2:	0f b6 00             	movzbl (%rax),%eax
   261c5:	3c 24                	cmp    $0x24,%al
   261c7:	75 75                	jne    2623e <__find_arguments+0x228>
   261c9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   261cc:	89 45 cc             	mov    %eax,-0x34(%rbp)
   261cf:	8b 45 b0             	mov    -0x50(%rbp),%eax
   261d2:	89 45 bc             	mov    %eax,-0x44(%rbp)
   261d5:	8b 45 a0             	mov    -0x60(%rbp),%eax
   261d8:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   261db:	7c 16                	jl     261f3 <__find_arguments+0x1dd>
   261dd:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   261e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   261e5:	48 89 d6             	mov    %rdx,%rsi
   261e8:	48 89 c7             	mov    %rax,%rdi
   261eb:	e8 0a 1b 00 00       	call   27cfa <__grow_type_table>
   261f0:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   261f3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   261f6:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   261f9:	7e 06                	jle    26201 <__find_arguments+0x1eb>
   261fb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   261fe:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26201:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26205:	74 15                	je     2621c <__find_arguments+0x206>
   26207:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2620b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2620e:	8d 50 01             	lea    0x1(%rax),%edx
   26211:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26214:	48 98                	cltq   
   26216:	48 01 c8             	add    %rcx,%rax
   26219:	c6 00 04             	movb   $0x4,(%rax)
   2621c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26220:	0f 84 4b 1a 00 00    	je     27c71 <__find_arguments+0x1c5b>
   26226:	8b 45 cc             	mov    -0x34(%rbp),%eax
   26229:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2622c:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   26231:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26235:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   26239:	e9 bf fe ff ff       	jmp    260fd <__find_arguments+0xe7>
   2623e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26241:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26244:	7c 16                	jl     2625c <__find_arguments+0x246>
   26246:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2624a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2624e:	48 89 d6             	mov    %rdx,%rsi
   26251:	48 89 c7             	mov    %rax,%rdi
   26254:	e8 a1 1a 00 00       	call   27cfa <__grow_type_table>
   26259:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2625c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2625f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26262:	7e 06                	jle    2626a <__find_arguments+0x254>
   26264:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26267:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2626a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2626e:	74 15                	je     26285 <__find_arguments+0x26f>
   26270:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26274:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26277:	8d 50 01             	lea    0x1(%rax),%edx
   2627a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2627d:	48 98                	cltq   
   2627f:	48 01 c8             	add    %rcx,%rax
   26282:	c6 00 04             	movb   $0x4,(%rax)
   26285:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26289:	0f 84 e5 19 00 00    	je     27c74 <__find_arguments+0x1c5e>
   2628f:	e9 69 fe ff ff       	jmp    260fd <__find_arguments+0xe7>
   26294:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26298:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2629c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   262a0:	0f b6 00             	movzbl (%rax),%eax
   262a3:	0f be c0             	movsbl %al,%eax
   262a6:	89 45 a8             	mov    %eax,-0x58(%rbp)
   262a9:	83 7d a8 2a          	cmpl   $0x2a,-0x58(%rbp)
   262ad:	0f 85 65 01 00 00    	jne    26418 <__find_arguments+0x402>
   262b3:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   262ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   262be:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   262c2:	eb 57                	jmp    2631b <__find_arguments+0x305>
   262c4:	81 7d b0 cc cc cc 0c 	cmpl   $0xccccccc,-0x50(%rbp)
   262cb:	0f 8f a6 19 00 00    	jg     27c77 <__find_arguments+0x1c61>
   262d1:	8b 55 b0             	mov    -0x50(%rbp),%edx
   262d4:	89 d0                	mov    %edx,%eax
   262d6:	c1 e0 02             	shl    $0x2,%eax
   262d9:	01 d0                	add    %edx,%eax
   262db:	01 c0                	add    %eax,%eax
   262dd:	89 45 b0             	mov    %eax,-0x50(%rbp)
   262e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   262e4:	0f b6 00             	movzbl (%rax),%eax
   262e7:	0f be c0             	movsbl %al,%eax
   262ea:	ba 30 00 00 00       	mov    $0x30,%edx
   262ef:	29 c2                	sub    %eax,%edx
   262f1:	89 d0                	mov    %edx,%eax
   262f3:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   262f8:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   262fb:	0f 8f 79 19 00 00    	jg     27c7a <__find_arguments+0x1c64>
   26301:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26305:	0f b6 00             	movzbl (%rax),%eax
   26308:	0f be d0             	movsbl %al,%edx
   2630b:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2630e:	01 d0                	add    %edx,%eax
   26310:	83 e8 30             	sub    $0x30,%eax
   26313:	89 45 b0             	mov    %eax,-0x50(%rbp)
   26316:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2631b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2631f:	0f b6 00             	movzbl (%rax),%eax
   26322:	0f be c0             	movsbl %al,%eax
   26325:	83 e8 30             	sub    $0x30,%eax
   26328:	83 f8 09             	cmp    $0x9,%eax
   2632b:	76 97                	jbe    262c4 <__find_arguments+0x2ae>
   2632d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26331:	0f b6 00             	movzbl (%rax),%eax
   26334:	3c 24                	cmp    $0x24,%al
   26336:	75 75                	jne    263ad <__find_arguments+0x397>
   26338:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2633b:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2633e:	8b 45 b0             	mov    -0x50(%rbp),%eax
   26341:	89 45 bc             	mov    %eax,-0x44(%rbp)
   26344:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26347:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2634a:	7c 16                	jl     26362 <__find_arguments+0x34c>
   2634c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26350:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26354:	48 89 d6             	mov    %rdx,%rsi
   26357:	48 89 c7             	mov    %rax,%rdi
   2635a:	e8 9b 19 00 00       	call   27cfa <__grow_type_table>
   2635f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26362:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26365:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26368:	7e 06                	jle    26370 <__find_arguments+0x35a>
   2636a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2636d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26370:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26374:	74 15                	je     2638b <__find_arguments+0x375>
   26376:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2637a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2637d:	8d 50 01             	lea    0x1(%rax),%edx
   26380:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26383:	48 98                	cltq   
   26385:	48 01 c8             	add    %rcx,%rax
   26388:	c6 00 04             	movb   $0x4,(%rax)
   2638b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2638f:	0f 84 e8 18 00 00    	je     27c7d <__find_arguments+0x1c67>
   26395:	8b 45 c8             	mov    -0x38(%rbp),%eax
   26398:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2639b:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   263a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   263a4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   263a8:	e9 50 fd ff ff       	jmp    260fd <__find_arguments+0xe7>
   263ad:	8b 45 a0             	mov    -0x60(%rbp),%eax
   263b0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   263b3:	7c 16                	jl     263cb <__find_arguments+0x3b5>
   263b5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   263b9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   263bd:	48 89 d6             	mov    %rdx,%rsi
   263c0:	48 89 c7             	mov    %rax,%rdi
   263c3:	e8 32 19 00 00       	call   27cfa <__grow_type_table>
   263c8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   263cb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   263ce:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   263d1:	7e 06                	jle    263d9 <__find_arguments+0x3c3>
   263d3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   263d6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   263d9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   263dd:	74 15                	je     263f4 <__find_arguments+0x3de>
   263df:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   263e3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   263e6:	8d 50 01             	lea    0x1(%rax),%edx
   263e9:	89 55 bc             	mov    %edx,-0x44(%rbp)
   263ec:	48 98                	cltq   
   263ee:	48 01 c8             	add    %rcx,%rax
   263f1:	c6 00 04             	movb   $0x4,(%rax)
   263f4:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   263f8:	0f 84 82 18 00 00    	je     27c80 <__find_arguments+0x1c6a>
   263fe:	e9 fa fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   26403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26407:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2640b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2640f:	0f b6 00             	movzbl (%rax),%eax
   26412:	0f be c0             	movsbl %al,%eax
   26415:	89 45 a8             	mov    %eax,-0x58(%rbp)
   26418:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2641b:	83 e8 30             	sub    $0x30,%eax
   2641e:	83 f8 09             	cmp    $0x9,%eax
   26421:	76 e0                	jbe    26403 <__find_arguments+0x3ed>
   26423:	e9 ea fc ff ff       	jmp    26112 <__find_arguments+0xfc>
   26428:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
   2642f:	81 7d ac cc cc cc 0c 	cmpl   $0xccccccc,-0x54(%rbp)
   26436:	0f 8f 47 18 00 00    	jg     27c83 <__find_arguments+0x1c6d>
   2643c:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2643f:	89 d0                	mov    %edx,%eax
   26441:	c1 e0 02             	shl    $0x2,%eax
   26444:	01 d0                	add    %edx,%eax
   26446:	01 c0                	add    %eax,%eax
   26448:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2644b:	b8 30 00 00 00       	mov    $0x30,%eax
   26450:	2b 45 a8             	sub    -0x58(%rbp),%eax
   26453:	05 ff ff ff 7f       	add    $0x7fffffff,%eax
   26458:	39 45 ac             	cmp    %eax,-0x54(%rbp)
   2645b:	0f 8f 25 18 00 00    	jg     27c86 <__find_arguments+0x1c70>
   26461:	8b 55 a8             	mov    -0x58(%rbp),%edx
   26464:	8b 45 ac             	mov    -0x54(%rbp),%eax
   26467:	01 d0                	add    %edx,%eax
   26469:	83 e8 30             	sub    $0x30,%eax
   2646c:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2646f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26473:	48 8d 50 01          	lea    0x1(%rax),%rdx
   26477:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2647b:	0f b6 00             	movzbl (%rax),%eax
   2647e:	0f be c0             	movsbl %al,%eax
   26481:	89 45 a8             	mov    %eax,-0x58(%rbp)
   26484:	8b 45 a8             	mov    -0x58(%rbp),%eax
   26487:	83 e8 30             	sub    $0x30,%eax
   2648a:	83 f8 09             	cmp    $0x9,%eax
   2648d:	76 a0                	jbe    2642f <__find_arguments+0x419>
   2648f:	83 7d a8 24          	cmpl   $0x24,-0x58(%rbp)
   26493:	0f 85 79 fc ff ff    	jne    26112 <__find_arguments+0xfc>
   26499:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2649c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2649f:	e9 59 fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264a4:	83 4d b4 08          	orl    $0x8,-0x4c(%rbp)
   264a8:	e9 50 fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   264b1:	0f b6 00             	movzbl (%rax),%eax
   264b4:	3c 68                	cmp    $0x68,%al
   264b6:	75 11                	jne    264c9 <__find_arguments+0x4b3>
   264b8:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   264bd:	81 4d b4 00 08 00 00 	orl    $0x800,-0x4c(%rbp)
   264c4:	e9 34 fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264c9:	83 4d b4 40          	orl    $0x40,-0x4c(%rbp)
   264cd:	e9 2b fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264d2:	81 4d b4 00 10 00 00 	orl    $0x1000,-0x4c(%rbp)
   264d9:	e9 1f fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   264e2:	0f b6 00             	movzbl (%rax),%eax
   264e5:	3c 6c                	cmp    $0x6c,%al
   264e7:	75 0e                	jne    264f7 <__find_arguments+0x4e1>
   264e9:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   264ee:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   264f2:	e9 06 fc ff ff       	jmp    260fd <__find_arguments+0xe7>
   264f7:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   264fb:	e9 fd fb ff ff       	jmp    260fd <__find_arguments+0xe7>
   26500:	83 4d b4 20          	orl    $0x20,-0x4c(%rbp)
   26504:	e9 f4 fb ff ff       	jmp    260fd <__find_arguments+0xe7>
   26509:	81 4d b4 00 02 00 00 	orl    $0x200,-0x4c(%rbp)
   26510:	e9 e8 fb ff ff       	jmp    260fd <__find_arguments+0xe7>
   26515:	81 4d b4 00 04 00 00 	orl    $0x400,-0x4c(%rbp)
   2651c:	e9 dc fb ff ff       	jmp    260fd <__find_arguments+0xe7>
   26521:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26524:	83 e0 10             	and    $0x10,%eax
   26527:	85 c0                	test   %eax,%eax
   26529:	74 47                	je     26572 <__find_arguments+0x55c>
   2652b:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2652e:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26531:	7c 16                	jl     26549 <__find_arguments+0x533>
   26533:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26537:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2653b:	48 89 d6             	mov    %rdx,%rsi
   2653e:	48 89 c7             	mov    %rax,%rdi
   26541:	e8 b4 17 00 00       	call   27cfa <__grow_type_table>
   26546:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26549:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2654c:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2654f:	7e 06                	jle    26557 <__find_arguments+0x541>
   26551:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26554:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26557:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2655b:	74 15                	je     26572 <__find_arguments+0x55c>
   2655d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26561:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26564:	8d 50 01             	lea    0x1(%rax),%edx
   26567:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2656a:	48 98                	cltq   
   2656c:	48 01 c8             	add    %rcx,%rax
   2656f:	c6 00 1b             	movb   $0x1b,(%rax)
   26572:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26576:	0f 84 0d 17 00 00    	je     27c89 <__find_arguments+0x1c73>
   2657c:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2657f:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26582:	7c 16                	jl     2659a <__find_arguments+0x584>
   26584:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26588:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2658c:	48 89 d6             	mov    %rdx,%rsi
   2658f:	48 89 c7             	mov    %rax,%rdi
   26592:	e8 63 17 00 00       	call   27cfa <__grow_type_table>
   26597:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2659a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2659d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   265a0:	7e 06                	jle    265a8 <__find_arguments+0x592>
   265a2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   265a5:	89 45 b8             	mov    %eax,-0x48(%rbp)
   265a8:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   265ac:	74 15                	je     265c3 <__find_arguments+0x5ad>
   265ae:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   265b2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   265b5:	8d 50 01             	lea    0x1(%rax),%edx
   265b8:	89 55 bc             	mov    %edx,-0x44(%rbp)
   265bb:	48 98                	cltq   
   265bd:	48 01 c8             	add    %rcx,%rax
   265c0:	c6 00 04             	movb   $0x4,(%rax)
   265c3:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   265c7:	0f 85 b2 0c 00 00    	jne    2727f <__find_arguments+0x1269>
   265cd:	e9 d3 16 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   265d2:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   265d6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   265d9:	25 00 10 00 00       	and    $0x1000,%eax
   265de:	85 c0                	test   %eax,%eax
   265e0:	74 50                	je     26632 <__find_arguments+0x61c>
   265e2:	8b 45 a0             	mov    -0x60(%rbp),%eax
   265e5:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   265e8:	7c 16                	jl     26600 <__find_arguments+0x5ea>
   265ea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   265ee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   265f2:	48 89 d6             	mov    %rdx,%rsi
   265f5:	48 89 c7             	mov    %rax,%rdi
   265f8:	e8 fd 16 00 00       	call   27cfa <__grow_type_table>
   265fd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26600:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26603:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26606:	7e 06                	jle    2660e <__find_arguments+0x5f8>
   26608:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2660b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2660e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26612:	0f 84 7c 02 00 00    	je     26894 <__find_arguments+0x87e>
   26618:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2661c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2661f:	8d 50 01             	lea    0x1(%rax),%edx
   26622:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26625:	48 98                	cltq   
   26627:	48 01 c8             	add    %rcx,%rax
   2662a:	c6 00 16             	movb   $0x16,(%rax)
   2662d:	e9 62 02 00 00       	jmp    26894 <__find_arguments+0x87e>
   26632:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26635:	25 00 02 00 00       	and    $0x200,%eax
   2663a:	85 c0                	test   %eax,%eax
   2663c:	74 50                	je     2668e <__find_arguments+0x678>
   2663e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26641:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26644:	7c 16                	jl     2665c <__find_arguments+0x646>
   26646:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2664a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2664e:	48 89 d6             	mov    %rdx,%rsi
   26651:	48 89 c7             	mov    %rax,%rdi
   26654:	e8 a1 16 00 00       	call   27cfa <__grow_type_table>
   26659:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2665c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2665f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26662:	7e 06                	jle    2666a <__find_arguments+0x654>
   26664:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26667:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2666a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2666e:	0f 84 20 02 00 00    	je     26894 <__find_arguments+0x87e>
   26674:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26678:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2667b:	8d 50 01             	lea    0x1(%rax),%edx
   2667e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26681:	48 98                	cltq   
   26683:	48 01 c8             	add    %rcx,%rax
   26686:	c6 00 11             	movb   $0x11,(%rax)
   26689:	e9 06 02 00 00       	jmp    26894 <__find_arguments+0x87e>
   2668e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26691:	25 00 04 00 00       	and    $0x400,%eax
   26696:	85 c0                	test   %eax,%eax
   26698:	74 50                	je     266ea <__find_arguments+0x6d4>
   2669a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2669d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   266a0:	7c 16                	jl     266b8 <__find_arguments+0x6a2>
   266a2:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   266a6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   266aa:	48 89 d6             	mov    %rdx,%rsi
   266ad:	48 89 c7             	mov    %rax,%rdi
   266b0:	e8 45 16 00 00       	call   27cfa <__grow_type_table>
   266b5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   266b8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   266bb:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   266be:	7e 06                	jle    266c6 <__find_arguments+0x6b0>
   266c0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   266c3:	89 45 b8             	mov    %eax,-0x48(%rbp)
   266c6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   266ca:	0f 84 c4 01 00 00    	je     26894 <__find_arguments+0x87e>
   266d0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   266d4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   266d7:	8d 50 01             	lea    0x1(%rax),%edx
   266da:	89 55 bc             	mov    %edx,-0x44(%rbp)
   266dd:	48 98                	cltq   
   266df:	48 01 c8             	add    %rcx,%rax
   266e2:	c6 00 14             	movb   $0x14,(%rax)
   266e5:	e9 aa 01 00 00       	jmp    26894 <__find_arguments+0x87e>
   266ea:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   266ed:	83 e0 20             	and    $0x20,%eax
   266f0:	85 c0                	test   %eax,%eax
   266f2:	74 50                	je     26744 <__find_arguments+0x72e>
   266f4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   266f7:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   266fa:	7c 16                	jl     26712 <__find_arguments+0x6fc>
   266fc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26700:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26704:	48 89 d6             	mov    %rdx,%rsi
   26707:	48 89 c7             	mov    %rax,%rdi
   2670a:	e8 eb 15 00 00       	call   27cfa <__grow_type_table>
   2670f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26712:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26715:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26718:	7e 06                	jle    26720 <__find_arguments+0x70a>
   2671a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2671d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26720:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26724:	0f 84 6a 01 00 00    	je     26894 <__find_arguments+0x87e>
   2672a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2672e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26731:	8d 50 01             	lea    0x1(%rax),%edx
   26734:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26737:	48 98                	cltq   
   26739:	48 01 c8             	add    %rcx,%rax
   2673c:	c6 00 0a             	movb   $0xa,(%rax)
   2673f:	e9 50 01 00 00       	jmp    26894 <__find_arguments+0x87e>
   26744:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26747:	83 e0 10             	and    $0x10,%eax
   2674a:	85 c0                	test   %eax,%eax
   2674c:	74 50                	je     2679e <__find_arguments+0x788>
   2674e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26751:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26754:	7c 16                	jl     2676c <__find_arguments+0x756>
   26756:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2675a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2675e:	48 89 d6             	mov    %rdx,%rsi
   26761:	48 89 c7             	mov    %rax,%rdi
   26764:	e8 91 15 00 00       	call   27cfa <__grow_type_table>
   26769:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2676c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2676f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26772:	7e 06                	jle    2677a <__find_arguments+0x764>
   26774:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26777:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2677a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2677e:	0f 84 10 01 00 00    	je     26894 <__find_arguments+0x87e>
   26784:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26788:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2678b:	8d 50 01             	lea    0x1(%rax),%edx
   2678e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26791:	48 98                	cltq   
   26793:	48 01 c8             	add    %rcx,%rax
   26796:	c6 00 07             	movb   $0x7,(%rax)
   26799:	e9 f6 00 00 00       	jmp    26894 <__find_arguments+0x87e>
   2679e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   267a1:	83 e0 40             	and    $0x40,%eax
   267a4:	85 c0                	test   %eax,%eax
   267a6:	74 50                	je     267f8 <__find_arguments+0x7e2>
   267a8:	8b 45 a0             	mov    -0x60(%rbp),%eax
   267ab:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   267ae:	7c 16                	jl     267c6 <__find_arguments+0x7b0>
   267b0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   267b4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   267b8:	48 89 d6             	mov    %rdx,%rsi
   267bb:	48 89 c7             	mov    %rax,%rdi
   267be:	e8 37 15 00 00       	call   27cfa <__grow_type_table>
   267c3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   267c6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   267c9:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   267cc:	7e 06                	jle    267d4 <__find_arguments+0x7be>
   267ce:	8b 45 bc             	mov    -0x44(%rbp),%eax
   267d1:	89 45 b8             	mov    %eax,-0x48(%rbp)
   267d4:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   267d8:	0f 84 b6 00 00 00    	je     26894 <__find_arguments+0x87e>
   267de:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   267e2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   267e5:	8d 50 01             	lea    0x1(%rax),%edx
   267e8:	89 55 bc             	mov    %edx,-0x44(%rbp)
   267eb:	48 98                	cltq   
   267ed:	48 01 c8             	add    %rcx,%rax
   267f0:	c6 00 01             	movb   $0x1,(%rax)
   267f3:	e9 9c 00 00 00       	jmp    26894 <__find_arguments+0x87e>
   267f8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   267fb:	25 00 08 00 00       	and    $0x800,%eax
   26800:	85 c0                	test   %eax,%eax
   26802:	74 49                	je     2684d <__find_arguments+0x837>
   26804:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26807:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2680a:	7c 16                	jl     26822 <__find_arguments+0x80c>
   2680c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26810:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26814:	48 89 d6             	mov    %rdx,%rsi
   26817:	48 89 c7             	mov    %rax,%rdi
   2681a:	e8 db 14 00 00       	call   27cfa <__grow_type_table>
   2681f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26822:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26825:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26828:	7e 06                	jle    26830 <__find_arguments+0x81a>
   2682a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2682d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26830:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26834:	74 5e                	je     26894 <__find_arguments+0x87e>
   26836:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2683a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2683d:	8d 50 01             	lea    0x1(%rax),%edx
   26840:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26843:	48 98                	cltq   
   26845:	48 01 c8             	add    %rcx,%rax
   26848:	c6 00 19             	movb   $0x19,(%rax)
   2684b:	eb 47                	jmp    26894 <__find_arguments+0x87e>
   2684d:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26850:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26853:	7c 16                	jl     2686b <__find_arguments+0x855>
   26855:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26859:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2685d:	48 89 d6             	mov    %rdx,%rsi
   26860:	48 89 c7             	mov    %rax,%rdi
   26863:	e8 92 14 00 00       	call   27cfa <__grow_type_table>
   26868:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2686b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2686e:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26871:	7e 06                	jle    26879 <__find_arguments+0x863>
   26873:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26876:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26879:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2687d:	74 15                	je     26894 <__find_arguments+0x87e>
   2687f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26883:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26886:	8d 50 01             	lea    0x1(%rax),%edx
   26889:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2688c:	48 98                	cltq   
   2688e:	48 01 c8             	add    %rcx,%rax
   26891:	c6 00 04             	movb   $0x4,(%rax)
   26894:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26898:	0f 85 e7 09 00 00    	jne    27285 <__find_arguments+0x126f>
   2689e:	e9 02 14 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   268a3:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   268a6:	83 e0 08             	and    $0x8,%eax
   268a9:	85 c0                	test   %eax,%eax
   268ab:	74 47                	je     268f4 <__find_arguments+0x8de>
   268ad:	8b 45 a0             	mov    -0x60(%rbp),%eax
   268b0:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   268b3:	7c 16                	jl     268cb <__find_arguments+0x8b5>
   268b5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   268b9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   268bd:	48 89 d6             	mov    %rdx,%rsi
   268c0:	48 89 c7             	mov    %rax,%rdi
   268c3:	e8 32 14 00 00       	call   27cfa <__grow_type_table>
   268c8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   268cb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   268ce:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   268d1:	7e 06                	jle    268d9 <__find_arguments+0x8c3>
   268d3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   268d6:	89 45 b8             	mov    %eax,-0x48(%rbp)
   268d9:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   268dd:	74 15                	je     268f4 <__find_arguments+0x8de>
   268df:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   268e3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   268e6:	8d 50 01             	lea    0x1(%rax),%edx
   268e9:	89 55 bc             	mov    %edx,-0x44(%rbp)
   268ec:	48 98                	cltq   
   268ee:	48 01 c8             	add    %rcx,%rax
   268f1:	c6 00 0e             	movb   $0xe,(%rax)
   268f4:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   268f8:	0f 84 8e 13 00 00    	je     27c8c <__find_arguments+0x1c76>
   268fe:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26901:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26904:	7c 16                	jl     2691c <__find_arguments+0x906>
   26906:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2690a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2690e:	48 89 d6             	mov    %rdx,%rsi
   26911:	48 89 c7             	mov    %rax,%rdi
   26914:	e8 e1 13 00 00       	call   27cfa <__grow_type_table>
   26919:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2691c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2691f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26922:	7e 06                	jle    2692a <__find_arguments+0x914>
   26924:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26927:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2692a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2692e:	74 15                	je     26945 <__find_arguments+0x92f>
   26930:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26934:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26937:	8d 50 01             	lea    0x1(%rax),%edx
   2693a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2693d:	48 98                	cltq   
   2693f:	48 01 c8             	add    %rcx,%rax
   26942:	c6 00 0d             	movb   $0xd,(%rax)
   26945:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26949:	0f 85 3c 09 00 00    	jne    2728b <__find_arguments+0x1275>
   2694f:	e9 51 13 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   26954:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26957:	83 e0 20             	and    $0x20,%eax
   2695a:	85 c0                	test   %eax,%eax
   2695c:	74 47                	je     269a5 <__find_arguments+0x98f>
   2695e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26961:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26964:	7c 16                	jl     2697c <__find_arguments+0x966>
   26966:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2696a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2696e:	48 89 d6             	mov    %rdx,%rsi
   26971:	48 89 c7             	mov    %rax,%rdi
   26974:	e8 81 13 00 00       	call   27cfa <__grow_type_table>
   26979:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2697c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2697f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26982:	7e 06                	jle    2698a <__find_arguments+0x974>
   26984:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26987:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2698a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2698e:	74 15                	je     269a5 <__find_arguments+0x98f>
   26990:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26994:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26997:	8d 50 01             	lea    0x1(%rax),%edx
   2699a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2699d:	48 98                	cltq   
   2699f:	48 01 c8             	add    %rcx,%rax
   269a2:	c6 00 0c             	movb   $0xc,(%rax)
   269a5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   269a9:	0f 84 e0 12 00 00    	je     27c8f <__find_arguments+0x1c79>
   269af:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   269b2:	83 e0 10             	and    $0x10,%eax
   269b5:	85 c0                	test   %eax,%eax
   269b7:	74 47                	je     26a00 <__find_arguments+0x9ea>
   269b9:	8b 45 a0             	mov    -0x60(%rbp),%eax
   269bc:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   269bf:	7c 16                	jl     269d7 <__find_arguments+0x9c1>
   269c1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   269c5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   269c9:	48 89 d6             	mov    %rdx,%rsi
   269cc:	48 89 c7             	mov    %rax,%rdi
   269cf:	e8 26 13 00 00       	call   27cfa <__grow_type_table>
   269d4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   269d7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   269da:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   269dd:	7e 06                	jle    269e5 <__find_arguments+0x9cf>
   269df:	8b 45 bc             	mov    -0x44(%rbp),%eax
   269e2:	89 45 b8             	mov    %eax,-0x48(%rbp)
   269e5:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   269e9:	74 15                	je     26a00 <__find_arguments+0x9ea>
   269eb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   269ef:	8b 45 bc             	mov    -0x44(%rbp),%eax
   269f2:	8d 50 01             	lea    0x1(%rax),%edx
   269f5:	89 55 bc             	mov    %edx,-0x44(%rbp)
   269f8:	48 98                	cltq   
   269fa:	48 01 c8             	add    %rcx,%rax
   269fd:	c6 00 09             	movb   $0x9,(%rax)
   26a00:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26a04:	0f 84 88 12 00 00    	je     27c92 <__find_arguments+0x1c7c>
   26a0a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26a0d:	83 e0 40             	and    $0x40,%eax
   26a10:	85 c0                	test   %eax,%eax
   26a12:	74 47                	je     26a5b <__find_arguments+0xa45>
   26a14:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26a17:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26a1a:	7c 16                	jl     26a32 <__find_arguments+0xa1c>
   26a1c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26a20:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26a24:	48 89 d6             	mov    %rdx,%rsi
   26a27:	48 89 c7             	mov    %rax,%rdi
   26a2a:	e8 cb 12 00 00       	call   27cfa <__grow_type_table>
   26a2f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26a32:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26a35:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26a38:	7e 06                	jle    26a40 <__find_arguments+0xa2a>
   26a3a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26a3d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26a40:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26a44:	74 15                	je     26a5b <__find_arguments+0xa45>
   26a46:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26a4a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26a4d:	8d 50 01             	lea    0x1(%rax),%edx
   26a50:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26a53:	48 98                	cltq   
   26a55:	48 01 c8             	add    %rcx,%rax
   26a58:	c6 00 03             	movb   $0x3,(%rax)
   26a5b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26a5f:	0f 84 30 12 00 00    	je     27c95 <__find_arguments+0x1c7f>
   26a65:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26a68:	25 00 02 00 00       	and    $0x200,%eax
   26a6d:	85 c0                	test   %eax,%eax
   26a6f:	74 47                	je     26ab8 <__find_arguments+0xaa2>
   26a71:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26a74:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26a77:	7c 16                	jl     26a8f <__find_arguments+0xa79>
   26a79:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26a7d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26a81:	48 89 d6             	mov    %rdx,%rsi
   26a84:	48 89 c7             	mov    %rax,%rdi
   26a87:	e8 6e 12 00 00       	call   27cfa <__grow_type_table>
   26a8c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26a8f:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26a92:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26a95:	7e 06                	jle    26a9d <__find_arguments+0xa87>
   26a97:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26a9a:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26a9d:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26aa1:	74 15                	je     26ab8 <__find_arguments+0xaa2>
   26aa3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26aa7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26aaa:	8d 50 01             	lea    0x1(%rax),%edx
   26aad:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26ab0:	48 98                	cltq   
   26ab2:	48 01 c8             	add    %rcx,%rax
   26ab5:	c6 00 12             	movb   $0x12,(%rax)
   26ab8:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26abc:	0f 84 d6 11 00 00    	je     27c98 <__find_arguments+0x1c82>
   26ac2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26ac5:	25 00 04 00 00       	and    $0x400,%eax
   26aca:	85 c0                	test   %eax,%eax
   26acc:	74 47                	je     26b15 <__find_arguments+0xaff>
   26ace:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26ad1:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26ad4:	7c 16                	jl     26aec <__find_arguments+0xad6>
   26ad6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26ada:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26ade:	48 89 d6             	mov    %rdx,%rsi
   26ae1:	48 89 c7             	mov    %rax,%rdi
   26ae4:	e8 11 12 00 00       	call   27cfa <__grow_type_table>
   26ae9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26aec:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26aef:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26af2:	7e 06                	jle    26afa <__find_arguments+0xae4>
   26af4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26af7:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26afa:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26afe:	74 15                	je     26b15 <__find_arguments+0xaff>
   26b00:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26b04:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26b07:	8d 50 01             	lea    0x1(%rax),%edx
   26b0a:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26b0d:	48 98                	cltq   
   26b0f:	48 01 c8             	add    %rcx,%rax
   26b12:	c6 00 15             	movb   $0x15,(%rax)
   26b15:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26b19:	0f 84 7c 11 00 00    	je     27c9b <__find_arguments+0x1c85>
   26b1f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26b22:	25 00 10 00 00       	and    $0x1000,%eax
   26b27:	85 c0                	test   %eax,%eax
   26b29:	74 47                	je     26b72 <__find_arguments+0xb5c>
   26b2b:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26b2e:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26b31:	7c 16                	jl     26b49 <__find_arguments+0xb33>
   26b33:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26b37:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26b3b:	48 89 d6             	mov    %rdx,%rsi
   26b3e:	48 89 c7             	mov    %rax,%rdi
   26b41:	e8 b4 11 00 00       	call   27cfa <__grow_type_table>
   26b46:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26b49:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26b4c:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26b4f:	7e 06                	jle    26b57 <__find_arguments+0xb41>
   26b51:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26b54:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26b57:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26b5b:	74 15                	je     26b72 <__find_arguments+0xb5c>
   26b5d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26b61:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26b64:	8d 50 01             	lea    0x1(%rax),%edx
   26b67:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26b6a:	48 98                	cltq   
   26b6c:	48 01 c8             	add    %rcx,%rax
   26b6f:	c6 00 18             	movb   $0x18,(%rax)
   26b72:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26b76:	0f 84 22 11 00 00    	je     27c9e <__find_arguments+0x1c88>
   26b7c:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26b7f:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26b82:	7c 16                	jl     26b9a <__find_arguments+0xb84>
   26b84:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26b88:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26b8c:	48 89 d6             	mov    %rdx,%rsi
   26b8f:	48 89 c7             	mov    %rax,%rdi
   26b92:	e8 63 11 00 00       	call   27cfa <__grow_type_table>
   26b97:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26b9a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26b9d:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26ba0:	7e 06                	jle    26ba8 <__find_arguments+0xb92>
   26ba2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26ba5:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26ba8:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26bac:	74 15                	je     26bc3 <__find_arguments+0xbad>
   26bae:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26bb2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26bb5:	8d 50 01             	lea    0x1(%rax),%edx
   26bb8:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26bbb:	48 98                	cltq   
   26bbd:	48 01 c8             	add    %rcx,%rax
   26bc0:	c6 00 06             	movb   $0x6,(%rax)
   26bc3:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26bc7:	0f 85 c4 06 00 00    	jne    27291 <__find_arguments+0x127b>
   26bcd:	e9 d3 10 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   26bd2:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   26bd6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26bd9:	25 00 10 00 00       	and    $0x1000,%eax
   26bde:	85 c0                	test   %eax,%eax
   26be0:	74 50                	je     26c32 <__find_arguments+0xc1c>
   26be2:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26be5:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26be8:	7c 16                	jl     26c00 <__find_arguments+0xbea>
   26bea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26bee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26bf2:	48 89 d6             	mov    %rdx,%rsi
   26bf5:	48 89 c7             	mov    %rax,%rdi
   26bf8:	e8 fd 10 00 00       	call   27cfa <__grow_type_table>
   26bfd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26c00:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c03:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26c06:	7e 06                	jle    26c0e <__find_arguments+0xbf8>
   26c08:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c0b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26c0e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26c12:	0f 84 7c 02 00 00    	je     26e94 <__find_arguments+0xe7e>
   26c18:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26c1c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c1f:	8d 50 01             	lea    0x1(%rax),%edx
   26c22:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26c25:	48 98                	cltq   
   26c27:	48 01 c8             	add    %rcx,%rax
   26c2a:	c6 00 17             	movb   $0x17,(%rax)
   26c2d:	e9 62 02 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26c32:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26c35:	25 00 02 00 00       	and    $0x200,%eax
   26c3a:	85 c0                	test   %eax,%eax
   26c3c:	74 50                	je     26c8e <__find_arguments+0xc78>
   26c3e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26c41:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26c44:	7c 16                	jl     26c5c <__find_arguments+0xc46>
   26c46:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26c4a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26c4e:	48 89 d6             	mov    %rdx,%rsi
   26c51:	48 89 c7             	mov    %rax,%rdi
   26c54:	e8 a1 10 00 00       	call   27cfa <__grow_type_table>
   26c59:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26c5c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c5f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26c62:	7e 06                	jle    26c6a <__find_arguments+0xc54>
   26c64:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c67:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26c6a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26c6e:	0f 84 20 02 00 00    	je     26e94 <__find_arguments+0xe7e>
   26c74:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26c78:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26c7b:	8d 50 01             	lea    0x1(%rax),%edx
   26c7e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26c81:	48 98                	cltq   
   26c83:	48 01 c8             	add    %rcx,%rax
   26c86:	c6 00 11             	movb   $0x11,(%rax)
   26c89:	e9 06 02 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26c8e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26c91:	25 00 04 00 00       	and    $0x400,%eax
   26c96:	85 c0                	test   %eax,%eax
   26c98:	74 50                	je     26cea <__find_arguments+0xcd4>
   26c9a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26c9d:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26ca0:	7c 16                	jl     26cb8 <__find_arguments+0xca2>
   26ca2:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26ca6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26caa:	48 89 d6             	mov    %rdx,%rsi
   26cad:	48 89 c7             	mov    %rax,%rdi
   26cb0:	e8 45 10 00 00       	call   27cfa <__grow_type_table>
   26cb5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26cb8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26cbb:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26cbe:	7e 06                	jle    26cc6 <__find_arguments+0xcb0>
   26cc0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26cc3:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26cc6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26cca:	0f 84 c4 01 00 00    	je     26e94 <__find_arguments+0xe7e>
   26cd0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26cd4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26cd7:	8d 50 01             	lea    0x1(%rax),%edx
   26cda:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26cdd:	48 98                	cltq   
   26cdf:	48 01 c8             	add    %rcx,%rax
   26ce2:	c6 00 13             	movb   $0x13,(%rax)
   26ce5:	e9 aa 01 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26cea:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26ced:	83 e0 20             	and    $0x20,%eax
   26cf0:	85 c0                	test   %eax,%eax
   26cf2:	74 50                	je     26d44 <__find_arguments+0xd2e>
   26cf4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26cf7:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26cfa:	7c 16                	jl     26d12 <__find_arguments+0xcfc>
   26cfc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26d00:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26d04:	48 89 d6             	mov    %rdx,%rsi
   26d07:	48 89 c7             	mov    %rax,%rdi
   26d0a:	e8 eb 0f 00 00       	call   27cfa <__grow_type_table>
   26d0f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26d12:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d15:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26d18:	7e 06                	jle    26d20 <__find_arguments+0xd0a>
   26d1a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d1d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26d20:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26d24:	0f 84 6a 01 00 00    	je     26e94 <__find_arguments+0xe7e>
   26d2a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26d2e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d31:	8d 50 01             	lea    0x1(%rax),%edx
   26d34:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26d37:	48 98                	cltq   
   26d39:	48 01 c8             	add    %rcx,%rax
   26d3c:	c6 00 0b             	movb   $0xb,(%rax)
   26d3f:	e9 50 01 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26d44:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26d47:	83 e0 10             	and    $0x10,%eax
   26d4a:	85 c0                	test   %eax,%eax
   26d4c:	74 50                	je     26d9e <__find_arguments+0xd88>
   26d4e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26d51:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26d54:	7c 16                	jl     26d6c <__find_arguments+0xd56>
   26d56:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26d5a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26d5e:	48 89 d6             	mov    %rdx,%rsi
   26d61:	48 89 c7             	mov    %rax,%rdi
   26d64:	e8 91 0f 00 00       	call   27cfa <__grow_type_table>
   26d69:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26d6c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d6f:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26d72:	7e 06                	jle    26d7a <__find_arguments+0xd64>
   26d74:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d77:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26d7a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26d7e:	0f 84 10 01 00 00    	je     26e94 <__find_arguments+0xe7e>
   26d84:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26d88:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26d8b:	8d 50 01             	lea    0x1(%rax),%edx
   26d8e:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26d91:	48 98                	cltq   
   26d93:	48 01 c8             	add    %rcx,%rax
   26d96:	c6 00 08             	movb   $0x8,(%rax)
   26d99:	e9 f6 00 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26d9e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26da1:	83 e0 40             	and    $0x40,%eax
   26da4:	85 c0                	test   %eax,%eax
   26da6:	74 50                	je     26df8 <__find_arguments+0xde2>
   26da8:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26dab:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26dae:	7c 16                	jl     26dc6 <__find_arguments+0xdb0>
   26db0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26db4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26db8:	48 89 d6             	mov    %rdx,%rsi
   26dbb:	48 89 c7             	mov    %rax,%rdi
   26dbe:	e8 37 0f 00 00       	call   27cfa <__grow_type_table>
   26dc3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26dc6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26dc9:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26dcc:	7e 06                	jle    26dd4 <__find_arguments+0xdbe>
   26dce:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26dd1:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26dd4:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26dd8:	0f 84 b6 00 00 00    	je     26e94 <__find_arguments+0xe7e>
   26dde:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26de2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26de5:	8d 50 01             	lea    0x1(%rax),%edx
   26de8:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26deb:	48 98                	cltq   
   26ded:	48 01 c8             	add    %rcx,%rax
   26df0:	c6 00 02             	movb   $0x2,(%rax)
   26df3:	e9 9c 00 00 00       	jmp    26e94 <__find_arguments+0xe7e>
   26df8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26dfb:	25 00 08 00 00       	and    $0x800,%eax
   26e00:	85 c0                	test   %eax,%eax
   26e02:	74 49                	je     26e4d <__find_arguments+0xe37>
   26e04:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26e07:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26e0a:	7c 16                	jl     26e22 <__find_arguments+0xe0c>
   26e0c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26e10:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26e14:	48 89 d6             	mov    %rdx,%rsi
   26e17:	48 89 c7             	mov    %rax,%rdi
   26e1a:	e8 db 0e 00 00       	call   27cfa <__grow_type_table>
   26e1f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26e22:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e25:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26e28:	7e 06                	jle    26e30 <__find_arguments+0xe1a>
   26e2a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e2d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26e30:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26e34:	74 5e                	je     26e94 <__find_arguments+0xe7e>
   26e36:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26e3a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e3d:	8d 50 01             	lea    0x1(%rax),%edx
   26e40:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26e43:	48 98                	cltq   
   26e45:	48 01 c8             	add    %rcx,%rax
   26e48:	c6 00 1a             	movb   $0x1a,(%rax)
   26e4b:	eb 47                	jmp    26e94 <__find_arguments+0xe7e>
   26e4d:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26e50:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26e53:	7c 16                	jl     26e6b <__find_arguments+0xe55>
   26e55:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26e59:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26e5d:	48 89 d6             	mov    %rdx,%rsi
   26e60:	48 89 c7             	mov    %rax,%rdi
   26e63:	e8 92 0e 00 00       	call   27cfa <__grow_type_table>
   26e68:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26e6b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e6e:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26e71:	7e 06                	jle    26e79 <__find_arguments+0xe63>
   26e73:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e76:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26e79:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26e7d:	74 15                	je     26e94 <__find_arguments+0xe7e>
   26e7f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26e83:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26e86:	8d 50 01             	lea    0x1(%rax),%edx
   26e89:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26e8c:	48 98                	cltq   
   26e8e:	48 01 c8             	add    %rcx,%rax
   26e91:	c6 00 05             	movb   $0x5,(%rax)
   26e94:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26e98:	0f 85 f9 03 00 00    	jne    27297 <__find_arguments+0x1281>
   26e9e:	e9 02 0e 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   26ea3:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26ea6:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26ea9:	7c 16                	jl     26ec1 <__find_arguments+0xeab>
   26eab:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26eaf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26eb3:	48 89 d6             	mov    %rdx,%rsi
   26eb6:	48 89 c7             	mov    %rax,%rdi
   26eb9:	e8 3c 0e 00 00       	call   27cfa <__grow_type_table>
   26ebe:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26ec1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26ec4:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26ec7:	7e 06                	jle    26ecf <__find_arguments+0xeb9>
   26ec9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26ecc:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26ecf:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26ed3:	74 15                	je     26eea <__find_arguments+0xed4>
   26ed5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26ed9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26edc:	8d 50 01             	lea    0x1(%rax),%edx
   26edf:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26ee2:	48 98                	cltq   
   26ee4:	48 01 c8             	add    %rcx,%rax
   26ee7:	c6 00 10             	movb   $0x10,(%rax)
   26eea:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26eee:	0f 85 a9 03 00 00    	jne    2729d <__find_arguments+0x1287>
   26ef4:	e9 ac 0d 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   26ef9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26efc:	83 e0 10             	and    $0x10,%eax
   26eff:	85 c0                	test   %eax,%eax
   26f01:	74 47                	je     26f4a <__find_arguments+0xf34>
   26f03:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26f06:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26f09:	7c 16                	jl     26f21 <__find_arguments+0xf0b>
   26f0b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26f0f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26f13:	48 89 d6             	mov    %rdx,%rsi
   26f16:	48 89 c7             	mov    %rax,%rdi
   26f19:	e8 dc 0d 00 00       	call   27cfa <__grow_type_table>
   26f1e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26f21:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f24:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26f27:	7e 06                	jle    26f2f <__find_arguments+0xf19>
   26f29:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f2c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26f2f:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26f33:	74 15                	je     26f4a <__find_arguments+0xf34>
   26f35:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26f39:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f3c:	8d 50 01             	lea    0x1(%rax),%edx
   26f3f:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26f42:	48 98                	cltq   
   26f44:	48 01 c8             	add    %rcx,%rax
   26f47:	c6 00 1c             	movb   $0x1c,(%rax)
   26f4a:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26f4e:	0f 84 4d 0d 00 00    	je     27ca1 <__find_arguments+0x1c8b>
   26f54:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26f57:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26f5a:	7c 16                	jl     26f72 <__find_arguments+0xf5c>
   26f5c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26f60:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26f64:	48 89 d6             	mov    %rdx,%rsi
   26f67:	48 89 c7             	mov    %rax,%rdi
   26f6a:	e8 8b 0d 00 00       	call   27cfa <__grow_type_table>
   26f6f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26f72:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f75:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26f78:	7e 06                	jle    26f80 <__find_arguments+0xf6a>
   26f7a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f7d:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26f80:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26f84:	74 15                	je     26f9b <__find_arguments+0xf85>
   26f86:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26f8a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26f8d:	8d 50 01             	lea    0x1(%rax),%edx
   26f90:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26f93:	48 98                	cltq   
   26f95:	48 01 c8             	add    %rcx,%rax
   26f98:	c6 00 0f             	movb   $0xf,(%rax)
   26f9b:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26f9f:	0f 85 fe 02 00 00    	jne    272a3 <__find_arguments+0x128d>
   26fa5:	e9 fb 0c 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   26faa:	83 4d b4 10          	orl    $0x10,-0x4c(%rbp)
   26fae:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   26fb1:	25 00 10 00 00       	and    $0x1000,%eax
   26fb6:	85 c0                	test   %eax,%eax
   26fb8:	74 50                	je     2700a <__find_arguments+0xff4>
   26fba:	8b 45 a0             	mov    -0x60(%rbp),%eax
   26fbd:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   26fc0:	7c 16                	jl     26fd8 <__find_arguments+0xfc2>
   26fc2:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   26fc6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26fca:	48 89 d6             	mov    %rdx,%rsi
   26fcd:	48 89 c7             	mov    %rax,%rdi
   26fd0:	e8 25 0d 00 00       	call   27cfa <__grow_type_table>
   26fd5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   26fd8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26fdb:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   26fde:	7e 06                	jle    26fe6 <__find_arguments+0xfd0>
   26fe0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26fe3:	89 45 b8             	mov    %eax,-0x48(%rbp)
   26fe6:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   26fea:	0f 84 7c 02 00 00    	je     2726c <__find_arguments+0x1256>
   26ff0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26ff4:	8b 45 bc             	mov    -0x44(%rbp),%eax
   26ff7:	8d 50 01             	lea    0x1(%rax),%edx
   26ffa:	89 55 bc             	mov    %edx,-0x44(%rbp)
   26ffd:	48 98                	cltq   
   26fff:	48 01 c8             	add    %rcx,%rax
   27002:	c6 00 17             	movb   $0x17,(%rax)
   27005:	e9 62 02 00 00       	jmp    2726c <__find_arguments+0x1256>
   2700a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2700d:	25 00 02 00 00       	and    $0x200,%eax
   27012:	85 c0                	test   %eax,%eax
   27014:	74 50                	je     27066 <__find_arguments+0x1050>
   27016:	8b 45 a0             	mov    -0x60(%rbp),%eax
   27019:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2701c:	7c 16                	jl     27034 <__find_arguments+0x101e>
   2701e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   27022:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   27026:	48 89 d6             	mov    %rdx,%rsi
   27029:	48 89 c7             	mov    %rax,%rdi
   2702c:	e8 c9 0c 00 00       	call   27cfa <__grow_type_table>
   27031:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   27034:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27037:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2703a:	7e 06                	jle    27042 <__find_arguments+0x102c>
   2703c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2703f:	89 45 b8             	mov    %eax,-0x48(%rbp)
   27042:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   27046:	0f 84 20 02 00 00    	je     2726c <__find_arguments+0x1256>
   2704c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   27050:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27053:	8d 50 01             	lea    0x1(%rax),%edx
   27056:	89 55 bc             	mov    %edx,-0x44(%rbp)
   27059:	48 98                	cltq   
   2705b:	48 01 c8             	add    %rcx,%rax
   2705e:	c6 00 11             	movb   $0x11,(%rax)
   27061:	e9 06 02 00 00       	jmp    2726c <__find_arguments+0x1256>
   27066:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   27069:	25 00 04 00 00       	and    $0x400,%eax
   2706e:	85 c0                	test   %eax,%eax
   27070:	74 50                	je     270c2 <__find_arguments+0x10ac>
   27072:	8b 45 a0             	mov    -0x60(%rbp),%eax
   27075:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   27078:	7c 16                	jl     27090 <__find_arguments+0x107a>
   2707a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2707e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   27082:	48 89 d6             	mov    %rdx,%rsi
   27085:	48 89 c7             	mov    %rax,%rdi
   27088:	e8 6d 0c 00 00       	call   27cfa <__grow_type_table>
   2708d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   27090:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27093:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   27096:	7e 06                	jle    2709e <__find_arguments+0x1088>
   27098:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2709b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2709e:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   270a2:	0f 84 c4 01 00 00    	je     2726c <__find_arguments+0x1256>
   270a8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   270ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
   270af:	8d 50 01             	lea    0x1(%rax),%edx
   270b2:	89 55 bc             	mov    %edx,-0x44(%rbp)
   270b5:	48 98                	cltq   
   270b7:	48 01 c8             	add    %rcx,%rax
   270ba:	c6 00 13             	movb   $0x13,(%rax)
   270bd:	e9 aa 01 00 00       	jmp    2726c <__find_arguments+0x1256>
   270c2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   270c5:	83 e0 20             	and    $0x20,%eax
   270c8:	85 c0                	test   %eax,%eax
   270ca:	74 50                	je     2711c <__find_arguments+0x1106>
   270cc:	8b 45 a0             	mov    -0x60(%rbp),%eax
   270cf:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   270d2:	7c 16                	jl     270ea <__find_arguments+0x10d4>
   270d4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   270d8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   270dc:	48 89 d6             	mov    %rdx,%rsi
   270df:	48 89 c7             	mov    %rax,%rdi
   270e2:	e8 13 0c 00 00       	call   27cfa <__grow_type_table>
   270e7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   270ea:	8b 45 bc             	mov    -0x44(%rbp),%eax
   270ed:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   270f0:	7e 06                	jle    270f8 <__find_arguments+0x10e2>
   270f2:	8b 45 bc             	mov    -0x44(%rbp),%eax
   270f5:	89 45 b8             	mov    %eax,-0x48(%rbp)
   270f8:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   270fc:	0f 84 6a 01 00 00    	je     2726c <__find_arguments+0x1256>
   27102:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   27106:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27109:	8d 50 01             	lea    0x1(%rax),%edx
   2710c:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2710f:	48 98                	cltq   
   27111:	48 01 c8             	add    %rcx,%rax
   27114:	c6 00 0b             	movb   $0xb,(%rax)
   27117:	e9 50 01 00 00       	jmp    2726c <__find_arguments+0x1256>
   2711c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2711f:	83 e0 10             	and    $0x10,%eax
   27122:	85 c0                	test   %eax,%eax
   27124:	74 50                	je     27176 <__find_arguments+0x1160>
   27126:	8b 45 a0             	mov    -0x60(%rbp),%eax
   27129:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2712c:	7c 16                	jl     27144 <__find_arguments+0x112e>
   2712e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   27132:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   27136:	48 89 d6             	mov    %rdx,%rsi
   27139:	48 89 c7             	mov    %rax,%rdi
   2713c:	e8 b9 0b 00 00       	call   27cfa <__grow_type_table>
   27141:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   27144:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27147:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   2714a:	7e 06                	jle    27152 <__find_arguments+0x113c>
   2714c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2714f:	89 45 b8             	mov    %eax,-0x48(%rbp)
   27152:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   27156:	0f 84 10 01 00 00    	je     2726c <__find_arguments+0x1256>
   2715c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   27160:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27163:	8d 50 01             	lea    0x1(%rax),%edx
   27166:	89 55 bc             	mov    %edx,-0x44(%rbp)
   27169:	48 98                	cltq   
   2716b:	48 01 c8             	add    %rcx,%rax
   2716e:	c6 00 08             	movb   $0x8,(%rax)
   27171:	e9 f6 00 00 00       	jmp    2726c <__find_arguments+0x1256>
   27176:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   27179:	83 e0 40             	and    $0x40,%eax
   2717c:	85 c0                	test   %eax,%eax
   2717e:	74 50                	je     271d0 <__find_arguments+0x11ba>
   27180:	8b 45 a0             	mov    -0x60(%rbp),%eax
   27183:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   27186:	7c 16                	jl     2719e <__find_arguments+0x1188>
   27188:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   2718c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   27190:	48 89 d6             	mov    %rdx,%rsi
   27193:	48 89 c7             	mov    %rax,%rdi
   27196:	e8 5f 0b 00 00       	call   27cfa <__grow_type_table>
   2719b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2719e:	8b 45 bc             	mov    -0x44(%rbp),%eax
   271a1:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   271a4:	7e 06                	jle    271ac <__find_arguments+0x1196>
   271a6:	8b 45 bc             	mov    -0x44(%rbp),%eax
   271a9:	89 45 b8             	mov    %eax,-0x48(%rbp)
   271ac:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   271b0:	0f 84 b6 00 00 00    	je     2726c <__find_arguments+0x1256>
   271b6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   271ba:	8b 45 bc             	mov    -0x44(%rbp),%eax
   271bd:	8d 50 01             	lea    0x1(%rax),%edx
   271c0:	89 55 bc             	mov    %edx,-0x44(%rbp)
   271c3:	48 98                	cltq   
   271c5:	48 01 c8             	add    %rcx,%rax
   271c8:	c6 00 02             	movb   $0x2,(%rax)
   271cb:	e9 9c 00 00 00       	jmp    2726c <__find_arguments+0x1256>
   271d0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   271d3:	25 00 08 00 00       	and    $0x800,%eax
   271d8:	85 c0                	test   %eax,%eax
   271da:	74 49                	je     27225 <__find_arguments+0x120f>
   271dc:	8b 45 a0             	mov    -0x60(%rbp),%eax
   271df:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   271e2:	7c 16                	jl     271fa <__find_arguments+0x11e4>
   271e4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   271e8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   271ec:	48 89 d6             	mov    %rdx,%rsi
   271ef:	48 89 c7             	mov    %rax,%rdi
   271f2:	e8 03 0b 00 00       	call   27cfa <__grow_type_table>
   271f7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   271fa:	8b 45 bc             	mov    -0x44(%rbp),%eax
   271fd:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   27200:	7e 06                	jle    27208 <__find_arguments+0x11f2>
   27202:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27205:	89 45 b8             	mov    %eax,-0x48(%rbp)
   27208:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   2720c:	74 5e                	je     2726c <__find_arguments+0x1256>
   2720e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   27212:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27215:	8d 50 01             	lea    0x1(%rax),%edx
   27218:	89 55 bc             	mov    %edx,-0x44(%rbp)
   2721b:	48 98                	cltq   
   2721d:	48 01 c8             	add    %rcx,%rax
   27220:	c6 00 1a             	movb   $0x1a,(%rax)
   27223:	eb 47                	jmp    2726c <__find_arguments+0x1256>
   27225:	8b 45 a0             	mov    -0x60(%rbp),%eax
   27228:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   2722b:	7c 16                	jl     27243 <__find_arguments+0x122d>
   2722d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   27231:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   27235:	48 89 d6             	mov    %rdx,%rsi
   27238:	48 89 c7             	mov    %rax,%rdi
   2723b:	e8 ba 0a 00 00       	call   27cfa <__grow_type_table>
   27240:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   27243:	8b 45 bc             	mov    -0x44(%rbp),%eax
   27246:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   27249:	7e 06                	jle    27251 <__find_arguments+0x123b>
   2724b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2724e:	89 45 b8             	mov    %eax,-0x48(%rbp)
   27251:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   27255:	74 15                	je     2726c <__find_arguments+0x1256>
   27257:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2725b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2725e:	8d 50 01             	lea    0x1(%rax),%edx
   27261:	89 55 bc             	mov    %edx,-0x44(%rbp)
   27264:	48 98                	cltq   
   27266:	48 01 c8             	add    %rcx,%rax
   27269:	c6 00 05             	movb   $0x5,(%rax)
   2726c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
   27270:	75 37                	jne    272a9 <__find_arguments+0x1293>
   27272:	e9 2e 0a 00 00       	jmp    27ca5 <__find_arguments+0x1c8f>
   27277:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
   2727b:	74 35                	je     272b2 <__find_arguments+0x129c>
   2727d:	eb 2b                	jmp    272aa <__find_arguments+0x1294>
   2727f:	90                   	nop
   27280:	e9 1b ee ff ff       	jmp    260a0 <__find_arguments+0x8a>
   27285:	90                   	nop
   27286:	e9 15 ee ff ff       	jmp    260a0 <__find_arguments+0x8a>
   2728b:	90                   	nop
   2728c:	e9 0f ee ff ff       	jmp    260a0 <__find_arguments+0x8a>
   27291:	90                   	nop
   27292:	e9 09 ee ff ff       	jmp    260a0 <__find_arguments+0x8a>
   27297:	90                   	nop
   27298:	e9 03 ee ff ff       	jmp    260a0 <__find_arguments+0x8a>
   2729d:	90                   	nop
   2729e:	e9 fd ed ff ff       	jmp    260a0 <__find_arguments+0x8a>
   272a3:	90                   	nop
   272a4:	e9 f7 ed ff ff       	jmp    260a0 <__find_arguments+0x8a>
   272a9:	90                   	nop
   272aa:	e9 f1 ed ff ff       	jmp    260a0 <__find_arguments+0x8a>
   272af:	90                   	nop
   272b0:	eb 01                	jmp    272b3 <__find_arguments+0x129d>
   272b2:	90                   	nop
   272b3:	83 7d b8 07          	cmpl   $0x7,-0x48(%rbp)
   272b7:	7e 3c                	jle    272f5 <__find_arguments+0x12df>
   272b9:	8b 45 b8             	mov    -0x48(%rbp),%eax
   272bc:	83 c0 01             	add    $0x1,%eax
   272bf:	48 98                	cltq   
   272c1:	48 c1 e0 04          	shl    $0x4,%rax
   272c5:	48 89 c2             	mov    %rax,%rdx
   272c8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   272cc:	48 89 10             	mov    %rdx,(%rax)
   272cf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   272d3:	48 8b 00             	mov    (%rax),%rax
   272d6:	48 89 c7             	mov    %rax,%rdi
   272d9:	e8 d9 61 ff ff       	call   1d4b7 <dlmalloc>
   272de:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   272e2:	48 89 02             	mov    %rax,(%rdx)
   272e5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   272e9:	48 8b 00             	mov    (%rax),%rax
   272ec:	48 85 c0             	test   %rax,%rax
   272ef:	0f 84 af 09 00 00    	je     27ca4 <__find_arguments+0x1c8e>
   272f5:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%rbp)
   272fc:	e9 5c 09 00 00       	jmp    27c5d <__find_arguments+0x1c47>
   27301:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   27305:	8b 45 ac             	mov    -0x54(%rbp),%eax
   27308:	48 98                	cltq   
   2730a:	48 01 d0             	add    %rdx,%rax
   2730d:	0f b6 00             	movzbl (%rax),%eax
   27310:	0f b6 c0             	movzbl %al,%eax
   27313:	83 f8 1c             	cmp    $0x1c,%eax
   27316:	0f 87 3d 09 00 00    	ja     27c59 <__find_arguments+0x1c43>
   2731c:	89 c0                	mov    %eax,%eax
   2731e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   27325:	00 
   27326:	48 8d 05 8f a8 00 00 	lea    0xa88f(%rip),%rax        # 31bbc <__func__.2555+0x313>
   2732d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   27330:	48 98                	cltq   
   27332:	48 8d 15 83 a8 00 00 	lea    0xa883(%rip),%rdx        # 31bbc <__func__.2555+0x313>
   27339:	48 01 d0             	add    %rdx,%rax
   2733c:	3e ff e0             	notrack jmp *%rax
   2733f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27343:	48 8b 00             	mov    (%rax),%rax
   27346:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27349:	48 63 d2             	movslq %edx,%rdx
   2734c:	48 c1 e2 04          	shl    $0x4,%rdx
   27350:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27354:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27358:	8b 00                	mov    (%rax),%eax
   2735a:	83 f8 2f             	cmp    $0x2f,%eax
   2735d:	77 24                	ja     27383 <__find_arguments+0x136d>
   2735f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27363:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27367:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2736b:	8b 00                	mov    (%rax),%eax
   2736d:	89 c0                	mov    %eax,%eax
   2736f:	48 01 d0             	add    %rdx,%rax
   27372:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27376:	8b 12                	mov    (%rdx),%edx
   27378:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2737b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2737f:	89 0a                	mov    %ecx,(%rdx)
   27381:	eb 14                	jmp    27397 <__find_arguments+0x1381>
   27383:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27387:	48 8b 40 08          	mov    0x8(%rax),%rax
   2738b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2738f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27393:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27397:	8b 00                	mov    (%rax),%eax
   27399:	89 06                	mov    %eax,(%rsi)
   2739b:	e9 b9 08 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   273a0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   273a4:	48 8b 00             	mov    (%rax),%rax
   273a7:	8b 55 ac             	mov    -0x54(%rbp),%edx
   273aa:	48 63 d2             	movslq %edx,%rdx
   273ad:	48 c1 e2 04          	shl    $0x4,%rdx
   273b1:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   273b5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   273b9:	8b 00                	mov    (%rax),%eax
   273bb:	83 f8 2f             	cmp    $0x2f,%eax
   273be:	77 24                	ja     273e4 <__find_arguments+0x13ce>
   273c0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   273c4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   273c8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   273cc:	8b 00                	mov    (%rax),%eax
   273ce:	89 c0                	mov    %eax,%eax
   273d0:	48 01 d0             	add    %rdx,%rax
   273d3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   273d7:	8b 12                	mov    (%rdx),%edx
   273d9:	8d 4a 08             	lea    0x8(%rdx),%ecx
   273dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   273e0:	89 0a                	mov    %ecx,(%rdx)
   273e2:	eb 14                	jmp    273f8 <__find_arguments+0x13e2>
   273e4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   273e8:	48 8b 40 08          	mov    0x8(%rax),%rax
   273ec:	48 8d 48 08          	lea    0x8(%rax),%rcx
   273f0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   273f4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   273f8:	48 8b 00             	mov    (%rax),%rax
   273fb:	48 89 06             	mov    %rax,(%rsi)
   273fe:	e9 56 08 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27403:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27407:	48 8b 00             	mov    (%rax),%rax
   2740a:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2740d:	48 63 d2             	movslq %edx,%rdx
   27410:	48 c1 e2 04          	shl    $0x4,%rdx
   27414:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27418:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2741c:	8b 00                	mov    (%rax),%eax
   2741e:	83 f8 2f             	cmp    $0x2f,%eax
   27421:	77 24                	ja     27447 <__find_arguments+0x1431>
   27423:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27427:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2742b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2742f:	8b 00                	mov    (%rax),%eax
   27431:	89 c0                	mov    %eax,%eax
   27433:	48 01 d0             	add    %rdx,%rax
   27436:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2743a:	8b 12                	mov    (%rdx),%edx
   2743c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2743f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27443:	89 0a                	mov    %ecx,(%rdx)
   27445:	eb 14                	jmp    2745b <__find_arguments+0x1445>
   27447:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2744b:	48 8b 40 08          	mov    0x8(%rax),%rax
   2744f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27453:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27457:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2745b:	8b 00                	mov    (%rax),%eax
   2745d:	89 06                	mov    %eax,(%rsi)
   2745f:	e9 f5 07 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27464:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27468:	48 8b 00             	mov    (%rax),%rax
   2746b:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2746e:	48 63 d2             	movslq %edx,%rdx
   27471:	48 c1 e2 04          	shl    $0x4,%rdx
   27475:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27479:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2747d:	8b 00                	mov    (%rax),%eax
   2747f:	83 f8 2f             	cmp    $0x2f,%eax
   27482:	77 24                	ja     274a8 <__find_arguments+0x1492>
   27484:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27488:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2748c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27490:	8b 00                	mov    (%rax),%eax
   27492:	89 c0                	mov    %eax,%eax
   27494:	48 01 d0             	add    %rdx,%rax
   27497:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2749b:	8b 12                	mov    (%rdx),%edx
   2749d:	8d 4a 08             	lea    0x8(%rdx),%ecx
   274a0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   274a4:	89 0a                	mov    %ecx,(%rdx)
   274a6:	eb 14                	jmp    274bc <__find_arguments+0x14a6>
   274a8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   274ac:	48 8b 40 08          	mov    0x8(%rax),%rax
   274b0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   274b4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   274b8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   274bc:	48 8b 00             	mov    (%rax),%rax
   274bf:	48 89 06             	mov    %rax,(%rsi)
   274c2:	e9 92 07 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   274c7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   274cb:	48 8b 00             	mov    (%rax),%rax
   274ce:	8b 55 ac             	mov    -0x54(%rbp),%edx
   274d1:	48 63 d2             	movslq %edx,%rdx
   274d4:	48 c1 e2 04          	shl    $0x4,%rdx
   274d8:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   274dc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   274e0:	8b 00                	mov    (%rax),%eax
   274e2:	83 f8 2f             	cmp    $0x2f,%eax
   274e5:	77 24                	ja     2750b <__find_arguments+0x14f5>
   274e7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   274eb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   274ef:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   274f3:	8b 00                	mov    (%rax),%eax
   274f5:	89 c0                	mov    %eax,%eax
   274f7:	48 01 d0             	add    %rdx,%rax
   274fa:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   274fe:	8b 12                	mov    (%rdx),%edx
   27500:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27503:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27507:	89 0a                	mov    %ecx,(%rdx)
   27509:	eb 14                	jmp    2751f <__find_arguments+0x1509>
   2750b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2750f:	48 8b 40 08          	mov    0x8(%rax),%rax
   27513:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27517:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2751b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2751f:	48 8b 00             	mov    (%rax),%rax
   27522:	48 89 06             	mov    %rax,(%rsi)
   27525:	e9 2f 07 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   2752a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2752e:	48 8b 00             	mov    (%rax),%rax
   27531:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27534:	48 63 d2             	movslq %edx,%rdx
   27537:	48 c1 e2 04          	shl    $0x4,%rdx
   2753b:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2753f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27543:	8b 00                	mov    (%rax),%eax
   27545:	83 f8 2f             	cmp    $0x2f,%eax
   27548:	77 24                	ja     2756e <__find_arguments+0x1558>
   2754a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2754e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27552:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27556:	8b 00                	mov    (%rax),%eax
   27558:	89 c0                	mov    %eax,%eax
   2755a:	48 01 d0             	add    %rdx,%rax
   2755d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27561:	8b 12                	mov    (%rdx),%edx
   27563:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27566:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2756a:	89 0a                	mov    %ecx,(%rdx)
   2756c:	eb 14                	jmp    27582 <__find_arguments+0x156c>
   2756e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27572:	48 8b 40 08          	mov    0x8(%rax),%rax
   27576:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2757a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2757e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27582:	48 8b 00             	mov    (%rax),%rax
   27585:	48 89 06             	mov    %rax,(%rsi)
   27588:	e9 cc 06 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   2758d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27591:	48 8b 00             	mov    (%rax),%rax
   27594:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27597:	48 63 d2             	movslq %edx,%rdx
   2759a:	48 c1 e2 04          	shl    $0x4,%rdx
   2759e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   275a2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   275a6:	8b 00                	mov    (%rax),%eax
   275a8:	83 f8 2f             	cmp    $0x2f,%eax
   275ab:	77 24                	ja     275d1 <__find_arguments+0x15bb>
   275ad:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   275b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   275b5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   275b9:	8b 00                	mov    (%rax),%eax
   275bb:	89 c0                	mov    %eax,%eax
   275bd:	48 01 d0             	add    %rdx,%rax
   275c0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   275c4:	8b 12                	mov    (%rdx),%edx
   275c6:	8d 4a 08             	lea    0x8(%rdx),%ecx
   275c9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   275cd:	89 0a                	mov    %ecx,(%rdx)
   275cf:	eb 14                	jmp    275e5 <__find_arguments+0x15cf>
   275d1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   275d5:	48 8b 40 08          	mov    0x8(%rax),%rax
   275d9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   275dd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   275e1:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   275e5:	48 8b 00             	mov    (%rax),%rax
   275e8:	48 89 06             	mov    %rax,(%rsi)
   275eb:	e9 69 06 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   275f0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   275f4:	48 8b 00             	mov    (%rax),%rax
   275f7:	8b 55 ac             	mov    -0x54(%rbp),%edx
   275fa:	48 63 d2             	movslq %edx,%rdx
   275fd:	48 c1 e2 04          	shl    $0x4,%rdx
   27601:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27605:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27609:	8b 00                	mov    (%rax),%eax
   2760b:	83 f8 2f             	cmp    $0x2f,%eax
   2760e:	77 24                	ja     27634 <__find_arguments+0x161e>
   27610:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27614:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27618:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2761c:	8b 00                	mov    (%rax),%eax
   2761e:	89 c0                	mov    %eax,%eax
   27620:	48 01 d0             	add    %rdx,%rax
   27623:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27627:	8b 12                	mov    (%rdx),%edx
   27629:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2762c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27630:	89 0a                	mov    %ecx,(%rdx)
   27632:	eb 14                	jmp    27648 <__find_arguments+0x1632>
   27634:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27638:	48 8b 40 08          	mov    0x8(%rax),%rax
   2763c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27640:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27644:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27648:	48 8b 00             	mov    (%rax),%rax
   2764b:	48 89 06             	mov    %rax,(%rsi)
   2764e:	e9 06 06 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27653:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27657:	48 8b 00             	mov    (%rax),%rax
   2765a:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2765d:	48 63 d2             	movslq %edx,%rdx
   27660:	48 c1 e2 04          	shl    $0x4,%rdx
   27664:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27668:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2766c:	8b 00                	mov    (%rax),%eax
   2766e:	83 f8 2f             	cmp    $0x2f,%eax
   27671:	77 24                	ja     27697 <__find_arguments+0x1681>
   27673:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27677:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2767b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2767f:	8b 00                	mov    (%rax),%eax
   27681:	89 c0                	mov    %eax,%eax
   27683:	48 01 d0             	add    %rdx,%rax
   27686:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2768a:	8b 12                	mov    (%rdx),%edx
   2768c:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2768f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27693:	89 0a                	mov    %ecx,(%rdx)
   27695:	eb 14                	jmp    276ab <__find_arguments+0x1695>
   27697:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2769b:	48 8b 40 08          	mov    0x8(%rax),%rax
   2769f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   276a3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   276a7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   276ab:	48 8b 00             	mov    (%rax),%rax
   276ae:	48 89 06             	mov    %rax,(%rsi)
   276b1:	e9 a3 05 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   276b6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   276ba:	48 8b 00             	mov    (%rax),%rax
   276bd:	8b 55 ac             	mov    -0x54(%rbp),%edx
   276c0:	48 63 d2             	movslq %edx,%rdx
   276c3:	48 c1 e2 04          	shl    $0x4,%rdx
   276c7:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   276cb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   276cf:	8b 00                	mov    (%rax),%eax
   276d1:	83 f8 2f             	cmp    $0x2f,%eax
   276d4:	77 24                	ja     276fa <__find_arguments+0x16e4>
   276d6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   276da:	48 8b 50 10          	mov    0x10(%rax),%rdx
   276de:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   276e2:	8b 00                	mov    (%rax),%eax
   276e4:	89 c0                	mov    %eax,%eax
   276e6:	48 01 d0             	add    %rdx,%rax
   276e9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   276ed:	8b 12                	mov    (%rdx),%edx
   276ef:	8d 4a 08             	lea    0x8(%rdx),%ecx
   276f2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   276f6:	89 0a                	mov    %ecx,(%rdx)
   276f8:	eb 14                	jmp    2770e <__find_arguments+0x16f8>
   276fa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   276fe:	48 8b 40 08          	mov    0x8(%rax),%rax
   27702:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27706:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2770a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2770e:	48 8b 00             	mov    (%rax),%rax
   27711:	48 89 06             	mov    %rax,(%rsi)
   27714:	e9 40 05 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27719:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2771d:	48 8b 00             	mov    (%rax),%rax
   27720:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27723:	48 63 d2             	movslq %edx,%rdx
   27726:	48 c1 e2 04          	shl    $0x4,%rdx
   2772a:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2772e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27732:	8b 40 04             	mov    0x4(%rax),%eax
   27735:	3d af 00 00 00       	cmp    $0xaf,%eax
   2773a:	77 27                	ja     27763 <__find_arguments+0x174d>
   2773c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27740:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27744:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27748:	8b 40 04             	mov    0x4(%rax),%eax
   2774b:	89 c0                	mov    %eax,%eax
   2774d:	48 01 d0             	add    %rdx,%rax
   27750:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27754:	8b 52 04             	mov    0x4(%rdx),%edx
   27757:	8d 4a 10             	lea    0x10(%rdx),%ecx
   2775a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2775e:	89 4a 04             	mov    %ecx,0x4(%rdx)
   27761:	eb 14                	jmp    27777 <__find_arguments+0x1761>
   27763:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27767:	48 8b 40 08          	mov    0x8(%rax),%rax
   2776b:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2776f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27773:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27777:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2777b:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
   2777f:	e9 d5 04 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27784:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27788:	48 8b 00             	mov    (%rax),%rax
   2778b:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2778e:	48 63 d2             	movslq %edx,%rdx
   27791:	48 c1 e2 04          	shl    $0x4,%rdx
   27795:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27799:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2779d:	48 8b 40 08          	mov    0x8(%rax),%rax
   277a1:	48 83 c0 0f          	add    $0xf,%rax
   277a5:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   277a9:	48 8d 48 10          	lea    0x10(%rax),%rcx
   277ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   277b1:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   277b5:	db 28                	fldt   (%rax)
   277b7:	db 3e                	fstpt  (%rsi)
   277b9:	e9 9b 04 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   277be:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   277c2:	48 8b 00             	mov    (%rax),%rax
   277c5:	8b 55 ac             	mov    -0x54(%rbp),%edx
   277c8:	48 63 d2             	movslq %edx,%rdx
   277cb:	48 c1 e2 04          	shl    $0x4,%rdx
   277cf:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   277d3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   277d7:	8b 00                	mov    (%rax),%eax
   277d9:	83 f8 2f             	cmp    $0x2f,%eax
   277dc:	77 24                	ja     27802 <__find_arguments+0x17ec>
   277de:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   277e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   277e6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   277ea:	8b 00                	mov    (%rax),%eax
   277ec:	89 c0                	mov    %eax,%eax
   277ee:	48 01 d0             	add    %rdx,%rax
   277f1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   277f5:	8b 12                	mov    (%rdx),%edx
   277f7:	8d 4a 08             	lea    0x8(%rdx),%ecx
   277fa:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   277fe:	89 0a                	mov    %ecx,(%rdx)
   27800:	eb 14                	jmp    27816 <__find_arguments+0x1800>
   27802:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27806:	48 8b 40 08          	mov    0x8(%rax),%rax
   2780a:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2780e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27812:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27816:	48 8b 00             	mov    (%rax),%rax
   27819:	48 89 06             	mov    %rax,(%rsi)
   2781c:	e9 38 04 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27821:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27825:	48 8b 00             	mov    (%rax),%rax
   27828:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2782b:	48 63 d2             	movslq %edx,%rdx
   2782e:	48 c1 e2 04          	shl    $0x4,%rdx
   27832:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27836:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2783a:	8b 00                	mov    (%rax),%eax
   2783c:	83 f8 2f             	cmp    $0x2f,%eax
   2783f:	77 24                	ja     27865 <__find_arguments+0x184f>
   27841:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27845:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27849:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2784d:	8b 00                	mov    (%rax),%eax
   2784f:	89 c0                	mov    %eax,%eax
   27851:	48 01 d0             	add    %rdx,%rax
   27854:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27858:	8b 12                	mov    (%rdx),%edx
   2785a:	8d 4a 08             	lea    0x8(%rdx),%ecx
   2785d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27861:	89 0a                	mov    %ecx,(%rdx)
   27863:	eb 14                	jmp    27879 <__find_arguments+0x1863>
   27865:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27869:	48 8b 40 08          	mov    0x8(%rax),%rax
   2786d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27871:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27875:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27879:	48 8b 00             	mov    (%rax),%rax
   2787c:	48 89 06             	mov    %rax,(%rsi)
   2787f:	e9 d5 03 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27884:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27888:	48 8b 00             	mov    (%rax),%rax
   2788b:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2788e:	48 63 d2             	movslq %edx,%rdx
   27891:	48 c1 e2 04          	shl    $0x4,%rdx
   27895:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27899:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2789d:	8b 00                	mov    (%rax),%eax
   2789f:	83 f8 2f             	cmp    $0x2f,%eax
   278a2:	77 24                	ja     278c8 <__find_arguments+0x18b2>
   278a4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   278a8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   278ac:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   278b0:	8b 00                	mov    (%rax),%eax
   278b2:	89 c0                	mov    %eax,%eax
   278b4:	48 01 d0             	add    %rdx,%rax
   278b7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   278bb:	8b 12                	mov    (%rdx),%edx
   278bd:	8d 4a 08             	lea    0x8(%rdx),%ecx
   278c0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   278c4:	89 0a                	mov    %ecx,(%rdx)
   278c6:	eb 14                	jmp    278dc <__find_arguments+0x18c6>
   278c8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   278cc:	48 8b 40 08          	mov    0x8(%rax),%rax
   278d0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   278d4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   278d8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   278dc:	48 8b 00             	mov    (%rax),%rax
   278df:	48 89 06             	mov    %rax,(%rsi)
   278e2:	e9 72 03 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   278e7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   278eb:	48 8b 00             	mov    (%rax),%rax
   278ee:	8b 55 ac             	mov    -0x54(%rbp),%edx
   278f1:	48 63 d2             	movslq %edx,%rdx
   278f4:	48 c1 e2 04          	shl    $0x4,%rdx
   278f8:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   278fc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27900:	8b 00                	mov    (%rax),%eax
   27902:	83 f8 2f             	cmp    $0x2f,%eax
   27905:	77 24                	ja     2792b <__find_arguments+0x1915>
   27907:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2790b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2790f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27913:	8b 00                	mov    (%rax),%eax
   27915:	89 c0                	mov    %eax,%eax
   27917:	48 01 d0             	add    %rdx,%rax
   2791a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2791e:	8b 12                	mov    (%rdx),%edx
   27920:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27923:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27927:	89 0a                	mov    %ecx,(%rdx)
   27929:	eb 14                	jmp    2793f <__find_arguments+0x1929>
   2792b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2792f:	48 8b 40 08          	mov    0x8(%rax),%rax
   27933:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27937:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2793b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2793f:	48 8b 00             	mov    (%rax),%rax
   27942:	48 89 06             	mov    %rax,(%rsi)
   27945:	e9 0f 03 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   2794a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   2794e:	48 8b 00             	mov    (%rax),%rax
   27951:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27954:	48 63 d2             	movslq %edx,%rdx
   27957:	48 c1 e2 04          	shl    $0x4,%rdx
   2795b:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   2795f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27963:	8b 00                	mov    (%rax),%eax
   27965:	83 f8 2f             	cmp    $0x2f,%eax
   27968:	77 24                	ja     2798e <__find_arguments+0x1978>
   2796a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2796e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27972:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27976:	8b 00                	mov    (%rax),%eax
   27978:	89 c0                	mov    %eax,%eax
   2797a:	48 01 d0             	add    %rdx,%rax
   2797d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27981:	8b 12                	mov    (%rdx),%edx
   27983:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27986:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2798a:	89 0a                	mov    %ecx,(%rdx)
   2798c:	eb 14                	jmp    279a2 <__find_arguments+0x198c>
   2798e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27992:	48 8b 40 08          	mov    0x8(%rax),%rax
   27996:	48 8d 48 08          	lea    0x8(%rax),%rcx
   2799a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2799e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   279a2:	48 8b 00             	mov    (%rax),%rax
   279a5:	48 89 06             	mov    %rax,(%rsi)
   279a8:	e9 ac 02 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   279ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   279b1:	48 8b 00             	mov    (%rax),%rax
   279b4:	8b 55 ac             	mov    -0x54(%rbp),%edx
   279b7:	48 63 d2             	movslq %edx,%rdx
   279ba:	48 c1 e2 04          	shl    $0x4,%rdx
   279be:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   279c2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   279c6:	8b 00                	mov    (%rax),%eax
   279c8:	83 f8 2f             	cmp    $0x2f,%eax
   279cb:	77 24                	ja     279f1 <__find_arguments+0x19db>
   279cd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   279d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   279d5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   279d9:	8b 00                	mov    (%rax),%eax
   279db:	89 c0                	mov    %eax,%eax
   279dd:	48 01 d0             	add    %rdx,%rax
   279e0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   279e4:	8b 12                	mov    (%rdx),%edx
   279e6:	8d 4a 08             	lea    0x8(%rdx),%ecx
   279e9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   279ed:	89 0a                	mov    %ecx,(%rdx)
   279ef:	eb 14                	jmp    27a05 <__find_arguments+0x19ef>
   279f1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   279f5:	48 8b 40 08          	mov    0x8(%rax),%rax
   279f9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   279fd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27a01:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27a05:	48 8b 00             	mov    (%rax),%rax
   27a08:	48 89 06             	mov    %rax,(%rsi)
   27a0b:	e9 49 02 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27a10:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27a14:	48 8b 00             	mov    (%rax),%rax
   27a17:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27a1a:	48 63 d2             	movslq %edx,%rdx
   27a1d:	48 c1 e2 04          	shl    $0x4,%rdx
   27a21:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27a25:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a29:	8b 00                	mov    (%rax),%eax
   27a2b:	83 f8 2f             	cmp    $0x2f,%eax
   27a2e:	77 24                	ja     27a54 <__find_arguments+0x1a3e>
   27a30:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a34:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27a38:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a3c:	8b 00                	mov    (%rax),%eax
   27a3e:	89 c0                	mov    %eax,%eax
   27a40:	48 01 d0             	add    %rdx,%rax
   27a43:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27a47:	8b 12                	mov    (%rdx),%edx
   27a49:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27a4c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27a50:	89 0a                	mov    %ecx,(%rdx)
   27a52:	eb 14                	jmp    27a68 <__find_arguments+0x1a52>
   27a54:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a58:	48 8b 40 08          	mov    0x8(%rax),%rax
   27a5c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27a60:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27a64:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27a68:	48 8b 00             	mov    (%rax),%rax
   27a6b:	48 89 06             	mov    %rax,(%rsi)
   27a6e:	e9 e6 01 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27a73:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27a77:	48 8b 00             	mov    (%rax),%rax
   27a7a:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27a7d:	48 63 d2             	movslq %edx,%rdx
   27a80:	48 c1 e2 04          	shl    $0x4,%rdx
   27a84:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27a88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a8c:	8b 00                	mov    (%rax),%eax
   27a8e:	83 f8 2f             	cmp    $0x2f,%eax
   27a91:	77 24                	ja     27ab7 <__find_arguments+0x1aa1>
   27a93:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a97:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27a9b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27a9f:	8b 00                	mov    (%rax),%eax
   27aa1:	89 c0                	mov    %eax,%eax
   27aa3:	48 01 d0             	add    %rdx,%rax
   27aa6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27aaa:	8b 12                	mov    (%rdx),%edx
   27aac:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27aaf:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27ab3:	89 0a                	mov    %ecx,(%rdx)
   27ab5:	eb 14                	jmp    27acb <__find_arguments+0x1ab5>
   27ab7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27abb:	48 8b 40 08          	mov    0x8(%rax),%rax
   27abf:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27ac3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27ac7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27acb:	48 8b 00             	mov    (%rax),%rax
   27ace:	48 89 06             	mov    %rax,(%rsi)
   27ad1:	e9 83 01 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27ad6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27ada:	48 8b 00             	mov    (%rax),%rax
   27add:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27ae0:	48 63 d2             	movslq %edx,%rdx
   27ae3:	48 c1 e2 04          	shl    $0x4,%rdx
   27ae7:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27aeb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27aef:	8b 00                	mov    (%rax),%eax
   27af1:	83 f8 2f             	cmp    $0x2f,%eax
   27af4:	77 24                	ja     27b1a <__find_arguments+0x1b04>
   27af6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27afa:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27afe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b02:	8b 00                	mov    (%rax),%eax
   27b04:	89 c0                	mov    %eax,%eax
   27b06:	48 01 d0             	add    %rdx,%rax
   27b09:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b0d:	8b 12                	mov    (%rdx),%edx
   27b0f:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27b12:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b16:	89 0a                	mov    %ecx,(%rdx)
   27b18:	eb 14                	jmp    27b2e <__find_arguments+0x1b18>
   27b1a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b1e:	48 8b 40 08          	mov    0x8(%rax),%rax
   27b22:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27b26:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b2a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27b2e:	48 8b 00             	mov    (%rax),%rax
   27b31:	48 89 06             	mov    %rax,(%rsi)
   27b34:	e9 20 01 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27b39:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27b3d:	48 8b 00             	mov    (%rax),%rax
   27b40:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27b43:	48 63 d2             	movslq %edx,%rdx
   27b46:	48 c1 e2 04          	shl    $0x4,%rdx
   27b4a:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27b4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b52:	8b 00                	mov    (%rax),%eax
   27b54:	83 f8 2f             	cmp    $0x2f,%eax
   27b57:	77 24                	ja     27b7d <__find_arguments+0x1b67>
   27b59:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b5d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27b61:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b65:	8b 00                	mov    (%rax),%eax
   27b67:	89 c0                	mov    %eax,%eax
   27b69:	48 01 d0             	add    %rdx,%rax
   27b6c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b70:	8b 12                	mov    (%rdx),%edx
   27b72:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27b75:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b79:	89 0a                	mov    %ecx,(%rdx)
   27b7b:	eb 14                	jmp    27b91 <__find_arguments+0x1b7b>
   27b7d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27b81:	48 8b 40 08          	mov    0x8(%rax),%rax
   27b85:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27b89:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27b8d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27b91:	48 8b 00             	mov    (%rax),%rax
   27b94:	48 89 06             	mov    %rax,(%rsi)
   27b97:	e9 bd 00 00 00       	jmp    27c59 <__find_arguments+0x1c43>
   27b9c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27ba0:	48 8b 00             	mov    (%rax),%rax
   27ba3:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27ba6:	48 63 d2             	movslq %edx,%rdx
   27ba9:	48 c1 e2 04          	shl    $0x4,%rdx
   27bad:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27bb1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27bb5:	8b 00                	mov    (%rax),%eax
   27bb7:	83 f8 2f             	cmp    $0x2f,%eax
   27bba:	77 24                	ja     27be0 <__find_arguments+0x1bca>
   27bbc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27bc0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27bc4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27bc8:	8b 00                	mov    (%rax),%eax
   27bca:	89 c0                	mov    %eax,%eax
   27bcc:	48 01 d0             	add    %rdx,%rax
   27bcf:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27bd3:	8b 12                	mov    (%rdx),%edx
   27bd5:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27bd8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27bdc:	89 0a                	mov    %ecx,(%rdx)
   27bde:	eb 14                	jmp    27bf4 <__find_arguments+0x1bde>
   27be0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27be4:	48 8b 40 08          	mov    0x8(%rax),%rax
   27be8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27bec:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27bf0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27bf4:	8b 00                	mov    (%rax),%eax
   27bf6:	89 06                	mov    %eax,(%rsi)
   27bf8:	eb 5f                	jmp    27c59 <__find_arguments+0x1c43>
   27bfa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   27bfe:	48 8b 00             	mov    (%rax),%rax
   27c01:	8b 55 ac             	mov    -0x54(%rbp),%edx
   27c04:	48 63 d2             	movslq %edx,%rdx
   27c07:	48 c1 e2 04          	shl    $0x4,%rdx
   27c0b:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   27c0f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27c13:	8b 00                	mov    (%rax),%eax
   27c15:	83 f8 2f             	cmp    $0x2f,%eax
   27c18:	77 24                	ja     27c3e <__find_arguments+0x1c28>
   27c1a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27c1e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   27c22:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27c26:	8b 00                	mov    (%rax),%eax
   27c28:	89 c0                	mov    %eax,%eax
   27c2a:	48 01 d0             	add    %rdx,%rax
   27c2d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27c31:	8b 12                	mov    (%rdx),%edx
   27c33:	8d 4a 08             	lea    0x8(%rdx),%ecx
   27c36:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27c3a:	89 0a                	mov    %ecx,(%rdx)
   27c3c:	eb 14                	jmp    27c52 <__find_arguments+0x1c3c>
   27c3e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   27c42:	48 8b 40 08          	mov    0x8(%rax),%rax
   27c46:	48 8d 48 08          	lea    0x8(%rax),%rcx
   27c4a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   27c4e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   27c52:	48 8b 00             	mov    (%rax),%rax
   27c55:	48 89 06             	mov    %rax,(%rsi)
   27c58:	90                   	nop
   27c59:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
   27c5d:	8b 45 ac             	mov    -0x54(%rbp),%eax
   27c60:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   27c63:	0f 8e 98 f6 ff ff    	jle    27301 <__find_arguments+0x12eb>
   27c69:	eb 4c                	jmp    27cb7 <__find_arguments+0x1ca1>
   27c6b:	90                   	nop
   27c6c:	eb 37                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c6e:	90                   	nop
   27c6f:	eb 34                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c71:	90                   	nop
   27c72:	eb 31                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c74:	90                   	nop
   27c75:	eb 2e                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c77:	90                   	nop
   27c78:	eb 2b                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c7a:	90                   	nop
   27c7b:	eb 28                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c7d:	90                   	nop
   27c7e:	eb 25                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c80:	90                   	nop
   27c81:	eb 22                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c83:	90                   	nop
   27c84:	eb 1f                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c86:	90                   	nop
   27c87:	eb 1c                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c89:	90                   	nop
   27c8a:	eb 19                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c8c:	90                   	nop
   27c8d:	eb 16                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c8f:	90                   	nop
   27c90:	eb 13                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c92:	90                   	nop
   27c93:	eb 10                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c95:	90                   	nop
   27c96:	eb 0d                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c98:	90                   	nop
   27c99:	eb 0a                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c9b:	90                   	nop
   27c9c:	eb 07                	jmp    27ca5 <__find_arguments+0x1c8f>
   27c9e:	90                   	nop
   27c9f:	eb 04                	jmp    27ca5 <__find_arguments+0x1c8f>
   27ca1:	90                   	nop
   27ca2:	eb 01                	jmp    27ca5 <__find_arguments+0x1c8f>
   27ca4:	90                   	nop
   27ca5:	e8 af 9c ff ff       	call   21959 <__errno>
   27caa:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   27cb0:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%rbp)
   27cb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27cbb:	48 85 c0             	test   %rax,%rax
   27cbe:	74 21                	je     27ce1 <__find_arguments+0x1ccb>
   27cc0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   27cc4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   27cc8:	48 39 c2             	cmp    %rax,%rdx
   27ccb:	74 14                	je     27ce1 <__find_arguments+0x1ccb>
   27ccd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27cd1:	48 89 c7             	mov    %rax,%rdi
   27cd4:	e8 d9 62 ff ff       	call   1dfb2 <dlfree>
   27cd9:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   27ce0:	00 
   27ce1:	8b 45 c0             	mov    -0x40(%rbp),%eax
   27ce4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
   27ce8:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   27cef:	00 00 
   27cf1:	74 05                	je     27cf8 <__find_arguments+0x1ce2>
   27cf3:	e8 8f 95 ff ff       	call   21287 <__stack_chk_fail>
   27cf8:	c9                   	leave  
   27cf9:	c3                   	ret    

0000000000027cfa <__grow_type_table>:
   27cfa:	f3 0f 1e fa          	endbr64 
   27cfe:	55                   	push   %rbp
   27cff:	48 89 e5             	mov    %rsp,%rbp
   27d02:	48 83 ec 30          	sub    $0x30,%rsp
   27d06:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27d0a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   27d0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27d12:	48 8b 00             	mov    (%rax),%rax
   27d15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   27d19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27d1d:	8b 00                	mov    (%rax),%eax
   27d1f:	01 c0                	add    %eax,%eax
   27d21:	89 45 ec             	mov    %eax,-0x14(%rbp)
   27d24:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)
   27d2b:	7f 07                	jg     27d34 <__grow_type_table+0x3a>
   27d2d:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)
   27d34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27d38:	8b 00                	mov    (%rax),%eax
   27d3a:	83 f8 08             	cmp    $0x8,%eax
   27d3d:	75 4b                	jne    27d8a <__grow_type_table+0x90>
   27d3f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   27d42:	48 98                	cltq   
   27d44:	48 89 c7             	mov    %rax,%rdi
   27d47:	e8 6b 57 ff ff       	call   1d4b7 <dlmalloc>
   27d4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   27d50:	48 89 02             	mov    %rax,(%rdx)
   27d53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27d57:	48 8b 00             	mov    (%rax),%rax
   27d5a:	48 85 c0             	test   %rax,%rax
   27d5d:	75 0a                	jne    27d69 <__grow_type_table+0x6f>
   27d5f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   27d64:	e9 b9 00 00 00       	jmp    27e22 <__grow_type_table+0x128>
   27d69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27d6d:	8b 00                	mov    (%rax),%eax
   27d6f:	48 63 d0             	movslq %eax,%rdx
   27d72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27d76:	48 8b 00             	mov    (%rax),%rax
   27d79:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27d7d:	48 89 ce             	mov    %rcx,%rsi
   27d80:	48 89 c7             	mov    %rax,%rdi
   27d83:	e8 35 03 00 00       	call   280bd <memmove>
   27d88:	eb 58                	jmp    27de2 <__grow_type_table+0xe8>
   27d8a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   27d8d:	48 98                	cltq   
   27d8f:	48 89 c7             	mov    %rax,%rdi
   27d92:	e8 20 57 ff ff       	call   1d4b7 <dlmalloc>
   27d97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27d9b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   27da0:	75 07                	jne    27da9 <__grow_type_table+0xaf>
   27da2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   27da7:	eb 79                	jmp    27e22 <__grow_type_table+0x128>
   27da9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27dad:	8b 00                	mov    (%rax),%eax
   27daf:	48 63 d0             	movslq %eax,%rdx
   27db2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27db6:	48 8b 08             	mov    (%rax),%rcx
   27db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27dbd:	48 89 ce             	mov    %rcx,%rsi
   27dc0:	48 89 c7             	mov    %rax,%rdi
   27dc3:	e8 f5 02 00 00       	call   280bd <memmove>
   27dc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27dcc:	48 8b 00             	mov    (%rax),%rax
   27dcf:	48 89 c7             	mov    %rax,%rdi
   27dd2:	e8 db 61 ff ff       	call   1dfb2 <dlfree>
   27dd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27ddb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27ddf:	48 89 10             	mov    %rdx,(%rax)
   27de2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27de6:	8b 00                	mov    (%rax),%eax
   27de8:	8b 55 ec             	mov    -0x14(%rbp),%edx
   27deb:	29 c2                	sub    %eax,%edx
   27ded:	89 d0                	mov    %edx,%eax
   27def:	48 98                	cltq   
   27df1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   27df5:	48 8b 0a             	mov    (%rdx),%rcx
   27df8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   27dfc:	8b 12                	mov    (%rdx),%edx
   27dfe:	48 63 d2             	movslq %edx,%rdx
   27e01:	48 01 d1             	add    %rdx,%rcx
   27e04:	48 89 c2             	mov    %rax,%rdx
   27e07:	be 00 00 00 00       	mov    $0x0,%esi
   27e0c:	48 89 cf             	mov    %rcx,%rdi
   27e0f:	e8 ff 92 ff ff       	call   21113 <memset>
   27e14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27e18:	8b 55 ec             	mov    -0x14(%rbp),%edx
   27e1b:	89 10                	mov    %edx,(%rax)
   27e1d:	b8 00 00 00 00       	mov    $0x0,%eax
   27e22:	c9                   	leave  
   27e23:	c3                   	ret    

0000000000027e24 <exponent>:
   27e24:	f3 0f 1e fa          	endbr64 
   27e28:	55                   	push   %rbp
   27e29:	48 89 e5             	mov    %rsp,%rbp
   27e2c:	48 83 ec 30          	sub    $0x30,%rsp
   27e30:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27e34:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   27e37:	89 55 d0             	mov    %edx,-0x30(%rbp)
   27e3a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   27e41:	00 00 
   27e43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27e47:	31 c0                	xor    %eax,%eax
   27e49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27e4d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   27e51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27e55:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27e59:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   27e5d:	8b 55 d0             	mov    -0x30(%rbp),%edx
   27e60:	88 10                	mov    %dl,(%rax)
   27e62:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   27e66:	79 14                	jns    27e7c <exponent+0x58>
   27e68:	f7 5d d4             	negl   -0x2c(%rbp)
   27e6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27e6f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27e73:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   27e77:	c6 00 2d             	movb   $0x2d,(%rax)
   27e7a:	eb 0f                	jmp    27e8b <exponent+0x67>
   27e7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27e80:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27e84:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   27e88:	c6 00 2b             	movb   $0x2b,(%rax)
   27e8b:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   27e8f:	48 83 c0 06          	add    $0x6,%rax
   27e93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27e97:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   27e9b:	0f 8e 9e 00 00 00    	jle    27f3f <exponent+0x11b>
   27ea1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   27ea4:	48 63 c1             	movslq %ecx,%rax
   27ea7:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   27eae:	48 c1 e8 20          	shr    $0x20,%rax
   27eb2:	89 c2                	mov    %eax,%edx
   27eb4:	c1 fa 02             	sar    $0x2,%edx
   27eb7:	89 c8                	mov    %ecx,%eax
   27eb9:	c1 f8 1f             	sar    $0x1f,%eax
   27ebc:	29 c2                	sub    %eax,%edx
   27ebe:	89 d0                	mov    %edx,%eax
   27ec0:	c1 e0 02             	shl    $0x2,%eax
   27ec3:	01 d0                	add    %edx,%eax
   27ec5:	01 c0                	add    %eax,%eax
   27ec7:	29 c1                	sub    %eax,%ecx
   27ec9:	89 ca                	mov    %ecx,%edx
   27ecb:	89 d0                	mov    %edx,%eax
   27ecd:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   27ed2:	8d 50 30             	lea    0x30(%rax),%edx
   27ed5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27ed9:	88 10                	mov    %dl,(%rax)
   27edb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   27ede:	48 63 d0             	movslq %eax,%rdx
   27ee1:	48 69 d2 67 66 66 66 	imul   $0x66666667,%rdx,%rdx
   27ee8:	48 c1 ea 20          	shr    $0x20,%rdx
   27eec:	c1 fa 02             	sar    $0x2,%edx
   27eef:	c1 f8 1f             	sar    $0x1f,%eax
   27ef2:	29 c2                	sub    %eax,%edx
   27ef4:	89 d0                	mov    %edx,%eax
   27ef6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   27ef9:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
   27efd:	7f a2                	jg     27ea1 <exponent+0x7d>
   27eff:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   27f02:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   27f07:	8d 50 30             	lea    0x30(%rax),%edx
   27f0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27f0e:	88 10                	mov    %dl,(%rax)
   27f10:	eb 1d                	jmp    27f2f <exponent+0x10b>
   27f12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27f16:	48 8d 42 01          	lea    0x1(%rdx),%rax
   27f1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   27f1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27f22:	48 8d 48 01          	lea    0x1(%rax),%rcx
   27f26:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   27f2a:	0f b6 12             	movzbl (%rdx),%edx
   27f2d:	88 10                	mov    %dl,(%rax)
   27f2f:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
   27f33:	48 83 c0 06          	add    $0x6,%rax
   27f37:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   27f3b:	72 d5                	jb     27f12 <exponent+0xee>
   27f3d:	eb 31                	jmp    27f70 <exponent+0x14c>
   27f3f:	83 7d d0 65          	cmpl   $0x65,-0x30(%rbp)
   27f43:	74 06                	je     27f4b <exponent+0x127>
   27f45:	83 7d d0 45          	cmpl   $0x45,-0x30(%rbp)
   27f49:	75 0f                	jne    27f5a <exponent+0x136>
   27f4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27f4f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27f53:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   27f57:	c6 00 30             	movb   $0x30,(%rax)
   27f5a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   27f5d:	89 c1                	mov    %eax,%ecx
   27f5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27f63:	48 8d 50 01          	lea    0x1(%rax),%rdx
   27f67:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   27f6b:	8d 51 30             	lea    0x30(%rcx),%edx
   27f6e:	88 10                	mov    %dl,(%rax)
   27f70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27f74:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   27f78:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   27f7c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   27f83:	00 00 
   27f85:	74 05                	je     27f8c <exponent+0x168>
   27f87:	e8 fb 92 ff ff       	call   21287 <__stack_chk_fail>
   27f8c:	c9                   	leave  
   27f8d:	c3                   	ret    
   27f8e:	66 90                	xchg   %ax,%ax

0000000000027f90 <__memcpy_verw>:
   27f90:	8a 06                	mov    (%rsi),%al
   27f92:	48 83 ec 08          	sub    $0x8,%rsp
   27f96:	8c 1c 24             	mov    %ds,(%rsp)
   27f99:	0f 00 2c 24          	verw   (%rsp)
   27f9d:	88 07                	mov    %al,(%rdi)
   27f9f:	0f ae f0             	mfence 
   27fa2:	0f ae e8             	lfence 
   27fa5:	48 83 c4 08          	add    $0x8,%rsp
   27fa9:	48 89 f8             	mov    %rdi,%rax
   27fac:	c3                   	ret    
   27fad:	cc                   	int3   
   27fae:	cc                   	int3   
   27faf:	cc                   	int3   

0000000000027fb0 <__memcpy_8a>:
   27fb0:	48 8b 06             	mov    (%rsi),%rax
   27fb3:	48 89 07             	mov    %rax,(%rdi)
   27fb6:	48 89 f8             	mov    %rdi,%rax
   27fb9:	c3                   	ret    
   27fba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000027fc0 <__memset>:
   27fc0:	48 89 f0             	mov    %rsi,%rax
   27fc3:	48 25 ff 00 00 00    	and    $0xff,%rax
   27fc9:	48 89 d1             	mov    %rdx,%rcx
   27fcc:	49 89 fb             	mov    %rdi,%r11
   27fcf:	fc                   	cld    
   27fd0:	48 83 f9 0f          	cmp    $0xf,%rcx
   27fd4:	7e 38                	jle    2800e <L1>
   27fd6:	88 c4                	mov    %al,%ah
   27fd8:	89 c2                	mov    %eax,%edx
   27fda:	c1 e0 10             	shl    $0x10,%eax
   27fdd:	09 d0                	or     %edx,%eax
   27fdf:	89 c2                	mov    %eax,%edx
   27fe1:	48 c1 e0 20          	shl    $0x20,%rax
   27fe5:	48 09 d0             	or     %rdx,%rax
   27fe8:	48 89 fa             	mov    %rdi,%rdx
   27feb:	48 f7 da             	neg    %rdx
   27fee:	48 83 e2 07          	and    $0x7,%rdx
   27ff2:	49 89 c8             	mov    %rcx,%r8
   27ff5:	49 29 d0             	sub    %rdx,%r8
   27ff8:	48 89 d1             	mov    %rdx,%rcx
   27ffb:	f3 aa                	rep stos %al,%es:(%rdi)
   27ffd:	4c 89 c1             	mov    %r8,%rcx
   28000:	48 c1 e9 03          	shr    $0x3,%rcx
   28004:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   28007:	4c 89 c1             	mov    %r8,%rcx
   2800a:	48 83 e1 07          	and    $0x7,%rcx

000000000002800e <L1>:
   2800e:	f3 aa                	rep stos %al,%es:(%rdi)
   28010:	4c 89 d8             	mov    %r11,%rax
   28013:	c3                   	ret    
   28014:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2801b:	00 00 00 
   2801e:	66 90                	xchg   %ax,%ax

0000000000028020 <_libc__strlen>:
   28020:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   28027:	01 01 01 
   2802a:	40 f6 c7 07          	test   $0x7,%dil
   2802e:	48 89 f8             	mov    %rdi,%rax
   28031:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   28038:	80 80 80 
   2803b:	75 33                	jne    28070 <_libc__strlen+0x50>
   2803d:	0f 1f 00             	nopl   (%rax)
   28040:	48 8b 10             	mov    (%rax),%rdx
   28043:	48 83 c0 08          	add    $0x8,%rax
   28047:	48 89 d1             	mov    %rdx,%rcx
   2804a:	4c 29 c2             	sub    %r8,%rdx
   2804d:	48 f7 d1             	not    %rcx
   28050:	4c 21 ca             	and    %r9,%rdx
   28053:	74 eb                	je     28040 <_libc__strlen+0x20>
   28055:	48 21 ca             	and    %rcx,%rdx
   28058:	74 e6                	je     28040 <_libc__strlen+0x20>
   2805a:	48 29 f8             	sub    %rdi,%rax
   2805d:	48 0f bc d2          	bsf    %rdx,%rdx
   28061:	48 c1 ea 03          	shr    $0x3,%rdx
   28065:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   2806a:	c3                   	ret    
   2806b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   28070:	88 c1                	mov    %al,%cl
   28072:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   28079:	80 e1 07             	and    $0x7,%cl
   2807c:	24 f8                	and    $0xf8,%al
   2807e:	c0 e1 03             	shl    $0x3,%cl
   28081:	48 8b 10             	mov    (%rax),%rdx
   28084:	48 d3 e6             	shl    %cl,%rsi
   28087:	48 ff ce             	dec    %rsi
   2808a:	48 09 f2             	or     %rsi,%rdx
   2808d:	eb b4                	jmp    28043 <_libc__strlen+0x23>

000000000002808f <memchr>:
   2808f:	f3 0f 1e fa          	endbr64 
   28093:	55                   	push   %rbp
   28094:	48 89 e5             	mov    %rsp,%rbp
   28097:	48 83 ec 20          	sub    $0x20,%rsp
   2809b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2809f:	89 75 f4             	mov    %esi,-0xc(%rbp)
   280a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   280a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   280aa:	8b 4d f4             	mov    -0xc(%rbp),%ecx
   280ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   280b1:	89 ce                	mov    %ecx,%esi
   280b3:	48 89 c7             	mov    %rax,%rdi
   280b6:	e8 55 41 00 00       	call   2c210 <_libc__memchr>
   280bb:	c9                   	leave  
   280bc:	c3                   	ret    

00000000000280bd <memmove>:
   280bd:	f3 0f 1e fa          	endbr64 
   280c1:	55                   	push   %rbp
   280c2:	48 89 e5             	mov    %rsp,%rbp
   280c5:	48 83 ec 20          	sub    $0x20,%rsp
   280c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   280cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   280d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   280d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   280d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   280dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   280e1:	48 89 ce             	mov    %rcx,%rsi
   280e4:	48 89 c7             	mov    %rax,%rdi
   280e7:	e8 54 41 00 00       	call   2c240 <__memmove>
   280ec:	c9                   	leave  
   280ed:	c3                   	ret    

00000000000280ee <memmove_verw>:
   280ee:	f3 0f 1e fa          	endbr64 
   280f2:	55                   	push   %rbp
   280f3:	48 89 e5             	mov    %rsp,%rbp
   280f6:	48 83 ec 50          	sub    $0x50,%rsp
   280fa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   280fe:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   28102:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   28106:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2810b:	74 0a                	je     28117 <memmove_verw+0x29>
   2810d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28111:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   28115:	75 09                	jne    28120 <memmove_verw+0x32>
   28117:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2811b:	e9 72 01 00 00       	jmp    28292 <memmove_verw+0x1a4>
   28120:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28124:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   28128:	0f 83 a3 00 00 00    	jae    281d1 <memmove_verw+0xe3>
   2812e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28132:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   28136:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2813a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2813e:	eb 52                	jmp    28192 <memmove_verw+0xa4>
   28140:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28144:	83 e0 07             	and    $0x7,%eax
   28147:	48 85 c0             	test   %rax,%rax
   2814a:	75 24                	jne    28170 <memmove_verw+0x82>
   2814c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   28150:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28154:	48 89 d6             	mov    %rdx,%rsi
   28157:	48 89 c7             	mov    %rax,%rdi
   2815a:	e8 51 fe ff ff       	call   27fb0 <__memcpy_8a>
   2815f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   28164:	48 83 45 e0 08       	addq   $0x8,-0x20(%rbp)
   28169:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   2816e:	eb 22                	jmp    28192 <memmove_verw+0xa4>
   28170:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   28174:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28178:	48 89 d6             	mov    %rdx,%rsi
   2817b:	48 89 c7             	mov    %rax,%rdi
   2817e:	e8 0d fe ff ff       	call   27f90 <__memcpy_verw>
   28183:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   28188:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   2818d:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   28192:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   28197:	77 a7                	ja     28140 <memmove_verw+0x52>
   28199:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   281a0:	eb 21                	jmp    281c3 <memmove_verw+0xd5>
   281a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   281a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   281aa:	48 89 d6             	mov    %rdx,%rsi
   281ad:	48 89 c7             	mov    %rax,%rdi
   281b0:	e8 db fd ff ff       	call   27f90 <__memcpy_verw>
   281b5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   281ba:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
   281bf:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
   281c3:	8b 45 d8             	mov    -0x28(%rbp),%eax
   281c6:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   281ca:	77 d6                	ja     281a2 <memmove_verw+0xb4>
   281cc:	e9 bd 00 00 00       	jmp    2828e <memmove_verw+0x1a0>
   281d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   281d5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   281d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   281dd:	48 01 d0             	add    %rdx,%rax
   281e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   281e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   281e8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   281ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   281f0:	48 01 d0             	add    %rdx,%rax
   281f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   281f7:	eb 5b                	jmp    28254 <memmove_verw+0x166>
   281f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   281fd:	83 e0 07             	and    $0x7,%eax
   28200:	48 83 f8 07          	cmp    $0x7,%rax
   28204:	75 2c                	jne    28232 <memmove_verw+0x144>
   28206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2820a:	48 8d 50 f9          	lea    -0x7(%rax),%rdx
   2820e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28212:	48 83 e8 07          	sub    $0x7,%rax
   28216:	48 89 d6             	mov    %rdx,%rsi
   28219:	48 89 c7             	mov    %rax,%rdi
   2821c:	e8 8f fd ff ff       	call   27fb0 <__memcpy_8a>
   28221:	48 83 6d f8 08       	subq   $0x8,-0x8(%rbp)
   28226:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
   2822b:	48 83 6d b8 08       	subq   $0x8,-0x48(%rbp)
   28230:	eb 22                	jmp    28254 <memmove_verw+0x166>
   28232:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   28236:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2823a:	48 89 d6             	mov    %rdx,%rsi
   2823d:	48 89 c7             	mov    %rax,%rdi
   28240:	e8 4b fd ff ff       	call   27f90 <__memcpy_verw>
   28245:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2824a:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   2824f:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   28254:	48 83 7d b8 07       	cmpq   $0x7,-0x48(%rbp)
   28259:	77 9e                	ja     281f9 <memmove_verw+0x10b>
   2825b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   28262:	eb 21                	jmp    28285 <memmove_verw+0x197>
   28264:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   28268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2826c:	48 89 d6             	mov    %rdx,%rsi
   2826f:	48 89 c7             	mov    %rax,%rdi
   28272:	e8 19 fd ff ff       	call   27f90 <__memcpy_verw>
   28277:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   2827c:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
   28281:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   28285:	8b 45 dc             	mov    -0x24(%rbp),%eax
   28288:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   2828c:	77 d6                	ja     28264 <memmove_verw+0x176>
   2828e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28292:	c9                   	leave  
   28293:	c3                   	ret    

0000000000028294 <__rv_alloc_D2A>:
   28294:	f3 0f 1e fa          	endbr64 
   28298:	55                   	push   %rbp
   28299:	48 89 e5             	mov    %rsp,%rbp
   2829c:	48 83 ec 20          	sub    $0x20,%rsp
   282a0:	89 7d ec             	mov    %edi,-0x14(%rbp)
   282a3:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
   282aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   282b1:	eb 07                	jmp    282ba <__rv_alloc_D2A+0x26>
   282b3:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   282b7:	d1 65 f0             	shll   -0x10(%rbp)
   282ba:	8b 45 f0             	mov    -0x10(%rbp),%eax
   282bd:	48 98                	cltq   
   282bf:	48 8d 50 18          	lea    0x18(%rax),%rdx
   282c3:	8b 45 ec             	mov    -0x14(%rbp),%eax
   282c6:	48 98                	cltq   
   282c8:	48 39 c2             	cmp    %rax,%rdx
   282cb:	76 e6                	jbe    282b3 <__rv_alloc_D2A+0x1f>
   282cd:	8b 45 f4             	mov    -0xc(%rbp),%eax
   282d0:	89 c7                	mov    %eax,%edi
   282d2:	e8 a8 23 00 00       	call   2a67f <__Balloc_D2A>
   282d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   282db:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   282e0:	75 07                	jne    282e9 <__rv_alloc_D2A+0x55>
   282e2:	b8 00 00 00 00       	mov    $0x0,%eax
   282e7:	eb 11                	jmp    282fa <__rv_alloc_D2A+0x66>
   282e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   282ed:	8b 55 f4             	mov    -0xc(%rbp),%edx
   282f0:	89 10                	mov    %edx,(%rax)
   282f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   282f6:	48 83 c0 04          	add    $0x4,%rax
   282fa:	c9                   	leave  
   282fb:	c3                   	ret    

00000000000282fc <__nrv_alloc_D2A>:
   282fc:	f3 0f 1e fa          	endbr64 
   28300:	55                   	push   %rbp
   28301:	48 89 e5             	mov    %rsp,%rbp
   28304:	48 83 ec 30          	sub    $0x30,%rsp
   28308:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2830c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   28310:	89 55 dc             	mov    %edx,-0x24(%rbp)
   28313:	8b 45 dc             	mov    -0x24(%rbp),%eax
   28316:	89 c7                	mov    %eax,%edi
   28318:	e8 77 ff ff ff       	call   28294 <__rv_alloc_D2A>
   2831d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28325:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28329:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2832e:	75 0c                	jne    2833c <__nrv_alloc_D2A+0x40>
   28330:	b8 00 00 00 00       	mov    $0x0,%eax
   28335:	eb 3b                	jmp    28372 <__nrv_alloc_D2A+0x76>
   28337:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   2833c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28340:	48 8d 50 01          	lea    0x1(%rax),%rdx
   28344:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   28348:	0f b6 10             	movzbl (%rax),%edx
   2834b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2834f:	88 10                	mov    %dl,(%rax)
   28351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28355:	0f b6 00             	movzbl (%rax),%eax
   28358:	84 c0                	test   %al,%al
   2835a:	75 db                	jne    28337 <__nrv_alloc_D2A+0x3b>
   2835c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   28361:	74 0b                	je     2836e <__nrv_alloc_D2A+0x72>
   28363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28367:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2836b:	48 89 10             	mov    %rdx,(%rax)
   2836e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28372:	c9                   	leave  
   28373:	c3                   	ret    

0000000000028374 <__freedtoa>:
   28374:	f3 0f 1e fa          	endbr64 
   28378:	55                   	push   %rbp
   28379:	48 89 e5             	mov    %rsp,%rbp
   2837c:	48 83 ec 20          	sub    $0x20,%rsp
   28380:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28384:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28388:	48 83 e8 04          	sub    $0x4,%rax
   2838c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28394:	8b 10                	mov    (%rax),%edx
   28396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2839a:	89 50 08             	mov    %edx,0x8(%rax)
   2839d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   283a1:	8b 40 08             	mov    0x8(%rax),%eax
   283a4:	ba 01 00 00 00       	mov    $0x1,%edx
   283a9:	89 c1                	mov    %eax,%ecx
   283ab:	d3 e2                	shl    %cl,%edx
   283ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   283b1:	89 50 0c             	mov    %edx,0xc(%rax)
   283b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   283b8:	48 89 c7             	mov    %rax,%rdi
   283bb:	e8 05 24 00 00       	call   2a7c5 <__Bfree_D2A>
   283c0:	90                   	nop
   283c1:	c9                   	leave  
   283c2:	c3                   	ret    

00000000000283c3 <__quorem_D2A>:
   283c3:	f3 0f 1e fa          	endbr64 
   283c7:	55                   	push   %rbp
   283c8:	48 89 e5             	mov    %rsp,%rbp
   283cb:	48 83 ec 60          	sub    $0x60,%rsp
   283cf:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   283d3:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   283d7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   283db:	8b 40 14             	mov    0x14(%rax),%eax
   283de:	89 45 bc             	mov    %eax,-0x44(%rbp)
   283e1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   283e5:	8b 40 14             	mov    0x14(%rax),%eax
   283e8:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   283eb:	7e 0a                	jle    283f7 <__quorem_D2A+0x34>
   283ed:	b8 00 00 00 00       	mov    $0x0,%eax
   283f2:	e9 cb 02 00 00       	jmp    286c2 <__quorem_D2A+0x2ff>
   283f7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   283fb:	48 83 c0 18          	add    $0x18,%rax
   283ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   28403:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   28407:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2840a:	48 98                	cltq   
   2840c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   28413:	00 
   28414:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28418:	48 01 d0             	add    %rdx,%rax
   2841b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2841f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28423:	48 83 c0 18          	add    $0x18,%rax
   28427:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2842b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2842e:	48 98                	cltq   
   28430:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   28437:	00 
   28438:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2843c:	48 01 d0             	add    %rdx,%rax
   2843f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   28443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28447:	8b 00                	mov    (%rax),%eax
   28449:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2844d:	8b 12                	mov    (%rdx),%edx
   2844f:	8d 4a 01             	lea    0x1(%rdx),%ecx
   28452:	ba 00 00 00 00       	mov    $0x0,%edx
   28457:	f7 f1                	div    %ecx
   28459:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2845c:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   28460:	0f 84 09 01 00 00    	je     2856f <__quorem_D2A+0x1ac>
   28466:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2846d:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   28474:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28478:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2847c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   28480:	8b 00                	mov    (%rax),%eax
   28482:	89 45 cc             	mov    %eax,-0x34(%rbp)
   28485:	8b 45 cc             	mov    -0x34(%rbp),%eax
   28488:	0f b7 c0             	movzwl %ax,%eax
   2848b:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   2848f:	89 c2                	mov    %eax,%edx
   28491:	8b 45 c8             	mov    -0x38(%rbp),%eax
   28494:	01 d0                	add    %edx,%eax
   28496:	89 45 d0             	mov    %eax,-0x30(%rbp)
   28499:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2849c:	c1 e8 10             	shr    $0x10,%eax
   2849f:	0f af 45 c0          	imul   -0x40(%rbp),%eax
   284a3:	8b 55 d0             	mov    -0x30(%rbp),%edx
   284a6:	c1 ea 10             	shr    $0x10,%edx
   284a9:	01 d0                	add    %edx,%eax
   284ab:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   284ae:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   284b1:	c1 e8 10             	shr    $0x10,%eax
   284b4:	89 45 c8             	mov    %eax,-0x38(%rbp)
   284b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   284bb:	8b 00                	mov    (%rax),%eax
   284bd:	0f b7 d0             	movzwl %ax,%edx
   284c0:	8b 45 d0             	mov    -0x30(%rbp),%eax
   284c3:	0f b7 c0             	movzwl %ax,%eax
   284c6:	29 c2                	sub    %eax,%edx
   284c8:	89 d0                	mov    %edx,%eax
   284ca:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   284cd:	89 45 d8             	mov    %eax,-0x28(%rbp)
   284d0:	8b 45 d8             	mov    -0x28(%rbp),%eax
   284d3:	c1 e8 10             	shr    $0x10,%eax
   284d6:	83 e0 01             	and    $0x1,%eax
   284d9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   284dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   284e0:	8b 00                	mov    (%rax),%eax
   284e2:	c1 e8 10             	shr    $0x10,%eax
   284e5:	89 c2                	mov    %eax,%edx
   284e7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   284ea:	0f b7 c0             	movzwl %ax,%eax
   284ed:	29 c2                	sub    %eax,%edx
   284ef:	89 d0                	mov    %edx,%eax
   284f1:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   284f4:	89 45 dc             	mov    %eax,-0x24(%rbp)
   284f7:	8b 45 dc             	mov    -0x24(%rbp),%eax
   284fa:	c1 e8 10             	shr    $0x10,%eax
   284fd:	83 e0 01             	and    $0x1,%eax
   28500:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28503:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28507:	48 83 c0 02          	add    $0x2,%rax
   2850b:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2850e:	66 89 10             	mov    %dx,(%rax)
   28511:	8b 45 d8             	mov    -0x28(%rbp),%eax
   28514:	89 c2                	mov    %eax,%edx
   28516:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2851a:	66 89 10             	mov    %dx,(%rax)
   2851d:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   28522:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28526:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2852a:	0f 86 44 ff ff ff    	jbe    28474 <__quorem_D2A+0xb1>
   28530:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28534:	8b 00                	mov    (%rax),%eax
   28536:	85 c0                	test   %eax,%eax
   28538:	75 35                	jne    2856f <__quorem_D2A+0x1ac>
   2853a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2853e:	48 83 c0 18          	add    $0x18,%rax
   28542:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   28546:	eb 04                	jmp    2854c <__quorem_D2A+0x189>
   28548:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2854c:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   28551:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28555:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   28559:	76 0a                	jbe    28565 <__quorem_D2A+0x1a2>
   2855b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2855f:	8b 00                	mov    (%rax),%eax
   28561:	85 c0                	test   %eax,%eax
   28563:	74 e3                	je     28548 <__quorem_D2A+0x185>
   28565:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28569:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2856c:	89 50 14             	mov    %edx,0x14(%rax)
   2856f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   28573:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28577:	48 89 d6             	mov    %rdx,%rsi
   2857a:	48 89 c7             	mov    %rax,%rdi
   2857d:	e8 4b 2c 00 00       	call   2b1cd <__cmp_D2A>
   28582:	85 c0                	test   %eax,%eax
   28584:	0f 88 35 01 00 00    	js     286bf <__quorem_D2A+0x2fc>
   2858a:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
   2858e:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   28595:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   2859c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   285a0:	48 83 c0 18          	add    $0x18,%rax
   285a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   285a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   285ac:	48 83 c0 18          	add    $0x18,%rax
   285b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   285b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   285b8:	48 8d 50 04          	lea    0x4(%rax),%rdx
   285bc:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   285c0:	8b 00                	mov    (%rax),%eax
   285c2:	89 45 cc             	mov    %eax,-0x34(%rbp)
   285c5:	8b 45 cc             	mov    -0x34(%rbp),%eax
   285c8:	0f b7 d0             	movzwl %ax,%edx
   285cb:	8b 45 c8             	mov    -0x38(%rbp),%eax
   285ce:	01 d0                	add    %edx,%eax
   285d0:	89 45 d0             	mov    %eax,-0x30(%rbp)
   285d3:	8b 45 cc             	mov    -0x34(%rbp),%eax
   285d6:	c1 e8 10             	shr    $0x10,%eax
   285d9:	89 c2                	mov    %eax,%edx
   285db:	8b 45 d0             	mov    -0x30(%rbp),%eax
   285de:	c1 e8 10             	shr    $0x10,%eax
   285e1:	01 d0                	add    %edx,%eax
   285e3:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   285e6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   285e9:	c1 e8 10             	shr    $0x10,%eax
   285ec:	89 45 c8             	mov    %eax,-0x38(%rbp)
   285ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   285f3:	8b 00                	mov    (%rax),%eax
   285f5:	0f b7 d0             	movzwl %ax,%edx
   285f8:	8b 45 d0             	mov    -0x30(%rbp),%eax
   285fb:	0f b7 c0             	movzwl %ax,%eax
   285fe:	29 c2                	sub    %eax,%edx
   28600:	89 d0                	mov    %edx,%eax
   28602:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   28605:	89 45 d8             	mov    %eax,-0x28(%rbp)
   28608:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2860b:	c1 e8 10             	shr    $0x10,%eax
   2860e:	83 e0 01             	and    $0x1,%eax
   28611:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   28614:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28618:	8b 00                	mov    (%rax),%eax
   2861a:	c1 e8 10             	shr    $0x10,%eax
   2861d:	89 c2                	mov    %eax,%edx
   2861f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   28622:	0f b7 c0             	movzwl %ax,%eax
   28625:	29 c2                	sub    %eax,%edx
   28627:	89 d0                	mov    %edx,%eax
   28629:	2b 45 c4             	sub    -0x3c(%rbp),%eax
   2862c:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2862f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   28632:	c1 e8 10             	shr    $0x10,%eax
   28635:	83 e0 01             	and    $0x1,%eax
   28638:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2863b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2863f:	48 83 c0 02          	add    $0x2,%rax
   28643:	8b 55 dc             	mov    -0x24(%rbp),%edx
   28646:	66 89 10             	mov    %dx,(%rax)
   28649:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2864c:	89 c2                	mov    %eax,%edx
   2864e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28652:	66 89 10             	mov    %dx,(%rax)
   28655:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2865a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2865e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   28662:	0f 86 4c ff ff ff    	jbe    285b4 <__quorem_D2A+0x1f1>
   28668:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2866c:	48 83 c0 18          	add    $0x18,%rax
   28670:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   28674:	8b 45 bc             	mov    -0x44(%rbp),%eax
   28677:	48 98                	cltq   
   28679:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   28680:	00 
   28681:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28685:	48 01 d0             	add    %rdx,%rax
   28688:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2868c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28690:	8b 00                	mov    (%rax),%eax
   28692:	85 c0                	test   %eax,%eax
   28694:	75 29                	jne    286bf <__quorem_D2A+0x2fc>
   28696:	eb 04                	jmp    2869c <__quorem_D2A+0x2d9>
   28698:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2869c:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   286a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   286a5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   286a9:	76 0a                	jbe    286b5 <__quorem_D2A+0x2f2>
   286ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   286af:	8b 00                	mov    (%rax),%eax
   286b1:	85 c0                	test   %eax,%eax
   286b3:	74 e3                	je     28698 <__quorem_D2A+0x2d5>
   286b5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   286b9:	8b 55 bc             	mov    -0x44(%rbp),%edx
   286bc:	89 50 14             	mov    %edx,0x14(%rax)
   286bf:	8b 45 c0             	mov    -0x40(%rbp),%eax
   286c2:	c9                   	leave  
   286c3:	c3                   	ret    

00000000000286c4 <__dtoa>:
   286c4:	f3 0f 1e fa          	endbr64 
   286c8:	55                   	push   %rbp
   286c9:	48 89 e5             	mov    %rsp,%rbp
   286cc:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   286d3:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
   286da:	ff 
   286db:	89 bd 24 ff ff ff    	mov    %edi,-0xdc(%rbp)
   286e1:	89 b5 20 ff ff ff    	mov    %esi,-0xe0(%rbp)
   286e7:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   286ee:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   286f5:	4c 89 85 08 ff ff ff 	mov    %r8,-0xf8(%rbp)
   286fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28703:	00 00 
   28705:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   28709:	31 c0                	xor    %eax,%eax
   2870b:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
   28712:	ff 
   28713:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28718:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2871b:	85 c0                	test   %eax,%eax
   2871d:	79 1a                	jns    28739 <__dtoa+0x75>
   2871f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   28726:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2872c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2872f:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   28734:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   28737:	eb 0d                	jmp    28746 <__dtoa+0x82>
   28739:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   28740:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   28746:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   28749:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   2874e:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   28753:	75 60                	jne    287b5 <__dtoa+0xf1>
   28755:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2875c:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   28762:	8b 45 e0             	mov    -0x20(%rbp),%eax
   28765:	85 c0                	test   %eax,%eax
   28767:	75 2c                	jne    28795 <__dtoa+0xd1>
   28769:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2876c:	25 ff ff 0f 00       	and    $0xfffff,%eax
   28771:	85 c0                	test   %eax,%eax
   28773:	75 20                	jne    28795 <__dtoa+0xd1>
   28775:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2877c:	ba 08 00 00 00       	mov    $0x8,%edx
   28781:	48 89 c6             	mov    %rax,%rsi
   28784:	48 8d 3d c5 94 00 00 	lea    0x94c5(%rip),%rdi        # 31c50 <xdigs_upper.3344+0x10>
   2878b:	e8 6c fb ff ff       	call   282fc <__nrv_alloc_D2A>
   28790:	e9 cf 15 00 00       	jmp    29d64 <__dtoa+0x16a0>
   28795:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2879c:	ba 03 00 00 00       	mov    $0x3,%edx
   287a1:	48 89 c6             	mov    %rax,%rsi
   287a4:	48 8d 3d ae 94 00 00 	lea    0x94ae(%rip),%rdi        # 31c59 <xdigs_upper.3344+0x19>
   287ab:	e8 4c fb ff ff       	call   282fc <__nrv_alloc_D2A>
   287b0:	e9 af 15 00 00       	jmp    29d64 <__dtoa+0x16a0>
   287b5:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   287ba:	66 0f ef c9          	pxor   %xmm1,%xmm1
   287be:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   287c2:	7a 37                	jp     287fb <__dtoa+0x137>
   287c4:	66 0f ef c9          	pxor   %xmm1,%xmm1
   287c8:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   287cc:	75 2d                	jne    287fb <__dtoa+0x137>
   287ce:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   287d5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   287db:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   287e2:	ba 01 00 00 00       	mov    $0x1,%edx
   287e7:	48 89 c6             	mov    %rax,%rsi
   287ea:	48 8d 3d 6c 94 00 00 	lea    0x946c(%rip),%rdi        # 31c5d <xdigs_upper.3344+0x1d>
   287f1:	e8 06 fb ff ff       	call   282fc <__nrv_alloc_D2A>
   287f6:	e9 69 15 00 00       	jmp    29d64 <__dtoa+0x16a0>
   287fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   287ff:	48 8d 8d 34 ff ff ff 	lea    -0xcc(%rbp),%rcx
   28806:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
   2880d:	48 89 ce             	mov    %rcx,%rsi
   28810:	48 89 d7             	mov    %rdx,%rdi
   28813:	66 48 0f 6e c0       	movq   %rax,%xmm0
   28818:	e8 76 2e 00 00       	call   2b693 <__d2b_D2A>
   2881d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   28821:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   28826:	75 0a                	jne    28832 <__dtoa+0x16e>
   28828:	b8 00 00 00 00       	mov    $0x0,%eax
   2882d:	e9 32 15 00 00       	jmp    29d64 <__dtoa+0x16a0>
   28832:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   28835:	c1 e8 14             	shr    $0x14,%eax
   28838:	25 ff 07 00 00       	and    $0x7ff,%eax
   2883d:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   28843:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2884a:	74 39                	je     28885 <__dtoa+0x1c1>
   2884c:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28851:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   28856:	8b 45 ec             	mov    -0x14(%rbp),%eax
   28859:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2885e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   28861:	8b 45 ec             	mov    -0x14(%rbp),%eax
   28864:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   28869:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2886c:	81 ad 48 ff ff ff ff 	subl   $0x3ff,-0xb8(%rbp)
   28873:	03 00 00 
   28876:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   2887d:	00 00 00 
   28880:	e9 ab 00 00 00       	jmp    28930 <__dtoa+0x26c>
   28885:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2888b:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   28891:	01 d0                	add    %edx,%eax
   28893:	05 32 04 00 00       	add    $0x432,%eax
   28898:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2889e:	83 bd 48 ff ff ff 20 	cmpl   $0x20,-0xb8(%rbp)
   288a5:	7e 2a                	jle    288d1 <__dtoa+0x20d>
   288a7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   288aa:	b8 40 00 00 00       	mov    $0x40,%eax
   288af:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   288b5:	89 d6                	mov    %edx,%esi
   288b7:	89 c1                	mov    %eax,%ecx
   288b9:	d3 e6                	shl    %cl,%esi
   288bb:	8b 55 e0             	mov    -0x20(%rbp),%edx
   288be:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   288c4:	83 e8 20             	sub    $0x20,%eax
   288c7:	89 c1                	mov    %eax,%ecx
   288c9:	d3 ea                	shr    %cl,%edx
   288cb:	89 d0                	mov    %edx,%eax
   288cd:	09 f0                	or     %esi,%eax
   288cf:	eb 14                	jmp    288e5 <__dtoa+0x221>
   288d1:	8b 55 e0             	mov    -0x20(%rbp),%edx
   288d4:	b8 20 00 00 00       	mov    $0x20,%eax
   288d9:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   288df:	89 c1                	mov    %eax,%ecx
   288e1:	d3 e2                	shl    %cl,%edx
   288e3:	89 d0                	mov    %edx,%eax
   288e5:	89 45 80             	mov    %eax,-0x80(%rbp)
   288e8:	8b 45 80             	mov    -0x80(%rbp),%eax
   288eb:	48 85 c0             	test   %rax,%rax
   288ee:	78 07                	js     288f7 <__dtoa+0x233>
   288f0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   288f5:	eb 15                	jmp    2890c <__dtoa+0x248>
   288f7:	48 89 c2             	mov    %rax,%rdx
   288fa:	48 d1 ea             	shr    %rdx
   288fd:	83 e0 01             	and    $0x1,%eax
   28900:	48 09 c2             	or     %rax,%rdx
   28903:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
   28908:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   2890c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   28911:	8b 45 ec             	mov    -0x14(%rbp),%eax
   28914:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   28919:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2891c:	81 ad 48 ff ff ff 33 	subl   $0x433,-0xb8(%rbp)
   28923:	04 00 00 
   28926:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
   2892d:	00 00 00 
   28930:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   28935:	f2 0f 10 0d 23 93 00 	movsd  0x9323(%rip),%xmm1        # 31c60 <xdigs_upper.3344+0x20>
   2893c:	00 
   2893d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   28941:	66 0f 28 c8          	movapd %xmm0,%xmm1
   28945:	f2 0f 10 05 1b 93 00 	movsd  0x931b(%rip),%xmm0        # 31c68 <xdigs_upper.3344+0x28>
   2894c:	00 
   2894d:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   28951:	f2 0f 10 05 17 93 00 	movsd  0x9317(%rip),%xmm0        # 31c70 <xdigs_upper.3344+0x30>
   28958:	00 
   28959:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2895d:	f2 0f 2a 95 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm2
   28964:	ff 
   28965:	f2 0f 10 05 0b 93 00 	movsd  0x930b(%rip),%xmm0        # 31c78 <xdigs_upper.3344+0x38>
   2896c:	00 
   2896d:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   28971:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   28975:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2897a:	f2 0f 10 45 b8       	movsd  -0x48(%rbp),%xmm0
   2897f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   28983:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   28989:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2898d:	66 0f 2f 45 b8       	comisd -0x48(%rbp),%xmm0
   28992:	76 1d                	jbe    289b1 <__dtoa+0x2ed>
   28994:	f2 0f 2a 85 5c ff ff 	cvtsi2sdl -0xa4(%rbp),%xmm0
   2899b:	ff 
   2899c:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   289a1:	7a 07                	jp     289aa <__dtoa+0x2e6>
   289a3:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   289a8:	74 07                	je     289b1 <__dtoa+0x2ed>
   289aa:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   289b1:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
   289b8:	00 00 00 
   289bb:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   289c2:	78 41                	js     28a05 <__dtoa+0x341>
   289c4:	83 bd 5c ff ff ff 16 	cmpl   $0x16,-0xa4(%rbp)
   289cb:	7f 38                	jg     28a05 <__dtoa+0x341>
   289cd:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   289d2:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   289d8:	48 98                	cltq   
   289da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   289e1:	00 
   289e2:	48 8d 05 f7 93 00 00 	lea    0x93f7(%rip),%rax        # 31de0 <__tens_D2A>
   289e9:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   289ee:	66 0f 2f c1          	comisd %xmm1,%xmm0
   289f2:	76 07                	jbe    289fb <__dtoa+0x337>
   289f4:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   289fb:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
   28a02:	00 00 00 
   28a05:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   28a0b:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   28a11:	83 e8 01             	sub    $0x1,%eax
   28a14:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   28a1a:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   28a21:	78 18                	js     28a3b <__dtoa+0x377>
   28a23:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   28a2a:	00 00 00 
   28a2d:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   28a33:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   28a39:	eb 18                	jmp    28a53 <__dtoa+0x38f>
   28a3b:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   28a41:	f7 d8                	neg    %eax
   28a43:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   28a49:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   28a50:	00 00 00 
   28a53:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   28a5a:	78 24                	js     28a80 <__dtoa+0x3bc>
   28a5c:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
   28a63:	00 00 00 
   28a66:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28a6c:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   28a72:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28a78:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   28a7e:	eb 24                	jmp    28aa4 <__dtoa+0x3e0>
   28a80:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28a86:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   28a8c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28a92:	f7 d8                	neg    %eax
   28a94:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   28a9a:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   28aa1:	00 00 00 
   28aa4:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
   28aab:	78 09                	js     28ab6 <__dtoa+0x3f2>
   28aad:	83 bd 24 ff ff ff 09 	cmpl   $0x9,-0xdc(%rbp)
   28ab4:	7e 0a                	jle    28ac0 <__dtoa+0x3fc>
   28ab6:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
   28abd:	00 00 00 
   28ac0:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
   28ac7:	00 00 00 
   28aca:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   28ad1:	7e 11                	jle    28ae4 <__dtoa+0x420>
   28ad3:	83 ad 24 ff ff ff 04 	subl   $0x4,-0xdc(%rbp)
   28ada:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
   28ae1:	00 00 00 
   28ae4:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   28aeb:	00 00 00 
   28aee:	c7 85 54 ff ff ff ff 	movl   $0xffffffff,-0xac(%rbp)
   28af5:	ff ff ff 
   28af8:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   28afe:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   28b04:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   28b0b:	0f 87 d2 00 00 00    	ja     28be3 <__dtoa+0x51f>
   28b11:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   28b17:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   28b1e:	00 
   28b1f:	48 8d 05 92 91 00 00 	lea    0x9192(%rip),%rax        # 31cb8 <xdigs_upper.3344+0x78>
   28b26:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   28b29:	48 98                	cltq   
   28b2b:	48 8d 15 86 91 00 00 	lea    0x9186(%rip),%rdx        # 31cb8 <xdigs_upper.3344+0x78>
   28b32:	48 01 d0             	add    %rdx,%rax
   28b35:	3e ff e0             	notrack jmp *%rax
   28b38:	c7 85 48 ff ff ff 12 	movl   $0x12,-0xb8(%rbp)
   28b3f:	00 00 00 
   28b42:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
   28b49:	00 00 00 
   28b4c:	e9 92 00 00 00       	jmp    28be3 <__dtoa+0x51f>
   28b51:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   28b58:	00 00 00 
   28b5b:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   28b62:	7f 0a                	jg     28b6e <__dtoa+0x4aa>
   28b64:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
   28b6b:	00 00 00 
   28b6e:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   28b74:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   28b7a:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28b80:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   28b86:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   28b8c:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   28b92:	eb 4f                	jmp    28be3 <__dtoa+0x51f>
   28b94:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   28b9b:	00 00 00 
   28b9e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
   28ba4:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28baa:	01 d0                	add    %edx,%eax
   28bac:	83 c0 01             	add    $0x1,%eax
   28baf:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   28bb5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28bbb:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   28bc1:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28bc7:	83 e8 01             	sub    $0x1,%eax
   28bca:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   28bd0:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   28bd7:	7f 0a                	jg     28be3 <__dtoa+0x51f>
   28bd9:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   28be0:	00 00 00 
   28be3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28be9:	89 c7                	mov    %eax,%edi
   28beb:	e8 a4 f6 ff ff       	call   28294 <__rv_alloc_D2A>
   28bf0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   28bf4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   28bf8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   28bfc:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   28c01:	75 0a                	jne    28c0d <__dtoa+0x549>
   28c03:	b8 00 00 00 00       	mov    $0x0,%eax
   28c08:	e9 57 11 00 00       	jmp    29d64 <__dtoa+0x16a0>
   28c0d:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   28c14:	0f 88 05 05 00 00    	js     2911f <__dtoa+0xa5b>
   28c1a:	83 bd 50 ff ff ff 0e 	cmpl   $0xe,-0xb0(%rbp)
   28c21:	0f 8f f8 04 00 00    	jg     2911f <__dtoa+0xa5b>
   28c27:	83 bd 78 ff ff ff 00 	cmpl   $0x0,-0x88(%rbp)
   28c2e:	0f 84 eb 04 00 00    	je     2911f <__dtoa+0xa5b>
   28c34:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   28c3b:	00 00 00 
   28c3e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28c43:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   28c48:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28c4e:	89 45 84             	mov    %eax,-0x7c(%rbp)
   28c51:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   28c57:	89 45 88             	mov    %eax,-0x78(%rbp)
   28c5a:	c7 85 4c ff ff ff 02 	movl   $0x2,-0xb4(%rbp)
   28c61:	00 00 00 
   28c64:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   28c6b:	0f 8e ce 00 00 00    	jle    28d3f <__dtoa+0x67b>
   28c71:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28c77:	83 e0 0f             	and    $0xf,%eax
   28c7a:	48 98                	cltq   
   28c7c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28c83:	00 
   28c84:	48 8d 05 55 91 00 00 	lea    0x9155(%rip),%rax        # 31de0 <__tens_D2A>
   28c8b:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   28c90:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   28c95:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28c9b:	c1 f8 04             	sar    $0x4,%eax
   28c9e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   28ca4:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   28caa:	83 e0 10             	and    $0x10,%eax
   28cad:	85 c0                	test   %eax,%eax
   28caf:	74 71                	je     28d22 <__dtoa+0x65e>
   28cb1:	83 a5 58 ff ff ff 0f 	andl   $0xf,-0xa8(%rbp)
   28cb8:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28cbd:	f2 0f 10 0d bb 90 00 	movsd  0x90bb(%rip),%xmm1        # 31d80 <__bigtens_D2A+0x20>
   28cc4:	00 
   28cc5:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   28cc9:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28cce:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   28cd5:	eb 4b                	jmp    28d22 <__dtoa+0x65e>
   28cd7:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   28cdd:	83 e0 01             	and    $0x1,%eax
   28ce0:	85 c0                	test   %eax,%eax
   28ce2:	74 31                	je     28d15 <__dtoa+0x651>
   28ce4:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   28ceb:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28cf1:	48 98                	cltq   
   28cf3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28cfa:	00 
   28cfb:	48 8d 05 5e 90 00 00 	lea    0x905e(%rip),%rax        # 31d60 <__bigtens_D2A>
   28d02:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   28d07:	f2 0f 10 4d b8       	movsd  -0x48(%rbp),%xmm1
   28d0c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28d10:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   28d15:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   28d1b:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   28d22:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   28d29:	75 ac                	jne    28cd7 <__dtoa+0x613>
   28d2b:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28d30:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   28d35:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28d3a:	e9 a1 00 00 00       	jmp    28de0 <__dtoa+0x71c>
   28d3f:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   28d45:	f7 d8                	neg    %eax
   28d47:	89 45 8c             	mov    %eax,-0x74(%rbp)
   28d4a:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   28d4e:	0f 84 8c 00 00 00    	je     28de0 <__dtoa+0x71c>
   28d54:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28d59:	8b 45 8c             	mov    -0x74(%rbp),%eax
   28d5c:	83 e0 0f             	and    $0xf,%eax
   28d5f:	48 98                	cltq   
   28d61:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28d68:	00 
   28d69:	48 8d 05 70 90 00 00 	lea    0x9070(%rip),%rax        # 31de0 <__tens_D2A>
   28d70:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   28d75:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28d79:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28d7e:	8b 45 8c             	mov    -0x74(%rbp),%eax
   28d81:	c1 f8 04             	sar    $0x4,%eax
   28d84:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   28d8a:	eb 4b                	jmp    28dd7 <__dtoa+0x713>
   28d8c:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   28d92:	83 e0 01             	and    $0x1,%eax
   28d95:	85 c0                	test   %eax,%eax
   28d97:	74 31                	je     28dca <__dtoa+0x706>
   28d99:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   28da0:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28da5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28dab:	48 98                	cltq   
   28dad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28db4:	00 
   28db5:	48 8d 05 a4 8f 00 00 	lea    0x8fa4(%rip),%rax        # 31d60 <__bigtens_D2A>
   28dbc:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   28dc1:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28dc5:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28dca:	d1 bd 58 ff ff ff    	sarl   -0xa8(%rbp)
   28dd0:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   28dd7:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   28dde:	75 ac                	jne    28d8c <__dtoa+0x6c8>
   28de0:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   28de7:	74 59                	je     28e42 <__dtoa+0x77e>
   28de9:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28dee:	f2 0f 10 05 8a 8e 00 	movsd  0x8e8a(%rip),%xmm0        # 31c80 <xdigs_upper.3344+0x40>
   28df5:	00 
   28df6:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28dfa:	76 46                	jbe    28e42 <__dtoa+0x77e>
   28dfc:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   28e03:	7e 3d                	jle    28e42 <__dtoa+0x77e>
   28e05:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   28e0c:	0f 8e e5 02 00 00    	jle    290f7 <__dtoa+0xa33>
   28e12:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   28e18:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   28e1e:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   28e25:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28e2a:	f2 0f 10 05 56 8e 00 	movsd  0x8e56(%rip),%xmm0        # 31c88 <xdigs_upper.3344+0x48>
   28e31:	00 
   28e32:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28e36:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28e3b:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   28e42:	f2 0f 2a 8d 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm1
   28e49:	ff 
   28e4a:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28e4f:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   28e53:	f2 0f 10 05 35 8e 00 	movsd  0x8e35(%rip),%xmm0        # 31c90 <xdigs_upper.3344+0x50>
   28e5a:	00 
   28e5b:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   28e5f:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   28e64:	8b 45 f4             	mov    -0xc(%rbp),%eax
   28e67:	2d 00 00 40 03       	sub    $0x3400000,%eax
   28e6c:	89 45 f4             	mov    %eax,-0xc(%rbp)
   28e6f:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   28e76:	75 5f                	jne    28ed7 <__dtoa+0x813>
   28e78:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   28e7f:	00 
   28e80:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   28e84:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   28e88:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28e8d:	f2 0f 10 0d 03 8e 00 	movsd  0x8e03(%rip),%xmm1        # 31c98 <xdigs_upper.3344+0x58>
   28e94:	00 
   28e95:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   28e99:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28e9e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28ea3:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   28ea8:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28eac:	0f 87 f1 08 00 00    	ja     297a3 <__dtoa+0x10df>
   28eb2:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28eb7:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   28ebc:	f3 0f 7e 15 dc 8d 00 	movq   0x8ddc(%rip),%xmm2        # 31ca0 <xdigs_upper.3344+0x60>
   28ec3:	00 
   28ec4:	66 0f 57 c2          	xorpd  %xmm2,%xmm0
   28ec8:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28ecc:	0f 87 b7 08 00 00    	ja     29789 <__dtoa+0x10c5>
   28ed2:	e9 24 02 00 00       	jmp    290fb <__dtoa+0xa37>
   28ed7:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   28ede:	0f 84 fa 00 00 00    	je     28fde <__dtoa+0x91a>
   28ee4:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   28eea:	83 e8 01             	sub    $0x1,%eax
   28eed:	48 98                	cltq   
   28eef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28ef6:	00 
   28ef7:	48 8d 05 e2 8e 00 00 	lea    0x8ee2(%rip),%rax        # 31de0 <__tens_D2A>
   28efe:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   28f03:	f2 0f 10 05 a5 8d 00 	movsd  0x8da5(%rip),%xmm0        # 31cb0 <xdigs_upper.3344+0x70>
   28f0a:	00 
   28f0b:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   28f0f:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   28f14:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   28f18:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   28f1d:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   28f24:	00 00 00 
   28f27:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28f2c:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   28f30:	89 45 90             	mov    %eax,-0x70(%rbp)
   28f33:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   28f38:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   28f3d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   28f41:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28f46:	8b 45 90             	mov    -0x70(%rbp),%eax
   28f49:	89 c1                	mov    %eax,%ecx
   28f4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   28f4f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   28f53:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   28f57:	8d 51 30             	lea    0x30(%rcx),%edx
   28f5a:	88 10                	mov    %dl,(%rax)
   28f5c:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28f61:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   28f66:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28f6a:	0f 87 af 0d 00 00    	ja     29d1f <__dtoa+0x165b>
   28f70:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28f75:	f2 0f 10 05 03 8d 00 	movsd  0x8d03(%rip),%xmm0        # 31c80 <xdigs_upper.3344+0x40>
   28f7c:	00 
   28f7d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   28f81:	66 0f 28 c8          	movapd %xmm0,%xmm1
   28f85:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   28f8a:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28f8e:	0f 87 d5 02 00 00    	ja     29269 <__dtoa+0xba5>
   28f94:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   28f9b:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   28fa1:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   28fa7:	0f 8d 4d 01 00 00    	jge    290fa <__dtoa+0xa36>
   28fad:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   28fb2:	f2 0f 10 05 ce 8c 00 	movsd  0x8cce(%rip),%xmm0        # 31c88 <xdigs_upper.3344+0x48>
   28fb9:	00 
   28fba:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28fbe:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   28fc3:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   28fc8:	f2 0f 10 05 b8 8c 00 	movsd  0x8cb8(%rip),%xmm0        # 31c88 <xdigs_upper.3344+0x48>
   28fcf:	00 
   28fd0:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   28fd4:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   28fd9:	e9 49 ff ff ff       	jmp    28f27 <__dtoa+0x863>
   28fde:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   28fe3:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   28fe9:	83 e8 01             	sub    $0x1,%eax
   28fec:	48 98                	cltq   
   28fee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28ff5:	00 
   28ff6:	48 8d 05 e3 8d 00 00 	lea    0x8de3(%rip),%rax        # 31de0 <__tens_D2A>
   28ffd:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   29002:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   29006:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2900b:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   29012:	00 00 00 
   29015:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2901a:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2901e:	89 45 90             	mov    %eax,-0x70(%rbp)
   29021:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   29026:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   2902b:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2902f:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   29034:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   29039:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2903d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   29041:	7a 16                	jp     29059 <__dtoa+0x995>
   29043:	66 0f ef c9          	pxor   %xmm1,%xmm1
   29047:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2904b:	75 0c                	jne    29059 <__dtoa+0x995>
   2904d:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29053:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   29059:	8b 45 90             	mov    -0x70(%rbp),%eax
   2905c:	89 c1                	mov    %eax,%ecx
   2905e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29062:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29066:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2906a:	8d 51 30             	lea    0x30(%rcx),%edx
   2906d:	88 10                	mov    %dl,(%rax)
   2906f:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29075:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   2907b:	75 58                	jne    290d5 <__dtoa+0xa11>
   2907d:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   29082:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   29087:	f2 0f 10 0d 21 8c 00 	movsd  0x8c21(%rip),%xmm1        # 31cb0 <xdigs_upper.3344+0x70>
   2908e:	00 
   2908f:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   29093:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29097:	0f 87 cf 01 00 00    	ja     2926c <__dtoa+0xba8>
   2909d:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   290a2:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   290a7:	f2 0f 10 05 01 8c 00 	movsd  0x8c01(%rip),%xmm0        # 31cb0 <xdigs_upper.3344+0x70>
   290ae:	00 
   290af:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   290b3:	66 0f 2f c1          	comisd %xmm1,%xmm0
   290b7:	77 02                	ja     290bb <__dtoa+0x9f7>
   290b9:	eb 40                	jmp    290fb <__dtoa+0xa37>
   290bb:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   290c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   290c4:	0f b6 00             	movzbl (%rax),%eax
   290c7:	3c 30                	cmp    $0x30,%al
   290c9:	74 f0                	je     290bb <__dtoa+0x9f7>
   290cb:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   290d0:	e9 4e 0c 00 00       	jmp    29d23 <__dtoa+0x165f>
   290d5:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   290dc:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   290e1:	f2 0f 10 05 9f 8b 00 	movsd  0x8b9f(%rip),%xmm0        # 31c88 <xdigs_upper.3344+0x48>
   290e8:	00 
   290e9:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   290ed:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   290f2:	e9 1e ff ff ff       	jmp    29015 <__dtoa+0x951>
   290f7:	90                   	nop
   290f8:	eb 01                	jmp    290fb <__dtoa+0xa37>
   290fa:	90                   	nop
   290fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   290ff:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   29103:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   29108:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2910d:	8b 45 84             	mov    -0x7c(%rbp),%eax
   29110:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   29116:	8b 45 88             	mov    -0x78(%rbp),%eax
   29119:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   2911f:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   29125:	85 c0                	test   %eax,%eax
   29127:	0f 88 b7 01 00 00    	js     292e4 <__dtoa+0xc20>
   2912d:	83 bd 5c ff ff ff 0e 	cmpl   $0xe,-0xa4(%rbp)
   29134:	0f 8f aa 01 00 00    	jg     292e4 <__dtoa+0xc20>
   2913a:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   29140:	48 98                	cltq   
   29142:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   29149:	00 
   2914a:	48 8d 05 8f 8c 00 00 	lea    0x8c8f(%rip),%rax        # 31de0 <__tens_D2A>
   29151:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   29156:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
   2915b:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
   29162:	79 4b                	jns    291af <__dtoa+0xaeb>
   29164:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2916b:	7f 42                	jg     291af <__dtoa+0xaeb>
   2916d:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   29174:	00 
   29175:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29179:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   2917d:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   29184:	0f 88 02 06 00 00    	js     2978c <__dtoa+0x10c8>
   2918a:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   2918f:	f2 0f 10 55 b8       	movsd  -0x48(%rbp),%xmm2
   29194:	f2 0f 10 05 fc 8a 00 	movsd  0x8afc(%rip),%xmm0        # 31c98 <xdigs_upper.3344+0x58>
   2919b:	00 
   2919c:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   291a0:	66 0f 2f c1          	comisd %xmm1,%xmm0
   291a4:	0f 83 e2 05 00 00    	jae    2978c <__dtoa+0x10c8>
   291aa:	e9 f8 05 00 00       	jmp    297a7 <__dtoa+0x10e3>
   291af:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   291b6:	00 00 00 
   291b9:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   291be:	f2 0f 5e 45 b8       	divsd  -0x48(%rbp),%xmm0
   291c3:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   291c7:	89 45 90             	mov    %eax,-0x70(%rbp)
   291ca:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   291cf:	f2 0f 2a 4d 90       	cvtsi2sdl -0x70(%rbp),%xmm1
   291d4:	f2 0f 59 4d b8       	mulsd  -0x48(%rbp),%xmm1
   291d9:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   291dd:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   291e2:	8b 45 90             	mov    -0x70(%rbp),%eax
   291e5:	89 c1                	mov    %eax,%ecx
   291e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   291eb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   291ef:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   291f3:	8d 51 30             	lea    0x30(%rcx),%edx
   291f6:	88 10                	mov    %dl,(%rax)
   291f8:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   291fd:	66 0f ef c9          	pxor   %xmm1,%xmm1
   29201:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   29205:	7a 0e                	jp     29215 <__dtoa+0xb51>
   29207:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2920b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2920f:	0f 84 c3 00 00 00    	je     292d8 <__dtoa+0xc14>
   29215:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2921b:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   29221:	0f 85 8f 00 00 00    	jne    292b6 <__dtoa+0xbf2>
   29227:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2922c:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   29230:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   29235:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   2923a:	66 0f 2f 45 b8       	comisd -0x48(%rbp),%xmm0
   2923f:	77 2e                	ja     2926f <__dtoa+0xbab>
   29241:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
   29246:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   2924b:	0f 8a 8d 00 00 00    	jp     292de <__dtoa+0xc1a>
   29251:	66 0f 2e 45 b8       	ucomisd -0x48(%rbp),%xmm0
   29256:	74 05                	je     2925d <__dtoa+0xb99>
   29258:	e9 81 00 00 00       	jmp    292de <__dtoa+0xc1a>
   2925d:	8b 45 90             	mov    -0x70(%rbp),%eax
   29260:	83 e0 01             	and    $0x1,%eax
   29263:	85 c0                	test   %eax,%eax
   29265:	74 77                	je     292de <__dtoa+0xc1a>
   29267:	eb 06                	jmp    2926f <__dtoa+0xbab>
   29269:	90                   	nop
   2926a:	eb 24                	jmp    29290 <__dtoa+0xbcc>
   2926c:	90                   	nop
   2926d:	eb 21                	jmp    29290 <__dtoa+0xbcc>
   2926f:	90                   	nop
   29270:	f3 0f 1e fa          	endbr64 
   29274:	eb 1a                	jmp    29290 <__dtoa+0xbcc>
   29276:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2927a:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2927e:	75 10                	jne    29290 <__dtoa+0xbcc>
   29280:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   29287:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2928b:	c6 00 30             	movb   $0x30,(%rax)
   2928e:	eb 10                	jmp    292a0 <__dtoa+0xbdc>
   29290:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   29295:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29299:	0f b6 00             	movzbl (%rax),%eax
   2929c:	3c 39                	cmp    $0x39,%al
   2929e:	74 d6                	je     29276 <__dtoa+0xbb2>
   292a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   292a4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   292a8:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   292ac:	0f b6 10             	movzbl (%rax),%edx
   292af:	83 c2 01             	add    $0x1,%edx
   292b2:	88 10                	mov    %dl,(%rax)
   292b4:	eb 28                	jmp    292de <__dtoa+0xc1a>
   292b6:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   292bd:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
   292c2:	f2 0f 10 05 be 89 00 	movsd  0x89be(%rip),%xmm0        # 31c88 <xdigs_upper.3344+0x48>
   292c9:	00 
   292ca:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   292ce:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   292d3:	e9 e1 fe ff ff       	jmp    291b9 <__dtoa+0xaf5>
   292d8:	90                   	nop
   292d9:	e9 45 0a 00 00       	jmp    29d23 <__dtoa+0x165f>
   292de:	90                   	nop
   292df:	e9 3f 0a 00 00       	jmp    29d23 <__dtoa+0x165f>
   292e4:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   292ea:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   292f0:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   292f6:	89 45 94             	mov    %eax,-0x6c(%rbp)
   292f9:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   29300:	00 
   29301:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29305:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   29309:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   29310:	74 62                	je     29374 <__dtoa+0xcb0>
   29312:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
   29319:	74 0d                	je     29328 <__dtoa+0xc64>
   2931b:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   29321:	05 33 04 00 00       	add    $0x433,%eax
   29326:	eb 0f                	jmp    29337 <__dtoa+0xc73>
   29328:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2932e:	ba 36 00 00 00       	mov    $0x36,%edx
   29333:	29 c2                	sub    %eax,%edx
   29335:	89 d0                	mov    %edx,%eax
   29337:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2933d:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29343:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   29349:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2934f:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   29355:	bf 01 00 00 00       	mov    $0x1,%edi
   2935a:	e8 ad 17 00 00       	call   2ab0c <__i2b_D2A>
   2935f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   29363:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   29368:	75 0a                	jne    29374 <__dtoa+0xcb0>
   2936a:	b8 00 00 00 00       	mov    $0x0,%eax
   2936f:	e9 f0 09 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29374:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2937b:	7e 46                	jle    293c3 <__dtoa+0xcff>
   2937d:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   29384:	7e 3d                	jle    293c3 <__dtoa+0xcff>
   29386:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   2938c:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
   29392:	0f 4e 85 6c ff ff ff 	cmovle -0x94(%rbp),%eax
   29399:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2939f:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   293a5:	29 85 3c ff ff ff    	sub    %eax,-0xc4(%rbp)
   293ab:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   293b1:	29 85 68 ff ff ff    	sub    %eax,-0x98(%rbp)
   293b7:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   293bd:	29 85 6c ff ff ff    	sub    %eax,-0x94(%rbp)
   293c3:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   293ca:	0f 8e df 00 00 00    	jle    294af <__dtoa+0xdeb>
   293d0:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   293d7:	0f 84 a9 00 00 00    	je     29486 <__dtoa+0xdc2>
   293dd:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
   293e1:	7e 62                	jle    29445 <__dtoa+0xd81>
   293e3:	8b 55 94             	mov    -0x6c(%rbp),%edx
   293e6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   293ea:	89 d6                	mov    %edx,%esi
   293ec:	48 89 c7             	mov    %rax,%rdi
   293ef:	e8 80 1a 00 00       	call   2ae74 <__pow5mult_D2A>
   293f4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   293f8:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   293fd:	75 0a                	jne    29409 <__dtoa+0xd45>
   293ff:	b8 00 00 00 00       	mov    $0x0,%eax
   29404:	e9 5b 09 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29409:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2940d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29411:	48 89 d6             	mov    %rdx,%rsi
   29414:	48 89 c7             	mov    %rax,%rdi
   29417:	e8 36 17 00 00       	call   2ab52 <__mult_D2A>
   2941c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   29420:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   29425:	75 0a                	jne    29431 <__dtoa+0xd6d>
   29427:	b8 00 00 00 00       	mov    $0x0,%eax
   2942c:	e9 33 09 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29431:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29435:	48 89 c7             	mov    %rax,%rdi
   29438:	e8 88 13 00 00       	call   2a7c5 <__Bfree_D2A>
   2943d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   29441:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29445:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2944b:	2b 45 94             	sub    -0x6c(%rbp),%eax
   2944e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   29454:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2945b:	74 52                	je     294af <__dtoa+0xdeb>
   2945d:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   29463:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29467:	89 d6                	mov    %edx,%esi
   29469:	48 89 c7             	mov    %rax,%rdi
   2946c:	e8 03 1a 00 00       	call   2ae74 <__pow5mult_D2A>
   29471:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29475:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2947a:	75 33                	jne    294af <__dtoa+0xdeb>
   2947c:	b8 00 00 00 00       	mov    $0x0,%eax
   29481:	e9 de 08 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29486:	8b 95 40 ff ff ff    	mov    -0xc0(%rbp),%edx
   2948c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29490:	89 d6                	mov    %edx,%esi
   29492:	48 89 c7             	mov    %rax,%rdi
   29495:	e8 da 19 00 00       	call   2ae74 <__pow5mult_D2A>
   2949a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2949e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   294a3:	75 0a                	jne    294af <__dtoa+0xdeb>
   294a5:	b8 00 00 00 00       	mov    $0x0,%eax
   294aa:	e9 b5 08 00 00       	jmp    29d64 <__dtoa+0x16a0>
   294af:	bf 01 00 00 00       	mov    $0x1,%edi
   294b4:	e8 53 16 00 00       	call   2ab0c <__i2b_D2A>
   294b9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   294bd:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   294c2:	75 0a                	jne    294ce <__dtoa+0xe0a>
   294c4:	b8 00 00 00 00       	mov    $0x0,%eax
   294c9:	e9 96 08 00 00       	jmp    29d64 <__dtoa+0x16a0>
   294ce:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   294d5:	7e 29                	jle    29500 <__dtoa+0xe3c>
   294d7:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
   294dd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   294e1:	89 d6                	mov    %edx,%esi
   294e3:	48 89 c7             	mov    %rax,%rdi
   294e6:	e8 89 19 00 00       	call   2ae74 <__pow5mult_D2A>
   294eb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   294ef:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   294f4:	75 0a                	jne    29500 <__dtoa+0xe3c>
   294f6:	b8 00 00 00 00       	mov    $0x0,%eax
   294fb:	e9 64 08 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29500:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
   29507:	00 00 00 
   2950a:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   29511:	7e 09                	jle    2951c <__dtoa+0xe58>
   29513:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2951a:	74 37                	je     29553 <__dtoa+0xe8f>
   2951c:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2951f:	85 c0                	test   %eax,%eax
   29521:	75 30                	jne    29553 <__dtoa+0xe8f>
   29523:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29526:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2952b:	85 c0                	test   %eax,%eax
   2952d:	75 24                	jne    29553 <__dtoa+0xe8f>
   2952f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29532:	25 00 00 e0 7f       	and    $0x7fe00000,%eax
   29537:	85 c0                	test   %eax,%eax
   29539:	74 18                	je     29553 <__dtoa+0xe8f>
   2953b:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
   29542:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
   29549:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%rbp)
   29550:	00 00 00 
   29553:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   2955a:	74 29                	je     29585 <__dtoa+0xec1>
   2955c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29560:	8b 40 14             	mov    0x14(%rax),%eax
   29563:	8d 50 ff             	lea    -0x1(%rax),%edx
   29566:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2956a:	48 63 d2             	movslq %edx,%rdx
   2956d:	48 83 c2 04          	add    $0x4,%rdx
   29571:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   29575:	89 c7                	mov    %eax,%edi
   29577:	e8 09 15 00 00       	call   2aa85 <__hi0bits_D2A>
   2957c:	ba 20 00 00 00       	mov    $0x20,%edx
   29581:	29 c2                	sub    %eax,%edx
   29583:	eb 05                	jmp    2958a <__dtoa+0xec6>
   29585:	ba 01 00 00 00       	mov    $0x1,%edx
   2958a:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   29590:	01 d0                	add    %edx,%eax
   29592:	83 e0 1f             	and    $0x1f,%eax
   29595:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2959b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   295a2:	74 11                	je     295b5 <__dtoa+0xef1>
   295a4:	b8 20 00 00 00       	mov    $0x20,%eax
   295a9:	2b 85 48 ff ff ff    	sub    -0xb8(%rbp),%eax
   295af:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   295b5:	83 bd 48 ff ff ff 04 	cmpl   $0x4,-0xb8(%rbp)
   295bc:	7e 2d                	jle    295eb <__dtoa+0xf27>
   295be:	83 ad 48 ff ff ff 04 	subl   $0x4,-0xb8(%rbp)
   295c5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   295cb:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   295d1:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   295d7:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   295dd:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   295e3:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   295e9:	eb 34                	jmp    2961f <__dtoa+0xf5b>
   295eb:	83 bd 48 ff ff ff 03 	cmpl   $0x3,-0xb8(%rbp)
   295f2:	7f 2b                	jg     2961f <__dtoa+0xf5b>
   295f4:	83 85 48 ff ff ff 1c 	addl   $0x1c,-0xb8(%rbp)
   295fb:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29601:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
   29607:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2960d:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   29613:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29619:	01 85 6c ff ff ff    	add    %eax,-0x94(%rbp)
   2961f:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   29626:	7e 29                	jle    29651 <__dtoa+0xf8d>
   29628:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   2962e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29632:	89 d6                	mov    %edx,%esi
   29634:	48 89 c7             	mov    %rax,%rdi
   29637:	e8 04 1a 00 00       	call   2b040 <__lshift_D2A>
   2963c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29640:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   29645:	75 0a                	jne    29651 <__dtoa+0xf8d>
   29647:	b8 00 00 00 00       	mov    $0x0,%eax
   2964c:	e9 13 07 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29651:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   29658:	7e 29                	jle    29683 <__dtoa+0xfbf>
   2965a:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   29660:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29664:	89 d6                	mov    %edx,%esi
   29666:	48 89 c7             	mov    %rax,%rdi
   29669:	e8 d2 19 00 00       	call   2b040 <__lshift_D2A>
   2966e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   29672:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   29677:	75 0a                	jne    29683 <__dtoa+0xfbf>
   29679:	b8 00 00 00 00       	mov    $0x0,%eax
   2967e:	e9 e1 06 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29683:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2968a:	0f 84 89 00 00 00    	je     29719 <__dtoa+0x1055>
   29690:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   29694:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29698:	48 89 d6             	mov    %rdx,%rsi
   2969b:	48 89 c7             	mov    %rax,%rdi
   2969e:	e8 2a 1b 00 00       	call   2b1cd <__cmp_D2A>
   296a3:	85 c0                	test   %eax,%eax
   296a5:	79 72                	jns    29719 <__dtoa+0x1055>
   296a7:	83 ad 5c ff ff ff 01 	subl   $0x1,-0xa4(%rbp)
   296ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   296b2:	ba 00 00 00 00       	mov    $0x0,%edx
   296b7:	be 0a 00 00 00       	mov    $0xa,%esi
   296bc:	48 89 c7             	mov    %rax,%rdi
   296bf:	e8 77 12 00 00       	call   2a93b <__multadd_D2A>
   296c4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   296c8:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   296cd:	75 0a                	jne    296d9 <__dtoa+0x1015>
   296cf:	b8 00 00 00 00       	mov    $0x0,%eax
   296d4:	e9 8b 06 00 00       	jmp    29d64 <__dtoa+0x16a0>
   296d9:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   296e0:	74 2b                	je     2970d <__dtoa+0x1049>
   296e2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   296e6:	ba 00 00 00 00       	mov    $0x0,%edx
   296eb:	be 0a 00 00 00       	mov    $0xa,%esi
   296f0:	48 89 c7             	mov    %rax,%rdi
   296f3:	e8 43 12 00 00       	call   2a93b <__multadd_D2A>
   296f8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   296fc:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   29701:	75 0a                	jne    2970d <__dtoa+0x1049>
   29703:	b8 00 00 00 00       	mov    $0x0,%eax
   29708:	e9 57 06 00 00       	jmp    29d64 <__dtoa+0x16a0>
   2970d:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
   29713:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
   29719:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   29720:	0f 8f 9c 00 00 00    	jg     297c2 <__dtoa+0x10fe>
   29726:	83 bd 24 ff ff ff 03 	cmpl   $0x3,-0xdc(%rbp)
   2972d:	74 0d                	je     2973c <__dtoa+0x1078>
   2972f:	83 bd 24 ff ff ff 05 	cmpl   $0x5,-0xdc(%rbp)
   29736:	0f 85 86 00 00 00    	jne    297c2 <__dtoa+0x10fe>
   2973c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29740:	ba 00 00 00 00       	mov    $0x0,%edx
   29745:	be 05 00 00 00       	mov    $0x5,%esi
   2974a:	48 89 c7             	mov    %rax,%rdi
   2974d:	e8 e9 11 00 00       	call   2a93b <__multadd_D2A>
   29752:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   29756:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2975b:	75 0a                	jne    29767 <__dtoa+0x10a3>
   2975d:	b8 00 00 00 00       	mov    $0x0,%eax
   29762:	e9 fd 05 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29767:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2976e:	78 1f                	js     2978f <__dtoa+0x10cb>
   29770:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   29774:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29778:	48 89 d6             	mov    %rdx,%rsi
   2977b:	48 89 c7             	mov    %rax,%rdi
   2977e:	e8 4a 1a 00 00       	call   2b1cd <__cmp_D2A>
   29783:	85 c0                	test   %eax,%eax
   29785:	7f 1f                	jg     297a6 <__dtoa+0x10e2>
   29787:	eb 06                	jmp    2978f <__dtoa+0x10cb>
   29789:	90                   	nop
   2978a:	eb 04                	jmp    29790 <__dtoa+0x10cc>
   2978c:	90                   	nop
   2978d:	eb 01                	jmp    29790 <__dtoa+0x10cc>
   2978f:	90                   	nop
   29790:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   29796:	f7 d0                	not    %eax
   29798:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2979e:	e9 3e 05 00 00       	jmp    29ce1 <__dtoa+0x161d>
   297a3:	90                   	nop
   297a4:	eb 01                	jmp    297a7 <__dtoa+0x10e3>
   297a6:	90                   	nop
   297a7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   297ab:	48 8d 50 01          	lea    0x1(%rax),%rdx
   297af:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   297b3:	c6 00 31             	movb   $0x31,(%rax)
   297b6:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   297bd:	e9 1f 05 00 00       	jmp    29ce1 <__dtoa+0x161d>
   297c2:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   297c9:	0f 84 b3 03 00 00    	je     29b82 <__dtoa+0x14be>
   297cf:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   297d6:	7e 29                	jle    29801 <__dtoa+0x113d>
   297d8:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   297de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   297e2:	89 d6                	mov    %edx,%esi
   297e4:	48 89 c7             	mov    %rax,%rdi
   297e7:	e8 54 18 00 00       	call   2b040 <__lshift_D2A>
   297ec:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   297f0:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   297f5:	75 0a                	jne    29801 <__dtoa+0x113d>
   297f7:	b8 00 00 00 00       	mov    $0x0,%eax
   297fc:	e9 63 05 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29801:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29805:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   29809:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   29810:	74 79                	je     2988b <__dtoa+0x11c7>
   29812:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29816:	8b 40 08             	mov    0x8(%rax),%eax
   29819:	89 c7                	mov    %eax,%edi
   2981b:	e8 5f 0e 00 00       	call   2a67f <__Balloc_D2A>
   29820:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   29824:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   29829:	75 0a                	jne    29835 <__dtoa+0x1171>
   2982b:	b8 00 00 00 00       	mov    $0x0,%eax
   29830:	e9 2f 05 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29835:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29839:	8b 40 14             	mov    0x14(%rax),%eax
   2983c:	48 98                	cltq   
   2983e:	48 83 c0 02          	add    $0x2,%rax
   29842:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   29849:	00 
   2984a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2984e:	48 8d 48 10          	lea    0x10(%rax),%rcx
   29852:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29856:	48 83 c0 10          	add    $0x10,%rax
   2985a:	48 89 ce             	mov    %rcx,%rsi
   2985d:	48 89 c7             	mov    %rax,%rdi
   29860:	e8 1a 76 ff ff       	call   20e7f <memcpy>
   29865:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29869:	be 01 00 00 00       	mov    $0x1,%esi
   2986e:	48 89 c7             	mov    %rax,%rdi
   29871:	e8 ca 17 00 00       	call   2b040 <__lshift_D2A>
   29876:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2987a:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2987f:	75 0a                	jne    2988b <__dtoa+0x11c7>
   29881:	b8 00 00 00 00       	mov    $0x0,%eax
   29886:	e9 d9 04 00 00       	jmp    29d64 <__dtoa+0x16a0>
   2988b:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   29892:	00 00 00 
   29895:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   29899:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2989d:	48 89 d6             	mov    %rdx,%rsi
   298a0:	48 89 c7             	mov    %rax,%rdi
   298a3:	e8 1b eb ff ff       	call   283c3 <__quorem_D2A>
   298a8:	83 c0 30             	add    $0x30,%eax
   298ab:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   298b1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   298b5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   298b9:	48 89 d6             	mov    %rdx,%rsi
   298bc:	48 89 c7             	mov    %rax,%rdi
   298bf:	e8 09 19 00 00       	call   2b1cd <__cmp_D2A>
   298c4:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   298ca:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   298ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   298d2:	48 89 d6             	mov    %rdx,%rsi
   298d5:	48 89 c7             	mov    %rax,%rdi
   298d8:	e8 c4 19 00 00       	call   2b2a1 <__diff_D2A>
   298dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   298e1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   298e6:	75 0a                	jne    298f2 <__dtoa+0x122e>
   298e8:	b8 00 00 00 00       	mov    $0x0,%eax
   298ed:	e9 72 04 00 00       	jmp    29d64 <__dtoa+0x16a0>
   298f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   298f6:	8b 40 10             	mov    0x10(%rax),%eax
   298f9:	85 c0                	test   %eax,%eax
   298fb:	75 15                	jne    29912 <__dtoa+0x124e>
   298fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   29901:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29905:	48 89 d6             	mov    %rdx,%rsi
   29908:	48 89 c7             	mov    %rax,%rdi
   2990b:	e8 bd 18 00 00       	call   2b1cd <__cmp_D2A>
   29910:	eb 05                	jmp    29917 <__dtoa+0x1253>
   29912:	b8 01 00 00 00       	mov    $0x1,%eax
   29917:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2991a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2991e:	48 89 c7             	mov    %rax,%rdi
   29921:	e8 9f 0e 00 00       	call   2a7c5 <__Bfree_D2A>
   29926:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2992a:	75 49                	jne    29975 <__dtoa+0x12b1>
   2992c:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   29933:	74 40                	je     29975 <__dtoa+0x12b1>
   29935:	8b 45 e0             	mov    -0x20(%rbp),%eax
   29938:	83 e0 01             	and    $0x1,%eax
   2993b:	85 c0                	test   %eax,%eax
   2993d:	75 36                	jne    29975 <__dtoa+0x12b1>
   2993f:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   29946:	0f 84 10 01 00 00    	je     29a5c <__dtoa+0x1398>
   2994c:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   29953:	7e 07                	jle    2995c <__dtoa+0x1298>
   29955:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
   2995c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29960:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29964:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29968:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   2996e:	88 10                	mov    %dl,(%rax)
   29970:	e9 6c 03 00 00       	jmp    29ce1 <__dtoa+0x161d>
   29975:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2997c:	78 28                	js     299a6 <__dtoa+0x12e2>
   2997e:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   29985:	0f 85 c0 00 00 00    	jne    29a4b <__dtoa+0x1387>
   2998b:	83 bd 24 ff ff ff 01 	cmpl   $0x1,-0xdc(%rbp)
   29992:	0f 84 b3 00 00 00    	je     29a4b <__dtoa+0x1387>
   29998:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2999b:	83 e0 01             	and    $0x1,%eax
   2999e:	85 c0                	test   %eax,%eax
   299a0:	0f 85 a5 00 00 00    	jne    29a4b <__dtoa+0x1387>
   299a6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   299aa:	8b 40 18             	mov    0x18(%rax),%eax
   299ad:	85 c0                	test   %eax,%eax
   299af:	75 0c                	jne    299bd <__dtoa+0x12f9>
   299b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   299b5:	8b 40 14             	mov    0x14(%rax),%eax
   299b8:	83 f8 01             	cmp    $0x1,%eax
   299bb:	7e 71                	jle    29a2e <__dtoa+0x136a>
   299bd:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   299c1:	7e 6e                	jle    29a31 <__dtoa+0x136d>
   299c3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   299c7:	be 01 00 00 00       	mov    $0x1,%esi
   299cc:	48 89 c7             	mov    %rax,%rdi
   299cf:	e8 6c 16 00 00       	call   2b040 <__lshift_D2A>
   299d4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   299d8:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   299dd:	75 0a                	jne    299e9 <__dtoa+0x1325>
   299df:	b8 00 00 00 00       	mov    $0x0,%eax
   299e4:	e9 7b 03 00 00       	jmp    29d64 <__dtoa+0x16a0>
   299e9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   299ed:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   299f1:	48 89 d6             	mov    %rdx,%rsi
   299f4:	48 89 c7             	mov    %rax,%rdi
   299f7:	e8 d1 17 00 00       	call   2b1cd <__cmp_D2A>
   299fc:	89 45 8c             	mov    %eax,-0x74(%rbp)
   299ff:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   29a03:	7f 13                	jg     29a18 <__dtoa+0x1354>
   29a05:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   29a09:	75 26                	jne    29a31 <__dtoa+0x136d>
   29a0b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   29a11:	83 e0 01             	and    $0x1,%eax
   29a14:	85 c0                	test   %eax,%eax
   29a16:	74 19                	je     29a31 <__dtoa+0x136d>
   29a18:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   29a1e:	8d 50 01             	lea    0x1(%rax),%edx
   29a21:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%rbp)
   29a27:	83 f8 39             	cmp    $0x39,%eax
   29a2a:	74 33                	je     29a5f <__dtoa+0x139b>
   29a2c:	eb 03                	jmp    29a31 <__dtoa+0x136d>
   29a2e:	90                   	nop
   29a2f:	eb 01                	jmp    29a32 <__dtoa+0x136e>
   29a31:	90                   	nop
   29a32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29a36:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29a3a:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29a3e:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   29a44:	88 10                	mov    %dl,(%rax)
   29a46:	e9 96 02 00 00       	jmp    29ce1 <__dtoa+0x161d>
   29a4b:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   29a4f:	7e 41                	jle    29a92 <__dtoa+0x13ce>
   29a51:	83 bd 44 ff ff ff 39 	cmpl   $0x39,-0xbc(%rbp)
   29a58:	75 1a                	jne    29a74 <__dtoa+0x13b0>
   29a5a:	eb 04                	jmp    29a60 <__dtoa+0x139c>
   29a5c:	90                   	nop
   29a5d:	eb 01                	jmp    29a60 <__dtoa+0x139c>
   29a5f:	90                   	nop
   29a60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29a64:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29a68:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29a6c:	c6 00 39             	movb   $0x39,(%rax)
   29a6f:	e9 0b 02 00 00       	jmp    29c7f <__dtoa+0x15bb>
   29a74:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   29a7a:	89 c1                	mov    %eax,%ecx
   29a7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29a80:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29a84:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29a88:	8d 51 01             	lea    0x1(%rcx),%edx
   29a8b:	88 10                	mov    %dl,(%rax)
   29a8d:	e9 4f 02 00 00       	jmp    29ce1 <__dtoa+0x161d>
   29a92:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29a96:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29a9a:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29a9e:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   29aa4:	88 10                	mov    %dl,(%rax)
   29aa6:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29aac:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   29ab2:	0f 84 64 01 00 00    	je     29c1c <__dtoa+0x1558>
   29ab8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29abc:	ba 00 00 00 00       	mov    $0x0,%edx
   29ac1:	be 0a 00 00 00       	mov    $0xa,%esi
   29ac6:	48 89 c7             	mov    %rax,%rdi
   29ac9:	e8 6d 0e 00 00       	call   2a93b <__multadd_D2A>
   29ace:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29ad2:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   29ad7:	75 0a                	jne    29ae3 <__dtoa+0x141f>
   29ad9:	b8 00 00 00 00       	mov    $0x0,%eax
   29ade:	e9 81 02 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29ae3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29ae7:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   29aeb:	75 33                	jne    29b20 <__dtoa+0x145c>
   29aed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29af1:	ba 00 00 00 00       	mov    $0x0,%edx
   29af6:	be 0a 00 00 00       	mov    $0xa,%esi
   29afb:	48 89 c7             	mov    %rax,%rdi
   29afe:	e8 38 0e 00 00       	call   2a93b <__multadd_D2A>
   29b03:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   29b07:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29b0b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   29b0f:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   29b14:	75 60                	jne    29b76 <__dtoa+0x14b2>
   29b16:	b8 00 00 00 00       	mov    $0x0,%eax
   29b1b:	e9 44 02 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29b20:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29b24:	ba 00 00 00 00       	mov    $0x0,%edx
   29b29:	be 0a 00 00 00       	mov    $0xa,%esi
   29b2e:	48 89 c7             	mov    %rax,%rdi
   29b31:	e8 05 0e 00 00       	call   2a93b <__multadd_D2A>
   29b36:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   29b3a:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   29b3f:	75 0a                	jne    29b4b <__dtoa+0x1487>
   29b41:	b8 00 00 00 00       	mov    $0x0,%eax
   29b46:	e9 19 02 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29b4b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29b4f:	ba 00 00 00 00       	mov    $0x0,%edx
   29b54:	be 0a 00 00 00       	mov    $0xa,%esi
   29b59:	48 89 c7             	mov    %rax,%rdi
   29b5c:	e8 da 0d 00 00       	call   2a93b <__multadd_D2A>
   29b61:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   29b65:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   29b6a:	75 0a                	jne    29b76 <__dtoa+0x14b2>
   29b6c:	b8 00 00 00 00       	mov    $0x0,%eax
   29b71:	e9 ee 01 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29b76:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   29b7d:	e9 13 fd ff ff       	jmp    29895 <__dtoa+0x11d1>
   29b82:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   29b89:	00 00 00 
   29b8c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   29b90:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29b94:	48 89 d6             	mov    %rdx,%rsi
   29b97:	48 89 c7             	mov    %rax,%rdi
   29b9a:	e8 24 e8 ff ff       	call   283c3 <__quorem_D2A>
   29b9f:	83 c0 30             	add    $0x30,%eax
   29ba2:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
   29ba8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29bac:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29bb0:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29bb4:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
   29bba:	88 10                	mov    %dl,(%rax)
   29bbc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29bc0:	8b 40 18             	mov    0x18(%rax),%eax
   29bc3:	85 c0                	test   %eax,%eax
   29bc5:	75 10                	jne    29bd7 <__dtoa+0x1513>
   29bc7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29bcb:	8b 40 14             	mov    0x14(%rax),%eax
   29bce:	83 f8 01             	cmp    $0x1,%eax
   29bd1:	0f 8e 09 01 00 00    	jle    29ce0 <__dtoa+0x161c>
   29bd7:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   29bdd:	3b 85 50 ff ff ff    	cmp    -0xb0(%rbp),%eax
   29be3:	7d 3a                	jge    29c1f <__dtoa+0x155b>
   29be5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29be9:	ba 00 00 00 00       	mov    $0x0,%edx
   29bee:	be 0a 00 00 00       	mov    $0xa,%esi
   29bf3:	48 89 c7             	mov    %rax,%rdi
   29bf6:	e8 40 0d 00 00       	call   2a93b <__multadd_D2A>
   29bfb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29bff:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   29c04:	75 0a                	jne    29c10 <__dtoa+0x154c>
   29c06:	b8 00 00 00 00       	mov    $0x0,%eax
   29c0b:	e9 54 01 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29c10:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
   29c17:	e9 70 ff ff ff       	jmp    29b8c <__dtoa+0x14c8>
   29c1c:	90                   	nop
   29c1d:	eb 01                	jmp    29c20 <__dtoa+0x155c>
   29c1f:	90                   	nop
   29c20:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29c24:	be 01 00 00 00       	mov    $0x1,%esi
   29c29:	48 89 c7             	mov    %rax,%rdi
   29c2c:	e8 0f 14 00 00       	call   2b040 <__lshift_D2A>
   29c31:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   29c35:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   29c3a:	75 0a                	jne    29c46 <__dtoa+0x1582>
   29c3c:	b8 00 00 00 00       	mov    $0x0,%eax
   29c41:	e9 1e 01 00 00       	jmp    29d64 <__dtoa+0x16a0>
   29c46:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   29c4a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29c4e:	48 89 d6             	mov    %rdx,%rsi
   29c51:	48 89 c7             	mov    %rax,%rdi
   29c54:	e8 74 15 00 00       	call   2b1cd <__cmp_D2A>
   29c59:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   29c5f:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   29c66:	7f 16                	jg     29c7e <__dtoa+0x15ba>
   29c68:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   29c6f:	75 58                	jne    29cc9 <__dtoa+0x1605>
   29c71:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   29c77:	83 e0 01             	and    $0x1,%eax
   29c7a:	85 c0                	test   %eax,%eax
   29c7c:	74 4b                	je     29cc9 <__dtoa+0x1605>
   29c7e:	90                   	nop
   29c7f:	eb 22                	jmp    29ca3 <__dtoa+0x15df>
   29c81:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29c85:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   29c89:	75 18                	jne    29ca3 <__dtoa+0x15df>
   29c8b:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   29c92:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29c96:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29c9a:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29c9e:	c6 00 31             	movb   $0x31,(%rax)
   29ca1:	eb 3e                	jmp    29ce1 <__dtoa+0x161d>
   29ca3:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   29ca8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29cac:	0f b6 00             	movzbl (%rax),%eax
   29caf:	3c 39                	cmp    $0x39,%al
   29cb1:	74 ce                	je     29c81 <__dtoa+0x15bd>
   29cb3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29cb7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   29cbb:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29cbf:	0f b6 10             	movzbl (%rax),%edx
   29cc2:	83 c2 01             	add    $0x1,%edx
   29cc5:	88 10                	mov    %dl,(%rax)
   29cc7:	eb 18                	jmp    29ce1 <__dtoa+0x161d>
   29cc9:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
   29cce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29cd2:	0f b6 00             	movzbl (%rax),%eax
   29cd5:	3c 30                	cmp    $0x30,%al
   29cd7:	74 f0                	je     29cc9 <__dtoa+0x1605>
   29cd9:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   29cde:	eb 01                	jmp    29ce1 <__dtoa+0x161d>
   29ce0:	90                   	nop
   29ce1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29ce5:	48 89 c7             	mov    %rax,%rdi
   29ce8:	e8 d8 0a 00 00       	call   2a7c5 <__Bfree_D2A>
   29ced:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   29cf2:	74 2e                	je     29d22 <__dtoa+0x165e>
   29cf4:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   29cf9:	74 16                	je     29d11 <__dtoa+0x164d>
   29cfb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29cff:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   29d03:	74 0c                	je     29d11 <__dtoa+0x164d>
   29d05:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   29d09:	48 89 c7             	mov    %rax,%rdi
   29d0c:	e8 b4 0a 00 00       	call   2a7c5 <__Bfree_D2A>
   29d11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   29d15:	48 89 c7             	mov    %rax,%rdi
   29d18:	e8 a8 0a 00 00       	call   2a7c5 <__Bfree_D2A>
   29d1d:	eb 04                	jmp    29d23 <__dtoa+0x165f>
   29d1f:	90                   	nop
   29d20:	eb 01                	jmp    29d23 <__dtoa+0x165f>
   29d22:	90                   	nop
   29d23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   29d27:	48 89 c7             	mov    %rax,%rdi
   29d2a:	e8 96 0a 00 00       	call   2a7c5 <__Bfree_D2A>
   29d2f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29d33:	c6 00 00             	movb   $0x0,(%rax)
   29d36:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   29d3c:	8d 50 01             	lea    0x1(%rax),%edx
   29d3f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   29d46:	89 10                	mov    %edx,(%rax)
   29d48:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)
   29d4f:	00 
   29d50:	74 0e                	je     29d60 <__dtoa+0x169c>
   29d52:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   29d59:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   29d5d:	48 89 10             	mov    %rdx,(%rax)
   29d60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   29d64:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   29d68:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   29d6f:	00 00 
   29d71:	74 05                	je     29d78 <__dtoa+0x16b4>
   29d73:	e8 0f 75 ff ff       	call   21287 <__stack_chk_fail>
   29d78:	c9                   	leave  
   29d79:	c3                   	ret    

0000000000029d7a <roundup>:
   29d7a:	f3 0f 1e fa          	endbr64 
   29d7e:	55                   	push   %rbp
   29d7f:	48 89 e5             	mov    %rsp,%rbp
   29d82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   29d86:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   29d89:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29d8c:	48 98                	cltq   
   29d8e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   29d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29d96:	48 01 d0             	add    %rdx,%rax
   29d99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   29d9d:	eb 24                	jmp    29dc3 <roundup+0x49>
   29d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29da3:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   29da7:	75 0e                	jne    29db7 <roundup+0x3d>
   29da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29dad:	c6 00 01             	movb   $0x1,(%rax)
   29db0:	b8 01 00 00 00       	mov    $0x1,%eax
   29db5:	eb 2c                	jmp    29de3 <roundup+0x69>
   29db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29dbb:	c6 00 00             	movb   $0x0,(%rax)
   29dbe:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   29dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29dc7:	0f b6 00             	movzbl (%rax),%eax
   29dca:	3c 0f                	cmp    $0xf,%al
   29dcc:	74 d1                	je     29d9f <roundup+0x25>
   29dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29dd2:	0f b6 00             	movzbl (%rax),%eax
   29dd5:	8d 50 01             	lea    0x1(%rax),%edx
   29dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   29ddc:	88 10                	mov    %dl,(%rax)
   29dde:	b8 00 00 00 00       	mov    $0x0,%eax
   29de3:	5d                   	pop    %rbp
   29de4:	c3                   	ret    

0000000000029de5 <dorounding>:
   29de5:	f3 0f 1e fa          	endbr64 
   29de9:	55                   	push   %rbp
   29dea:	48 89 e5             	mov    %rsp,%rbp
   29ded:	48 83 ec 28          	sub    $0x28,%rsp
   29df1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   29df5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   29df8:	89 55 e0             	mov    %edx,-0x20(%rbp)
   29dfb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
   29dff:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   29e06:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29e09:	48 63 d0             	movslq %eax,%rdx
   29e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29e10:	48 01 d0             	add    %rdx,%rax
   29e13:	0f b6 00             	movzbl (%rax),%eax
   29e16:	3c 08                	cmp    $0x8,%al
   29e18:	7f 31                	jg     29e4b <dorounding+0x66>
   29e1a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29e1d:	48 63 d0             	movslq %eax,%rdx
   29e20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29e24:	48 01 d0             	add    %rdx,%rax
   29e27:	0f b6 00             	movzbl (%rax),%eax
   29e2a:	3c 08                	cmp    $0x8,%al
   29e2c:	75 31                	jne    29e5f <dorounding+0x7a>
   29e2e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29e31:	83 c0 01             	add    $0x1,%eax
   29e34:	48 63 d0             	movslq %eax,%rdx
   29e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29e3b:	48 01 d0             	add    %rdx,%rax
   29e3e:	0f b6 00             	movzbl (%rax),%eax
   29e41:	0f be c0             	movsbl %al,%eax
   29e44:	83 e0 01             	and    $0x1,%eax
   29e47:	85 c0                	test   %eax,%eax
   29e49:	74 14                	je     29e5f <dorounding+0x7a>
   29e4b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   29e4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   29e52:	89 d6                	mov    %edx,%esi
   29e54:	48 89 c7             	mov    %rax,%rdi
   29e57:	e8 1e ff ff ff       	call   29d7a <roundup>
   29e5c:	89 45 fc             	mov    %eax,-0x4(%rbp)
   29e5f:	90                   	nop
   29e60:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   29e64:	74 0f                	je     29e75 <dorounding+0x90>
   29e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e6a:	8b 00                	mov    (%rax),%eax
   29e6c:	8d 50 04             	lea    0x4(%rax),%edx
   29e6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29e73:	89 10                	mov    %edx,(%rax)
   29e75:	90                   	nop
   29e76:	c9                   	leave  
   29e77:	c3                   	ret    

0000000000029e78 <__hdtoa>:
   29e78:	f3 0f 1e fa          	endbr64 
   29e7c:	55                   	push   %rbp
   29e7d:	48 89 e5             	mov    %rsp,%rbp
   29e80:	48 83 ec 50          	sub    $0x50,%rsp
   29e84:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   29e89:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   29e8d:	89 75 cc             	mov    %esi,-0x34(%rbp)
   29e90:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   29e94:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   29e98:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
   29e9c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   29ea0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   29ea4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   29ea8:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   29eac:	c0 e8 07             	shr    $0x7,%al
   29eaf:	0f b6 d0             	movzbl %al,%edx
   29eb2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   29eb6:	89 10                	mov    %edx,(%rax)
   29eb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   29ebc:	66 48 0f 6e c0       	movq   %rax,%xmm0
   29ec1:	e8 a5 19 00 00       	call   2b86b <__fpclassify>
   29ec6:	83 f8 04             	cmp    $0x4,%eax
   29ec9:	0f 87 f3 00 00 00    	ja     29fc2 <__hdtoa+0x14a>
   29ecf:	89 c0                	mov    %eax,%eax
   29ed1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   29ed8:	00 
   29ed9:	48 8d 05 20 7e 00 00 	lea    0x7e20(%rip),%rax        # 31d00 <xdigs_upper.3344+0xc0>
   29ee0:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   29ee3:	48 98                	cltq   
   29ee5:	48 8d 15 14 7e 00 00 	lea    0x7e14(%rip),%rdx        # 31d00 <xdigs_upper.3344+0xc0>
   29eec:	48 01 d0             	add    %rdx,%rax
   29eef:	3e ff e0             	notrack jmp *%rax
   29ef2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   29ef6:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   29efa:	66 c1 e8 04          	shr    $0x4,%ax
   29efe:	66 25 ff 07          	and    $0x7ff,%ax
   29f02:	0f b7 c0             	movzwl %ax,%eax
   29f05:	8d 90 02 fc ff ff    	lea    -0x3fe(%rax),%edx
   29f0b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29f0f:	89 10                	mov    %edx,(%rax)
   29f11:	e9 b1 00 00 00       	jmp    29fc7 <__hdtoa+0x14f>
   29f16:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29f1a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   29f20:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f24:	ba 01 00 00 00       	mov    $0x1,%edx
   29f29:	48 89 c6             	mov    %rax,%rsi
   29f2c:	48 8d 3d 9d 7d 00 00 	lea    0x7d9d(%rip),%rdi        # 31cd0 <xdigs_upper.3344+0x90>
   29f33:	e8 c4 e3 ff ff       	call   282fc <__nrv_alloc_D2A>
   29f38:	e9 8b 02 00 00       	jmp    2a1c8 <__hdtoa+0x350>
   29f3d:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
   29f42:	f2 0f 10 05 96 7d 00 	movsd  0x7d96(%rip),%xmm0        # 31ce0 <xdigs_upper.3344+0xa0>
   29f49:	00 
   29f4a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   29f4e:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
   29f53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   29f57:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   29f5b:	66 c1 e8 04          	shr    $0x4,%ax
   29f5f:	66 25 ff 07          	and    $0x7ff,%ax
   29f63:	0f b7 c0             	movzwl %ax,%eax
   29f66:	8d 90 00 fa ff ff    	lea    -0x600(%rax),%edx
   29f6c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29f70:	89 10                	mov    %edx,(%rax)
   29f72:	eb 53                	jmp    29fc7 <__hdtoa+0x14f>
   29f74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29f78:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   29f7e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29f82:	ba 08 00 00 00       	mov    $0x8,%edx
   29f87:	48 89 c6             	mov    %rax,%rsi
   29f8a:	48 8d 3d 41 7d 00 00 	lea    0x7d41(%rip),%rdi        # 31cd2 <xdigs_upper.3344+0x92>
   29f91:	e8 66 e3 ff ff       	call   282fc <__nrv_alloc_D2A>
   29f96:	e9 2d 02 00 00       	jmp    2a1c8 <__hdtoa+0x350>
   29f9b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   29f9f:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   29fa5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   29fa9:	ba 03 00 00 00       	mov    $0x3,%edx
   29fae:	48 89 c6             	mov    %rax,%rsi
   29fb1:	48 8d 3d 23 7d 00 00 	lea    0x7d23(%rip),%rdi        # 31cdb <xdigs_upper.3344+0x9b>
   29fb8:	e8 3f e3 ff ff       	call   282fc <__nrv_alloc_D2A>
   29fbd:	e9 06 02 00 00       	jmp    2a1c8 <__hdtoa+0x350>
   29fc2:	e8 64 55 00 00       	call   2f52b <abort>
   29fc7:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   29fcb:	75 07                	jne    29fd4 <__hdtoa+0x15c>
   29fcd:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
   29fd4:	8b 05 4e 7d 00 00    	mov    0x7d4e(%rip),%eax        # 31d28 <sigfigs.2602>
   29fda:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   29fdd:	0f 4d 45 cc          	cmovge -0x34(%rbp),%eax
   29fe1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   29fe4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   29fe7:	89 c7                	mov    %eax,%edi
   29fe9:	e8 a6 e2 ff ff       	call   28294 <__rv_alloc_D2A>
   29fee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   29ff2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   29ff7:	75 0a                	jne    2a003 <__hdtoa+0x18b>
   29ff9:	b8 00 00 00 00       	mov    $0x0,%eax
   29ffe:	e9 c5 01 00 00       	jmp    2a1c8 <__hdtoa+0x350>
   2a003:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a006:	48 98                	cltq   
   2a008:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a00c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a010:	48 01 d0             	add    %rdx,%rax
   2a013:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a017:	eb 0c                	jmp    2a025 <__hdtoa+0x1ad>
   2a019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a01d:	c6 00 00             	movb   $0x0,(%rax)
   2a020:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a025:	8b 05 fd 7c 00 00    	mov    0x7cfd(%rip),%eax        # 31d28 <sigfigs.2602>
   2a02b:	48 98                	cltq   
   2a02d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a035:	48 01 d0             	add    %rdx,%rax
   2a038:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2a03c:	77 db                	ja     2a019 <__hdtoa+0x1a1>
   2a03e:	eb 27                	jmp    2a067 <__hdtoa+0x1ef>
   2a040:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a044:	8b 00                	mov    (%rax),%eax
   2a046:	83 e0 0f             	and    $0xf,%eax
   2a049:	89 c2                	mov    %eax,%edx
   2a04b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a04f:	88 10                	mov    %dl,(%rax)
   2a051:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a055:	8b 00                	mov    (%rax),%eax
   2a057:	c1 e8 04             	shr    $0x4,%eax
   2a05a:	89 c2                	mov    %eax,%edx
   2a05c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a060:	89 10                	mov    %edx,(%rax)
   2a062:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a067:	8b 05 bb 7c 00 00    	mov    0x7cbb(%rip),%eax        # 31d28 <sigfigs.2602>
   2a06d:	48 98                	cltq   
   2a06f:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   2a073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a077:	48 01 d0             	add    %rdx,%rax
   2a07a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2a07e:	76 58                	jbe    2a0d8 <__hdtoa+0x260>
   2a080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a084:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a088:	77 b6                	ja     2a040 <__hdtoa+0x1c8>
   2a08a:	eb 4c                	jmp    2a0d8 <__hdtoa+0x260>
   2a08c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a090:	8b 40 04             	mov    0x4(%rax),%eax
   2a093:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2a098:	83 e0 0f             	and    $0xf,%eax
   2a09b:	89 c2                	mov    %eax,%edx
   2a09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a0a1:	88 10                	mov    %dl,(%rax)
   2a0a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a0a7:	8b 40 04             	mov    0x4(%rax),%eax
   2a0aa:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2a0af:	c1 f8 04             	sar    $0x4,%eax
   2a0b2:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2a0b7:	89 c2                	mov    %eax,%edx
   2a0b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a0bd:	89 d1                	mov    %edx,%ecx
   2a0bf:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   2a0c5:	8b 50 04             	mov    0x4(%rax),%edx
   2a0c8:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
   2a0ce:	09 ca                	or     %ecx,%edx
   2a0d0:	89 50 04             	mov    %edx,0x4(%rax)
   2a0d3:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a0d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a0dc:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a0e0:	77 aa                	ja     2a08c <__hdtoa+0x214>
   2a0e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a0e6:	8b 40 04             	mov    0x4(%rax),%eax
   2a0e9:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2a0ee:	83 c8 01             	or     $0x1,%eax
   2a0f1:	89 c2                	mov    %eax,%edx
   2a0f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a0f7:	88 10                	mov    %dl,(%rax)
   2a0f9:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2a0fd:	79 26                	jns    2a125 <__hdtoa+0x2ad>
   2a0ff:	8b 05 23 7c 00 00    	mov    0x7c23(%rip),%eax        # 31d28 <sigfigs.2602>
   2a105:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2a108:	eb 04                	jmp    2a10e <__hdtoa+0x296>
   2a10a:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
   2a10e:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2a111:	83 e8 01             	sub    $0x1,%eax
   2a114:	48 63 d0             	movslq %eax,%rdx
   2a117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a11b:	48 01 d0             	add    %rdx,%rax
   2a11e:	0f b6 00             	movzbl (%rax),%eax
   2a121:	84 c0                	test   %al,%al
   2a123:	74 e5                	je     2a10a <__hdtoa+0x292>
   2a125:	8b 05 fd 7b 00 00    	mov    0x7bfd(%rip),%eax        # 31d28 <sigfigs.2602>
   2a12b:	39 45 cc             	cmp    %eax,-0x34(%rbp)
   2a12e:	7d 35                	jge    2a165 <__hdtoa+0x2ed>
   2a130:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2a133:	48 63 d0             	movslq %eax,%rdx
   2a136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a13a:	48 01 d0             	add    %rdx,%rax
   2a13d:	0f b6 00             	movzbl (%rax),%eax
   2a140:	84 c0                	test   %al,%al
   2a142:	74 21                	je     2a165 <__hdtoa+0x2ed>
   2a144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a148:	0f b6 40 07          	movzbl 0x7(%rax),%eax
   2a14c:	c0 e8 07             	shr    $0x7,%al
   2a14f:	0f b6 d0             	movzbl %al,%edx
   2a152:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   2a156:	8b 75 cc             	mov    -0x34(%rbp),%esi
   2a159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a15d:	48 89 c7             	mov    %rax,%rdi
   2a160:	e8 80 fc ff ff       	call   29de5 <dorounding>
   2a165:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2a168:	48 63 d0             	movslq %eax,%rdx
   2a16b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a16f:	48 01 d0             	add    %rdx,%rax
   2a172:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a176:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2a17b:	74 0b                	je     2a188 <__hdtoa+0x310>
   2a17d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2a181:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a185:	48 89 10             	mov    %rdx,(%rax)
   2a188:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a18c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a190:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2a194:	c6 00 00             	movb   $0x0,(%rax)
   2a197:	eb 21                	jmp    2a1ba <__hdtoa+0x342>
   2a199:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a19d:	0f b6 00             	movzbl (%rax),%eax
   2a1a0:	0f be c0             	movsbl %al,%eax
   2a1a3:	89 c2                	mov    %eax,%edx
   2a1a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2a1a9:	48 01 d0             	add    %rdx,%rax
   2a1ac:	0f b6 10             	movzbl (%rax),%edx
   2a1af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a1b3:	88 10                	mov    %dl,(%rax)
   2a1b5:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a1ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a1be:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a1c2:	73 d5                	jae    2a199 <__hdtoa+0x321>
   2a1c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a1c8:	c9                   	leave  
   2a1c9:	c3                   	ret    

000000000002a1ca <__hldtoa>:
   2a1ca:	f3 0f 1e fa          	endbr64 
   2a1ce:	55                   	push   %rbp
   2a1cf:	48 89 e5             	mov    %rsp,%rbp
   2a1d2:	48 83 ec 50          	sub    $0x50,%rsp
   2a1d6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2a1da:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2a1dd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2a1e1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2a1e5:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2a1e9:	48 8d 45 10          	lea    0x10(%rbp),%rax
   2a1ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a1f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a1f5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2a1f9:	c0 e8 07             	shr    $0x7,%al
   2a1fc:	0f b6 d0             	movzbl %al,%edx
   2a1ff:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2a203:	89 10                	mov    %edx,(%rax)
   2a205:	db 6d 10             	fldt   0x10(%rbp)
   2a208:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   2a20d:	db 3c 24             	fstpt  (%rsp)
   2a210:	e8 5e 17 00 00       	call   2b973 <__fpclassifyl>
   2a215:	48 83 c4 10          	add    $0x10,%rsp
   2a219:	83 f8 04             	cmp    $0x4,%eax
   2a21c:	0f 87 e3 00 00 00    	ja     2a305 <__hldtoa+0x13b>
   2a222:	89 c0                	mov    %eax,%eax
   2a224:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2a22b:	00 
   2a22c:	48 8d 05 e1 7a 00 00 	lea    0x7ae1(%rip),%rax        # 31d14 <xdigs_upper.3344+0xd4>
   2a233:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2a236:	48 98                	cltq   
   2a238:	48 8d 15 d5 7a 00 00 	lea    0x7ad5(%rip),%rdx        # 31d14 <xdigs_upper.3344+0xd4>
   2a23f:	48 01 d0             	add    %rdx,%rax
   2a242:	3e ff e0             	notrack jmp *%rax
   2a245:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a249:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2a24d:	66 25 ff 7f          	and    $0x7fff,%ax
   2a251:	0f b7 c0             	movzwl %ax,%eax
   2a254:	8d 90 ff bf ff ff    	lea    -0x4001(%rax),%edx
   2a25a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a25e:	89 10                	mov    %edx,(%rax)
   2a260:	e9 a5 00 00 00       	jmp    2a30a <__hldtoa+0x140>
   2a265:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a269:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2a26f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a273:	ba 01 00 00 00       	mov    $0x1,%edx
   2a278:	48 89 c6             	mov    %rax,%rsi
   2a27b:	48 8d 3d 4e 7a 00 00 	lea    0x7a4e(%rip),%rdi        # 31cd0 <xdigs_upper.3344+0x90>
   2a282:	e8 75 e0 ff ff       	call   282fc <__nrv_alloc_D2A>
   2a287:	e9 58 02 00 00       	jmp    2a4e4 <__hldtoa+0x31a>
   2a28c:	db 6d 10             	fldt   0x10(%rbp)
   2a28f:	db 2d 5b 7a 00 00    	fldt   0x7a5b(%rip)        # 31cf0 <xdigs_upper.3344+0xb0>
   2a295:	de c9                	fmulp  %st,%st(1)
   2a297:	db 7d 10             	fstpt  0x10(%rbp)
   2a29a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a29e:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2a2a2:	66 25 ff 7f          	and    $0x7fff,%ax
   2a2a6:	0f b7 c0             	movzwl %ax,%eax
   2a2a9:	8d 90 fd bd ff ff    	lea    -0x4203(%rax),%edx
   2a2af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a2b3:	89 10                	mov    %edx,(%rax)
   2a2b5:	eb 53                	jmp    2a30a <__hldtoa+0x140>
   2a2b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a2bb:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2a2c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a2c5:	ba 08 00 00 00       	mov    $0x8,%edx
   2a2ca:	48 89 c6             	mov    %rax,%rsi
   2a2cd:	48 8d 3d fe 79 00 00 	lea    0x79fe(%rip),%rdi        # 31cd2 <xdigs_upper.3344+0x92>
   2a2d4:	e8 23 e0 ff ff       	call   282fc <__nrv_alloc_D2A>
   2a2d9:	e9 06 02 00 00       	jmp    2a4e4 <__hldtoa+0x31a>
   2a2de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a2e2:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2a2e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a2ec:	ba 03 00 00 00       	mov    $0x3,%edx
   2a2f1:	48 89 c6             	mov    %rax,%rsi
   2a2f4:	48 8d 3d e0 79 00 00 	lea    0x79e0(%rip),%rdi        # 31cdb <xdigs_upper.3344+0x9b>
   2a2fb:	e8 fc df ff ff       	call   282fc <__nrv_alloc_D2A>
   2a300:	e9 df 01 00 00       	jmp    2a4e4 <__hldtoa+0x31a>
   2a305:	e8 21 52 00 00       	call   2f52b <abort>
   2a30a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a30e:	75 07                	jne    2a317 <__hldtoa+0x14d>
   2a310:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
   2a317:	8b 05 0f 7a 00 00    	mov    0x7a0f(%rip),%eax        # 31d2c <sigfigs.2637>
   2a31d:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   2a320:	0f 4d 45 d4          	cmovge -0x2c(%rbp),%eax
   2a324:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2a327:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a32a:	89 c7                	mov    %eax,%edi
   2a32c:	e8 63 df ff ff       	call   28294 <__rv_alloc_D2A>
   2a331:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a335:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a33a:	75 0a                	jne    2a346 <__hldtoa+0x17c>
   2a33c:	b8 00 00 00 00       	mov    $0x0,%eax
   2a341:	e9 9e 01 00 00       	jmp    2a4e4 <__hldtoa+0x31a>
   2a346:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a349:	48 98                	cltq   
   2a34b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a34f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a353:	48 01 d0             	add    %rdx,%rax
   2a356:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a35a:	eb 0c                	jmp    2a368 <__hldtoa+0x19e>
   2a35c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a360:	c6 00 00             	movb   $0x0,(%rax)
   2a363:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a368:	8b 05 be 79 00 00    	mov    0x79be(%rip),%eax        # 31d2c <sigfigs.2637>
   2a36e:	48 98                	cltq   
   2a370:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a378:	48 01 d0             	add    %rdx,%rax
   2a37b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2a37f:	77 db                	ja     2a35c <__hldtoa+0x192>
   2a381:	eb 27                	jmp    2a3aa <__hldtoa+0x1e0>
   2a383:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a387:	8b 00                	mov    (%rax),%eax
   2a389:	83 e0 0f             	and    $0xf,%eax
   2a38c:	89 c2                	mov    %eax,%edx
   2a38e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a392:	88 10                	mov    %dl,(%rax)
   2a394:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a398:	8b 00                	mov    (%rax),%eax
   2a39a:	c1 e8 04             	shr    $0x4,%eax
   2a39d:	89 c2                	mov    %eax,%edx
   2a39f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a3a3:	89 10                	mov    %edx,(%rax)
   2a3a5:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a3aa:	8b 05 7c 79 00 00    	mov    0x797c(%rip),%eax        # 31d2c <sigfigs.2637>
   2a3b0:	48 98                	cltq   
   2a3b2:	48 8d 50 f7          	lea    -0x9(%rax),%rdx
   2a3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a3ba:	48 01 d0             	add    %rdx,%rax
   2a3bd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   2a3c1:	76 36                	jbe    2a3f9 <__hldtoa+0x22f>
   2a3c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a3c7:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a3cb:	77 b6                	ja     2a383 <__hldtoa+0x1b9>
   2a3cd:	eb 2a                	jmp    2a3f9 <__hldtoa+0x22f>
   2a3cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a3d3:	8b 40 04             	mov    0x4(%rax),%eax
   2a3d6:	83 e0 0f             	and    $0xf,%eax
   2a3d9:	89 c2                	mov    %eax,%edx
   2a3db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a3df:	88 10                	mov    %dl,(%rax)
   2a3e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a3e5:	8b 40 04             	mov    0x4(%rax),%eax
   2a3e8:	c1 e8 04             	shr    $0x4,%eax
   2a3eb:	89 c2                	mov    %eax,%edx
   2a3ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a3f1:	89 50 04             	mov    %edx,0x4(%rax)
   2a3f4:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a3f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a3fd:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a401:	77 cc                	ja     2a3cf <__hldtoa+0x205>
   2a403:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a407:	8b 40 04             	mov    0x4(%rax),%eax
   2a40a:	83 c8 08             	or     $0x8,%eax
   2a40d:	89 c2                	mov    %eax,%edx
   2a40f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a413:	88 10                	mov    %dl,(%rax)
   2a415:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2a419:	79 26                	jns    2a441 <__hldtoa+0x277>
   2a41b:	8b 05 0b 79 00 00    	mov    0x790b(%rip),%eax        # 31d2c <sigfigs.2637>
   2a421:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2a424:	eb 04                	jmp    2a42a <__hldtoa+0x260>
   2a426:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
   2a42a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a42d:	83 e8 01             	sub    $0x1,%eax
   2a430:	48 63 d0             	movslq %eax,%rdx
   2a433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a437:	48 01 d0             	add    %rdx,%rax
   2a43a:	0f b6 00             	movzbl (%rax),%eax
   2a43d:	84 c0                	test   %al,%al
   2a43f:	74 e5                	je     2a426 <__hldtoa+0x25c>
   2a441:	8b 05 e5 78 00 00    	mov    0x78e5(%rip),%eax        # 31d2c <sigfigs.2637>
   2a447:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
   2a44a:	7d 35                	jge    2a481 <__hldtoa+0x2b7>
   2a44c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a44f:	48 63 d0             	movslq %eax,%rdx
   2a452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a456:	48 01 d0             	add    %rdx,%rax
   2a459:	0f b6 00             	movzbl (%rax),%eax
   2a45c:	84 c0                	test   %al,%al
   2a45e:	74 21                	je     2a481 <__hldtoa+0x2b7>
   2a460:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a464:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2a468:	c0 e8 07             	shr    $0x7,%al
   2a46b:	0f b6 d0             	movzbl %al,%edx
   2a46e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   2a472:	8b 75 d4             	mov    -0x2c(%rbp),%esi
   2a475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a479:	48 89 c7             	mov    %rax,%rdi
   2a47c:	e8 64 f9 ff ff       	call   29de5 <dorounding>
   2a481:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2a484:	48 63 d0             	movslq %eax,%rdx
   2a487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a48b:	48 01 d0             	add    %rdx,%rax
   2a48e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2a492:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2a497:	74 0b                	je     2a4a4 <__hldtoa+0x2da>
   2a499:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a49d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2a4a1:	48 89 10             	mov    %rdx,(%rax)
   2a4a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a4a8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   2a4ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2a4b0:	c6 00 00             	movb   $0x0,(%rax)
   2a4b3:	eb 21                	jmp    2a4d6 <__hldtoa+0x30c>
   2a4b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a4b9:	0f b6 00             	movzbl (%rax),%eax
   2a4bc:	0f be c0             	movsbl %al,%eax
   2a4bf:	89 c2                	mov    %eax,%edx
   2a4c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2a4c5:	48 01 d0             	add    %rdx,%rax
   2a4c8:	0f b6 10             	movzbl (%rax),%edx
   2a4cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a4cf:	88 10                	mov    %dl,(%rax)
   2a4d1:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
   2a4d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a4da:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2a4de:	73 d5                	jae    2a4b5 <__hldtoa+0x2eb>
   2a4e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a4e4:	c9                   	leave  
   2a4e5:	c3                   	ret    

000000000002a4e6 <__ldtoa>:
   2a4e6:	f3 0f 1e fa          	endbr64 
   2a4ea:	55                   	push   %rbp
   2a4eb:	48 89 e5             	mov    %rsp,%rbp
   2a4ee:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   2a4f2:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2a4f6:	89 75 a4             	mov    %esi,-0x5c(%rbp)
   2a4f9:	89 55 a0             	mov    %edx,-0x60(%rbp)
   2a4fc:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   2a500:	4c 89 45 90          	mov    %r8,-0x70(%rbp)
   2a504:	4c 89 4d 88          	mov    %r9,-0x78(%rbp)
   2a508:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a50f:	00 00 
   2a511:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a515:	31 c0                	xor    %eax,%eax
   2a517:	c7 45 d0 40 00 00 00 	movl   $0x40,-0x30(%rbp)
   2a51e:	c7 45 d4 c3 bf ff ff 	movl   $0xffffbfc3,-0x2c(%rbp)
   2a525:	c7 45 d8 c0 3f 00 00 	movl   $0x3fc0,-0x28(%rbp)
   2a52c:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
   2a533:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   2a53a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2a53e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2a542:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2a546:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2a54a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a54e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2a552:	c0 e8 07             	shr    $0x7,%al
   2a555:	0f b6 d0             	movzbl %al,%edx
   2a558:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2a55c:	89 10                	mov    %edx,(%rax)
   2a55e:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2a561:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2a564:	d1 f8                	sar    %eax
   2a566:	89 c1                	mov    %eax,%ecx
   2a568:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a56c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   2a570:	c0 e8 07             	shr    $0x7,%al
   2a573:	0f b6 c0             	movzbl %al,%eax
   2a576:	21 c8                	and    %ecx,%eax
   2a578:	31 d0                	xor    %edx,%eax
   2a57a:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2a57d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a581:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2a585:	66 25 ff 7f          	and    $0x7fff,%ax
   2a589:	0f b7 c0             	movzwl %ax,%eax
   2a58c:	2d 3e 40 00 00       	sub    $0x403e,%eax
   2a591:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2a594:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a598:	8b 00                	mov    (%rax),%eax
   2a59a:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2a59d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2a5a1:	8b 40 04             	mov    0x4(%rax),%eax
   2a5a4:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2a5a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2a5ab:	db 28                	fldt   (%rax)
   2a5ad:	48 8d 64 24 f0       	lea    -0x10(%rsp),%rsp
   2a5b2:	db 3c 24             	fstpt  (%rsp)
   2a5b5:	e8 b9 13 00 00       	call   2b973 <__fpclassifyl>
   2a5ba:	48 83 c4 10          	add    $0x10,%rsp
   2a5be:	83 f8 04             	cmp    $0x4,%eax
   2a5c1:	77 54                	ja     2a617 <__ldtoa+0x131>
   2a5c3:	89 c0                	mov    %eax,%eax
   2a5c5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2a5cc:	00 
   2a5cd:	48 8d 05 5c 77 00 00 	lea    0x775c(%rip),%rax        # 31d30 <sigfigs.2637+0x4>
   2a5d4:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2a5d7:	48 98                	cltq   
   2a5d9:	48 8d 15 50 77 00 00 	lea    0x7750(%rip),%rdx        # 31d30 <sigfigs.2637+0x4>
   2a5e0:	48 01 d0             	add    %rdx,%rax
   2a5e3:	3e ff e0             	notrack jmp *%rax
   2a5e6:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
   2a5ed:	eb 2d                	jmp    2a61c <__ldtoa+0x136>
   2a5ef:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   2a5f6:	eb 24                	jmp    2a61c <__ldtoa+0x136>
   2a5f8:	c7 45 b0 02 00 00 00 	movl   $0x2,-0x50(%rbp)
   2a5ff:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
   2a603:	eb 17                	jmp    2a61c <__ldtoa+0x136>
   2a605:	c7 45 b0 03 00 00 00 	movl   $0x3,-0x50(%rbp)
   2a60c:	eb 0e                	jmp    2a61c <__ldtoa+0x136>
   2a60e:	c7 45 b0 04 00 00 00 	movl   $0x4,-0x50(%rbp)
   2a615:	eb 05                	jmp    2a61c <__ldtoa+0x136>
   2a617:	e8 0f 4f 00 00       	call   2f52b <abort>
   2a61c:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
   2a620:	8b 7d a4             	mov    -0x5c(%rbp),%edi
   2a623:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   2a627:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2a62b:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   2a62e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2a632:	ff 75 88             	push   -0x78(%rbp)
   2a635:	ff 75 98             	push   -0x68(%rbp)
   2a638:	45 89 c1             	mov    %r8d,%r9d
   2a63b:	41 89 f8             	mov    %edi,%r8d
   2a63e:	48 89 c7             	mov    %rax,%rdi
   2a641:	e8 c8 1d 00 00       	call   2c40e <__gdtoa>
   2a646:	48 83 c4 10          	add    $0x10,%rsp
   2a64a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2a64e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2a652:	8b 00                	mov    (%rax),%eax
   2a654:	3d 00 80 ff ff       	cmp    $0xffff8000,%eax
   2a659:	75 0a                	jne    2a665 <__ldtoa+0x17f>
   2a65b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2a65f:	c7 00 ff ff ff 7f    	movl   $0x7fffffff,(%rax)
   2a665:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a669:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2a66d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2a674:	00 00 
   2a676:	74 05                	je     2a67d <__ldtoa+0x197>
   2a678:	e8 0a 6c ff ff       	call   21287 <__stack_chk_fail>
   2a67d:	c9                   	leave  
   2a67e:	c3                   	ret    

000000000002a67f <__Balloc_D2A>:
   2a67f:	f3 0f 1e fa          	endbr64 
   2a683:	55                   	push   %rbp
   2a684:	48 89 e5             	mov    %rsp,%rbp
   2a687:	48 83 ec 20          	sub    $0x20,%rsp
   2a68b:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2a68e:	48 8d 3d d3 26 04 00 	lea    0x426d3(%rip),%rdi        # 6cd68 <__dtoa_locks>
   2a695:	e8 92 ca fe ff       	call   1712c <sgx_spin_lock>
   2a69a:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   2a69e:	7f 48                	jg     2a6e8 <__Balloc_D2A+0x69>
   2a6a0:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a6a3:	48 98                	cltq   
   2a6a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2a6ac:	00 
   2a6ad:	48 8d 05 4c 1d 04 00 	lea    0x41d4c(%rip),%rax        # 6c400 <freelist>
   2a6b4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   2a6b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a6bc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a6c1:	74 25                	je     2a6e8 <__Balloc_D2A+0x69>
   2a6c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a6c7:	48 8b 00             	mov    (%rax),%rax
   2a6ca:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2a6cd:	48 63 d2             	movslq %edx,%rdx
   2a6d0:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   2a6d7:	00 
   2a6d8:	48 8d 15 21 1d 04 00 	lea    0x41d21(%rip),%rdx        # 6c400 <freelist>
   2a6df:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   2a6e3:	e9 b2 00 00 00       	jmp    2a79a <__Balloc_D2A+0x11b>
   2a6e8:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a6eb:	ba 01 00 00 00       	mov    $0x1,%edx
   2a6f0:	89 c1                	mov    %eax,%ecx
   2a6f2:	d3 e2                	shl    %cl,%edx
   2a6f4:	89 d0                	mov    %edx,%eax
   2a6f6:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2a6f9:	8b 45 f0             	mov    -0x10(%rbp),%eax
   2a6fc:	83 e8 01             	sub    $0x1,%eax
   2a6ff:	48 98                	cltq   
   2a701:	48 83 c0 0a          	add    $0xa,%rax
   2a705:	48 c1 e0 02          	shl    $0x2,%rax
   2a709:	48 83 e8 01          	sub    $0x1,%rax
   2a70d:	48 c1 e8 03          	shr    $0x3,%rax
   2a711:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2a714:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
   2a718:	7f 4b                	jg     2a765 <__Balloc_D2A+0xe6>
   2a71a:	48 8b 05 2f ea 00 00 	mov    0xea2f(%rip),%rax        # 39150 <pmem_next>
   2a721:	48 8d 15 38 1d 04 00 	lea    0x41d38(%rip),%rdx        # 6c460 <private_mem>
   2a728:	48 29 d0             	sub    %rdx,%rax
   2a72b:	48 c1 f8 03          	sar    $0x3,%rax
   2a72f:	48 89 c2             	mov    %rax,%rdx
   2a732:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2a735:	48 01 d0             	add    %rdx,%rax
   2a738:	48 3d 20 01 00 00    	cmp    $0x120,%rax
   2a73e:	77 25                	ja     2a765 <__Balloc_D2A+0xe6>
   2a740:	48 8b 05 09 ea 00 00 	mov    0xea09(%rip),%rax        # 39150 <pmem_next>
   2a747:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a74b:	48 8b 05 fe e9 00 00 	mov    0xe9fe(%rip),%rax        # 39150 <pmem_next>
   2a752:	8b 55 f4             	mov    -0xc(%rbp),%edx
   2a755:	48 c1 e2 03          	shl    $0x3,%rdx
   2a759:	48 01 d0             	add    %rdx,%rax
   2a75c:	48 89 05 ed e9 00 00 	mov    %rax,0xe9ed(%rip)        # 39150 <pmem_next>
   2a763:	eb 21                	jmp    2a786 <__Balloc_D2A+0x107>
   2a765:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2a768:	48 c1 e0 03          	shl    $0x3,%rax
   2a76c:	48 89 c7             	mov    %rax,%rdi
   2a76f:	e8 43 2d ff ff       	call   1d4b7 <dlmalloc>
   2a774:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2a778:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a77d:	75 07                	jne    2a786 <__Balloc_D2A+0x107>
   2a77f:	b8 00 00 00 00       	mov    $0x0,%eax
   2a784:	eb 3d                	jmp    2a7c3 <__Balloc_D2A+0x144>
   2a786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a78a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2a78d:	89 50 08             	mov    %edx,0x8(%rax)
   2a790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a794:	8b 55 f0             	mov    -0x10(%rbp),%edx
   2a797:	89 50 0c             	mov    %edx,0xc(%rax)
   2a79a:	48 8d 3d c7 25 04 00 	lea    0x425c7(%rip),%rdi        # 6cd68 <__dtoa_locks>
   2a7a1:	e8 21 ca fe ff       	call   171c7 <sgx_spin_unlock>
   2a7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7aa:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   2a7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7b5:	8b 50 14             	mov    0x14(%rax),%edx
   2a7b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7bc:	89 50 10             	mov    %edx,0x10(%rax)
   2a7bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7c3:	c9                   	leave  
   2a7c4:	c3                   	ret    

000000000002a7c5 <__Bfree_D2A>:
   2a7c5:	f3 0f 1e fa          	endbr64 
   2a7c9:	55                   	push   %rbp
   2a7ca:	48 89 e5             	mov    %rsp,%rbp
   2a7cd:	48 83 ec 10          	sub    $0x10,%rsp
   2a7d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2a7d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2a7da:	74 75                	je     2a851 <__Bfree_D2A+0x8c>
   2a7dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7e0:	8b 40 08             	mov    0x8(%rax),%eax
   2a7e3:	83 f8 09             	cmp    $0x9,%eax
   2a7e6:	7e 0e                	jle    2a7f6 <__Bfree_D2A+0x31>
   2a7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a7ec:	48 89 c7             	mov    %rax,%rdi
   2a7ef:	e8 be 37 ff ff       	call   1dfb2 <dlfree>
   2a7f4:	eb 5b                	jmp    2a851 <__Bfree_D2A+0x8c>
   2a7f6:	48 8d 3d 6b 25 04 00 	lea    0x4256b(%rip),%rdi        # 6cd68 <__dtoa_locks>
   2a7fd:	e8 2a c9 fe ff       	call   1712c <sgx_spin_lock>
   2a802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a806:	8b 40 08             	mov    0x8(%rax),%eax
   2a809:	48 98                	cltq   
   2a80b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2a812:	00 
   2a813:	48 8d 05 e6 1b 04 00 	lea    0x41be6(%rip),%rax        # 6c400 <freelist>
   2a81a:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
   2a81e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a822:	48 89 10             	mov    %rdx,(%rax)
   2a825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a829:	8b 40 08             	mov    0x8(%rax),%eax
   2a82c:	48 98                	cltq   
   2a82e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   2a835:	00 
   2a836:	48 8d 15 c3 1b 04 00 	lea    0x41bc3(%rip),%rdx        # 6c400 <freelist>
   2a83d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2a841:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   2a845:	48 8d 3d 1c 25 04 00 	lea    0x4251c(%rip),%rdi        # 6cd68 <__dtoa_locks>
   2a84c:	e8 76 c9 fe ff       	call   171c7 <sgx_spin_unlock>
   2a851:	90                   	nop
   2a852:	c9                   	leave  
   2a853:	c3                   	ret    

000000000002a854 <__lo0bits_D2A>:
   2a854:	f3 0f 1e fa          	endbr64 
   2a858:	55                   	push   %rbp
   2a859:	48 89 e5             	mov    %rsp,%rbp
   2a85c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2a860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a864:	8b 00                	mov    (%rax),%eax
   2a866:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2a869:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a86c:	83 e0 07             	and    $0x7,%eax
   2a86f:	85 c0                	test   %eax,%eax
   2a871:	74 4a                	je     2a8bd <__lo0bits_D2A+0x69>
   2a873:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a876:	83 e0 01             	and    $0x1,%eax
   2a879:	85 c0                	test   %eax,%eax
   2a87b:	74 0a                	je     2a887 <__lo0bits_D2A+0x33>
   2a87d:	b8 00 00 00 00       	mov    $0x0,%eax
   2a882:	e9 b2 00 00 00       	jmp    2a939 <__lo0bits_D2A+0xe5>
   2a887:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a88a:	83 e0 02             	and    $0x2,%eax
   2a88d:	85 c0                	test   %eax,%eax
   2a88f:	74 17                	je     2a8a8 <__lo0bits_D2A+0x54>
   2a891:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a894:	d1 e8                	shr    %eax
   2a896:	89 c2                	mov    %eax,%edx
   2a898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a89c:	89 10                	mov    %edx,(%rax)
   2a89e:	b8 01 00 00 00       	mov    $0x1,%eax
   2a8a3:	e9 91 00 00 00       	jmp    2a939 <__lo0bits_D2A+0xe5>
   2a8a8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a8ab:	c1 e8 02             	shr    $0x2,%eax
   2a8ae:	89 c2                	mov    %eax,%edx
   2a8b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a8b4:	89 10                	mov    %edx,(%rax)
   2a8b6:	b8 02 00 00 00       	mov    $0x2,%eax
   2a8bb:	eb 7c                	jmp    2a939 <__lo0bits_D2A+0xe5>
   2a8bd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   2a8c4:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a8c7:	0f b7 c0             	movzwl %ax,%eax
   2a8ca:	85 c0                	test   %eax,%eax
   2a8cc:	75 0b                	jne    2a8d9 <__lo0bits_D2A+0x85>
   2a8ce:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
   2a8d5:	c1 6d fc 10          	shrl   $0x10,-0x4(%rbp)
   2a8d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a8dc:	0f b6 c0             	movzbl %al,%eax
   2a8df:	85 c0                	test   %eax,%eax
   2a8e1:	75 08                	jne    2a8eb <__lo0bits_D2A+0x97>
   2a8e3:	83 45 f8 08          	addl   $0x8,-0x8(%rbp)
   2a8e7:	c1 6d fc 08          	shrl   $0x8,-0x4(%rbp)
   2a8eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a8ee:	83 e0 0f             	and    $0xf,%eax
   2a8f1:	85 c0                	test   %eax,%eax
   2a8f3:	75 08                	jne    2a8fd <__lo0bits_D2A+0xa9>
   2a8f5:	83 45 f8 04          	addl   $0x4,-0x8(%rbp)
   2a8f9:	c1 6d fc 04          	shrl   $0x4,-0x4(%rbp)
   2a8fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a900:	83 e0 03             	and    $0x3,%eax
   2a903:	85 c0                	test   %eax,%eax
   2a905:	75 08                	jne    2a90f <__lo0bits_D2A+0xbb>
   2a907:	83 45 f8 02          	addl   $0x2,-0x8(%rbp)
   2a90b:	c1 6d fc 02          	shrl   $0x2,-0x4(%rbp)
   2a90f:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2a912:	83 e0 01             	and    $0x1,%eax
   2a915:	85 c0                	test   %eax,%eax
   2a917:	75 14                	jne    2a92d <__lo0bits_D2A+0xd9>
   2a919:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
   2a91d:	d1 6d fc             	shrl   -0x4(%rbp)
   2a920:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   2a924:	75 07                	jne    2a92d <__lo0bits_D2A+0xd9>
   2a926:	b8 20 00 00 00       	mov    $0x20,%eax
   2a92b:	eb 0c                	jmp    2a939 <__lo0bits_D2A+0xe5>
   2a92d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2a931:	8b 55 fc             	mov    -0x4(%rbp),%edx
   2a934:	89 10                	mov    %edx,(%rax)
   2a936:	8b 45 f8             	mov    -0x8(%rbp),%eax
   2a939:	5d                   	pop    %rbp
   2a93a:	c3                   	ret    

000000000002a93b <__multadd_D2A>:
   2a93b:	f3 0f 1e fa          	endbr64 
   2a93f:	55                   	push   %rbp
   2a940:	48 89 e5             	mov    %rsp,%rbp
   2a943:	48 83 ec 40          	sub    $0x40,%rsp
   2a947:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2a94b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   2a94e:	89 55 c0             	mov    %edx,-0x40(%rbp)
   2a951:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a955:	8b 40 14             	mov    0x14(%rax),%eax
   2a958:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2a95b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a95f:	48 83 c0 18          	add    $0x18,%rax
   2a963:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2a967:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   2a96e:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2a971:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2a974:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a978:	8b 00                	mov    (%rax),%eax
   2a97a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2a97d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a980:	0f b7 d0             	movzwl %ax,%edx
   2a983:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2a986:	0f af d0             	imul   %eax,%edx
   2a989:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2a98c:	01 d0                	add    %edx,%eax
   2a98e:	89 45 e8             	mov    %eax,-0x18(%rbp)
   2a991:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2a994:	c1 e8 10             	shr    $0x10,%eax
   2a997:	89 c2                	mov    %eax,%edx
   2a999:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2a99c:	0f af c2             	imul   %edx,%eax
   2a99f:	8b 55 e8             	mov    -0x18(%rbp),%edx
   2a9a2:	c1 ea 10             	shr    $0x10,%edx
   2a9a5:	01 d0                	add    %edx,%eax
   2a9a7:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2a9aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a9ad:	c1 e8 10             	shr    $0x10,%eax
   2a9b0:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2a9b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2a9b6:	c1 e0 10             	shl    $0x10,%eax
   2a9b9:	89 c6                	mov    %eax,%esi
   2a9bb:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2a9be:	0f b7 c8             	movzwl %ax,%ecx
   2a9c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2a9c5:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2a9c9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   2a9cd:	8d 14 0e             	lea    (%rsi,%rcx,1),%edx
   2a9d0:	89 10                	mov    %edx,(%rax)
   2a9d2:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
   2a9d6:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2a9d9:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   2a9dc:	7c 96                	jl     2a974 <__multadd_D2A+0x39>
   2a9de:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   2a9e2:	0f 84 97 00 00 00    	je     2aa7f <__multadd_D2A+0x144>
   2a9e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a9ec:	8b 40 0c             	mov    0xc(%rax),%eax
   2a9ef:	39 45 e0             	cmp    %eax,-0x20(%rbp)
   2a9f2:	7c 67                	jl     2aa5b <__multadd_D2A+0x120>
   2a9f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2a9f8:	8b 40 08             	mov    0x8(%rax),%eax
   2a9fb:	83 c0 01             	add    $0x1,%eax
   2a9fe:	89 c7                	mov    %eax,%edi
   2aa00:	e8 7a fc ff ff       	call   2a67f <__Balloc_D2A>
   2aa05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2aa09:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2aa0e:	75 07                	jne    2aa17 <__multadd_D2A+0xdc>
   2aa10:	b8 00 00 00 00       	mov    $0x0,%eax
   2aa15:	eb 6c                	jmp    2aa83 <__multadd_D2A+0x148>
   2aa17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa1b:	8b 40 14             	mov    0x14(%rax),%eax
   2aa1e:	48 98                	cltq   
   2aa20:	48 83 c0 02          	add    $0x2,%rax
   2aa24:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2aa2b:	00 
   2aa2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa30:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2aa34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2aa38:	48 83 c0 10          	add    $0x10,%rax
   2aa3c:	48 89 ce             	mov    %rcx,%rsi
   2aa3f:	48 89 c7             	mov    %rax,%rdi
   2aa42:	e8 38 64 ff ff       	call   20e7f <memcpy>
   2aa47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa4b:	48 89 c7             	mov    %rax,%rdi
   2aa4e:	e8 72 fd ff ff       	call   2a7c5 <__Bfree_D2A>
   2aa53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2aa57:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2aa5b:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2aa5e:	8d 50 01             	lea    0x1(%rax),%edx
   2aa61:	89 55 e0             	mov    %edx,-0x20(%rbp)
   2aa64:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2aa68:	48 98                	cltq   
   2aa6a:	48 8d 48 04          	lea    0x4(%rax),%rcx
   2aa6e:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2aa71:	89 44 8a 08          	mov    %eax,0x8(%rdx,%rcx,4)
   2aa75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa79:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2aa7c:	89 50 14             	mov    %edx,0x14(%rax)
   2aa7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2aa83:	c9                   	leave  
   2aa84:	c3                   	ret    

000000000002aa85 <__hi0bits_D2A>:
   2aa85:	f3 0f 1e fa          	endbr64 
   2aa89:	55                   	push   %rbp
   2aa8a:	48 89 e5             	mov    %rsp,%rbp
   2aa8d:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2aa90:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   2aa97:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aa9a:	66 b8 00 00          	mov    $0x0,%ax
   2aa9e:	85 c0                	test   %eax,%eax
   2aaa0:	75 0b                	jne    2aaad <__hi0bits_D2A+0x28>
   2aaa2:	c7 45 fc 10 00 00 00 	movl   $0x10,-0x4(%rbp)
   2aaa9:	c1 65 ec 10          	shll   $0x10,-0x14(%rbp)
   2aaad:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aab0:	25 00 00 00 ff       	and    $0xff000000,%eax
   2aab5:	85 c0                	test   %eax,%eax
   2aab7:	75 08                	jne    2aac1 <__hi0bits_D2A+0x3c>
   2aab9:	83 45 fc 08          	addl   $0x8,-0x4(%rbp)
   2aabd:	c1 65 ec 08          	shll   $0x8,-0x14(%rbp)
   2aac1:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aac4:	25 00 00 00 f0       	and    $0xf0000000,%eax
   2aac9:	85 c0                	test   %eax,%eax
   2aacb:	75 08                	jne    2aad5 <__hi0bits_D2A+0x50>
   2aacd:	83 45 fc 04          	addl   $0x4,-0x4(%rbp)
   2aad1:	c1 65 ec 04          	shll   $0x4,-0x14(%rbp)
   2aad5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aad8:	25 00 00 00 c0       	and    $0xc0000000,%eax
   2aadd:	85 c0                	test   %eax,%eax
   2aadf:	75 08                	jne    2aae9 <__hi0bits_D2A+0x64>
   2aae1:	83 45 fc 02          	addl   $0x2,-0x4(%rbp)
   2aae5:	c1 65 ec 02          	shll   $0x2,-0x14(%rbp)
   2aae9:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aaec:	85 c0                	test   %eax,%eax
   2aaee:	78 17                	js     2ab07 <__hi0bits_D2A+0x82>
   2aaf0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   2aaf4:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2aaf7:	25 00 00 00 40       	and    $0x40000000,%eax
   2aafc:	85 c0                	test   %eax,%eax
   2aafe:	75 07                	jne    2ab07 <__hi0bits_D2A+0x82>
   2ab00:	b8 20 00 00 00       	mov    $0x20,%eax
   2ab05:	eb 03                	jmp    2ab0a <__hi0bits_D2A+0x85>
   2ab07:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2ab0a:	5d                   	pop    %rbp
   2ab0b:	c3                   	ret    

000000000002ab0c <__i2b_D2A>:
   2ab0c:	f3 0f 1e fa          	endbr64 
   2ab10:	55                   	push   %rbp
   2ab11:	48 89 e5             	mov    %rsp,%rbp
   2ab14:	48 83 ec 20          	sub    $0x20,%rsp
   2ab18:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2ab1b:	bf 01 00 00 00       	mov    $0x1,%edi
   2ab20:	e8 5a fb ff ff       	call   2a67f <__Balloc_D2A>
   2ab25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ab29:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2ab2e:	75 07                	jne    2ab37 <__i2b_D2A+0x2b>
   2ab30:	b8 00 00 00 00       	mov    $0x0,%eax
   2ab35:	eb 19                	jmp    2ab50 <__i2b_D2A+0x44>
   2ab37:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2ab3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ab3e:	89 50 18             	mov    %edx,0x18(%rax)
   2ab41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ab45:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2ab4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ab50:	c9                   	leave  
   2ab51:	c3                   	ret    

000000000002ab52 <__mult_D2A>:
   2ab52:	f3 0f 1e fa          	endbr64 
   2ab56:	55                   	push   %rbp
   2ab57:	48 89 e5             	mov    %rsp,%rbp
   2ab5a:	48 83 ec 70          	sub    $0x70,%rsp
   2ab5e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   2ab62:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   2ab66:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ab6a:	8b 50 14             	mov    0x14(%rax),%edx
   2ab6d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ab71:	8b 40 14             	mov    0x14(%rax),%eax
   2ab74:	39 c2                	cmp    %eax,%edx
   2ab76:	7d 18                	jge    2ab90 <__mult_D2A+0x3e>
   2ab78:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ab7c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2ab80:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ab84:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2ab88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ab8c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2ab90:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ab94:	8b 40 08             	mov    0x8(%rax),%eax
   2ab97:	89 45 a0             	mov    %eax,-0x60(%rbp)
   2ab9a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ab9e:	8b 40 14             	mov    0x14(%rax),%eax
   2aba1:	89 45 b0             	mov    %eax,-0x50(%rbp)
   2aba4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2aba8:	8b 40 14             	mov    0x14(%rax),%eax
   2abab:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   2abae:	8b 55 b0             	mov    -0x50(%rbp),%edx
   2abb1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2abb4:	01 d0                	add    %edx,%eax
   2abb6:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   2abb9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2abbd:	8b 40 0c             	mov    0xc(%rax),%eax
   2abc0:	39 45 a4             	cmp    %eax,-0x5c(%rbp)
   2abc3:	7e 04                	jle    2abc9 <__mult_D2A+0x77>
   2abc5:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
   2abc9:	8b 45 a0             	mov    -0x60(%rbp),%eax
   2abcc:	89 c7                	mov    %eax,%edi
   2abce:	e8 ac fa ff ff       	call   2a67f <__Balloc_D2A>
   2abd3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2abd7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2abdc:	75 0a                	jne    2abe8 <__mult_D2A+0x96>
   2abde:	b8 00 00 00 00       	mov    $0x0,%eax
   2abe3:	e9 8a 02 00 00       	jmp    2ae72 <__mult_D2A+0x320>
   2abe8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2abec:	48 83 c0 18          	add    $0x18,%rax
   2abf0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2abf4:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   2abf7:	48 98                	cltq   
   2abf9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2ac00:	00 
   2ac01:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ac05:	48 01 d0             	add    %rdx,%rax
   2ac08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2ac0c:	eb 0f                	jmp    2ac1d <__mult_D2A+0xcb>
   2ac0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ac12:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2ac18:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
   2ac1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ac21:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2ac25:	72 e7                	jb     2ac0e <__mult_D2A+0xbc>
   2ac27:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2ac2b:	48 83 c0 18          	add    $0x18,%rax
   2ac2f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2ac33:	8b 45 b0             	mov    -0x50(%rbp),%eax
   2ac36:	48 98                	cltq   
   2ac38:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2ac3f:	00 
   2ac40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ac44:	48 01 d0             	add    %rdx,%rax
   2ac47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2ac4b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ac4f:	48 83 c0 18          	add    $0x18,%rax
   2ac53:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2ac57:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2ac5a:	48 98                	cltq   
   2ac5c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2ac63:	00 
   2ac64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ac68:	48 01 d0             	add    %rdx,%rax
   2ac6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2ac6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ac73:	48 83 c0 18          	add    $0x18,%rax
   2ac77:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2ac7b:	e9 97 01 00 00       	jmp    2ae17 <__mult_D2A+0x2c5>
   2ac80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ac84:	8b 00                	mov    (%rax),%eax
   2ac86:	25 ff ff 00 00       	and    $0xffff,%eax
   2ac8b:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2ac8e:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2ac92:	0f 84 ab 00 00 00    	je     2ad43 <__mult_D2A+0x1f1>
   2ac98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ac9c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2aca0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2aca4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2aca8:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   2acaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2acb3:	8b 00                	mov    (%rax),%eax
   2acb5:	0f b7 c0             	movzwl %ax,%eax
   2acb8:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2acbc:	89 c2                	mov    %eax,%edx
   2acbe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2acc2:	8b 00                	mov    (%rax),%eax
   2acc4:	0f b7 c0             	movzwl %ax,%eax
   2acc7:	01 c2                	add    %eax,%edx
   2acc9:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2accc:	01 d0                	add    %edx,%eax
   2acce:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2acd1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2acd4:	c1 e8 10             	shr    $0x10,%eax
   2acd7:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2acda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2acde:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2ace2:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2ace6:	8b 00                	mov    (%rax),%eax
   2ace8:	c1 e8 10             	shr    $0x10,%eax
   2aceb:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2acef:	89 c2                	mov    %eax,%edx
   2acf1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2acf5:	8b 00                	mov    (%rax),%eax
   2acf7:	c1 e8 10             	shr    $0x10,%eax
   2acfa:	01 c2                	add    %eax,%edx
   2acfc:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2acff:	01 d0                	add    %edx,%eax
   2ad01:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2ad04:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2ad07:	c1 e8 10             	shr    $0x10,%eax
   2ad0a:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2ad0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ad11:	48 83 c0 02          	add    $0x2,%rax
   2ad15:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2ad18:	66 89 10             	mov    %dx,(%rax)
   2ad1b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2ad1e:	89 c2                	mov    %eax,%edx
   2ad20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ad24:	66 89 10             	mov    %dx,(%rax)
   2ad27:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   2ad2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ad30:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2ad34:	0f 82 75 ff ff ff    	jb     2acaf <__mult_D2A+0x15d>
   2ad3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ad3e:	8b 55 a8             	mov    -0x58(%rbp),%edx
   2ad41:	89 10                	mov    %edx,(%rax)
   2ad43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ad47:	8b 00                	mov    (%rax),%eax
   2ad49:	c1 e8 10             	shr    $0x10,%eax
   2ad4c:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2ad4f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2ad53:	0f 84 b4 00 00 00    	je     2ae0d <__mult_D2A+0x2bb>
   2ad59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2ad5d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2ad61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2ad65:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2ad69:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   2ad70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ad74:	8b 00                	mov    (%rax),%eax
   2ad76:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2ad79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2ad7d:	8b 00                	mov    (%rax),%eax
   2ad7f:	0f b7 c0             	movzwl %ax,%eax
   2ad82:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2ad86:	89 c2                	mov    %eax,%edx
   2ad88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ad8c:	8b 00                	mov    (%rax),%eax
   2ad8e:	c1 e8 10             	shr    $0x10,%eax
   2ad91:	01 c2                	add    %eax,%edx
   2ad93:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2ad96:	01 d0                	add    %edx,%eax
   2ad98:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2ad9b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2ad9e:	c1 e8 10             	shr    $0x10,%eax
   2ada1:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2ada4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ada8:	48 83 c0 02          	add    $0x2,%rax
   2adac:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2adaf:	66 89 10             	mov    %dx,(%rax)
   2adb2:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2adb5:	89 c2                	mov    %eax,%edx
   2adb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2adbb:	66 89 10             	mov    %dx,(%rax)
   2adbe:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
   2adc3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2adc7:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2adcb:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   2adcf:	8b 00                	mov    (%rax),%eax
   2add1:	c1 e8 10             	shr    $0x10,%eax
   2add4:	0f af 45 b8          	imul   -0x48(%rbp),%eax
   2add8:	89 c2                	mov    %eax,%edx
   2adda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2adde:	8b 00                	mov    (%rax),%eax
   2ade0:	0f b7 c0             	movzwl %ax,%eax
   2ade3:	01 c2                	add    %eax,%edx
   2ade5:	8b 45 a8             	mov    -0x58(%rbp),%eax
   2ade8:	01 d0                	add    %edx,%eax
   2adea:	89 45 ac             	mov    %eax,-0x54(%rbp)
   2aded:	8b 45 ac             	mov    -0x54(%rbp),%eax
   2adf0:	c1 e8 10             	shr    $0x10,%eax
   2adf3:	89 45 a8             	mov    %eax,-0x58(%rbp)
   2adf6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2adfa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2adfe:	0f 82 75 ff ff ff    	jb     2ad79 <__mult_D2A+0x227>
   2ae04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ae08:	8b 55 ac             	mov    -0x54(%rbp),%edx
   2ae0b:	89 10                	mov    %edx,(%rax)
   2ae0d:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
   2ae12:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
   2ae17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2ae1b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2ae1f:	0f 82 5b fe ff ff    	jb     2ac80 <__mult_D2A+0x12e>
   2ae25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ae29:	48 83 c0 18          	add    $0x18,%rax
   2ae2d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2ae31:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   2ae34:	48 98                	cltq   
   2ae36:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2ae3d:	00 
   2ae3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2ae42:	48 01 d0             	add    %rdx,%rax
   2ae45:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2ae49:	eb 04                	jmp    2ae4f <__mult_D2A+0x2fd>
   2ae4b:	83 6d a4 01          	subl   $0x1,-0x5c(%rbp)
   2ae4f:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   2ae53:	7e 0f                	jle    2ae64 <__mult_D2A+0x312>
   2ae55:	48 83 6d d0 04       	subq   $0x4,-0x30(%rbp)
   2ae5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2ae5e:	8b 00                	mov    (%rax),%eax
   2ae60:	85 c0                	test   %eax,%eax
   2ae62:	74 e7                	je     2ae4b <__mult_D2A+0x2f9>
   2ae64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ae68:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   2ae6b:	89 50 14             	mov    %edx,0x14(%rax)
   2ae6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2ae72:	c9                   	leave  
   2ae73:	c3                   	ret    

000000000002ae74 <__pow5mult_D2A>:
   2ae74:	f3 0f 1e fa          	endbr64 
   2ae78:	55                   	push   %rbp
   2ae79:	48 89 e5             	mov    %rsp,%rbp
   2ae7c:	48 83 ec 30          	sub    $0x30,%rsp
   2ae80:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2ae84:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2ae87:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2ae8a:	83 e0 03             	and    $0x3,%eax
   2ae8d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2ae90:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2ae94:	74 42                	je     2aed8 <__pow5mult_D2A+0x64>
   2ae96:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2ae99:	83 e8 01             	sub    $0x1,%eax
   2ae9c:	48 98                	cltq   
   2ae9e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2aea5:	00 
   2aea6:	48 8d 05 ab e2 00 00 	lea    0xe2ab(%rip),%rax        # 39158 <p05.2603>
   2aead:	8b 0c 02             	mov    (%rdx,%rax,1),%ecx
   2aeb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2aeb4:	ba 00 00 00 00       	mov    $0x0,%edx
   2aeb9:	89 ce                	mov    %ecx,%esi
   2aebb:	48 89 c7             	mov    %rax,%rdi
   2aebe:	e8 78 fa ff ff       	call   2a93b <__multadd_D2A>
   2aec3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2aec7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2aecc:	75 0a                	jne    2aed8 <__pow5mult_D2A+0x64>
   2aece:	b8 00 00 00 00       	mov    $0x0,%eax
   2aed3:	e9 66 01 00 00       	jmp    2b03e <__pow5mult_D2A+0x1ca>
   2aed8:	c1 7d d4 02          	sarl   $0x2,-0x2c(%rbp)
   2aedc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2aee0:	75 09                	jne    2aeeb <__pow5mult_D2A+0x77>
   2aee2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2aee6:	e9 53 01 00 00       	jmp    2b03e <__pow5mult_D2A+0x1ca>
   2aeeb:	48 8b 05 6e 1e 04 00 	mov    0x41e6e(%rip),%rax        # 6cd60 <p5s>
   2aef2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2aef6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2aefb:	75 62                	jne    2af5f <__pow5mult_D2A+0xeb>
   2aefd:	48 8d 3d 68 1e 04 00 	lea    0x41e68(%rip),%rdi        # 6cd6c <__dtoa_locks+0x4>
   2af04:	e8 23 c2 fe ff       	call   1712c <sgx_spin_lock>
   2af09:	48 8b 05 50 1e 04 00 	mov    0x41e50(%rip),%rax        # 6cd60 <p5s>
   2af10:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2af14:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2af19:	75 38                	jne    2af53 <__pow5mult_D2A+0xdf>
   2af1b:	bf 71 02 00 00       	mov    $0x271,%edi
   2af20:	e8 e7 fb ff ff       	call   2ab0c <__i2b_D2A>
   2af25:	48 89 05 34 1e 04 00 	mov    %rax,0x41e34(%rip)        # 6cd60 <p5s>
   2af2c:	48 8b 05 2d 1e 04 00 	mov    0x41e2d(%rip),%rax        # 6cd60 <p5s>
   2af33:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2af37:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2af3c:	75 0a                	jne    2af48 <__pow5mult_D2A+0xd4>
   2af3e:	b8 00 00 00 00       	mov    $0x0,%eax
   2af43:	e9 f6 00 00 00       	jmp    2b03e <__pow5mult_D2A+0x1ca>
   2af48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2af4c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2af53:	48 8d 3d 12 1e 04 00 	lea    0x41e12(%rip),%rdi        # 6cd6c <__dtoa_locks+0x4>
   2af5a:	e8 68 c2 fe ff       	call   171c7 <sgx_spin_unlock>
   2af5f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2af62:	83 e0 01             	and    $0x1,%eax
   2af65:	85 c0                	test   %eax,%eax
   2af67:	74 3c                	je     2afa5 <__pow5mult_D2A+0x131>
   2af69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2af6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2af71:	48 89 d6             	mov    %rdx,%rsi
   2af74:	48 89 c7             	mov    %rax,%rdi
   2af77:	e8 d6 fb ff ff       	call   2ab52 <__mult_D2A>
   2af7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2af80:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2af85:	75 0a                	jne    2af91 <__pow5mult_D2A+0x11d>
   2af87:	b8 00 00 00 00       	mov    $0x0,%eax
   2af8c:	e9 ad 00 00 00       	jmp    2b03e <__pow5mult_D2A+0x1ca>
   2af91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2af95:	48 89 c7             	mov    %rax,%rdi
   2af98:	e8 28 f8 ff ff       	call   2a7c5 <__Bfree_D2A>
   2af9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2afa1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2afa5:	d1 7d d4             	sarl   -0x2c(%rbp)
   2afa8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2afac:	0f 84 87 00 00 00    	je     2b039 <__pow5mult_D2A+0x1c5>
   2afb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2afb6:	48 8b 00             	mov    (%rax),%rax
   2afb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2afbd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2afc2:	75 68                	jne    2b02c <__pow5mult_D2A+0x1b8>
   2afc4:	48 8d 3d a1 1d 04 00 	lea    0x41da1(%rip),%rdi        # 6cd6c <__dtoa_locks+0x4>
   2afcb:	e8 5c c1 fe ff       	call   1712c <sgx_spin_lock>
   2afd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2afd4:	48 8b 00             	mov    (%rax),%rax
   2afd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2afdb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2afe0:	75 3e                	jne    2b020 <__pow5mult_D2A+0x1ac>
   2afe2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2afe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2afea:	48 89 d6             	mov    %rdx,%rsi
   2afed:	48 89 c7             	mov    %rax,%rdi
   2aff0:	e8 5d fb ff ff       	call   2ab52 <__mult_D2A>
   2aff5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2aff9:	48 89 02             	mov    %rax,(%rdx)
   2affc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b000:	48 8b 00             	mov    (%rax),%rax
   2b003:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2b007:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2b00c:	75 07                	jne    2b015 <__pow5mult_D2A+0x1a1>
   2b00e:	b8 00 00 00 00       	mov    $0x0,%eax
   2b013:	eb 29                	jmp    2b03e <__pow5mult_D2A+0x1ca>
   2b015:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b019:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2b020:	48 8d 3d 45 1d 04 00 	lea    0x41d45(%rip),%rdi        # 6cd6c <__dtoa_locks+0x4>
   2b027:	e8 9b c1 fe ff       	call   171c7 <sgx_spin_unlock>
   2b02c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b030:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b034:	e9 26 ff ff ff       	jmp    2af5f <__pow5mult_D2A+0xeb>
   2b039:	90                   	nop
   2b03a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b03e:	c9                   	leave  
   2b03f:	c3                   	ret    

000000000002b040 <__lshift_D2A>:
   2b040:	f3 0f 1e fa          	endbr64 
   2b044:	55                   	push   %rbp
   2b045:	48 89 e5             	mov    %rsp,%rbp
   2b048:	48 83 ec 50          	sub    $0x50,%rsp
   2b04c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   2b050:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   2b053:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2b056:	c1 f8 05             	sar    $0x5,%eax
   2b059:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2b05c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b060:	8b 40 08             	mov    0x8(%rax),%eax
   2b063:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2b066:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b06a:	8b 50 14             	mov    0x14(%rax),%edx
   2b06d:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2b070:	01 d0                	add    %edx,%eax
   2b072:	83 c0 01             	add    $0x1,%eax
   2b075:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2b078:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b07c:	8b 40 0c             	mov    0xc(%rax),%eax
   2b07f:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2b082:	eb 07                	jmp    2b08b <__lshift_D2A+0x4b>
   2b084:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
   2b088:	d1 65 cc             	shll   -0x34(%rbp)
   2b08b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2b08e:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   2b091:	7f f1                	jg     2b084 <__lshift_D2A+0x44>
   2b093:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2b096:	89 c7                	mov    %eax,%edi
   2b098:	e8 e2 f5 ff ff       	call   2a67f <__Balloc_D2A>
   2b09d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2b0a1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2b0a6:	75 0a                	jne    2b0b2 <__lshift_D2A+0x72>
   2b0a8:	b8 00 00 00 00       	mov    $0x0,%eax
   2b0ad:	e9 19 01 00 00       	jmp    2b1cb <__lshift_D2A+0x18b>
   2b0b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b0b6:	48 83 c0 18          	add    $0x18,%rax
   2b0ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b0be:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   2b0c5:	eb 16                	jmp    2b0dd <__lshift_D2A+0x9d>
   2b0c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b0cb:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b0cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2b0d3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2b0d9:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   2b0dd:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2b0e0:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   2b0e3:	7c e2                	jl     2b0c7 <__lshift_D2A+0x87>
   2b0e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b0e9:	48 83 c0 18          	add    $0x18,%rax
   2b0ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2b0f1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b0f5:	8b 40 14             	mov    0x14(%rax),%eax
   2b0f8:	48 98                	cltq   
   2b0fa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b101:	00 
   2b102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b106:	48 01 d0             	add    %rdx,%rax
   2b109:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b10d:	83 65 b4 1f          	andl   $0x1f,-0x4c(%rbp)
   2b111:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   2b115:	74 71                	je     2b188 <__lshift_D2A+0x148>
   2b117:	b8 20 00 00 00       	mov    $0x20,%eax
   2b11c:	2b 45 b4             	sub    -0x4c(%rbp),%eax
   2b11f:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2b122:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
   2b129:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b12d:	8b 10                	mov    (%rax),%edx
   2b12f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2b132:	89 c1                	mov    %eax,%ecx
   2b134:	d3 e2                	shl    %cl,%edx
   2b136:	89 d1                	mov    %edx,%ecx
   2b138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b13c:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b140:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2b144:	0b 4d d8             	or     -0x28(%rbp),%ecx
   2b147:	89 ca                	mov    %ecx,%edx
   2b149:	89 10                	mov    %edx,(%rax)
   2b14b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b14f:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b153:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   2b157:	8b 10                	mov    (%rax),%edx
   2b159:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2b15c:	89 c1                	mov    %eax,%ecx
   2b15e:	d3 ea                	shr    %cl,%edx
   2b160:	89 d0                	mov    %edx,%eax
   2b162:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2b165:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b169:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2b16d:	72 ba                	jb     2b129 <__lshift_D2A+0xe9>
   2b16f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b173:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2b176:	89 10                	mov    %edx,(%rax)
   2b178:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b17c:	8b 00                	mov    (%rax),%eax
   2b17e:	85 c0                	test   %eax,%eax
   2b180:	74 2c                	je     2b1ae <__lshift_D2A+0x16e>
   2b182:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   2b186:	eb 26                	jmp    2b1ae <__lshift_D2A+0x16e>
   2b188:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2b18c:	48 8d 42 04          	lea    0x4(%rdx),%rax
   2b190:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2b194:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b198:	48 8d 48 04          	lea    0x4(%rax),%rcx
   2b19c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   2b1a0:	8b 12                	mov    (%rdx),%edx
   2b1a2:	89 10                	mov    %edx,(%rax)
   2b1a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b1a8:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2b1ac:	72 da                	jb     2b188 <__lshift_D2A+0x148>
   2b1ae:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2b1b1:	8d 50 ff             	lea    -0x1(%rax),%edx
   2b1b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b1b8:	89 50 14             	mov    %edx,0x14(%rax)
   2b1bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2b1bf:	48 89 c7             	mov    %rax,%rdi
   2b1c2:	e8 fe f5 ff ff       	call   2a7c5 <__Bfree_D2A>
   2b1c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b1cb:	c9                   	leave  
   2b1cc:	c3                   	ret    

000000000002b1cd <__cmp_D2A>:
   2b1cd:	f3 0f 1e fa          	endbr64 
   2b1d1:	55                   	push   %rbp
   2b1d2:	48 89 e5             	mov    %rsp,%rbp
   2b1d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2b1d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2b1dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b1e1:	8b 40 14             	mov    0x14(%rax),%eax
   2b1e4:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2b1e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b1eb:	8b 40 14             	mov    0x14(%rax),%eax
   2b1ee:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2b1f1:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
   2b1f5:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
   2b1f9:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2b1fc:	29 45 d8             	sub    %eax,-0x28(%rbp)
   2b1ff:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
   2b203:	74 08                	je     2b20d <__cmp_D2A+0x40>
   2b205:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2b208:	e9 92 00 00 00       	jmp    2b29f <__cmp_D2A+0xd2>
   2b20d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b211:	48 83 c0 18          	add    $0x18,%rax
   2b215:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2b219:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2b21c:	48 98                	cltq   
   2b21e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b225:	00 
   2b226:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2b22a:	48 01 d0             	add    %rdx,%rax
   2b22d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2b231:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b235:	48 83 c0 18          	add    $0x18,%rax
   2b239:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b23d:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2b240:	48 98                	cltq   
   2b242:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b249:	00 
   2b24a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b24e:	48 01 d0             	add    %rdx,%rax
   2b251:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b255:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b25a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b25e:	8b 10                	mov    (%rax),%edx
   2b260:	48 83 6d e8 04       	subq   $0x4,-0x18(%rbp)
   2b265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b269:	8b 00                	mov    (%rax),%eax
   2b26b:	39 c2                	cmp    %eax,%edx
   2b26d:	74 1e                	je     2b28d <__cmp_D2A+0xc0>
   2b26f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b273:	8b 10                	mov    (%rax),%edx
   2b275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b279:	8b 00                	mov    (%rax),%eax
   2b27b:	39 c2                	cmp    %eax,%edx
   2b27d:	73 07                	jae    2b286 <__cmp_D2A+0xb9>
   2b27f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2b284:	eb 19                	jmp    2b29f <__cmp_D2A+0xd2>
   2b286:	b8 01 00 00 00       	mov    $0x1,%eax
   2b28b:	eb 12                	jmp    2b29f <__cmp_D2A+0xd2>
   2b28d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b291:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2b295:	76 02                	jbe    2b299 <__cmp_D2A+0xcc>
   2b297:	eb bc                	jmp    2b255 <__cmp_D2A+0x88>
   2b299:	90                   	nop
   2b29a:	b8 00 00 00 00       	mov    $0x0,%eax
   2b29f:	5d                   	pop    %rbp
   2b2a0:	c3                   	ret    

000000000002b2a1 <__diff_D2A>:
   2b2a1:	f3 0f 1e fa          	endbr64 
   2b2a5:	55                   	push   %rbp
   2b2a6:	48 89 e5             	mov    %rsp,%rbp
   2b2a9:	48 83 ec 60          	sub    $0x60,%rsp
   2b2ad:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2b2b1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2b2b5:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2b2b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b2bd:	48 89 d6             	mov    %rdx,%rsi
   2b2c0:	48 89 c7             	mov    %rax,%rdi
   2b2c3:	e8 05 ff ff ff       	call   2b1cd <__cmp_D2A>
   2b2c8:	89 45 b8             	mov    %eax,-0x48(%rbp)
   2b2cb:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2b2cf:	75 3e                	jne    2b30f <__diff_D2A+0x6e>
   2b2d1:	bf 00 00 00 00       	mov    $0x0,%edi
   2b2d6:	e8 a4 f3 ff ff       	call   2a67f <__Balloc_D2A>
   2b2db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b2df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2b2e4:	75 0a                	jne    2b2f0 <__diff_D2A+0x4f>
   2b2e6:	b8 00 00 00 00       	mov    $0x0,%eax
   2b2eb:	e9 04 02 00 00       	jmp    2b4f4 <__diff_D2A+0x253>
   2b2f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b2f4:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2b2fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b2ff:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   2b306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b30a:	e9 e5 01 00 00       	jmp    2b4f4 <__diff_D2A+0x253>
   2b30f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   2b313:	79 21                	jns    2b336 <__diff_D2A+0x95>
   2b315:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b319:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b31d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b321:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2b325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b329:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2b32d:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   2b334:	eb 07                	jmp    2b33d <__diff_D2A+0x9c>
   2b336:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   2b33d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b341:	8b 40 08             	mov    0x8(%rax),%eax
   2b344:	89 c7                	mov    %eax,%edi
   2b346:	e8 34 f3 ff ff       	call   2a67f <__Balloc_D2A>
   2b34b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b34f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2b354:	75 0a                	jne    2b360 <__diff_D2A+0xbf>
   2b356:	b8 00 00 00 00       	mov    $0x0,%eax
   2b35b:	e9 94 01 00 00       	jmp    2b4f4 <__diff_D2A+0x253>
   2b360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b364:	8b 55 b8             	mov    -0x48(%rbp),%edx
   2b367:	89 50 10             	mov    %edx,0x10(%rax)
   2b36a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b36e:	8b 40 14             	mov    0x14(%rax),%eax
   2b371:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2b374:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2b378:	48 83 c0 18          	add    $0x18,%rax
   2b37c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2b380:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2b383:	48 98                	cltq   
   2b385:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b38c:	00 
   2b38d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b391:	48 01 d0             	add    %rdx,%rax
   2b394:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2b398:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b39c:	8b 40 14             	mov    0x14(%rax),%eax
   2b39f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2b3a2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b3a6:	48 83 c0 18          	add    $0x18,%rax
   2b3aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2b3ae:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2b3b1:	48 98                	cltq   
   2b3b3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b3ba:	00 
   2b3bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b3bf:	48 01 d0             	add    %rdx,%rax
   2b3c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b3c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b3ca:	48 83 c0 18          	add    $0x18,%rax
   2b3ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2b3d2:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2b3d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b3dd:	8b 00                	mov    (%rax),%eax
   2b3df:	0f b7 d0             	movzwl %ax,%edx
   2b3e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b3e6:	8b 00                	mov    (%rax),%eax
   2b3e8:	0f b7 c0             	movzwl %ax,%eax
   2b3eb:	29 c2                	sub    %eax,%edx
   2b3ed:	89 d0                	mov    %edx,%eax
   2b3ef:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2b3f2:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2b3f5:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b3f8:	c1 e8 10             	shr    $0x10,%eax
   2b3fb:	83 e0 01             	and    $0x1,%eax
   2b3fe:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b401:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b405:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b409:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2b40d:	8b 00                	mov    (%rax),%eax
   2b40f:	c1 e8 10             	shr    $0x10,%eax
   2b412:	89 c1                	mov    %eax,%ecx
   2b414:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b418:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b41c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2b420:	8b 00                	mov    (%rax),%eax
   2b422:	c1 e8 10             	shr    $0x10,%eax
   2b425:	29 c1                	sub    %eax,%ecx
   2b427:	89 c8                	mov    %ecx,%eax
   2b429:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2b42c:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2b42f:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2b432:	c1 e8 10             	shr    $0x10,%eax
   2b435:	83 e0 01             	and    $0x1,%eax
   2b438:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b43b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b43f:	48 83 c0 02          	add    $0x2,%rax
   2b443:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2b446:	66 89 10             	mov    %dx,(%rax)
   2b449:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b44c:	89 c2                	mov    %eax,%edx
   2b44e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b452:	66 89 10             	mov    %dx,(%rax)
   2b455:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2b45a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b45e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2b462:	0f 82 71 ff ff ff    	jb     2b3d9 <__diff_D2A+0x138>
   2b468:	eb 5d                	jmp    2b4c7 <__diff_D2A+0x226>
   2b46a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b46e:	8b 00                	mov    (%rax),%eax
   2b470:	0f b7 c0             	movzwl %ax,%eax
   2b473:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2b476:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2b479:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b47c:	c1 e8 10             	shr    $0x10,%eax
   2b47f:	83 e0 01             	and    $0x1,%eax
   2b482:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b485:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b489:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2b48d:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2b491:	8b 00                	mov    (%rax),%eax
   2b493:	c1 e8 10             	shr    $0x10,%eax
   2b496:	2b 45 c0             	sub    -0x40(%rbp),%eax
   2b499:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2b49c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2b49f:	c1 e8 10             	shr    $0x10,%eax
   2b4a2:	83 e0 01             	and    $0x1,%eax
   2b4a5:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b4a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b4ac:	48 83 c0 02          	add    $0x2,%rax
   2b4b0:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2b4b3:	66 89 10             	mov    %dx,(%rax)
   2b4b6:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b4b9:	89 c2                	mov    %eax,%edx
   2b4bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b4bf:	66 89 10             	mov    %dx,(%rax)
   2b4c2:	48 83 45 e0 04       	addq   $0x4,-0x20(%rbp)
   2b4c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b4cb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2b4cf:	72 99                	jb     2b46a <__diff_D2A+0x1c9>
   2b4d1:	eb 04                	jmp    2b4d7 <__diff_D2A+0x236>
   2b4d3:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   2b4d7:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b4dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b4e0:	8b 00                	mov    (%rax),%eax
   2b4e2:	85 c0                	test   %eax,%eax
   2b4e4:	74 ed                	je     2b4d3 <__diff_D2A+0x232>
   2b4e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b4ea:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2b4ed:	89 50 14             	mov    %edx,0x14(%rax)
   2b4f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b4f4:	c9                   	leave  
   2b4f5:	c3                   	ret    

000000000002b4f6 <__b2d_D2A>:
   2b4f6:	f3 0f 1e fa          	endbr64 
   2b4fa:	55                   	push   %rbp
   2b4fb:	48 89 e5             	mov    %rsp,%rbp
   2b4fe:	48 83 ec 40          	sub    $0x40,%rsp
   2b502:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2b506:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   2b50a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2b511:	00 00 
   2b513:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b517:	31 c0                	xor    %eax,%eax
   2b519:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b51d:	48 83 c0 18          	add    $0x18,%rax
   2b521:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b525:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2b529:	8b 40 14             	mov    0x14(%rax),%eax
   2b52c:	48 98                	cltq   
   2b52e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b535:	00 
   2b536:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2b53a:	48 01 d0             	add    %rdx,%rax
   2b53d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2b541:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b546:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b54a:	8b 00                	mov    (%rax),%eax
   2b54c:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2b54f:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2b552:	89 c7                	mov    %eax,%edi
   2b554:	e8 2c f5 ff ff       	call   2aa85 <__hi0bits_D2A>
   2b559:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   2b55c:	b8 20 00 00 00       	mov    $0x20,%eax
   2b561:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2b564:	89 c2                	mov    %eax,%edx
   2b566:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2b56a:	89 10                	mov    %edx,(%rax)
   2b56c:	83 7d d4 0a          	cmpl   $0xa,-0x2c(%rbp)
   2b570:	7f 62                	jg     2b5d4 <__b2d_D2A+0xde>
   2b572:	b8 0b 00 00 00       	mov    $0xb,%eax
   2b577:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2b57a:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2b57d:	89 c1                	mov    %eax,%ecx
   2b57f:	d3 ea                	shr    %cl,%edx
   2b581:	89 d0                	mov    %edx,%eax
   2b583:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2b588:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2b58b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b58f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2b593:	76 0d                	jbe    2b5a2 <__b2d_D2A+0xac>
   2b595:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b59a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b59e:	8b 00                	mov    (%rax),%eax
   2b5a0:	eb 05                	jmp    2b5a7 <__b2d_D2A+0xb1>
   2b5a2:	b8 00 00 00 00       	mov    $0x0,%eax
   2b5a7:	89 45 dc             	mov    %eax,-0x24(%rbp)
   2b5aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2b5ad:	83 c0 15             	add    $0x15,%eax
   2b5b0:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2b5b3:	89 d6                	mov    %edx,%esi
   2b5b5:	89 c1                	mov    %eax,%ecx
   2b5b7:	d3 e6                	shl    %cl,%esi
   2b5b9:	b8 0b 00 00 00       	mov    $0xb,%eax
   2b5be:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2b5c1:	8b 55 dc             	mov    -0x24(%rbp),%edx
   2b5c4:	89 c1                	mov    %eax,%ecx
   2b5c6:	d3 ea                	shr    %cl,%edx
   2b5c8:	89 d0                	mov    %edx,%eax
   2b5ca:	09 f0                	or     %esi,%eax
   2b5cc:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2b5cf:	e9 a4 00 00 00       	jmp    2b678 <__b2d_D2A+0x182>
   2b5d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b5d8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2b5dc:	76 0d                	jbe    2b5eb <__b2d_D2A+0xf5>
   2b5de:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b5e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b5e7:	8b 00                	mov    (%rax),%eax
   2b5e9:	eb 05                	jmp    2b5f0 <__b2d_D2A+0xfa>
   2b5eb:	b8 00 00 00 00       	mov    $0x0,%eax
   2b5f0:	89 45 d8             	mov    %eax,-0x28(%rbp)
   2b5f3:	83 6d d4 0b          	subl   $0xb,-0x2c(%rbp)
   2b5f7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2b5fb:	74 6a                	je     2b667 <__b2d_D2A+0x171>
   2b5fd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2b600:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2b603:	89 d6                	mov    %edx,%esi
   2b605:	89 c1                	mov    %eax,%ecx
   2b607:	d3 e6                	shl    %cl,%esi
   2b609:	b8 20 00 00 00       	mov    $0x20,%eax
   2b60e:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2b611:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2b614:	89 c1                	mov    %eax,%ecx
   2b616:	d3 ea                	shr    %cl,%edx
   2b618:	89 d0                	mov    %edx,%eax
   2b61a:	09 f0                	or     %esi,%eax
   2b61c:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2b621:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2b624:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b628:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2b62c:	76 0d                	jbe    2b63b <__b2d_D2A+0x145>
   2b62e:	48 83 6d e0 04       	subq   $0x4,-0x20(%rbp)
   2b633:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2b637:	8b 00                	mov    (%rax),%eax
   2b639:	eb 05                	jmp    2b640 <__b2d_D2A+0x14a>
   2b63b:	b8 00 00 00 00       	mov    $0x0,%eax
   2b640:	89 45 d0             	mov    %eax,-0x30(%rbp)
   2b643:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2b646:	8b 55 d8             	mov    -0x28(%rbp),%edx
   2b649:	89 d6                	mov    %edx,%esi
   2b64b:	89 c1                	mov    %eax,%ecx
   2b64d:	d3 e6                	shl    %cl,%esi
   2b64f:	b8 20 00 00 00       	mov    $0x20,%eax
   2b654:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2b657:	8b 55 d0             	mov    -0x30(%rbp),%edx
   2b65a:	89 c1                	mov    %eax,%ecx
   2b65c:	d3 ea                	shr    %cl,%edx
   2b65e:	89 d0                	mov    %edx,%eax
   2b660:	09 f0                	or     %esi,%eax
   2b662:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2b665:	eb 11                	jmp    2b678 <__b2d_D2A+0x182>
   2b667:	8b 45 d0             	mov    -0x30(%rbp),%eax
   2b66a:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2b66f:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2b672:	8b 45 d8             	mov    -0x28(%rbp),%eax
   2b675:	89 45 f0             	mov    %eax,-0x10(%rbp)
   2b678:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2b67d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b681:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2b688:	00 00 
   2b68a:	74 05                	je     2b691 <__b2d_D2A+0x19b>
   2b68c:	e8 f6 5b ff ff       	call   21287 <__stack_chk_fail>
   2b691:	c9                   	leave  
   2b692:	c3                   	ret    

000000000002b693 <__d2b_D2A>:
   2b693:	f3 0f 1e fa          	endbr64 
   2b697:	55                   	push   %rbp
   2b698:	48 89 e5             	mov    %rsp,%rbp
   2b69b:	53                   	push   %rbx
   2b69c:	48 83 ec 68          	sub    $0x68,%rsp
   2b6a0:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
   2b6a5:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
   2b6a9:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
   2b6ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2b6b4:	00 00 
   2b6b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2b6ba:	31 c0                	xor    %eax,%eax
   2b6bc:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
   2b6c1:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
   2b6c6:	bf 01 00 00 00       	mov    $0x1,%edi
   2b6cb:	e8 af ef ff ff       	call   2a67f <__Balloc_D2A>
   2b6d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2b6d4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2b6d9:	75 0a                	jne    2b6e5 <__d2b_D2A+0x52>
   2b6db:	b8 00 00 00 00       	mov    $0x0,%eax
   2b6e0:	e9 6b 01 00 00       	jmp    2b850 <__d2b_D2A+0x1bd>
   2b6e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b6e9:	48 83 c0 18          	add    $0x18,%rax
   2b6ed:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2b6f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2b6f4:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2b6f9:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b6fc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2b6ff:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   2b704:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2b707:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2b70a:	c1 e8 14             	shr    $0x14,%eax
   2b70d:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2b710:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2b714:	74 0b                	je     2b721 <__d2b_D2A+0x8e>
   2b716:	8b 45 c0             	mov    -0x40(%rbp),%eax
   2b719:	0d 00 00 10 00       	or     $0x100000,%eax
   2b71e:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b721:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2b724:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2b727:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2b72a:	85 c0                	test   %eax,%eax
   2b72c:	74 7b                	je     2b7a9 <__d2b_D2A+0x116>
   2b72e:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
   2b732:	48 89 c7             	mov    %rax,%rdi
   2b735:	e8 1a f1 ff ff       	call   2a854 <__lo0bits_D2A>
   2b73a:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2b73d:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   2b741:	74 2b                	je     2b76e <__d2b_D2A+0xdb>
   2b743:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2b746:	b8 20 00 00 00       	mov    $0x20,%eax
   2b74b:	2b 45 c8             	sub    -0x38(%rbp),%eax
   2b74e:	89 c1                	mov    %eax,%ecx
   2b750:	d3 e2                	shl    %cl,%edx
   2b752:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2b755:	09 c2                	or     %eax,%edx
   2b757:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b75b:	89 10                	mov    %edx,(%rax)
   2b75d:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2b760:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b763:	89 c1                	mov    %eax,%ecx
   2b765:	d3 ea                	shr    %cl,%edx
   2b767:	89 d0                	mov    %edx,%eax
   2b769:	89 45 c0             	mov    %eax,-0x40(%rbp)
   2b76c:	eb 09                	jmp    2b777 <__d2b_D2A+0xe4>
   2b76e:	8b 55 bc             	mov    -0x44(%rbp),%edx
   2b771:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b775:	89 10                	mov    %edx,(%rax)
   2b777:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b77b:	48 83 c0 04          	add    $0x4,%rax
   2b77f:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2b782:	89 10                	mov    %edx,(%rax)
   2b784:	8b 00                	mov    (%rax),%eax
   2b786:	85 c0                	test   %eax,%eax
   2b788:	74 07                	je     2b791 <__d2b_D2A+0xfe>
   2b78a:	ba 02 00 00 00       	mov    $0x2,%edx
   2b78f:	eb 05                	jmp    2b796 <__d2b_D2A+0x103>
   2b791:	ba 01 00 00 00       	mov    $0x1,%edx
   2b796:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b79a:	89 50 14             	mov    %edx,0x14(%rax)
   2b79d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b7a1:	8b 40 14             	mov    0x14(%rax),%eax
   2b7a4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2b7a7:	eb 31                	jmp    2b7da <__d2b_D2A+0x147>
   2b7a9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   2b7ad:	48 89 c7             	mov    %rax,%rdi
   2b7b0:	e8 9f f0 ff ff       	call   2a854 <__lo0bits_D2A>
   2b7b5:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2b7b8:	8b 55 c0             	mov    -0x40(%rbp),%edx
   2b7bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b7bf:	89 10                	mov    %edx,(%rax)
   2b7c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b7c5:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   2b7cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b7d0:	8b 40 14             	mov    0x14(%rax),%eax
   2b7d3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2b7d6:	83 45 c8 20          	addl   $0x20,-0x38(%rbp)
   2b7da:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2b7de:	74 26                	je     2b806 <__d2b_D2A+0x173>
   2b7e0:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2b7e3:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b7e6:	01 d0                	add    %edx,%eax
   2b7e8:	8d 90 cd fb ff ff    	lea    -0x433(%rax),%edx
   2b7ee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b7f2:	89 10                	mov    %edx,(%rax)
   2b7f4:	b8 35 00 00 00       	mov    $0x35,%eax
   2b7f9:	2b 45 c8             	sub    -0x38(%rbp),%eax
   2b7fc:	89 c2                	mov    %eax,%edx
   2b7fe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2b802:	89 10                	mov    %edx,(%rax)
   2b804:	eb 46                	jmp    2b84c <__d2b_D2A+0x1b9>
   2b806:	8b 55 cc             	mov    -0x34(%rbp),%edx
   2b809:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2b80c:	01 d0                	add    %edx,%eax
   2b80e:	8d 90 ce fb ff ff    	lea    -0x432(%rax),%edx
   2b814:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2b818:	89 10                	mov    %edx,(%rax)
   2b81a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2b81d:	c1 e0 05             	shl    $0x5,%eax
   2b820:	89 c3                	mov    %eax,%ebx
   2b822:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2b825:	83 e8 01             	sub    $0x1,%eax
   2b828:	48 98                	cltq   
   2b82a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2b831:	00 
   2b832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2b836:	48 01 d0             	add    %rdx,%rax
   2b839:	8b 00                	mov    (%rax),%eax
   2b83b:	89 c7                	mov    %eax,%edi
   2b83d:	e8 43 f2 ff ff       	call   2aa85 <__hi0bits_D2A>
   2b842:	29 c3                	sub    %eax,%ebx
   2b844:	89 da                	mov    %ebx,%edx
   2b846:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2b84a:	89 10                	mov    %edx,(%rax)
   2b84c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2b850:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2b854:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2b85b:	00 00 
   2b85d:	74 05                	je     2b864 <__d2b_D2A+0x1d1>
   2b85f:	e8 23 5a ff ff       	call   21287 <__stack_chk_fail>
   2b864:	48 83 c4 68          	add    $0x68,%rsp
   2b868:	5b                   	pop    %rbx
   2b869:	5d                   	pop    %rbp
   2b86a:	c3                   	ret    

000000000002b86b <__fpclassify>:
   2b86b:	f3 0f 1e fa          	endbr64 
   2b86f:	55                   	push   %rbp
   2b870:	48 89 e5             	mov    %rsp,%rbp
   2b873:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2b878:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2b87c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b884:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2b888:	66 25 f0 7f          	and    $0x7ff0,%ax
   2b88c:	66 85 c0             	test   %ax,%ax
   2b88f:	75 28                	jne    2b8b9 <__fpclassify+0x4e>
   2b891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b895:	8b 40 04             	mov    0x4(%rax),%eax
   2b898:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2b89d:	85 c0                	test   %eax,%eax
   2b89f:	75 11                	jne    2b8b2 <__fpclassify+0x47>
   2b8a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b8a5:	8b 00                	mov    (%rax),%eax
   2b8a7:	85 c0                	test   %eax,%eax
   2b8a9:	75 07                	jne    2b8b2 <__fpclassify+0x47>
   2b8ab:	b8 02 00 00 00       	mov    $0x2,%eax
   2b8b0:	eb 46                	jmp    2b8f8 <__fpclassify+0x8d>
   2b8b2:	b8 03 00 00 00       	mov    $0x3,%eax
   2b8b7:	eb 3f                	jmp    2b8f8 <__fpclassify+0x8d>
   2b8b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b8bd:	0f b7 40 06          	movzwl 0x6(%rax),%eax
   2b8c1:	66 25 f0 7f          	and    $0x7ff0,%ax
   2b8c5:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   2b8c9:	75 28                	jne    2b8f3 <__fpclassify+0x88>
   2b8cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b8cf:	8b 40 04             	mov    0x4(%rax),%eax
   2b8d2:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2b8d7:	85 c0                	test   %eax,%eax
   2b8d9:	75 11                	jne    2b8ec <__fpclassify+0x81>
   2b8db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b8df:	8b 00                	mov    (%rax),%eax
   2b8e1:	85 c0                	test   %eax,%eax
   2b8e3:	75 07                	jne    2b8ec <__fpclassify+0x81>
   2b8e5:	b8 01 00 00 00       	mov    $0x1,%eax
   2b8ea:	eb 0c                	jmp    2b8f8 <__fpclassify+0x8d>
   2b8ec:	b8 00 00 00 00       	mov    $0x0,%eax
   2b8f1:	eb 05                	jmp    2b8f8 <__fpclassify+0x8d>
   2b8f3:	b8 04 00 00 00       	mov    $0x4,%eax
   2b8f8:	5d                   	pop    %rbp
   2b8f9:	c3                   	ret    

000000000002b8fa <__fpclassifyf>:
   2b8fa:	f3 0f 1e fa          	endbr64 
   2b8fe:	55                   	push   %rbp
   2b8ff:	48 89 e5             	mov    %rsp,%rbp
   2b902:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
   2b907:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
   2b90b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b90f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b913:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   2b917:	66 25 80 7f          	and    $0x7f80,%ax
   2b91b:	66 85 c0             	test   %ax,%ax
   2b91e:	75 1d                	jne    2b93d <__fpclassifyf+0x43>
   2b920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b924:	8b 00                	mov    (%rax),%eax
   2b926:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   2b92b:	85 c0                	test   %eax,%eax
   2b92d:	75 07                	jne    2b936 <__fpclassifyf+0x3c>
   2b92f:	b8 02 00 00 00       	mov    $0x2,%eax
   2b934:	eb 3b                	jmp    2b971 <__fpclassifyf+0x77>
   2b936:	b8 03 00 00 00       	mov    $0x3,%eax
   2b93b:	eb 34                	jmp    2b971 <__fpclassifyf+0x77>
   2b93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b941:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   2b945:	66 25 80 7f          	and    $0x7f80,%ax
   2b949:	66 3d 80 7f          	cmp    $0x7f80,%ax
   2b94d:	75 1d                	jne    2b96c <__fpclassifyf+0x72>
   2b94f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b953:	8b 00                	mov    (%rax),%eax
   2b955:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   2b95a:	85 c0                	test   %eax,%eax
   2b95c:	75 07                	jne    2b965 <__fpclassifyf+0x6b>
   2b95e:	b8 01 00 00 00       	mov    $0x1,%eax
   2b963:	eb 0c                	jmp    2b971 <__fpclassifyf+0x77>
   2b965:	b8 00 00 00 00       	mov    $0x0,%eax
   2b96a:	eb 05                	jmp    2b971 <__fpclassifyf+0x77>
   2b96c:	b8 04 00 00 00       	mov    $0x4,%eax
   2b971:	5d                   	pop    %rbp
   2b972:	c3                   	ret    

000000000002b973 <__fpclassifyl>:
   2b973:	f3 0f 1e fa          	endbr64 
   2b977:	55                   	push   %rbp
   2b978:	48 89 e5             	mov    %rsp,%rbp
   2b97b:	48 8d 45 10          	lea    0x10(%rbp),%rax
   2b97f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2b983:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b987:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2b98b:	66 25 ff 7f          	and    $0x7fff,%ax
   2b98f:	66 85 c0             	test   %ax,%ax
   2b992:	75 23                	jne    2b9b7 <__fpclassifyl+0x44>
   2b994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b998:	8b 40 04             	mov    0x4(%rax),%eax
   2b99b:	85 c0                	test   %eax,%eax
   2b99d:	75 11                	jne    2b9b0 <__fpclassifyl+0x3d>
   2b99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9a3:	8b 00                	mov    (%rax),%eax
   2b9a5:	85 c0                	test   %eax,%eax
   2b9a7:	75 07                	jne    2b9b0 <__fpclassifyl+0x3d>
   2b9a9:	b8 02 00 00 00       	mov    $0x2,%eax
   2b9ae:	eb 56                	jmp    2ba06 <__fpclassifyl+0x93>
   2b9b0:	b8 03 00 00 00       	mov    $0x3,%eax
   2b9b5:	eb 4f                	jmp    2ba06 <__fpclassifyl+0x93>
   2b9b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9bb:	8b 40 04             	mov    0x4(%rax),%eax
   2b9be:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   2b9c3:	89 c2                	mov    %eax,%edx
   2b9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9c9:	89 50 04             	mov    %edx,0x4(%rax)
   2b9cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9d0:	0f b7 40 08          	movzwl 0x8(%rax),%eax
   2b9d4:	66 25 ff 7f          	and    $0x7fff,%ax
   2b9d8:	66 3d ff 7f          	cmp    $0x7fff,%ax
   2b9dc:	75 23                	jne    2ba01 <__fpclassifyl+0x8e>
   2b9de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9e2:	8b 40 04             	mov    0x4(%rax),%eax
   2b9e5:	85 c0                	test   %eax,%eax
   2b9e7:	75 11                	jne    2b9fa <__fpclassifyl+0x87>
   2b9e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2b9ed:	8b 00                	mov    (%rax),%eax
   2b9ef:	85 c0                	test   %eax,%eax
   2b9f1:	75 07                	jne    2b9fa <__fpclassifyl+0x87>
   2b9f3:	b8 01 00 00 00       	mov    $0x1,%eax
   2b9f8:	eb 0c                	jmp    2ba06 <__fpclassifyl+0x93>
   2b9fa:	b8 00 00 00 00       	mov    $0x0,%eax
   2b9ff:	eb 05                	jmp    2ba06 <__fpclassifyl+0x93>
   2ba01:	b8 04 00 00 00       	mov    $0x4,%eax
   2ba06:	5d                   	pop    %rbp
   2ba07:	c3                   	ret    

000000000002ba08 <wrapv>:
   2ba08:	55                   	push   %rbp
   2ba09:	48 89 e5             	mov    %rsp,%rbp
   2ba0c:	89 f8                	mov    %edi,%eax
   2ba0e:	88 45 fc             	mov    %al,-0x4(%rbp)
   2ba11:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2ba15:	84 c0                	test   %al,%al
   2ba17:	79 06                	jns    2ba1f <wrapv+0x17>
   2ba19:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2ba1d:	eb 04                	jmp    2ba23 <wrapv+0x1b>
   2ba1f:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
   2ba23:	5d                   	pop    %rbp
   2ba24:	c3                   	ret    

000000000002ba25 <mbsinit>:
   2ba25:	f3 0f 1e fa          	endbr64 
   2ba29:	55                   	push   %rbp
   2ba2a:	48 89 e5             	mov    %rsp,%rbp
   2ba2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2ba31:	b8 01 00 00 00       	mov    $0x1,%eax
   2ba36:	5d                   	pop    %rbp
   2ba37:	c3                   	ret    

000000000002ba38 <mbrtowc>:
   2ba38:	f3 0f 1e fa          	endbr64 
   2ba3c:	55                   	push   %rbp
   2ba3d:	48 89 e5             	mov    %rsp,%rbp
   2ba40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2ba44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2ba48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2ba4c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2ba50:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2ba55:	75 07                	jne    2ba5e <mbrtowc+0x26>
   2ba57:	b8 00 00 00 00       	mov    $0x0,%eax
   2ba5c:	eb 36                	jmp    2ba94 <mbrtowc+0x5c>
   2ba5e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2ba63:	75 09                	jne    2ba6e <mbrtowc+0x36>
   2ba65:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   2ba6c:	eb 26                	jmp    2ba94 <mbrtowc+0x5c>
   2ba6e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2ba73:	74 10                	je     2ba85 <mbrtowc+0x4d>
   2ba75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ba79:	0f b6 00             	movzbl (%rax),%eax
   2ba7c:	0f b6 d0             	movzbl %al,%edx
   2ba7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ba83:	89 10                	mov    %edx,(%rax)
   2ba85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2ba89:	0f b6 00             	movzbl (%rax),%eax
   2ba8c:	84 c0                	test   %al,%al
   2ba8e:	0f 95 c0             	setne  %al
   2ba91:	0f b6 c0             	movzbl %al,%eax
   2ba94:	5d                   	pop    %rbp
   2ba95:	c3                   	ret    

000000000002ba96 <mbsrtowcs>:
   2ba96:	f3 0f 1e fa          	endbr64 
   2ba9a:	55                   	push   %rbp
   2ba9b:	48 89 e5             	mov    %rsp,%rbp
   2ba9e:	48 83 ec 20          	sub    $0x20,%rsp
   2baa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2baa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2baaa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2baae:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2bab2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2bab6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2baba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2babe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bac2:	49 89 c8             	mov    %rcx,%r8
   2bac5:	48 89 d1             	mov    %rdx,%rcx
   2bac8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2bacf:	48 89 c7             	mov    %rax,%rdi
   2bad2:	e8 02 00 00 00       	call   2bad9 <mbsnrtowcs>
   2bad7:	c9                   	leave  
   2bad8:	c3                   	ret    

000000000002bad9 <mbsnrtowcs>:
   2bad9:	f3 0f 1e fa          	endbr64 
   2badd:	55                   	push   %rbp
   2bade:	48 89 e5             	mov    %rsp,%rbp
   2bae1:	48 83 ec 40          	sub    $0x40,%rsp
   2bae5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2bae9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2baed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2baf1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   2baf5:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   2baf9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2bafe:	75 18                	jne    2bb18 <mbsnrtowcs+0x3f>
   2bb00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bb04:	48 8b 00             	mov    (%rax),%rax
   2bb07:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2bb0b:	48 89 d6             	mov    %rdx,%rsi
   2bb0e:	48 89 c7             	mov    %rax,%rdi
   2bb11:	e8 7b 07 00 00       	call   2c291 <strnlen>
   2bb16:	eb 7e                	jmp    2bb96 <mbsnrtowcs+0xbd>
   2bb18:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   2bb1f:	00 
   2bb20:	eb 47                	jmp    2bb69 <mbsnrtowcs+0x90>
   2bb22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bb26:	48 8b 10             	mov    (%rax),%rdx
   2bb29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb2d:	48 01 d0             	add    %rdx,%rax
   2bb30:	0f b6 00             	movzbl (%rax),%eax
   2bb33:	89 c1                	mov    %eax,%ecx
   2bb35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb39:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2bb40:	00 
   2bb41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bb45:	48 01 d0             	add    %rdx,%rax
   2bb48:	0f b6 d1             	movzbl %cl,%edx
   2bb4b:	89 10                	mov    %edx,(%rax)
   2bb4d:	8b 00                	mov    (%rax),%eax
   2bb4f:	85 c0                	test   %eax,%eax
   2bb51:	75 11                	jne    2bb64 <mbsnrtowcs+0x8b>
   2bb53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bb57:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2bb5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb62:	eb 32                	jmp    2bb96 <mbsnrtowcs+0xbd>
   2bb64:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   2bb69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb6d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   2bb71:	73 0a                	jae    2bb7d <mbsnrtowcs+0xa4>
   2bb73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb77:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   2bb7b:	72 a5                	jb     2bb22 <mbsnrtowcs+0x49>
   2bb7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bb81:	48 8b 10             	mov    (%rax),%rdx
   2bb84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb88:	48 01 c2             	add    %rax,%rdx
   2bb8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bb8f:	48 89 10             	mov    %rdx,(%rax)
   2bb92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bb96:	c9                   	leave  
   2bb97:	c3                   	ret    

000000000002bb98 <wcrtomb>:
   2bb98:	f3 0f 1e fa          	endbr64 
   2bb9c:	55                   	push   %rbp
   2bb9d:	48 89 e5             	mov    %rsp,%rbp
   2bba0:	48 83 ec 20          	sub    $0x20,%rsp
   2bba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2bba8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   2bbab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2bbaf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2bbb4:	75 07                	jne    2bbbd <wcrtomb+0x25>
   2bbb6:	b8 01 00 00 00       	mov    $0x1,%eax
   2bbbb:	eb 3b                	jmp    2bbf8 <wcrtomb+0x60>
   2bbbd:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2bbc1:	78 09                	js     2bbcc <wcrtomb+0x34>
   2bbc3:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
   2bbca:	7e 14                	jle    2bbe0 <wcrtomb+0x48>
   2bbcc:	e8 88 5d ff ff       	call   21959 <__errno>
   2bbd1:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2bbd7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2bbde:	eb 18                	jmp    2bbf8 <wcrtomb+0x60>
   2bbe0:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2bbe3:	0f b6 c0             	movzbl %al,%eax
   2bbe6:	89 c7                	mov    %eax,%edi
   2bbe8:	e8 1b fe ff ff       	call   2ba08 <wrapv>
   2bbed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2bbf1:	88 02                	mov    %al,(%rdx)
   2bbf3:	b8 01 00 00 00       	mov    $0x1,%eax
   2bbf8:	c9                   	leave  
   2bbf9:	c3                   	ret    

000000000002bbfa <wcsrtombs>:
   2bbfa:	f3 0f 1e fa          	endbr64 
   2bbfe:	55                   	push   %rbp
   2bbff:	48 89 e5             	mov    %rsp,%rbp
   2bc02:	48 83 ec 20          	sub    $0x20,%rsp
   2bc06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2bc0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2bc0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2bc12:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   2bc16:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2bc1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bc1e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2bc22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2bc26:	49 89 c8             	mov    %rcx,%r8
   2bc29:	48 89 d1             	mov    %rdx,%rcx
   2bc2c:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   2bc33:	48 89 c7             	mov    %rax,%rdi
   2bc36:	e8 02 00 00 00       	call   2bc3d <wcsnrtombs>
   2bc3b:	c9                   	leave  
   2bc3c:	c3                   	ret    

000000000002bc3d <wcsnrtombs>:
   2bc3d:	f3 0f 1e fa          	endbr64 
   2bc41:	55                   	push   %rbp
   2bc42:	48 89 e5             	mov    %rsp,%rbp
   2bc45:	53                   	push   %rbx
   2bc46:	48 83 ec 48          	sub    $0x48,%rsp
   2bc4a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2bc4e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2bc52:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2bc56:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   2bc5a:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   2bc5e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2bc63:	75 6e                	jne    2bcd3 <wcsnrtombs+0x96>
   2bc65:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2bc6c:	00 
   2bc6d:	eb 51                	jmp    2bcc0 <wcsnrtombs+0x83>
   2bc6f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bc73:	48 8b 00             	mov    (%rax),%rax
   2bc76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bc7a:	48 c1 e2 02          	shl    $0x2,%rdx
   2bc7e:	48 01 d0             	add    %rdx,%rax
   2bc81:	8b 00                	mov    (%rax),%eax
   2bc83:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2bc86:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2bc8a:	78 09                	js     2bc95 <wcsnrtombs+0x58>
   2bc8c:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
   2bc93:	7e 17                	jle    2bcac <wcsnrtombs+0x6f>
   2bc95:	e8 bf 5c ff ff       	call   21959 <__errno>
   2bc9a:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2bca0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2bca7:	e9 f3 00 00 00       	jmp    2bd9f <wcsnrtombs+0x162>
   2bcac:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   2bcb0:	75 09                	jne    2bcbb <wcsnrtombs+0x7e>
   2bcb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bcb6:	e9 e4 00 00 00       	jmp    2bd9f <wcsnrtombs+0x162>
   2bcbb:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2bcc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bcc4:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2bcc8:	72 a5                	jb     2bc6f <wcsnrtombs+0x32>
   2bcca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bcce:	e9 cc 00 00 00       	jmp    2bd9f <wcsnrtombs+0x162>
   2bcd3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   2bcda:	00 
   2bcdb:	e9 8a 00 00 00       	jmp    2bd6a <wcsnrtombs+0x12d>
   2bce0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bce4:	48 8b 00             	mov    (%rax),%rax
   2bce7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bceb:	48 c1 e2 02          	shl    $0x2,%rdx
   2bcef:	48 01 d0             	add    %rdx,%rax
   2bcf2:	8b 00                	mov    (%rax),%eax
   2bcf4:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2bcf7:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   2bcfb:	78 09                	js     2bd06 <wcsnrtombs+0xc9>
   2bcfd:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
   2bd04:	7e 2d                	jle    2bd33 <wcsnrtombs+0xf6>
   2bd06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bd0a:	48 8b 00             	mov    (%rax),%rax
   2bd0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bd11:	48 c1 e2 02          	shl    $0x2,%rdx
   2bd15:	48 01 c2             	add    %rax,%rdx
   2bd18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bd1c:	48 89 10             	mov    %rdx,(%rax)
   2bd1f:	e8 35 5c ff ff       	call   21959 <__errno>
   2bd24:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   2bd2a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2bd31:	eb 6c                	jmp    2bd9f <wcsnrtombs+0x162>
   2bd33:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2bd36:	0f b6 c0             	movzbl %al,%eax
   2bd39:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2bd3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bd41:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
   2bd45:	89 c7                	mov    %eax,%edi
   2bd47:	e8 bc fc ff ff       	call   2ba08 <wrapv>
   2bd4c:	88 03                	mov    %al,(%rbx)
   2bd4e:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
   2bd52:	75 11                	jne    2bd65 <wcsnrtombs+0x128>
   2bd54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bd58:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2bd5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bd63:	eb 3a                	jmp    2bd9f <wcsnrtombs+0x162>
   2bd65:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   2bd6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bd6e:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2bd72:	73 0e                	jae    2bd82 <wcsnrtombs+0x145>
   2bd74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bd78:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2bd7c:	0f 82 5e ff ff ff    	jb     2bce0 <wcsnrtombs+0xa3>
   2bd82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bd86:	48 8b 00             	mov    (%rax),%rax
   2bd89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2bd8d:	48 c1 e2 02          	shl    $0x2,%rdx
   2bd91:	48 01 c2             	add    %rax,%rdx
   2bd94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bd98:	48 89 10             	mov    %rdx,(%rax)
   2bd9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2bd9f:	48 83 c4 48          	add    $0x48,%rsp
   2bda3:	5b                   	pop    %rbx
   2bda4:	5d                   	pop    %rbp
   2bda5:	c3                   	ret    

000000000002bda6 <__sfvwrite>:
   2bda6:	f3 0f 1e fa          	endbr64 
   2bdaa:	55                   	push   %rbp
   2bdab:	48 89 e5             	mov    %rsp,%rbp
   2bdae:	48 83 ec 60          	sub    $0x60,%rsp
   2bdb2:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2bdb6:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2bdba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2bdbe:	8b 40 0c             	mov    0xc(%rax),%eax
   2bdc1:	48 98                	cltq   
   2bdc3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2bdc7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2bdcc:	75 0a                	jne    2bdd8 <__sfvwrite+0x32>
   2bdce:	b8 00 00 00 00       	mov    $0x0,%eax
   2bdd3:	e9 2c 04 00 00       	jmp    2c204 <__sfvwrite+0x45e>
   2bdd8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2bddc:	48 8b 00             	mov    (%rax),%rax
   2bddf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2bde3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bde7:	48 8b 00             	mov    (%rax),%rax
   2bdea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2bdee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2bdf2:	48 8b 40 08          	mov    0x8(%rax),%rax
   2bdf6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2bdfa:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2bdff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be03:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2be07:	98                   	cwtl   
   2be08:	83 e0 02             	and    $0x2,%eax
   2be0b:	85 c0                	test   %eax,%eax
   2be0d:	0f 85 c4 03 00 00    	jne    2c1d7 <__sfvwrite+0x431>
   2be13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be17:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2be1b:	98                   	cwtl   
   2be1c:	83 e0 01             	and    $0x1,%eax
   2be1f:	85 c0                	test   %eax,%eax
   2be21:	0f 85 45 02 00 00    	jne    2c06c <__sfvwrite+0x2c6>
   2be27:	eb 1c                	jmp    2be45 <__sfvwrite+0x9f>
   2be29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2be2d:	48 8b 00             	mov    (%rax),%rax
   2be30:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2be34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2be38:	48 8b 40 08          	mov    0x8(%rax),%rax
   2be3c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2be40:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2be45:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2be4a:	74 dd                	je     2be29 <__sfvwrite+0x83>
   2be4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be50:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2be54:	98                   	cwtl   
   2be55:	25 00 42 00 00       	and    $0x4200,%eax
   2be5a:	3d 00 42 00 00       	cmp    $0x4200,%eax
   2be5f:	0f 85 c7 00 00 00    	jne    2bf2c <__sfvwrite+0x186>
   2be65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be69:	8b 40 0c             	mov    0xc(%rax),%eax
   2be6c:	48 98                	cltq   
   2be6e:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2be72:	0f 86 b4 00 00 00    	jbe    2bf2c <__sfvwrite+0x186>
   2be78:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be7c:	48 8b 10             	mov    (%rax),%rdx
   2be7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be83:	48 8b 40 18          	mov    0x18(%rax),%rax
   2be87:	48 29 c2             	sub    %rax,%rdx
   2be8a:	48 89 d0             	mov    %rdx,%rax
   2be8d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2be91:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2be95:	8b 40 20             	mov    0x20(%rax),%eax
   2be98:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2be9b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2be9e:	01 c0                	add    %eax,%eax
   2bea0:	83 c0 01             	add    $0x1,%eax
   2bea3:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2bea6:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2bea9:	48 98                	cltq   
   2beab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2beaf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2beb3:	48 01 ca             	add    %rcx,%rdx
   2beb6:	48 39 d0             	cmp    %rdx,%rax
   2beb9:	72 e0                	jb     2be9b <__sfvwrite+0xf5>
   2bebb:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2bebe:	83 c0 01             	add    $0x1,%eax
   2bec1:	48 63 d0             	movslq %eax,%rdx
   2bec4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bec8:	48 8b 40 18          	mov    0x18(%rax),%rax
   2becc:	48 89 d6             	mov    %rdx,%rsi
   2becf:	48 89 c7             	mov    %rax,%rdi
   2bed2:	e8 c8 48 ff ff       	call   2079f <dlrealloc>
   2bed7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2bedb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2bee0:	0f 84 f4 02 00 00    	je     2c1da <__sfvwrite+0x434>
   2bee6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2beea:	8b 50 0c             	mov    0xc(%rax),%edx
   2beed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bef1:	8b 40 20             	mov    0x20(%rax),%eax
   2bef4:	8b 4d c8             	mov    -0x38(%rbp),%ecx
   2bef7:	29 c1                	sub    %eax,%ecx
   2bef9:	89 c8                	mov    %ecx,%eax
   2befb:	01 c2                	add    %eax,%edx
   2befd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf01:	89 50 0c             	mov    %edx,0xc(%rax)
   2bf04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2bf0c:	48 89 50 18          	mov    %rdx,0x18(%rax)
   2bf10:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf14:	8b 55 c8             	mov    -0x38(%rbp),%edx
   2bf17:	89 50 20             	mov    %edx,0x20(%rax)
   2bf1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2bf1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2bf22:	48 01 c2             	add    %rax,%rdx
   2bf25:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf29:	48 89 10             	mov    %rdx,(%rax)
   2bf2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf30:	8b 40 0c             	mov    0xc(%rax),%eax
   2bf33:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2bf36:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf3a:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2bf3e:	98                   	cwtl   
   2bf3f:	25 00 02 00 00       	and    $0x200,%eax
   2bf44:	85 c0                	test   %eax,%eax
   2bf46:	74 63                	je     2bfab <__sfvwrite+0x205>
   2bf48:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bf4b:	48 98                	cltq   
   2bf4d:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2bf51:	73 07                	jae    2bf5a <__sfvwrite+0x1b4>
   2bf53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bf57:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2bf5a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bf5d:	48 63 d0             	movslq %eax,%rdx
   2bf60:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf64:	48 8b 00             	mov    (%rax),%rax
   2bf67:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2bf6b:	48 89 ce             	mov    %rcx,%rsi
   2bf6e:	48 89 c7             	mov    %rax,%rdi
   2bf71:	e8 09 4f ff ff       	call   20e7f <memcpy>
   2bf76:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf7a:	8b 40 0c             	mov    0xc(%rax),%eax
   2bf7d:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2bf80:	89 c2                	mov    %eax,%edx
   2bf82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf86:	89 50 0c             	mov    %edx,0xc(%rax)
   2bf89:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf8d:	48 8b 10             	mov    (%rax),%rdx
   2bf90:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bf93:	48 98                	cltq   
   2bf95:	48 01 c2             	add    %rax,%rdx
   2bf98:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bf9c:	48 89 10             	mov    %rdx,(%rax)
   2bf9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bfa3:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2bfa6:	e9 88 00 00 00       	jmp    2c033 <__sfvwrite+0x28d>
   2bfab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bfaf:	48 8b 10             	mov    (%rax),%rdx
   2bfb2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bfb6:	48 8b 40 18          	mov    0x18(%rax),%rax
   2bfba:	48 39 c2             	cmp    %rax,%rdx
   2bfbd:	76 0f                	jbe    2bfce <__sfvwrite+0x228>
   2bfbf:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bfc2:	48 98                	cltq   
   2bfc4:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2bfc8:	0f 87 0f 02 00 00    	ja     2c1dd <__sfvwrite+0x437>
   2bfce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bfd2:	8b 40 20             	mov    0x20(%rax),%eax
   2bfd5:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2bfd8:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bfdb:	48 98                	cltq   
   2bfdd:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2bfe1:	0f 83 f9 01 00 00    	jae    2c1e0 <__sfvwrite+0x43a>
   2bfe7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2bfeb:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2bfee:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2bff1:	48 63 d0             	movslq %eax,%rdx
   2bff4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2bff8:	48 8b 00             	mov    (%rax),%rax
   2bffb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2bfff:	48 89 ce             	mov    %rcx,%rsi
   2c002:	48 89 c7             	mov    %rax,%rdi
   2c005:	e8 75 4e ff ff       	call   20e7f <memcpy>
   2c00a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c00e:	8b 40 0c             	mov    0xc(%rax),%eax
   2c011:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2c014:	89 c2                	mov    %eax,%edx
   2c016:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c01a:	89 50 0c             	mov    %edx,0xc(%rax)
   2c01d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c021:	48 8b 10             	mov    (%rax),%rdx
   2c024:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c027:	48 98                	cltq   
   2c029:	48 01 c2             	add    %rax,%rdx
   2c02c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c030:	48 89 10             	mov    %rdx,(%rax)
   2c033:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c036:	48 98                	cltq   
   2c038:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   2c03c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c03f:	48 98                	cltq   
   2c041:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   2c045:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c049:	8b 40 0c             	mov    0xc(%rax),%eax
   2c04c:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2c04f:	89 c2                	mov    %eax,%edx
   2c051:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c055:	89 50 0c             	mov    %edx,0xc(%rax)
   2c058:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c05c:	8b 40 0c             	mov    0xc(%rax),%eax
   2c05f:	85 c0                	test   %eax,%eax
   2c061:	0f 85 de fd ff ff    	jne    2be45 <__sfvwrite+0x9f>
   2c067:	e9 64 01 00 00       	jmp    2c1d0 <__sfvwrite+0x42a>
   2c06c:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2c073:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
   2c07a:	eb 23                	jmp    2c09f <__sfvwrite+0x2f9>
   2c07c:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   2c083:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2c087:	48 8b 00             	mov    (%rax),%rax
   2c08a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2c08e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2c092:	48 8b 40 08          	mov    0x8(%rax),%rax
   2c096:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2c09a:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   2c09f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2c0a4:	74 d6                	je     2c07c <__sfvwrite+0x2d6>
   2c0a6:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   2c0aa:	75 3f                	jne    2c0eb <__sfvwrite+0x345>
   2c0ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2c0b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c0b4:	be 0a 00 00 00       	mov    $0xa,%esi
   2c0b9:	48 89 c7             	mov    %rax,%rdi
   2c0bc:	e8 ce bf ff ff       	call   2808f <memchr>
   2c0c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c0c5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   2c0ca:	74 0e                	je     2c0da <__sfvwrite+0x334>
   2c0cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c0d0:	48 83 c0 01          	add    $0x1,%rax
   2c0d4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   2c0d8:	eb 07                	jmp    2c0e1 <__sfvwrite+0x33b>
   2c0da:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2c0de:	83 c0 01             	add    $0x1,%eax
   2c0e1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   2c0e4:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   2c0eb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2c0ee:	48 98                	cltq   
   2c0f0:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
   2c0f4:	48 0f 46 45 d0       	cmovbe -0x30(%rbp),%rax
   2c0f9:	89 45 cc             	mov    %eax,-0x34(%rbp)
   2c0fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c100:	8b 50 0c             	mov    0xc(%rax),%edx
   2c103:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c107:	8b 40 20             	mov    0x20(%rax),%eax
   2c10a:	01 d0                	add    %edx,%eax
   2c10c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2c10f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c113:	48 8b 10             	mov    (%rax),%rdx
   2c116:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c11a:	48 8b 40 18          	mov    0x18(%rax),%rax
   2c11e:	48 39 c2             	cmp    %rax,%rdx
   2c121:	76 0c                	jbe    2c12f <__sfvwrite+0x389>
   2c123:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c126:	3b 45 bc             	cmp    -0x44(%rbp),%eax
   2c129:	0f 8f b4 00 00 00    	jg     2c1e3 <__sfvwrite+0x43d>
   2c12f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c133:	8b 40 20             	mov    0x20(%rax),%eax
   2c136:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2c139:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c13c:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   2c13f:	0f 8e a1 00 00 00    	jle    2c1e6 <__sfvwrite+0x440>
   2c145:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c148:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2c14b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c14e:	48 63 d0             	movslq %eax,%rdx
   2c151:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c155:	48 8b 00             	mov    (%rax),%rax
   2c158:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2c15c:	48 89 ce             	mov    %rcx,%rsi
   2c15f:	48 89 c7             	mov    %rax,%rdi
   2c162:	e8 18 4d ff ff       	call   20e7f <memcpy>
   2c167:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c16b:	8b 40 0c             	mov    0xc(%rax),%eax
   2c16e:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2c171:	89 c2                	mov    %eax,%edx
   2c173:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c177:	89 50 0c             	mov    %edx,0xc(%rax)
   2c17a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c17e:	48 8b 10             	mov    (%rax),%rdx
   2c181:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c184:	48 98                	cltq   
   2c186:	48 01 c2             	add    %rax,%rdx
   2c189:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c18d:	48 89 10             	mov    %rdx,(%rax)
   2c190:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c193:	29 45 c4             	sub    %eax,-0x3c(%rbp)
   2c196:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   2c19a:	74 4d                	je     2c1e9 <__sfvwrite+0x443>
   2c19c:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c19f:	48 98                	cltq   
   2c1a1:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   2c1a5:	8b 45 bc             	mov    -0x44(%rbp),%eax
   2c1a8:	48 98                	cltq   
   2c1aa:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   2c1ae:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c1b2:	8b 40 0c             	mov    0xc(%rax),%eax
   2c1b5:	2b 45 bc             	sub    -0x44(%rbp),%eax
   2c1b8:	89 c2                	mov    %eax,%edx
   2c1ba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c1be:	89 50 0c             	mov    %edx,0xc(%rax)
   2c1c1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2c1c5:	8b 40 0c             	mov    0xc(%rax),%eax
   2c1c8:	85 c0                	test   %eax,%eax
   2c1ca:	0f 85 cf fe ff ff    	jne    2c09f <__sfvwrite+0x2f9>
   2c1d0:	b8 00 00 00 00       	mov    $0x0,%eax
   2c1d5:	eb 2d                	jmp    2c204 <__sfvwrite+0x45e>
   2c1d7:	90                   	nop
   2c1d8:	eb 10                	jmp    2c1ea <__sfvwrite+0x444>
   2c1da:	90                   	nop
   2c1db:	eb 0d                	jmp    2c1ea <__sfvwrite+0x444>
   2c1dd:	90                   	nop
   2c1de:	eb 0a                	jmp    2c1ea <__sfvwrite+0x444>
   2c1e0:	90                   	nop
   2c1e1:	eb 07                	jmp    2c1ea <__sfvwrite+0x444>
   2c1e3:	90                   	nop
   2c1e4:	eb 04                	jmp    2c1ea <__sfvwrite+0x444>
   2c1e6:	90                   	nop
   2c1e7:	eb 01                	jmp    2c1ea <__sfvwrite+0x444>
   2c1e9:	90                   	nop
   2c1ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c1ee:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   2c1f2:	83 c8 40             	or     $0x40,%eax
   2c1f5:	89 c2                	mov    %eax,%edx
   2c1f7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c1fb:	66 89 50 10          	mov    %dx,0x10(%rax)
   2c1ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2c204:	c9                   	leave  
   2c205:	c3                   	ret    
   2c206:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2c20d:	00 00 00 

000000000002c210 <_libc__memchr>:
   2c210:	40 88 f0             	mov    %sil,%al
   2c213:	48 89 d1             	mov    %rdx,%rcx
   2c216:	48 85 c9             	test   %rcx,%rcx
   2c219:	74 0b                	je     2c226 <L1>
   2c21b:	fc                   	cld    
   2c21c:	f2 ae                	repnz scas %es:(%rdi),%al
   2c21e:	75 06                	jne    2c226 <L1>
   2c220:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   2c224:	eb 03                	jmp    2c229 <L2>

000000000002c226 <L1>:
   2c226:	48 31 c0             	xor    %rax,%rax

000000000002c229 <L2>:
   2c229:	c3                   	ret    
   2c22a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002c230 <_bcopy>:
   2c230:	48 87 fe             	xchg   %rdi,%rsi
   2c233:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   2c23a:	00 00 00 00 
   2c23e:	66 90                	xchg   %ax,%ax

000000000002c240 <__memmove>:
   2c240:	49 89 fb             	mov    %rdi,%r11
   2c243:	48 89 d1             	mov    %rdx,%rcx
   2c246:	48 89 f8             	mov    %rdi,%rax
   2c249:	48 29 f0             	sub    %rsi,%rax
   2c24c:	48 39 c8             	cmp    %rcx,%rax
   2c24f:	72 16                	jb     2c267 <__memmove+0x27>
   2c251:	fc                   	cld    
   2c252:	48 c1 e9 03          	shr    $0x3,%rcx
   2c256:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   2c259:	48 89 d1             	mov    %rdx,%rcx
   2c25c:	48 83 e1 07          	and    $0x7,%rcx
   2c260:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2c262:	4c 89 d8             	mov    %r11,%rax
   2c265:	eb 29                	jmp    2c290 <__memmove+0x50>
   2c267:	48 01 cf             	add    %rcx,%rdi
   2c26a:	48 01 ce             	add    %rcx,%rsi
   2c26d:	fd                   	std    
   2c26e:	48 83 e1 07          	and    $0x7,%rcx
   2c272:	48 ff cf             	dec    %rdi
   2c275:	48 ff ce             	dec    %rsi
   2c278:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   2c27a:	48 89 d1             	mov    %rdx,%rcx
   2c27d:	48 c1 e9 03          	shr    $0x3,%rcx
   2c281:	48 83 ee 07          	sub    $0x7,%rsi
   2c285:	48 83 ef 07          	sub    $0x7,%rdi
   2c289:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   2c28c:	4c 89 d8             	mov    %r11,%rax
   2c28f:	fc                   	cld    
   2c290:	c3                   	ret    

000000000002c291 <strnlen>:
   2c291:	f3 0f 1e fa          	endbr64 
   2c295:	55                   	push   %rbp
   2c296:	48 89 e5             	mov    %rsp,%rbp
   2c299:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2c29d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2c2a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c2a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c2a9:	eb 0a                	jmp    2c2b5 <strnlen+0x24>
   2c2ab:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   2c2b0:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   2c2b5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2c2ba:	74 0b                	je     2c2c7 <strnlen+0x36>
   2c2bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c2c0:	0f b6 00             	movzbl (%rax),%eax
   2c2c3:	84 c0                	test   %al,%al
   2c2c5:	75 e4                	jne    2c2ab <strnlen+0x1a>
   2c2c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2c2cb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2c2cf:	5d                   	pop    %rbp
   2c2d0:	c3                   	ret    

000000000002c2d1 <bitstob>:
   2c2d1:	f3 0f 1e fa          	endbr64 
   2c2d5:	55                   	push   %rbp
   2c2d6:	48 89 e5             	mov    %rsp,%rbp
   2c2d9:	53                   	push   %rbx
   2c2da:	48 83 ec 58          	sub    $0x58,%rsp
   2c2de:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   2c2e2:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   2c2e5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   2c2e9:	c7 45 c8 20 00 00 00 	movl   $0x20,-0x38(%rbp)
   2c2f0:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   2c2f7:	eb 07                	jmp    2c300 <bitstob+0x2f>
   2c2f9:	d1 65 c8             	shll   -0x38(%rbp)
   2c2fc:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   2c300:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2c303:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
   2c306:	7c f1                	jl     2c2f9 <bitstob+0x28>
   2c308:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2c30b:	89 c7                	mov    %eax,%edi
   2c30d:	e8 6d e3 ff ff       	call   2a67f <__Balloc_D2A>
   2c312:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2c316:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2c31b:	75 0a                	jne    2c327 <bitstob+0x56>
   2c31d:	b8 00 00 00 00       	mov    $0x0,%eax
   2c322:	e9 e0 00 00 00       	jmp    2c407 <bitstob+0x136>
   2c327:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   2c32a:	83 e8 01             	sub    $0x1,%eax
   2c32d:	c1 f8 05             	sar    $0x5,%eax
   2c330:	48 98                	cltq   
   2c332:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2c339:	00 
   2c33a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c33e:	48 01 d0             	add    %rdx,%rax
   2c341:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2c345:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c349:	48 83 c0 18          	add    $0x18,%rax
   2c34d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c355:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2c359:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2c35d:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2c361:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   2c365:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   2c369:	8b 12                	mov    (%rdx),%edx
   2c36b:	89 10                	mov    %edx,(%rax)
   2c36d:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
   2c372:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2c376:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2c37a:	76 dd                	jbe    2c359 <bitstob+0x88>
   2c37c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2c380:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2c384:	48 c1 f8 02          	sar    $0x2,%rax
   2c388:	89 45 c8             	mov    %eax,-0x38(%rbp)
   2c38b:	eb 1d                	jmp    2c3aa <bitstob+0xd9>
   2c38d:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   2c391:	75 17                	jne    2c3aa <bitstob+0xd9>
   2c393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c397:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   2c39e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c3a2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2c3a8:	eb 59                	jmp    2c403 <bitstob+0x132>
   2c3aa:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
   2c3ae:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2c3b1:	48 98                	cltq   
   2c3b3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2c3ba:	00 
   2c3bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2c3bf:	48 01 d0             	add    %rdx,%rax
   2c3c2:	8b 00                	mov    (%rax),%eax
   2c3c4:	85 c0                	test   %eax,%eax
   2c3c6:	74 c5                	je     2c38d <bitstob+0xbc>
   2c3c8:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2c3cb:	8d 50 01             	lea    0x1(%rax),%edx
   2c3ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c3d2:	89 50 14             	mov    %edx,0x14(%rax)
   2c3d5:	8b 45 c8             	mov    -0x38(%rbp),%eax
   2c3d8:	83 c0 01             	add    $0x1,%eax
   2c3db:	c1 e0 05             	shl    $0x5,%eax
   2c3de:	89 c3                	mov    %eax,%ebx
   2c3e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c3e4:	8b 55 c8             	mov    -0x38(%rbp),%edx
   2c3e7:	48 63 d2             	movslq %edx,%rdx
   2c3ea:	48 83 c2 04          	add    $0x4,%rdx
   2c3ee:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   2c3f2:	89 c7                	mov    %eax,%edi
   2c3f4:	e8 8c e6 ff ff       	call   2aa85 <__hi0bits_D2A>
   2c3f9:	29 c3                	sub    %eax,%ebx
   2c3fb:	89 da                	mov    %ebx,%edx
   2c3fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2c401:	89 10                	mov    %edx,(%rax)
   2c403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2c407:	48 83 c4 58          	add    $0x58,%rsp
   2c40b:	5b                   	pop    %rbx
   2c40c:	5d                   	pop    %rbp
   2c40d:	c3                   	ret    

000000000002c40e <__gdtoa>:
   2c40e:	f3 0f 1e fa          	endbr64 
   2c412:	55                   	push   %rbp
   2c413:	48 89 e5             	mov    %rsp,%rbp
   2c416:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   2c41d:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   2c424:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
   2c42a:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   2c431:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
   2c438:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
   2c43f:	44 89 8d fc fe ff ff 	mov    %r9d,-0x104(%rbp)
   2c446:	48 8b 45 10          	mov    0x10(%rbp),%rax
   2c44a:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   2c451:	48 8b 45 18          	mov    0x18(%rbp),%rax
   2c455:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   2c45c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2c463:	00 00 
   2c465:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2c469:	31 c0                	xor    %eax,%eax
   2c46b:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
   2c472:	00 00 00 
   2c475:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2c47c:	8b 00                	mov    (%rax),%eax
   2c47e:	83 e0 cf             	and    $0xffffffcf,%eax
   2c481:	89 c2                	mov    %eax,%edx
   2c483:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2c48a:	89 10                	mov    %edx,(%rax)
   2c48c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2c493:	8b 00                	mov    (%rax),%eax
   2c495:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   2c49b:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   2c4a1:	83 e0 0f             	and    $0xf,%eax
   2c4a4:	83 f8 04             	cmp    $0x4,%eax
   2c4a7:	0f 84 9b 00 00 00    	je     2c548 <__gdtoa+0x13a>
   2c4ad:	83 f8 04             	cmp    $0x4,%eax
   2c4b0:	0f 8f bf 00 00 00    	jg     2c575 <__gdtoa+0x167>
   2c4b6:	83 f8 03             	cmp    $0x3,%eax
   2c4b9:	74 60                	je     2c51b <__gdtoa+0x10d>
   2c4bb:	83 f8 03             	cmp    $0x3,%eax
   2c4be:	0f 8f b1 00 00 00    	jg     2c575 <__gdtoa+0x167>
   2c4c4:	85 c0                	test   %eax,%eax
   2c4c6:	0f 84 34 01 00 00    	je     2c600 <__gdtoa+0x1f2>
   2c4cc:	85 c0                	test   %eax,%eax
   2c4ce:	0f 88 a1 00 00 00    	js     2c575 <__gdtoa+0x167>
   2c4d4:	83 e8 01             	sub    $0x1,%eax
   2c4d7:	83 f8 01             	cmp    $0x1,%eax
   2c4da:	0f 87 95 00 00 00    	ja     2c575 <__gdtoa+0x167>
   2c4e0:	90                   	nop
   2c4e1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2c4e8:	8b 00                	mov    (%rax),%eax
   2c4ea:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
   2c4f0:	48 8d 95 24 ff ff ff 	lea    -0xdc(%rbp),%rdx
   2c4f7:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
   2c4fd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2c504:	89 ce                	mov    %ecx,%esi
   2c506:	48 89 c7             	mov    %rax,%rdi
   2c509:	e8 c3 fd ff ff       	call   2c2d1 <bitstob>
   2c50e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2c512:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2c517:	75 70                	jne    2c589 <__gdtoa+0x17b>
   2c519:	eb 64                	jmp    2c57f <__gdtoa+0x171>
   2c51b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2c522:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   2c528:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2c52f:	ba 08 00 00 00       	mov    $0x8,%edx
   2c534:	48 89 c6             	mov    %rax,%rsi
   2c537:	48 8d 3d 62 59 00 00 	lea    0x5962(%rip),%rdi        # 31ea0 <__tens_D2A+0xc0>
   2c53e:	e8 b9 bd ff ff       	call   282fc <__nrv_alloc_D2A>
   2c543:	e9 dc 19 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2c548:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2c54f:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   2c555:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2c55c:	ba 03 00 00 00       	mov    $0x3,%edx
   2c561:	48 89 c6             	mov    %rax,%rsi
   2c564:	48 8d 3d 3e 59 00 00 	lea    0x593e(%rip),%rdi        # 31ea9 <__tens_D2A+0xc9>
   2c56b:	e8 8c bd ff ff       	call   282fc <__nrv_alloc_D2A>
   2c570:	e9 af 19 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2c575:	b8 00 00 00 00       	mov    $0x0,%eax
   2c57a:	e9 a5 19 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2c57f:	b8 00 00 00 00       	mov    $0x0,%eax
   2c584:	e9 9b 19 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2c589:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   2c58f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   2c595:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2c599:	48 89 c7             	mov    %rax,%rdi
   2c59c:	e8 ee 1a 00 00       	call   2e08f <__trailz_D2A>
   2c5a1:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2c5a7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c5ad:	85 c0                	test   %eax,%eax
   2c5af:	74 36                	je     2c5e7 <__gdtoa+0x1d9>
   2c5b1:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   2c5b7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2c5bb:	89 d6                	mov    %edx,%esi
   2c5bd:	48 89 c7             	mov    %rax,%rdi
   2c5c0:	e8 75 19 00 00       	call   2df3a <__rshift_D2A>
   2c5c5:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c5cb:	01 85 14 ff ff ff    	add    %eax,-0xec(%rbp)
   2c5d1:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2c5d7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c5dd:	29 c2                	sub    %eax,%edx
   2c5df:	89 d0                	mov    %edx,%eax
   2c5e1:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
   2c5e7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2c5eb:	8b 40 14             	mov    0x14(%rax),%eax
   2c5ee:	85 c0                	test   %eax,%eax
   2c5f0:	75 3c                	jne    2c62e <__gdtoa+0x220>
   2c5f2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2c5f6:	48 89 c7             	mov    %rax,%rdi
   2c5f9:	e8 c7 e1 ff ff       	call   2a7c5 <__Bfree_D2A>
   2c5fe:	eb 01                	jmp    2c601 <__gdtoa+0x1f3>
   2c600:	90                   	nop
   2c601:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2c608:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2c60e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2c615:	ba 01 00 00 00       	mov    $0x1,%edx
   2c61a:	48 89 c6             	mov    %rax,%rsi
   2c61d:	48 8d 3d 89 58 00 00 	lea    0x5889(%rip),%rdi        # 31ead <__tens_D2A+0xcd>
   2c624:	e8 d3 bc ff ff       	call   282fc <__nrv_alloc_D2A>
   2c629:	e9 f6 18 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2c62e:	48 8d 95 28 ff ff ff 	lea    -0xd8(%rbp),%rdx
   2c635:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2c639:	48 89 d6             	mov    %rdx,%rsi
   2c63c:	48 89 c7             	mov    %rax,%rdi
   2c63f:	e8 b2 ee ff ff       	call   2b4f6 <__b2d_D2A>
   2c644:	66 48 0f 7e c0       	movq   %xmm0,%rax
   2c649:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2c64d:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2c653:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
   2c659:	01 d0                	add    %edx,%eax
   2c65b:	83 e8 01             	sub    $0x1,%eax
   2c65e:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2c664:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2c667:	25 ff ff 0f 00       	and    $0xfffff,%eax
   2c66c:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2c66f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2c672:	0d 00 00 f0 3f       	or     $0x3ff00000,%eax
   2c677:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2c67a:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2c67f:	f2 0f 10 0d 29 58 00 	movsd  0x5829(%rip),%xmm1        # 31eb0 <__tens_D2A+0xd0>
   2c686:	00 
   2c687:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2c68b:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2c68f:	f2 0f 10 05 21 58 00 	movsd  0x5821(%rip),%xmm0        # 31eb8 <__tens_D2A+0xd8>
   2c696:	00 
   2c697:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2c69b:	f2 0f 10 05 1d 58 00 	movsd  0x581d(%rip),%xmm0        # 31ec0 <__tens_D2A+0xe0>
   2c6a2:	00 
   2c6a3:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2c6a7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c6ad:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   2c6b1:	f2 0f 10 05 0f 58 00 	movsd  0x580f(%rip),%xmm0        # 31ec8 <__tens_D2A+0xe8>
   2c6b8:	00 
   2c6b9:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2c6bd:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2c6c1:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2c6c6:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c6cc:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2c6d2:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2c6d9:	79 06                	jns    2c6e1 <__gdtoa+0x2d3>
   2c6db:	f7 9d 48 ff ff ff    	negl   -0xb8(%rbp)
   2c6e1:	81 ad 48 ff ff ff 35 	subl   $0x435,-0xb8(%rbp)
   2c6e8:	04 00 00 
   2c6eb:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2c6f2:	7e 22                	jle    2c716 <__gdtoa+0x308>
   2c6f4:	f2 0f 2a 8d 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm1
   2c6fb:	ff 
   2c6fc:	f2 0f 10 05 cc 57 00 	movsd  0x57cc(%rip),%xmm0        # 31ed0 <__tens_D2A+0xf0>
   2c703:	00 
   2c704:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2c708:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2c70d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2c711:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2c716:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2c71b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2c71f:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2c725:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2c729:	66 0f 2f 45 b0       	comisd -0x50(%rbp),%xmm0
   2c72e:	76 1d                	jbe    2c74d <__gdtoa+0x33f>
   2c730:	f2 0f 2a 85 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm0
   2c737:	ff 
   2c738:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2c73d:	7a 07                	jp     2c746 <__gdtoa+0x338>
   2c73f:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2c744:	74 07                	je     2c74d <__gdtoa+0x33f>
   2c746:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2c74d:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   2c754:	00 00 00 
   2c757:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2c75a:	8b 8d 24 ff ff ff    	mov    -0xdc(%rbp),%ecx
   2c760:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2c766:	01 ca                	add    %ecx,%edx
   2c768:	83 ea 01             	sub    $0x1,%edx
   2c76b:	c1 e2 14             	shl    $0x14,%edx
   2c76e:	01 d0                	add    %edx,%eax
   2c770:	89 45 ec             	mov    %eax,-0x14(%rbp)
   2c773:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2c77a:	78 41                	js     2c7bd <__gdtoa+0x3af>
   2c77c:	83 bd 4c ff ff ff 16 	cmpl   $0x16,-0xb4(%rbp)
   2c783:	7f 38                	jg     2c7bd <__gdtoa+0x3af>
   2c785:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2c78a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c790:	48 98                	cltq   
   2c792:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2c799:	00 
   2c79a:	48 8d 05 3f 56 00 00 	lea    0x563f(%rip),%rax        # 31de0 <__tens_D2A>
   2c7a1:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2c7a6:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2c7aa:	76 07                	jbe    2c7b3 <__gdtoa+0x3a5>
   2c7ac:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2c7b3:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
   2c7ba:	00 00 00 
   2c7bd:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
   2c7c3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c7c9:	29 c2                	sub    %eax,%edx
   2c7cb:	89 d0                	mov    %edx,%eax
   2c7cd:	83 e8 01             	sub    $0x1,%eax
   2c7d0:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2c7d6:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2c7dd:	78 18                	js     2c7f7 <__gdtoa+0x3e9>
   2c7df:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
   2c7e6:	00 00 00 
   2c7e9:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2c7ef:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
   2c7f5:	eb 18                	jmp    2c80f <__gdtoa+0x401>
   2c7f7:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2c7fd:	f7 d8                	neg    %eax
   2c7ff:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
   2c805:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   2c80c:	00 00 00 
   2c80f:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2c816:	78 24                	js     2c83c <__gdtoa+0x42e>
   2c818:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
   2c81f:	00 00 00 
   2c822:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c828:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   2c82e:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c834:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2c83a:	eb 24                	jmp    2c860 <__gdtoa+0x452>
   2c83c:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c842:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   2c848:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c84e:	f7 d8                	neg    %eax
   2c850:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   2c856:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
   2c85d:	00 00 00 
   2c860:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2c867:	78 09                	js     2c872 <__gdtoa+0x464>
   2c869:	83 bd 10 ff ff ff 09 	cmpl   $0x9,-0xf0(%rbp)
   2c870:	7e 0a                	jle    2c87c <__gdtoa+0x46e>
   2c872:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   2c879:	00 00 00 
   2c87c:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%rbp)
   2c883:	00 00 00 
   2c886:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2c88d:	7e 13                	jle    2c8a2 <__gdtoa+0x494>
   2c88f:	83 ad 10 ff ff ff 04 	subl   $0x4,-0xf0(%rbp)
   2c896:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   2c89d:	00 00 00 
   2c8a0:	eb 24                	jmp    2c8c6 <__gdtoa+0x4b8>
   2c8a2:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c8a8:	3d f9 03 00 00       	cmp    $0x3f9,%eax
   2c8ad:	7f 0d                	jg     2c8bc <__gdtoa+0x4ae>
   2c8af:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c8b5:	3d 02 fc ff ff       	cmp    $0xfffffc02,%eax
   2c8ba:	7d 0a                	jge    2c8c6 <__gdtoa+0x4b8>
   2c8bc:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   2c8c3:	00 00 00 
   2c8c6:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
   2c8cd:	00 00 00 
   2c8d0:	c7 85 40 ff ff ff ff 	movl   $0xffffffff,-0xc0(%rbp)
   2c8d7:	ff ff ff 
   2c8da:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2c8e0:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2c8e6:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2c8ed:	0f 87 ea 00 00 00    	ja     2c9dd <__gdtoa+0x5cf>
   2c8f3:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   2c8f9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2c900:	00 
   2c901:	48 8d 05 10 56 00 00 	lea    0x5610(%rip),%rax        # 31f18 <__tens_D2A+0x138>
   2c908:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   2c90b:	48 98                	cltq   
   2c90d:	48 8d 15 04 56 00 00 	lea    0x5604(%rip),%rdx        # 31f18 <__tens_D2A+0x138>
   2c914:	48 01 d0             	add    %rdx,%rax
   2c917:	3e ff e0             	notrack jmp *%rax
   2c91a:	f2 0f 2a 8d 78 ff ff 	cvtsi2sdl -0x88(%rbp),%xmm1
   2c921:	ff 
   2c922:	f2 0f 10 05 ae 55 00 	movsd  0x55ae(%rip),%xmm0        # 31ed8 <__tens_D2A+0xf8>
   2c929:	00 
   2c92a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2c92e:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2c932:	83 c0 03             	add    $0x3,%eax
   2c935:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2c93b:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%rbp)
   2c942:	00 00 00 
   2c945:	e9 93 00 00 00       	jmp    2c9dd <__gdtoa+0x5cf>
   2c94a:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   2c951:	00 00 00 
   2c954:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   2c95b:	7f 0a                	jg     2c967 <__gdtoa+0x559>
   2c95d:	c7 85 fc fe ff ff 01 	movl   $0x1,-0x104(%rbp)
   2c964:	00 00 00 
   2c967:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   2c96d:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2c973:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c979:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   2c97f:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2c985:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2c98b:	eb 50                	jmp    2c9dd <__gdtoa+0x5cf>
   2c98d:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
   2c994:	00 00 00 
   2c997:	8b 95 fc fe ff ff    	mov    -0x104(%rbp),%edx
   2c99d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2c9a3:	01 d0                	add    %edx,%eax
   2c9a5:	83 c0 01             	add    $0x1,%eax
   2c9a8:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2c9ae:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c9b4:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2c9ba:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c9c0:	83 e8 01             	sub    $0x1,%eax
   2c9c3:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   2c9c9:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c9cf:	85 c0                	test   %eax,%eax
   2c9d1:	7f 0a                	jg     2c9dd <__gdtoa+0x5cf>
   2c9d3:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2c9da:	00 00 00 
   2c9dd:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2c9e3:	89 c7                	mov    %eax,%edi
   2c9e5:	e8 aa b8 ff ff       	call   28294 <__rv_alloc_D2A>
   2c9ea:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2c9ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2c9f2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2c9f6:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   2c9fb:	75 0a                	jne    2ca07 <__gdtoa+0x5f9>
   2c9fd:	b8 00 00 00 00       	mov    $0x0,%eax
   2ca02:	e9 1d 15 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2ca07:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2ca0e:	8b 40 0c             	mov    0xc(%rax),%eax
   2ca11:	83 e8 01             	sub    $0x1,%eax
   2ca14:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2ca1a:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ca21:	74 33                	je     2ca56 <__gdtoa+0x648>
   2ca23:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ca2a:	79 0a                	jns    2ca36 <__gdtoa+0x628>
   2ca2c:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
   2ca33:	00 00 00 
   2ca36:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   2ca3c:	25 00 01 00 00       	and    $0x100,%eax
   2ca41:	85 c0                	test   %eax,%eax
   2ca43:	74 11                	je     2ca56 <__gdtoa+0x648>
   2ca45:	b8 03 00 00 00       	mov    $0x3,%eax
   2ca4a:	2b 85 60 ff ff ff    	sub    -0xa0(%rbp),%eax
   2ca50:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   2ca56:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2ca5d:	0f 88 80 05 00 00    	js     2cfe3 <__gdtoa+0xbd5>
   2ca63:	83 bd 3c ff ff ff 0e 	cmpl   $0xe,-0xc4(%rbp)
   2ca6a:	0f 8f 73 05 00 00    	jg     2cfe3 <__gdtoa+0xbd5>
   2ca70:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   2ca77:	0f 84 66 05 00 00    	je     2cfe3 <__gdtoa+0xbd5>
   2ca7d:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2ca84:	0f 85 59 05 00 00    	jne    2cfe3 <__gdtoa+0xbd5>
   2ca8a:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2ca91:	0f 85 4c 05 00 00    	jne    2cfe3 <__gdtoa+0xbd5>
   2ca97:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2ca9e:	00 00 00 
   2caa1:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2caa6:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
   2caab:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2cab1:	89 45 80             	mov    %eax,-0x80(%rbp)
   2cab4:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2caba:	89 45 84             	mov    %eax,-0x7c(%rbp)
   2cabd:	c7 85 38 ff ff ff 02 	movl   $0x2,-0xc8(%rbp)
   2cac4:	00 00 00 
   2cac7:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   2cace:	0f 8e c7 00 00 00    	jle    2cb9b <__gdtoa+0x78d>
   2cad4:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2cada:	83 e0 0f             	and    $0xf,%eax
   2cadd:	48 98                	cltq   
   2cadf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cae6:	00 
   2cae7:	48 8d 05 f2 52 00 00 	lea    0x52f2(%rip),%rax        # 31de0 <__tens_D2A>
   2caee:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2caf3:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2caf8:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2cafe:	c1 f8 04             	sar    $0x4,%eax
   2cb01:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2cb07:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2cb0d:	83 e0 10             	and    $0x10,%eax
   2cb10:	85 c0                	test   %eax,%eax
   2cb12:	74 79                	je     2cb8d <__gdtoa+0x77f>
   2cb14:	83 a5 48 ff ff ff 0f 	andl   $0xf,-0xb8(%rbp)
   2cb1b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cb20:	f2 0f 10 0d 58 52 00 	movsd  0x5258(%rip),%xmm1        # 31d80 <__bigtens_D2A+0x20>
   2cb27:	00 
   2cb28:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2cb2c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cb31:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2cb38:	eb 53                	jmp    2cb8d <__gdtoa+0x77f>
   2cb3a:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2cb40:	83 e0 01             	and    $0x1,%eax
   2cb43:	85 c0                	test   %eax,%eax
   2cb45:	74 31                	je     2cb78 <__gdtoa+0x76a>
   2cb47:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2cb4e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cb54:	48 98                	cltq   
   2cb56:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cb5d:	00 
   2cb5e:	48 8d 05 fb 51 00 00 	lea    0x51fb(%rip),%rax        # 31d60 <__bigtens_D2A>
   2cb65:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2cb6a:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2cb6f:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cb73:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2cb78:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   2cb7e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cb84:	83 c0 01             	add    $0x1,%eax
   2cb87:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2cb8d:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2cb94:	75 a4                	jne    2cb3a <__gdtoa+0x72c>
   2cb96:	e9 b6 00 00 00       	jmp    2cc51 <__gdtoa+0x843>
   2cb9b:	f2 0f 10 05 3d 53 00 	movsd  0x533d(%rip),%xmm0        # 31ee0 <__tens_D2A+0x100>
   2cba2:	00 
   2cba3:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2cba8:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2cbae:	f7 d8                	neg    %eax
   2cbb0:	89 45 88             	mov    %eax,-0x78(%rbp)
   2cbb3:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2cbb7:	0f 84 94 00 00 00    	je     2cc51 <__gdtoa+0x843>
   2cbbd:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cbc2:	8b 45 88             	mov    -0x78(%rbp),%eax
   2cbc5:	83 e0 0f             	and    $0xf,%eax
   2cbc8:	48 98                	cltq   
   2cbca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cbd1:	00 
   2cbd2:	48 8d 05 07 52 00 00 	lea    0x5207(%rip),%rax        # 31de0 <__tens_D2A>
   2cbd9:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2cbde:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cbe2:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cbe7:	8b 45 88             	mov    -0x78(%rbp),%eax
   2cbea:	c1 f8 04             	sar    $0x4,%eax
   2cbed:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2cbf3:	eb 53                	jmp    2cc48 <__gdtoa+0x83a>
   2cbf5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2cbfb:	83 e0 01             	and    $0x1,%eax
   2cbfe:	85 c0                	test   %eax,%eax
   2cc00:	74 31                	je     2cc33 <__gdtoa+0x825>
   2cc02:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2cc09:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cc0e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cc14:	48 98                	cltq   
   2cc16:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cc1d:	00 
   2cc1e:	48 8d 05 3b 51 00 00 	lea    0x513b(%rip),%rax        # 31d60 <__bigtens_D2A>
   2cc25:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2cc2a:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cc2e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cc33:	d1 bd 48 ff ff ff    	sarl   -0xb8(%rbp)
   2cc39:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cc3f:	83 c0 01             	add    $0x1,%eax
   2cc42:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2cc48:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2cc4f:	75 a4                	jne    2cbf5 <__gdtoa+0x7e7>
   2cc51:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2cc58:	74 59                	je     2ccb3 <__gdtoa+0x8a5>
   2cc5a:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cc5f:	f2 0f 10 05 79 52 00 	movsd  0x5279(%rip),%xmm0        # 31ee0 <__tens_D2A+0x100>
   2cc66:	00 
   2cc67:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cc6b:	76 46                	jbe    2ccb3 <__gdtoa+0x8a5>
   2cc6d:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2cc74:	7e 3d                	jle    2ccb3 <__gdtoa+0x8a5>
   2cc76:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
   2cc7d:	0f 8e 38 03 00 00    	jle    2cfbb <__gdtoa+0xbad>
   2cc83:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2cc89:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2cc8f:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2cc96:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cc9b:	f2 0f 10 05 45 52 00 	movsd  0x5245(%rip),%xmm0        # 31ee8 <__tens_D2A+0x108>
   2cca2:	00 
   2cca3:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cca7:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2ccac:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
   2ccb3:	f2 0f 2a 8d 38 ff ff 	cvtsi2sdl -0xc8(%rbp),%xmm1
   2ccba:	ff 
   2ccbb:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2ccc0:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   2ccc4:	f2 0f 10 05 24 52 00 	movsd  0x5224(%rip),%xmm0        # 31ef0 <__tens_D2A+0x110>
   2cccb:	00 
   2cccc:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2ccd0:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2ccd5:	8b 45 f4             	mov    -0xc(%rbp),%eax
   2ccd8:	2d 00 00 40 03       	sub    $0x3400000,%eax
   2ccdd:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2cce0:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2cce7:	75 5f                	jne    2cd48 <__gdtoa+0x93a>
   2cce9:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2ccf0:	00 
   2ccf1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2ccf5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2ccf9:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2ccfe:	f2 0f 10 0d f2 51 00 	movsd  0x51f2(%rip),%xmm1        # 31ef8 <__tens_D2A+0x118>
   2cd05:	00 
   2cd06:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2cd0a:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cd0f:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cd14:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2cd19:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cd1d:	0f 87 2d 0a 00 00    	ja     2d750 <__gdtoa+0x1342>
   2cd23:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cd28:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2cd2d:	f3 0f 7e 15 cb 51 00 	movq   0x51cb(%rip),%xmm2        # 31f00 <__tens_D2A+0x120>
   2cd34:	00 
   2cd35:	66 0f 57 c2          	xorpd  %xmm2,%xmm0
   2cd39:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cd3d:	0f 87 e9 09 00 00    	ja     2d72c <__gdtoa+0x131e>
   2cd43:	e9 77 02 00 00       	jmp    2cfbf <__gdtoa+0xbb1>
   2cd48:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2cd4f:	0f 84 3b 01 00 00    	je     2ce90 <__gdtoa+0xa82>
   2cd55:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2cd5a:	f2 0f 10 05 ae 51 00 	movsd  0x51ae(%rip),%xmm0        # 31f10 <__tens_D2A+0x130>
   2cd61:	00 
   2cd62:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cd66:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2cd6c:	83 e8 01             	sub    $0x1,%eax
   2cd6f:	48 98                	cltq   
   2cd71:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cd78:	00 
   2cd79:	48 8d 05 60 50 00 00 	lea    0x5060(%rip),%rax        # 31de0 <__tens_D2A>
   2cd80:	f2 0f 10 0c 02       	movsd  (%rdx,%rax,1),%xmm1
   2cd85:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   2cd89:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2cd8e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2cd92:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2cd97:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2cd9e:	00 00 00 
   2cda1:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cda6:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2cdab:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2cdaf:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2cdb2:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cdb7:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2cdbc:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2cdc1:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2cdc5:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cdca:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2cdcd:	89 c1                	mov    %eax,%ecx
   2cdcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2cdd3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2cdd7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2cddb:	8d 51 30             	lea    0x30(%rcx),%edx
   2cdde:	88 10                	mov    %dl,(%rax)
   2cde0:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cde5:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2cdea:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cdee:	76 2d                	jbe    2ce1d <__gdtoa+0xa0f>
   2cdf0:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cdf5:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2cdf9:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2cdfd:	7a 0f                	jp     2ce0e <__gdtoa+0xa00>
   2cdff:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2ce03:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2ce07:	75 05                	jne    2ce0e <__gdtoa+0xa00>
   2ce09:	e9 bb 10 00 00       	jmp    2dec9 <__gdtoa+0x1abb>
   2ce0e:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2ce15:	00 00 00 
   2ce18:	e9 ac 10 00 00       	jmp    2dec9 <__gdtoa+0x1abb>
   2ce1d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2ce22:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2ce27:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2ce2b:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2ce2f:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
   2ce34:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2ce38:	0f 87 06 03 00 00    	ja     2d144 <__gdtoa+0xd36>
   2ce3e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ce44:	83 c0 01             	add    $0x1,%eax
   2ce47:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2ce4d:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2ce53:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2ce59:	0f 8e 5f 01 00 00    	jle    2cfbe <__gdtoa+0xbb0>
   2ce5f:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2ce64:	f2 0f 10 05 7c 50 00 	movsd  0x507c(%rip),%xmm0        # 31ee8 <__tens_D2A+0x108>
   2ce6b:	00 
   2ce6c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2ce70:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2ce75:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2ce7a:	f2 0f 10 05 66 50 00 	movsd  0x5066(%rip),%xmm0        # 31ee8 <__tens_D2A+0x108>
   2ce81:	00 
   2ce82:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2ce86:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2ce8b:	e9 11 ff ff ff       	jmp    2cda1 <__gdtoa+0x993>
   2ce90:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2ce95:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2ce9b:	83 e8 01             	sub    $0x1,%eax
   2ce9e:	48 98                	cltq   
   2cea0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2cea7:	00 
   2cea8:	48 8d 05 31 4f 00 00 	lea    0x4f31(%rip),%rax        # 31de0 <__tens_D2A>
   2ceaf:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2ceb4:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2ceb8:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
   2cebd:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2cec4:	00 00 00 
   2cec7:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cecc:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2ced1:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2ced5:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2ced8:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
   2cedc:	74 18                	je     2cef6 <__gdtoa+0xae8>
   2cede:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cee3:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2cee8:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2ceed:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2cef1:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cef6:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2cef9:	89 c1                	mov    %eax,%ecx
   2cefb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ceff:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2cf03:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2cf07:	8d 51 30             	lea    0x30(%rcx),%edx
   2cf0a:	88 10                	mov    %dl,(%rax)
   2cf0c:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cf12:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2cf18:	75 77                	jne    2cf91 <__gdtoa+0xb83>
   2cf1a:	f2 0f 10 4d b0       	movsd  -0x50(%rbp),%xmm1
   2cf1f:	f2 0f 10 05 e9 4f 00 	movsd  0x4fe9(%rip),%xmm0        # 31f10 <__tens_D2A+0x130>
   2cf26:	00 
   2cf27:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cf2b:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2cf30:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cf35:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
   2cf3a:	f2 0f 58 4d b0       	addsd  -0x50(%rbp),%xmm1
   2cf3f:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cf43:	0f 87 fe 01 00 00    	ja     2d147 <__gdtoa+0xd39>
   2cf49:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cf4e:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
   2cf53:	f2 0f 10 45 b0       	movsd  -0x50(%rbp),%xmm0
   2cf58:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   2cf5c:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2cf60:	77 02                	ja     2cf64 <__gdtoa+0xb56>
   2cf62:	eb 5b                	jmp    2cfbf <__gdtoa+0xbb1>
   2cf64:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2cf69:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2cf6d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2cf71:	7a 0f                	jp     2cf82 <__gdtoa+0xb74>
   2cf73:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2cf77:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2cf7b:	75 05                	jne    2cf82 <__gdtoa+0xb74>
   2cf7d:	e9 22 02 00 00       	jmp    2d1a4 <__gdtoa+0xd96>
   2cf82:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2cf89:	00 00 00 
   2cf8c:	e9 13 02 00 00       	jmp    2d1a4 <__gdtoa+0xd96>
   2cf91:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2cf97:	83 c0 01             	add    $0x1,%eax
   2cf9a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2cfa0:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2cfa5:	f2 0f 10 05 3b 4f 00 	movsd  0x4f3b(%rip),%xmm0        # 31ee8 <__tens_D2A+0x108>
   2cfac:	00 
   2cfad:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2cfb1:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cfb6:	e9 0c ff ff ff       	jmp    2cec7 <__gdtoa+0xab9>
   2cfbb:	90                   	nop
   2cfbc:	eb 01                	jmp    2cfbf <__gdtoa+0xbb1>
   2cfbe:	90                   	nop
   2cfbf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2cfc3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2cfc7:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
   2cfcc:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2cfd1:	8b 45 80             	mov    -0x80(%rbp),%eax
   2cfd4:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2cfda:	8b 45 84             	mov    -0x7c(%rbp),%eax
   2cfdd:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2cfe3:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
   2cfea:	0f 88 fb 01 00 00    	js     2d1eb <__gdtoa+0xddd>
   2cff0:	83 bd 4c ff ff ff 0e 	cmpl   $0xe,-0xb4(%rbp)
   2cff7:	0f 8f ee 01 00 00    	jg     2d1eb <__gdtoa+0xddd>
   2cffd:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2d003:	48 98                	cltq   
   2d005:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2d00c:	00 
   2d00d:	48 8d 05 cc 4d 00 00 	lea    0x4dcc(%rip),%rax        # 31de0 <__tens_D2A>
   2d014:	f2 0f 10 04 02       	movsd  (%rdx,%rax,1),%xmm0
   2d019:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
   2d01e:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%rbp)
   2d025:	79 4b                	jns    2d072 <__gdtoa+0xc64>
   2d027:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2d02e:	7f 42                	jg     2d072 <__gdtoa+0xc64>
   2d030:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   2d037:	00 
   2d038:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d03c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d040:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2d047:	0f 88 e2 06 00 00    	js     2d72f <__gdtoa+0x1321>
   2d04d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2d052:	f2 0f 10 55 b0       	movsd  -0x50(%rbp),%xmm2
   2d057:	f2 0f 10 05 99 4e 00 	movsd  0x4e99(%rip),%xmm0        # 31ef8 <__tens_D2A+0x118>
   2d05e:	00 
   2d05f:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   2d063:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2d067:	0f 83 c2 06 00 00    	jae    2d72f <__gdtoa+0x1321>
   2d06d:	e9 e2 06 00 00       	jmp    2d754 <__gdtoa+0x1346>
   2d072:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2d079:	00 00 00 
   2d07c:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d081:	f2 0f 5e 45 b0       	divsd  -0x50(%rbp),%xmm0
   2d086:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   2d08a:	89 45 8c             	mov    %eax,-0x74(%rbp)
   2d08d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d092:	f2 0f 2a 4d 8c       	cvtsi2sdl -0x74(%rbp),%xmm1
   2d097:	f2 0f 59 4d b0       	mulsd  -0x50(%rbp),%xmm1
   2d09c:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2d0a0:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2d0a5:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2d0a8:	89 c1                	mov    %eax,%ecx
   2d0aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d0ae:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d0b2:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2d0b6:	8d 51 30             	lea    0x30(%rcx),%edx
   2d0b9:	88 10                	mov    %dl,(%rax)
   2d0bb:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d0c0:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2d0c4:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2d0c8:	7a 0e                	jp     2d0d8 <__gdtoa+0xcca>
   2d0ca:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2d0ce:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2d0d2:	0f 84 0d 01 00 00    	je     2d1e5 <__gdtoa+0xdd7>
   2d0d8:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d0de:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2d0e4:	0f 85 d1 00 00 00    	jne    2d1bb <__gdtoa+0xdad>
   2d0ea:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2d0f1:	74 18                	je     2d10b <__gdtoa+0xcfd>
   2d0f3:	83 bd 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%rbp)
   2d0fa:	74 4e                	je     2d14a <__gdtoa+0xd3c>
   2d0fc:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2d103:	00 00 00 
   2d106:	e9 be 0d 00 00       	jmp    2dec9 <__gdtoa+0x1abb>
   2d10b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d110:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   2d114:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2d119:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d11e:	66 0f 2f 45 b0       	comisd -0x50(%rbp),%xmm0
   2d123:	77 28                	ja     2d14d <__gdtoa+0xd3f>
   2d125:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
   2d12a:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2d12f:	7a 69                	jp     2d19a <__gdtoa+0xd8c>
   2d131:	66 0f 2e 45 b0       	ucomisd -0x50(%rbp),%xmm0
   2d136:	75 62                	jne    2d19a <__gdtoa+0xd8c>
   2d138:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2d13b:	83 e0 01             	and    $0x1,%eax
   2d13e:	85 c0                	test   %eax,%eax
   2d140:	74 58                	je     2d19a <__gdtoa+0xd8c>
   2d142:	eb 09                	jmp    2d14d <__gdtoa+0xd3f>
   2d144:	90                   	nop
   2d145:	eb 07                	jmp    2d14e <__gdtoa+0xd40>
   2d147:	90                   	nop
   2d148:	eb 04                	jmp    2d14e <__gdtoa+0xd40>
   2d14a:	90                   	nop
   2d14b:	eb 01                	jmp    2d14e <__gdtoa+0xd40>
   2d14d:	90                   	nop
   2d14e:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2d155:	00 00 00 
   2d158:	eb 1a                	jmp    2d174 <__gdtoa+0xd66>
   2d15a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d15e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2d162:	75 10                	jne    2d174 <__gdtoa+0xd66>
   2d164:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2d16b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d16f:	c6 00 30             	movb   $0x30,(%rax)
   2d172:	eb 10                	jmp    2d184 <__gdtoa+0xd76>
   2d174:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2d179:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d17d:	0f b6 00             	movzbl (%rax),%eax
   2d180:	3c 39                	cmp    $0x39,%al
   2d182:	74 d6                	je     2d15a <__gdtoa+0xd4c>
   2d184:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d188:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d18c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2d190:	0f b6 10             	movzbl (%rax),%edx
   2d193:	83 c2 01             	add    $0x1,%edx
   2d196:	88 10                	mov    %dl,(%rax)
   2d198:	eb 4c                	jmp    2d1e6 <__gdtoa+0xdd8>
   2d19a:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2d1a1:	00 00 00 
   2d1a4:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2d1a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d1ad:	0f b6 00             	movzbl (%rax),%eax
   2d1b0:	3c 30                	cmp    $0x30,%al
   2d1b2:	74 f0                	je     2d1a4 <__gdtoa+0xd96>
   2d1b4:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   2d1b9:	eb 2b                	jmp    2d1e6 <__gdtoa+0xdd8>
   2d1bb:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d1c1:	83 c0 01             	add    $0x1,%eax
   2d1c4:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d1ca:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
   2d1cf:	f2 0f 10 05 11 4d 00 	movsd  0x4d11(%rip),%xmm0        # 31ee8 <__tens_D2A+0x108>
   2d1d6:	00 
   2d1d7:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
   2d1db:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
   2d1e0:	e9 97 fe ff ff       	jmp    2d07c <__gdtoa+0xc6e>
   2d1e5:	90                   	nop
   2d1e6:	e9 de 0c 00 00       	jmp    2dec9 <__gdtoa+0x1abb>
   2d1eb:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   2d1f1:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   2d1f7:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   2d1fd:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
   2d203:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   2d20a:	00 
   2d20b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d20f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d213:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2d21a:	0f 84 65 01 00 00    	je     2d385 <__gdtoa+0xf77>
   2d220:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   2d226:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
   2d22c:	29 c2                	sub    %eax,%edx
   2d22e:	89 d0                	mov    %edx,%eax
   2d230:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d236:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d23c:	8d 50 01             	lea    0x1(%rax),%edx
   2d23f:	89 95 28 ff ff ff    	mov    %edx,-0xd8(%rbp)
   2d245:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2d24b:	29 c2                	sub    %eax,%edx
   2d24d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2d254:	8b 40 04             	mov    0x4(%rax),%eax
   2d257:	39 c2                	cmp    %eax,%edx
   2d259:	7d 5d                	jge    2d2b8 <__gdtoa+0xeaa>
   2d25b:	83 bd 10 ff ff ff 03 	cmpl   $0x3,-0xf0(%rbp)
   2d262:	74 54                	je     2d2b8 <__gdtoa+0xeaa>
   2d264:	83 bd 10 ff ff ff 05 	cmpl   $0x5,-0xf0(%rbp)
   2d26b:	74 4b                	je     2d2b8 <__gdtoa+0xeaa>
   2d26d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2d274:	8b 40 04             	mov    0x4(%rax),%eax
   2d277:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
   2d27d:	29 c2                	sub    %eax,%edx
   2d27f:	89 d0                	mov    %edx,%eax
   2d281:	83 c0 01             	add    $0x1,%eax
   2d284:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d28a:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2d291:	0f 8e b6 00 00 00    	jle    2d34d <__gdtoa+0xf3f>
   2d297:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2d29e:	0f 8e a9 00 00 00    	jle    2d34d <__gdtoa+0xf3f>
   2d2a4:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d2aa:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2d2b0:	0f 8d 97 00 00 00    	jge    2d34d <__gdtoa+0xf3f>
   2d2b6:	eb 0e                	jmp    2d2c6 <__gdtoa+0xeb8>
   2d2b8:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2d2bf:	0f 8e 89 00 00 00    	jle    2d34e <__gdtoa+0xf40>
   2d2c5:	90                   	nop
   2d2c6:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2d2cc:	83 e8 01             	sub    $0x1,%eax
   2d2cf:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2d2d5:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2d2db:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
   2d2e1:	7c 0e                	jl     2d2f1 <__gdtoa+0xee3>
   2d2e3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2d2e9:	29 85 5c ff ff ff    	sub    %eax,-0xa4(%rbp)
   2d2ef:	eb 2e                	jmp    2d31f <__gdtoa+0xf11>
   2d2f1:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2d2f7:	29 85 48 ff ff ff    	sub    %eax,-0xb8(%rbp)
   2d2fd:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2d303:	01 85 68 ff ff ff    	add    %eax,-0x98(%rbp)
   2d309:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
   2d30f:	01 85 30 ff ff ff    	add    %eax,-0xd0(%rbp)
   2d315:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   2d31c:	00 00 00 
   2d31f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   2d325:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d32b:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d331:	85 c0                	test   %eax,%eax
   2d333:	79 19                	jns    2d34e <__gdtoa+0xf40>
   2d335:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d33b:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   2d341:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%rbp)
   2d348:	00 00 00 
   2d34b:	eb 01                	jmp    2d34e <__gdtoa+0xf40>
   2d34d:	90                   	nop
   2d34e:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d354:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   2d35a:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d360:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2d366:	bf 01 00 00 00       	mov    $0x1,%edi
   2d36b:	e8 9c d7 ff ff       	call   2ab0c <__i2b_D2A>
   2d370:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d374:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d379:	75 0a                	jne    2d385 <__gdtoa+0xf77>
   2d37b:	b8 00 00 00 00       	mov    $0x0,%eax
   2d380:	e9 9f 0b 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d385:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2d38c:	7e 46                	jle    2d3d4 <__gdtoa+0xfc6>
   2d38e:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2d395:	7e 3d                	jle    2d3d4 <__gdtoa+0xfc6>
   2d397:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   2d39d:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%rbp)
   2d3a3:	0f 4e 85 64 ff ff ff 	cmovle -0x9c(%rbp),%eax
   2d3aa:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d3b0:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d3b6:	29 85 2c ff ff ff    	sub    %eax,-0xd4(%rbp)
   2d3bc:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d3c2:	29 85 58 ff ff ff    	sub    %eax,-0xa8(%rbp)
   2d3c8:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d3ce:	29 85 64 ff ff ff    	sub    %eax,-0x9c(%rbp)
   2d3d4:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
   2d3db:	0f 8e e8 00 00 00    	jle    2d4c9 <__gdtoa+0x10bb>
   2d3e1:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2d3e8:	0f 84 b2 00 00 00    	je     2d4a0 <__gdtoa+0x1092>
   2d3ee:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
   2d3f5:	7e 65                	jle    2d45c <__gdtoa+0x104e>
   2d3f7:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   2d3fd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d401:	89 d6                	mov    %edx,%esi
   2d403:	48 89 c7             	mov    %rax,%rdi
   2d406:	e8 69 da ff ff       	call   2ae74 <__pow5mult_D2A>
   2d40b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d40f:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d414:	75 0a                	jne    2d420 <__gdtoa+0x1012>
   2d416:	b8 00 00 00 00       	mov    $0x0,%eax
   2d41b:	e9 04 0b 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d420:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   2d424:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d428:	48 89 d6             	mov    %rdx,%rsi
   2d42b:	48 89 c7             	mov    %rax,%rdi
   2d42e:	e8 1f d7 ff ff       	call   2ab52 <__mult_D2A>
   2d433:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2d437:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   2d43c:	75 0a                	jne    2d448 <__gdtoa+0x103a>
   2d43e:	b8 00 00 00 00       	mov    $0x0,%eax
   2d443:	e9 dc 0a 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d448:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d44c:	48 89 c7             	mov    %rax,%rdi
   2d44f:	e8 71 d3 ff ff       	call   2a7c5 <__Bfree_D2A>
   2d454:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2d458:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d45c:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   2d462:	2b 85 5c ff ff ff    	sub    -0xa4(%rbp),%eax
   2d468:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2d46e:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2d475:	74 52                	je     2d4c9 <__gdtoa+0x10bb>
   2d477:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
   2d47d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d481:	89 d6                	mov    %edx,%esi
   2d483:	48 89 c7             	mov    %rax,%rdi
   2d486:	e8 e9 d9 ff ff       	call   2ae74 <__pow5mult_D2A>
   2d48b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d48f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2d494:	75 33                	jne    2d4c9 <__gdtoa+0x10bb>
   2d496:	b8 00 00 00 00       	mov    $0x0,%eax
   2d49b:	e9 84 0a 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d4a0:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   2d4a6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d4aa:	89 d6                	mov    %edx,%esi
   2d4ac:	48 89 c7             	mov    %rax,%rdi
   2d4af:	e8 c0 d9 ff ff       	call   2ae74 <__pow5mult_D2A>
   2d4b4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d4b8:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2d4bd:	75 0a                	jne    2d4c9 <__gdtoa+0x10bb>
   2d4bf:	b8 00 00 00 00       	mov    $0x0,%eax
   2d4c4:	e9 5b 0a 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d4c9:	bf 01 00 00 00       	mov    $0x1,%edi
   2d4ce:	e8 39 d6 ff ff       	call   2ab0c <__i2b_D2A>
   2d4d3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d4d7:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2d4dc:	75 0a                	jne    2d4e8 <__gdtoa+0x10da>
   2d4de:	b8 00 00 00 00       	mov    $0x0,%eax
   2d4e3:	e9 3c 0a 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d4e8:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2d4ef:	7e 29                	jle    2d51a <__gdtoa+0x110c>
   2d4f1:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   2d4f7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d4fb:	89 d6                	mov    %edx,%esi
   2d4fd:	48 89 c7             	mov    %rax,%rdi
   2d500:	e8 6f d9 ff ff       	call   2ae74 <__pow5mult_D2A>
   2d505:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d509:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2d50e:	75 0a                	jne    2d51a <__gdtoa+0x110c>
   2d510:	b8 00 00 00 00       	mov    $0x0,%eax
   2d515:	e9 0a 0a 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d51a:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   2d521:	00 00 00 
   2d524:	83 bd 10 ff ff ff 01 	cmpl   $0x1,-0xf0(%rbp)
   2d52b:	7f 38                	jg     2d565 <__gdtoa+0x1157>
   2d52d:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   2d533:	83 f8 01             	cmp    $0x1,%eax
   2d536:	75 2d                	jne    2d565 <__gdtoa+0x1157>
   2d538:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   2d53f:	8b 40 04             	mov    0x4(%rax),%eax
   2d542:	83 c0 01             	add    $0x1,%eax
   2d545:	39 85 7c ff ff ff    	cmp    %eax,-0x84(%rbp)
   2d54b:	7e 18                	jle    2d565 <__gdtoa+0x1157>
   2d54d:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
   2d554:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
   2d55b:	c7 85 6c ff ff ff 01 	movl   $0x1,-0x94(%rbp)
   2d562:	00 00 00 
   2d565:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
   2d56c:	74 22                	je     2d590 <__gdtoa+0x1182>
   2d56e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d572:	8b 40 14             	mov    0x14(%rax),%eax
   2d575:	8d 50 ff             	lea    -0x1(%rax),%edx
   2d578:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d57c:	48 63 d2             	movslq %edx,%rdx
   2d57f:	48 83 c2 04          	add    $0x4,%rdx
   2d583:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
   2d587:	89 c7                	mov    %eax,%edi
   2d589:	e8 f7 d4 ff ff       	call   2aa85 <__hi0bits_D2A>
   2d58e:	eb 05                	jmp    2d595 <__gdtoa+0x1187>
   2d590:	b8 1f 00 00 00       	mov    $0x1f,%eax
   2d595:	2b 85 64 ff ff ff    	sub    -0x9c(%rbp),%eax
   2d59b:	83 e8 04             	sub    $0x4,%eax
   2d59e:	83 e0 1f             	and    $0x1f,%eax
   2d5a1:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2d5a7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d5ad:	01 85 58 ff ff ff    	add    %eax,-0xa8(%rbp)
   2d5b3:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d5b9:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
   2d5bf:	83 bd 2c ff ff ff 00 	cmpl   $0x0,-0xd4(%rbp)
   2d5c6:	7e 29                	jle    2d5f1 <__gdtoa+0x11e3>
   2d5c8:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   2d5ce:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d5d2:	89 d6                	mov    %edx,%esi
   2d5d4:	48 89 c7             	mov    %rax,%rdi
   2d5d7:	e8 64 da ff ff       	call   2b040 <__lshift_D2A>
   2d5dc:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d5e0:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2d5e5:	75 0a                	jne    2d5f1 <__gdtoa+0x11e3>
   2d5e7:	b8 00 00 00 00       	mov    $0x0,%eax
   2d5ec:	e9 33 09 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d5f1:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2d5f7:	01 85 64 ff ff ff    	add    %eax,-0x9c(%rbp)
   2d5fd:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   2d604:	7e 29                	jle    2d62f <__gdtoa+0x1221>
   2d606:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
   2d60c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d610:	89 d6                	mov    %edx,%esi
   2d612:	48 89 c7             	mov    %rax,%rdi
   2d615:	e8 26 da ff ff       	call   2b040 <__lshift_D2A>
   2d61a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d61e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2d623:	75 0a                	jne    2d62f <__gdtoa+0x1221>
   2d625:	b8 00 00 00 00       	mov    $0x0,%eax
   2d62a:	e9 f5 08 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d62f:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
   2d636:	0f 84 89 00 00 00    	je     2d6c5 <__gdtoa+0x12b7>
   2d63c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2d640:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d644:	48 89 d6             	mov    %rdx,%rsi
   2d647:	48 89 c7             	mov    %rax,%rdi
   2d64a:	e8 7e db ff ff       	call   2b1cd <__cmp_D2A>
   2d64f:	85 c0                	test   %eax,%eax
   2d651:	79 72                	jns    2d6c5 <__gdtoa+0x12b7>
   2d653:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
   2d65a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d65e:	ba 00 00 00 00       	mov    $0x0,%edx
   2d663:	be 0a 00 00 00       	mov    $0xa,%esi
   2d668:	48 89 c7             	mov    %rax,%rdi
   2d66b:	e8 cb d2 ff ff       	call   2a93b <__multadd_D2A>
   2d670:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2d674:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2d679:	75 0a                	jne    2d685 <__gdtoa+0x1277>
   2d67b:	b8 00 00 00 00       	mov    $0x0,%eax
   2d680:	e9 9f 08 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d685:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2d68c:	74 2b                	je     2d6b9 <__gdtoa+0x12ab>
   2d68e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d692:	ba 00 00 00 00       	mov    $0x0,%edx
   2d697:	be 0a 00 00 00       	mov    $0xa,%esi
   2d69c:	48 89 c7             	mov    %rax,%rdi
   2d69f:	e8 97 d2 ff ff       	call   2a93b <__multadd_D2A>
   2d6a4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d6a8:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d6ad:	75 0a                	jne    2d6b9 <__gdtoa+0x12ab>
   2d6af:	b8 00 00 00 00       	mov    $0x0,%eax
   2d6b4:	e9 6b 08 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d6b9:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   2d6bf:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
   2d6c5:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2d6cc:	0f 8f a7 00 00 00    	jg     2d779 <__gdtoa+0x136b>
   2d6d2:	83 bd 10 ff ff ff 02 	cmpl   $0x2,-0xf0(%rbp)
   2d6d9:	0f 8e 9a 00 00 00    	jle    2d779 <__gdtoa+0x136b>
   2d6df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d6e3:	ba 00 00 00 00       	mov    $0x0,%edx
   2d6e8:	be 05 00 00 00       	mov    $0x5,%esi
   2d6ed:	48 89 c7             	mov    %rax,%rdi
   2d6f0:	e8 46 d2 ff ff       	call   2a93b <__multadd_D2A>
   2d6f5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2d6f9:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   2d6fe:	75 0a                	jne    2d70a <__gdtoa+0x12fc>
   2d700:	b8 00 00 00 00       	mov    $0x0,%eax
   2d705:	e9 1a 08 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d70a:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)
   2d711:	78 1f                	js     2d732 <__gdtoa+0x1324>
   2d713:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2d717:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d71b:	48 89 d6             	mov    %rdx,%rsi
   2d71e:	48 89 c7             	mov    %rax,%rdi
   2d721:	e8 a7 da ff ff       	call   2b1cd <__cmp_D2A>
   2d726:	85 c0                	test   %eax,%eax
   2d728:	7f 29                	jg     2d753 <__gdtoa+0x1345>
   2d72a:	eb 06                	jmp    2d732 <__gdtoa+0x1324>
   2d72c:	90                   	nop
   2d72d:	eb 04                	jmp    2d733 <__gdtoa+0x1325>
   2d72f:	90                   	nop
   2d730:	eb 01                	jmp    2d733 <__gdtoa+0x1325>
   2d732:	90                   	nop
   2d733:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
   2d739:	f7 d0                	not    %eax
   2d73b:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   2d741:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2d748:	00 00 00 
   2d74b:	e9 3a 07 00 00       	jmp    2de8a <__gdtoa+0x1a7c>
   2d750:	90                   	nop
   2d751:	eb 01                	jmp    2d754 <__gdtoa+0x1346>
   2d753:	90                   	nop
   2d754:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2d75b:	00 00 00 
   2d75e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d762:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d766:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2d76a:	c6 00 31             	movb   $0x31,(%rax)
   2d76d:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2d774:	e9 11 07 00 00       	jmp    2de8a <__gdtoa+0x1a7c>
   2d779:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
   2d780:	0f 84 58 05 00 00    	je     2dcde <__gdtoa+0x18d0>
   2d786:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
   2d78d:	7e 29                	jle    2d7b8 <__gdtoa+0x13aa>
   2d78f:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   2d795:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d799:	89 d6                	mov    %edx,%esi
   2d79b:	48 89 c7             	mov    %rax,%rdi
   2d79e:	e8 9d d8 ff ff       	call   2b040 <__lshift_D2A>
   2d7a3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d7a7:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d7ac:	75 0a                	jne    2d7b8 <__gdtoa+0x13aa>
   2d7ae:	b8 00 00 00 00       	mov    $0x0,%eax
   2d7b3:	e9 6c 07 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d7b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d7bc:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2d7c0:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   2d7c7:	74 79                	je     2d842 <__gdtoa+0x1434>
   2d7c9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d7cd:	8b 40 08             	mov    0x8(%rax),%eax
   2d7d0:	89 c7                	mov    %eax,%edi
   2d7d2:	e8 a8 ce ff ff       	call   2a67f <__Balloc_D2A>
   2d7d7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d7db:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d7e0:	75 0a                	jne    2d7ec <__gdtoa+0x13de>
   2d7e2:	b8 00 00 00 00       	mov    $0x0,%eax
   2d7e7:	e9 38 07 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d7ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d7f0:	8b 40 14             	mov    0x14(%rax),%eax
   2d7f3:	48 98                	cltq   
   2d7f5:	48 83 c0 02          	add    $0x2,%rax
   2d7f9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2d800:	00 
   2d801:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2d805:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2d809:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d80d:	48 83 c0 10          	add    $0x10,%rax
   2d811:	48 89 ce             	mov    %rcx,%rsi
   2d814:	48 89 c7             	mov    %rax,%rdi
   2d817:	e8 63 36 ff ff       	call   20e7f <memcpy>
   2d81c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d820:	be 01 00 00 00       	mov    $0x1,%esi
   2d825:	48 89 c7             	mov    %rax,%rdi
   2d828:	e8 13 d8 ff ff       	call   2b040 <__lshift_D2A>
   2d82d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2d831:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2d836:	75 0a                	jne    2d842 <__gdtoa+0x1434>
   2d838:	b8 00 00 00 00       	mov    $0x0,%eax
   2d83d:	e9 e2 06 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d842:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2d849:	00 00 00 
   2d84c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2d850:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d854:	48 89 d6             	mov    %rdx,%rsi
   2d857:	48 89 c7             	mov    %rax,%rdi
   2d85a:	e8 64 ab ff ff       	call   283c3 <__quorem_D2A>
   2d85f:	83 c0 30             	add    $0x30,%eax
   2d862:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   2d868:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   2d86c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d870:	48 89 d6             	mov    %rdx,%rsi
   2d873:	48 89 c7             	mov    %rax,%rdi
   2d876:	e8 52 d9 ff ff       	call   2b1cd <__cmp_D2A>
   2d87b:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2d881:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2d885:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2d889:	48 89 d6             	mov    %rdx,%rsi
   2d88c:	48 89 c7             	mov    %rax,%rdi
   2d88f:	e8 0d da ff ff       	call   2b2a1 <__diff_D2A>
   2d894:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2d898:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   2d89d:	75 0a                	jne    2d8a9 <__gdtoa+0x149b>
   2d89f:	b8 00 00 00 00       	mov    $0x0,%eax
   2d8a4:	e9 7b 06 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2d8a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d8ad:	8b 40 10             	mov    0x10(%rax),%eax
   2d8b0:	85 c0                	test   %eax,%eax
   2d8b2:	75 15                	jne    2d8c9 <__gdtoa+0x14bb>
   2d8b4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2d8b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d8bc:	48 89 d6             	mov    %rdx,%rsi
   2d8bf:	48 89 c7             	mov    %rax,%rdi
   2d8c2:	e8 06 d9 ff ff       	call   2b1cd <__cmp_D2A>
   2d8c7:	eb 05                	jmp    2d8ce <__gdtoa+0x14c0>
   2d8c9:	b8 01 00 00 00       	mov    $0x1,%eax
   2d8ce:	89 45 88             	mov    %eax,-0x78(%rbp)
   2d8d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2d8d5:	48 89 c7             	mov    %rax,%rdi
   2d8d8:	e8 e8 ce ff ff       	call   2a7c5 <__Bfree_D2A>
   2d8dd:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2d8e1:	0f 85 85 00 00 00    	jne    2d96c <__gdtoa+0x155e>
   2d8e7:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2d8ee:	75 7c                	jne    2d96c <__gdtoa+0x155e>
   2d8f0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2d8f7:	8b 00                	mov    (%rax),%eax
   2d8f9:	83 e0 01             	and    $0x1,%eax
   2d8fc:	85 c0                	test   %eax,%eax
   2d8fe:	75 6c                	jne    2d96c <__gdtoa+0x155e>
   2d900:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2d907:	75 63                	jne    2d96c <__gdtoa+0x155e>
   2d909:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   2d910:	0f 84 83 02 00 00    	je     2db99 <__gdtoa+0x178b>
   2d916:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2d91d:	7f 23                	jg     2d942 <__gdtoa+0x1534>
   2d91f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d923:	8b 40 14             	mov    0x14(%rax),%eax
   2d926:	83 f8 01             	cmp    $0x1,%eax
   2d929:	7f 0b                	jg     2d936 <__gdtoa+0x1528>
   2d92b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d92f:	8b 40 18             	mov    0x18(%rax),%eax
   2d932:	85 c0                	test   %eax,%eax
   2d934:	74 1d                	je     2d953 <__gdtoa+0x1545>
   2d936:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2d93d:	00 00 00 
   2d940:	eb 11                	jmp    2d953 <__gdtoa+0x1545>
   2d942:	83 85 34 ff ff ff 01 	addl   $0x1,-0xcc(%rbp)
   2d949:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2d950:	00 00 00 
   2d953:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d957:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d95b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2d95f:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2d965:	88 10                	mov    %dl,(%rax)
   2d967:	e9 1e 05 00 00       	jmp    2de8a <__gdtoa+0x1a7c>
   2d96c:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2d973:	78 2e                	js     2d9a3 <__gdtoa+0x1595>
   2d975:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2d97c:	0f 85 fd 01 00 00    	jne    2db7f <__gdtoa+0x1771>
   2d982:	83 bd 10 ff ff ff 00 	cmpl   $0x0,-0xf0(%rbp)
   2d989:	0f 85 f0 01 00 00    	jne    2db7f <__gdtoa+0x1771>
   2d98f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2d996:	8b 00                	mov    (%rax),%eax
   2d998:	83 e0 01             	and    $0x1,%eax
   2d99b:	85 c0                	test   %eax,%eax
   2d99d:	0f 85 dc 01 00 00    	jne    2db7f <__gdtoa+0x1771>
   2d9a3:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2d9aa:	0f 84 19 01 00 00    	je     2dac9 <__gdtoa+0x16bb>
   2d9b0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d9b4:	8b 40 14             	mov    0x14(%rax),%eax
   2d9b7:	83 f8 01             	cmp    $0x1,%eax
   2d9ba:	7f 0f                	jg     2d9cb <__gdtoa+0x15bd>
   2d9bc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2d9c0:	8b 40 18             	mov    0x18(%rax),%eax
   2d9c3:	85 c0                	test   %eax,%eax
   2d9c5:	0f 84 fe 00 00 00    	je     2dac9 <__gdtoa+0x16bb>
   2d9cb:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   2d9d2:	0f 85 af 00 00 00    	jne    2da87 <__gdtoa+0x1679>
   2d9d8:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2d9df:	00 00 00 
   2d9e2:	e9 7f 01 00 00       	jmp    2db66 <__gdtoa+0x1758>
   2d9e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2d9eb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d9ef:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2d9f3:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2d9f9:	88 10                	mov    %dl,(%rax)
   2d9fb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2d9ff:	ba 00 00 00 00       	mov    $0x0,%edx
   2da04:	be 0a 00 00 00       	mov    $0xa,%esi
   2da09:	48 89 c7             	mov    %rax,%rdi
   2da0c:	e8 2a cf ff ff       	call   2a93b <__multadd_D2A>
   2da11:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2da15:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2da1a:	75 0a                	jne    2da26 <__gdtoa+0x1618>
   2da1c:	b8 00 00 00 00       	mov    $0x0,%eax
   2da21:	e9 fe 04 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2da26:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2da2a:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2da2e:	75 08                	jne    2da38 <__gdtoa+0x162a>
   2da30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2da34:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2da38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2da3c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2da40:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2da44:	ba 00 00 00 00       	mov    $0x0,%edx
   2da49:	be 0a 00 00 00       	mov    $0xa,%esi
   2da4e:	48 89 c7             	mov    %rax,%rdi
   2da51:	e8 e5 ce ff ff       	call   2a93b <__multadd_D2A>
   2da56:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2da5a:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2da5f:	75 0a                	jne    2da6b <__gdtoa+0x165d>
   2da61:	b8 00 00 00 00       	mov    $0x0,%eax
   2da66:	e9 b9 04 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2da6b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2da6f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2da73:	48 89 d6             	mov    %rdx,%rsi
   2da76:	48 89 c7             	mov    %rax,%rdi
   2da79:	e8 45 a9 ff ff       	call   283c3 <__quorem_D2A>
   2da7e:	83 c0 30             	add    $0x30,%eax
   2da81:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   2da87:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   2da8b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2da8f:	48 89 d6             	mov    %rdx,%rsi
   2da92:	48 89 c7             	mov    %rax,%rdi
   2da95:	e8 33 d7 ff ff       	call   2b1cd <__cmp_D2A>
   2da9a:	85 c0                	test   %eax,%eax
   2da9c:	0f 8f 45 ff ff ff    	jg     2d9e7 <__gdtoa+0x15d9>
   2daa2:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2daa8:	8d 50 01             	lea    0x1(%rax),%edx
   2daab:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   2dab1:	83 f8 39             	cmp    $0x39,%eax
   2dab4:	0f 84 e2 00 00 00    	je     2db9c <__gdtoa+0x178e>
   2daba:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2dac1:	00 00 00 
   2dac4:	e9 9d 00 00 00       	jmp    2db66 <__gdtoa+0x1758>
   2dac9:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2dacd:	7e 73                	jle    2db42 <__gdtoa+0x1734>
   2dacf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dad3:	be 01 00 00 00       	mov    $0x1,%esi
   2dad8:	48 89 c7             	mov    %rax,%rdi
   2dadb:	e8 60 d5 ff ff       	call   2b040 <__lshift_D2A>
   2dae0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2dae4:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2dae9:	75 0a                	jne    2daf5 <__gdtoa+0x16e7>
   2daeb:	b8 00 00 00 00       	mov    $0x0,%eax
   2daf0:	e9 2f 04 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2daf5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2daf9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dafd:	48 89 d6             	mov    %rdx,%rsi
   2db00:	48 89 c7             	mov    %rax,%rdi
   2db03:	e8 c5 d6 ff ff       	call   2b1cd <__cmp_D2A>
   2db08:	89 45 88             	mov    %eax,-0x78(%rbp)
   2db0b:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2db0f:	7f 13                	jg     2db24 <__gdtoa+0x1716>
   2db11:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2db15:	75 21                	jne    2db38 <__gdtoa+0x172a>
   2db17:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2db1d:	83 e0 01             	and    $0x1,%eax
   2db20:	85 c0                	test   %eax,%eax
   2db22:	74 14                	je     2db38 <__gdtoa+0x172a>
   2db24:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2db2a:	8d 50 01             	lea    0x1(%rax),%edx
   2db2d:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
   2db33:	83 f8 39             	cmp    $0x39,%eax
   2db36:	74 67                	je     2db9f <__gdtoa+0x1791>
   2db38:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2db3f:	00 00 00 
   2db42:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2db46:	8b 40 14             	mov    0x14(%rax),%eax
   2db49:	83 f8 01             	cmp    $0x1,%eax
   2db4c:	7f 0b                	jg     2db59 <__gdtoa+0x174b>
   2db4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2db52:	8b 40 18             	mov    0x18(%rax),%eax
   2db55:	85 c0                	test   %eax,%eax
   2db57:	74 0c                	je     2db65 <__gdtoa+0x1757>
   2db59:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2db60:	00 00 00 
   2db63:	eb 01                	jmp    2db66 <__gdtoa+0x1758>
   2db65:	90                   	nop
   2db66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2db6a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2db6e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2db72:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2db78:	88 10                	mov    %dl,(%rax)
   2db7a:	e9 0b 03 00 00       	jmp    2de8a <__gdtoa+0x1a7c>
   2db7f:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   2db83:	7e 61                	jle    2dbe6 <__gdtoa+0x17d8>
   2db85:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   2db8c:	74 58                	je     2dbe6 <__gdtoa+0x17d8>
   2db8e:	83 bd 34 ff ff ff 39 	cmpl   $0x39,-0xcc(%rbp)
   2db95:	75 27                	jne    2dbbe <__gdtoa+0x17b0>
   2db97:	eb 07                	jmp    2dba0 <__gdtoa+0x1792>
   2db99:	90                   	nop
   2db9a:	eb 04                	jmp    2dba0 <__gdtoa+0x1792>
   2db9c:	90                   	nop
   2db9d:	eb 01                	jmp    2dba0 <__gdtoa+0x1792>
   2db9f:	90                   	nop
   2dba0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2dba4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2dba8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2dbac:	c6 00 39             	movb   $0x39,(%rax)
   2dbaf:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2dbb6:	00 00 00 
   2dbb9:	e9 3e 02 00 00       	jmp    2ddfc <__gdtoa+0x19ee>
   2dbbe:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2dbc5:	00 00 00 
   2dbc8:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2dbce:	89 c1                	mov    %eax,%ecx
   2dbd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2dbd4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2dbd8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2dbdc:	8d 51 01             	lea    0x1(%rcx),%edx
   2dbdf:	88 10                	mov    %dl,(%rax)
   2dbe1:	e9 a4 02 00 00       	jmp    2de8a <__gdtoa+0x1a7c>
   2dbe6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2dbea:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2dbee:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2dbf2:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2dbf8:	88 10                	mov    %dl,(%rax)
   2dbfa:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2dc00:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2dc06:	0f 84 56 01 00 00    	je     2dd62 <__gdtoa+0x1954>
   2dc0c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dc10:	ba 00 00 00 00       	mov    $0x0,%edx
   2dc15:	be 0a 00 00 00       	mov    $0xa,%esi
   2dc1a:	48 89 c7             	mov    %rax,%rdi
   2dc1d:	e8 19 cd ff ff       	call   2a93b <__multadd_D2A>
   2dc22:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2dc26:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2dc2b:	75 0a                	jne    2dc37 <__gdtoa+0x1829>
   2dc2d:	b8 00 00 00 00       	mov    $0x0,%eax
   2dc32:	e9 ed 02 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2dc37:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2dc3b:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2dc3f:	75 33                	jne    2dc74 <__gdtoa+0x1866>
   2dc41:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2dc45:	ba 00 00 00 00       	mov    $0x0,%edx
   2dc4a:	be 0a 00 00 00       	mov    $0xa,%esi
   2dc4f:	48 89 c7             	mov    %rax,%rdi
   2dc52:	e8 e4 cc ff ff       	call   2a93b <__multadd_D2A>
   2dc57:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2dc5b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2dc5f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2dc63:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2dc68:	75 60                	jne    2dcca <__gdtoa+0x18bc>
   2dc6a:	b8 00 00 00 00       	mov    $0x0,%eax
   2dc6f:	e9 b0 02 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2dc74:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2dc78:	ba 00 00 00 00       	mov    $0x0,%edx
   2dc7d:	be 0a 00 00 00       	mov    $0xa,%esi
   2dc82:	48 89 c7             	mov    %rax,%rdi
   2dc85:	e8 b1 cc ff ff       	call   2a93b <__multadd_D2A>
   2dc8a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   2dc8e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2dc93:	75 0a                	jne    2dc9f <__gdtoa+0x1891>
   2dc95:	b8 00 00 00 00       	mov    $0x0,%eax
   2dc9a:	e9 85 02 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2dc9f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2dca3:	ba 00 00 00 00       	mov    $0x0,%edx
   2dca8:	be 0a 00 00 00       	mov    $0xa,%esi
   2dcad:	48 89 c7             	mov    %rax,%rdi
   2dcb0:	e8 86 cc ff ff       	call   2a93b <__multadd_D2A>
   2dcb5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2dcb9:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2dcbe:	75 0a                	jne    2dcca <__gdtoa+0x18bc>
   2dcc0:	b8 00 00 00 00       	mov    $0x0,%eax
   2dcc5:	e9 5a 02 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2dcca:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2dcd0:	83 c0 01             	add    $0x1,%eax
   2dcd3:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2dcd9:	e9 6e fb ff ff       	jmp    2d84c <__gdtoa+0x143e>
   2dcde:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
   2dce5:	00 00 00 
   2dce8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2dcec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dcf0:	48 89 d6             	mov    %rdx,%rsi
   2dcf3:	48 89 c7             	mov    %rax,%rdi
   2dcf6:	e8 c8 a6 ff ff       	call   283c3 <__quorem_D2A>
   2dcfb:	83 c0 30             	add    $0x30,%eax
   2dcfe:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
   2dd04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2dd08:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2dd0c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2dd10:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
   2dd16:	88 10                	mov    %dl,(%rax)
   2dd18:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2dd1e:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%rbp)
   2dd24:	7e 3f                	jle    2dd65 <__gdtoa+0x1957>
   2dd26:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dd2a:	ba 00 00 00 00       	mov    $0x0,%edx
   2dd2f:	be 0a 00 00 00       	mov    $0xa,%esi
   2dd34:	48 89 c7             	mov    %rax,%rdi
   2dd37:	e8 ff cb ff ff       	call   2a93b <__multadd_D2A>
   2dd3c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2dd40:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2dd45:	75 0a                	jne    2dd51 <__gdtoa+0x1943>
   2dd47:	b8 00 00 00 00       	mov    $0x0,%eax
   2dd4c:	e9 d3 01 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2dd51:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2dd57:	83 c0 01             	add    $0x1,%eax
   2dd5a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
   2dd60:	eb 86                	jmp    2dce8 <__gdtoa+0x18da>
   2dd62:	90                   	nop
   2dd63:	eb 01                	jmp    2dd66 <__gdtoa+0x1958>
   2dd65:	90                   	nop
   2dd66:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
   2dd6d:	74 29                	je     2dd98 <__gdtoa+0x198a>
   2dd6f:	83 bd 60 ff ff ff 02 	cmpl   $0x2,-0xa0(%rbp)
   2dd76:	0f 84 d4 00 00 00    	je     2de50 <__gdtoa+0x1a42>
   2dd7c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dd80:	8b 40 14             	mov    0x14(%rax),%eax
   2dd83:	83 f8 01             	cmp    $0x1,%eax
   2dd86:	7f 70                	jg     2ddf8 <__gdtoa+0x19ea>
   2dd88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dd8c:	8b 40 18             	mov    0x18(%rax),%eax
   2dd8f:	85 c0                	test   %eax,%eax
   2dd91:	75 65                	jne    2ddf8 <__gdtoa+0x19ea>
   2dd93:	e9 b8 00 00 00       	jmp    2de50 <__gdtoa+0x1a42>
   2dd98:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2dd9c:	be 01 00 00 00       	mov    $0x1,%esi
   2dda1:	48 89 c7             	mov    %rax,%rdi
   2dda4:	e8 97 d2 ff ff       	call   2b040 <__lshift_D2A>
   2dda9:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   2ddad:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   2ddb2:	75 0a                	jne    2ddbe <__gdtoa+0x19b0>
   2ddb4:	b8 00 00 00 00       	mov    $0x0,%eax
   2ddb9:	e9 66 01 00 00       	jmp    2df24 <__gdtoa+0x1b16>
   2ddbe:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2ddc2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2ddc6:	48 89 d6             	mov    %rdx,%rsi
   2ddc9:	48 89 c7             	mov    %rax,%rdi
   2ddcc:	e8 fc d3 ff ff       	call   2b1cd <__cmp_D2A>
   2ddd1:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
   2ddd7:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2ddde:	7f 1b                	jg     2ddfb <__gdtoa+0x19ed>
   2dde0:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
   2dde7:	75 6a                	jne    2de53 <__gdtoa+0x1a45>
   2dde9:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   2ddef:	83 e0 01             	and    $0x1,%eax
   2ddf2:	85 c0                	test   %eax,%eax
   2ddf4:	74 5d                	je     2de53 <__gdtoa+0x1a45>
   2ddf6:	eb 03                	jmp    2ddfb <__gdtoa+0x19ed>
   2ddf8:	90                   	nop
   2ddf9:	eb 01                	jmp    2ddfc <__gdtoa+0x19ee>
   2ddfb:	90                   	nop
   2ddfc:	c7 85 44 ff ff ff 20 	movl   $0x20,-0xbc(%rbp)
   2de03:	00 00 00 
   2de06:	eb 22                	jmp    2de2a <__gdtoa+0x1a1c>
   2de08:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2de0c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2de10:	75 18                	jne    2de2a <__gdtoa+0x1a1c>
   2de12:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
   2de19:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2de1d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2de21:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2de25:	c6 00 31             	movb   $0x31,(%rax)
   2de28:	eb 60                	jmp    2de8a <__gdtoa+0x1a7c>
   2de2a:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2de2f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2de33:	0f b6 00             	movzbl (%rax),%eax
   2de36:	3c 39                	cmp    $0x39,%al
   2de38:	74 ce                	je     2de08 <__gdtoa+0x19fa>
   2de3a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2de3e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2de42:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   2de46:	0f b6 10             	movzbl (%rax),%edx
   2de49:	83 c2 01             	add    $0x1,%edx
   2de4c:	88 10                	mov    %dl,(%rax)
   2de4e:	eb 3a                	jmp    2de8a <__gdtoa+0x1a7c>
   2de50:	90                   	nop
   2de51:	eb 01                	jmp    2de54 <__gdtoa+0x1a46>
   2de53:	90                   	nop
   2de54:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2de58:	8b 40 14             	mov    0x14(%rax),%eax
   2de5b:	83 f8 01             	cmp    $0x1,%eax
   2de5e:	7f 0b                	jg     2de6b <__gdtoa+0x1a5d>
   2de60:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2de64:	8b 40 18             	mov    0x18(%rax),%eax
   2de67:	85 c0                	test   %eax,%eax
   2de69:	74 0a                	je     2de75 <__gdtoa+0x1a67>
   2de6b:	c7 85 44 ff ff ff 10 	movl   $0x10,-0xbc(%rbp)
   2de72:	00 00 00 
   2de75:	48 83 6d b8 01       	subq   $0x1,-0x48(%rbp)
   2de7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2de7e:	0f b6 00             	movzbl (%rax),%eax
   2de81:	3c 30                	cmp    $0x30,%al
   2de83:	74 f0                	je     2de75 <__gdtoa+0x1a67>
   2de85:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)
   2de8a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2de8e:	48 89 c7             	mov    %rax,%rdi
   2de91:	e8 2f c9 ff ff       	call   2a7c5 <__Bfree_D2A>
   2de96:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   2de9b:	74 2b                	je     2dec8 <__gdtoa+0x1aba>
   2de9d:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   2dea2:	74 16                	je     2deba <__gdtoa+0x1aac>
   2dea4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2dea8:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
   2deac:	74 0c                	je     2deba <__gdtoa+0x1aac>
   2deae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2deb2:	48 89 c7             	mov    %rax,%rdi
   2deb5:	e8 0b c9 ff ff       	call   2a7c5 <__Bfree_D2A>
   2deba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2debe:	48 89 c7             	mov    %rax,%rdi
   2dec1:	e8 ff c8 ff ff       	call   2a7c5 <__Bfree_D2A>
   2dec6:	eb 01                	jmp    2dec9 <__gdtoa+0x1abb>
   2dec8:	90                   	nop
   2dec9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   2decd:	48 89 c7             	mov    %rax,%rdi
   2ded0:	e8 f0 c8 ff ff       	call   2a7c5 <__Bfree_D2A>
   2ded5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2ded9:	c6 00 00             	movb   $0x0,(%rax)
   2dedc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
   2dee2:	8d 50 01             	lea    0x1(%rax),%edx
   2dee5:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   2deec:	89 10                	mov    %edx,(%rax)
   2deee:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   2def5:	00 
   2def6:	74 0e                	je     2df06 <__gdtoa+0x1af8>
   2def8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2deff:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   2df03:	48 89 10             	mov    %rdx,(%rax)
   2df06:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2df0d:	8b 00                	mov    (%rax),%eax
   2df0f:	0b 85 44 ff ff ff    	or     -0xbc(%rbp),%eax
   2df15:	89 c2                	mov    %eax,%edx
   2df17:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2df1e:	89 10                	mov    %edx,(%rax)
   2df20:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2df24:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2df28:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2df2f:	00 00 
   2df31:	74 05                	je     2df38 <__gdtoa+0x1b2a>
   2df33:	e8 4f 33 ff ff       	call   21287 <__stack_chk_fail>
   2df38:	c9                   	leave  
   2df39:	c3                   	ret    

000000000002df3a <__rshift_D2A>:
   2df3a:	f3 0f 1e fa          	endbr64 
   2df3e:	55                   	push   %rbp
   2df3f:	48 89 e5             	mov    %rsp,%rbp
   2df42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2df46:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   2df49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2df4d:	48 83 c0 18          	add    $0x18,%rax
   2df51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2df55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2df59:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2df5d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2df60:	c1 f8 05             	sar    $0x5,%eax
   2df63:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2df66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2df6a:	8b 40 14             	mov    0x14(%rax),%eax
   2df6d:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
   2df70:	0f 8d e4 00 00 00    	jge    2e05a <__rshift_D2A+0x120>
   2df76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2df7a:	8b 40 14             	mov    0x14(%rax),%eax
   2df7d:	48 98                	cltq   
   2df7f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2df86:	00 
   2df87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2df8b:	48 01 d0             	add    %rdx,%rax
   2df8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2df92:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2df95:	48 98                	cltq   
   2df97:	48 c1 e0 02          	shl    $0x2,%rax
   2df9b:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   2df9f:	83 65 d4 1f          	andl   $0x1f,-0x2c(%rbp)
   2dfa3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   2dfa7:	0f 84 a3 00 00 00    	je     2e050 <__rshift_D2A+0x116>
   2dfad:	b8 20 00 00 00       	mov    $0x20,%eax
   2dfb2:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   2dfb5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   2dfb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2dfbc:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2dfc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2dfc4:	8b 10                	mov    (%rax),%edx
   2dfc6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2dfc9:	89 c1                	mov    %eax,%ecx
   2dfcb:	d3 ea                	shr    %cl,%edx
   2dfcd:	89 d0                	mov    %edx,%eax
   2dfcf:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2dfd2:	eb 3c                	jmp    2e010 <__rshift_D2A+0xd6>
   2dfd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2dfd8:	8b 10                	mov    (%rax),%edx
   2dfda:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2dfdd:	89 c1                	mov    %eax,%ecx
   2dfdf:	d3 e2                	shl    %cl,%edx
   2dfe1:	89 d1                	mov    %edx,%ecx
   2dfe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2dfe7:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2dfeb:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   2dfef:	0b 4d e0             	or     -0x20(%rbp),%ecx
   2dff2:	89 ca                	mov    %ecx,%edx
   2dff4:	89 10                	mov    %edx,(%rax)
   2dff6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2dffa:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2dffe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2e002:	8b 10                	mov    (%rax),%edx
   2e004:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2e007:	89 c1                	mov    %eax,%ecx
   2e009:	d3 ea                	shr    %cl,%edx
   2e00b:	89 d0                	mov    %edx,%eax
   2e00d:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2e010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e014:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2e018:	72 ba                	jb     2dfd4 <__rshift_D2A+0x9a>
   2e01a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e01e:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2e021:	89 10                	mov    %edx,(%rax)
   2e023:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e027:	8b 00                	mov    (%rax),%eax
   2e029:	85 c0                	test   %eax,%eax
   2e02b:	74 2d                	je     2e05a <__rshift_D2A+0x120>
   2e02d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
   2e032:	eb 26                	jmp    2e05a <__rshift_D2A+0x120>
   2e034:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2e038:	48 8d 42 04          	lea    0x4(%rdx),%rax
   2e03c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2e040:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e044:	48 8d 48 04          	lea    0x4(%rax),%rcx
   2e048:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   2e04c:	8b 12                	mov    (%rdx),%edx
   2e04e:	89 10                	mov    %edx,(%rax)
   2e050:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e054:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2e058:	72 da                	jb     2e034 <__rshift_D2A+0xfa>
   2e05a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e05e:	48 8d 50 18          	lea    0x18(%rax),%rdx
   2e062:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e066:	48 29 d0             	sub    %rdx,%rax
   2e069:	48 c1 f8 02          	sar    $0x2,%rax
   2e06d:	89 c2                	mov    %eax,%edx
   2e06f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e073:	89 50 14             	mov    %edx,0x14(%rax)
   2e076:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e07a:	8b 40 14             	mov    0x14(%rax),%eax
   2e07d:	85 c0                	test   %eax,%eax
   2e07f:	75 0b                	jne    2e08c <__rshift_D2A+0x152>
   2e081:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e085:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
   2e08c:	90                   	nop
   2e08d:	5d                   	pop    %rbp
   2e08e:	c3                   	ret    

000000000002e08f <__trailz_D2A>:
   2e08f:	f3 0f 1e fa          	endbr64 
   2e093:	55                   	push   %rbp
   2e094:	48 89 e5             	mov    %rsp,%rbp
   2e097:	48 83 ec 30          	sub    $0x30,%rsp
   2e09b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2e09f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e0a6:	00 00 
   2e0a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e0ac:	31 c0                	xor    %eax,%eax
   2e0ae:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   2e0b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e0b9:	48 83 c0 18          	add    $0x18,%rax
   2e0bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2e0c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e0c5:	8b 40 14             	mov    0x14(%rax),%eax
   2e0c8:	48 98                	cltq   
   2e0ca:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2e0d1:	00 
   2e0d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e0d6:	48 01 d0             	add    %rdx,%rax
   2e0d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2e0dd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   2e0e4:	eb 09                	jmp    2e0ef <__trailz_D2A+0x60>
   2e0e6:	83 45 e4 20          	addl   $0x20,-0x1c(%rbp)
   2e0ea:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
   2e0ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e0f3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2e0f7:	73 0a                	jae    2e103 <__trailz_D2A+0x74>
   2e0f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e0fd:	8b 00                	mov    (%rax),%eax
   2e0ff:	85 c0                	test   %eax,%eax
   2e101:	74 e3                	je     2e0e6 <__trailz_D2A+0x57>
   2e103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e107:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2e10b:	73 18                	jae    2e125 <__trailz_D2A+0x96>
   2e10d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e111:	8b 00                	mov    (%rax),%eax
   2e113:	89 45 e0             	mov    %eax,-0x20(%rbp)
   2e116:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   2e11a:	48 89 c7             	mov    %rax,%rdi
   2e11d:	e8 32 c7 ff ff       	call   2a854 <__lo0bits_D2A>
   2e122:	01 45 e4             	add    %eax,-0x1c(%rbp)
   2e125:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2e128:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2e12c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2e133:	00 00 
   2e135:	74 05                	je     2e13c <__trailz_D2A+0xad>
   2e137:	e8 4b 31 ff ff       	call   21287 <__stack_chk_fail>
   2e13c:	c9                   	leave  
   2e13d:	c3                   	ret    

000000000002e13e <tcrypto_access_version_dummy1>:
   2e13e:	f3 0f 1e fa          	endbr64 
   2e142:	55                   	push   %rbp
   2e143:	48 89 e5             	mov    %rsp,%rbp
   2e146:	c6 05 23 b0 00 00 73 	movb   $0x73,0xb023(%rip)        # 39170 <sgx_tcrypto_version>
   2e14d:	48 8d 05 1c b0 00 00 	lea    0xb01c(%rip),%rax        # 39170 <sgx_tcrypto_version>
   2e154:	5d                   	pop    %rbp
   2e155:	c3                   	ret    

000000000002e156 <sgx_init_crypto_lib>:
   2e156:	f3 0f 1e fa          	endbr64 
   2e15a:	55                   	push   %rbp
   2e15b:	48 89 e5             	mov    %rsp,%rbp
   2e15e:	48 83 ec 10          	sub    $0x10,%rsp
   2e162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2e166:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2e16a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e16e:	48 89 c7             	mov    %rax,%rdi
   2e171:	e8 02 00 00 00       	call   2e178 <init_ipp_cpuid>
   2e176:	c9                   	leave  
   2e177:	c3                   	ret    

000000000002e178 <init_ipp_cpuid>:
   2e178:	f3 0f 1e fa          	endbr64 
   2e17c:	55                   	push   %rbp
   2e17d:	48 89 e5             	mov    %rsp,%rbp
   2e180:	48 83 ec 20          	sub    $0x20,%rsp
   2e184:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2e188:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   2e18f:	48 8b 05 5a 9e 00 00 	mov    0x9e5a(%rip),%rax        # 37ff0 <ippcpSetCpuFeatures>
   2e196:	48 85 c0             	test   %rax,%rax
   2e199:	75 0a                	jne    2e1a5 <init_ipp_cpuid+0x2d>
   2e19b:	b8 00 00 00 00       	mov    $0x0,%eax
   2e1a0:	e9 81 02 00 00       	jmp    2e426 <init_ipp_cpuid+0x2ae>
   2e1a5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   2e1ac:	00 
   2e1ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e1b1:	25 00 02 00 00       	and    $0x200,%eax
   2e1b6:	48 85 c0             	test   %rax,%rax
   2e1b9:	0f 84 31 02 00 00    	je     2e3f0 <init_ipp_cpuid+0x278>
   2e1bf:	48 83 4d f8 5f       	orq    $0x5f,-0x8(%rbp)
   2e1c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e1c8:	25 00 08 00 00       	and    $0x800,%eax
   2e1cd:	48 85 c0             	test   %rax,%rax
   2e1d0:	74 05                	je     2e1d7 <init_ipp_cpuid+0x5f>
   2e1d2:	48 83 4d f8 20       	orq    $0x20,-0x8(%rbp)
   2e1d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e1db:	25 00 04 00 00       	and    $0x400,%eax
   2e1e0:	48 85 c0             	test   %rax,%rax
   2e1e3:	74 08                	je     2e1ed <init_ipp_cpuid+0x75>
   2e1e5:	48 81 4d f8 80 00 00 	orq    $0x80,-0x8(%rbp)
   2e1ec:	00 
   2e1ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e1f1:	25 00 00 01 00       	and    $0x10000,%eax
   2e1f6:	48 85 c0             	test   %rax,%rax
   2e1f9:	74 10                	je     2e20b <init_ipp_cpuid+0x93>
   2e1fb:	48 81 4d f8 00 01 00 	orq    $0x100,-0x8(%rbp)
   2e202:	00 
   2e203:	48 81 4d f8 00 02 00 	orq    $0x200,-0x8(%rbp)
   2e20a:	00 
   2e20b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e20f:	25 00 40 00 00       	and    $0x4000,%eax
   2e214:	48 85 c0             	test   %rax,%rax
   2e217:	74 08                	je     2e221 <init_ipp_cpuid+0xa9>
   2e219:	48 81 4d f8 00 04 00 	orq    $0x400,-0x8(%rbp)
   2e220:	00 
   2e221:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e225:	25 00 20 00 00       	and    $0x2000,%eax
   2e22a:	48 85 c0             	test   %rax,%rax
   2e22d:	74 08                	je     2e237 <init_ipp_cpuid+0xbf>
   2e22f:	48 81 4d f8 00 08 00 	orq    $0x800,-0x8(%rbp)
   2e236:	00 
   2e237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e23b:	25 00 00 02 00       	and    $0x20000,%eax
   2e240:	48 85 c0             	test   %rax,%rax
   2e243:	74 08                	je     2e24d <init_ipp_cpuid+0xd5>
   2e245:	48 81 4d f8 00 20 00 	orq    $0x2000,-0x8(%rbp)
   2e24c:	00 
   2e24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e251:	25 00 80 00 00       	and    $0x8000,%eax
   2e256:	48 85 c0             	test   %rax,%rax
   2e259:	74 08                	je     2e263 <init_ipp_cpuid+0xeb>
   2e25b:	48 81 4d f8 00 40 00 	orq    $0x4000,-0x8(%rbp)
   2e262:	00 
   2e263:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e267:	25 00 00 80 00       	and    $0x800000,%eax
   2e26c:	48 85 c0             	test   %rax,%rax
   2e26f:	74 08                	je     2e279 <init_ipp_cpuid+0x101>
   2e271:	48 81 4d f8 00 80 00 	orq    $0x8000,-0x8(%rbp)
   2e278:	00 
   2e279:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e27d:	25 00 00 00 10       	and    $0x10000000,%eax
   2e282:	48 85 c0             	test   %rax,%rax
   2e285:	74 08                	je     2e28f <init_ipp_cpuid+0x117>
   2e287:	48 81 4d f8 00 00 01 	orq    $0x10000,-0x8(%rbp)
   2e28e:	00 
   2e28f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e293:	25 00 00 00 20       	and    $0x20000000,%eax
   2e298:	48 85 c0             	test   %rax,%rax
   2e29b:	74 08                	je     2e2a5 <init_ipp_cpuid+0x12d>
   2e29d:	48 81 4d f8 00 00 02 	orq    $0x20000,-0x8(%rbp)
   2e2a4:	00 
   2e2a5:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
   2e2ac:	00 00 00 
   2e2af:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e2b3:	48 85 c0             	test   %rax,%rax
   2e2b6:	74 08                	je     2e2c0 <init_ipp_cpuid+0x148>
   2e2b8:	48 81 4d f8 00 00 08 	orq    $0x80000,-0x8(%rbp)
   2e2bf:	00 
   2e2c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e2c4:	25 00 00 00 08       	and    $0x8000000,%eax
   2e2c9:	48 85 c0             	test   %rax,%rax
   2e2cc:	74 16                	je     2e2e4 <init_ipp_cpuid+0x16c>
   2e2ce:	48 81 4d f8 00 00 10 	orq    $0x100000,-0x8(%rbp)
   2e2d5:	00 
   2e2d6:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   2e2dd:	00 00 00 
   2e2e0:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2e2e4:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   2e2eb:	00 00 00 
   2e2ee:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e2f2:	48 85 c0             	test   %rax,%rax
   2e2f5:	74 08                	je     2e2ff <init_ipp_cpuid+0x187>
   2e2f7:	48 81 4d f8 00 00 80 	orq    $0x800000,-0x8(%rbp)
   2e2fe:	00 
   2e2ff:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   2e306:	00 00 00 
   2e309:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e30d:	48 85 c0             	test   %rax,%rax
   2e310:	74 08                	je     2e31a <init_ipp_cpuid+0x1a2>
   2e312:	48 81 4d f8 00 00 40 	orq    $0x400000,-0x8(%rbp)
   2e319:	00 
   2e31a:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   2e321:	00 00 00 
   2e324:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e328:	48 85 c0             	test   %rax,%rax
   2e32b:	74 08                	je     2e335 <init_ipp_cpuid+0x1bd>
   2e32d:	48 81 4d f8 00 00 20 	orq    $0x200000,-0x8(%rbp)
   2e334:	00 
   2e335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e339:	25 00 00 00 01       	and    $0x1000000,%eax
   2e33e:	48 85 c0             	test   %rax,%rax
   2e341:	74 08                	je     2e34b <init_ipp_cpuid+0x1d3>
   2e343:	48 81 4d f8 00 00 00 	orq    $0x2000000,-0x8(%rbp)
   2e34a:	02 
   2e34b:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   2e352:	00 00 00 
   2e355:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e359:	48 85 c0             	test   %rax,%rax
   2e35c:	74 08                	je     2e366 <init_ipp_cpuid+0x1ee>
   2e35e:	48 81 4d f8 00 00 00 	orq    $0x1000000,-0x8(%rbp)
   2e365:	01 
   2e366:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
   2e36d:	00 00 00 
   2e370:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e374:	48 85 c0             	test   %rax,%rax
   2e377:	74 08                	je     2e381 <init_ipp_cpuid+0x209>
   2e379:	48 81 4d f8 00 00 00 	orq    $0x4000000,-0x8(%rbp)
   2e380:	04 
   2e381:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
   2e388:	00 00 00 
   2e38b:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e38f:	48 85 c0             	test   %rax,%rax
   2e392:	74 08                	je     2e39c <init_ipp_cpuid+0x224>
   2e394:	48 81 4d f8 00 00 00 	orq    $0x8000000,-0x8(%rbp)
   2e39b:	08 
   2e39c:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
   2e3a3:	02 00 00 
   2e3a6:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e3aa:	48 85 c0             	test   %rax,%rax
   2e3ad:	74 08                	je     2e3b7 <init_ipp_cpuid+0x23f>
   2e3af:	48 81 4d f8 00 00 00 	orq    $0x40000000,-0x8(%rbp)
   2e3b6:	40 
   2e3b7:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
   2e3be:	01 00 00 
   2e3c1:	48 23 45 e8          	and    -0x18(%rbp),%rax
   2e3c5:	48 85 c0             	test   %rax,%rax
   2e3c8:	74 08                	je     2e3d2 <init_ipp_cpuid+0x25a>
   2e3ca:	48 81 4d f8 00 00 00 	orq    $0x20000000,-0x8(%rbp)
   2e3d1:	20 
   2e3d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e3d6:	25 00 00 00 40       	and    $0x40000000,%eax
   2e3db:	48 85 c0             	test   %rax,%rax
   2e3de:	74 17                	je     2e3f7 <init_ipp_cpuid+0x27f>
   2e3e0:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   2e3e7:	00 00 00 
   2e3ea:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2e3ee:	eb 07                	jmp    2e3f7 <init_ipp_cpuid+0x27f>
   2e3f0:	b8 02 00 00 00       	mov    $0x2,%eax
   2e3f5:	eb 2f                	jmp    2e426 <init_ipp_cpuid+0x2ae>
   2e3f7:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   2e3fe:	00 00 80 
   2e401:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   2e405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2e409:	48 89 c7             	mov    %rax,%rdi
   2e40c:	e8 07 4c fd ff       	call   3018 <ippcpSetCpuFeatures@plt>
   2e411:	89 45 f4             	mov    %eax,-0xc(%rbp)
   2e414:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   2e418:	74 07                	je     2e421 <init_ipp_cpuid+0x2a9>
   2e41a:	b8 02 00 00 00       	mov    $0x2,%eax
   2e41f:	eb 05                	jmp    2e426 <init_ipp_cpuid+0x2ae>
   2e421:	b8 00 00 00 00       	mov    $0x0,%eax
   2e426:	c9                   	leave  
   2e427:	c3                   	ret    

000000000002e428 <tservice_access_version_dummy1>:
   2e428:	f3 0f 1e fa          	endbr64 
   2e42c:	55                   	push   %rbp
   2e42d:	48 89 e5             	mov    %rsp,%rbp
   2e430:	c6 05 69 ad 00 00 73 	movb   $0x73,0xad69(%rip)        # 391a0 <sgx_tservice_version>
   2e437:	48 8d 05 62 ad 00 00 	lea    0xad62(%rip),%rax        # 391a0 <sgx_tservice_version>
   2e43e:	5d                   	pop    %rbp
   2e43f:	c3                   	ret    

000000000002e440 <sgx_create_report>:
   2e440:	f3 0f 1e fa          	endbr64 
   2e444:	55                   	push   %rbp
   2e445:	48 89 e5             	mov    %rsp,%rbp
   2e448:	53                   	push   %rbx
   2e449:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   2e450:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   2e457:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
   2e45e:	00 
   2e45f:	48 89 b4 24 60 01 00 	mov    %rsi,0x160(%rsp)
   2e466:	00 
   2e467:	48 89 94 24 58 01 00 	mov    %rdx,0x158(%rsp)
   2e46e:	00 
   2e46f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e476:	00 00 
   2e478:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   2e47f:	00 
   2e480:	31 c0                	xor    %eax,%eax
   2e482:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   2e489:	00 
   2e48a:	ba 40 00 00 00       	mov    $0x40,%edx
   2e48f:	be 00 00 00 00       	mov    $0x0,%esi
   2e494:	48 89 c7             	mov    %rax,%rdi
   2e497:	e8 24 9b ff ff       	call   27fc0 <__memset>
   2e49c:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   2e4a3:	00 
   2e4a4:	ba 00 02 00 00       	mov    $0x200,%edx
   2e4a9:	be 00 00 00 00       	mov    $0x0,%esi
   2e4ae:	48 89 c7             	mov    %rax,%rdi
   2e4b1:	e8 0a 9b ff ff       	call   27fc0 <__memset>
   2e4b6:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   2e4bd:	00 
   2e4be:	ba b0 01 00 00       	mov    $0x1b0,%edx
   2e4c3:	be 00 00 00 00       	mov    $0x0,%esi
   2e4c8:	48 89 c7             	mov    %rax,%rdi
   2e4cb:	e8 f0 9a ff ff       	call   27fc0 <__memset>
   2e4d0:	48 83 bc 24 68 01 00 	cmpq   $0x0,0x168(%rsp)
   2e4d7:	00 00 
   2e4d9:	74 49                	je     2e524 <sgx_create_report+0xe4>
   2e4db:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   2e4e2:	00 
   2e4e3:	be 00 02 00 00       	mov    $0x200,%esi
   2e4e8:	48 89 c7             	mov    %rax,%rdi
   2e4eb:	e8 b7 ec fd ff       	call   d1a7 <sgx_is_within_enclave>
   2e4f0:	85 c0                	test   %eax,%eax
   2e4f2:	0f 94 c0             	sete   %al
   2e4f5:	84 c0                	test   %al,%al
   2e4f7:	74 0a                	je     2e503 <sgx_create_report+0xc3>
   2e4f9:	b8 02 00 00 00       	mov    $0x2,%eax
   2e4fe:	e9 a6 01 00 00       	jmp    2e6a9 <sgx_create_report+0x269>
   2e503:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   2e50a:	00 
   2e50b:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   2e512:	00 
   2e513:	48 89 d6             	mov    %rdx,%rsi
   2e516:	ba 40 00 00 00       	mov    $0x40,%edx
   2e51b:	48 89 c7             	mov    %rax,%rdi
   2e51e:	48 89 d1             	mov    %rdx,%rcx
   2e521:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   2e524:	48 83 bc 24 60 01 00 	cmpq   $0x0,0x160(%rsp)
   2e52b:	00 00 
   2e52d:	0f 84 8f 00 00 00    	je     2e5c2 <sgx_create_report+0x182>
   2e533:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   2e53a:	00 
   2e53b:	be 40 00 00 00       	mov    $0x40,%esi
   2e540:	48 89 c7             	mov    %rax,%rdi
   2e543:	e8 5f ec fd ff       	call   d1a7 <sgx_is_within_enclave>
   2e548:	85 c0                	test   %eax,%eax
   2e54a:	0f 94 c0             	sete   %al
   2e54d:	84 c0                	test   %al,%al
   2e54f:	74 0a                	je     2e55b <sgx_create_report+0x11b>
   2e551:	b8 02 00 00 00       	mov    $0x2,%eax
   2e556:	e9 4e 01 00 00       	jmp    2e6a9 <sgx_create_report+0x269>
   2e55b:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   2e562:	00 
   2e563:	48 8b 08             	mov    (%rax),%rcx
   2e566:	48 8b 58 08          	mov    0x8(%rax),%rbx
   2e56a:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   2e571:	00 
   2e572:	48 89 9c 24 88 01 00 	mov    %rbx,0x188(%rsp)
   2e579:	00 
   2e57a:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2e57e:	48 8b 58 18          	mov    0x18(%rax),%rbx
   2e582:	48 89 8c 24 90 01 00 	mov    %rcx,0x190(%rsp)
   2e589:	00 
   2e58a:	48 89 9c 24 98 01 00 	mov    %rbx,0x198(%rsp)
   2e591:	00 
   2e592:	48 8b 48 20          	mov    0x20(%rax),%rcx
   2e596:	48 8b 58 28          	mov    0x28(%rax),%rbx
   2e59a:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   2e5a1:	00 
   2e5a2:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
   2e5a9:	00 
   2e5aa:	48 8b 50 38          	mov    0x38(%rax),%rdx
   2e5ae:	48 8b 40 30          	mov    0x30(%rax),%rax
   2e5b2:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
   2e5b9:	00 
   2e5ba:	48 89 94 24 b8 01 00 	mov    %rdx,0x1b8(%rsp)
   2e5c1:	00 
   2e5c2:	48 83 bc 24 58 01 00 	cmpq   $0x0,0x158(%rsp)
   2e5c9:	00 00 
   2e5cb:	74 19                	je     2e5e6 <sgx_create_report+0x1a6>
   2e5cd:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   2e5d4:	00 
   2e5d5:	be b0 01 00 00       	mov    $0x1b0,%esi
   2e5da:	48 89 c7             	mov    %rax,%rdi
   2e5dd:	e8 c5 eb fd ff       	call   d1a7 <sgx_is_within_enclave>
   2e5e2:	85 c0                	test   %eax,%eax
   2e5e4:	75 07                	jne    2e5ed <sgx_create_report+0x1ad>
   2e5e6:	b8 01 00 00 00       	mov    $0x1,%eax
   2e5eb:	eb 05                	jmp    2e5f2 <sgx_create_report+0x1b2>
   2e5ed:	b8 00 00 00 00       	mov    $0x0,%eax
   2e5f2:	84 c0                	test   %al,%al
   2e5f4:	74 0a                	je     2e600 <sgx_create_report+0x1c0>
   2e5f6:	b8 02 00 00 00       	mov    $0x2,%eax
   2e5fb:	e9 a9 00 00 00       	jmp    2e6a9 <sgx_create_report+0x269>
   2e600:	48 8d 94 24 00 02 00 	lea    0x200(%rsp),%rdx
   2e607:	00 
   2e608:	48 8d 8c 24 80 01 00 	lea    0x180(%rsp),%rcx
   2e60f:	00 
   2e610:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   2e617:	00 
   2e618:	48 89 ce             	mov    %rcx,%rsi
   2e61b:	48 89 c7             	mov    %rax,%rdi
   2e61e:	e8 51 0e 00 00       	call   2f474 <do_ereport>
   2e623:	89 84 24 74 01 00 00 	mov    %eax,0x174(%rsp)
   2e62a:	83 bc 24 74 01 00 00 	cmpl   $0x0,0x174(%rsp)
   2e631:	00 
   2e632:	75 5e                	jne    2e692 <sgx_create_report+0x252>
   2e634:	48 c7 84 24 78 01 00 	movq   $0x0,0x178(%rsp)
   2e63b:	00 00 00 00 00 
   2e640:	48 83 bc 24 78 01 00 	cmpq   $0x35,0x178(%rsp)
   2e647:	00 35 
   2e649:	77 47                	ja     2e692 <sgx_create_report+0x252>
   2e64b:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   2e652:	00 
   2e653:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2e65a:	00 
   2e65b:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   2e662:	00 
   2e663:	48 01 d0             	add    %rdx,%rax
   2e666:	48 8b 94 24 78 01 00 	mov    0x178(%rsp),%rdx
   2e66d:	00 
   2e66e:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   2e675:	00 
   2e676:	48 8b 94 24 58 01 00 	mov    0x158(%rsp),%rdx
   2e67d:	00 
   2e67e:	48 01 ca             	add    %rcx,%rdx
   2e681:	48 8b 00             	mov    (%rax),%rax
   2e684:	48 89 02             	mov    %rax,(%rdx)
   2e687:	48 83 84 24 78 01 00 	addq   $0x1,0x178(%rsp)
   2e68e:	00 01 
   2e690:	eb ae                	jmp    2e640 <sgx_create_report+0x200>
   2e692:	83 bc 24 74 01 00 00 	cmpl   $0x0,0x174(%rsp)
   2e699:	00 
   2e69a:	74 07                	je     2e6a3 <sgx_create_report+0x263>
   2e69c:	b8 01 00 00 00       	mov    $0x1,%eax
   2e6a1:	eb 05                	jmp    2e6a8 <sgx_create_report+0x268>
   2e6a3:	b8 00 00 00 00       	mov    $0x0,%eax
   2e6a8:	90                   	nop
   2e6a9:	48 8b 9c 24 f8 07 00 	mov    0x7f8(%rsp),%rbx
   2e6b0:	00 
   2e6b1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   2e6b8:	00 00 
   2e6ba:	74 05                	je     2e6c1 <sgx_create_report+0x281>
   2e6bc:	e8 c6 2b ff ff       	call   21287 <__stack_chk_fail>
   2e6c1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2e6c5:	c9                   	leave  
   2e6c6:	c3                   	ret    

000000000002e6c7 <sgx_self_report>:
   2e6c7:	f3 0f 1e fa          	endbr64 
   2e6cb:	55                   	push   %rbp
   2e6cc:	48 89 e5             	mov    %rsp,%rbp
   2e6cf:	48 8b 05 da e6 03 00 	mov    0x3e6da(%rip),%rax        # 6cdb0 <_ZZ15sgx_self_reportE7_report+0x30>
   2e6d6:	48 85 c0             	test   %rax,%rax
   2e6d9:	75 3a                	jne    2e715 <sgx_self_report+0x4e>
   2e6db:	48 8d 3d 4e e8 03 00 	lea    0x3e84e(%rip),%rdi        # 6cf30 <_ZZ15sgx_self_reportE11report_lock>
   2e6e2:	e8 45 8a fe ff       	call   1712c <sgx_spin_lock>
   2e6e7:	48 8b 05 c2 e6 03 00 	mov    0x3e6c2(%rip),%rax        # 6cdb0 <_ZZ15sgx_self_reportE7_report+0x30>
   2e6ee:	48 85 c0             	test   %rax,%rax
   2e6f1:	75 16                	jne    2e709 <sgx_self_report+0x42>
   2e6f3:	48 8d 15 86 e6 03 00 	lea    0x3e686(%rip),%rdx        # 6cd80 <_ZZ15sgx_self_reportE7_report>
   2e6fa:	be 00 00 00 00       	mov    $0x0,%esi
   2e6ff:	bf 00 00 00 00       	mov    $0x0,%edi
   2e704:	e8 37 fd ff ff       	call   2e440 <sgx_create_report>
   2e709:	48 8d 3d 20 e8 03 00 	lea    0x3e820(%rip),%rdi        # 6cf30 <_ZZ15sgx_self_reportE11report_lock>
   2e710:	e8 b2 8a fe ff       	call   171c7 <sgx_spin_unlock>
   2e715:	48 8d 05 64 e6 03 00 	lea    0x3e664(%rip),%rax        # 6cd80 <_ZZ15sgx_self_reportE7_report>
   2e71c:	5d                   	pop    %rbp
   2e71d:	c3                   	ret    

Disassembly of section .nipx:

000000000002e71e <do_init_enclave>:
   2e71e:	f3 0f 1e fa          	endbr64 
   2e722:	55                   	push   %rbp
   2e723:	48 89 e5             	mov    %rsp,%rbp
   2e726:	48 83 ec 60          	sub    $0x60,%rsp
   2e72a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   2e72e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2e732:	e8 04 0a 00 00       	call   2f13b <get_enclave_base>
   2e737:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e73b:	e8 26 0a 00 00       	call   2f166 <lock_enclave>
   2e740:	85 c0                	test   %eax,%eax
   2e742:	0f 95 c0             	setne  %al
   2e745:	84 c0                	test   %al,%al
   2e747:	74 0a                	je     2e753 <do_init_enclave+0x35>
   2e749:	b8 01 00 00 00       	mov    $0x1,%eax
   2e74e:	e9 67 02 00 00       	jmp    2e9ba <do_init_enclave+0x29c>
   2e753:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   2e757:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e75b:	48 89 d6             	mov    %rdx,%rsi
   2e75e:	48 89 c7             	mov    %rax,%rdi
   2e761:	e8 56 02 00 00       	call   2e9bc <init_enclave>
   2e766:	85 c0                	test   %eax,%eax
   2e768:	0f 95 c0             	setne  %al
   2e76b:	84 c0                	test   %al,%al
   2e76d:	74 0a                	je     2e779 <do_init_enclave+0x5b>
   2e76f:	b8 01 00 00 00       	mov    $0x1,%eax
   2e774:	e9 41 02 00 00       	jmp    2e9ba <do_init_enclave+0x29c>
   2e779:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2e77d:	be 01 00 00 00       	mov    $0x1,%esi
   2e782:	48 89 c7             	mov    %rax,%rdi
   2e785:	e8 3b fe fd ff       	call   e5c5 <do_init_thread>
   2e78a:	85 c0                	test   %eax,%eax
   2e78c:	0f 95 c0             	setne  %al
   2e78f:	84 c0                	test   %al,%al
   2e791:	74 0a                	je     2e79d <do_init_enclave+0x7f>
   2e793:	b8 01 00 00 00       	mov    $0x1,%eax
   2e798:	e9 1d 02 00 00       	jmp    2e9ba <do_init_enclave+0x29c>
   2e79d:	8b 05 4d 96 00 00    	mov    0x964d(%rip),%eax        # 37df0 <EDMM_supported>
   2e7a3:	85 c0                	test   %eax,%eax
   2e7a5:	74 71                	je     2e818 <do_init_enclave+0xfa>
   2e7a7:	e8 09 0a fe ff       	call   f1b5 <get_heap_min_size>
   2e7ac:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2e7b0:	48 8d 05 89 37 00 00 	lea    0x3789(%rip),%rax        # 31f40 <g_global_data>
   2e7b7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2e7bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e7bf:	48 01 d0             	add    %rdx,%rax
   2e7c2:	48 89 c7             	mov    %rax,%rdi
   2e7c5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2e7c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2e7cd:	48 89 d1             	mov    %rdx,%rcx
   2e7d0:	ba 00 00 00 00       	mov    $0x0,%edx
   2e7d5:	48 89 c6             	mov    %rax,%rsi
   2e7d8:	e8 64 29 ff ff       	call   21141 <memset_s>
   2e7dd:	48 8d 05 64 96 00 00 	lea    0x9664(%rip),%rax        # 37e48 <rsrv_mem_min_size>
   2e7e4:	48 8b 10             	mov    (%rax),%rdx
   2e7e7:	48 8d 05 5a 96 00 00 	lea    0x965a(%rip),%rax        # 37e48 <rsrv_mem_min_size>
   2e7ee:	48 8b 00             	mov    (%rax),%rax
   2e7f1:	48 8d 0d 48 37 00 00 	lea    0x3748(%rip),%rcx        # 31f40 <g_global_data>
   2e7f8:	48 8b 71 20          	mov    0x20(%rcx),%rsi
   2e7fc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e800:	48 01 f1             	add    %rsi,%rcx
   2e803:	48 89 cf             	mov    %rcx,%rdi
   2e806:	48 89 d1             	mov    %rdx,%rcx
   2e809:	ba 00 00 00 00       	mov    $0x0,%edx
   2e80e:	48 89 c6             	mov    %rax,%rsi
   2e811:	e8 2b 29 ff ff       	call   21141 <memset_s>
   2e816:	eb 76                	jmp    2e88e <do_init_enclave+0x170>
   2e818:	48 8d 05 21 37 00 00 	lea    0x3721(%rip),%rax        # 31f40 <g_global_data>
   2e81f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   2e823:	48 8d 05 16 37 00 00 	lea    0x3716(%rip),%rax        # 31f40 <g_global_data>
   2e82a:	48 8b 40 18          	mov    0x18(%rax),%rax
   2e82e:	48 8d 0d 0b 37 00 00 	lea    0x370b(%rip),%rcx        # 31f40 <g_global_data>
   2e835:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   2e839:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e83d:	48 01 f1             	add    %rsi,%rcx
   2e840:	48 89 cf             	mov    %rcx,%rdi
   2e843:	48 89 d1             	mov    %rdx,%rcx
   2e846:	ba 00 00 00 00       	mov    $0x0,%edx
   2e84b:	48 89 c6             	mov    %rax,%rsi
   2e84e:	e8 ee 28 ff ff       	call   21141 <memset_s>
   2e853:	48 8d 05 e6 36 00 00 	lea    0x36e6(%rip),%rax        # 31f40 <g_global_data>
   2e85a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   2e85e:	48 8d 05 db 36 00 00 	lea    0x36db(%rip),%rax        # 31f40 <g_global_data>
   2e865:	48 8b 40 28          	mov    0x28(%rax),%rax
   2e869:	48 8d 0d d0 36 00 00 	lea    0x36d0(%rip),%rcx        # 31f40 <g_global_data>
   2e870:	48 8b 71 20          	mov    0x20(%rcx),%rsi
   2e874:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   2e878:	48 01 f1             	add    %rsi,%rcx
   2e87b:	48 89 cf             	mov    %rcx,%rdi
   2e87e:	48 89 d1             	mov    %rdx,%rcx
   2e881:	ba 00 00 00 00       	mov    $0x0,%edx
   2e886:	48 89 c6             	mov    %rax,%rsi
   2e889:	e8 b3 28 ff ff       	call   21141 <memset_s>
   2e88e:	bf 02 00 00 00       	mov    $0x2,%edi
   2e893:	e8 c0 08 00 00       	call   2f158 <set_enclave_state>
   2e898:	8b 05 52 95 00 00    	mov    0x9552(%rip),%eax        # 37df0 <EDMM_supported>
   2e89e:	85 c0                	test   %eax,%eax
   2e8a0:	0f 84 0f 01 00 00    	je     2e9b5 <do_init_enclave+0x297>
   2e8a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e8aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2e8ae:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   2e8b5:	00 
   2e8b6:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   2e8bd:	00 
   2e8be:	48 8d 05 7b 36 00 00 	lea    0x367b(%rip),%rax        # 31f40 <g_global_data>
   2e8c5:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
   2e8cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2e8d0:	48 8d 05 69 36 00 00 	lea    0x3669(%rip),%rax        # 31f40 <g_global_data>
   2e8d7:	8b 80 38 01 00 00    	mov    0x138(%rax),%eax
   2e8dd:	89 c0                	mov    %eax,%eax
   2e8df:	48 c1 e0 05          	shl    $0x5,%rax
   2e8e3:	48 89 c2             	mov    %rax,%rdx
   2e8e6:	48 8d 05 53 36 00 00 	lea    0x3653(%rip),%rax        # 31f40 <g_global_data>
   2e8ed:	48 8d 80 40 01 00 00 	lea    0x140(%rax),%rax
   2e8f4:	48 01 d0             	add    %rdx,%rax
   2e8f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2e8fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2e8ff:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   2e903:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e907:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2e90b:	73 15                	jae    2e922 <do_init_enclave+0x204>
   2e90d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e911:	0f b7 00             	movzwl (%rax),%eax
   2e914:	66 83 f8 17          	cmp    $0x17,%ax
   2e918:	74 07                	je     2e921 <do_init_enclave+0x203>
   2e91a:	48 83 45 d0 20       	addq   $0x20,-0x30(%rbp)
   2e91f:	eb e2                	jmp    2e903 <do_init_enclave+0x1e5>
   2e921:	90                   	nop
   2e922:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e926:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
   2e92a:	74 3f                	je     2e96b <do_init_enclave+0x24d>
   2e92c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e930:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2e934:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2e938:	48 01 d0             	add    %rdx,%rax
   2e93b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2e93f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2e943:	8b 40 04             	mov    0x4(%rax),%eax
   2e946:	89 c0                	mov    %eax,%eax
   2e948:	48 c1 e0 0c          	shl    $0xc,%rax
   2e94c:	48 89 c2             	mov    %rax,%rdx
   2e94f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2e953:	48 01 d0             	add    %rdx,%rax
   2e956:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2e95a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2e95e:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
   2e962:	76 07                	jbe    2e96b <do_init_enclave+0x24d>
   2e964:	b8 01 00 00 00       	mov    $0x1,%eax
   2e969:	eb 4f                	jmp    2e9ba <do_init_enclave+0x29c>
   2e96b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2e96f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2e973:	48 89 d6             	mov    %rdx,%rsi
   2e976:	48 89 c7             	mov    %rax,%rdi
   2e979:	e8 cc 82 fe ff       	call   16c4a <sgx_mm_init>
   2e97e:	85 c0                	test   %eax,%eax
   2e980:	0f 95 c0             	setne  %al
   2e983:	84 c0                	test   %al,%al
   2e985:	74 07                	je     2e98e <do_init_enclave+0x270>
   2e987:	b8 01 00 00 00       	mov    $0x1,%eax
   2e98c:	eb 2c                	jmp    2e9ba <do_init_enclave+0x29c>
   2e98e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2e992:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2e996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2e99a:	48 89 ce             	mov    %rcx,%rsi
   2e99d:	48 89 c7             	mov    %rax,%rdi
   2e9a0:	e8 51 e2 fd ff       	call   cbf6 <init_rts_emas>
   2e9a5:	89 45 bc             	mov    %eax,-0x44(%rbp)
   2e9a8:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   2e9ac:	74 07                	je     2e9b5 <do_init_enclave+0x297>
   2e9ae:	b8 01 00 00 00       	mov    $0x1,%eax
   2e9b3:	eb 05                	jmp    2e9ba <do_init_enclave+0x29c>
   2e9b5:	b8 00 00 00 00       	mov    $0x0,%eax
   2e9ba:	c9                   	leave  
   2e9bb:	c3                   	ret    

000000000002e9bc <init_enclave>:
   2e9bc:	f3 0f 1e fa          	endbr64 
   2e9c0:	55                   	push   %rbp
   2e9c1:	48 89 e5             	mov    %rsp,%rbp
   2e9c4:	41 55                	push   %r13
   2e9c6:	41 54                	push   %r12
   2e9c8:	53                   	push   %rbx
   2e9c9:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   2e9d0:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
   2e9d7:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
   2e9de:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2e9e5:	00 00 
   2e9e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   2e9eb:	31 c0                	xor    %eax,%eax
   2e9ed:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   2e9f4:	00 
   2e9f5:	74 0a                	je     2ea01 <init_enclave+0x45>
   2e9f7:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   2e9fe:	00 
   2e9ff:	75 0a                	jne    2ea0b <init_enclave+0x4f>
   2ea01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ea06:	e9 4c 04 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2ea0b:	48 8b 05 d6 95 00 00 	mov    0x95d6(%rip),%rax        # 37fe8 <_Z9pcl_entryPvS_>
   2ea12:	48 85 c0             	test   %rax,%rax
   2ea15:	74 35                	je     2ea4c <init_enclave+0x90>
   2ea17:	0f ae e8             	lfence 
   2ea1a:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
   2ea21:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2ea28:	48 89 d6             	mov    %rdx,%rsi
   2ea2b:	48 89 c7             	mov    %rax,%rdi
   2ea2e:	e8 dd 45 fd ff       	call   3010 <_Z9pcl_entryPvS_@plt>
   2ea33:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
   2ea39:	83 bd f4 fe ff ff 00 	cmpl   $0x0,-0x10c(%rbp)
   2ea40:	74 0a                	je     2ea4c <init_enclave+0x90>
   2ea42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ea47:	e9 0b 04 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2ea4c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   2ea53:	48 89 c7             	mov    %rax,%rdi
   2ea56:	e8 33 1a fe ff       	call   1048e <relocate_enclave>
   2ea5b:	85 c0                	test   %eax,%eax
   2ea5d:	0f 95 c0             	setne  %al
   2ea60:	84 c0                	test   %al,%al
   2ea62:	74 0a                	je     2ea6e <init_enclave+0xb2>
   2ea64:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ea69:	e9 e9 03 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2ea6e:	e8 c8 06 00 00       	call   2f13b <get_enclave_base>
   2ea73:	48 89 05 7e 93 00 00 	mov    %rax,0x937e(%rip)        # 37df8 <g_enclave_base>
   2ea7a:	48 8d 05 bf 34 00 00 	lea    0x34bf(%rip),%rax        # 31f40 <g_global_data>
   2ea81:	48 8b 80 b0 06 00 00 	mov    0x6b0(%rax),%rax
   2ea88:	48 89 05 71 93 00 00 	mov    %rax,0x9371(%rip)        # 37e00 <g_enclave_size>
   2ea8f:	48 8d 05 aa 34 00 00 	lea    0x34aa(%rip),%rax        # 31f40 <g_global_data>
   2ea96:	48 8b 80 a0 06 00 00 	mov    0x6a0(%rax),%rax
   2ea9d:	48 85 c0             	test   %rax,%rax
   2eaa0:	0f 95 c0             	setne  %al
   2eaa3:	84 c0                	test   %al,%al
   2eaa5:	74 39                	je     2eae0 <init_enclave+0x124>
   2eaa7:	48 8d 05 92 34 00 00 	lea    0x3492(%rip),%rax        # 31f40 <g_global_data>
   2eaae:	48 8b 90 a0 06 00 00 	mov    0x6a0(%rax),%rdx
   2eab5:	48 8b 05 3c 93 00 00 	mov    0x933c(%rip),%rax        # 37df8 <g_enclave_base>
   2eabc:	48 39 c2             	cmp    %rax,%rdx
   2eabf:	0f 95 c0             	setne  %al
   2eac2:	84 c0                	test   %al,%al
   2eac4:	74 05                	je     2eacb <init_enclave+0x10f>
   2eac6:	e8 60 0a 00 00       	call   2f52b <abort>
   2eacb:	48 8d 05 6e 34 00 00 	lea    0x346e(%rip),%rax        # 31f40 <g_global_data>
   2ead2:	48 8b 80 a8 06 00 00 	mov    0x6a8(%rax),%rax
   2ead9:	48 89 05 18 93 00 00 	mov    %rax,0x9318(%rip)        # 37df8 <g_enclave_base>
   2eae0:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   2eae7:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   2eaee:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   2eaf5:	be b0 00 00 00       	mov    $0xb0,%esi
   2eafa:	48 89 c7             	mov    %rax,%rdi
   2eafd:	e8 3c e7 fd ff       	call   d23e <sgx_is_outside_enclave>
   2eb02:	85 c0                	test   %eax,%eax
   2eb04:	0f 94 c0             	sete   %al
   2eb07:	84 c0                	test   %al,%al
   2eb09:	74 0a                	je     2eb15 <init_enclave+0x159>
   2eb0b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2eb10:	e9 42 03 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2eb15:	0f ae e8             	lfence 
   2eb18:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   2eb1f:	48 8b 08             	mov    (%rax),%rcx
   2eb22:	48 8b 58 08          	mov    0x8(%rax),%rbx
   2eb26:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
   2eb2d:	48 89 9d 28 ff ff ff 	mov    %rbx,-0xd8(%rbp)
   2eb34:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2eb38:	48 8b 58 18          	mov    0x18(%rax),%rbx
   2eb3c:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
   2eb43:	48 89 9d 38 ff ff ff 	mov    %rbx,-0xc8(%rbp)
   2eb4a:	48 8b 48 20          	mov    0x20(%rax),%rcx
   2eb4e:	48 8b 58 28          	mov    0x28(%rax),%rbx
   2eb52:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   2eb59:	48 89 9d 48 ff ff ff 	mov    %rbx,-0xb8(%rbp)
   2eb60:	48 8b 48 30          	mov    0x30(%rax),%rcx
   2eb64:	48 8b 58 38          	mov    0x38(%rax),%rbx
   2eb68:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   2eb6f:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
   2eb76:	48 8b 48 40          	mov    0x40(%rax),%rcx
   2eb7a:	48 8b 58 48          	mov    0x48(%rax),%rbx
   2eb7e:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   2eb85:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
   2eb8c:	48 8b 48 50          	mov    0x50(%rax),%rcx
   2eb90:	48 8b 58 58          	mov    0x58(%rax),%rbx
   2eb94:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   2eb9b:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
   2eba2:	48 8b 48 60          	mov    0x60(%rax),%rcx
   2eba6:	48 8b 58 68          	mov    0x68(%rax),%rbx
   2ebaa:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   2ebae:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
   2ebb2:	48 8b 48 70          	mov    0x70(%rax),%rcx
   2ebb6:	48 8b 58 78          	mov    0x78(%rax),%rbx
   2ebba:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   2ebbe:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
   2ebc2:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
   2ebc9:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx
   2ebd0:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   2ebd4:	48 89 5d a8          	mov    %rbx,-0x58(%rbp)
   2ebd8:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
   2ebdf:	48 8b 98 98 00 00 00 	mov    0x98(%rax),%rbx
   2ebe6:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   2ebea:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
   2ebee:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx
   2ebf5:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   2ebfc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2ec00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   2ec04:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   2ec0b:	00 00 00 00 
   2ec0f:	48 8b 85 2c ff ff ff 	mov    -0xd4(%rbp),%rax
   2ec16:	48 ba 00 00 00 00 00 	movabs $0x4000000000000000,%rdx
   2ec1d:	00 00 40 
   2ec20:	48 21 d0             	and    %rdx,%rax
   2ec23:	48 85 c0             	test   %rax,%rax
   2ec26:	74 1c                	je     2ec44 <init_enclave+0x288>
   2ec28:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   2ec2c:	ba b0 00 00 00       	mov    $0xb0,%edx
   2ec31:	48 3d b0 00 00 00    	cmp    $0xb0,%rax
   2ec37:	48 0f 47 c2          	cmova  %rdx,%rax
   2ec3b:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   2ec42:	eb 0b                	jmp    2ec4f <init_enclave+0x293>
   2ec44:	48 c7 85 f8 fe ff ff 	movq   $0x9c,-0x108(%rbp)
   2ec4b:	9c 00 00 00 
   2ec4f:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
   2ec56:	00 00 00 00 
   2ec5a:	b8 b0 00 00 00       	mov    $0xb0,%eax
   2ec5f:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
   2ec66:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   2ec6d:	73 28                	jae    2ec97 <init_enclave+0x2db>
   2ec6f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   2ec76:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   2ec7d:	48 01 c2             	add    %rax,%rdx
   2ec80:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   2ec87:	48 01 d0             	add    %rdx,%rax
   2ec8a:	c6 00 00             	movb   $0x0,(%rax)
   2ec8d:	48 83 85 00 ff ff ff 	addq   $0x1,-0x100(%rbp)
   2ec94:	01 
   2ec95:	eb c3                	jmp    2ec5a <init_enclave+0x29e>
   2ec97:	8b 45 cc             	mov    -0x34(%rbp),%eax
   2ec9a:	89 05 68 91 00 00    	mov    %eax,0x9168(%rip)        # 37e08 <g_cpu_core_num>
   2eca0:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   2eca6:	89 05 48 91 00 00    	mov    %eax,0x9148(%rip)        # 37df4 <g_sdk_version>
   2ecac:	8b 05 42 91 00 00    	mov    0x9142(%rip),%eax        # 37df4 <g_sdk_version>
   2ecb2:	85 c0                	test   %eax,%eax
   2ecb4:	75 0c                	jne    2ecc2 <init_enclave+0x306>
   2ecb6:	c7 05 30 91 00 00 00 	movl   $0x0,0x9130(%rip)        # 37df0 <EDMM_supported>
   2ecbd:	00 00 00 
   2ecc0:	eb 35                	jmp    2ecf7 <init_enclave+0x33b>
   2ecc2:	8b 05 2c 91 00 00    	mov    0x912c(%rip),%eax        # 37df4 <g_sdk_version>
   2ecc8:	83 f8 04             	cmp    $0x4,%eax
   2eccb:	7e 20                	jle    2eced <init_enclave+0x331>
   2eccd:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   2ecd4:	48 83 c0 0c          	add    $0xc,%rax
   2ecd8:	be 00 00 00 00       	mov    $0x0,%esi
   2ecdd:	48 89 c7             	mov    %rax,%rdi
   2ece0:	e8 d5 06 fe ff       	call   f3ba <feature_supported>
   2ece5:	89 05 05 91 00 00    	mov    %eax,0x9105(%rip)        # 37df0 <EDMM_supported>
   2eceb:	eb 0a                	jmp    2ecf7 <init_enclave+0x33b>
   2eced:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ecf2:	e9 60 01 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2ecf7:	8b 1d f3 90 00 00    	mov    0x90f3(%rip),%ebx        # 37df0 <EDMM_supported>
   2ecfd:	e8 b3 04 fe ff       	call   f1b5 <get_heap_min_size>
   2ed02:	49 89 c5             	mov    %rax,%r13
   2ed05:	e8 15 04 fe ff       	call   f11f <get_heap_size>
   2ed0a:	49 89 c4             	mov    %rax,%r12
   2ed0d:	e8 ed 03 fe ff       	call   f0ff <get_heap_base>
   2ed12:	89 d9                	mov    %ebx,%ecx
   2ed14:	4c 89 ea             	mov    %r13,%rdx
   2ed17:	4c 89 e6             	mov    %r12,%rsi
   2ed1a:	48 89 c7             	mov    %rax,%rdi
   2ed1d:	e8 d7 7f fe ff       	call   16cf9 <heap_init>
   2ed22:	85 c0                	test   %eax,%eax
   2ed24:	0f 95 c0             	setne  %al
   2ed27:	84 c0                	test   %al,%al
   2ed29:	74 0a                	je     2ed35 <init_enclave+0x379>
   2ed2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ed30:	e9 22 01 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2ed35:	e8 f8 13 fe ff       	call   10132 <get_xfeature_state>
   2ed3a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   2ed41:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2ed48:	48 25 ff e7 ff e1    	and    $0xffffffffe1ffe7ff,%rax
   2ed4e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   2ed55:	48 8b 85 2c ff ff ff 	mov    -0xd4(%rbp),%rax
   2ed5c:	48 ba 00 00 00 00 00 	movabs $0x4000000000000000,%rdx
   2ed63:	00 00 40 
   2ed66:	48 21 d0             	and    %rdx,%rax
   2ed69:	48 85 c0             	test   %rax,%rax
   2ed6c:	74 0b                	je     2ed79 <init_enclave+0x3bd>
   2ed6e:	48 8b 45 c4          	mov    -0x3c(%rbp),%rax
   2ed72:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   2ed79:	8b 05 75 90 00 00    	mov    0x9075(%rip),%eax        # 37df4 <g_sdk_version>
   2ed7f:	83 f8 01             	cmp    $0x1,%eax
   2ed82:	7f 09                	jg     2ed8d <init_enclave+0x3d1>
   2ed84:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   2ed88:	48 85 c0             	test   %rax,%rax
   2ed8b:	74 37                	je     2edc4 <init_enclave+0x408>
   2ed8d:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   2ed94:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   2ed9b:	48 8d 48 14          	lea    0x14(%rax),%rcx
   2ed9f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2eda6:	48 89 ce             	mov    %rcx,%rsi
   2eda9:	48 89 c7             	mov    %rax,%rdi
   2edac:	e8 38 e3 fd ff       	call   d0e9 <init_optimized_libs>
   2edb1:	85 c0                	test   %eax,%eax
   2edb3:	0f 95 c0             	setne  %al
   2edb6:	84 c0                	test   %al,%al
   2edb8:	74 35                	je     2edef <init_enclave+0x433>
   2edba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2edbf:	e9 93 00 00 00       	jmp    2ee57 <init_enclave+0x49b>
   2edc4:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   2edcb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   2edd2:	be 00 00 00 00       	mov    $0x0,%esi
   2edd7:	48 89 c7             	mov    %rax,%rdi
   2edda:	e8 0a e3 fd ff       	call   d0e9 <init_optimized_libs>
   2eddf:	85 c0                	test   %eax,%eax
   2ede1:	0f 95 c0             	setne  %al
   2ede4:	84 c0                	test   %al,%al
   2ede6:	74 07                	je     2edef <init_enclave+0x433>
   2ede8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2eded:	eb 68                	jmp    2ee57 <init_enclave+0x49b>
   2edef:	e8 8d 04 fe ff       	call   f281 <get_rsrv_size>
   2edf4:	48 85 c0             	test   %rax,%rax
   2edf7:	0f 95 c0             	setne  %al
   2edfa:	84 c0                	test   %al,%al
   2edfc:	74 33                	je     2ee31 <init_enclave+0x475>
   2edfe:	e8 14 05 fe ff       	call   f317 <get_rsrv_min_size>
   2ee03:	49 89 c4             	mov    %rax,%r12
   2ee06:	e8 76 04 fe ff       	call   f281 <get_rsrv_size>
   2ee0b:	48 89 c3             	mov    %rax,%rbx
   2ee0e:	e8 26 04 fe ff       	call   f239 <get_rsrv_base>
   2ee13:	4c 89 e2             	mov    %r12,%rdx
   2ee16:	48 89 de             	mov    %rbx,%rsi
   2ee19:	48 89 c7             	mov    %rax,%rdi
   2ee1c:	e8 9f 2a ff ff       	call   218c0 <rsrv_mem_init>
   2ee21:	85 c0                	test   %eax,%eax
   2ee23:	0f 95 c0             	setne  %al
   2ee26:	84 c0                	test   %al,%al
   2ee28:	74 07                	je     2ee31 <init_enclave+0x475>
   2ee2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ee2f:	eb 26                	jmp    2ee57 <init_enclave+0x49b>
   2ee31:	be 08 00 00 00       	mov    $0x8,%esi
   2ee36:	48 8d 3d d3 8f 00 00 	lea    0x8fd3(%rip),%rdi        # 37e10 <__intel_security_cookie>
   2ee3d:	e8 45 e6 fd ff       	call   d487 <sgx_read_rand>
   2ee42:	85 c0                	test   %eax,%eax
   2ee44:	0f 95 c0             	setne  %al
   2ee47:	84 c0                	test   %al,%al
   2ee49:	74 07                	je     2ee52 <init_enclave+0x496>
   2ee4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2ee50:	eb 05                	jmp    2ee57 <init_enclave+0x49b>
   2ee52:	b8 00 00 00 00       	mov    $0x0,%eax
   2ee57:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   2ee5b:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   2ee62:	00 00 
   2ee64:	74 05                	je     2ee6b <init_enclave+0x4af>
   2ee66:	e8 1c 24 ff ff       	call   21287 <__stack_chk_fail>
   2ee6b:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   2ee72:	5b                   	pop    %rbx
   2ee73:	41 5c                	pop    %r12
   2ee75:	41 5d                	pop    %r13
   2ee77:	5d                   	pop    %rbp
   2ee78:	c3                   	ret    

000000000002ee79 <sgx_is_enclave_crashed>:
   2ee79:	f3 0f 1e fa          	endbr64 
   2ee7d:	55                   	push   %rbp
   2ee7e:	48 89 e5             	mov    %rsp,%rbp
   2ee81:	e8 c1 02 00 00       	call   2f147 <get_enclave_state>
   2ee86:	83 f8 03             	cmp    $0x3,%eax
   2ee89:	0f 94 c0             	sete   %al
   2ee8c:	0f b6 c0             	movzbl %al,%eax
   2ee8f:	5d                   	pop    %rbp
   2ee90:	c3                   	ret    

000000000002ee91 <_ZL16init_stack_guardPv>:
   2ee91:	f3 0f 1e fa          	endbr64 
   2ee95:	55                   	push   %rbp
   2ee96:	48 89 e5             	mov    %rsp,%rbp
   2ee99:	48 83 ec 20          	sub    $0x20,%rsp
   2ee9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2eea1:	e8 e0 02 00 00       	call   2f186 <get_thread_data>
   2eea6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2eeaa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2eeaf:	74 25                	je     2eed6 <_ZL16init_stack_guardPv+0x45>
   2eeb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2eeb5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2eeb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2eebd:	48 8b 40 08          	mov    0x8(%rax),%rax
   2eec1:	48 39 c2             	cmp    %rax,%rdx
   2eec4:	75 17                	jne    2eedd <_ZL16init_stack_guardPv+0x4c>
   2eec6:	48 8d 05 73 30 00 00 	lea    0x3073(%rip),%rax        # 31f40 <g_global_data>
   2eecd:	48 8b 40 38          	mov    0x38(%rax),%rax
   2eed1:	48 85 c0             	test   %rax,%rax
   2eed4:	74 07                	je     2eedd <_ZL16init_stack_guardPv+0x4c>
   2eed6:	b8 01 00 00 00       	mov    $0x1,%eax
   2eedb:	eb 05                	jmp    2eee2 <_ZL16init_stack_guardPv+0x51>
   2eedd:	b8 00 00 00 00       	mov    $0x0,%eax
   2eee2:	84 c0                	test   %al,%al
   2eee4:	74 71                	je     2ef57 <_ZL16init_stack_guardPv+0xc6>
   2eee6:	48 8d 05 53 30 00 00 	lea    0x3053(%rip),%rax        # 31f40 <g_global_data>
   2eeed:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2eef1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2eef5:	48 01 d0             	add    %rdx,%rax
   2eef8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2eefc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2ef01:	75 1f                	jne    2ef22 <_ZL16init_stack_guardPv+0x91>
   2ef03:	48 8d 0d 5b 23 00 00 	lea    0x235b(%rip),%rcx        # 31265 <__func__.2623+0x15>
   2ef0a:	48 8d 15 68 23 00 00 	lea    0x2368(%rip),%rdx        # 31279 <__func__.2623+0x29>
   2ef11:	be 3f 00 00 00       	mov    $0x3f,%esi
   2ef16:	48 8d 3d 6d 23 00 00 	lea    0x236d(%rip),%rdi        # 3128a <__func__.2623+0x3a>
   2ef1d:	e8 b7 7d fe ff       	call   16cd9 <__assert>
   2ef22:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   2ef29:	00 
   2ef2a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2ef2e:	be 08 00 00 00       	mov    $0x8,%esi
   2ef33:	48 89 c7             	mov    %rax,%rdi
   2ef36:	e8 4c e5 fd ff       	call   d487 <sgx_read_rand>
   2ef3b:	85 c0                	test   %eax,%eax
   2ef3d:	0f 95 c0             	setne  %al
   2ef40:	84 c0                	test   %al,%al
   2ef42:	74 05                	je     2ef49 <_ZL16init_stack_guardPv+0xb8>
   2ef44:	e8 e2 05 00 00       	call   2f52b <abort>
   2ef49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2ef4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2ef51:	48 89 50 28          	mov    %rdx,0x28(%rax)
   2ef55:	eb 01                	jmp    2ef58 <_ZL16init_stack_guardPv+0xc7>
   2ef57:	90                   	nop
   2ef58:	c9                   	leave  
   2ef59:	c3                   	ret    

000000000002ef5a <enter_enclave>:
   2ef5a:	f3 0f 1e fa          	endbr64 
   2ef5e:	55                   	push   %rbp
   2ef5f:	48 89 e5             	mov    %rsp,%rbp
   2ef62:	48 83 ec 30          	sub    $0x30,%rsp
   2ef66:	89 7d ec             	mov    %edi,-0x14(%rbp)
   2ef69:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2ef6d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2ef71:	89 4d e8             	mov    %ecx,-0x18(%rbp)
   2ef74:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   2ef7b:	e8 f9 fe ff ff       	call   2ee79 <sgx_is_enclave_crashed>
   2ef80:	85 c0                	test   %eax,%eax
   2ef82:	0f 95 c0             	setne  %al
   2ef85:	84 c0                	test   %al,%al
   2ef87:	74 0a                	je     2ef93 <enter_enclave+0x39>
   2ef89:	b8 06 10 00 00       	mov    $0x1006,%eax
   2ef8e:	e9 1e 01 00 00       	jmp    2f0b1 <enter_enclave+0x157>
   2ef93:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   2ef97:	74 11                	je     2efaa <enter_enclave+0x50>
   2ef99:	e8 a9 01 00 00       	call   2f147 <get_enclave_state>
   2ef9e:	83 f8 02             	cmp    $0x2,%eax
   2efa1:	74 07                	je     2efaa <enter_enclave+0x50>
   2efa3:	b8 01 00 00 00       	mov    $0x1,%eax
   2efa8:	eb 05                	jmp    2efaf <enter_enclave+0x55>
   2efaa:	b8 00 00 00 00       	mov    $0x0,%eax
   2efaf:	84 c0                	test   %al,%al
   2efb1:	74 12                	je     2efc5 <enter_enclave+0x6b>
   2efb3:	bf 03 00 00 00       	mov    $0x3,%edi
   2efb8:	e8 9b 01 00 00       	call   2f158 <set_enclave_state>
   2efbd:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2efc0:	e9 ec 00 00 00       	jmp    2f0b1 <enter_enclave+0x157>
   2efc5:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   2efc9:	0f 85 98 00 00 00    	jne    2f067 <enter_enclave+0x10d>
   2efcf:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   2efd3:	79 06                	jns    2efdb <enter_enclave+0x81>
   2efd5:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
   2efd9:	75 29                	jne    2f004 <enter_enclave+0xaa>
   2efdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2efdf:	48 89 c7             	mov    %rax,%rdi
   2efe2:	e8 aa fe ff ff       	call   2ee91 <_ZL16init_stack_guardPv>
   2efe7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2efeb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   2efef:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2eff2:	48 89 ce             	mov    %rcx,%rsi
   2eff5:	89 c7                	mov    %eax,%edi
   2eff7:	e8 c6 f8 fd ff       	call   e8c2 <do_ecall>
   2effc:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2efff:	e9 9a 00 00 00       	jmp    2f09e <enter_enclave+0x144>
   2f004:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   2f008:	75 18                	jne    2f022 <enter_enclave+0xc8>
   2f00a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2f00e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2f012:	48 89 d6             	mov    %rdx,%rsi
   2f015:	48 89 c7             	mov    %rax,%rdi
   2f018:	e8 01 f7 ff ff       	call   2e71e <do_init_enclave>
   2f01d:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2f020:	eb 7c                	jmp    2f09e <enter_enclave+0x144>
   2f022:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   2f026:	75 11                	jne    2f039 <enter_enclave+0xdf>
   2f028:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2f02c:	48 89 c7             	mov    %rax,%rdi
   2f02f:	e8 9a ff fd ff       	call   efce <do_oret>
   2f034:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2f037:	eb 65                	jmp    2f09e <enter_enclave+0x144>
   2f039:	83 7d ec fc          	cmpl   $0xfffffffc,-0x14(%rbp)
   2f03d:	75 11                	jne    2f050 <enter_enclave+0xf6>
   2f03f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2f043:	48 89 c7             	mov    %rax,%rdi
   2f046:	e8 b3 fa fd ff       	call   eafe <do_ecall_add_thread>
   2f04b:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2f04e:	eb 4e                	jmp    2f09e <enter_enclave+0x144>
   2f050:	83 7d ec fb          	cmpl   $0xfffffffb,-0x14(%rbp)
   2f054:	75 48                	jne    2f09e <enter_enclave+0x144>
   2f056:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2f05a:	48 89 c7             	mov    %rax,%rdi
   2f05d:	e8 67 fb fd ff       	call   ebc9 <do_uninit_enclave>
   2f062:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2f065:	eb 37                	jmp    2f09e <enter_enclave+0x144>
   2f067:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
   2f06b:	75 31                	jne    2f09e <enter_enclave+0x144>
   2f06d:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   2f071:	75 2b                	jne    2f09e <enter_enclave+0x144>
   2f073:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2f077:	48 89 c7             	mov    %rax,%rdi
   2f07a:	e8 9a 0a fe ff       	call   fb19 <trts_handle_exception>
   2f07f:	89 45 fc             	mov    %eax,-0x4(%rbp)
   2f082:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2f086:	48 89 c7             	mov    %rax,%rdi
   2f089:	e8 16 e5 fd ff       	call   d5a4 <check_static_stack_canary>
   2f08e:	85 c0                	test   %eax,%eax
   2f090:	0f 95 c0             	setne  %al
   2f093:	84 c0                	test   %al,%al
   2f095:	74 07                	je     2f09e <enter_enclave+0x144>
   2f097:	c7 45 fc 09 10 00 00 	movl   $0x1009,-0x4(%rbp)
   2f09e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   2f0a2:	75 0a                	jne    2f0ae <enter_enclave+0x154>
   2f0a4:	bf 03 00 00 00       	mov    $0x3,%edi
   2f0a9:	e8 aa 00 00 00       	call   2f158 <set_enclave_state>
   2f0ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
   2f0b1:	c9                   	leave  
   2f0b2:	c3                   	ret    

000000000002f0b3 <restore_xregs>:
   2f0b3:	f3 0f 1e fa          	endbr64 
   2f0b7:	48 89 f9             	mov    %rdi,%rcx
   2f0ba:	48 8d 05 43 af 02 00 	lea    0x2af43(%rip),%rax        # 5a004 <g_xsave_enabled>
   2f0c1:	8b 00                	mov    (%rax),%eax
   2f0c3:	83 f8 00             	cmp    $0x0,%eax
   2f0c6:	74 16                	je     2f0de <restore_xregs+0x2b>
   2f0c8:	48 31 c0             	xor    %rax,%rax
   2f0cb:	48 31 d2             	xor    %rdx,%rdx
   2f0ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f0d3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2f0d8:	48 0f ae 29          	xrstor64 (%rcx)
   2f0dc:	eb 04                	jmp    2f0e2 <restore_xregs+0x2f>
   2f0de:	48 0f ae 09          	fxrstor64 (%rcx)
   2f0e2:	c3                   	ret    

000000000002f0e3 <save_xregs>:
   2f0e3:	f3 0f 1e fa          	endbr64 
   2f0e7:	48 89 f9             	mov    %rdi,%rcx
   2f0ea:	48 8d 05 13 af 02 00 	lea    0x2af13(%rip),%rax        # 5a004 <g_xsave_enabled>
   2f0f1:	9b                   	fwait
   2f0f2:	8b 00                	mov    (%rax),%eax
   2f0f4:	83 f8 00             	cmp    $0x0,%eax
   2f0f7:	74 16                	je     2f10f <save_xregs+0x2c>
   2f0f9:	48 31 c0             	xor    %rax,%rax
   2f0fc:	48 31 d2             	xor    %rdx,%rdx
   2f0ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f104:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2f109:	48 0f c7 21          	xsavec64 (%rcx)
   2f10d:	eb 04                	jmp    2f113 <save_xregs+0x30>
   2f10f:	48 0f ae 01          	fxsave64 (%rcx)
   2f113:	c3                   	ret    

000000000002f114 <__x86_return_thunk>:
   2f114:	c3                   	ret    

000000000002f115 <__x86_indirect_thunk_rax>:
   2f115:	ff e0                	jmp    *%rax

000000000002f117 <__x86_indirect_thunk_rbx>:
   2f117:	ff e3                	jmp    *%rbx

000000000002f119 <__x86_indirect_thunk_rcx>:
   2f119:	ff e1                	jmp    *%rcx

000000000002f11b <__x86_indirect_thunk_rdx>:
   2f11b:	ff e2                	jmp    *%rdx

000000000002f11d <__x86_indirect_thunk_rbp>:
   2f11d:	ff e5                	jmp    *%rbp

000000000002f11f <__x86_indirect_thunk_rsi>:
   2f11f:	ff e6                	jmp    *%rsi

000000000002f121 <__x86_indirect_thunk_rdi>:
   2f121:	ff e7                	jmp    *%rdi

000000000002f123 <__x86_indirect_thunk_r8>:
   2f123:	41 ff e0             	jmp    *%r8

000000000002f126 <__x86_indirect_thunk_r9>:
   2f126:	41 ff e1             	jmp    *%r9

000000000002f129 <__x86_indirect_thunk_r10>:
   2f129:	41 ff e2             	jmp    *%r10

000000000002f12c <__x86_indirect_thunk_r11>:
   2f12c:	41 ff e3             	jmp    *%r11

000000000002f12f <__x86_indirect_thunk_r12>:
   2f12f:	41 ff e4             	jmp    *%r12

000000000002f132 <__x86_indirect_thunk_r13>:
   2f132:	41 ff e5             	jmp    *%r13

000000000002f135 <__x86_indirect_thunk_r14>:
   2f135:	41 ff e6             	jmp    *%r14

000000000002f138 <__x86_indirect_thunk_r15>:
   2f138:	41 ff e7             	jmp    *%r15

000000000002f13b <get_enclave_base>:
   2f13b:	f3 0f 1e fa          	endbr64 
   2f13f:	48 8d 05 ba 0e fd ff 	lea    -0x2f146(%rip),%rax        # 0 <enclave.so>
   2f146:	c3                   	ret    

000000000002f147 <get_enclave_state>:
   2f147:	f3 0f 1e fa          	endbr64 
   2f14b:	48 8d 0d ae ae 02 00 	lea    0x2aeae(%rip),%rcx        # 5a000 <g_enclave_state>
   2f152:	48 31 c0             	xor    %rax,%rax
   2f155:	8b 01                	mov    (%rcx),%eax
   2f157:	c3                   	ret    

000000000002f158 <set_enclave_state>:
   2f158:	f3 0f 1e fa          	endbr64 
   2f15c:	48 8d 05 9d ae 02 00 	lea    0x2ae9d(%rip),%rax        # 5a000 <g_enclave_state>
   2f163:	89 38                	mov    %edi,(%rax)
   2f165:	c3                   	ret    

000000000002f166 <lock_enclave>:
   2f166:	f3 0f 1e fa          	endbr64 
   2f16a:	48 8d 15 8f ae 02 00 	lea    0x2ae8f(%rip),%rdx        # 5a000 <g_enclave_state>
   2f171:	48 31 c0             	xor    %rax,%rax
   2f174:	b8 00 00 00 00       	mov    $0x0,%eax
   2f179:	48 31 c9             	xor    %rcx,%rcx
   2f17c:	b9 01 00 00 00       	mov    $0x1,%ecx
   2f181:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   2f185:	c3                   	ret    

000000000002f186 <get_thread_data>:
   2f186:	f3 0f 1e fa          	endbr64 
   2f18a:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   2f191:	00 00 
   2f193:	c3                   	ret    

000000000002f194 <get_stack_guard>:
   2f194:	f3 0f 1e fa          	endbr64 
   2f198:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   2f19f:	00 00 
   2f1a1:	c3                   	ret    

000000000002f1a2 <enclave_entry>:
   2f1a2:	f3 0f 1e fa          	endbr64 
   2f1a6:	48 31 d2             	xor    %rdx,%rdx
   2f1a9:	48 01 d2             	add    %rdx,%rdx
   2f1ac:	fc                   	cld    
   2f1ad:	4d 31 c0             	xor    %r8,%r8
   2f1b0:	4d 31 c9             	xor    %r9,%r9
   2f1b3:	4d 31 d2             	xor    %r10,%r10
   2f1b6:	4d 31 db             	xor    %r11,%r11
   2f1b9:	4d 31 e4             	xor    %r12,%r12
   2f1bc:	4d 31 ed             	xor    %r13,%r13
   2f1bf:	4d 31 f6             	xor    %r14,%r14
   2f1c2:	4d 31 ff             	xor    %r15,%r15
   2f1c5:	48 83 f8 00          	cmp    $0x0,%rax
   2f1c9:	0f 85 d1 00 00 00    	jne    2f2a0 <enclave_entry+0xfe>
   2f1cf:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   2f1d6:	00 00 
   2f1d8:	48 83 f8 00          	cmp    $0x0,%rax
   2f1dc:	75 0f                	jne    2f1ed <enclave_entry+0x4b>
   2f1de:	48 89 d8             	mov    %rbx,%rax
   2f1e1:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   2f1e7:	48 2d 00 04 00 00    	sub    $0x400,%rax
   2f1ed:	48 94                	xchg   %rax,%rsp
   2f1ef:	51                   	push   %rcx
   2f1f0:	55                   	push   %rbp
   2f1f1:	48 89 e5             	mov    %rsp,%rbp
   2f1f4:	9c                   	pushf  
   2f1f5:	48 f7 14 24          	notq   (%rsp)
   2f1f9:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   2f200:	00 
   2f201:	48 f7 14 24          	notq   (%rsp)
   2f205:	9d                   	popf   
   2f206:	48 83 ec 30          	sub    $0x30,%rsp
   2f20a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2f20e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2f212:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   2f216:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   2f21a:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   2f21e:	48 83 ec 20          	sub    $0x20,%rsp
   2f222:	48 8d 3d d7 33 00 00 	lea    0x33d7(%rip),%rdi        # 32600 <SYNTHETIC_STATE>
   2f229:	e8 85 fe ff ff       	call   2f0b3 <restore_xregs>
   2f22e:	0f ae e8             	lfence 
   2f231:	48 83 c4 20          	add    $0x20,%rsp
   2f235:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   2f239:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   2f23d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2f241:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   2f245:	e8 10 fd ff ff       	call   2ef5a <enter_enclave>
   2f24a:	48 89 c3             	mov    %rax,%rbx
   2f24d:	48 8d 3d ac 33 00 00 	lea    0x33ac(%rip),%rdi        # 32600 <SYNTHETIC_STATE>
   2f254:	e8 5a fe ff ff       	call   2f0b3 <restore_xregs>
   2f259:	0f ae e8             	lfence 
   2f25c:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   2f263:	48 89 de             	mov    %rbx,%rsi
   2f266:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2f26a:	48 89 ec             	mov    %rbp,%rsp
   2f26d:	5d                   	pop    %rbp
   2f26e:	5b                   	pop    %rbx
   2f26f:	48 89 d4             	mov    %rdx,%rsp
   2f272:	48 31 c9             	xor    %rcx,%rcx
   2f275:	48 31 d2             	xor    %rdx,%rdx
   2f278:	4d 31 c0             	xor    %r8,%r8
   2f27b:	4d 31 c9             	xor    %r9,%r9
   2f27e:	4d 31 d2             	xor    %r10,%r10
   2f281:	4d 31 db             	xor    %r11,%r11
   2f284:	4d 31 e4             	xor    %r12,%r12
   2f287:	4d 31 ed             	xor    %r13,%r13
   2f28a:	4d 31 f6             	xor    %r14,%r14
   2f28d:	4d 31 ff             	xor    %r15,%r15
   2f290:	48 01 d2             	add    %rdx,%rdx
   2f293:	fc                   	cld    
   2f294:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   2f29b:	0f 01 d7             	enclu  
   2f29e:	0f 0b                	ud2    
   2f2a0:	48 89 c2             	mov    %rax,%rdx
   2f2a3:	48 89 d8             	mov    %rbx,%rax
   2f2a6:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   2f2ac:	e9 3c ff ff ff       	jmp    2f1ed <enclave_entry+0x4b>
   2f2b1:	0f 0b                	ud2    

000000000002f2b3 <do_ocall>:
   2f2b3:	f3 0f 1e fa          	endbr64 
   2f2b7:	55                   	push   %rbp
   2f2b8:	48 89 e5             	mov    %rsp,%rbp
   2f2bb:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   2f2bf:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   2f2c3:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   2f2ca:	00 00 
   2f2cc:	48 29 c4             	sub    %rax,%rsp
   2f2cf:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   2f2d6:	48 f7 d0             	not    %rax
   2f2d9:	48 21 c4             	and    %rax,%rsp
   2f2dc:	48 89 e1             	mov    %rsp,%rcx
   2f2df:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   2f2e6:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   2f2ed:	00 
   2f2ee:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   2f2f3:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   2f2f8:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   2f2fd:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   2f302:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   2f307:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   2f30c:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   2f311:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   2f316:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   2f31d:	00 
   2f31e:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   2f325:	00 00 
   2f327:	48 89 c1             	mov    %rax,%rcx
   2f32a:	48 c1 e9 02          	shr    $0x2,%rcx
   2f32e:	48 31 c0             	xor    %rax,%rax
   2f331:	fc                   	cld    
   2f332:	f3 ab                	rep stos %eax,%es:(%rdi)
   2f334:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   2f33b:	00 
   2f33c:	48 89 3c 24          	mov    %rdi,(%rsp)
   2f340:	e8 9e fd ff ff       	call   2f0e3 <save_xregs>
   2f345:	48 8d 3d b4 32 00 00 	lea    0x32b4(%rip),%rdi        # 32600 <SYNTHETIC_STATE>
   2f34c:	48 89 3c 24          	mov    %rdi,(%rsp)
   2f350:	e8 5e fd ff ff       	call   2f0b3 <restore_xregs>
   2f355:	0f ae e8             	lfence 
   2f358:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   2f35d:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2f362:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   2f369:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f36e:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   2f373:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   2f37a:	00 00 
   2f37c:	48 89 c3             	mov    %rax,%rbx
   2f37f:	48 89 e7             	mov    %rsp,%rdi
   2f382:	e8 b0 fb fd ff       	call   ef37 <update_ocall_lastsp>
   2f387:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   2f38c:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2f391:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   2f395:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   2f39c:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   2f3a3:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   2f3a7:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   2f3ae:	48 31 c9             	xor    %rcx,%rcx
   2f3b1:	48 31 d2             	xor    %rdx,%rdx
   2f3b4:	4d 31 c0             	xor    %r8,%r8
   2f3b7:	4d 31 c9             	xor    %r9,%r9
   2f3ba:	4d 31 d2             	xor    %r10,%r10
   2f3bd:	4d 31 db             	xor    %r11,%r11
   2f3c0:	4d 31 e4             	xor    %r12,%r12
   2f3c3:	4d 31 ed             	xor    %r13,%r13
   2f3c6:	4d 31 f6             	xor    %r14,%r14
   2f3c9:	4d 31 ff             	xor    %r15,%r15
   2f3cc:	48 01 d2             	add    %rdx,%rdx
   2f3cf:	fc                   	cld    
   2f3d0:	0f 01 d7             	enclu  

000000000002f3d3 <__morestack>:
   2f3d3:	f3 0f 1e fa          	endbr64 
   2f3d7:	55                   	push   %rbp
   2f3d8:	48 89 e5             	mov    %rsp,%rbp
   2f3db:	48 83 ec 20          	sub    $0x20,%rsp
   2f3df:	e8 cf fe ff ff       	call   2f2b3 <do_ocall>
   2f3e4:	c9                   	leave  
   2f3e5:	c3                   	ret    

000000000002f3e6 <asm_oret>:
   2f3e6:	f3 0f 1e fa          	endbr64 
   2f3ea:	48 89 e3             	mov    %rsp,%rbx
   2f3ed:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f3f2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f3f7:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   2f3fb:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   2f402:	00 
   2f403:	e8 ab fc ff ff       	call   2f0b3 <restore_xregs>
   2f408:	0f ae e8             	lfence 
   2f40b:	48 31 c0             	xor    %rax,%rax
   2f40e:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2f413:	48 29 f9             	sub    %rdi,%rcx
   2f416:	48 83 e9 08          	sub    $0x8,%rcx
   2f41a:	48 c1 e9 02          	shr    $0x2,%rcx
   2f41e:	fc                   	cld    
   2f41f:	f3 ab                	rep stos %eax,%es:(%rdi)
   2f421:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2f425:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   2f42a:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   2f42f:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   2f434:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2f439:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   2f43e:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   2f443:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2f448:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   2f44d:	48 89 ec             	mov    %rbp,%rsp
   2f450:	5d                   	pop    %rbp
   2f451:	c3                   	ret    
   2f452:	0f 0b                	ud2    

000000000002f454 <do_egetkey>:
   2f454:	f3 0f 1e fa          	endbr64 
   2f458:	53                   	push   %rbx
   2f459:	51                   	push   %rcx
   2f45a:	52                   	push   %rdx
   2f45b:	48 89 fb             	mov    %rdi,%rbx
   2f45e:	48 89 f1             	mov    %rsi,%rcx
   2f461:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   2f468:	0f 01 d7             	enclu  
   2f46b:	74 03                	je     2f470 <do_egetkey+0x1c>
   2f46d:	48 31 c0             	xor    %rax,%rax
   2f470:	5a                   	pop    %rdx
   2f471:	59                   	pop    %rcx
   2f472:	5b                   	pop    %rbx
   2f473:	c3                   	ret    

000000000002f474 <do_ereport>:
   2f474:	f3 0f 1e fa          	endbr64 
   2f478:	53                   	push   %rbx
   2f479:	51                   	push   %rcx
   2f47a:	52                   	push   %rdx
   2f47b:	48 89 fb             	mov    %rdi,%rbx
   2f47e:	48 89 f1             	mov    %rsi,%rcx
   2f481:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   2f488:	f8                   	clc    

000000000002f489 <Lereport_inst>:
   2f489:	0f 01 d7             	enclu  
   2f48c:	0f 92 c0             	setb   %al
   2f48f:	5a                   	pop    %rdx
   2f490:	59                   	pop    %rcx
   2f491:	5b                   	pop    %rbx
   2f492:	c3                   	ret    

000000000002f493 <do_everifyreport2>:
   2f493:	f3 0f 1e fa          	endbr64 
   2f497:	53                   	push   %rbx
   2f498:	51                   	push   %rcx
   2f499:	52                   	push   %rdx
   2f49a:	48 89 fb             	mov    %rdi,%rbx
   2f49d:	48 89 f1             	mov    %rsi,%rcx
   2f4a0:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

000000000002f4a7 <Leverifyreport2_inst>:
   2f4a7:	0f 01 d7             	enclu  
   2f4aa:	74 03                	je     2f4af <Leverifyreport2_inst+0x8>
   2f4ac:	48 31 c0             	xor    %rax,%rax
   2f4af:	5a                   	pop    %rdx
   2f4b0:	59                   	pop    %rcx
   2f4b1:	5b                   	pop    %rbx
   2f4b2:	c3                   	ret    

000000000002f4b3 <do_eaccept>:
   2f4b3:	f3 0f 1e fa          	endbr64 
   2f4b7:	53                   	push   %rbx
   2f4b8:	51                   	push   %rcx
   2f4b9:	52                   	push   %rdx
   2f4ba:	48 89 fb             	mov    %rdi,%rbx
   2f4bd:	48 89 f1             	mov    %rsi,%rcx
   2f4c0:	b8 05 00 00 00       	mov    $0x5,%eax
   2f4c5:	0f 01 d7             	enclu  
   2f4c8:	83 f8 00             	cmp    $0x0,%eax
   2f4cb:	75 5e                	jne    2f52b <abort>
   2f4cd:	5a                   	pop    %rdx
   2f4ce:	59                   	pop    %rcx
   2f4cf:	5b                   	pop    %rbx
   2f4d0:	c3                   	ret    

000000000002f4d1 <do_eacceptcopy>:
   2f4d1:	f3 0f 1e fa          	endbr64 
   2f4d5:	53                   	push   %rbx
   2f4d6:	51                   	push   %rcx
   2f4d7:	52                   	push   %rdx
   2f4d8:	48 89 fb             	mov    %rdi,%rbx
   2f4db:	48 89 f1             	mov    %rsi,%rcx
   2f4de:	b8 07 00 00 00       	mov    $0x7,%eax
   2f4e3:	0f 01 d7             	enclu  
   2f4e6:	83 f8 00             	cmp    $0x0,%eax
   2f4e9:	75 40                	jne    2f52b <abort>
   2f4eb:	5a                   	pop    %rdx
   2f4ec:	59                   	pop    %rcx
   2f4ed:	5b                   	pop    %rbx
   2f4ee:	c3                   	ret    

000000000002f4ef <do_emodpe>:
   2f4ef:	f3 0f 1e fa          	endbr64 
   2f4f3:	53                   	push   %rbx
   2f4f4:	51                   	push   %rcx
   2f4f5:	52                   	push   %rdx
   2f4f6:	48 89 fb             	mov    %rdi,%rbx
   2f4f9:	48 89 f1             	mov    %rsi,%rcx
   2f4fc:	b8 06 00 00 00       	mov    $0x6,%eax
   2f501:	0f 01 d7             	enclu  
   2f504:	5a                   	pop    %rdx
   2f505:	59                   	pop    %rcx
   2f506:	5b                   	pop    %rbx
   2f507:	c3                   	ret    

000000000002f508 <do_rdrand>:
   2f508:	f3 0f 1e fa          	endbr64 
   2f50c:	b9 0a 00 00 00       	mov    $0xa,%ecx
   2f511:	0f c7 f0             	rdrand %eax
   2f514:	72 08                	jb     2f51e <do_rdrand+0x16>
   2f516:	ff c9                	dec    %ecx
   2f518:	75 f7                	jne    2f511 <do_rdrand+0x9>
   2f51a:	48 31 c0             	xor    %rax,%rax
   2f51d:	c3                   	ret    
   2f51e:	48 89 f9             	mov    %rdi,%rcx
   2f521:	89 01                	mov    %eax,(%rcx)
   2f523:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   2f52a:	c3                   	ret    

000000000002f52b <abort>:
   2f52b:	f3 0f 1e fa          	endbr64 
   2f52f:	48 8d 05 ca aa 02 00 	lea    0x2aaca(%rip),%rax        # 5a000 <g_enclave_state>
   2f536:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   2f53c:	0f 0b                	ud2    

000000000002f53e <continue_execution>:
   2f53e:	f3 0f 1e fa          	endbr64 
   2f542:	48 89 f9             	mov    %rdi,%rcx
   2f545:	48 8b 01             	mov    (%rcx),%rax
   2f548:	50                   	push   %rax
   2f549:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2f54d:	50                   	push   %rax
   2f54e:	48 8b 41 20          	mov    0x20(%rcx),%rax
   2f552:	48 2d 88 00 00 00    	sub    $0x88,%rax
   2f558:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   2f55c:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   2f560:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   2f564:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   2f568:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   2f56c:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   2f570:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   2f574:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   2f578:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   2f57c:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   2f580:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   2f584:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   2f588:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   2f58c:	ff b1 80 00 00 00    	push   0x80(%rcx)
   2f592:	9d                   	popf   
   2f593:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   2f59a:	48 89 08             	mov    %rcx,(%rax)
   2f59d:	59                   	pop    %rcx
   2f59e:	5c                   	pop    %rsp
   2f59f:	48 94                	xchg   %rax,%rsp
   2f5a1:	c2 80 00             	ret    $0x80
